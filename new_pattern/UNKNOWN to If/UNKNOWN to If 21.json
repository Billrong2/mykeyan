{"UNKNOWN to If":[{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameterValues(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (types != null) { for (int i = 0; i < (types.length); i++) { degree = \"\"; university = \"\"; if ((i < (universities.length)) || (i < (degrees.length))) { type = types[i]; degree = degrees[i]; university = universities[i]; }else { errorFlag = true; java.lang.String degreeError = \"Fill all the fields for all degrees! <br>\"; request.setAttribute(\"degreeError\", degreeError); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1786/buggy-version/NetBeansProject.src.java.Controllers.CandidatesController.java", "BodyUseAPI": [], "Fixed commit": "5462b54c55b21bf9fa09ef1294fe7d305b0b77b7", "Url": "https://api.github.com/repos/elaelaa/DAW-Proyecto-JAVA", "Date": "2015-10-25T14:55:31Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameterValues(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (previousJobs != null) { for (int i = 0; i < (previousJobs.length); i++) { company = \"\"; duration = \"\"; if ((i < (previousCompanies.length)) && (i < (jobDurations.length))) { job = previousJobs[i]; company = previousCompanies[i]; duration = jobDurations[i]; }else { errorFlag = true; java.lang.String jobError = \"Fill all the fields for all jobs! <br>\"; request.setAttribute(\"jobError\", jobError); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1786/buggy-version/NetBeansProject.src.java.Controllers.CandidatesController.java", "BodyUseAPI": [], "Fixed commit": "5462b54c55b21bf9fa09ef1294fe7d305b0b77b7", "Url": "https://api.github.com/repos/elaelaa/DAW-Proyecto-JAVA", "Date": "2015-10-25T14:55:31Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((obj == null) || ((obj.getClass()) != (uk.co.jamesmcguigan.rockpaperscissors.models.Gesture.class))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2683/buggy-version/rock-paper-scissors.src.main.java.uk.co.jamesmcguigan.rockpaperscissors.models.Gesture.java", "BodyUseAPI": [], "Fixed commit": "e378ab0347db14f64e48913e06c7a5df99202770", "Url": "https://api.github.com/repos/modernmaster/katas", "Date": "2016-06-01T20:46:22Z"},
{"Line": "=>2275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((result == (TransactionInput.ConnectionResult.ALREADY_SPENT)) && (isWatching())) { result = TransactionInput.ConnectionResult.SUCCESS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7503/buggy-version/core.src.main.java.org.bitcoinj.wallet.Wallet.java", "BodyUseAPI": [], "Fixed commit": "76bf23452dddb521ef2815b1055b5dbd45df2f64", "Url": "https://api.github.com/repos/uniquid/bitcoinj", "Date": "2017-09-14T10:54:17Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ch.jolau.countdowntoalarm.TimeFormatUtils.getMinutesOfHour(timeDiff)) == 60) return res.getString(R.string.in_one_time, ch.jolau.countdowntoalarm.TimeFormatUtils.getHourString(res, timeDiff, shortVersion)); else { return res.getString(R.string.in_time, ch.jolau.countdowntoalarm.TimeFormatUtils.getHourString(res, timeDiff, shortVersion), ch.jolau.countdowntoalarm.TimeFormatUtils.getMinuteString(res, timeDiff, shortVersion)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7021/buggy-version/app.src.main.java.ch.jolau.countdowntoalarm.TimeFormatUtils.java", "BodyUseAPI": ["ch.jolau.countdowntoalarm.TimeFormatUtils.getHourString(android.content.res.Resources,long,boolean)", "android.content.res.Resources.getString(R.string.in_time,java.lang.String,java.lang.String)", "android.content.res.Resources.getString(R.string.in_one_time,java.lang.String)", "ch.jolau.countdowntoalarm.TimeFormatUtils.getMinuteString(android.content.res.Resources,long,boolean)", "ch.jolau.countdowntoalarm.TimeFormatUtils.getHourString(android.content.res.Resources,long,boolean)"], "Fixed commit": "2193c0bba97b45204276154e52f326222161dc3e", "Url": "https://api.github.com/repos/jolau/CountdownToAlarm", "Date": "2016-03-06T18:02:34Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((openOrderIds == null) || (openOrderIds.isEmpty())) { log.info(\"no pending nas orders found for the logged in user\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4058/buggy-version/src.main.java.de.cismet.cids.custom.nas.NasStartupHook.java", "BodyUseAPI": [], "Fixed commit": "58cef5bb6b93186be06ac200b4109ebfea111a08", "Url": "https://api.github.com/repos/cismet/cids-custom-wuppertal", "Date": "2013-04-26T11:30:37Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (annOpt.isSelected()) { if ((annList.getSelectedIndex()) == 0) { return HeatmapTextLabelsHeader.LabelSource.ID; }else { return HeatmapTextLabelsHeader.LabelSource.PATTERN; } }else if (patOpt.isSelected()) { return HeatmapTextLabelsHeader.LabelSource.PATTERN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2418/buggy-version/org.gitools.ui.app.src.main.java.org.gitools.ui.app.wizard.common.PatternSourcePage.java", "BodyUseAPI": [], "Fixed commit": "41abc211125b019ca6261e5832b0353639e1556f", "Url": "https://api.github.com/repos/gitools/gitools", "Date": "2014-03-01T17:17:50Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (executionCourseId == null) { executionCourseId = request.getParameter(\"executionCourseID\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5221/buggy-version/src.main.java.net.sourceforge.fenixedu.presentationTier.Action.publico.ViewCourseInquiryPublicResults.java", "BodyUseAPI": [], "Fixed commit": "2d9276276943d0503ec668f0cc484ac04f395860", "Url": "https://api.github.com/repos/jcarvalho/fenix", "Date": "2014-06-02T10:27:56Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (targetPackageName == null) { targetPackageName = definitionClassNode().packageName(); if (targetPackageName == null) { targetPackageName = current.packageName(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1485/buggy-version/src.main.java.st.gravel.support.jvm.ClassDescriptionMirror.java", "BodyUseAPI": [], "Fixed commit": "d1495885f98e57cfbe849724c893c706b379334a", "Url": "https://api.github.com/repos/gravel-st/gravel", "Date": "2014-01-07T14:30:29Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.api.codegen.metacode.InitCodeNode.getFieldConfig()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (methodContext.getFeatureConfig().useResourceNameFormatOption(fieldConfig)) { if (fieldConfig.requiresAnyParamTransformation()) { expectedTransformFunction = namer.getToStringMethod(); actualTransformFunction = namer.getToStringMethod(); }else if (fieldConfig.requiresParamTransformation()) { expectedTransformFunction = namer.getResourceOneofCreateMethod(methodContext.getTypeTable(), fieldConfig); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6818/buggy-version/src.main.java.com.google.api.codegen.transformer.InitCodeTransformer.java", "BodyUseAPI": ["com.google.api.codegen.transformer.GapicMethodContext.getTypeTable()", "com.google.api.codegen.config.FieldConfig.requiresAnyParamTransformation()", "com.google.api.codegen.transformer.SurfaceNamer.getResourceOneofCreateMethod(methodContext.getTypeTable(),com.google.api.codegen.config.FieldConfig)", "com.google.api.codegen.config.FieldConfig.requiresParamTransformation()"], "Fixed commit": "4fc0dcef4e829b63161ba0e1f8301fffd26553a8", "Url": "https://api.github.com/repos/vam-google/gapic-generator", "Date": "2017-07-26T01:46:19Z"},
{"Line": "=>811", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(fieldConfig.requiresAnyParamTransformation())) { transformParamFunctionName = namer.getResourceOneofCreateMethod(typeTable, fieldConfig); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6818/buggy-version/src.main.java.com.google.api.codegen.transformer.StaticLangApiMethodTransformer.java", "BodyUseAPI": ["com.google.api.codegen.transformer.SurfaceNamer.getResourceOneofCreateMethod(com.google.api.codegen.transformer.ModelTypeTable,com.google.api.codegen.config.FieldConfig)"], "Fixed commit": "4fc0dcef4e829b63161ba0e1f8301fffd26553a8", "Url": "https://api.github.com/repos/vam-google/gapic-generator", "Date": "2017-07-26T01:46:19Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((me.NerdsWBNerds.TheWalls.TheWalls.getWaiting()) != null) getConfig().set(\"WAITING\", me.NerdsWBNerds.TheWalls.TheWalls.toString(me.NerdsWBNerds.TheWalls.TheWalls.getWaiting()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2176/buggy-version/TheWalls.src.me.NerdsWBNerds.TheWalls.TheWalls.java", "BodyUseAPI": [], "Fixed commit": "acc15566986cffe118cf96bc79666fe53809b955", "Url": "https://api.github.com/repos/NerdsWBNerds/TheWalls", "Date": "2012-08-04T02:36:28Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((me.NerdsWBNerds.TheWalls.TheWalls.backupCenter) != null) getConfig().set(\"BACKUP\", me.NerdsWBNerds.TheWalls.TheWalls.toString(me.NerdsWBNerds.TheWalls.TheWalls.backupCenter.getLocation()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2176/buggy-version/TheWalls.src.me.NerdsWBNerds.TheWalls.TheWalls.java", "BodyUseAPI": [], "Fixed commit": "acc15566986cffe118cf96bc79666fe53809b955", "Url": "https://api.github.com/repos/NerdsWBNerds/TheWalls", "Date": "2012-08-04T02:36:28Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<java.util.Map.Entry<java.lang.String, java.lang.String>>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((pair.getValue()) != null) formBuilder.append(\"=\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/9140/buggy-version/core.src.main.java.org.jclouds.http.utils.ModifyRequest.java", "BodyUseAPI": [], "Fixed commit": "7f1a543fb6b42ae50ad779b5645f68bf90f96039", "Url": "https://api.github.com/repos/jclouds/jclouds", "Date": "2011-07-08T09:05:19Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (player != winner) { prize += getChipsFromPlayer(player, winner.getBet()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8852/buggy-version/src.com.nedogeek.holdem.dealer.EndGameManager.java", "BodyUseAPI": ["com.nedogeek.holdem.gamingStuff.Player.getBet()", "com.nedogeek.holdem.dealer.EndGameManager.getChipsFromPlayer(com.nedogeek.holdem.gamingStuff.Player,winner.getBet())"], "Fixed commit": "3accfd855106a22cbd2afa68950dae89104c646b", "Url": "https://api.github.com/repos/Demishev/HoldemDojo", "Date": "2013-02-28T22:43:03Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.FilePath.list(java.io.FileFilter)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (specs != null) { rakeSpecs.addAll(specs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1362/buggy-version/src.main.java.hudson.plugins.rake.RvmUtil.java", "BodyUseAPI": ["java.util.Collection<hudson.FilePath>.addAll(hudson.FilePath)"], "Fixed commit": "712753156dfc0c4190d1bb3a004adfddaf338181", "Url": "https://api.github.com/repos/jessebs/rake-plugin", "Date": "2015-01-15T14:18:13Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (slow) { current_heading = a_gyro_heading(); }else if (((gamepad1.left_stick_y) == 0) && ((gamepad1.right_stick_y) == 0)) { current_heading = a_gyro_heading(); }else if ((java.lang.Math.abs(((gamepad1.left_stick_y) - (gamepad1.right_stick_y)))) < 0.1) { adjspeed = java.lang.Math.sin((((java.lang.Math.PI) / 180) * ((a_gyro_heading()) - (current_heading)))); }else { current_heading = a_gyro_heading(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7691/buggy-version/FtcRobotController.src.main.java.com.qualcomm.ftcrobotcontroller.opmodes.PushBotManual.java", "BodyUseAPI": [], "Fixed commit": "602e52c436d9ad503ca3381aa9d45a6bdf43abc4", "Url": "https://api.github.com/repos/KnightsOfTechFTC/RESQ_new", "Date": "2016-01-30T21:39:34Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.devaction.sharedledgersimulator.client.TransactionWithFeeConstructor.contruct(net.devaction.sharedledgersimulator.transaction.Transaction,java.util.Map<java.util.List<java.lang.Byte>, java.lang.Long>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (txWithFee == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3116/buggy-version/src.main.java.net.devaction.sharedledgersimulator.client.NewTxProvider.java", "BodyUseAPI": [], "Fixed commit": "604f6f1912d9a473fa105d6c83b8298dac4a075b", "Url": "https://api.github.com/repos/VictorGil/shared-ledger-simulator", "Date": "2017-12-08T00:02:24Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.slipcor.pvparena.managers.Arenas.getArenaByPlayer(org.bukkit.entity.Player)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((arena.fightInProgress) && (!(arena.cfg.getBoolean(\"join.inbattle\")))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2311/buggy-version/src.net.slipcor.pvparena.listeners.PlayerListener.java", "BodyUseAPI": [], "Fixed commit": "59b586a24ccb256a740e2d3f89b1e98ebd2e61ec", "Url": "https://api.github.com/repos/slipcor/pvparena", "Date": "2012-03-15T01:40:39Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(obj.has(\"error\"))) { disconnectAllGroupUsers(group); disableGroupTracks(group, group.groupTracks); disableGroupTracks(group, java.util.Collections.singleton(((group.name) + \" points.gpx\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3334/buggy-version/OsmAnd.src.net.osmand.plus.osmo.OsMoGroups.java", "BodyUseAPI": [], "Fixed commit": "68785b04a5a70569b7ea96a408378d045583c785", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2016-03-12T13:27:16Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.query(java.lang.String,java.lang.String[],java.lang.String,<nulltype>,<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(cursor.isAfterLast())) { player = cursorToPlayer(cursor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3443/buggy-version/Android.SpaceMerchant.src.edu.gatech.cs2340.group29.spacemerchant.util.PlayerDataSource.java", "BodyUseAPI": ["edu.gatech.cs2340.group29.spacemerchant.util.PlayerDataSource.cursorToPlayer(android.database.Cursor)"], "Fixed commit": "4743527f90997c8b55f00e9f9e9eb3a0304ecb9e", "Url": "https://api.github.com/repos/cs2340-team-29/space-merchant", "Date": "2012-10-11T15:28:39Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Method.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (methodName.equals(\"hashCode\")) { return java.lang.System.identityHashCode(proxy); }else if (\"toString\".equals(methodName)) { return toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/67/buggy-version/vfs.src.main.java.org.jboss.spring.vfs.VFSResourcePatternResolvingHelper.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "8c62ef11f3bfd50c73710dd7e082456c4c973c07", "Url": "https://api.github.com/repos/dlmiles/snowdrop", "Date": "2013-02-06T16:42:48Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((event != null) && (event instanceof com.me.silencedut.nbaplus.event.NewsDetileEvent)) { if (event.getEventResult().equals(Constant.Result.FAIL)) { return; } mWebView.loadDataWithBaseURL(null, ((com.me.silencedut.nbaplus.event.NewsDetileEvent) (event)).getContent(), \"text/html\", \"UTF-8\", null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1398/buggy-version/app.src.main.java.com.me.silencedut.nbaplus.ui.activity.NewsDetileActivity.java", "BodyUseAPI": ["com.me.silencedut.nbaplus.event.Event.getEventResult()", "event.getEventResult().equals(Constant.Result.FAIL)"], "Fixed commit": "248642f1d4e61d4f3683775bd42899ace54a096a", "Url": "https://api.github.com/repos/SilenceDut/NBAPlus", "Date": "2015-12-09T13:55:34Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstTrappedThrower == null) firstTrappedThrower = u;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7779/buggy-version/src.soot.toolkits.exceptions.TrapTightener.java", "BodyUseAPI": [], "Fixed commit": "135b29f4806f57aa1eeeac2447c4dc679ea23bc9", "Url": "https://api.github.com/repos/Sable/soot", "Date": "2017-07-18T16:57:20Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.baidu.fis.util.MapCache.getNode(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (pkgNode.containsKey(\"deps\")) { deps = pkgNode.getJSONArray(\"deps\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/543/buggy-version/src.main.java.com.baidu.fis.util.Resource.java", "BodyUseAPI": ["com.alibaba.fastjson.JSONObject.getJSONArray(java.lang.String)"], "Fixed commit": "50657b8214a884bb2e9b47672d0fad4c2449569a", "Url": "https://api.github.com/repos/fex-team/fis-velocity-tools", "Date": "2015-06-25T07:11:49Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.samza.system.OutgoingMessageEnvelope.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((indexRequestKey.getId()) != null) { indexRequest.id(indexRequestKey.getId().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1601/buggy-version/samza-elasticsearch.src.main.java.com.quantiply.samza.elasticsearch.AvroKeyIndexRequestFactory.java", "BodyUseAPI": ["indexRequestKey.getId().toString()", "com.quantiply.rico.elasticsearch.IndexRequestKey.getId()", "org.elasticsearch.action.index.IndexRequest.id(indexRequestKey.getId().toString())"], "Fixed commit": "a7336f909e492a7799a665a229282c043838e1f9", "Url": "https://api.github.com/repos/quantiply/rico", "Date": "2015-08-18T06:45:11Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tempTimeInSecond) != 0) { animatorSet.removeAllListeners(); binding.pauseButton.setImageResource(R.mipmap.ic_pause); tempTimeInSecond = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6294/buggy-version/app.src.main.java.kzt.com.simplemeditationtimer.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "7fc20b3ecc7ad8df8fd0e786d61372dd4df7a387", "Url": "https://api.github.com/repos/kseito/SimpleMeditationTimer", "Date": "2016-11-10T01:34:19Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (game.getState().getStack().isEmpty()) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6582/buggy-version/Mage.src.main.java.mage.abilities.common.CycleAllTriggeredAbility.java", "BodyUseAPI": [], "Fixed commit": "930b27226bc74f2d04f773802bdd776675cd526f", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2016-02-18T14:42:31Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_isMainActivity()) { _mainActivity().updateControls(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5254/buggy-version/BusesSpb.src.main.java.ru.slavabulgakov.busesspb.controller.Controller.java", "BodyUseAPI": [], "Fixed commit": "7c5992e84caa201298f8e98115b3a7003994f63e", "Url": "https://api.github.com/repos/slavabulgakov/BusesSpb", "Date": "2014-03-21T09:35:28Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rule.getCategory().isDefaultOff()) { enabled = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1157/buggy-version/languagetool-gui-commons.src.main.java.org.languagetool.gui.ConfigurationDialog.java", "BodyUseAPI": [], "Fixed commit": "70792d3e8d9c6746da271286e6358f29859673e6", "Url": "https://api.github.com/repos/languagetool-org/languagetool", "Date": "2016-06-18T13:07:45Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index <= 0) { index = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1091/buggy-version/MMELK.app.src.main.java.com.example.kelly.mmelk.data.AxisFormatter.java", "BodyUseAPI": [], "Fixed commit": "58c6e69d16400016fd1b0ab305b677ee92a3d8bb", "Url": "https://api.github.com/repos/maheshgaya/TherapyApp", "Date": "2016-12-15T07:33:59Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((root) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5874/buggy-version/src.lab3.SplayTreeSet.java", "BodyUseAPI": [], "Fixed commit": "b68a17896c0c113b9106d5e0f00a7504282c56fd", "Url": "https://api.github.com/repos/AlexanderSopov/datastruktur", "Date": "2016-03-05T13:05:28Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (amount < 1) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/975/buggy-version/projecttemplate.src.main.java.edu.chl.ChalmersRisk.controller.ChalmersRisk.java", "BodyUseAPI": [], "Fixed commit": "cdef7b886cb1e2c11f2269924b8a7c4f09967baa", "Url": "https://api.github.com/repos/rutanjr/group25", "Date": "2015-04-30T08:37:01Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((nPath.length()) > 1) && (!(nPath.startsWith(\"/\")))) { nPath = \"/\" + nPath; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8361/buggy-version/src.main.java.org.docear.syncdaemon.fileindex.FileMetaData.java", "BodyUseAPI": [], "Fixed commit": "aa09b36e65edb1850f6a2fffa23eba0f7f473db5", "Url": "https://api.github.com/repos/Docear/Sync", "Date": "2013-06-25T13:56:35Z"},
{"Line": "=>2120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shouldAddBackCommandToMenu()) { f.addCommand(backCommand, f.getCommandCount()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3037/buggy-version/CodenameOne.src.com.codename1.ui.util.UIBuilder.java", "BodyUseAPI": [], "Fixed commit": "9cffb754c6e04a8bd9538bc186401920e1d92df2", "Url": "https://api.github.com/repos/skyHALud/codenameone", "Date": "2014-01-06T18:22:51Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["parser.Parser.indexOf(ParserConstants.KW_END,java.util.ArrayList<java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (endIndex != (-1)) { for (int i = endIndex; i < (arr.size());) { arr.remove(i); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/9000/buggy-version/src.parser.EventTaskParser.java", "BodyUseAPI": [], "Fixed commit": "7bae9f50956e0c6767d4ab732509e44633c06100", "Url": "https://api.github.com/repos/idawatibustan/PlanIt", "Date": "2015-10-22T03:51:29Z"},
{"Line": "=>683", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((chunks.size()) > 0) { avgChunksHeight = chunksHeightsSum / (chunks.size()); }else { avgChunksHeight = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/9203/buggy-version/app.src.main.java.com.kamron.pogoiv.pokeflycomponents.ocrhelper.OcrHelper.java", "BodyUseAPI": ["java.util.ArrayList<android.graphics.Rect>.size()"], "Fixed commit": "14a54e0db561f50b45d56825b5dd7701f57ba5fa", "Url": "https://api.github.com/repos/thearaks/GoIV", "Date": "2017-09-25T22:24:47Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dasein.cloud.openstack.nova.os.AuthenticationContext.getNetworkUrl()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((resource != null) && ((!(endpoint.endsWith(\"/\"))) && (!(resource.startsWith(\"/\"))))) { endpoint = endpoint + \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5215/buggy-version/src.main.java.org.dasein.cloud.openstack.nova.os.NovaMethod.java", "BodyUseAPI": [], "Fixed commit": "537d16370395a418a28abf62542c9ed39b7d39a6", "Url": "https://api.github.com/repos/daniellemayne/dasein-cloud-openstack", "Date": "2013-09-26T11:42:21Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rc.getLocation().equals(targetLocation)) rc.disintegrate();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2282/buggy-version/battlecode-scaffold-master.src.team375.Scout.java", "BodyUseAPI": ["team375.Scout.disintegrate()"], "Fixed commit": "cfede2060bba3708150f297acf56d55d1e016ed1", "Url": "https://api.github.com/repos/Diana0604/holapepsicola", "Date": "2016-01-26T14:49:28Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((growthAttempts == 0) | (canSustainPlant(world.getBlockState(pos), world, pos, null, ((net.minecraftforge.common.IPlantable) (blockAbove))))) { nextPlantBlock.updateTick(world, pos.up(height), world.getBlockState(pos.up(height)), rand); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3323/buggy-version/src.main.java.com.robrit.snad.common.block.BlockSnad.java", "BodyUseAPI": ["net.minecraft.world.World.getBlockState(pos.up(height))", "net.minecraft.util.math.BlockPos.up(int)", "net.minecraft.util.math.BlockPos.up(int)", "net.minecraft.block.Block.updateTick(net.minecraft.world.World,pos.up(height),world.getBlockState(pos.up(height)),java.util.Random)"], "Fixed commit": "28da1b61c91be19dd71e90b46fe1c21ed3f438be", "Url": "https://api.github.com/repos/TheRoBrit/Snad", "Date": "2016-09-20T19:08:03Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((minNumberOfTargets) == 0) && (targets.isEmpty())) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1252/buggy-version/Mage.src.mage.target.TargetImpl.java", "BodyUseAPI": [], "Fixed commit": "361ac7f60289f9d47a66037365d4e0a7e185ac2c", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2013-04-13T23:17:17Z"},
{"Line": "=>663", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(qNamedMetadata.containsKey(ContentModel.PROP_NAME))) { qNamedMetadata.put(ContentModel.PROP_NAME, item.getTargetName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/22/buggy-version/amp.src.main.java.org.alfresco.extension.bulkimport.impl.BatchImporterImpl.java", "BodyUseAPI": ["java.util.Map<org.alfresco.service.namespace.QName, java.io.Serializable>.put(ContentModel.PROP_NAME,item.getTargetName())"], "Fixed commit": "2a910b59945893cacc0588a627314b36ea00bd32", "Url": "https://api.github.com/repos/drivera73/alfresco-bulk-import", "Date": "2017-01-19T04:53:33Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MotionEvent.getY()", "android.view.MotionEvent.getX()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (o.hit(x, y)) o.release();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4625/buggy-version/src.com.amazon.dinorama.GameView.java", "BodyUseAPI": ["com.amazon.dinorama.TouchButton.release()"], "Fixed commit": "abaa4864fa511e530c0cee1a49baec7b47fff34a", "Url": "https://api.github.com/repos/khoaha/dinorama", "Date": "2013-06-29T11:20:21Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.esa.s2tbx.dataio.s2.l3.L3GranuleMetadataPSD13.getAttributeValues(L3PSD13Constants.PATH_GRANULE_METADATA_PVI_FILENAME)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (attributeValuesPVI != null) { for (java.lang.String pviName : attributeValuesPVI) { try { int aux = java.lang.Integer.parseInt(pviName.substring(((pviName.lastIndexOf(\"_\")) + 1))); if (aux > maxIndex) maxIndex = aux; } catch (java.lang.Exception e) { } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/142/buggy-version/s2tbx-s2msi-reader.src.main.java.org.esa.s2tbx.dataio.s2.l3.L3GranuleMetadataPSD13.java", "BodyUseAPI": [], "Fixed commit": "f225a8aad9fa3ca46f5b37e6afda8f9ac1fc290f", "Url": "https://api.github.com/repos/senbox-org/s2tbx", "Date": "2017-07-28T16:36:15Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmrs.module.shrclient.model.Patient.getPersonAddress()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (personAddress != null) { emrPatient.removeAddress(personAddress); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8474/buggy-version/shrclient-omod.src.main.java.org.openmrs.module.shrclient.service.impl.EMRPatientServiceImpl.java", "BodyUseAPI": ["org.openmrs.module.shrclient.model.Patient.removeAddress(org.openmrs.module.shrclient.service.impl.PersonAddress)"], "Fixed commit": "e5ebc546e31576994f788a2e5254787b5ae0a140", "Url": "https://api.github.com/repos/SharedHealth/openmrs-module-bdshrclient", "Date": "2016-05-05T12:16:46Z"},
{"Line": "=>606", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.ceil(((move.getDistanceXY()) / (Database.ALMAXMOVELENGTH.getsaved())))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (parts == 0) { newmoves.add(move); }else { for (int part = 0; part < parts; part++) { double[] s = new double[3]; double[] e = new double[3]; for (int i = 0; i < 3; i++) { double d = ((move.e[i]) - (move.s[i])) / parts; s[i] = (move.s[i]) + (d * part); e[i] = (move.s[i]) + (d * (part + 1)); } newmoves.add(new cnc.gcode.controller.CNCCommand.Move(s, e, move.t)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7138/buggy-version/src.cnc.gcode.controller.CNCCommand.java", "BodyUseAPI": [], "Fixed commit": "4302283a0d4ed8642eb04b5f355cddfa2cbbfa07", "Url": "https://api.github.com/repos/pknoe3lh/cncgcodecontroller", "Date": "2013-10-13T15:36:31Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.laytonsmith.PureUtilities.Vector3D.length()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (length == 0.0) { return com.laytonsmith.PureUtilities.Vector3D.ZERO; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7216/buggy-version/src.main.java.com.laytonsmith.PureUtilities.Vector3D.java", "BodyUseAPI": [], "Fixed commit": "70b622d674694d15467327840dd5316c17ad61aa", "Url": "https://api.github.com/repos/Ecconia/CommandHelper", "Date": "2017-11-12T15:14:55Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.util.List<com.example.student.gefriertruhapp.Model.FridgeItem>>.get(item.getBarCode())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((list.size()) > 0) && ((item.getQuantity()) == 0)) { itemsById.remove(item.getId()); item.getStore().getItems().remove(item); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2221/buggy-version/app.src.main.java.com.example.student.gefriertruhapp.Model.DataBaseSingleton.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Integer, com.example.student.gefriertruhapp.Model.FridgeItem>.remove(item.getId())", "item.getStore().getItems().remove(com.example.student.gefriertruhapp.Model.FridgeItem)", "com.example.student.gefriertruhapp.Model.FridgeItem.getId()", "item.getStore().getItems()", "com.example.student.gefriertruhapp.Model.FridgeItem.getStore()"], "Fixed commit": "a54f891086a882caa615da8d55007a7c3e7c754c", "Url": "https://api.github.com/repos/DerGary/FridgeApp", "Date": "2017-10-21T10:42:22Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((utils.GlobalState.operatingSystem) == (GlobalState.OS.Linux)) { org.openqa.selenium.chrome.ChromeOptions chromeOptions = new org.openqa.selenium.chrome.ChromeOptions(); chromeOptions.setBinary(\"/usr/bin/google-chrome-stable\"); return new org.openqa.selenium.chrome.ChromeDriver(chromeOptions); }else { return new org.openqa.selenium.chrome.ChromeDriver(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7276/buggy-version/VideoSummary.app.utils.Summarizer.TranscriptFactory.java", "BodyUseAPI": [], "Fixed commit": "b1d71c9c31ba1d3221e83df019aee913f49dca93", "Url": "https://api.github.com/repos/PiedPiper1337/TLDW", "Date": "2016-05-21T03:28:40Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((prodn1s.size()) == 0) { conditions.add(\"1 = 2\"); }else { conditions.add((\"d.prodn1 in ?\" + (i++))); wordsToLookFor.add(prodn1s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6523/buggy-version/core-bc.composites.svc.src.main.java.se.vgregion.arbetsplatskoder.repository.extension.DataRepositoryImpl.java", "BodyUseAPI": ["java.util.List.add(java.util.Set<se.vgregion.arbetsplatskoder.domain.jpa.migrated.Prodn1>)"], "Fixed commit": "0ab116df3b83037ceaf4ff0c079cf86cce69f08f", "Url": "https://api.github.com/repos/Vastra-Gotalandsregionen/oppna-program-arbetsplatskoder-data", "Date": "2017-10-31T14:16:05Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<android.bluetooth.BluetoothDevice>.indexOf(android.bluetooth.BluetoothDevice)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (position == (-1)) { notifyItemInserted(((mDevices.size()) - 1)); }else { notifyItemChanged(position); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1794/buggy-version/app.src.main.java.no.nordicsemi.android.nrftoolbox.proximity.DeviceAdapter.java", "BodyUseAPI": ["no.nordicsemi.android.nrftoolbox.proximity.DeviceAdapter.notifyItemChanged(int)"], "Fixed commit": "cf5eb61019a7645a1b535002e08026124fc7f86a", "Url": "https://api.github.com/repos/mandigab/Android-nRF-Toolbox", "Date": "2017-03-13T14:49:26Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((variableFigure) != null) { variableFigure.setBackgroundColor(org.talend.designer.core.ui.editor.connections.ConnectionTraceFigure.BACKGROUND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5171/buggy-version/main.plugins.org.talend.designer.core.src.main.java.org.talend.designer.core.ui.editor.connections.ConnectionTraceFigure.java", "BodyUseAPI": [], "Fixed commit": "71216548314d7179e419298db44486b077e48c99", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2014-06-26T21:23:12Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((variableFigure) != null) { variableFigure.setOpaque(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5171/buggy-version/main.plugins.org.talend.designer.core.src.main.java.org.talend.designer.core.ui.editor.connections.ConnectionTraceFigure.java", "BodyUseAPI": [], "Fixed commit": "71216548314d7179e419298db44486b077e48c99", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2014-06-26T21:23:12Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((variableFigure) != null) { variableFigure.setBackgroundColor(ColorConstants.white); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5171/buggy-version/main.plugins.org.talend.designer.core.src.main.java.org.talend.designer.core.ui.editor.connections.ConnectionTraceFigure.java", "BodyUseAPI": [], "Fixed commit": "71216548314d7179e419298db44486b077e48c99", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2014-06-26T21:23:12Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((variableFigure) != null) { variableFigure.setBorder(new org.talend.designer.core.ui.editor.connections.LineBorder(org.eclipse.draw2d.ColorConstants.darkGray, ((org.eclipse.swt.SWT.LEFT) | (org.eclipse.swt.SWT.RIGHT)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5171/buggy-version/main.plugins.org.talend.designer.core.src.main.java.org.talend.designer.core.ui.editor.connections.ConnectionTraceFigure.java", "BodyUseAPI": [], "Fixed commit": "71216548314d7179e419298db44486b077e48c99", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2014-06-26T21:23:12Z"},
{"Line": "=>547", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((model) == null) { main.showInfoDialog(main.getShell(), org.deidentifier.arx.gui.resources.Resources.getMessage(\"Controller.42\"), org.deidentifier.arx.gui.resources.Resources.getMessage(\"Controller.43\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6028/buggy-version/src.gui.org.deidentifier.arx.gui.Controller.java", "BodyUseAPI": [], "Fixed commit": "8b1e753f0ceb6bd6dfb2b97d3bbdd853369e7e52", "Url": "https://api.github.com/repos/johnpatcher/arx", "Date": "2014-04-14T14:46:06Z"},
{"Line": "=>507", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sid) > 0) return sid;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5195/buggy-version/src.kr.pe.okjsp.Article.java", "BodyUseAPI": [], "Fixed commit": "4a176aae177be7862b333be01518e412c6a2ee68", "Url": "https://api.github.com/repos/okjsp/okjsp-site", "Date": "2012-06-25T01:57:54Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (input != null) value = input.toString().trim();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7546/buggy-version/Android.src.org.droidplanner.android.dialogs.EditInputDialog.java", "BodyUseAPI": ["java.lang.CharSequence.toString()", "java.lang.String.trim()"], "Fixed commit": "8f38c988cba3d8cd42e28902509d46f9b759d731", "Url": "https://api.github.com/repos/RuanJG/Tower", "Date": "2015-06-22T22:25:59Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (input != null) value = input.toString().trim();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7546/buggy-version/Android.src.org.droidplanner.android.dialogs.SupportEditInputDialog.java", "BodyUseAPI": ["java.lang.CharSequence.toString()", "java.lang.String.trim()"], "Fixed commit": "8f38c988cba3d8cd42e28902509d46f9b759d731", "Url": "https://api.github.com/repos/RuanJG/Tower", "Date": "2015-06-22T22:25:59Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((line[3].length()) == 0) { startnummer = -1; }else { startnummer = java.lang.Integer.parseInt(line[3]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4775/buggy-version/src.main.java.nl.phanos.liteliveresultsclient.classes.ResultFileEntry.java", "BodyUseAPI": [], "Fixed commit": "5365510685af94e4c35c565cf91ad899d238940e", "Url": "https://api.github.com/repos/slaap123/liteliveresultsclient", "Date": "2017-12-17T15:51:16Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (refAmount.isEmpty()) refAmount = \"0\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7312/buggy-version/android-app.app.src.main.java.com.present.market.AppAct.java", "BodyUseAPI": [], "Fixed commit": "5fca0947f937db2643e4ac1f0c775bcd85d74c87", "Url": "https://api.github.com/repos/BMariya/CurrencyMarket", "Date": "2017-01-10T08:37:42Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (space >= 0) { org.pircbotx.User user = ircBot.get().getUserChannelDao().getUser(target.substring(0, space)); tellSubject = new javabot.operations.TellSubject(user, target.substring((space + 1)).trim()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4158/buggy-version/core.src.main.java.javabot.operations.GetFactoidOperation.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.substring(int,int)", "ircBot.get().getUserChannelDao().getUser(java.lang.String)", "java.lang.String.trim()"], "Fixed commit": "7bfddc675dfc50cc2951fcd73eea52b1c27b3c28", "Url": "https://api.github.com/repos/evanchooly/javabot", "Date": "2014-11-01T12:00:41Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.System.getProperty(\"os.name\").contains(\"indow\")) { path = path.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3238/buggy-version/src.main.java.com.torrenttunes.launcher.DataSources.java", "BodyUseAPI": [], "Fixed commit": "9fb476cd64d2cc2b7d0f63da302e945649928e4f", "Url": "https://api.github.com/repos/dessalines/torrenttunes-launcher", "Date": "2015-09-07T18:55:35Z"},
{"Line": "=>4911", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sorttimestamp) url.append(\"&cmsort=timestamp\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/9149/buggy-version/src.org.wikipedia.Wiki.java", "BodyUseAPI": [], "Fixed commit": "568cc8c3dd6d3cdfdb7dc52d26d7a3197ac97abe", "Url": "https://api.github.com/repos/MER-C/wiki-java", "Date": "2016-04-01T12:13:27Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((offset < 0) || (count < 0)) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6079/buggy-version/src.org.exist.dom.persistent.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "63e5d17ac152d912d985240a0b20695ffb5ac63a", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:14:34Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((offset < 0) || (count < 0)) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6079/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "63e5d17ac152d912d985240a0b20695ffb5ac63a", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:14:34Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (millis < (com.example.ringcon.utils.DateUtils.MINUTE)) text.append(\"00\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4928/buggy-version/src.com.example.ringcon.utils.DateUtils.java", "BodyUseAPI": [], "Fixed commit": "8270a8fc3cb426e3232039c64b5b24fa42633695", "Url": "https://api.github.com/repos/Priorko/RingCon", "Date": "2013-11-20T10:42:15Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((addressL3.length()) < 1) { addressL3 = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6306/buggy-version/modules.self-care.web-selfcare.src.main.java.hsenid.web.LoginController.java", "BodyUseAPI": [], "Fixed commit": "3f27e5040a6a25d5df967783a1e23f36fe5d5bcb", "Url": "https://api.github.com/repos/hsenidlanka/devspace_app", "Date": "2016-10-06T12:13:31Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s == \"\") return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1778/buggy-version/src.main.java.leetcode.Utils.java", "BodyUseAPI": [], "Fixed commit": "65bc6db026dcd27e6903108fbe4da0bf7f9f2455", "Url": "https://api.github.com/repos/taku-k/coding-interview", "Date": "2017-03-08T11:16:30Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fadeOut) != null) { fadeOut.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/761/buggy-version/src.main.java.net.nikr.warframe.gui.popup.NotificationPopup.java", "BodyUseAPI": [], "Fixed commit": "0b7502289904b31753ca60bfbffa6140995f3a32", "Url": "https://api.github.com/repos/GoldenGnu/jwarframe", "Date": "2015-05-15T13:18:09Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fadeIn) != null) { fadeIn.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/761/buggy-version/src.main.java.net.nikr.warframe.gui.popup.NotificationPopup.java", "BodyUseAPI": [], "Fixed commit": "0b7502289904b31753ca60bfbffa6140995f3a32", "Url": "https://api.github.com/repos/GoldenGnu/jwarframe", "Date": "2015-05-15T13:18:09Z"},
{"Line": "=>568", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ProviderType.HOME_AND_COMMUNITY_BASED_SERVICES_WAIVERED_SERVICES.value().equals(type)) { settings.addSetting(\"askUMPI\", true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/382/buggy-version/cms-business-process.src.main.java.gov.medicaid.services.impl.PresentationServiceBean.java", "BodyUseAPI": [], "Fixed commit": "f1f09785cc0623f4bc7a7da1223d42a208073b29", "Url": "https://api.github.com/repos/SolutionGuidance/psm", "Date": "2016-09-11T23:42:05Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((service.getAvailability()) != null) pw.print(uk.ac.starlink.votable.VOSerializer.formatText(service.getAvailability()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8693/buggy-version/src.tap.resource.Availability.java", "BodyUseAPI": ["java.io.PrintWriter.print(uk.ac.starlink.votable.VOSerializer.formatText(service.getAvailability()))", "uk.ac.starlink.votable.VOSerializer.formatText(service.getAvailability())", "tap.ServiceConnection.getAvailability()"], "Fixed commit": "d8e311ad2a748b3d5e12c8ccc995715f7361e681", "Url": "https://api.github.com/repos/gmantele/taplib", "Date": "2014-09-17T18:11:20Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isEnabled())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4958/buggy-version/src.main.java.org.jtrfp.trcl.beh.MatchPosition.java", "BodyUseAPI": [], "Fixed commit": "17feac27f5c90296801f7d18d137f67eace1c2d2", "Url": "https://api.github.com/repos/jtrfp/terminal-recall", "Date": "2016-01-04T21:26:15Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (c == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1513/buggy-version/centauricloud-daemon-connector.src.main.java.org.centauri.cloud.daemon.Daemon.java", "BodyUseAPI": [], "Fixed commit": "9081259caef7a398078543177af4840643a7ccf6", "Url": "https://api.github.com/repos/CentauriCloud/CentauriCloud", "Date": "2017-06-16T21:30:48Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (packet instanceof org.centauri.cloud.common.network.packets.PacketKillServer) { java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1513/buggy-version/centauricloud-daemon-connector.src.main.java.org.centauri.cloud.daemon.netty.NetworkHandler.java", "BodyUseAPI": [], "Fixed commit": "9081259caef7a398078543177af4840643a7ccf6", "Url": "https://api.github.com/repos/CentauriCloud/CentauriCloud", "Date": "2017-06-16T21:30:48Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.uniqueTgtVars.containsKey(thisHdr)) { java.lang.String thisVal = thisRow.get(hdrIndex); if ((sbMain.length()) > 0) { sbMain.append(\"|\"); } sbMain.append(thisVal); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3861/buggy-version/src.com.ibm.ets.ita.ce.store.query.CeGeneratorConclusion.java", "BodyUseAPI": [], "Fixed commit": "6329af41acc02df4657ef87f43e69da5cefe0abd", "Url": "https://api.github.com/repos/ce-store/ce-store", "Date": "2016-05-03T19:44:16Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (key.equals(passKey)) { }else { preference.setSummary(sharedPreferences.getString(key, \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4319/buggy-version/app.src.main.java.com.ncatz.babyguard.preferences.Settings_Fragment.java", "BodyUseAPI": ["android.preference.Preference.setSummary(sharedPreferences.getString(key, \"\"))", "android.content.SharedPreferences.getString(java.lang.String,java.lang.String)"], "Fixed commit": "7997dc2269ef05318263242b729aa45c7fa1f862", "Url": "https://api.github.com/repos/yeray697/BabyGuard", "Date": "2017-06-21T20:39:01Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mapChoice == 1) { Model.Obstacles.Obstacle.add(View.Gui.squares[2][2]); Model.Obstacles.Obstacle.add(View.Gui.squares[2][3]); Model.Obstacles.Obstacle.add(View.Gui.squares[4][4]); for (int i = 0; i < 8; i++) { for (int j = 0; j < 16; j++) { if (Model.Obstacles.Obstacle.contains(View.Gui.squares[i][j])) { View.Gui.squares[i][j].setBackground(java.awt.Color.GRAY); } } } }else if (mapChoice == 2) { }else if (mapChoice == 3) { }else if (mapChoice == 4) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7923/buggy-version/src.Model.Obstacles.java", "BodyUseAPI": [], "Fixed commit": "bb4dd023cf0afc6e910cb336c0bb66300af7f5fa", "Url": "https://api.github.com/repos/deathnom/divus", "Date": "2017-02-27T16:36:50Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"true\".equals(util.getCoreRequestInfo().getServletRequest().getHeader(\"rise-is-ajax\"))) { response.setHeader(\"rise-redirect-target\", util.httpService.url(path)); }else response.sendRedirect(util.getHttpService().redirectUrl(path));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2123/buggy-version/framework.src.main.java.com.github.ruediste.rise.core.web.RedirectRenderResult.java", "BodyUseAPI": ["javax.servlet.http.HttpServletResponse.sendRedirect(util.getHttpService().redirectUrl(path))", "util.httpService.url(com.github.ruediste.rise.core.web.PathInfo)", "util.getHttpService().redirectUrl(com.github.ruediste.rise.core.web.PathInfo)", "javax.servlet.http.HttpServletResponse.setHeader(java.lang.String,util.httpService.url(path))", "com.github.ruediste.rise.core.web.HttpRenderResultUtil.getHttpService()"], "Fixed commit": "a92c2c5a7f2890b638d044b36eef9e280bd06aca", "Url": "https://api.github.com/repos/ruediste/rise", "Date": "2015-07-27T18:04:04Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (localName.equals(\"GetStatus\")) { req = new org.n52.wps.server.request.GetStatusRequestV200(doc); }else if (localName.equals(\"GetResult\")) { req = new org.n52.wps.server.request.GetResultRequestV200(doc); }else if (!(localName.equals(\"Execute\"))) { throw new org.n52.wps.server.ExceptionReport((\"The requested Operation not supported or not applicable to the specification: \" + nodeName), org.n52.wps.server.ExceptionReport.OPERATION_NOT_SUPPORTED, localName); }else { throw new org.n52.wps.server.ExceptionReport((\"specified namespace is not supported: \" + nodeURI), org.n52.wps.server.ExceptionReport.INVALID_PARAMETER_VALUE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7680/buggy-version/52n-wps-server.src.main.java.org.n52.wps.server.handler.RequestHandler.java", "BodyUseAPI": [], "Fixed commit": "14d0ceb0287ba2999552d855c32c8ba7e30d1d8e", "Url": "https://api.github.com/repos/nuest/WPS", "Date": "2015-10-12T10:29:33Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fileEntry.getName().split(\"_\").length) == 8) allDataFile.add(new com.a.eye.skywalking.storage.data.file.DataFile(fileEntry));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/415/buggy-version/skywalking-storage-center.skywalking-storage.src.main.java.com.a.eye.skywalking.storage.data.file.DataFileLoader.java", "BodyUseAPI": ["java.util.List<com.a.eye.skywalking.storage.data.file.DataFile>.add(com.a.eye.skywalking.storage.data.file.DataFile)"], "Fixed commit": "e750b540ccd6a0583b39fd91b5874aedae55f191", "Url": "https://api.github.com/repos/apache/incubator-skywalking", "Date": "2016-11-24T10:29:07Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (runMethod != null) { runMethod.releaseConnection(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7101/buggy-version/src.main.java.eionet.gdem.qa.engines.FMEQueryEngine.java", "BodyUseAPI": ["org.apache.commons.httpclient.methods.PostMethod.releaseConnection()"], "Fixed commit": "3bc1063e48d7f69cea2d702a51969afd8f39ca7a", "Url": "https://api.github.com/repos/eea/eionet.xmlconv", "Date": "2016-03-07T14:37:12Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mOriginDropMenuHeight) == 0) { int tempHeight = mLlFilterDropMenu.getMeasuredHeight(); if (tempHeight != 0) mOriginDropMenuHeight = tempHeight; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8772/buggy-version/app.src.main.java.com.tcl.lishanwang.oneshop.activity.CommodityListActivity.java", "BodyUseAPI": [], "Fixed commit": "32a752f1b8e51c6c8b03855dc5dc00478bc94e08", "Url": "https://api.github.com/repos/WPolly/OneShop", "Date": "2016-11-28T02:55:52Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((event.getAction()) == (org.bukkit.event.inventory.InventoryAction.HOTBAR_MOVE_AND_READD)) || ((event.getAction()) == (org.bukkit.event.inventory.InventoryAction.HOTBAR_SWAP))) { event.setCancelled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4766/buggy-version/src.main.java.co.airki.inventorylock.events.InventoryLockEvent.java", "BodyUseAPI": ["org.bukkit.event.inventory.InventoryClickEvent.setCancelled(boolean)"], "Fixed commit": "91a2c5cc677fafb78cfa7ba70024ea4c4114001d", "Url": "https://api.github.com/repos/InterfaceKey/InventoryLock", "Date": "2017-02-11T22:35:03Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (anchorView.isNotFoundState()) { anchorView = getAnchorVisibleTopLeftView(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2971/buggy-version/SpanLayoutManager.src.main.java.com.beloo.widget.spanlayoutmanager.SpanLayoutManager.java", "BodyUseAPI": [], "Fixed commit": "41b1266d53864caa4aa90924c7cc18579638fc74", "Url": "https://api.github.com/repos/BelooS/ChipsLayoutManager", "Date": "2016-08-04T08:27:37Z"},
{"Line": "=>1076", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.this$.getName().indexOf('.')) != (-1)) { this_package = this.this$.getName().substring(0, this.this$.getName().lastIndexOf('.')); target_package = name.substring(0, name.lastIndexOf('.')); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5354/buggy-version/src.main.java.org.spongepowered.despector.ast.io.emitter.SourceEmitter.java", "BodyUseAPI": ["this.this$.getName().substring(int,this.this$.getName().lastIndexOf('.'))", "org.spongepowered.despector.ast.type.TypeEntry.getName()", "org.spongepowered.despector.ast.type.TypeEntry.getName()", "this.this$.getName().lastIndexOf(char)"], "Fixed commit": "ec68cb46543f02b6e916e3ebcbc8be9bc460f721", "Url": "https://api.github.com/repos/Despector/Despector", "Date": "2016-11-13T13:10:03Z"},
{"Line": "=>586", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (user == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3123/buggy-version/swf.src.main.java.com.venky.swf.path.Path.java", "BodyUseAPI": [], "Fixed commit": "ec6a4b8fe8edcc8ab3b130b652ab82dc4adbee35", "Url": "https://api.github.com/repos/venkatramanm/swf-all", "Date": "2017-11-16T08:08:08Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["models.Destination.find.where().eq(\"url\", url).findUnique()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (existingDestination != null) { errors.add(new play.data.validation.ValidationError(\"url\", \"Destination URL already exists.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4870/buggy-version/app.models.Destination.java", "BodyUseAPI": [], "Fixed commit": "034d68d93c572fdf2c1fb002f2c4185a7bb27913", "Url": "https://api.github.com/repos/surevine/gateway-management", "Date": "2014-10-28T15:38:46Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((x < 0) || (y < 0)) || (x > (gameState.getMap().getSizeX()))) || (y > (gameState.getMap().getSizeY()))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4905/buggy-version/PTS3-Game.core.src.com.game.pts3.ScreenGame.java", "BodyUseAPI": [], "Fixed commit": "8fd6c1aa371c73d41f46db76399214bf60c5e61c", "Url": "https://api.github.com/repos/Red-mar/PTS3Game", "Date": "2017-10-04T21:01:42Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Compressable.calcIndex(entry.getKey())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((hashtable[index]) == null) { hashtable[index] = entry; }else { insert(index, entry.getKey(), entry.getVal()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4314/buggy-version/Assignment2.HashTableOpen.java", "BodyUseAPI": ["HashTableOpen.insert(int,entry.getKey(),entry.getVal())"], "Fixed commit": "eea953c58eb8688a3125eed5116147177a613115", "Url": "https://api.github.com/repos/cjidboon94/Datastructuren1415", "Date": "2015-02-16T20:16:28Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.fat246.cybercar.utils.PreferencesUtility.getInstance(context).isSettingsMusicAuto()) { if (!(com.fat246.cybercar.tools.MusicPlayer.isPlaying())) { com.fat246.cybercar.tools.MusicPlayer.playOrPause(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8627/buggy-version/AndroidProject.cybercar.app.src.main.java.com.fat246.cybercar.tools.MusicPlayer.java", "BodyUseAPI": [], "Fixed commit": "f716b5357182e16e752e1cd58a79667e88c08229", "Url": "https://api.github.com/repos/brainysoon/cyberCar", "Date": "2016-06-13T15:43:29Z"},
{"Line": "=>600", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.fat246.cybercar.utils.PreferencesUtility.getInstance(this).isSettingsMusicContinue())) { if (com.fat246.cybercar.tools.MusicPlayer.isPlaying()) { com.fat246.cybercar.tools.MusicPlayer.playOrPause(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8627/buggy-version/AndroidProject.cybercar.app.src.main.java.com.fat246.cybercar.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "f716b5357182e16e752e1cd58a79667e88c08229", "Url": "https://api.github.com/repos/brainysoon/cyberCar", "Date": "2016-06-13T15:43:29Z"},
{"Line": "=>871", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useUValue) { s = (\"<html>U-Value of \" + partInfo) + \"<hr><font size=2>Examples:<br>US 1.30 (single glass), US 0.81 (double glass), US 0.53 (triple glass)</html>\"; }else { s = (\"<html>Insulation Value of \" + partInfo) + \"<hr><font size=2>Examples:<br>US R13 (cellulose, 3.5\\\"), US R16 (mineral wool, 5.25\\\"), US R31 (fiberglass, 10\\\")</html>\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4062/buggy-version/src.main.java.org.concord.energy3d.gui.PopupMenuFactory.java", "BodyUseAPI": [], "Fixed commit": "e58e6975de062a7317bbb1a013ab9904ecfe6e06", "Url": "https://api.github.com/repos/concord-consortium/energy3d", "Date": "2016-02-15T20:45:33Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((org.bukkit.inventory.CraftingInventory) (event.getInventory())).getType()) != (org.bukkit.event.inventory.InventoryType.CRAFTING)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/884/buggy-version/src.main.java.de.tobiyas.racesandclasses.listeners.equipement.Listener_PlayerEquipItem.java", "BodyUseAPI": [], "Fixed commit": "9683845c135d4041ebad29a047c26866ecaa3400", "Url": "https://api.github.com/repos/tobiyas/RacesAndClasses", "Date": "2014-10-30T00:43:46Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((org.bukkit.inventory.CraftingInventory) (event.getInventory())).getType()) != (org.bukkit.event.inventory.InventoryType.CRAFTING)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/884/buggy-version/src.main.java.de.tobiyas.racesandclasses.listeners.equipement.Listener_PlayerEquipItem.java", "BodyUseAPI": [], "Fixed commit": "9683845c135d4041ebad29a047c26866ecaa3400", "Url": "https://api.github.com/repos/tobiyas/RacesAndClasses", "Date": "2014-10-30T00:43:46Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.block.BlockPlaceEvent.getItemInHand()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem.getByItem(item)) != null) && (!((me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem.getByItem(item)) instanceof me.mrCookieSlime.Slimefun.Objects.SlimefunItem.ExcludedBlock))) { me.mrCookieSlime.Slimefun.api.BlockStorage.store(e.getBlock(), item); if ((me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem.getByItem(item)) instanceof me.mrCookieSlime.Slimefun.Objects.SlimefunItem.EnhancedFurnace) EnhancedFurnace.furnaces.add(e.getBlock().getLocation()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2552/buggy-version/src.me.mrCookieSlime.Slimefun.Listeners.ToolListener.java", "BodyUseAPI": ["me.mrCookieSlime.Slimefun.api.BlockStorage.store(e.getBlock(),org.bukkit.inventory.ItemStack)", "me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem.getByItem(org.bukkit.inventory.ItemStack)"], "Fixed commit": "11d3c6e979b035a14da22310fc1bd270ba647deb", "Url": "https://api.github.com/repos/mrCookieSlime/Slimefun-3.0", "Date": "2014-12-27T20:52:09Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(file.exists())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/786/buggy-version/artemis-resource-finder.src.main.java.com.spinn3r.artemis.resource_finder.ClasspathResourceFinder.java", "BodyUseAPI": [], "Fixed commit": "266d9d2c3c195d6d72fdf08f122a5591acb2a72b", "Url": "https://api.github.com/repos/spinn3r/artemis-framework", "Date": "2015-12-31T20:31:34Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.kivSW.phonerecorder.BlueToothService.powerWakeLock.isHeld()) com.kivSW.phonerecorder.BlueToothService.powerWakeLock.release();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/81/buggy-version/PhoneRecorder.converseRecorder.src.main.java.com.kivSW.phonerecorder.BlueToothService.java", "BodyUseAPI": ["PowerManager.WakeLock.release()"], "Fixed commit": "9281c8efecae875fd0564640346932d479f22ca5", "Url": "https://api.github.com/repos/IvanKovalchuk/PhoneRecorder", "Date": "2016-03-11T10:13:40Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getView()) != null) { getView().showProgressView(false); if ((((response != null) && ((response.getContent()) != null)) && ((response.getContent().getLayout()) != null)) && ((response.getContent().getElements()) != null)) { cellGridContentDataList = calculateCellGridList(response); if (((cellGridContentDataList) != null) && ((cellGridContentDataList.size()) > 0)) { getView().setData(cellGridContentDataList); }else { showEmptyView(); } }else { showEmptyView(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5416/buggy-version/ocmsdk.src.main.java.com.gigigo.orchextra.core.controller.model.searcher.SearcherLayoutPresenter.java", "BodyUseAPI": [], "Fixed commit": "c6bc4d7fbef4a1155a4234689053877ba6355565", "Url": "https://api.github.com/repos/Orchextra/orchextra-content-android-sdk", "Date": "2017-07-14T09:06:27Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (timeToKill) { throw new java.lang.InterruptedException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5243/buggy-version/lab4.SpiderMonitor.java", "BodyUseAPI": [], "Fixed commit": "c90d1be2486ea2febbd0fe7dc64ef55a59421f45", "Url": "https://api.github.com/repos/ShanSenanayake/eda095labbar", "Date": "2015-04-13T07:56:37Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (timeToKill) { throw new java.lang.InterruptedException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5243/buggy-version/lab4.SpiderMonitor.java", "BodyUseAPI": [], "Fixed commit": "c90d1be2486ea2febbd0fe7dc64ef55a59421f45", "Url": "https://api.github.com/repos/ShanSenanayake/eda095labbar", "Date": "2015-04-13T07:56:37Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (timeToKill) { throw new java.lang.InterruptedException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5243/buggy-version/lab4.SpiderMonitor.java", "BodyUseAPI": [], "Fixed commit": "c90d1be2486ea2febbd0fe7dc64ef55a59421f45", "Url": "https://api.github.com/repos/ShanSenanayake/eda095labbar", "Date": "2015-04-13T07:56:37Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (verification > 9) verification = verification % 10;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5664/buggy-version/src.main.java.com.premiumminds.webapp.wicket.validators.PortugueseNIFValidator.java", "BodyUseAPI": [], "Fixed commit": "703dba2ed9493ea48d94b5a4cde8af39181c3da1", "Url": "https://api.github.com/repos/cdiniz/pm-wicket-utils", "Date": "2014-10-31T14:31:39Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((graph.get(source)) == null) { return joinPaths; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4307/buggy-version/ql.src.java.org.apache.hadoop.hive.ql.cube.metadata.SchemaGraph.java", "BodyUseAPI": [], "Fixed commit": "757193dad93f12cc0b4c8986a18d6a7a54d064ca", "Url": "https://api.github.com/repos/InMobi/hive", "Date": "2014-09-24T09:07:48Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((metricInfos[metricIndex].type) == (org.apache.kylin.storage.hbase.coprocessor.endpoint.EndpointAggregators.MetricType.Count)) { measureAggrs[metricIndex].aggregate(ONE); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5478/buggy-version/storage.src.main.java.org.apache.kylin.storage.hbase.coprocessor.endpoint.EndpointAggregators.java", "BodyUseAPI": ["measureAggrs[metricIndex].aggregate(org.apache.hadoop.io.LongWritable)"], "Fixed commit": "52bbf081bb07cbbd369ad1dbabb67703730bed6a", "Url": "https://api.github.com/repos/apache/kylin", "Date": "2015-02-12T05:02:57Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((metricInfos[metricIndex].type) == (org.apache.kylin.storage.hbase.coprocessor.endpoint.EndpointAggregators.MetricType.DimensionAsMetric)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5478/buggy-version/storage.src.main.java.org.apache.kylin.storage.hbase.coprocessor.endpoint.EndpointAggregators.java", "BodyUseAPI": [], "Fixed commit": "52bbf081bb07cbbd369ad1dbabb67703730bed6a", "Url": "https://api.github.com/repos/apache/kylin", "Date": "2015-02-12T05:02:57Z"},
{"Line": "=>570", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (withFallback) { setup(listener); }else { finishSetup(listener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8982/buggy-version/library.src.main.java.org.onepf.oms.OpenIabHelper.java", "BodyUseAPI": [], "Fixed commit": "d00160a23cdf93328e78177bd1459c948c3f7672", "Url": "https://api.github.com/repos/onepf/OpenIAB", "Date": "2014-12-08T19:08:11Z"},
{"Line": "=>1104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((u.status.isSynonym()) && (!(u.rank.higherThan(Rank.GENUS)))) && (p.rank.higherThan(Rank.FAMILY))) { java.lang.String message = java.lang.String.format(\"Ignoring %s synonym %s for %s %s\", u.rank, u.scientificName, p.rank, p.parsedName.fullName()); throw new org.gbif.checklistbank.nub.IgnoreSourceUsageException(message, u.scientificName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4401/buggy-version/checklistbank-cli.src.main.java.org.gbif.checklistbank.nub.NubBuilder.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,u.rank,u.scientificName,p.rank,p.parsedName.fullName())", "p.parsedName.fullName()"], "Fixed commit": "ed96229ed3d7b459ff81323977cc659521126794", "Url": "https://api.github.com/repos/gbif/checklistbank", "Date": "2016-08-10T09:44:39Z"},
{"Line": "=>459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((scene.getState()) != (com.wilson.tasker.model.Scene.STATE_DISABLED)) { de.greenrobot.event.EventBus.getDefault().post(new com.wilson.tasker.events.SceneChangedEvent(removedConditions, scene.getConditions())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8039/buggy-version/app.src.main.java.com.wilson.tasker.ui.SceneDetailFragment.java", "BodyUseAPI": ["com.wilson.tasker.model.Scene.getConditions()", "de.greenrobot.event.EventBus.getDefault().post(com.wilson.tasker.events.SceneChangedEvent)"], "Fixed commit": "17318fed538ef9e167f24053fa89643ecab35b6e", "Url": "https://api.github.com/repos/achieverForever/Tasker", "Date": "2015-04-25T08:44:05Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((scene.getState()) != (com.wilson.tasker.model.Scene.STATE_DISABLED)) { registerManager(context, scene.getConditions()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8039/buggy-version/app.src.main.java.com.wilson.tasker.manager.SceneManager.java", "BodyUseAPI": ["com.wilson.tasker.manager.SceneManager.registerManager(android.content.Context,scene.getConditions())", "com.wilson.tasker.model.Scene.getConditions()"], "Fixed commit": "17318fed538ef9e167f24053fa89643ecab35b6e", "Url": "https://api.github.com/repos/achieverForever/Tasker", "Date": "2015-04-25T08:44:05Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getSession().getAttribute(\"userid\")) != null) { dms.bean.User user = dms.controller.SessionHelper.getUser(request); userType = user.getType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7712/buggy-version/src.dms.controller.LoginController.java", "BodyUseAPI": ["dms.controller.SessionHelper.getUser(javax.servlet.http.HttpServletRequest)"], "Fixed commit": "a4c83e13e87421fc3b307771da91a99e857ef604", "Url": "https://api.github.com/repos/lwk618/dms", "Date": "2016-11-28T15:35:27Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(exists(name))) { variables.put(name, variables.size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4176/buggy-version/src.main.java.com.w_angler.calculator.backend.Context.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String,int)"], "Fixed commit": "dc0a51bded0f84fed8746598cc44623acb2f0573", "Url": "https://api.github.com/repos/W-angler/SimpleCalculator", "Date": "2017-04-17T09:51:07Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (column == null) { throw new java.lang.IllegalArgumentException((((\"Could not find column '\" + (columnNames[i])) + \"' in for entity: \") + (entityType.getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1020/buggy-version/integration.hibernate-base.src.main.java.com.blazebit.persistence.impl.hibernate.HibernateExtendedQuerySupport.java", "BodyUseAPI": [], "Fixed commit": "25d311a85dabecb4032d51bb34f1f023de61ff0f", "Url": "https://api.github.com/repos/Blazebit/blaze-persistence", "Date": "2016-12-19T14:47:19Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.hibernate.engine.spi.SessionFactoryImplementor.getClassMetadata(entityType.getJavaType())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (entityPersister instanceof org.hibernate.persister.entity.JoinedSubclassEntityPersister) { tables = new org.hibernate.mapping.Table[((org.hibernate.persister.entity.JoinedSubclassEntityPersister) (entityPersister)).getTableSpan()]; for (int i = 0; i < (tables.length); i++) { tables[i] = database.getTable(entityPersister.getSubclassTableName(i)); } }else { tables = new org.hibernate.mapping.Table[]{ database.getTable(entityPersister.getTableName()) }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1020/buggy-version/integration.hibernate-base.src.main.java.com.blazebit.persistence.impl.hibernate.HibernateExtendedQuerySupport.java", "BodyUseAPI": ["org.hibernate.persister.entity.AbstractEntityPersister.getSubclassTableName(int)", "org.hibernate.persister.entity.AbstractEntityPersister.getTableName()", "com.blazebit.persistence.impl.hibernate.Database.getTable(entityPersister.getSubclassTableName(i))", "com.blazebit.persistence.impl.hibernate.Database.getTable(entityPersister.getTableName())"], "Fixed commit": "25d311a85dabecb4032d51bb34f1f023de61ff0f", "Url": "https://api.github.com/repos/Blazebit/blaze-persistence", "Date": "2016-12-19T14:47:19Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mapping.containsKey(itemsetResult.getItems())) { isr.get(mapping.get(itemsetResult.getItems())).addSupport(itemsetResult.getSupport()); }else { mapping.put(itemsetResult.getItems(), isr.size()); isr.add(itemsetResult); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3459/buggy-version/src.main.java.macrobase.analysis.StreamingAnalyzer.java", "BodyUseAPI": ["isr.get(mapping.get(itemsetResult.getItems())).addSupport(itemsetResult.getSupport())", "java.util.Map<java.util.List<macrobase.ingest.result.ColumnValue>, java.lang.Integer>.put(itemsetResult.getItems(),isr.size())", "macrobase.analysis.summary.itemset.result.ItemsetResult.getItems()", "java.util.List<macrobase.analysis.summary.itemset.result.ItemsetResult>.get(mapping.get(itemsetResult.getItems()))", "java.util.Map<java.util.List<macrobase.ingest.result.ColumnValue>, java.lang.Integer>.get(itemsetResult.getItems())", "java.util.List<macrobase.analysis.summary.itemset.result.ItemsetResult>.add(macrobase.analysis.summary.itemset.result.ItemsetResult)", "macrobase.analysis.summary.itemset.result.ItemsetResult.getItems()", "macrobase.analysis.summary.itemset.result.ItemsetResult.getSupport()"], "Fixed commit": "772832fa4e04cac2c12e018047ac12b48cd5f2b3", "Url": "https://api.github.com/repos/stanford-futuredata/macrobase", "Date": "2016-02-16T07:33:25Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.impetus.client.cassandra.index.CassandraIndexHelper.isInvertedIndexingApplicable(com.impetus.kundera.metadata.model.EntityMetadata)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (useInvertedIndex && (!(getKunderaQuery().getFilterClauseQueue().isEmpty()))) { result = ((java.util.List) (((com.impetus.client.cassandra.query.CassandraEntityReader) (getReader())).readFromIndexTable(m, client, getKunderaQuery().getFilterClauseQueue()))); }else { java.util.Map<java.lang.Boolean, java.util.List<org.apache.cassandra.thrift.IndexClause>> ixClause = prepareIndexClause(m); boolean isRowKeyQuery = ixClause.keySet().iterator().next(); if (!isRowKeyQuery) { result = ((com.impetus.client.cassandra.CassandraClientBase) (client)).find(ixClause.get(isRowKeyQuery), m, false, null, maxResult, getColumnList(m, getKunderaQuery().getResult())); }else { result = ((com.impetus.client.cassandra.query.CassandraEntityReader) (getReader())).handleFindByRange(m, client, result, ixClause, isRowKeyQuery, getColumnList(m, getKunderaQuery().getResult())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3765/buggy-version/kundera-cassandra.src.main.java.com.impetus.client.cassandra.query.CassQuery.java", "BodyUseAPI": [], "Fixed commit": "a25422c99889eea2c51ecbd65fd629f485e7922b", "Url": "https://api.github.com/repos/impetus-opensource/Kundera", "Date": "2012-09-27T12:56:22Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["f13dlaproject.Point3.Point3.length()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((crystal3D().collides()) || (dist > (bounds))) { reset(); bounds = (crystal3D().getRadius()) + 5; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2224/buggy-version/src.f13dlaproject.Particle3D.java", "BodyUseAPI": [], "Fixed commit": "2dd0ba3ede5682991eb5d89e5c41b8d297027190", "Url": "https://api.github.com/repos/westernsystems/f13DLAProject", "Date": "2013-11-07T01:47:10Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(baseDir.exists())) if (!(baseDir.mkdir())) throw new java.lang.RuntimeException(\"Cannot create stt dir\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1417/buggy-version/src.main.java.org.stt.config.YamlConfigService.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "ce8aa637f7c109eeae192f3d33c67e48010e949c", "Url": "https://api.github.com/repos/Blizzard26/StandaloneClient", "Date": "2016-11-09T20:49:43Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(baseDir.exists())) if (!(baseDir.mkdir())) throw new java.lang.RuntimeException(\"Cannot create stt dir\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1417/buggy-version/src.main.java.org.stt.Configuration.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "ce8aa637f7c109eeae192f3d33c67e48010e949c", "Url": "https://api.github.com/repos/Blizzard26/StandaloneClient", "Date": "2016-11-09T20:49:43Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (copyToClipboard) { final java.lang.String text = com.projectsexception.myapplist.util.AppUtil.appInfoToText(this, appList, false); if ((android.os.Build.VERSION.SDK_INT) < (android.os.Build.VERSION_CODES.HONEYCOMB)) { android.text.ClipboardManager clipboard = ((android.text.ClipboardManager) (getSystemService(Context.CLIPBOARD_SERVICE))); clipboard.setText(text); }else { android.content.ClipboardManager clipboard = ((android.content.ClipboardManager) (getSystemService(Context.CLIPBOARD_SERVICE))); android.content.ClipData clip = android.content.ClipData.newPlainText(getString(R.string.app_name), text); clipboard.setPrimaryClip(clip); } de.keyboardsurfer.android.widget.crouton.Crouton.makeText(this, R.string.list_copied, Style.CONFIRM).show(); }else { shareAppList(null, appList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5644/buggy-version/application.src.main.java.com.projectsexception.myapplist.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "fa246cbd3e40a52daccb17a483d55cc0eebcb44f", "Url": "https://api.github.com/repos/projectsexception/MyAppList", "Date": "2013-07-01T20:08:49Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.projectsexception.myapplist.fragments.AppListFragment.getSelectedItems()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((appList == null) || (appList.isEmpty())) { de.keyboardsurfer.android.widget.crouton.Crouton.makeText(getSherlockActivity(), R.string.empty_list_error, Style.ALERT).show(); }else if (id == (R.id.menu_save)) { mCallBack.saveAppList(appList); }else if (id == (R.id.menu_share)) { mCallBack.shareAppList(appList, false); }else if (id == (R.id.menu_copy)) { mCallBack.shareAppList(appList, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5644/buggy-version/application.src.main.java.com.projectsexception.myapplist.fragments.AppListFragment.java", "BodyUseAPI": ["com.projectsexception.myapplist.fragments.AppListFragment.CallBack.saveAppList(java.util.ArrayList<com.projectsexception.myapplist.model.AppInfo>)", "com.projectsexception.myapplist.fragments.AppListFragment.CallBack.shareAppList(java.util.ArrayList<com.projectsexception.myapplist.model.AppInfo>,boolean)", "com.projectsexception.myapplist.fragments.AppListFragment.CallBack.shareAppList(java.util.ArrayList<com.projectsexception.myapplist.model.AppInfo>,boolean)"], "Fixed commit": "fa246cbd3e40a52daccb17a483d55cc0eebcb44f", "Url": "https://api.github.com/repos/projectsexception/MyAppList", "Date": "2013-07-01T20:08:49Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((fieldInfo.unwrapped) && (propertyValue instanceof java.util.Map)) && ((((java.util.Map) (propertyValue)).size()) == 0)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4203/buggy-version/src.main.java.com.alibaba.fastjson.serializer.JavaBeanSerializer.java", "BodyUseAPI": [], "Fixed commit": "1b0a03fd60f1f6de42ecea04439c5d3644d95bf5", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2017-05-05T07:09:33Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((fieldInfo.unwrapped) && (propertyValue instanceof java.util.Map)) && ((((java.util.Map) (propertyValue)).size()) == 0)) { commaFlag = false; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4203/buggy-version/src.main.java.com.alibaba.fastjson.serializer.JavaBeanSerializer.java", "BodyUseAPI": [], "Fixed commit": "1b0a03fd60f1f6de42ecea04439c5d3644d95bf5", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2017-05-05T07:09:33Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tradingValues.get(attributes.get(j)).isEmpty()) { inputData[j] = inputData[(j - 1)]; }else { inputData[j] = java.lang.Float.valueOf(tradingValues.get(attributes.get(j))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2551/buggy-version/src.main.java.org.investovator.ann.nngaming.AnalysisPredictionManager.java", "BodyUseAPI": ["java.util.HashMap<org.investovator.core.data.api.utils.TradingDataAttribute, java.lang.String>.get(attributes.get(j))", "java.util.ArrayList<org.investovator.core.data.api.utils.TradingDataAttribute>.get(int)", "java.lang.Float.valueOf(tradingValues.get(attributes.get(j)))"], "Fixed commit": "ddf0a24e5a68772ebea700f19cfe28ccefd57160", "Url": "https://api.github.com/repos/investovator/investovator-ann", "Date": "2013-11-28T11:09:48Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 23) { android.support.v4.app.ActivityCompat.requestPermissions(this, new java.lang.String[]{ Manifest.permission.ACCESS_FINE_LOCATION }, 1); android.support.v4.app.ActivityCompat.requestPermissions(this, new java.lang.String[]{ Manifest.permission.ACCESS_COARSE_LOCATION }, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6186/buggy-version/app.src.main.java.com.chris.tatusafety.maps.FindMeActivity.java", "BodyUseAPI": [], "Fixed commit": "754a09789618238b4532e0bb279344847f4f4f7d", "Url": "https://api.github.com/repos/bigzoo/tatusafety", "Date": "2017-08-12T17:46:42Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["demo.app.rssviewer.model.ItemRss.getUrl()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((url != null) && (url.startsWith(\"http\"))) com.squareup.picasso.Picasso.with(activity).load(url).placeholder(R.drawable.picasso_loading_animation).into(holder.imageView);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8562/buggy-version/app.src.main.java.demo.app.rssviewer.common.RssListAdapter.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(activity).load(java.lang.String)", "com.squareup.picasso.Picasso.with(activity).load(url).placeholder(R.drawable.picasso_loading_animation).into(android.widget.ImageView)", "com.squareup.picasso.Picasso.with(activity).load(url).placeholder(R.drawable.picasso_loading_animation)"], "Fixed commit": "d6a15f086502496b09542c09f0e1c956a4f90cf8", "Url": "https://api.github.com/repos/sergbas/RssViewer", "Date": "2016-05-07T09:41:37Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((e != null) && (e.hasAttribute(\"url\"))) image = e.getAttribute(\"url\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8562/buggy-version/app.src.main.java.demo.app.rssviewer.presenter.ListFragmentPresenterImpl.java", "BodyUseAPI": ["org.w3c.dom.Element.getAttribute(java.lang.String)"], "Fixed commit": "d6a15f086502496b09542c09f0e1c956a4f90cf8", "Url": "https://api.github.com/repos/sergbas/RssViewer", "Date": "2016-05-07T09:41:37Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRecordedRange) == null) { mRecordedRange = new org.wlf.filedownloader.file_download.http_downloader.Range(mOriginalTaskParamInfo.startPosInTotal, mOriginalTaskParamInfo.startPosInTotal); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2115/buggy-version/FileDownloader.src.main.java.org.wlf.filedownloader.file_download.RetryableDownloadTaskImpl.java", "BodyUseAPI": [], "Fixed commit": "08f90050dc810bbff0a20450163bd64b26b586ca", "Url": "https://api.github.com/repos/wlfcolin/file-downloader", "Date": "2016-01-11T08:19:14Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset > (cdata.length())) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1150/buggy-version/src.org.exist.dom.persistent.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "0daadcdfa02241e74d8bd4a3e622357d0f6008b1", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:13:41Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset < 0) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1150/buggy-version/src.org.exist.dom.persistent.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "0daadcdfa02241e74d8bd4a3e622357d0f6008b1", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:13:41Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((offset + count) > length) { return new java.lang.String(document.characters, (inDocOffset + offset), (length - offset)); }else { return new java.lang.String(document.characters, (inDocOffset + offset), length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1150/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "0daadcdfa02241e74d8bd4a3e622357d0f6008b1", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:13:41Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset > length) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1150/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "0daadcdfa02241e74d8bd4a3e622357d0f6008b1", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:13:41Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((com.hurryup.views.MasterLevel) (com.hurryup.game.hurryupGame.views.peek())).getTileById(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (p != null) java.lang.System.out.println((\"HEYO \" + (d.getId())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7505/buggy-version/core.src.com.hurryup.game.hurryupGame.java", "BodyUseAPI": [], "Fixed commit": "90a78d60dbf1c7ad71e58186d377ac60159c4af1", "Url": "https://api.github.com/repos/Frans-Lukas/HurryUpGame", "Date": "2016-09-28T19:31:20Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((com.hurryup.views.MasterLevel) (com.hurryup.game.hurryupGame.views.peek())).getTileById(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (d != null) java.lang.System.out.println((\"HEYO \" + (p.getId())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7505/buggy-version/core.src.com.hurryup.game.hurryupGame.java", "BodyUseAPI": [], "Fixed commit": "90a78d60dbf1c7ad71e58186d377ac60159c4af1", "Url": "https://api.github.com/repos/Frans-Lukas/HurryUpGame", "Date": "2016-09-28T19:31:20Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (checkpoint != null) { for (int i = 0; i < (nl.hs_hague.urbangame.RoomListActivity.alertedCheckpoints.size()); i++) { if (nl.hs_hague.urbangame.RoomListActivity.alertedCheckpoints.get(i).getName().equals(checkpoint.getName())) { return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5846/buggy-version/app.src.main.java.nl.hs_hague.urbangame.RoomListActivity.java", "BodyUseAPI": ["nl.hs_hague.urbangame.RoomListActivity.alertedCheckpoints.get(i).getName().equals(checkpoint.getName())", "nl.hs_hague.urbangame.model.Checkpoint.getName()"], "Fixed commit": "227d31ae86209e7472e9c1f2591d932b10b87d64", "Url": "https://api.github.com/repos/Vural-xx/UrbanGame", "Date": "2016-10-29T21:14:41Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (urlnr == 0) { btLeft.setEnabled(false); btRight.setEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2556/buggy-version/examples.org.yakindu.sct.examples.ui.src.org.yakindu.sct.examples.ui.wizards.ExamplesWizardPage.java", "BodyUseAPI": [], "Fixed commit": "8caff3aa68444ae82a20a46dc6d101061fe3b173", "Url": "https://api.github.com/repos/Yakindu/statecharts", "Date": "2016-06-07T14:04:52Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (depth == 5) { java.lang.System.out.println(\"\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4543/buggy-version/Node.java", "BodyUseAPI": [], "Fixed commit": "a6716fdb1b6222ad8a2d9749dc9dd8b845982825", "Url": "https://api.github.com/repos/Diewa/Othello_Game", "Date": "2017-01-22T18:39:03Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.CallableStatement.getDate(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == ts) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5843/buggy-version/java.howto.src.main.java.commons.mybatis.LocalDateTypeHandler.java", "BodyUseAPI": [], "Fixed commit": "d6eff8332b545f9b55e720ff674553c8a796afe0", "Url": "https://api.github.com/repos/zzyongx/c-gist", "Date": "2017-07-21T07:41:20Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.CallableStatement.getTimestamp(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == ts) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5843/buggy-version/java.howto.src.main.java.commons.mybatis.LocalDateTimeTypeHandler.java", "BodyUseAPI": [], "Fixed commit": "d6eff8332b545f9b55e720ff674553c8a796afe0", "Url": "https://api.github.com/repos/zzyongx/c-gist", "Date": "2017-07-21T07:41:20Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (err == (CalcTree.BUILD_ERROR.BERR_NONE)) { equation = getString(R.string.empty_equation); screen.setText(equation); error = false; }else { equation = \"\"; screen.setText(\"ERROR\"); error = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5451/buggy-version/calc.src.main.java.phero.calculator.BasicCalcFragment.java", "BodyUseAPI": [], "Fixed commit": "f094b92d65e44aea21d4ce1419f935a984948f05", "Url": "https://api.github.com/repos/ProgrammerHero/AndroidCalc", "Date": "2015-05-12T23:23:30Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ir.mbaas.sdk.models.NotificationButtons.fromJson(data.getString(AppConstants.PN_BUTTONS))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (buttons == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5628/buggy-version/sdk.src.main.java.ir.mbaas.sdk.logic.NotificationBuilder.java", "BodyUseAPI": [], "Fixed commit": "140b0f16ce0e6a570cc6de8367f377a9d1f6bc6c", "Url": "https://api.github.com/repos/irmbaas/PushNotification", "Date": "2016-07-02T14:26:34Z"},
{"Line": "=>569", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sourceforge.vrapper.platform.SelectionService.getSelection()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((selection.getRightBound().getModelOffset()) > (getModelContent().getTextLength())) { net.sourceforge.vrapper.utils.Position end = selection.getRightBound().setModelOffset(getModelContent().getTextLength()); selection = selection.selectMarks(this, selection.getLeftBound(), end); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1151/buggy-version/net.sourceforge.vrapper.core.src.net.sourceforge.vrapper.vim.DefaultEditorAdaptor.java", "BodyUseAPI": ["net.sourceforge.vrapper.vim.commands.Selection.getRightBound()", "selection.getRightBound().setModelOffset(getModelContent().getTextLength())", "net.sourceforge.vrapper.vim.commands.Selection.getLeftBound()", "net.sourceforge.vrapper.vim.commands.Selection.selectMarks(net.sourceforge.vrapper.vim.DefaultEditorAdaptor,selection.getLeftBound(),net.sourceforge.vrapper.utils.Position)"], "Fixed commit": "35d27fd8b3ec79bf1312d0a7c74324dacd0d3b21", "Url": "https://api.github.com/repos/vrapper/vrapper", "Date": "2014-02-22T19:50:49Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == string) { return string; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4506/buggy-version/src.main.java.io.github.biezhi.wechat.Utils.java", "BodyUseAPI": [], "Fixed commit": "071597f02f4350c0de4473951cdb254ee6d85e10", "Url": "https://api.github.com/repos/biezhi/wechat-api", "Date": "2017-07-09T15:52:03Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (extractItem.contains(\" https\")) { extractItem = extractItem.replaceFirst(\" ?https?\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4395/buggy-version/TweeMerchWeb.src.java.information_extraction.InformationExtraction.java", "BodyUseAPI": ["java.lang.String.replaceFirst(java.lang.String,java.lang.String)"], "Fixed commit": "d75ed9f5828a0cd2f814a5fb0bd9f3b748b6f10c", "Url": "https://api.github.com/repos/ahmadnaufal/twee-merch", "Date": "2016-11-26T08:51:47Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (bestIntent != null) { results.add(bestIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6114/buggy-version/src.main.java.uk.ac.susx.tag.dialoguer.dialogue.analysing.analysers.UnigramAnalyser.java", "BodyUseAPI": ["java.util.ArrayList<uk.ac.susx.tag.dialoguer.dialogue.components.Intent>.add(uk.ac.susx.tag.dialoguer.dialogue.components.Intent)"], "Fixed commit": "f6a750ff36acec72f080bb4db1dfcd6bc388ccf5", "Url": "https://api.github.com/repos/daoudclarke/tag-dialogue-framework", "Date": "2015-08-25T21:17:41Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((\"issues\".equalsIgnoreCase(eventType)) && (\"labeled\".equals(message.getOrDefault(\"action\", \"NONE\")))) { templateName = eventType + \"-action_labeled\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1029/buggy-version/src.main.java.org.horiga.linenotifygateway.service.GithubWebhookHandler.java", "BodyUseAPI": [], "Fixed commit": "c96a94da7f20a5475364745a2906167e91ee1330", "Url": "https://api.github.com/repos/horiga/line-notify-gateway", "Date": "2017-04-10T11:14:53Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<? extends java.lang.Object>.getClassLoader()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (loader == null) { loader = this.getClass().getClassLoader(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8303/buggy-version/runtime.src.main.java.org.evosuite.runtime.mock.javax.naming.EvoNamingContext.java", "BodyUseAPI": [], "Fixed commit": "f7f4fe021cce6fc4786a7ed4e8dd87fd657a9e4d", "Url": "https://api.github.com/repos/EvoSuite/evosuite", "Date": "2015-12-06T18:18:35Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pvReader) != null) pvReader.setPaused(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7214/buggy-version/applications.plugins.org.csstudio.opibuilder.src.org.csstudio.opibuilder.pvmanager.PVManagerPV.java", "BodyUseAPI": [], "Fixed commit": "a63fdbfcae4a8515b44338e237b7efe711b5be5c", "Url": "https://api.github.com/repos/ControlSystemStudio/cs-studio", "Date": "2013-01-23T23:30:36Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (position < (imgid.length)) { imageView.setImageResource(imgid[position]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2484/buggy-version/app.src.main.java.annes.flyingpiiizza.CustomListAdapter.java", "BodyUseAPI": ["android.widget.ImageView.setImageResource(java.lang.Integer)"], "Fixed commit": "f05467070b9e5ba1bc807c8eb9bd4d9f6aa48234", "Url": "https://api.github.com/repos/asiele/FlyingPiiizza", "Date": "2017-05-21T11:50:20Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (fileConfig != null) { edu.wpi.cs.wpisuitetng.janeway.config.ConfigManager.config = fileConfig; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2702/buggy-version/Janeway.src.edu.wpi.cs.wpisuitetng.janeway.config.ConfigManager.java", "BodyUseAPI": [], "Fixed commit": "a1538658192d27cbf5525735d2ddd776f56e5294", "Url": "https://api.github.com/repos/fracture91/wpi-suite-tng", "Date": "2013-02-17T23:36:39Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((deviceClass.getId()) != null) { throw new com.devicehive.exceptions.HiveException(\"Invalid request. Id cannot be specified.\", com.devicehive.service.BAD_REQUEST.getStatusCode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8436/buggy-version/src.main.java.com.devicehive.service.DeviceClassService.java", "BodyUseAPI": [], "Fixed commit": "8af6884bf10b92bdd403b52eee7363499a6e2e78", "Url": "https://api.github.com/repos/devicehive/devicehive-java", "Date": "2013-08-21T14:01:29Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (status.equals(\"chooseProduct\")) { chooseProduct(); }else if (status.equals(\"moveToProducer\")) { moveToProducer(); }else if (status.equals(\"buyFromProducer\")) { buy(getProduct()); }else if (status.equals(\"negotiateBuy\")) { negotiateBuy(); }else if (status.equals(\"moveToRetailer\")) { moveToRetailer(); }else if (status.equals(\"negotiateSale\")) { negotiateSale(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1799/buggy-version/src.Trader.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "fef453563df86318bba28a0ea5d07912f3b755d9", "Url": "https://api.github.com/repos/CC007/KAT-hwset-5", "Date": "2014-10-16T21:55:26Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numVersions > 0) { createBuilder.addStatement(\"throw new RuntimeException(\\\"No version specification found for client version \\\"+v)\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/358/buggy-version/CodenameOneServerAnnotationsMaven.src.main.java.com.codename1.ws.annotations.processor.ServletClass.java", "BodyUseAPI": [], "Fixed commit": "bf8b723a156a05dfecfcf36e18976a17906d11b7", "Url": "https://api.github.com/repos/shannah/CN1RPC", "Date": "2015-07-11T21:05:57Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((page.size()) > 0) { ret = page.get(nextItem); }else { ret = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/9145/buggy-version/src.main.java.com.pardot.rhombus.cobject.statement.CQLExecutorIterator.java", "BodyUseAPI": ["java.util.List<com.datastax.driver.core.Row>.get(int)"], "Fixed commit": "11fecf5368e00ddc0ca95d4c024366246bd8efd7", "Url": "https://api.github.com/repos/Pardot/Rhombus", "Date": "2014-05-15T14:52:09Z"},
{"Line": "=>609", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pardot.rhombus.CQLExecutorIterator.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (row == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/9145/buggy-version/src.main.java.com.pardot.rhombus.ObjectMapper.java", "BodyUseAPI": [], "Fixed commit": "11fecf5368e00ddc0ca95d4c024366246bd8efd7", "Url": "https://api.github.com/repos/Pardot/Rhombus", "Date": "2014-05-15T14:52:09Z"},
{"Line": "=>523", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pardot.rhombus.CQLExecutorIterator.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (row == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/9145/buggy-version/src.main.java.com.pardot.rhombus.ObjectMapper.java", "BodyUseAPI": [], "Fixed commit": "11fecf5368e00ddc0ca95d4c024366246bd8efd7", "Url": "https://api.github.com/repos/Pardot/Rhombus", "Date": "2014-05-15T14:52:09Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.robv.android.xposed.XposedHelpers.findClass(java.lang.String,loadPackageParam.classLoader)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (httpURLConnectionImpl != null) { de.robv.android.xposed.XposedHelpers.findAndHookMethod(\"com.android.okhttp.internal.http.HttpURLConnectionImpl\", loadPackageParam.classLoader, \"getOutputStream\", RequestHook); de.robv.android.xposed.XposedHelpers.findAndHookMethod(\"com.android.okhttp.internal.http.HttpURLConnectionImpl\", loadPackageParam.classLoader, \"getInputStream\", ResponseHook); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2249/buggy-version/app.src.main.java.mobi.acpm.inspeckage.hooks.HttpHook.java", "BodyUseAPI": [], "Fixed commit": "a14ff786c3a24691e6e2de380edeff635dc0cebb", "Url": "https://api.github.com/repos/ac-pm/Inspeckage", "Date": "2016-06-01T18:23:32Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.robv.android.xposed.XposedHelpers.findClass(java.lang.String,loadPackageParam.classLoader)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (okHttpClient != null) { de.robv.android.xposed.XposedHelpers.findAndHookMethod(okHttpClient, \"open\", java.net.URI.class, new de.robv.android.xposed.XC_MethodHook() { @java.lang.Override protected void beforeHookedMethod(mobi.acpm.inspeckage.hooks.MethodHookParam param) throws java.lang.Throwable { java.net.URI uri = null; if ((param.args[0]) != null) uri = ((java.net.URI) (param.args[0])); de.robv.android.xposed.XposedBridge.log(((((mobi.acpm.inspeckage.hooks.HttpHook.TAG) + \"OkHttpClient: \") + (uri.toString())) + \"\")); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2249/buggy-version/app.src.main.java.mobi.acpm.inspeckage.hooks.HttpHook.java", "BodyUseAPI": ["de.robv.android.xposed.XposedHelpers.findAndHookMethod(java.lang.Class<?>,java.lang.String,java.lang.Class,de.robv.android.xposed.XC_MethodHook)"], "Fixed commit": "a14ff786c3a24691e6e2de380edeff635dc0cebb", "Url": "https://api.github.com/repos/ac-pm/Inspeckage", "Date": "2016-06-01T18:23:32Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (itemRegistry == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2299/buggy-version/src.main.java.mezz.jei.TooltipEventHandler.java", "BodyUseAPI": [], "Fixed commit": "09a50ba46733b02c96697594c9b79cf6bfc48c51", "Url": "https://api.github.com/repos/mezz/JustEnoughItems", "Date": "2015-12-07T01:28:20Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((damager.getType()) == (org.bukkit.entity.EntityType.SPIDER)) type = \"a spider\"; else if ((damager.getType()) == (org.bukkit.entity.EntityType.CREEPER)) type = \"a creeper\"; else if ((damager.getType()) == (org.bukkit.entity.EntityType.ENDER_DRAGON)) type = \"the dragon\"; else if ((damager.getType()) == (org.bukkit.entity.EntityType.ENDERMAN)) type = \"an enderman\"; else if ((damager.getType()) == (org.bukkit.entity.EntityType.GHAST)) type = \"a ghast\"; else if ((damager.getType()) == (org.bukkit.entity.EntityType.IRON_GOLEM)) type = \"an iron golem\"; else if ((damager.getType()) == (org.bukkit.entity.EntityType.MAGMA_CUBE)) type = \"a magma cube\"; else if ((damager.getType()) == (org.bukkit.entity.EntityType.PIG_ZOMBIE)) type = \"a zombie pigman\"; else if ((damager.getType()) == (org.bukkit.entity.EntityType.SILVERFISH)) type = \"a silverfish\"; else if ((damager.getType()) == (org.bukkit.entity.EntityType.SKELETON)) type = \"a skeleton\"; else if ((damager.getType()) == (org.bukkit.entity.EntityType.SLIME)) type = \"a slime\"; else if ((damager.getType()) == (org.bukkit.entity.EntityType.WITCH)) type = \"a witch\"; else if ((damager.getType()) == (org.bukkit.entity.EntityType.WITHER)) type = \"a wither\"; else if ((damager.getType()) == (org.bukkit.entity.EntityType.WITHER_SKULL)) type = \"a wither skull\"; else if ((damager.getType()) == (org.bukkit.entity.EntityType.ZOMBIE)) type = \"a zombie\"; else if ((damager.getType()) == (org.bukkit.entity.EntityType.WOLF)) { org.bukkit.entity.AnimalTamer owner = ((org.bukkit.entity.Wolf) (damager)).getOwner(); if (owner != null) type = (owner.getName()) + \"'s wolf\"; else type = \"a wolf\"; }else if ((damager.getType()) == (org.bukkit.entity.EntityType.PRIMED_TNT)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7188/buggy-version/src.com.martinbrook.tesseractuhc.notification.DamageNotification.java", "BodyUseAPI": ["org.bukkit.entity.Entity.getType()", "org.bukkit.entity.Entity.getType()", "org.bukkit.entity.Entity.getType()", "org.bukkit.entity.Entity.getType()", "org.bukkit.entity.Entity.getType()", "org.bukkit.entity.Entity.getType()", "org.bukkit.entity.Entity.getType()", "org.bukkit.entity.Entity.getType()", "org.bukkit.entity.Entity.getType()", "org.bukkit.entity.Entity.getType()", "org.bukkit.entity.Entity.getType()", "org.bukkit.entity.Entity.getType()", "org.bukkit.entity.Entity.getType()", "org.bukkit.entity.Entity.getType()", "org.bukkit.entity.Entity.getType()", "org.bukkit.entity.Entity.getType()"], "Fixed commit": "08b04504ab58cff14e34f88d9e033d348c774193", "Url": "https://api.github.com/repos/BurgundyBadger/TesseractUHC", "Date": "2013-05-18T21:48:19Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parameters) != null) { parameters = reusable.swapParameters(parameters); parameterCount = reusable.getParameterCount(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7250/buggy-version/log4j-core.src.main.java.org.apache.logging.log4j.core.async.RingBufferLogEvent.java", "BodyUseAPI": [], "Fixed commit": "fb5e7305796d18d7a69ec2ce1a76ad6ae793e77c", "Url": "https://api.github.com/repos/rlugojr/logging-log4j2", "Date": "2016-04-22T03:50:28Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parameters) != null) { parameters = reusable.swapParameters(parameters); parameterCount = reusable.getParameterCount(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7250/buggy-version/log4j-core.src.main.java.org.apache.logging.log4j.core.impl.MutableLogEvent.java", "BodyUseAPI": [], "Fixed commit": "fb5e7305796d18d7a69ec2ce1a76ad6ae793e77c", "Url": "https://api.github.com/repos/rlugojr/logging-log4j2", "Date": "2016-04-22T03:50:28Z"},
{"Line": "=>2087", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s.type.isPrimitive()) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6930/buggy-version/OpenJML.src.org.jmlspecs.openjml.esc.JmlAssertionAdder.java", "BodyUseAPI": [], "Fixed commit": "efeadffdf982cbc9392cd800e0d0f56bb540ad83", "Url": "https://api.github.com/repos/OpenJML/OpenJML", "Date": "2016-09-23T03:09:58Z"},
{"Line": "=>632", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (tempStatement != null) tempStatement.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8420/buggy-version/ydio.src.ydio.dao.SQL.java", "BodyUseAPI": ["java.sql.Statement.close()"], "Fixed commit": "c7c1ca69c9bff898fb40492a182ad33f897cc067", "Url": "https://api.github.com/repos/mathck/swe2013_Abgabe2", "Date": "2014-01-06T19:50:20Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Server.numUtilizadores()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (x == (-1)) s = 2; else { if (((x / 2) % 2) == 0) { s = x / 2; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3815/buggy-version/src.Challenge.java", "BodyUseAPI": [], "Fixed commit": "69cb0192f0ec5ccc43e79969c558bd571eaa3735", "Url": "https://api.github.com/repos/Miglas13/FreeCoin", "Date": "2017-06-03T17:55:29Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.sentiance.sdk.Sdk.getInstance(getApplicationContext()).user().getId().isPresent()) { userIdLabel.setText(com.sentiance.sdk.Sdk.getInstance(getApplicationContext()).user().getId().get().replace(\"https://api.sentiance.com/users/\", \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4405/buggy-version/app.src.main.java.com.sentiance.sdkstarter.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "eba2485f98400530cc3fd456b8f8e6b0fed8bc95", "Url": "https://api.github.com/repos/sentiance/sdk-starter-android", "Date": "2016-05-12T09:47:23Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (s.isSubstitution()) { textAcc.add(s); }else { rule.substitute(s.getOriginal()); for (substitution.Substitution sForRule : rule) { textAcc.add(sForRule); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4431/buggy-version/src.substitution.TextSubstitution.java", "BodyUseAPI": ["java.util.ArrayList<substitution.Substitution>.add(substitution.Substitution)", "substitution.SubstitutionRule.substitute(s.getOriginal())", "substitution.Substitution.getOriginal()"], "Fixed commit": "3325ec578edcf160aeba0a9a9e42e66030209255", "Url": "https://api.github.com/repos/anatolydryga/TextSubstitution", "Date": "2014-01-10T20:32:02Z"},
{"Line": "=>755", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o != null) { o = ((org.json.JSONObject) (o)).opt(pathElement); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5395/buggy-version/hybrid.SmartStore.src.com.salesforce.androidsdk.smartstore.store.SmartStore.java", "BodyUseAPI": [], "Fixed commit": "d99ad9abc3150c7e11e69fc1b22c9b1976f49b55", "Url": "https://api.github.com/repos/bhariharan/SalesforceMobileSDK-Android", "Date": "2014-02-27T03:58:26Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentMap<java.lang.String, org.araqne.logdb.client.http.impl.WaitingCall>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (item == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1213/buggy-version/araqne-logdb-client.src.main.java.org.araqne.logdb.client.http.impl.WebSocketBlockingTable.java", "BodyUseAPI": [], "Fixed commit": "81e1fca50d1798c8a477336f47768fb81bfb3267", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2013-07-26T15:32:58Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (filter.equals(\"None\")) { }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3801/buggy-version/src.main.java.analyzer.controllers.ViewController.java", "BodyUseAPI": [], "Fixed commit": "36834cac021738d2dd9df6b2ffd548b20c117844", "Url": "https://api.github.com/repos/adrnkaczmarek/SWRLAnalyzeApp", "Date": "2017-01-09T17:48:15Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(feesEtx.getText().toString()))) { if ((((getTransactionType()) == (wallet.mycoin.model.TransactionType.BUY)) && ((getDoubleFromString(feesEtx.getText().toString())) != 0)) || (((getTransactionType()) == (wallet.mycoin.model.TransactionType.SELL)) && ((getDoubleFromString(feesEtx.getText().toString())) >= 0))) { fees = getDoubleFromString(feesEtx.getText().toString()); totalPrice = fees + price; }else { debugToast(\"Fees value is mandatory\"); } }else { debugToast(\"Fees value is mandatory\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3856/buggy-version/app.src.main.java.wallet.mycoin.AddTransactionActivity.java", "BodyUseAPI": ["feesEtx.getText().toString()", "android.widget.EditText.getText()", "android.widget.EditText.getText()", "wallet.mycoin.AddTransactionActivity.6.getDoubleFromString(feesEtx.getText().toString())", "feesEtx.getText().toString()", "feesEtx.getText().toString()", "wallet.mycoin.AddTransactionActivity.6.getDoubleFromString(feesEtx.getText().toString())", "android.widget.EditText.getText()", "wallet.mycoin.AddTransactionActivity.6.getDoubleFromString(feesEtx.getText().toString())"], "Fixed commit": "f0273b5a6103ad87c723c7e1826e2f56901f6f06", "Url": "https://api.github.com/repos/arundaskv/MyKoinex", "Date": "2017-12-27T07:33:28Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((maincenter) != null) { remove(maincenter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7862/buggy-version/src.mainPage.java", "BodyUseAPI": [], "Fixed commit": "a4a8287078d917510ab498c5e9725a29ce047495", "Url": "https://api.github.com/repos/smophos/ClubManagement", "Date": "2012-05-03T15:41:44Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (escapeAttempts == (-10)) { escapeAttempts = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2401/buggy-version/src.main.java.com.jadventure.game.menus.BattleMenu.java", "BodyUseAPI": [], "Fixed commit": "ade5d641005b25d0f190c098ac8e19e6e2f0215e", "Url": "https://api.github.com/repos/stoye/JAdventure", "Date": "2015-11-21T00:29:10Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(children.isEmpty())) sb.deleteCharAt(((sb.length()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2927/buggy-version/src.main.java.aanchev.xmlstreamer.BasicXMLStreamer.java", "BodyUseAPI": [], "Fixed commit": "1d39ad88e9d828e38ceb6a47a3a3b47a32d58aee", "Url": "https://api.github.com/repos/anly2/xml-selecting-streamer", "Date": "2017-07-14T19:12:57Z"},
{"Line": "=>468", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.redhawk.ide.debug.internal.cf.extended.impl.ApplicationImpl.getWaveformContext()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (context != null) { try { context.unbind(org.jacorb.naming.Name.toName(this.name)); } catch (final org.omg.CosNaming.NamingContextPackage.NotFound e) { this.streams.getErrStream().println((\"Error while unbinding waveform context:\\n\" + e)); } catch (final org.omg.CosNaming.NamingContextPackage.CannotProceed e) { this.streams.getErrStream().println((\"Error while unbinding waveform context:\\n\" + e)); } catch (final org.omg.CosNaming.NamingContextPackage.InvalidName e) { this.streams.getErrStream().println((\"Error while unbinding waveform context:\\n\" + e)); } catch (final org.omg.CORBA.SystemException e) { this.streams.getErrStream().println((\"Error while unbinding waveform context:\\n\" + e)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2680/buggy-version/plugins.gov.redhawk.ide.debug.src.gov.redhawk.ide.debug.internal.cf.extended.impl.ApplicationImpl.java", "BodyUseAPI": ["org.omg.CosNaming.NamingContextExt.unbind(org.jacorb.naming.Name.toName(this.name))"], "Fixed commit": "44cd503264661d22521ff65839040ba6338bfb1e", "Url": "https://api.github.com/repos/RedhawkSDR/eclipse-gov.redhawk.ide", "Date": "2013-10-02T13:07:34Z"},
{"Line": "=>426", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jClassFieldExpression.getField().isStatic()) && (!((jClassFieldExpression.prefix()) instanceof org.multijava.mjc.JTypeNameExpression))) { java.lang.String fieldName = ((jClassFieldExpression.getField().getType().toString().replace('.', '_')) + \"_\") + (jClassFieldExpression.ident()); e2 = ar.uba.dc.rfm.alloy.ast.expressions.ExprVariable.buildExprVariable(fieldName); e2 = new ar.uba.dc.rfm.alloy.ast.expressions.ExprProduct(new ar.uba.dc.rfm.alloy.ast.expressions.ExprConstant(null, \"univ\"), ar.uba.dc.rfm.alloy.ast.expressions.ExprJoin.join(ar.edu.jdynalloy.factory.JExpressionFactory.CLASS_FIELDS, e2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7474/buggy-version/src.ar.edu.taco.simplejml.ExpressionVisitor.java", "BodyUseAPI": ["org.multijava.mjc.JClassFieldExpression.getField()", "jClassFieldExpression.getField().getType().toString()", "jClassFieldExpression.getField().getType()", "org.multijava.mjc.JClassFieldExpression.ident()", "jClassFieldExpression.getField().getType().toString().replace(char,char)"], "Fixed commit": "dc9fa9cda812a1986956c0fa9e66088dfdf527bd", "Url": "https://api.github.com/repos/zeminlu/comitaco", "Date": "2017-07-18T19:12:26Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(jClassFieldExpression.getField().isStatic())) { e2 = ar.uba.dc.rfm.alloy.ast.expressions.ExprVariable.buildExprVariable(jClassFieldExpression.ident()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7474/buggy-version/src.ar.edu.taco.simplejml.ExpressionVisitor.java", "BodyUseAPI": ["org.multijava.mjc.JClassFieldExpression.ident()", "ar.uba.dc.rfm.alloy.ast.expressions.ExprVariable.buildExprVariable(jClassFieldExpression.ident())"], "Fixed commit": "dc9fa9cda812a1986956c0fa9e66088dfdf527bd", "Url": "https://api.github.com/repos/zeminlu/comitaco", "Date": "2017-07-18T19:12:26Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.columnMap.isEmpty()) { this.columnMap = sheetDescription.getColumnMap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6277/buggy-version/src.main.java.com.mdanylenko.excel.parcer.handler.SaxSheetHandler.java", "BodyUseAPI": [], "Fixed commit": "425bd68a94112a391ab2255e59e52cea92b54abe", "Url": "https://api.github.com/repos/maxpaint/saxExcelParser", "Date": "2015-12-22T19:23:53Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((character.getFreeSkill()) > 0) { if (!(character.isTechnomancer())) { adapterFreePointCounter.setText(((character.getFreeSkill()) + \" Freie Magiefertigkeiten\")); }else { adapterFreePointCounter.setText(((character.getFreeSkill()) + \" Freie Resonanzfertigkeiten\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1658/buggy-version/app.src.main.java.com.example.danielojea.srapp.control.SkillListAdapter.java", "BodyUseAPI": ["android.widget.TextView.setText(((character.getFreeSkill()) + \" Freie Resonanzfertigkeiten\"))", "com.example.danielojea.srapp.Classes.SRCharacter.getFreeSkill()", "android.widget.TextView.setText(((character.getFreeSkill()) + \" Freie Magiefertigkeiten\"))", "com.example.danielojea.srapp.Classes.SRCharacter.isTechnomancer()", "com.example.danielojea.srapp.Classes.SRCharacter.getFreeSkill()"], "Fixed commit": "722cb95dcfb6273eaa347a247cf7825e8ba82b10", "Url": "https://api.github.com/repos/SRunnerStudio/SRApp", "Date": "2017-07-26T20:26:37Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((tail.data) == null) && ((tail.operator) != ' ')) redo();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3880/buggy-version/app.src.main.java.com.example.danielmossur.calculator.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "94b198afd85959a1461951e11627d60b07e95357", "Url": "https://api.github.com/repos/DeMoss15/Calculator", "Date": "2017-01-08T15:26:59Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getParameter(\"markedIndividualName2\")) != null) { rel.setMarkedIndividualName2(request.getParameter(\"markedIndividualName2\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6298/buggy-version/src.main.java.org.ecocean.servlet.RelationshipCreate.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "org.ecocean.servlet.Relationship.setMarkedIndividualName2(request.getParameter(\"markedIndividualName2\"))"], "Fixed commit": "1e5d3f8eed7a9f1f78da11ee37a75f789e0863db", "Url": "https://api.github.com/repos/WildbookOrg/Wildbook", "Date": "2017-02-09T00:07:10Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getParameter(\"markedIndividualName1\")) != null) { rel.setMarkedIndividualName1(request.getParameter(\"markedIndividualName1\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6298/buggy-version/src.main.java.org.ecocean.servlet.RelationshipCreate.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "org.ecocean.servlet.Relationship.setMarkedIndividualName1(request.getParameter(\"markedIndividualName1\"))"], "Fixed commit": "1e5d3f8eed7a9f1f78da11ee37a75f789e0863db", "Url": "https://api.github.com/repos/WildbookOrg/Wildbook", "Date": "2017-02-09T00:07:10Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((server) == null) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6220/buggy-version/jqm-all.jqm-engine.src.main.java.com.enioka.jqm.tools.JettyServer.java", "BodyUseAPI": [], "Fixed commit": "2db0699da5dd90a59f5380f496e998656b389a0a", "Url": "https://api.github.com/repos/enioka/jqm", "Date": "2014-08-26T09:16:13Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (mat == null) { p.sendMessage(((org.bukkit.ChatColor.RED) + \"Incorrect Item Name.\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2646/buggy-version/src.com.fullwall.Citizens.BasicNPCHandler.java", "BodyUseAPI": [], "Fixed commit": "3a10161e2c8f446407cbe641484cfbe1c512674e", "Url": "https://api.github.com/repos/fullwall/Citizens", "Date": "2011-03-27T18:10:47Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasWord) { reader.reset(); return fillAttributes(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1395/buggy-version/src.com.zzzhc.analyzer.DictTokenizer.java", "BodyUseAPI": [], "Fixed commit": "52366a43a0c744dbdba5bfcd8a727bc2331c52d0", "Url": "https://api.github.com/repos/zzzhc/baobao-analyzer", "Date": "2012-05-06T15:27:57Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (resultSet != null) { resultSet.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6824/buggy-version/src.main.java.com.dutytrail.service.duty.dao.BaseDAO.java", "BodyUseAPI": ["java.sql.ResultSet.close()"], "Fixed commit": "9f74d7e835722cb72efe3838197c178b8d6c5813", "Url": "https://api.github.com/repos/dutytrail/dt-service-duty", "Date": "2016-07-27T14:34:47Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (ps != null) { ps.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6824/buggy-version/src.main.java.com.dutytrail.service.duty.dao.BaseDAO.java", "BodyUseAPI": ["java.sql.PreparedStatement.close()"], "Fixed commit": "9f74d7e835722cb72efe3838197c178b8d6c5813", "Url": "https://api.github.com/repos/dutytrail/dt-service-duty", "Date": "2016-07-27T14:34:47Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (source.hasTop()) { key = source.getTopKey(); }else { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2545/buggy-version/extensions.datastores.accumulo.src.main.java.mil.nga.giat.geowave.datastore.accumulo.query.QueryFilterIterator.java", "BodyUseAPI": ["org.apache.accumulo.core.iterators.SortedKeyValueIterator<org.apache.accumulo.core.data.Key, org.apache.accumulo.core.data.Value>.getTopKey()"], "Fixed commit": "7e173d3340c6b9d690ae0a7fa4d242217bc5d0c9", "Url": "https://api.github.com/repos/locationtech/geowave", "Date": "2016-07-10T17:32:36Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(this.properties.containsKey(\"driver\"))) { this.properties.put(\"driver\", defaultDriver); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5104/buggy-version/src.main.java.uk.ac.imperial.presage2.db.sql.SqlModule.java", "BodyUseAPI": [], "Fixed commit": "08bdc669c6ed3bb36f855c19cf79acd22081242d", "Url": "https://api.github.com/repos/Presage/presage2-sqldb", "Date": "2012-08-03T16:13:22Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((impl) == null) throw new java.lang.RuntimeException((\"Could not find storage class: \" + (implClass)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5104/buggy-version/src.main.java.uk.ac.imperial.presage2.db.sql.SqlModule.java", "BodyUseAPI": [], "Fixed commit": "08bdc669c6ed3bb36f855c19cf79acd22081242d", "Url": "https://api.github.com/repos/Presage/presage2-sqldb", "Date": "2012-08-03T16:13:22Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sessionId == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/599/buggy-version/server.src.main.java.ca.wasabistudio.chat.connector.Connector.java", "BodyUseAPI": [], "Fixed commit": "508c8d7982e6d5f0f3ade2e1f3b83ad96ff14ec1", "Url": "https://api.github.com/repos/vvasabi/ws-chat", "Date": "2011-11-24T05:08:21Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gamePieces[x][y].getStatus()", "Scoreboard.getTurn()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((stat == (player + 2)) || (stat == player)) { counter++; }else { java.lang.System.out.println(((((\"Status error \" + x) + \", \") + y) + (gamePieces[x][y].getStatus()))); return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5319/buggy-version/src.main.java.GameBoard.java", "BodyUseAPI": [], "Fixed commit": "06f6c62b1bb706d023b28349621f56b8765d9ee0", "Url": "https://api.github.com/repos/jwflory/RIT-ISTE121-2155-MiniProject", "Date": "2016-03-13T22:25:05Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.neophob.sematrix.glue.Collector.getInstance()", "java.util.Random.nextInt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((blah == 11) && (col.getShufflerSelect(ShufflerOffset.COLORSET))) { int colorSets = col.getColorSets().size(); for (com.neophob.sematrix.glue.Visual v : col.getAllVisuals()) { v.setGenerator1(rand.nextInt(colorSets)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5540/buggy-version/src.main.java.com.neophob.sematrix.glue.Shuffler.java", "BodyUseAPI": ["com.neophob.sematrix.glue.Collector.getAllVisuals()", "com.neophob.sematrix.glue.Collector.getColorSets()", "col.getColorSets().size()"], "Fixed commit": "ee9690e2f1fef8d711c2550834776eed740b9e86", "Url": "https://api.github.com/repos/neophob/PixelController", "Date": "2013-09-19T12:17:43Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (inputStream != null) inputStream.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6505/buggy-version/src.club.seedymusic.util.ConfigurationManager.java", "BodyUseAPI": ["java.io.InputStream.close()"], "Fixed commit": "97491be1407b0a281047df4dc2e7644fdad8d672", "Url": "https://api.github.com/repos/Sultaneous/SeedyMusicClub", "Date": "2017-11-04T23:01:08Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.queue.containsKey(player)) { return (this.queue.get(player).size()) > 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/836/buggy-version/src.nl.giantit.minecraft.GiantShop.API.GSW.PickupQueue.java", "BodyUseAPI": ["this.queue.get(player).size()", "java.util.HashMap<java.lang.String, java.util.ArrayList<nl.giantit.minecraft.GiantShop.API.GSW.Queued>>.get(java.lang.String)"], "Fixed commit": "7a34011de73f6a68129dfecd974996639083c556", "Url": "https://api.github.com/repos/Thidox/GiantShop-2.0", "Date": "2013-01-18T00:51:07Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (options.getOptionBool(\"hookKeyboard\")) { keyHandler = new ui.input.JNativeKeyHandler(this); keyHandler.addListeners(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/826/buggy-version/src.ui.UI.java", "BodyUseAPI": [], "Fixed commit": "55d3c02057c7deb2024079ef9499bcd762f201eb", "Url": "https://api.github.com/repos/wareya/Spark-Reader", "Date": "2017-04-24T15:54:14Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((user.getDefaultPassword()) == null) { user.setDefaultPassword(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5144/buggy-version/mmanagerAPI.src.com.mconnti.moneymanager.business.impl.UserBOImpl.java", "BodyUseAPI": ["com.mconnti.moneymanager.entity.User.setDefaultPassword(boolean)"], "Fixed commit": "51a84737b73f5e35150e865b9b753882871b3c0c", "Url": "https://api.github.com/repos/anderdev/portfolio", "Date": "2014-04-03T22:11:56Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(user.getDefaultPassword())) { user.setPassword(com.mconnti.moneymanager.utils.Crypt.decrypt(com.mconnti.moneymanager.utils.Crypt.decrypt(user.getPassword()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5144/buggy-version/mmanagerAPI.src.com.mconnti.moneymanager.business.impl.UserBOImpl.java", "BodyUseAPI": ["com.mconnti.moneymanager.entity.User.setPassword(com.mconnti.moneymanager.utils.Crypt.decrypt(com.mconnti.moneymanager.utils.Crypt.decrypt(user.getPassword())))", "com.mconnti.moneymanager.utils.Crypt.decrypt(com.mconnti.moneymanager.utils.Crypt.decrypt(user.getPassword()))", "com.mconnti.moneymanager.entity.User.getPassword()", "com.mconnti.moneymanager.utils.Crypt.decrypt(user.getPassword())"], "Fixed commit": "51a84737b73f5e35150e865b9b753882871b3c0c", "Url": "https://api.github.com/repos/anderdev/portfolio", "Date": "2014-04-03T22:11:56Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(order.getSource().getTimeWindow().between(actualTime))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/364/buggy-version/src.main.java.de.hsbremen.kss.construction.BaseConstruction.java", "BodyUseAPI": [], "Fixed commit": "00660b8ef3cace1f692f3760d9905bc056a12f84", "Url": "https://api.github.com/repos/hvoss/logistik", "Date": "2014-05-27T20:33:10Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSupportActionBar()) != null) { getSupportActionBar().hide(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7627/buggy-version/app.src.main.java.com.perrchick.someapplication.NotificationsActivity.java", "BodyUseAPI": [], "Fixed commit": "cd1760da8a27ba669faa7b7116f3cc407e231249", "Url": "https://api.github.com/repos/PerrchicK/android-app", "Date": "2015-12-18T01:15:21Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (appFile.getType().equals(\"directory\")) { appFile.increaseSize(size); FileStructureComposite.AppFile result = getParentElement(appFile, parentName, size); if (result != null) { return result; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1063/buggy-version/T2_01_zadaca_3.src.FileIterator.InitialStructure.FileRepository.java", "BodyUseAPI": ["FileStructureComposite.AppFile.increaseSize(long)", "FileIterator.InitialStructure.FileRepository.InitialFileIterator.getParentElement(FileStructureComposite.AppFile,java.lang.String,long)"], "Fixed commit": "90c6dadec6e830ac6301bc1a5690a4ffd4921d51", "Url": "https://api.github.com/repos/lpredova/UzDiz3", "Date": "2016-01-03T15:35:37Z"},
{"Line": "=>488", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(trouble)) { trouble = true; debug.Debug.println(\"Found unexpected dead end. Battery is probably low.\"); labyrinthInfo.print(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5865/buggy-version/Beagleboard.beagleboard.algorithms.labyrinth.LabyrinthSolver.java", "BodyUseAPI": [], "Fixed commit": "9749ba76ea817897a2681f1c73f2c588d25351ae", "Url": "https://api.github.com/repos/Dowers/tsea29", "Date": "2014-12-15T00:38:21Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((e.getCause()) != null) && (e.getCause().getClass().isAssignableFrom(com.khs.sherpa.exception.SherpaRuntimeException.class))) { com.khs.sherpa.servlet.request.DefaultSherpaRequest.logger.throwing(target.getClass().getName(), method.getName(), e.getCause()); throw new com.khs.sherpa.exception.SherpaRuntimeException(e.getCause().getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5942/buggy-version/src.main.java.com.khs.sherpa.servlet.request.DefaultSherpaRequest.java", "BodyUseAPI": ["java.lang.Throwable.getMessage()", "java.lang.Exception.getCause()", "java.lang.Exception.getCause()", "java.util.logging.Logger.throwing(java.lang.String,java.lang.String,java.lang.Throwable)"], "Fixed commit": "9f0654f41a8f413951fe0d3f56e11261f7b030ee", "Url": "https://api.github.com/repos/in-the-keyhole/khs-sherpa", "Date": "2013-02-22T15:45:06Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["z.hol.shellandroid.ShellAndroid.getLastResult()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (idStrOrigin != null) { idStrOrigin = idStrOrigin.trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2477/buggy-version/src.z.hol.shellandroid.ShellAndroid.java", "BodyUseAPI": ["java.lang.String.trim()"], "Fixed commit": "5fc1585fe874786cf8808b0f311bf1a8ccdc0875", "Url": "https://api.github.com/repos/holmeszyx/ShellAndroid", "Date": "2014-08-18T05:49:20Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((onHeaderClickListener) != null) onHeaderClickListener.onClick(v);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7077/buggy-version/expandablelayout.src.main.java.com.github.saeedjassani.ExpandableLayout.java", "BodyUseAPI": [], "Fixed commit": "0b3ebd4a83c2bc43f07e1aa37a8165558f1073a5", "Url": "https://api.github.com/repos/saeedjassani/ExpandableLayout", "Date": "2016-12-29T14:57:47Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sleepTimes.size()) > 0) { sleepAvg = utils.ConsumedTime.getAverageOf(sleepTimes); }else { sleepAvg = new utils.ConsumedTime(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3904/buggy-version/Android.src.fi.vincit.babyschedule.activities.Statistics.java", "BodyUseAPI": ["utils.ConsumedTime.getAverageOf(java.util.ArrayList<utils.ConsumedTime>)"], "Fixed commit": "4ebab9c3fa4ba75e77003e6f172b135b0ae4d1ba", "Url": "https://api.github.com/repos/juhari/BabySchedule", "Date": "2011-09-18T14:59:12Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((napTimes.size()) > 0) { napAvg = utils.ConsumedTime.getAverageOf(napTimes); }else { napAvg = new utils.ConsumedTime(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3904/buggy-version/Android.src.fi.vincit.babyschedule.activities.Statistics.java", "BodyUseAPI": ["utils.ConsumedTime.getAverageOf(java.util.ArrayList<utils.ConsumedTime>)"], "Fixed commit": "4ebab9c3fa4ba75e77003e6f172b135b0ae4d1ba", "Url": "https://api.github.com/repos/juhari/BabySchedule", "Date": "2011-09-18T14:59:12Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6018/buggy-version/src.com.example.oss.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "5e767fc232f5db5cbdb0d7df8fc7daa51a1a58c4", "Url": "https://api.github.com/repos/zouyuefu/OSSLib_android", "Date": "2014-11-23T11:57:10Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (event.isCancelled()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7499/buggy-version/src.main.java.fr.moribus.imageonmap.ui.MapItemManager.java", "BodyUseAPI": [], "Fixed commit": "a90418d3a1d3a6d17723ee3a231b99dd13685131", "Url": "https://api.github.com/repos/zDevelopers/ImageOnMap", "Date": "2016-07-05T22:03:02Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<org.teiid.query.optimizer.relational.rules.AggregateSymbol, org.teiid.query.optimizer.relational.rules.Expression>.get(entry.getValue())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (ex == null) { ses = inverseMap.get(entry.getValue()); }else if (ex instanceof org.teiid.query.optimizer.relational.rules.AggregateSymbol) { ses = inverseMap.get(ex); }else { org.teiid.query.sql.visitor.ExpressionMappingVisitor.mapExpressions(ex, inverseMap); ses = new org.teiid.query.optimizer.relational.rules.ExpressionSymbol(\"expr\", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2791/buggy-version/engine.src.main.java.org.teiid.query.optimizer.relational.rules.RulePushAggregates.java", "BodyUseAPI": ["java.util.Map<org.teiid.query.optimizer.relational.rules.Expression, org.teiid.query.optimizer.relational.rules.ElementSymbol>.get(org.teiid.query.optimizer.relational.rules.Expression)", "org.teiid.query.sql.visitor.ExpressionMappingVisitor.mapExpressions(org.teiid.query.optimizer.relational.rules.Expression,java.util.Map<org.teiid.query.optimizer.relational.rules.Expression, org.teiid.query.optimizer.relational.rules.ElementSymbol>)"], "Fixed commit": "b0b87e18d3a2bb57e8a97da5aa7b561012c92054", "Url": "https://api.github.com/repos/johnathonlee/teiid", "Date": "2012-10-10T14:38:23Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<org.teiid.query.optimizer.relational.rules.AggregateSymbol, org.teiid.query.optimizer.relational.rules.Expression>.get(org.teiid.query.optimizer.relational.rules.Expression)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (mappedAgg != null) { if (mappedAgg instanceof org.teiid.query.optimizer.relational.rules.AggregateSymbol) { compositeAggs.add(((org.teiid.query.optimizer.relational.rules.AggregateSymbol) (mappedAgg))); }else { compositeAggs.addAll(org.teiid.query.sql.visitor.AggregateSymbolCollectorVisitor.getAggregates(mappedAgg, false)); hasExpressionMapping = true; } }else { compositeAggs.add(((org.teiid.query.optimizer.relational.rules.AggregateSymbol) (ex))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2791/buggy-version/engine.src.main.java.org.teiid.query.optimizer.relational.rules.RulePushAggregates.java", "BodyUseAPI": ["java.util.LinkedHashSet<org.teiid.query.optimizer.relational.rules.AggregateSymbol>.addAll(org.teiid.query.sql.visitor.AggregateSymbolCollectorVisitor.getAggregates(mappedAgg, false))", "org.teiid.query.sql.visitor.AggregateSymbolCollectorVisitor.getAggregates(org.teiid.query.optimizer.relational.rules.Expression,boolean)"], "Fixed commit": "b0b87e18d3a2bb57e8a97da5aa7b561012c92054", "Url": "https://api.github.com/repos/johnathonlee/teiid", "Date": "2012-10-10T14:38:23Z"},
{"Line": "=>1897", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.text.SpannableStringBuilder.getSpanStart(android.text.style.URLSpan)", "android.text.SpannableStringBuilder.getSpanEnd(android.text.style.URLSpan)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((start >= 0) && (end >= 0)) { int flags = strBuilder.getSpanFlags(span); android.text.style.ClickableSpan clickable = new android.text.style.ClickableSpan() { public void onClick(android.view.View view) { if (null != (mMessagesAdapterEventsListener)) { mMessagesAdapterEventsListener.onURLClick(android.net.Uri.parse(span.getURL())); } } }; strBuilder.setSpan(clickable, start, end, flags); strBuilder.removeSpan(span); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6502/buggy-version/matrix-sdk.src.main.java.org.matrix.androidsdk.adapters.MessagesAdapter.java", "BodyUseAPI": ["android.text.SpannableStringBuilder.setSpan(android.text.style.ClickableSpan,int,int,int)"], "Fixed commit": "c78ef9b7889d15f31281b059f618c580dfe23e2c", "Url": "https://api.github.com/repos/matrix-org/matrix-android-sdk", "Date": "2017-07-10T16:08:17Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state) == (com.taozeyu.calico.resource.ResourceHeadContentReader.State.Init)) { resultChar = ((char) (ch)); }else { content = subStringLast3Char(contentBuilder.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5069/buggy-version/src.com.taozeyu.calico.resource.ResourceHeadContentReader.java", "BodyUseAPI": [], "Fixed commit": "6307a7024422d8ac68e1cd7c5accecfdaeb30a61", "Url": "https://api.github.com/repos/Moskize91/Calico", "Date": "2016-08-02T13:45:24Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cpw.mods.fml.relauncher.RelaunchClassLoader.DEBUG_CLASSLOADING_FINER) { cpw.mods.fml.common.FMLLog.finest(\"Beginning transform of %s (%s) Start Length: %d\", name, transformedName, (basicClass == null ? 0 : basicClass.length)); for (cpw.mods.fml.relauncher.IClassTransformer transformer : transformers) { java.lang.String transName = transformer.getClass().getName(); cpw.mods.fml.common.FMLLog.finest(\"Before Transformer %s: %d\", transName, (basicClass == null ? 0 : basicClass.length)); basicClass = transformer.transform(name, transformedName, basicClass); cpw.mods.fml.common.FMLLog.finest(\"After Transformer %s: %d\", transName, (basicClass == null ? 0 : basicClass.length)); } cpw.mods.fml.common.FMLLog.finest(\"Ending transform of %s (%s) Start Length: %d\", name, transformedName, (basicClass == null ? 0 : basicClass.length)); }else { for (cpw.mods.fml.relauncher.IClassTransformer transformer : transformers) { basicClass = transformer.transform(name, transformedName, basicClass); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5061/buggy-version/fml.common.cpw.mods.fml.relauncher.RelaunchClassLoader.java", "BodyUseAPI": [], "Fixed commit": "a8ae410493948495591a554fd85363604781b480", "Url": "https://api.github.com/repos/TheGreyGhost/MinecraftForge", "Date": "2013-03-17T18:54:26Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mjson.Json.at(java.lang.String,mjson.Json.object())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (outcome.isObject()) { result = outcome.at(\"label\", \"\").asString(); }else if (outcome.isString()) { java.lang.String outcomeStr = outcome.asString(); if (outcomeStr.contains(\"#\")) { result = outcomeStr.split(\"#\")[1]; }else { result = outcomeStr; } }else { throw new java.lang.RuntimeException((\"Misconfiguration of outcome detected in Activity: \" + activity)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/455/buggy-version/src.java.org.sharegov.cirm.utils.SRJsonActivityUtil.java", "BodyUseAPI": ["mjson.Json.at(java.lang.String,java.lang.String)", "mjson.Json.asString()", "mjson.Json.isString()", "outcome.at(\"label\", \"\").asString()"], "Fixed commit": "92a2f1d99c9839c5d79b7efed62807ae9eb05ef5", "Url": "https://api.github.com/repos/sharegov/opencirm", "Date": "2016-07-09T02:21:36Z"},
{"Line": "=>445", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.LinkedHashMap<java.lang.String, java.lang.Integer>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((index > (dims.length)) || ((dims[index]) != null)) { throw new com.metamx.common.ISE(((\"Dimension: \\\"\" + dimension) + \"\\\" occured more than once in InputRow\")); }else { dims[index] = getDimVals(dimValues.get(dimension), dimensionValues); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3691/buggy-version/processing.src.main.java.io.druid.segment.incremental.IncrementalIndex.java", "BodyUseAPI": [], "Fixed commit": "2ec6498d80241dcaa052ff27c1cd533c50e65ec6", "Url": "https://api.github.com/repos/tubemogul/druid", "Date": "2015-11-22T09:53:33Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (event instanceof com.sem.btrouble.event.PlayerEvent) { update(((com.sem.btrouble.event.PlayerEvent) (event))); }else if (event instanceof com.sem.btrouble.event.ControllerEvent) { update(((com.sem.btrouble.event.ControllerEvent) (event))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/993/buggy-version/src.main.java.com.sem.btrouble.tools.SoundObserver.java", "BodyUseAPI": [], "Fixed commit": "7253a710a9cb698cc49a60b07ae77134fa3df9d6", "Url": "https://api.github.com/repos/hungnguyen94/BTrouble", "Date": "2015-10-16T21:52:19Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["week03.LogEntry.getIpAddress()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(answer.contains(ipAddress))) { answer.add(ipAddress); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1077/buggy-version/src.week03.LogAnalyzer.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "5f39bf3aabdf22beee1cd58c3febd45c4ec46057", "Url": "https://api.github.com/repos/marciasilva/glabLibs", "Date": "2016-01-08T18:10:38Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (config.containsKey(\"out\")) { gatks.VCFHeaderInitializer vcfInit = new gatks.VCFHeaderInitializer(this); this.injections.get(\"initializers\").add(vcfInit); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7292/buggy-version/src.main.groovy.gatks.GATKSCommandLine.java", "BodyUseAPI": [], "Fixed commit": "70d24d1109c6765988192bc987622c5fa4e8a69e", "Url": "https://api.github.com/repos/ssadedin/gatks", "Date": "2012-05-06T23:58:04Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (value != null) { if (value == 0.0) { getCellFormatter().setStyleName((row + 1), col, (\"gwt-FactorGrid-\" + \"zero\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1283/buggy-version/src.edu.nrao.dss.client.widget.FactorGrid.java", "BodyUseAPI": [], "Fixed commit": "e804ed365c8527ef4fdccbb393b4ff9fb6a29ebf", "Url": "https://api.github.com/repos/nrao/nubbles", "Date": "2011-08-26T17:47:57Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((!(text.contains(\"-\"))) & (!(text.contains(\"?\")))) { value = java.lang.Double.valueOf(text); text = com.google.gwt.i18n.client.NumberFormat.getFormat(\"#0.0000\").format(value); }else { value = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1283/buggy-version/src.edu.nrao.dss.client.widget.FactorGrid.java", "BodyUseAPI": [], "Fixed commit": "e804ed365c8527ef4fdccbb393b4ff9fb6a29ebf", "Url": "https://api.github.com/repos/nrao/nubbles", "Date": "2011-08-26T17:47:57Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (textWidth == 0) { textWidth = ((resolvedFont.getAverageFontWidth()) / 1000) * fontSize; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2200/buggy-version/sejda-sambox.src.main.java.org.sejda.impl.sambox.component.PageTextWriter.java", "BodyUseAPI": [], "Fixed commit": "4bd88eb24c716a737dce4d6421aaeeaa09bc4fb0", "Url": "https://api.github.com/repos/torakiki/sejda", "Date": "2017-10-28T09:24:42Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ts.eclipse.ide.core.resources.IIDETypeScriptProject.getOpenedFile(org.eclipse.core.resources.IResource)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (tsFile != null) { tsFile.refreshNavBar(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2142/buggy-version/eclipse.jsdt.ts.eclipse.ide.jsdt.ui.src.ts.eclipse.ide.jsdt.internal.ui.validation.TypeScriptDocumentRegionProcessor.java", "BodyUseAPI": ["ts.eclipse.ide.core.resources.IIDETypeScriptFile.refreshNavBar()"], "Fixed commit": "380416561bfb998f3c311a4e1b34e2b3d7ac705d", "Url": "https://api.github.com/repos/angelozerr/typescript.java", "Date": "2017-01-12T12:55:44Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!reg) usename = rs.generate(); else usename = prevname;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7590/buggy-version/src.main.java.Player.java", "BodyUseAPI": [], "Fixed commit": "c32b9d31a4a206788b308238bc63a0ae933fd0f3", "Url": "https://api.github.com/repos/PavelMarishev/Doza2", "Date": "2016-11-30T14:07:49Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file.exists()) return fileName; else return \"File not found\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4920/buggy-version/src.main.java.com.kbs.funUtils.FileOperation.java", "BodyUseAPI": [], "Fixed commit": "5ededca06acbd2e536c83d776e59cdb7fc457316", "Url": "https://api.github.com/repos/rohithkbs/kbs", "Date": "2017-07-06T13:10:13Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (basicClass == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/813/buggy-version/src.main.java.mods.betterfoliage.loader.EZTransformerBase.java", "BodyUseAPI": [], "Fixed commit": "aee6e5caca23a3d348d221b22360667cf65c0bd3", "Url": "https://api.github.com/repos/octarine-noise/BetterFoliage", "Date": "2014-07-11T12:42:51Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cfvbaibai.cardfantasy.engine.CardInfo.getOwner()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(player.getGrave().contains(card))) && (player.getField().contains(card))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4087/buggy-version/workspace.CardFantasyCore.src.cfvbaibai.cardfantasy.engine.skill.Reincarnation.java", "BodyUseAPI": [], "Fixed commit": "cc47b2fd130ab9891c909987a29f468672e8246f", "Url": "https://api.github.com/repos/cfvbaibai/CardFantasy", "Date": "2015-08-02T07:44:17Z"},
{"Line": "=>502", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player.hasMetadata(\"NPC\")) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2300/buggy-version/src.main.java.com.untamedears.JukeAlert.listener.JukeAlertListener.java", "BodyUseAPI": [], "Fixed commit": "a73b16440b0ad793069ab14512c4aea983e2d257", "Url": "https://api.github.com/repos/DevotedMC/JukeAlert", "Date": "2017-07-09T05:56:26Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Long, model.GroupTicket>.get(ticketsPair.getLeft())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (groupTicket != null) { boolean busy = false; for (model.Ticket ticket : this.groupTickets.get(ticketsPair.getLeft()).getTicket()) { busy = busy || (ticket.isBusy()); } if (!busy) { for (model.Ticket ticket : this.groupTickets.get(ticketsPair.getLeft()).getTicket()) { if ((!(ticket.isFinished())) && (ticket.getTicketId().equals(ticketsPair.getRight()))) { ticket.setBusy(true); service.setActualTicketId(ticket.getTicketId()); it.remove(); return ticket; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5174/buggy-version/backend.src.main.java.manager.MarketManager.java", "BodyUseAPI": [], "Fixed commit": "e2bf4c521762da973d52652b84661ea44dbbb225", "Url": "https://api.github.com/repos/migueltaoliveira/pepes-ticket", "Date": "2017-06-15T21:01:12Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.polimi.dima.roarify.server.dao.MessageDAO.getNearMessages(java.lang.Double,java.lang.Double)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (messages.get(i).getIsParent().equals(\"true\")) { filterMessages.add(messages.get(i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7324/buggy-version/src.it.polimi.dima.roarify.server.GetNearMessagesServlet.java", "BodyUseAPI": ["java.util.List<it.polimi.dima.roarify.server.model.Message>.add(messages.get(i))", "java.util.List<it.polimi.dima.roarify.server.model.Message>.get(int)"], "Fixed commit": "a6b9c9103355b849a498dd9ae1bcb3b32a8e26b8", "Url": "https://api.github.com/repos/jramirezc93/Roarify-Server", "Date": "2017-01-11T22:41:45Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jenkinsci.plugins.ghprb.Ghprb.extractTrigger(hudson.model.AbstractBuild<?, ?>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (trigger != null) { displayErrors = trigger.getDisplayBuildErrorsOnDownstreamBuilds(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1067/buggy-version/src.main.java.org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus.java", "BodyUseAPI": ["org.jenkinsci.plugins.ghprb.GhprbTrigger.getDisplayBuildErrorsOnDownstreamBuilds()"], "Fixed commit": "0fea8a57c59afe0b9e36aa4241a8d283baf4865b", "Url": "https://api.github.com/repos/demonyangyue/ghprb", "Date": "2016-03-02T10:46:29Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((consumerThread) != null) { consumerThread.interrupt(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/9257/buggy-version/src.main.java.com.pubnub.api.managers.SubscriptionManager.java", "BodyUseAPI": [], "Fixed commit": "b7a0701ced8d3d24eafefb08dcfce2991cc8c0c3", "Url": "https://api.github.com/repos/pubnub/java", "Date": "2017-11-16T14:03:44Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["taskContext.getScheduler().getResource(sf.net.experimaestro.manager.java.ResourceLocator)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (task.replace(old)) { taskContext.getLogger().info(java.lang.String.format(\"Overwriting resource [%s]\", task.getIdentifier())); }else { taskContext.getLogger().warn(\"Cannot override resource [%s]\", task.getIdentifier()); old.init(taskContext.getScheduler()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/918/buggy-version/server.src.main.java.sf.net.experimaestro.manager.java.JavaTask.java", "BodyUseAPI": ["sf.net.experimaestro.manager.java.CommandLineTask.getIdentifier()", "sf.net.experimaestro.manager.java.Resource.init(taskContext.getScheduler())", "sf.net.experimaestro.manager.java.CommandLineTask.getIdentifier()", "java.lang.String.format(java.lang.String,task.getIdentifier())", "taskContext.getLogger().warn(java.lang.String,task.getIdentifier())", "taskContext.getLogger().info(java.lang.String)"], "Fixed commit": "2769916af8b40414a8e4ad2b77e44c665fcac8af", "Url": "https://api.github.com/repos/bpiwowar/experimaestro", "Date": "2014-10-15T09:26:16Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (m.getCurrentAM().updateAchievement_whengotonextlevel()) { m.getCurrentAM().popUpScreen(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8365/buggy-version/src.playerController.CompleteLevelMove.java", "BodyUseAPI": ["playerController.CompleteLevelMove.getCurrentAM()", "m.getCurrentAM().popUpScreen()"], "Fixed commit": "8d3ba87077461c99904e48bbedba41f7a6a0525f", "Url": "https://api.github.com/repos/TuckerHaydon/Kabasuji-Cebriones", "Date": "2016-04-28T15:32:32Z"},
{"Line": "=>597", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<java.io.File>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (f.getName().endsWith(IndexConstants.BINARY_ROAD_MAP_INDEX_EXT)) { f.renameTo(new java.io.File(roadsPath, f.getName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4819/buggy-version/OsmAnd.src.net.osmand.plus.resources.ResourceManager.java", "BodyUseAPI": ["java.io.File.getName()", "java.io.File.renameTo(java.io.File)"], "Fixed commit": "79a3959a9fe7c03f140aceb5fdb8f38d38ed4cbc", "Url": "https://api.github.com/repos/Zahnstocher/Osmand", "Date": "2015-08-02T23:43:21Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (val > 255) { val = 255; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/9264/buggy-version/src.com.yahoo.platform.yui.compressor.CssCompressor.java", "BodyUseAPI": [], "Fixed commit": "6d5892c6bd765646583681e03b826d947fe9a11b", "Url": "https://api.github.com/repos/gencer/yuicompressor", "Date": "2013-05-03T16:25:08Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.runnerup.view.AudioCueSettingsActivity.3.getResources()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (prefs.getBoolean(res.getString(R.string.cueinfo_step_distance), false)) { feedback.add(new org.runnerup.workout.feedback.AudioFeedback(org.runnerup.workout.Scope.STEP, org.runnerup.workout.Dimension.DISTANCE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2839/buggy-version/src.org.runnerup.view.AudioCueSettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "306a82954eca198399192c36c8ade52614b0fe78", "Url": "https://api.github.com/repos/jonasoreland/runnerup", "Date": "2013-08-06T07:47:15Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.runnerup.view.AudioCueSettingsActivity.3.getResources()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (prefs.getBoolean(res.getString(R.string.cueinfo_step_pace), false)) { feedback.add(new org.runnerup.workout.feedback.AudioFeedback(org.runnerup.workout.Scope.STEP, org.runnerup.workout.Dimension.PACE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2839/buggy-version/src.org.runnerup.view.AudioCueSettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "306a82954eca198399192c36c8ade52614b0fe78", "Url": "https://api.github.com/repos/jonasoreland/runnerup", "Date": "2013-08-06T07:47:15Z"},
{"Line": "=>377", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.runnerup.view.AudioCueSettingsActivity.3.getResources()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (prefs.getBoolean(res.getString(R.string.cueinfo_step_time), false)) { feedback.add(new org.runnerup.workout.feedback.AudioFeedback(org.runnerup.workout.Scope.STEP, org.runnerup.workout.Dimension.TIME)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2839/buggy-version/src.org.runnerup.view.AudioCueSettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "306a82954eca198399192c36c8ade52614b0fe78", "Url": "https://api.github.com/repos/jonasoreland/runnerup", "Date": "2013-08-06T07:47:15Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.runnerup.view.AudioCueSettingsActivity.3.getResources()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((org.runnerup.workout.Dimension.SPEED_CUE_ENABLED) && (prefs.getBoolean(res.getString(R.string.cueinfo_step_speed), false))) { feedback.add(new org.runnerup.workout.feedback.AudioFeedback(org.runnerup.workout.Scope.STEP, org.runnerup.workout.Dimension.SPEED)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2839/buggy-version/src.org.runnerup.view.AudioCueSettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "306a82954eca198399192c36c8ade52614b0fe78", "Url": "https://api.github.com/repos/jonasoreland/runnerup", "Date": "2013-08-06T07:47:15Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (LOG.isTraceEnabled()) { for (java.lang.String value : values) { LOG.trace((((\"Field: \" + (field.name)) + \" has value: \") + value)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/525/buggy-version/src.java.main.esg.search.publish.validation.SchemaRecordValidator.java", "BodyUseAPI": ["org.apache.commons.logging.Log.trace(java.lang.String)"], "Fixed commit": "7ae441c7d2f970fc54ef9b2816aff0c835b8d6b8", "Url": "https://api.github.com/repos/ESGF/esg-search", "Date": "2013-05-28T14:06:54Z"},
{"Line": "=>648", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (clazz == (java.util.Currency.class)) { return ((T) (java.util.Currency.getInstance(strVal))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6147/buggy-version/src.main.java.com.alibaba.fastjson.util.TypeUtils.java", "BodyUseAPI": [], "Fixed commit": "3efe30e51a086804b6e8c80de3e7a69868e23893", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-04-13T11:32:22Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (message.startsWith(\"(\")) name = message.substring(1, message.indexOf(')')); else if (message.startsWith(\"[->\")) name = message.substring(3, message.indexOf(']')); else if (message.startsWith(\"[\")) name = message.substring(1, message.indexOf(']'));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4182/buggy-version/mpmp.src.cmds.ChatUpdate.java", "BodyUseAPI": ["java.lang.String.indexOf(char)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.indexOf(char)", "java.lang.String.indexOf(char)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)"], "Fixed commit": "dc6e57981a68222a0e94e2b7e0fda5bd436a4a3d", "Url": "https://api.github.com/repos/dieechtenilente/mpmp", "Date": "2016-07-11T20:12:59Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.maven.project.ProjectBuilder.build(org.apache.maven.model.building.ModelSource,org.apache.maven.project.ProjectBuildingRequest)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (((result != null) && ((result.getDependencyResolutionResult()) != null)) && (!(result.getDependencyResolutionResult().getCollectionErrors().isEmpty()))) { java.lang.Exception depedencyResolutionException = result.getDependencyResolutionResult().getCollectionErrors().get(0); if (depedencyResolutionException != null) throw new org.kie.scanner.embedder.MavenEmbedderException(depedencyResolutionException.getMessage(), depedencyResolutionException); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3665/buggy-version/kie-ci.src.main.java.org.kie.scanner.embedder.MavenEmbedder.java", "BodyUseAPI": ["result.getDependencyResolutionResult().getCollectionErrors().get(int)", "result.getDependencyResolutionResult().getCollectionErrors()", "org.apache.maven.project.ProjectBuildingResult.getDependencyResolutionResult()"], "Fixed commit": "65a561a009db9366f15db34d60bbe2c070d68ac7", "Url": "https://api.github.com/repos/droolsjbpm/drools", "Date": "2013-10-15T18:47:05Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.minecolonies.coremod.colony.CitizenData.getCitizenEntity()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (entityCitizen == null) { sender.addChatMessage(new net.minecraft.util.text.TextComponentTranslation(com.minecolonies.coremod.commands.CitizenInfoCommand.CITIZEN_NOT_LOADED)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5916/buggy-version/src.main.java.com.minecolonies.coremod.commands.CitizenInfoCommand.java", "BodyUseAPI": [], "Fixed commit": "3b65583684eb3ede0fa39b1af9dcecbdbd2180fe", "Url": "https://api.github.com/repos/ldtteam/minecolonies", "Date": "2017-02-05T17:16:49Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.minecolonies.coremod.colony.CitizenData.getCitizenEntity()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((entityCitizen.getWorkBuilding()) != null) { sender.addChatMessage(new net.minecraft.util.text.TextComponentString(java.lang.String.format(com.minecolonies.coremod.commands.CitizenInfoCommand.CITIZEN_JOB, entityCitizen.getWorkBuilding().getJobName()))); sender.addChatMessage(new net.minecraft.util.text.TextComponentString(java.lang.String.format(com.minecolonies.coremod.commands.CitizenInfoCommand.CITIZEN_DESIRED_ACTIVITY, entityCitizen.getDesiredActivity(), entityCitizen.getColonyJob().getNameTagDescription()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5916/buggy-version/src.main.java.com.minecolonies.coremod.commands.CitizenInfoCommand.java", "BodyUseAPI": ["com.minecolonies.coremod.entity.EntityCitizen.getColonyJob()", "entityCitizen.getWorkBuilding().getJobName()", "entityCitizen.getColonyJob().getNameTagDescription()", "java.lang.String.format(java.lang.String,entityCitizen.getDesiredActivity(),entityCitizen.getColonyJob().getNameTagDescription())", "com.minecolonies.coremod.entity.EntityCitizen.getDesiredActivity()", "net.minecraft.command.ICommandSender.addChatMessage(net.minecraft.util.text.TextComponentString)", "com.minecolonies.coremod.entity.EntityCitizen.getWorkBuilding()", "net.minecraft.command.ICommandSender.addChatMessage(net.minecraft.util.text.TextComponentString)", "java.lang.String.format(java.lang.String,entityCitizen.getWorkBuilding().getJobName())"], "Fixed commit": "3b65583684eb3ede0fa39b1af9dcecbdbd2180fe", "Url": "https://api.github.com/repos/ldtteam/minecolonies", "Date": "2017-02-05T17:16:49Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getY()) > ((mLayoutManager.getHeight()) / 2)) { swipeRefreshLayout.setRefreshing(true); new android.os.Handler().postDelayed(new java.lang.Runnable() { @java.lang.Override public void run() { isRefreshed = true; statusId = statuses.get(((statuses.size()) - 1)).getId(); new fr.gouv.etalab.mastodon.asynctasks.RetrieveFeedsAsyncTask(getApplicationContext(), RetrieveFeedsAsyncTask.Type.ONESTATUS, statusId, null, false, false, fr.gouv.etalab.mastodon.activities.ShowConversationActivity.this).executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR); } }, 1000); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6474/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.activities.ShowConversationActivity.java", "BodyUseAPI": [], "Fixed commit": "ca5fa4a2a24d8ae8ae0122078ca6570a85886936", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2017-10-29T09:55:20Z"},
{"Line": "=>612", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.rssmanager.core.config.RSSConfig.getPrivateKeyConfig()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (privateKeyConfig == null) { throw new org.wso2.carbon.rssmanager.core.exception.RSSManagerException((\"Please configure Private key information in \" + (org.wso2.carbon.rssmanager.common.RSSManagerConstants.RSS_CONFIG_XML_NAME))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/989/buggy-version/components.rss-manager.org.wso2.carbon.rssmanager.core.src.main.java.org.wso2.carbon.rssmanager.core.manager.impl.mysql.MySQLSystemRSSManager.java", "BodyUseAPI": [], "Fixed commit": "e6f4647db2ed65d744d930db2fee39d2e1b28f74", "Url": "https://api.github.com/repos/dhanuka84/carbon-storage-management", "Date": "2015-01-21T14:12:55Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (writeToSecLog) { context.put(\"writeSecLogMessage\", restListener.isWriteSecLogMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7571/buggy-version/core.src.main.java.nl.nn.adapterframework.http.RestServiceDispatcher.java", "BodyUseAPI": [], "Fixed commit": "21b5eb024b6dacc12007ecdb2913f9a4629bf88f", "Url": "https://api.github.com/repos/ibissource/iaf", "Date": "2016-07-22T12:43:15Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getPackageManager().getInstalledPackages(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (pkgs.get(i).packageName.equals(\"com.mmarvick.urgentcall_lite\")) { lite = true; }else if (pkgs.get(i).packageName.equals(\"com.mmarvick.urgentcall_pro\")) { pro = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/181/buggy-version/src.com.mmarvick.urgentcall.SimpleMainActivity.java", "BodyUseAPI": ["pkgs.get(i).packageName.equals(java.lang.String)", "java.util.List<android.content.pm.PackageInfo>.get(int)"], "Fixed commit": "2d4d7225b5532b2be8062a70e246c88aadcdd555", "Url": "https://api.github.com/repos/mmarvick/phone-alert-app", "Date": "2014-05-19T07:08:28Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mob.getWeapon()) != null) { index3 /= mob.getWeapon().getDamage().getMaxRoll(); }else { index3 /= 6; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7347/buggy-version/src.main.java.com.ivstuart.tmud.command.info.Consider.java", "BodyUseAPI": ["mob.getWeapon().getDamage()", "mob.getWeapon().getDamage().getMaxRoll()", "com.ivstuart.tmud.state.Mob.getWeapon()"], "Fixed commit": "77d4831c7d6cfca78fabb2e6718b657a850eb57e", "Url": "https://api.github.com/repos/ivstuart/tea-mud", "Date": "2016-09-04T13:43:24Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((y) > 0) { y = ((float) (((ty * (model.tile.Tile.height)) + (model.tile.Tile.height)) - (bounds.getY()))); }else { y = ty - 3; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8553/buggy-version/DebugRqFx.src.model.entity.Sprite.java", "BodyUseAPI": [], "Fixed commit": "e83f9fddea0d2d6d58f632b002b4fc708218134d", "Url": "https://api.github.com/repos/UTSA-CS-3443/Rowdy-Quest", "Date": "2017-11-15T22:35:39Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((x) > 0) { x = ((float) (((tx * (model.tile.Tile.width)) + (model.tile.Tile.width)) - (bounds.getX()))); }else { x = tx - 3; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8553/buggy-version/DebugRqFx.src.model.entity.Sprite.java", "BodyUseAPI": [], "Fixed commit": "e83f9fddea0d2d6d58f632b002b4fc708218134d", "Url": "https://api.github.com/repos/UTSA-CS-3443/Rowdy-Quest", "Date": "2017-11-15T22:35:39Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (post.isPublic()) { broadcaster.broadcastPost(postResponse); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1649/buggy-version/src.service.AddPostService.java", "BodyUseAPI": [], "Fixed commit": "5387b2199ed51b629b68a6843ab002cb9f832231", "Url": "https://api.github.com/repos/yjy0625/csci201-fp-server", "Date": "2017-11-21T09:46:16Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (db.verifyBeforeAdding(wallet)) { db.updateWallet(wallet); }else { db.addWallet(wallet); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/932/buggy-version/src.paymium.paytunia.scanbook.Scanbook.java", "BodyUseAPI": ["paymium.paytunia.scanbook.database.AddressListHandler.updateWallet(paymium.paytunia.scanbook.Wallet)", "paymium.paytunia.scanbook.database.AddressListHandler.addWallet(paymium.paytunia.scanbook.Wallet)"], "Fixed commit": "1bef2ad068fae6891b6bf402ce42eefa8f09d62c", "Url": "https://api.github.com/repos/Paymium/Scanbook-Android", "Date": "2012-08-08T21:59:57Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((userChoice[0]) > 0) simulateError(serverPort);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5184/buggy-version/src.ErrorSimulatorThread.java", "BodyUseAPI": [], "Fixed commit": "a1fd4493590dcda3c69b68fb42192164bc47a3df", "Url": "https://api.github.com/repos/severhussein/sysc3303", "Date": "2017-05-28T19:08:58Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(txtTemplateName.getText().isEmpty())) { _title = txtTemplateName.getText(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4211/buggy-version/src.net.sf.memoranda.ui.TaskTemplateDialog.java", "BodyUseAPI": ["javax.swing.JTextField.getText()"], "Fixed commit": "dbd9bdc5973be6d7bc2a1757b779f1201dce2e97", "Url": "https://api.github.com/repos/cst316/spring16project-Team-Flagstaff", "Date": "2016-02-23T09:34:53Z"},
{"Line": "=>782", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (timeoutMillis < 0) { delivery = consumer.nextDelivery(); }else { delivery = consumer.nextDelivery(timeoutMillis); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/620/buggy-version/spring-rabbit.src.main.java.org.springframework.amqp.rabbit.core.RabbitTemplate.java", "BodyUseAPI": ["com.rabbitmq.client.QueueingConsumer.nextDelivery(long)"], "Fixed commit": "59c327e940b3dbdaad24e0d19ebed7226a482363", "Url": "https://api.github.com/repos/xokker/spring-amqp", "Date": "2015-10-13T12:59:36Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (MaxSpeed != 0) speed = MaxSpeed;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/398/buggy-version/src.main.java.util.TravelTimeCalculationUtil.java", "BodyUseAPI": [], "Fixed commit": "0e4560a3626571717d4cf89bb19c871d2af00a88", "Url": "https://api.github.com/repos/simonpetersen/IntelligentTraffic", "Date": "2017-12-22T11:29:15Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Path.resolve(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (java.nio.file.Files.notExists(logConfigFile)) { org.tiogasolutions.app.common.LogUtils.log.warn(\"Missing {}, using default config\", logConfigFile.toString()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8535/buggy-version/tioga-app-common.src.main.java.org.tiogasolutions.app.common.LogUtils.java", "BodyUseAPI": ["java.nio.file.Path.toString()", "ch.qos.logback.classic.Logger.warn(java.lang.String,java.lang.String)"], "Fixed commit": "90c620dba4b8b788146f6e6bb3c935de98913275", "Url": "https://api.github.com/repos/tioga/app", "Date": "2015-05-04T17:33:50Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((methodToParsedBodyMap) == null) { synchronized(this) { if ((methodToParsedBodyMap) == null) stashBodiesForClass(m.getDeclaringClass()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6521/buggy-version/src.soot.jimple.parser.JimpleAST.java", "BodyUseAPI": [], "Fixed commit": "6666a5926812456c88ca1272cf8a804d1c718929", "Url": "https://api.github.com/repos/Sable/soot", "Date": "2016-03-22T16:07:13Z"},
{"Line": "=>623", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < 18) startForeground(ViPER4Android.NOTIFY_FOREGROUND_ID, new android.app.Notification());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/807/buggy-version/android_4.x.src.com.vipercn.viper4android.service.HeadsetService.java", "BodyUseAPI": [], "Fixed commit": "7d82d9a3f9e9f1b71b047e92fe933f2d3df4477f", "Url": "https://api.github.com/repos/mapleshadow/viper4android_fx", "Date": "2013-09-04T14:27:21Z"},
{"Line": "=>672", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < 18) stopForeground(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/807/buggy-version/android_4.x.src.com.vipercn.viper4android.service.HeadsetService.java", "BodyUseAPI": [], "Fixed commit": "7d82d9a3f9e9f1b71b047e92fe933f2d3df4477f", "Url": "https://api.github.com/repos/mapleshadow/viper4android_fx", "Date": "2013-09-04T14:27:21Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((crouton.getActivity()) != null) && ((crouton.getView()) != null)) && ((crouton.getView().getParent()) != null)) { ((android.view.ViewGroup) (crouton.getView().getParent())).removeView(crouton.getView()); removeAllMessagesForCrouton(crouton); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2684/buggy-version/library.src.de.keyboardsurfer.android.widget.crouton.Manager.java", "BodyUseAPI": ["de.keyboardsurfer.android.widget.crouton.Crouton.getView()", "((android.view.ViewGroup) (crouton.getView().getParent())).removeView(crouton.getView())", "de.keyboardsurfer.android.widget.crouton.Manager.removeAllMessagesForCrouton(de.keyboardsurfer.android.widget.crouton.Crouton)", "de.keyboardsurfer.android.widget.crouton.Crouton.getView()", "crouton.getView().getParent()"], "Fixed commit": "3660d4ab8487701b51ec0e2600ec7ada56ea70d8", "Url": "https://api.github.com/repos/chrisjenx/Crouton", "Date": "2012-12-15T16:28:11Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sub == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5621/buggy-version/src.main.java.org.tariel.pla.logics.ConjunctionContainer.java", "BodyUseAPI": [], "Fixed commit": "9715dd4c2996be602acb022c6644a0bd9b8a8a11", "Url": "https://api.github.com/repos/tariel-x/PLA", "Date": "2015-04-21T21:11:39Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (sub != null) sub_strs.add(sub.toStrRepresentation());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5621/buggy-version/src.main.java.org.tariel.pla.logics.ConjunctionContainer.java", "BodyUseAPI": ["org.tariel.pla.logics.IFunction.toStrRepresentation()", "java.util.List<java.lang.String>.add(sub.toStrRepresentation())"], "Fixed commit": "9715dd4c2996be602acb022c6644a0bd9b8a8a11", "Url": "https://api.github.com/repos/tariel-x/PLA", "Date": "2015-04-21T21:11:39Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.openflexo.toolbox.StringUtils.isNotEmpty(text)) { if (numberNextParagraph) { text = ((numberingString) + \" \") + text; numberNextParagraph = false; } document.insertString(currentOffset, text, charAttrs); currentOffset += text.length(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4443/buggy-version/flexo-documentation-ui.src.main.java.org.openflexo.components.doc.editorkit.FlexoDocumentEditorFactory.java", "BodyUseAPI": [], "Fixed commit": "81f308b0ae7505bf94f2021c7da19907f398a5e9", "Url": "https://api.github.com/repos/openflexo-team/openflexo-core", "Date": "2017-03-27T06:28:09Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((authorIdList == null) || ((authorIdList.size()) == 0)) return new java.util.ArrayList<>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/9106/buggy-version/src.main.java.com.pratilipi.data.util.AuthorDataUtil.java", "BodyUseAPI": [], "Fixed commit": "18ece2b561edb9e01f7edf64fef8160502a5ee0c", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2017-11-20T11:21:32Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (c > 0) { this.GPA = ((double) (qscore_total / (credits))); java.lang.Math.rint(this.GPA); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7332/buggy-version/assignments.Student.java", "BodyUseAPI": [], "Fixed commit": "5e9204c30e2e4135d2f4c4ce297fd5ae7d6d4f77", "Url": "https://api.github.com/repos/gfike19/java-oo-exercises", "Date": "2016-10-20T20:35:56Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mGroups.get(groupPosition)) != null) mListener.onDeleteBpmClick(mGroups.get(groupPosition).children.get(childPosition).getId(), groupPosition, childPosition);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7751/buggy-version/app.src.main.java.fr.machada.bpm.pro.view.HistoryFragment.java", "BodyUseAPI": ["fr.machada.bpm.pro.view.HistoryFragment.ItemSelectedListener.onDeleteBpmClick(mGroups.get(groupPosition).children.get(childPosition).getId(),int,int)", "mGroups.get(groupPosition).children.get(childPosition).getId()", "android.util.SparseArray<fr.machada.bpm.pro.model.Group>.get(int)", "mGroups.get(groupPosition).children.get(int)"], "Fixed commit": "5bf221079244a9f6ca697717bba2166359e2b294", "Url": "https://api.github.com/repos/chillcoding-at-the-beach/bachamada", "Date": "2016-02-26T16:43:31Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((caminhoFoto != null) && (!(caminhoFoto.isEmpty()))) { java.io.File file = new java.io.File(caminhoFoto); if (file.exists()) { android.graphics.Bitmap bitmap = android.graphics.BitmapFactory.decodeFile(caminhoFoto); android.graphics.Bitmap bitmapReduzido = android.graphics.Bitmap.createScaledBitmap(bitmap, 200, 200, true); campoFoto.setImageBitmap(bitmapReduzido); campoFoto.setScaleType(ImageView.ScaleType.FIT_XY); campoFoto.setTag(caminhoFoto); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2960/buggy-version/app.src.main.java.com.example.droid02.appevento.helpers.FormularioHelper.java", "BodyUseAPI": ["android.widget.ImageView.setTag(java.lang.String)", "android.graphics.BitmapFactory.decodeFile(java.lang.String)"], "Fixed commit": "a09632ba2c4d7bb360de6e1b096162c0b0e9a072", "Url": "https://api.github.com/repos/faelp22/appEvento", "Date": "2016-07-11T16:29:48Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.get(HTTP.CONTENT_TYPE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (trpContentType.contains(\"boundary=\")) { addHeader(HTTP.CONTENT_TYPE, trpContentType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4015/buggy-version/modules.transports.core.nhttp.src.main.java.org.apache.synapse.transport.passthru.TargetRequest.java", "BodyUseAPI": ["org.apache.synapse.transport.passthru.TargetRequest.addHeader(HTTP.CONTENT_TYPE,java.lang.String)"], "Fixed commit": "e180917e0e36fc7259b86abb0d6efc06cfde3f02", "Url": "https://api.github.com/repos/wso2/wso2-synapse", "Date": "2017-11-17T07:19:35Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getActivity().getContentResolver().query(android.net.Uri,java.lang.String[],java.lang.String,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((countCursor == null) || ((countCursor.getCount()) == 0)) { choiceDialog.cancel(); android.widget.Toast.makeText(getActivity(), getString(R.string.scan_error_no_content), Toast.LENGTH_LONG).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6066/buggy-version/QuickLyric.src.main.java.com.geecko.QuickLyric.fragment.LocalLyricsFragment.java", "BodyUseAPI": [], "Fixed commit": "2d9b0d755c8c325283ba39c1487ebf657da05c6c", "Url": "https://api.github.com/repos/QuickLyric/QuickLyric", "Date": "2015-03-20T08:47:07Z"},
{"Line": "=>724", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.dotmarketing.db.DbConnectionFactory.isMsSql()) query.append(\" lower(cast(workflow_task.description as varchar(max))) like ? ) and \"); else query.append(\" lower(workflow_task.description) like ? ) and \");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/154/buggy-version/src.com.dotmarketing.portlets.workflows.business.WorkflowFactoryImpl.java", "BodyUseAPI": [], "Fixed commit": "c39ef976687274dbc7a94c38d897fbef8d332968", "Url": "https://api.github.com/repos/dotCMS/dotCMS", "Date": "2013-09-23T19:51:29Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (T == 0) { return T; }else { T -= step; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8639/buggy-version/SOP-Solver.src.simulatedAnnealing.sa.java", "BodyUseAPI": [], "Fixed commit": "25ef05a3ddd492fc7086de66ee2a6bdf05b747a9", "Url": "https://api.github.com/repos/dalu2104/SOP-Solver", "Date": "2017-12-13T17:23:46Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getHeader(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (referer == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7509/buggy-version/src.main.java.org.thiki.kanban.foundation.filter.CORSFilter.java", "BodyUseAPI": [], "Fixed commit": "6fbb013e2a480f28c394c74d8ab9f2e38c546e0c", "Url": "https://api.github.com/repos/thiki-org/thiki-kanban-backend", "Date": "2016-11-22T13:07:02Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (request.getNickname().equals(\"Auto\")) request.setNickname(authentication.getName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7690/buggy-version/marriagerummy.src.main.java.com.adansoft.great21.controllers.FacadeGameBrowserController.java", "BodyUseAPI": ["com.adansoft.great21.restschemas.RemovePlayerRequest.setNickname(authentication.getName())"], "Fixed commit": "ca460acc710bdb8e71ae82070c135780bfa993fa", "Url": "https://api.github.com/repos/AHariharan/Great21", "Date": "2015-01-07T08:43:56Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.adansoft.great21.helpers.UtilityHelper.getGamefromLobby(com.adansoft.great21.games.GameLobby,request.getGameInstanceID(),request.getGameType())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(request.getRequestedby().equals(game.getOwner()))) && (!(request.getRequestedby().equals(request.getNickname())))) { result = \"Failure not enough previlges\"; return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7690/buggy-version/marriagerummy.gamemanagers.src.main.java.com.adansoft.great21.helpers.GameBrowserHelper.java", "BodyUseAPI": [], "Fixed commit": "ca460acc710bdb8e71ae82070c135780bfa993fa", "Url": "https://api.github.com/repos/AHariharan/Great21", "Date": "2015-01-07T08:43:56Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((((dateParts.length) == 3) && (org.apache.commons.lang.StringUtils.isNumeric(dateParts[0]))) && (org.apache.commons.lang.StringUtils.isNumeric(dateParts[1]))) && (org.apache.commons.lang.StringUtils.isNumeric(dateParts[2]))) || ((((dateParts.length) == 2) && (org.apache.commons.lang.StringUtils.isNumeric(dateParts[0]))) && (org.apache.commons.lang.StringUtils.isNumeric(dateParts[1])))) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1619/buggy-version/src.main.java.edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet.java", "BodyUseAPI": [], "Fixed commit": "b87cc67ca3b29fd9e0ec19c4830763e6202722e8", "Url": "https://api.github.com/repos/forkunited/micro-mid", "Date": "2016-02-09T18:54:49Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSupportActionBar()) != null) getSupportActionBar().setDisplayHomeAsUpEnabled(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7647/buggy-version/app.src.main.java.easterndroids.xperience.XperienceActivity.java", "BodyUseAPI": [], "Fixed commit": "9d384bbe89890712756ff899eb5d28f38958b910", "Url": "https://api.github.com/repos/easterndroids/Xperience", "Date": "2016-11-10T21:01:55Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((map.getMapTile(currentTile).treasure) != null) { if (map.getMapTile(currentTile).treasure.found) { if (View.GUI.lootChoices()) { Model.PlayerActions.loot(player, map, cheating, map.getMapTile(currentTile).treasure, map.getMapTile(currentTile).treasure.shinies); }else { Model.PlayerActions.loot(player, map, cheating, map.getMapTile(currentTile).clearing[currentClearing].getPlayerDrop(), map.getMapTile(currentTile).clearing[currentClearing].getPlayerDrop().belongings); } }else { Model.PlayerActions.loot(player, map, cheating, map.getMapTile(currentTile).clearing[currentClearing].getPlayerDrop(), map.getMapTile(currentTile).clearing[currentClearing].getPlayerDrop().belongings); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2216/buggy-version/Code.src.Model.PlayerActions.java", "BodyUseAPI": ["Model.Map.getMapTile(int)", "Model.PlayerActions.loot(Control.Player,Model.Map,boolean,map.getMapTile(currentTile).clearing[currentClearing].getPlayerDrop(),map.getMapTile(currentTile).clearing[currentClearing].getPlayerDrop().belongings)", "Model.Map.getMapTile(int)", "Model.Map.getMapTile(int)", "map.getMapTile(currentTile).clearing[currentClearing].getPlayerDrop()", "Model.Map.getMapTile(int)", "Model.Map.getMapTile(int)", "Model.PlayerActions.loot(Control.Player,Model.Map,boolean,map.getMapTile(currentTile).treasure,map.getMapTile(currentTile).treasure.shinies)", "map.getMapTile(currentTile).clearing[currentClearing].getPlayerDrop()", "map.getMapTile(currentTile).clearing[currentClearing].getPlayerDrop()", "Model.Map.getMapTile(int)", "map.getMapTile(currentTile).clearing[currentClearing].getPlayerDrop()", "Model.Map.getMapTile(int)", "Model.PlayerActions.loot(Control.Player,Model.Map,boolean,map.getMapTile(currentTile).clearing[currentClearing].getPlayerDrop(),map.getMapTile(currentTile).clearing[currentClearing].getPlayerDrop().belongings)"], "Fixed commit": "0c3e9106ff84695375846f77fb31d6a58acaedfe", "Url": "https://api.github.com/repos/christophersayyeau/3004MagicRealm", "Date": "2015-04-08T18:05:47Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((map.getMapTile(currentTile).treasure) != null) { if (map.getMapTile(currentTile).treasure.found) { Model.PlayerActions.loot(player, map, cheating, map.getMapTile(currentTile).treasure, map.getMapTile(currentTile).treasure.shinies); }else { java.lang.System.out.println(\"Havent Found the treasure yet\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2216/buggy-version/Code.src.Model.PlayerActions.java", "BodyUseAPI": ["Model.PlayerActions.loot(Control.Player,Model.Map,boolean,map.getMapTile(currentTile).treasure,map.getMapTile(currentTile).treasure.shinies)", "Model.Map.getMapTile(int)", "Model.Map.getMapTile(int)", "Model.Map.getMapTile(int)"], "Fixed commit": "0c3e9106ff84695375846f77fb31d6a58acaedfe", "Url": "https://api.github.com/repos/christophersayyeau/3004MagicRealm", "Date": "2015-04-08T18:05:47Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (validateInput()) { signInButtonNormal.setEnabled(true); }else { signInButtonNormal.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/653/buggy-version/app.src.main.java.com.liteon.icampusguardian.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "a2d2f089bbc52bdcb92f7e0faad2a9fcc38781fa", "Url": "https://api.github.com/repos/tel3342311/ICG", "Date": "2017-10-20T09:15:59Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ex.getCause()) instanceof java.io.IOException) throw new java.io.IOException(ex); else throw new org.apache.hadoop.security.authentication.client.AuthenticationException(ex);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2598/buggy-version/hadoop-common-project.hadoop-auth.src.main.java.org.apache.hadoop.security.authentication.client.KerberosAuthenticator.java", "BodyUseAPI": [], "Fixed commit": "daab9b8808e74f6d2b825ac571f373d4d58f879d", "Url": "https://api.github.com/repos/kavyasmj/hadoop2.3", "Date": "2017-10-07T09:03:52Z"},
{"Line": "=>377", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dataUnderFlow > 0) { buf.limit(datalen); int len = fcInput.read(buf); if (len < dataUnderFlow) { org.kvstore.io.FileStreamStore.log.error((((\"Unable to read payload readed=\" + len) + \" expected=\") + dataUnderFlow)); return -1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5136/buggy-version/src.main.java.org.kvstore.io.FileStreamStore.java", "BodyUseAPI": ["org.apache.log4j.Logger.error(java.lang.String)"], "Fixed commit": "07a183ff9010ca688ea2e7cf40bbd2a07a34d1c3", "Url": "https://api.github.com/repos/ggrandes/kvstore", "Date": "2013-08-12T19:12:11Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dataUnderFlow >= 0) { bufInput.clear(); bufInput.limit(org.kvstore.io.FileStreamStore.FOOTER_LEN); if ((fcInput.read(bufInput)) < (org.kvstore.io.FileStreamStore.FOOTER_LEN)) return -1; bufInput.flip(); footer = bufInput.get(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5136/buggy-version/src.main.java.org.kvstore.io.FileStreamStore.java", "BodyUseAPI": [], "Fixed commit": "07a183ff9010ca688ea2e7cf40bbd2a07a34d1c3", "Url": "https://api.github.com/repos/ggrandes/kvstore", "Date": "2013-08-12T19:12:11Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((types[i]) == (ar.util.MemMapEncoder.TYPE.CHAR)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8815/buggy-version/java.core.ar.util.MemMapEncoder.java", "BodyUseAPI": [], "Fixed commit": "d36ef9c2f84328981ee716f1e9ec9e94a6a6d291", "Url": "https://api.github.com/repos/JosephCottam/AbstractRendering", "Date": "2013-10-31T20:02:55Z"},
{"Line": "=>3076", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fileTab.getSelectedIndex()) >= 0) { saveAs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4884/buggy-version/DomainMathIDE.src.org.domainmath.gui.MainFrame.java", "BodyUseAPI": [], "Fixed commit": "18766be27ac352252499cba641e02561ea068cc2", "Url": "https://api.github.com/repos/vinukn/domainmath-ide", "Date": "2013-05-22T12:17:16Z"},
{"Line": "=>460", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (scanForTextualInformation(ele, untaggedContent.toString())) { untaggedContent = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8654/buggy-version/step-core.src.main.java.com.tyndalehouse.step.core.xsl.impl.InterlinearProviderImpl.java", "BodyUseAPI": [], "Fixed commit": "92b0e0f94b1cf18fda20855e440c88eb8b766faf", "Url": "https://api.github.com/repos/tyndale/step", "Date": "2015-03-05T21:46:24Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((new net.sf.orcc.backends.c.hls.TopVhdlPrinter(network, options).print(srcPath)) > 0) { net.sf.orcc.util.OrccLogger.traceRaw(\"Cached\\n\"); }else { net.sf.orcc.util.OrccLogger.traceRaw(\"Done\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7376/buggy-version/eclipse.plugins.net.sf.orcc.backends.src.net.sf.orcc.backends.c.hls.HLSBackend.java", "BodyUseAPI": [], "Fixed commit": "1bee3208ce68e77e3ecfbe769d20a8d126d2bff4", "Url": "https://api.github.com/repos/orcc/orcc", "Date": "2013-01-14T18:02:33Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i == ((words.length) - 1)) { notLastWord = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5462/buggy-version/voicePlusPlus-sphinx4.src.main.java.voicePlusPlus.voicePlusPlus_sphinx4.App.java", "BodyUseAPI": [], "Fixed commit": "e4e510227dabf32c41f6d9a780631996787e6ba1", "Url": "https://api.github.com/repos/pkhachatrian/voicePlusPlus", "Date": "2015-04-01T22:01:38Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeQuery()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (resultSet.next()) { return new org.develnext.jphp.ext.sql.classes.PSqlResult(env, resultSet); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6074/buggy-version/jphp-sql-ext.src.main.java.org.develnext.jphp.ext.sql.classes.PSqlStatement.java", "BodyUseAPI": [], "Fixed commit": "b0bf732f5a82011edcbf33f3007516616b45c4de", "Url": "https://api.github.com/repos/jphp-group/jphp", "Date": "2016-07-08T10:02:16Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((splitStr.length) > 1) { remoteEnvMap.put(splitStr[0], splitStr[1]); }else if ((splitStr.length) == 1) { remoteEnvMap.put(splitStr[0], \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5780/buggy-version/org.eclipse.ptp.rdt.sync.core.src.org.eclipse.ptp.rdt.sync.core.remotemake.SyncCommandLauncher.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "ad75cea21089057d0299b300a3bacdb3079c6064", "Url": "https://api.github.com/repos/rolandschulz/PTP", "Date": "2011-06-15T13:38:12Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x < 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8608/buggy-version/palindromeNumber.PalindromeNumber.java", "BodyUseAPI": [], "Fixed commit": "c711e4d7c4213300eb91ed417c247c9461a2e5da", "Url": "https://api.github.com/repos/Interregnum/java", "Date": "2014-07-29T03:13:12Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Workbook.getSheetAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((sheet.getRow((c + 1))) != null) { sheet.shiftRows((c + 1), sheet.getLastRowNum(), (-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5768/buggy-version/src.ExcelEmailBuilder.java", "BodyUseAPI": ["Sheet.shiftRows(int,sheet.getLastRowNum(),int)", "Sheet.getLastRowNum()"], "Fixed commit": "bcf5e3bd7aa737210f0e3ac15340ba983a71806c", "Url": "https://api.github.com/repos/EsteMac/linkedin-list-builder", "Date": "2016-05-01T01:41:40Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Workbook.getSheetAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (r != (sheet.getLastRowNum())) { sheet.removeRow(row); sheet.shiftRows((r + 1), sheet.getLastRowNum(), (-1)); }else { sheet.removeRow(row); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5768/buggy-version/src.ExcelEmailBuilder.java", "BodyUseAPI": ["Sheet.shiftRows(int,sheet.getLastRowNum(),int)", "Sheet.removeRow(Row)", "Sheet.removeRow(Row)", "Sheet.getLastRowNum()"], "Fixed commit": "bcf5e3bd7aa737210f0e3ac15340ba983a71806c", "Url": "https://api.github.com/repos/EsteMac/linkedin-list-builder", "Date": "2016-05-01T01:41:40Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((n) < (BATCH_SIZE)) { n += inTasksQueue.drainTo(ioTasks, ((BATCH_SIZE) - (n))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6168/buggy-version/storage.driver.base.src.main.java.com.emc.mongoose.storage.driver.base.StorageDriverBase.java", "BodyUseAPI": ["java.util.concurrent.BlockingQueue<O>.drainTo(java.util.List<O>,((BATCH_SIZE) - (n)))"], "Fixed commit": "374dd11cf62c104784875e75e91dc309320e9129", "Url": "https://api.github.com/repos/emc-mongoose/mongoose", "Date": "2017-01-10T21:56:32Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(configBean.isFixedNumberOfInputs())) { numberOfInputsField.setText(((numberOfInputs) + \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/556/buggy-version/stilts-activity-ui.src.main.java.net.sf.taverna.t2.activities.stilts.ui.config.MultipleInputsConfigurationPanel.java", "BodyUseAPI": [], "Fixed commit": "28f379ebdb914d84f2b4809f57c1bfa8d022f236", "Url": "https://api.github.com/repos/Christian-B/StiltsActivity", "Date": "2014-03-05T21:52:25Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (expr instanceof org.nlpcn.es4sql.SQLIntegerExpr) { return ((org.nlpcn.es4sql.SQLIntegerExpr) (expr)).getValue(); }else if (expr instanceof org.nlpcn.es4sql.SQLNumericLiteralExpr) { return ((org.nlpcn.es4sql.SQLNumericLiteralExpr) (expr)).getNumber(); }else if (expr instanceof org.nlpcn.es4sql.SQLNullExpr) { return ((org.nlpcn.es4sql.SQLNullExpr) (expr)).toString().toLowerCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6701/buggy-version/src.main.java.org.nlpcn.es4sql.Util.java", "BodyUseAPI": [], "Fixed commit": "6b5c2d0c1765a327820ba1773f0c3b00c2743626", "Url": "https://api.github.com/repos/jasonliaoPATHoge/elasticsearch-sql", "Date": "2016-11-01T03:29:40Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.tagsToAdd) != null) { tagListToEdit = itemToReplace.getTags(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3879/buggy-version/src.main.java.seedu.taskmanager.logic.commands.EditCommand.java", "BodyUseAPI": [], "Fixed commit": "9c01932e0432b7561932a7ab60260fc6cb81eece", "Url": "https://api.github.com/repos/CS2103AUG2016-T14-C3/main", "Date": "2016-10-17T12:56:48Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state.getValue(net.tropicraft.core.common.block.BlockTropicraftLog.VARIANT)) == (net.tropicraft.core.common.enums.TropicraftLogs.PALM)) net.tropicraft.core.common.block.BlockTropicraftLog.spawnCoconuts(world, pos, rand, 10);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/719/buggy-version/src.main.java.net.tropicraft.core.common.block.BlockTropicraftLog.java", "BodyUseAPI": [], "Fixed commit": "dd4398b38b837240278b15fb0129b8e7f0e35359", "Url": "https://api.github.com/repos/cbaakman/Tropicraft", "Date": "2017-03-18T13:27:11Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((evt.getWheelRotation()) <= (-1)) { int iNewValue = (selectedScrollBar.getValue()) - valMoved; if (iNewValue >= (selectedScrollBar.getMinimum())) { selectedScrollBar.setValue(iNewValue); }else selectedScrollBar.setValue(selectedScrollBar.getMinimum()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4232/buggy-version/src.semgen.utilities.uicomponent.SemGenScrollPane.java", "BodyUseAPI": [], "Fixed commit": "1f8fccb4478c9dce136eef83bdce85dc466dc88b", "Url": "https://api.github.com/repos/SemBioProcess/SemGen", "Date": "2015-07-09T16:46:13Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(left.getType().getJavaType().isPrimitive())) && (!(right.getType().getJavaType().isPrimitive()))) { io.collap.bryg.compiler.type.Type leftUnboxed = io.collap.bryg.compiler.util.BoxingUtil.unboxType(left.getType()); io.collap.bryg.compiler.type.Type rightUnboxed = io.collap.bryg.compiler.util.BoxingUtil.unboxType(right.getType()); if ((leftUnboxed == null) && (rightUnboxed == null)) { return new io.collap.bryg.compiler.util.Pair(left, right); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3427/buggy-version/src.main.java.io.collap.bryg.compiler.util.CoercionUtil.java", "BodyUseAPI": ["io.collap.bryg.compiler.util.BoxingUtil.unboxType(right.getType())", "io.collap.bryg.compiler.ast.expression.Expression.getType()", "io.collap.bryg.compiler.ast.expression.Expression.getType()", "io.collap.bryg.compiler.util.BoxingUtil.unboxType(left.getType())"], "Fixed commit": "6b69adc3c50cfff817134eca4c7d6b3fca66771f", "Url": "https://api.github.com/repos/Collap/bryg", "Date": "2014-10-13T21:02:00Z"},
{"Line": "=>432", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stip.times.size()) == 0) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3885/buggy-version/src.main.java.org.opentripplanner.api.resource.GraphPathToTripPlanConverter.java", "BodyUseAPI": [], "Fixed commit": "bc3fdd93af386968cd8837b26c53dc048bdab347", "Url": "https://api.github.com/repos/camsys/OpenTripPlanner", "Date": "2016-12-07T21:36:43Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hrtf) != null) hrtf.Stop3D();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6191/buggy-version/yv3DAudio.src.tk.yvbb.yv3daudio.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "f347788291a3e58fd3f4f016df4510961b00ad49", "Url": "https://api.github.com/repos/yvbbrjdr/yv3A-android", "Date": "2015-12-19T05:33:09Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((cluster.getMembers()) == null) || ((cluster.getMembers().size()) == 0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5035/buggy-version/extensions.load-balancer.lvs-extension.src.main.java.org.apache.stratos.lvs.extension.LVSConfigWriter.java", "BodyUseAPI": [], "Fixed commit": "31cbfd5166ab187bfa50038d2233e82fa6f6c34e", "Url": "https://api.github.com/repos/ravihansa3000/stratos", "Date": "2015-08-28T13:11:05Z"},
{"Line": "=>588", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (environment.containsKey(v.var)) { blk.add(wyc.stages.Code.Store(Type.T_ANY, environment.get(v.var)), s.attribute(Attribute.Source.class)); }else { int idx = environment.size(); environment.put(v.var, idx); blk.add(wyc.stages.Code.Store(Type.T_ANY, idx), s.attribute(Attribute.Source.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3352/buggy-version/src.wyc.stages.ModuleBuilder.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Integer>.put(v.var,int)", "java.util.HashMap<java.lang.String, java.lang.Integer>.size()", "java.util.HashMap<java.lang.String, java.lang.Integer>.get(v.var)", "wyc.stages.Code.Store(Type.T_ANY,java.lang.Integer)", "wyc.stages.Block.add(wyc.stages.Code.Store(Type.T_ANY, environment.get(v.var)),s.attribute(Attribute.Source.class))"], "Fixed commit": "dc33b397b742c569fd8c80f3108f37652dd19e1c", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-05-31T22:17:21Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (main.board.piece.King.checkCastleKing(false, board)) { moves.add(new main.board.piece.XY(6, 7)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5182/buggy-version/src.main.board.piece.King.java", "BodyUseAPI": [], "Fixed commit": "15d1e2de3dc854c6529a2708766a916e22cd8d4f", "Url": "https://api.github.com/repos/bradleymoore111/chess-engine", "Date": "2015-08-14T18:22:57Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.vxquery.runtime.functions.json.LibjnAccumulateScalarEvaluator.takeOne(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((tempTvp.getTag()) == (org.apache.vxquery.datamodel.values.ValueTag.OBJECT_TAG)) { tempTvp.getValue(op); op.getKeys(tempTvp); addPairs(tempTvp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5033/buggy-version/vxquery-core.src.main.java.org.apache.vxquery.runtime.functions.json.LibjnAccumulateScalarEvaluator.java", "BodyUseAPI": ["org.apache.vxquery.runtime.functions.json.LibjnAccumulateScalarEvaluator.addPairs(org.apache.vxquery.datamodel.accessors.TaggedValuePointable)", "org.apache.vxquery.datamodel.accessors.jsonitem.ObjectPointable.getKeys(org.apache.vxquery.datamodel.accessors.TaggedValuePointable)", "org.apache.vxquery.datamodel.accessors.TaggedValuePointable.getValue(org.apache.vxquery.datamodel.accessors.jsonitem.ObjectPointable)"], "Fixed commit": "615371564029d93985cdf24245d1ddaa65d35b1e", "Url": "https://api.github.com/repos/riyafa/vxquery", "Date": "2016-07-30T05:42:50Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(bookName.equals(\"ohio_prof_resp\"))) { ruleNumber = ((test % 1) == 0) ? java.lang.Integer.toString(test.intValue()) : java.lang.Double.toString(test); }else { ruleNumber = java.lang.Double.toString(test); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4242/buggy-version/app.src.main.java.org.seols.ohiolegalservicesassistant.RulesDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "b2318bed2739f7991f45871e3027f14a4423a26c", "Url": "https://api.github.com/repos/OSLSA/ohio_legal_services_assistant_android", "Date": "2017-03-23T00:16:04Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dir == null) { throw new java.lang.IllegalArgumentException(\"null pointer\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5490/buggy-version/src.ru.fizteh.fivt.students.akhtyamovpavel.databaselibrary.DataBaseTableProviderFactory.java", "BodyUseAPI": [], "Fixed commit": "69f7638d450622a0a7e9f4ce44bc956f6db931f2", "Url": "https://api.github.com/repos/dkomanov/fizteh-java-2014", "Date": "2014-11-10T19:09:35Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (staticFile.isDirectory()) { if (new java.io.File(staticFile, \"index.html\").exists()) response.sendRedirect((fullPath + \"/index.html\")); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3563/buggy-version/qwazr-webapps.src.main.java.com.qwazr.webapps.StaticFileServlet.java", "BodyUseAPI": ["java.io.File.exists()"], "Fixed commit": "282ca810ef5ea0376ad30c48c6106655e49cc726", "Url": "https://api.github.com/repos/qwazr/QWAZR", "Date": "2016-08-17T12:39:49Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (field.isMarkForMobileField()) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5864/buggy-version/app.src.main.java.org.unicef.rapidreg.widgets.viewholder.BaseViewHolder.java", "BodyUseAPI": [], "Fixed commit": "30b21852f3db2dac687b503d05f80be0deabb195", "Url": "https://api.github.com/repos/UnicefNY/RapidReg", "Date": "2016-07-18T08:04:59Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.RadioGroup.getCheckedRadioButtonId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (languageID != (-1)) { com.example.nspace.museedesondes.Model.Preferences.setLocale(langSelected); com.example.nspace.museedesondes.Model.Preferences.savePreferences(langSelected); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6215/buggy-version/MuseeDesOndes.app.src.main.java.com.example.nspace.museedesondes.Settings.java", "BodyUseAPI": [], "Fixed commit": "2d246e56f01c7d3ad2aeb21752c5c5c80599efde", "Url": "https://api.github.com/repos/mv740/390-E-Wok", "Date": "2016-02-06T04:55:08Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((busInfo) == null) { throw new dat255.chalmers.stormystreet.model.bus.BusNotFoundException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8421/buggy-version/app.src.main.java.dat255.chalmers.stormystreet.controller.BusInfoActivity.java", "BodyUseAPI": [], "Fixed commit": "dc2260d6b97dc1741e69d8a88ca43d1841e93dc1", "Url": "https://api.github.com/repos/signal-unknown/stormy-street", "Date": "2015-10-06T00:05:23Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isFinishing())) { toolbar.setTitle((((getString(R.string.bus)) + \" \") + (dat255.chalmers.stormystreet.Constants.vinToRegNr(busInfo.getDgwNumber())))); new java.lang.Thread(new dat255.chalmers.stormystreet.controller.BusInfoActivity.UpdateInfo()).start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8421/buggy-version/app.src.main.java.dat255.chalmers.stormystreet.controller.BusInfoActivity.java", "BodyUseAPI": [], "Fixed commit": "dc2260d6b97dc1741e69d8a88ca43d1841e93dc1", "Url": "https://api.github.com/repos/signal-unknown/stormy-street", "Date": "2015-10-06T00:05:23Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((HiveDataTypes.TYPE_STRING) == (org.gbif.occurrence.download.hive.HiveDataTypes.typeForTerm(term, false))) { return org.gbif.occurrence.download.hive.OccurrenceHDFSTableDefinition.interpretedField(term, org.gbif.occurrence.download.hive.OccurrenceHDFSTableDefinition.cleanDelimitersInitializer(org.gbif.occurrence.download.hive.HiveColumns.columnFor(term))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7916/buggy-version/occurrence-download.src.main.java.org.gbif.occurrence.download.hive.OccurrenceHDFSTableDefinition.java", "BodyUseAPI": ["org.gbif.occurrence.download.hive.OccurrenceHDFSTableDefinition.interpretedField(org.gbif.dwc.terms.Term,java.lang.String)", "org.gbif.occurrence.download.hive.OccurrenceHDFSTableDefinition.cleanDelimitersInitializer(org.gbif.occurrence.download.hive.HiveColumns.columnFor(term))", "org.gbif.occurrence.download.hive.HiveColumns.columnFor(org.gbif.dwc.terms.Term)"], "Fixed commit": "e2b74b50af2f0f062c53e01e297d247dfd18fff2", "Url": "https://api.github.com/repos/gbif/occurrence", "Date": "2015-04-29T17:06:22Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.gbif.occurrence.common.TermUtils.isInterpretedDate(term)) { builder.add(new org.gbif.occurrence.download.hive.InitializableField(term, org.gbif.occurrence.download.hive.Queries.toISO8601Initializer(term), HiveDataTypes.TYPE_STRING)); }else { builder.add(new org.gbif.occurrence.download.hive.InitializableField(term, org.gbif.occurrence.download.hive.HiveColumns.columnFor(term), HiveDataTypes.TYPE_STRING)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7916/buggy-version/occurrence-download.src.main.java.org.gbif.occurrence.download.hive.Queries.java", "BodyUseAPI": ["org.gbif.occurrence.download.hive.Queries.toISO8601Initializer(org.gbif.dwc.terms.Term)", "builder.add(org.gbif.occurrence.download.hive.InitializableField)", "org.gbif.occurrence.download.hive.HiveColumns.columnFor(org.gbif.dwc.terms.Term)", "builder.add(org.gbif.occurrence.download.hive.InitializableField)"], "Fixed commit": "e2b74b50af2f0f062c53e01e297d247dfd18fff2", "Url": "https://api.github.com/repos/gbif/occurrence", "Date": "2015-04-29T17:06:22Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.renhai.taurus.repository.CelebrityRepository.findBySourceAndActorId(Movie.Source.ROTTEN_TOMATOES.getCode(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (dupcel != null) { if (!(dupcel.getId().equals(cel.getId()))) { deleteDupAndMerge(dupcel, cel); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5513/buggy-version/src.main.java.me.renhai.taurus.tools.MovieDataImporter.java", "BodyUseAPI": ["me.renhai.taurus.entity.Celebrity.getId()", "dupcel.getId().equals(cel.getId())", "me.renhai.taurus.tools.MovieDataImporter.deleteDupAndMerge(me.renhai.taurus.entity.Celebrity,me.renhai.taurus.entity.Celebrity)"], "Fixed commit": "5c6da494ffad5f0e8499a3b9a6ca792cd18fec10", "Url": "https://api.github.com/repos/renhai/taurus", "Date": "2016-12-26T17:58:20Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (notEmpty.isEmpty()) throw new cascading.tap.TapException((\"all paths matching path pattern are zero length: \" + (pathPattern)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1305/buggy-version/src.core.cascading.tap.GlobHfs.java", "BodyUseAPI": [], "Fixed commit": "22abbb9aa48cc800b0d055570b738c29969084cd", "Url": "https://api.github.com/repos/cwensel/cascading", "Date": "2011-07-02T03:34:33Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jline.ConsoleReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (line == null) { java.lang.System.err.println(\"\\nBye...\"); java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/9085/buggy-version/src.main.java.com.gruszecm.tjconsole.TJConsole.java", "BodyUseAPI": [], "Fixed commit": "443aa7615234fc353c690eee528d1bcbe3938cff", "Url": "https://api.github.com/repos/m-szalik/tjconsole", "Date": "2014-07-31T19:49:17Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["period.getStartTime().clone()", "timer.getStartTime().clone()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (conflictStart.before(timerStart)) { conflictStart.setTime(timerStart.getTime()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4641/buggy-version/src.lazybones.gui.components.timeline.TimelineElement.java", "BodyUseAPI": ["java.util.Calendar.getTime()", "java.util.Calendar.setTime(java.util.Date)"], "Fixed commit": "03d2f79d44736de7b0de66edf3e2dc48f591a07f", "Url": "https://api.github.com/repos/hampelratte/lazybones", "Date": "2015-12-08T17:23:59Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (spec.toLowerCase().startsWith(\"file:\")) { spec = spec.substring(\"file:\".length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2722/buggy-version/sdks.java.core.src.main.java.org.apache.beam.sdk.io.LocalFileSystem.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "5814ad50fc9269aed4604df20c4cf46ea1f2b258", "Url": "https://api.github.com/repos/flaviocf/beam", "Date": "2017-06-30T17:14:34Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS) { spec = spec.replaceAll(\"^/+\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2722/buggy-version/sdks.java.core.src.main.java.org.apache.beam.sdk.io.LocalFileSystem.java", "BodyUseAPI": [], "Fixed commit": "5814ad50fc9269aed4604df20c4cf46ea1f2b258", "Url": "https://api.github.com/repos/flaviocf/beam", "Date": "2017-06-30T17:14:34Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.webflow.core.collection.AttributeMap<java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (_frags != null) { if (org.springframework.util.ClassUtils.isAssignable(java.lang.String.class, _frags.getClass())) { fragments = org.springframework.util.StringUtils.addStringToArray(new java.lang.String[]{ }, ((java.lang.String) (_frags))); }else if (org.springframework.util.ClassUtils.isAssignable(java.lang.String[].class, _frags.getClass())) { fragments = ((java.lang.String[]) (_frags)); } if (fragments != null) { context.getFlashScope().put(View.RENDER_FRAGMENTS_ATTRIBUTE, fragments); } org.agatom.springatom.webmvc.tiles3.VFlowAjaxTilesView.LOGGER.info(java.lang.String.format(\"Detected %s to be rendered only -> %s\", this.fragmentsAttributeName, org.springframework.util.ObjectUtils.getDisplayString(fragments))); }else { org.agatom.springatom.webmvc.tiles3.VFlowAjaxTilesView.LOGGER.debug(java.lang.String.format(\"No %s in next event attribute\", this.fragmentsAttributeName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3348/buggy-version/src.main.java.org.agatom.springatom.webmvc.tiles3.VFlowAjaxTilesView.java", "BodyUseAPI": ["org.springframework.util.ClassUtils.isAssignable(java.lang.Class,java.lang.Class<? extends java.lang.Object>)", "java.lang.Object.getClass()", "java.lang.Object.getClass()", "org.springframework.util.ClassUtils.isAssignable(java.lang.Class,java.lang.Class<? extends java.lang.Object>)"], "Fixed commit": "2b5db3106dbff1b0e82c7f6cbfd212a304cd02e8", "Url": "https://api.github.com/repos/kornicameister/SpringAtom", "Date": "2014-01-22T23:08:45Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(map.containsKey(second))) { java.util.List<java.lang.Integer> list = new java.util.ArrayList<>(); map.put(second, list); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/235/buggy-version/src.CountComponents.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, java.util.List<java.lang.Integer>>.put(int,java.util.List<java.lang.Integer>)"], "Fixed commit": "228ba937141c2ea32a0b9c58dae6cc61e1c57ad6", "Url": "https://api.github.com/repos/yao23/Java_Playground", "Date": "2017-07-17T05:56:58Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((gridView.getChildAt(position)) != null) { if ((gridView.getChildAt(position).getTag()) != null) { at.tugraz.inffeldgroup.dailypic.ImageGridViewAdapter.ViewHolder item = ((at.tugraz.inffeldgroup.dailypic.ImageGridViewAdapter.ViewHolder) (gridView.getChildAt(position).getTag())); if (uriListNew.get(position).isFav()) { item.fav.setVisibility(View.VISIBLE); }else { item.fav.setVisibility(View.INVISIBLE); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/978/buggy-version/app.src.main.java.at.tugraz.inffeldgroup.dailypic.activities.MainActivity.java", "BodyUseAPI": ["gridView.getChildAt(position).getTag()", "android.widget.GridView.getChildAt(int)", "android.widget.GridView.getChildAt(int)", "gridView.getChildAt(position).getTag()", "uriListNew.get(position).isFav()", "java.util.ArrayList<at.tugraz.inffeldgroup.dailypic.db.UriWrapper>.get(int)"], "Fixed commit": "d192059a7a2207af6e9dafe59799c17523c45ac8", "Url": "https://api.github.com/repos/inffeldgroup/sw2016", "Date": "2016-06-01T07:08:24Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!exist) { itemList.add(item); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2591/buggy-version/src.main.java.com.games.monaden.model.inventory.Inventory.java", "BodyUseAPI": [], "Fixed commit": "4168e312c1b90055a8fe4f6469a1f30d1888a1f6", "Url": "https://api.github.com/repos/paraply/Bravely-Segfault", "Date": "2016-06-28T11:07:18Z"},
{"Line": "=>491", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.types[this.selectedHero].isUnlocked())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5509/buggy-version/src.de.titanium.enterprise.View.GameMenu.HeroesView.java", "BodyUseAPI": [], "Fixed commit": "0107eb328953cb8393279a85f4c7b7d5ec451026", "Url": "https://api.github.com/repos/Titanium-Team/Enterprise", "Date": "2016-04-16T12:03:00Z"},
{"Line": "=>473", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.types[this.selectedHero].isUnlocked())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5509/buggy-version/src.de.titanium.enterprise.View.GameMenu.HeroesView.java", "BodyUseAPI": [], "Fixed commit": "0107eb328953cb8393279a85f4c7b7d5ec451026", "Url": "https://api.github.com/repos/Titanium-Team/Enterprise", "Date": "2016-04-16T12:03:00Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value < (ssidList.size())) { final java.lang.String label = ssidList.get(((int) (value))); if ((label.length()) > 10) { return (label.substring(0, 10)) + \"...\"; }else { return label; } }else { return \"UNKNOWN\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6009/buggy-version/app.src.main.java.edu.hsb.wifivisualizer.map.GoogleMapService.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(float)"], "Fixed commit": "69a19ff275e96d8ebe91a02f4df83b6bd5e4b497", "Url": "https://api.github.com/repos/He1md4ll/WifiVisualizer", "Date": "2016-12-14T21:19:13Z"},
{"Line": "=>487", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (swapped) { if (!(m.contains(t, s))) { disjoint.add(t, s, 1.0); } }else { if (!(m.contains(s, t))) { disjoint.add(s, t, 1.0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1183/buggy-version/limes-core.src.main.java.org.aksw.limes.core.measures.mapper.topology.RADON.java", "BodyUseAPI": [], "Fixed commit": "c850ad3338ffcdf32f75bec4e0abc8cece6c7031", "Url": "https://api.github.com/repos/dice-group/LIMES", "Date": "2016-08-04T12:05:19Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["biocode.fims.fasta.FastaUtils.getEntityRoot(processController.getMapping(),FastaSequence.SEQUENCE_URI)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (rootEntity != null) { java.lang.String insert = (((((((((((((\"INSERT { GRAPH <\" + newGraph) + \"> { ?s <\") + (biocode.fims.fasta.FastaSequence.SEQUENCE_URI)) + \"> ?o }} WHERE \") + \"{ GRAPH <\") + newGraph) + \"> { ?s a <\") + (rootEntity.getConceptURI())) + \"> } . \") + \"GRAPH <\") + previousGraph) + \"> { ?s <\") + (biocode.fims.fasta.FastaSequence.SEQUENCE_URI)) + \"> ?o }}\"; com.hp.hpl.jena.update.UpdateRequest update = com.hp.hpl.jena.update.UpdateFactory.create(insert); com.hp.hpl.jena.sparql.modify.UpdateProcessRemote riStore = ((com.hp.hpl.jena.sparql.modify.UpdateProcessRemote) (com.hp.hpl.jena.update.UpdateExecutionFactory.createRemote(update, ((fusekiService) + \"/update\")))); riStore.execute(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8665/buggy-version/src.main.java.biocode.fims.fuseki.fasta.FusekiFastaManager.java", "BodyUseAPI": ["biocode.fims.digester.Entity.getConceptURI()"], "Fixed commit": "1f664b2860553c9d89c77e3896582a4e91eb7dde", "Url": "https://api.github.com/repos/biocodellc/biocode-fims-fuseki", "Date": "2016-07-08T13:52:45Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["biocode.fims.fasta.FastaUtils.getEntityRoot(processController.getMapping(),FastaSequence.SEQUENCE_URI)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (rootEntity == null) { throw new biocode.fims.fimsExceptions.ServerErrorException(\"Server Error\", \"No entity was found containing a urn:sequence attribute\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8665/buggy-version/src.main.java.biocode.fims.fuseki.fasta.FusekiFastaManager.java", "BodyUseAPI": [], "Fixed commit": "1f664b2860553c9d89c77e3896582a4e91eb7dde", "Url": "https://api.github.com/repos/biocodellc/biocode-fims-fuseki", "Date": "2016-07-08T13:52:45Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["biocode.fims.fasta.FastaUtils.getEntityRoot(processController.getMapping(),FastaSequence.SEQUENCE_URI)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (rootEntity == null) { throw new biocode.fims.fimsExceptions.ServerErrorException(\"Server Error\", \"No entity was found containing a urn:sequence attribute\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8665/buggy-version/src.main.java.biocode.fims.fuseki.fasta.FusekiFastaManager.java", "BodyUseAPI": [], "Fixed commit": "1f664b2860553c9d89c77e3896582a4e91eb7dde", "Url": "https://api.github.com/repos/biocodellc/biocode-fims-fuseki", "Date": "2016-07-08T13:52:45Z"},
{"Line": "=>1266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cloud.agent.api.to.BandwidthRuleTO.BandwidthFilterTO.getProtocol()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((protocol != null) && (protocol.equalsIgnoreCase(NetUtils.TCP_PROTO))) { protocolNum = _tcProtocolTcpNum; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/777/buggy-version/core.src.com.cloud.agent.resource.virtualnetwork.VirtualRoutingResource.java", "BodyUseAPI": [], "Fixed commit": "6e8af4b414ecc861478f5f0f5890441a4eeaef05", "Url": "https://api.github.com/repos/vispractice/cloudstack", "Date": "2015-12-07T10:30:50Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPaint) == null) { mPaint = new android.graphics.Paint(android.graphics.Paint.ANTI_ALIAS_FLAG); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7714/buggy-version/library.src.main.java.org.nghiatrx.libs.letterview.CircleLetterView.java", "BodyUseAPI": [], "Fixed commit": "08c6609d1425583f9490fbec2a1a0df21006d27e", "Url": "https://api.github.com/repos/nghiatrx/android-letter-view", "Date": "2017-03-06T13:09:36Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPaintSelected) == null) { mPaintSelected = new android.graphics.Paint(android.graphics.Paint.ANTI_ALIAS_FLAG); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7714/buggy-version/library.src.main.java.org.nghiatrx.libs.letterview.CircleLetterView.java", "BodyUseAPI": [], "Fixed commit": "08c6609d1425583f9490fbec2a1a0df21006d27e", "Url": "https://api.github.com/repos/nghiatrx/android-letter-view", "Date": "2017-03-06T13:09:36Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (loc != null) { latitude += loc.getLatitude(); longitude += loc.getLongitude(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3561/buggy-version/Shouter.src.com.example.shouter.Shout.java", "BodyUseAPI": [], "Fixed commit": "a18ebb87348185e6bbd72ec96bfb793cfcdf71b9", "Url": "https://api.github.com/repos/jpha226/seniordesign", "Date": "2013-11-05T23:47:23Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e != null) android.widget.Toast.makeText(this, \"Error getting sentence\", Toast.LENGTH_SHORT).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3561/buggy-version/Shouter.src.com.example.shouter.DelegateActivity.java", "BodyUseAPI": [], "Fixed commit": "a18ebb87348185e6bbd72ec96bfb793cfcdf71b9", "Url": "https://api.github.com/repos/jpha226/seniordesign", "Date": "2013-11-05T23:47:23Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e != null) android.widget.Toast.makeText(this, \"Error getting sentence\", Toast.LENGTH_SHORT).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3561/buggy-version/Shouter.src.com.example.shouter.DelegateActivity.java", "BodyUseAPI": [], "Fixed commit": "a18ebb87348185e6bbd72ec96bfb793cfcdf71b9", "Url": "https://api.github.com/repos/jpha226/seniordesign", "Date": "2013-11-05T23:47:23Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.example.shouter.MainActivity.location) != null) { lat += com.example.shouter.MainActivity.location.getLatitude(); lon += com.example.shouter.MainActivity.location.getLongitude(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3561/buggy-version/Shouter.src.com.example.shouter.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a18ebb87348185e6bbd72ec96bfb793cfcdf71b9", "Url": "https://api.github.com/repos/jpha226/seniordesign", "Date": "2013-11-05T23:47:23Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (fieldType.isAnnotationPresent(javax.persistence.Column.class)) { boolean flag = field.isAccessible(); field.setAccessible(true); map.put(getName(field), field.get(user)); field.setAccessible(flag); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4669/buggy-version/HW9.src.main.java.ru.otus.pyltsin.HW9.dao.MyExecutorUser.java", "BodyUseAPI": [], "Fixed commit": "a254725e692a54de5499ccb5535a5995d136972b", "Url": "https://api.github.com/repos/pyltsin/otus", "Date": "2017-06-05T18:12:04Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (packageNameList.isEmpty()) { packageNameList.add(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/9056/buggy-version/roboguice.src.main.java.roboguice.RoboGuice.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(java.lang.String)"], "Fixed commit": "a8dec19d63eed788a5505838cb4a6655b923de93", "Url": "https://api.github.com/repos/stephanenicolas/roboguice", "Date": "2014-04-08T14:06:21Z"},
{"Line": "=>505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.TreeMap<java.lang.Integer, mjc.Valuable.TransactionSummary>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((prevYear == null) || ((prevYear.unitsHeld_) == 0)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8082/buggy-version/src.main.java.mjc.Valuable.java", "BodyUseAPI": [], "Fixed commit": "e27753185d6ff38f65cc3fecbb4e941be31ab65e", "Url": "https://api.github.com/repos/matches-brisvegas/valuable", "Date": "2016-10-11T07:23:15Z"},
{"Line": "=>703", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((company.marketCap_) < 50) { if (!(company.requiredReturnFactors_.contains(\"MicroCap\"))) { company.requiredReturnFactors_.add(\"MicroCap\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8082/buggy-version/src.main.java.mjc.Valuable.java", "BodyUseAPI": ["company.requiredReturnFactors_.add(java.lang.String)", "company.requiredReturnFactors_.contains(java.lang.String)"], "Fixed commit": "e27753185d6ff38f65cc3fecbb4e941be31ab65e", "Url": "https://api.github.com/repos/matches-brisvegas/valuable", "Date": "2016-10-11T07:23:15Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(childs.isEmpty())) { ceconomico.valores.get(i).valorPropuesto = baremacion.Evaluador.sumatorio(\"valores\", i, \"valorPropuesto\", childs); ceconomico.valores.get(i).valorConcedido = baremacion.Evaluador.sumatorio(\"valores\", i, \"valorConcedido\", childs); ceconomico.valores.get(i).valorEstimado = baremacion.Evaluador.sumatorio(\"valores\", i, \"valorEstimado\", childs); ceconomico.valores.get(i).valorSolicitado = baremacion.Evaluador.sumatorio(\"valores\", i, \"valorSolicitado\", childs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7432/buggy-version/fap.app.baremacion.Evaluador.java", "BodyUseAPI": ["baremacion.Evaluador.sumatorio(java.lang.String,int,java.lang.String,java.util.List<models.CEconomico>)", "baremacion.Evaluador.sumatorio(java.lang.String,int,java.lang.String,java.util.List<models.CEconomico>)", "baremacion.Evaluador.sumatorio(java.lang.String,int,java.lang.String,java.util.List<models.CEconomico>)", "baremacion.Evaluador.sumatorio(java.lang.String,int,java.lang.String,java.util.List<models.CEconomico>)"], "Fixed commit": "21ecf07546101364a02f0c0e2b58bd65c2ae6a54", "Url": "https://api.github.com/repos/FAP-Team/Fap-Module", "Date": "2012-09-03T07:32:11Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (u != null) { java.util.Properties p = new java.util.Properties(); p.load(com.google.common.io.Resources.newInputStreamSupplier(u).getInput()); commit_id = p.getProperty(\"git.commit.id\"); build_email = p.getProperty(\"git.build.user.email\"); commit_time = p.getProperty(\"git.commit.time\"); build_time = p.getProperty(\"git.build.time\"); commit_message = p.getProperty(\"git.commit.message.short\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1191/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.store.sys.VersionIterator.java", "BodyUseAPI": [], "Fixed commit": "da3c848a81df696176470a9572aac5812857335c", "Url": "https://api.github.com/repos/adityakishore/drill", "Date": "2014-12-17T03:32:53Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.validations.isEmpty()) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4209/buggy-version/src.main.java.fr.inria.astor.core.validation.validators.CompoundValidationResult.java", "BodyUseAPI": [], "Fixed commit": "82420970cded207fb63e09a1fb12e61aff18da51", "Url": "https://api.github.com/repos/SpoonLabs/astor", "Date": "2016-07-12T13:43:10Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (pv != null) count += pv.getFailureCount();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4209/buggy-version/src.main.java.fr.inria.astor.core.validation.validators.CompoundValidationResult.java", "BodyUseAPI": ["fr.inria.astor.core.entities.ProgramVariantValidationResult.getFailureCount()"], "Fixed commit": "82420970cded207fb63e09a1fb12e61aff18da51", "Url": "https://api.github.com/repos/SpoonLabs/astor", "Date": "2016-07-12T13:43:10Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (parameters != null) { this.parameters = parameters; }else { this.parameters = new java.util.HashMap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6175/buggy-version/common.src.main.java.uk.ac.rdg.resc.edal.feature.AbstractDiscreteFeature.java", "BodyUseAPI": [], "Fixed commit": "97371e377b81e565bf0b0663ceb43fc114236b7f", "Url": "https://api.github.com/repos/Reading-eScience-Centre/edal-java", "Date": "2016-09-20T09:09:18Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.hiwifi.activity.SettingFragment.checkUpdated)) { com.umeng.update.UmengUpdateAgent.update(com.hiwifi.hiwifi.Gl.Ct()); com.hiwifi.activity.SettingFragment.checkUpdated = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1210/buggy-version/src.com.hiwifi.activity.SettingFragment.java", "BodyUseAPI": [], "Fixed commit": "3524dab1b90406a8e2c351639d52d8ac2daf5c5f", "Url": "https://api.github.com/repos/bjmayor/wifikey", "Date": "2014-10-23T01:12:05Z"},
{"Line": "=>2405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<?>.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (fieldType.equals(\"float\")) { fieldValue = rs.getFloat(i); }else if (fieldType.equals(\"boolean\")) { fieldValue = rs.getBoolean(i); }else if (fieldType.equals(\"char\")) { final java.lang.String s = rs.getString(i); final char c; if ((s == null) || ((s.length()) == 0)) { c = ' '; }else { c = s.charAt(0); } fieldValue = c; }else { fieldValue = rs.getObject(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2030/buggy-version/src.com.roc.core.database.DBUtil.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "cadb5a3fcd9482dd45359cbb8d965b04183c45e6", "Url": "https://api.github.com/repos/roczpwu/RVFrame", "Date": "2017-03-27T12:50:57Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.avro.Schema.getField(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (schemaField.getSchema().getType().equals(co.cask.cdap.api.data.schema.Schema.Type.BYTES)) { recordBuilder.set(fieldName, java.nio.ByteBuffer.wrap(((byte[]) (structuredRecord.get(fieldName))))); }else { recordBuilder.set(fieldName, convertField(structuredRecord.get(fieldName), schemaField.getSchema())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8538/buggy-version/core-plugins.src.main.java.co.cask.hydrator.plugin.common.StructuredToAvroTransformer.java", "BodyUseAPI": ["co.cask.hydrator.plugin.common.StructuredToAvroTransformer.convertField(structuredRecord.get(fieldName),schemaField.getSchema())", "co.cask.cdap.api.data.schema.Schema.Field.getSchema()", "org.apache.avro.generic.GenericRecordBuilder.set(java.lang.String,convertField(structuredRecord.get(fieldName), schemaField.getSchema()))"], "Fixed commit": "9efb41a59bd9ef7d5a9adc29bb398cc61e7e7fc0", "Url": "https://api.github.com/repos/shashankmoghe/hydrator-plugins", "Date": "2016-12-27T06:30:56Z"},
{"Line": "=>1833", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.clusterSelection.getName().equals(iClusterSelection.getName())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2195/buggy-version/core.src.main.java.com.orientechnologies.orient.core.metadata.schema.OClassImpl.java", "BodyUseAPI": [], "Fixed commit": "4bae561947e1dbcaaffcc23a1be294d27e25b2f4", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-11-23T14:19:39Z"},
{"Line": "=>1817", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.clusterSelection.getName().equals(clusterSelection)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2195/buggy-version/core.src.main.java.com.orientechnologies.orient.core.metadata.schema.OClassImpl.java", "BodyUseAPI": [], "Fixed commit": "4bae561947e1dbcaaffcc23a1be294d27e25b2f4", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-11-23T14:19:39Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (row == 0) column = cells.indexOf(a); else column = (cells.indexOf(a)) % (row * (numColumns));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3371/buggy-version/board.Board.java", "BodyUseAPI": [], "Fixed commit": "fd7a8e909623cb8216a568e7f7ffa82765ef1215", "Url": "https://api.github.com/repos/chumich1/Clue", "Date": "2013-04-09T18:20:35Z"},
{"Line": "=>1536", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showOptionDialog(<nulltype>,java.lang.String,java.lang.String,int,int,<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (answer == (javax.swing.JOptionPane.YES_OPTION)) { if ((saveFile) == null) { if (status.equals(\"edge\")) { saveAs(); } if (status.equals(\"xml\")) { xmlSaveAs(); } } if (status.equals(\"edge\")) { writeSave(); } if (status.equals(\"xml\")) { xmlWriteSave(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8984/buggy-version/src.EdgeConvertGUI.java", "BodyUseAPI": [], "Fixed commit": "cd0c55fd9015d2c72912914abbe3025924ca5bee", "Url": "https://api.github.com/repos/je6095/422-Project", "Date": "2017-04-27T03:49:52Z"},
{"Line": "=>1539", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (status.equals(\"xml\")) { xmlSaveAs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8984/buggy-version/src.EdgeConvertGUI.java", "BodyUseAPI": [], "Fixed commit": "cd0c55fd9015d2c72912914abbe3025924ca5bee", "Url": "https://api.github.com/repos/je6095/422-Project", "Date": "2017-04-27T03:49:52Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.crypto.Cipher.update(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (plaintextPayload == null) { throw new java.lang.IllegalStateException(\"Stream cipher returned null, even though this is only specified for block ciphers.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6225/buggy-version/src.main.java.org.cryptomator.cryptolib.FileHeaders.java", "BodyUseAPI": [], "Fixed commit": "5e3b167b2b0b78bab8e83a889d2a9d16e5ea5951", "Url": "https://api.github.com/repos/cryptomator/cryptolib", "Date": "2016-06-16T19:51:01Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.channels.ReadableByteChannel.read(java.nio.ByteBuffer)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (read != (FileHeader.SIZE)) { throw new java.lang.IllegalArgumentException(\"Ciphertext shorter than header size.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6225/buggy-version/src.main.java.org.cryptomator.cryptolib.FileContentCryptor.java", "BodyUseAPI": [], "Fixed commit": "5e3b167b2b0b78bab8e83a889d2a9d16e5ea5951", "Url": "https://api.github.com/repos/cryptomator/cryptolib", "Date": "2016-06-16T19:51:01Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (staminaValue < 0) { staminaValue = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5425/buggy-version/src.realisticSwimming.stamina.StaminaBar_Native.java", "BodyUseAPI": [], "Fixed commit": "a5cfe52fb28fafc979d7a0b99c1f03d863ffa882", "Url": "https://api.github.com/repos/4a2e532e/RealisticSwimming", "Date": "2017-02-08T22:11:46Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ch == separators) { if (currentValue.substring(0, 1).equals(java.lang.String.valueOf(separatorAdditional))) result.add(currentValue.substring(1, currentValue.length())); else result.add(currentValue.toString()); currentValue = new java.lang.StringBuffer(); startCollectChar = false; }else if (ch == '\\n') { break; }else { currentValue.append(ch); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7156/buggy-version/src.com.lab.qa.store.Adapters.CSVHandler.java", "BodyUseAPI": ["java.lang.StringBuffer.append(char)"], "Fixed commit": "cf5ae6f904168749c8391e3dbd7da9410c7f8c40", "Url": "https://api.github.com/repos/Svarus/Store", "Date": "2017-09-28T11:21:57Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase(java.util.Locale)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (user_str.contains(token)) { tempUserInfoList.add(uInfo); }else if (matcher.matches()) { tempUserInfoList.add(uInfo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/9103/buggy-version/Ecardv4.src.com.micklestudios.knowell.ActivitySearch.java", "BodyUseAPI": [], "Fixed commit": "9d9373919312edb8823fbedcc5160d8439dee8c0", "Url": "https://api.github.com/repos/qb200210/ECardRe", "Date": "2015-04-17T06:50:39Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (number.matches(\"\\\\d+\")) { double actualNumber = java.lang.Double.parseDouble(number); java.lang.String formattedNumber = java.text.NumberFormat.getNumberInstance(java.util.Locale.US).format(actualNumber); number = formattedNumber.replaceAll(\",\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3144/buggy-version/src.main.java.io.wesleytraute.NumberConverter.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "2c04a55191d672f8d79f633830f24e0942584dca", "Url": "https://api.github.com/repos/Mailbok/Number-To-Text", "Date": "2016-06-13T14:06:44Z"},
{"Line": "=>496", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.Connection.response()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((response.cookies()) != null) { authCookies = response.cookies(); authCookies.putAll(connection.response().cookies()); }else { authCookies = connection.response().cookies(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4478/buggy-version/src.main.java.com.webcrawler.controller.HomeBean.java", "BodyUseAPI": ["org.jsoup.Connection.Response.cookies()"], "Fixed commit": "8bc99d7e9f2183cd2d1a3a74a374a292f838d369", "Url": "https://api.github.com/repos/junaidbinsarfraz/aiload", "Date": "2017-08-25T06:31:34Z"},
{"Line": "=>505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Queue<com.webcrawler.model.UrlProperty>.poll()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (baseUrlProp != null) { baseUrlProp.setLastReponse(connection.response()); baseUrlProp.setLastRequest(connection.request()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4478/buggy-version/src.main.java.com.webcrawler.controller.HomeBean.java", "BodyUseAPI": ["com.webcrawler.model.UrlProperty.setLastReponse(connection.response())", "com.webcrawler.model.UrlProperty.setLastRequest(connection.request())"], "Fixed commit": "8bc99d7e9f2183cd2d1a3a74a374a292f838d369", "Url": "https://api.github.com/repos/junaidbinsarfraz/aiload", "Date": "2017-08-25T06:31:34Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.catalina.core.Context.findErrorPage(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((errorPage.getLocation()) != null) { java.io.File file = new java.io.File(context.getDocBase(), errorPage.getLocation()); if (!(file.exists())) { java.io.File file2 = new java.io.File(errorPage.getLocation()); if (!(file2.exists())) { boolean fileExists = false; for (java.lang.String mapping : ((org.apache.catalina.core.StandardHost) (getContainer())).findDeployedApp(context.getPath()).findServletMappings()) { java.nio.file.PathMatcher matcher = java.nio.file.FileSystems.getDefault().getPathMatcher((\"glob:\" + mapping)); java.nio.file.Path errorPagePath = java.nio.file.Paths.get(errorPage.getLocation()); if (matcher.matches(errorPagePath)) { fileExists = true; } } if (!fileExists) { fileExists = false; for (org.apache.catalina.deploy.FilterMap mapping : ((org.apache.catalina.core.StandardHost) (getContainer())).findDeployedApp(context.getPath()).findFilterMaps()) { java.nio.file.PathMatcher matcher = java.nio.file.FileSystems.getDefault().getPathMatcher((\"glob:\" + (mapping.getURLPattern()))); java.nio.file.Path errorPagePath = java.nio.file.Paths.get(errorPage.getLocation()); if (matcher.matches(errorPagePath)) { fileExists = true; } } if (!fileExists) { org.apache.catalina.core.StandardHostValve.log.log(java.util.logging.Level.WARNING, LogFacade.ERROR_PAGE_NOT_EXIST, new java.lang.Object[]{ file.getAbsolutePath(), file2.getAbsolutePath() }); } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8318/buggy-version/appserver.web.web-core.src.main.java.org.apache.catalina.core.StandardHostValve.java", "BodyUseAPI": ["org.apache.catalina.deploy.ErrorPage.getLocation()", "java.nio.file.Paths.get(errorPage.getLocation())", "java.nio.file.Paths.get(errorPage.getLocation())", "org.apache.catalina.deploy.ErrorPage.getLocation()", "org.apache.catalina.deploy.ErrorPage.getLocation()", "org.apache.catalina.deploy.ErrorPage.getLocation()"], "Fixed commit": "0fe04c1471d79d39ccf25f8086b1e9fd6253af06", "Url": "https://api.github.com/repos/payara/Payara", "Date": "2017-09-26T13:57:14Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (numberOfMines >= (width * height)) { throw new java.lang.IllegalArgumentException(\"Amount of mines must be < total area\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3022/buggy-version/code.Field.java", "BodyUseAPI": [], "Fixed commit": "bdef1bc84a320d04c547b4f2da93783600a4cee2", "Url": "https://api.github.com/repos/jadlers/clear-the-field", "Date": "2016-05-08T12:04:29Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((documentHandler.getNumberOfPages()) < pageNumber) { java.lang.String warning = java.lang.String.format(\"Page %d was not deleted, could not be processed.\", pageNumber); org.sejda.impl.sambox.EditTask.LOG.warn(warning); notifyEvent(executionContext().notifiableTaskMetadata()).taskWarning(warning); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7264/buggy-version/sejda-sambox.src.main.java.org.sejda.impl.sambox.EditTask.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.Integer)"], "Fixed commit": "e084805ae221ed820b93589691f825ad9864d8aa", "Url": "https://api.github.com/repos/torakiki/sejda", "Date": "2016-12-21T08:28:10Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (remainder > 0) { timeUntilAvailable += (time.getTimeStep()) - remainder; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3235/buggy-version/src.main.java.rinde.evo4mas.gendreau06.HeuristicTruck.java", "BodyUseAPI": [], "Fixed commit": "35470f5cd49bdd7707e7dae0360d886063ca2216", "Url": "https://api.github.com/repos/rinde/evo4mas", "Date": "2012-12-17T15:02:50Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mIsUsingCards) { setCardParams(((com.tpb.hn.content.ContentAdapter.EmptyHolder) (viewHolder)).mCard); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3310/buggy-version/app.src.main.java.com.tpb.hn.content.ContentAdapter.java", "BodyUseAPI": [], "Fixed commit": "1695f6e36d2be5f05fefe305a7c70d56a9925840", "Url": "https://api.github.com/repos/tpb1908/HN", "Date": "2016-11-22T20:11:15Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.tpb.hn.network.loaders.CachedItemLoader.prefs.contains(com.tpb.hn.network.loaders.CachedItemLoader.KEY_SHOW_IDS)) { listener.IdLoadDone(com.tpb.hn.Util.getIntArrayFromPrefs(com.tpb.hn.network.loaders.CachedItemLoader.prefs, com.tpb.hn.network.loaders.CachedItemLoader.KEY_SHOW_IDS)); }else { listener.IdLoadError(com.tpb.hn.network.loaders.CachedItemLoader.ERROR_IDS_NOT_CACHED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3310/buggy-version/app.src.main.java.com.tpb.hn.network.loaders.CachedItemLoader.java", "BodyUseAPI": ["com.tpb.hn.Util.getIntArrayFromPrefs(android.content.SharedPreferences,java.lang.String)", "com.tpb.hn.network.loaders.ItemIdLoadListener.IdLoadDone(com.tpb.hn.Util.getIntArrayFromPrefs(com.tpb.hn.network.loaders.CachedItemLoader.prefs, com.tpb.hn.network.loaders.CachedItemLoader.KEY_SHOW_IDS))"], "Fixed commit": "1695f6e36d2be5f05fefe305a7c70d56a9925840", "Url": "https://api.github.com/repos/tpb1908/HN", "Date": "2016-11-22T20:11:15Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.tpb.hn.network.loaders.CachedItemLoader.prefs.contains(com.tpb.hn.network.loaders.CachedItemLoader.KEY_TOP_IDS)) { listener.IdLoadDone(com.tpb.hn.Util.getIntArrayFromPrefs(com.tpb.hn.network.loaders.CachedItemLoader.prefs, com.tpb.hn.network.loaders.CachedItemLoader.KEY_TOP_IDS)); }else { listener.IdLoadError(com.tpb.hn.network.loaders.CachedItemLoader.ERROR_IDS_NOT_CACHED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3310/buggy-version/app.src.main.java.com.tpb.hn.network.loaders.CachedItemLoader.java", "BodyUseAPI": ["com.tpb.hn.network.loaders.ItemIdLoadListener.IdLoadDone(com.tpb.hn.Util.getIntArrayFromPrefs(com.tpb.hn.network.loaders.CachedItemLoader.prefs, com.tpb.hn.network.loaders.CachedItemLoader.KEY_TOP_IDS))", "com.tpb.hn.Util.getIntArrayFromPrefs(android.content.SharedPreferences,java.lang.String)"], "Fixed commit": "1695f6e36d2be5f05fefe305a7c70d56a9925840", "Url": "https://api.github.com/repos/tpb1908/HN", "Date": "2016-11-22T20:11:15Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.tpb.hn.network.loaders.CachedItemLoader.prefs.contains(com.tpb.hn.network.loaders.CachedItemLoader.KEY_ASK_IDS)) { listener.IdLoadDone(com.tpb.hn.Util.getIntArrayFromPrefs(com.tpb.hn.network.loaders.CachedItemLoader.prefs, com.tpb.hn.network.loaders.CachedItemLoader.KEY_ASK_IDS)); }else { listener.IdLoadError(com.tpb.hn.network.loaders.CachedItemLoader.ERROR_IDS_NOT_CACHED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3310/buggy-version/app.src.main.java.com.tpb.hn.network.loaders.CachedItemLoader.java", "BodyUseAPI": ["com.tpb.hn.network.loaders.ItemIdLoadListener.IdLoadDone(com.tpb.hn.Util.getIntArrayFromPrefs(com.tpb.hn.network.loaders.CachedItemLoader.prefs, com.tpb.hn.network.loaders.CachedItemLoader.KEY_ASK_IDS))", "com.tpb.hn.Util.getIntArrayFromPrefs(android.content.SharedPreferences,java.lang.String)"], "Fixed commit": "1695f6e36d2be5f05fefe305a7c70d56a9925840", "Url": "https://api.github.com/repos/tpb1908/HN", "Date": "2016-11-22T20:11:15Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.tpb.hn.network.loaders.CachedItemLoader.prefs.contains(com.tpb.hn.network.loaders.CachedItemLoader.KEY_JOBS_IDS)) { listener.IdLoadDone(com.tpb.hn.Util.getIntArrayFromPrefs(com.tpb.hn.network.loaders.CachedItemLoader.prefs, com.tpb.hn.network.loaders.CachedItemLoader.KEY_JOBS_IDS)); }else { listener.IdLoadError(com.tpb.hn.network.loaders.CachedItemLoader.ERROR_IDS_NOT_CACHED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3310/buggy-version/app.src.main.java.com.tpb.hn.network.loaders.CachedItemLoader.java", "BodyUseAPI": ["com.tpb.hn.network.loaders.ItemIdLoadListener.IdLoadDone(com.tpb.hn.Util.getIntArrayFromPrefs(com.tpb.hn.network.loaders.CachedItemLoader.prefs, com.tpb.hn.network.loaders.CachedItemLoader.KEY_JOBS_IDS))", "com.tpb.hn.Util.getIntArrayFromPrefs(android.content.SharedPreferences,java.lang.String)"], "Fixed commit": "1695f6e36d2be5f05fefe305a7c70d56a9925840", "Url": "https://api.github.com/repos/tpb1908/HN", "Date": "2016-11-22T20:11:15Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.tpb.hn.network.loaders.CachedItemLoader.prefs.contains(com.tpb.hn.network.loaders.CachedItemLoader.KEY_BEST_IDS)) { listener.IdLoadDone(com.tpb.hn.Util.getIntArrayFromPrefs(com.tpb.hn.network.loaders.CachedItemLoader.prefs, com.tpb.hn.network.loaders.CachedItemLoader.KEY_BEST_IDS)); }else { listener.IdLoadError(com.tpb.hn.network.loaders.CachedItemLoader.ERROR_IDS_NOT_CACHED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3310/buggy-version/app.src.main.java.com.tpb.hn.network.loaders.CachedItemLoader.java", "BodyUseAPI": ["com.tpb.hn.Util.getIntArrayFromPrefs(android.content.SharedPreferences,java.lang.String)", "com.tpb.hn.network.loaders.ItemIdLoadListener.IdLoadDone(com.tpb.hn.Util.getIntArrayFromPrefs(com.tpb.hn.network.loaders.CachedItemLoader.prefs, com.tpb.hn.network.loaders.CachedItemLoader.KEY_BEST_IDS))"], "Fixed commit": "1695f6e36d2be5f05fefe305a7c70d56a9925840", "Url": "https://api.github.com/repos/tpb1908/HN", "Date": "2016-11-22T20:11:15Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.tpb.hn.network.loaders.CachedItemLoader.prefs.contains(com.tpb.hn.network.loaders.CachedItemLoader.KEY_NEW_IDS)) { listener.IdLoadDone(com.tpb.hn.Util.getIntArrayFromPrefs(com.tpb.hn.network.loaders.CachedItemLoader.prefs, com.tpb.hn.network.loaders.CachedItemLoader.KEY_NEW_IDS)); }else { listener.IdLoadError(com.tpb.hn.network.loaders.CachedItemLoader.ERROR_IDS_NOT_CACHED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3310/buggy-version/app.src.main.java.com.tpb.hn.network.loaders.CachedItemLoader.java", "BodyUseAPI": ["com.tpb.hn.Util.getIntArrayFromPrefs(android.content.SharedPreferences,java.lang.String)", "com.tpb.hn.network.loaders.ItemIdLoadListener.IdLoadDone(com.tpb.hn.Util.getIntArrayFromPrefs(com.tpb.hn.network.loaders.CachedItemLoader.prefs, com.tpb.hn.network.loaders.CachedItemLoader.KEY_NEW_IDS))"], "Fixed commit": "1695f6e36d2be5f05fefe305a7c70d56a9925840", "Url": "https://api.github.com/repos/tpb1908/HN", "Date": "2016-11-22T20:11:15Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.ListSelectionModel.getMinSelectionIndex()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (row < 0) { row = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1990/buggy-version/src.net.sf.memoranda.ui.DefectsTable.java", "BodyUseAPI": [], "Fixed commit": "b8b70028326c0fdfbcaece5b152e30f5cd159d13", "Url": "https://api.github.com/repos/ser316asu/Grunewald_SER316", "Date": "2017-04-16T03:04:23Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.get(\"ErrorDocument404\")) != null) { errorDocument404Path = (basePath) + (this.get(\"ErrorDocument404\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3231/buggy-version/app.src.main.java.ro.polak.webserver.ServerConfig.java", "BodyUseAPI": [], "Fixed commit": "fdcdca965c111e2c70028c9dcd7c219d07820c1b", "Url": "https://api.github.com/repos/piotrpolak/android-http-server", "Date": "2015-09-26T20:47:10Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.get(\"ErrorDocument403\")) != null) { errorDocument403Path = (basePath) + (this.get(\"ErrorDocument403\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3231/buggy-version/app.src.main.java.ro.polak.webserver.ServerConfig.java", "BodyUseAPI": [], "Fixed commit": "fdcdca965c111e2c70028c9dcd7c219d07820c1b", "Url": "https://api.github.com/repos/piotrpolak/android-http-server", "Date": "2015-09-26T20:47:10Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position == 0) { notifyDataSetChanged(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6832/buggy-version/app.src.main.java.hu.ait.youtubequeuer.adapter.QueueRecyclerAdapter.java", "BodyUseAPI": [], "Fixed commit": "df0b7905379e1dfdda402f17674a60999e52ae3d", "Url": "https://api.github.com/repos/manaspurohit/youtube-queuer", "Date": "2017-07-05T16:38:14Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.geworkbench.components.genspace.RealTimeWorkFlowSuggestion.cwf.getTools().size()) > 0) org.geworkbench.components.genspace.RealTimeWorkFlowSuggestion.viewerStatus.setText((\"You recently used \" + (org.geworkbench.components.genspace.RealTimeWorkFlowSuggestion.cwf.getTools().get(((org.geworkbench.components.genspace.RealTimeWorkFlowSuggestion.cwf.getTools().size()) - 1)).getTool().getName())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1885/buggy-version/components.genspace.src.org.geworkbench.components.genspace.RealTimeWorkFlowSuggestion.java", "BodyUseAPI": ["org.geworkbench.components.genspace.RealTimeWorkFlowSuggestion.cwf.getTools().size()", "org.geworkbench.components.genspace.server.wrapper.WorkflowWrapper.getTools()", "org.geworkbench.components.genspace.RealTimeWorkFlowSuggestion.cwf.getTools().get(((org.geworkbench.components.genspace.RealTimeWorkFlowSuggestion.cwf.getTools().size()) - 1))", "javax.swing.JLabel.setText((\"You recently used \" + (org.geworkbench.components.genspace.RealTimeWorkFlowSuggestion.cwf.getTools().get(((org.geworkbench.components.genspace.RealTimeWorkFlowSuggestion.cwf.getTools().size()) - 1)).getTool().getName())))", "org.geworkbench.components.genspace.RealTimeWorkFlowSuggestion.cwf.getTools().get(((org.geworkbench.components.genspace.RealTimeWorkFlowSuggestion.cwf.getTools().size()) - 1)).getTool().getName()", "org.geworkbench.components.genspace.server.wrapper.WorkflowWrapper.getTools()", "org.geworkbench.components.genspace.RealTimeWorkFlowSuggestion.cwf.getTools().get(((org.geworkbench.components.genspace.RealTimeWorkFlowSuggestion.cwf.getTools().size()) - 1)).getTool()"], "Fixed commit": "d1fa7b2e25bb810157ca7c98885b662bef0633ad", "Url": "https://api.github.com/repos/geworkbench-group/geworkbench-components", "Date": "2014-10-30T03:15:01Z"},
{"Line": "=>1508", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shipCode.equals(\"PJSC008_Myoko_1945\")) { tobj2 = ((org.json.simple.JSONObject) (tobj.get(\"HP_JGT_3\"))); }else { tobj2 = ((org.json.simple.JSONObject) (tobj.get(\"HP_JGT_1\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7997/buggy-version/src.JSParser.java", "BodyUseAPI": [], "Fixed commit": "2dcb62ddf9edf262cf0dcd0c24a672340d328caa", "Url": "https://api.github.com/repos/EdibleBug/WoWS-Fitting-Tool", "Date": "2016-07-07T23:33:23Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (ship.equals(\"Krasni Krym\")) { ship = ship.replace(\"Krasni Krym\", \"PRSC505_KrasniKrym\"); }else if (ship.equals(\"Myoko\")) { ship = ship.replace(\"Myoko\", \"PJSC008_Myoko_1945\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7997/buggy-version/src.JSParser.java", "BodyUseAPI": [], "Fixed commit": "2dcb62ddf9edf262cf0dcd0c24a672340d328caa", "Url": "https://api.github.com/repos/EdibleBug/WoWS-Fitting-Tool", "Date": "2016-07-07T23:33:23Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (partitionOfNode > 1) { if ((nodeID % numberOfNodesInPartition) == 0) { int neighborToAdd = (nodeID - 1) % (numberOfNodes); if (neighborToAdd < 0) neighbors.add((neighborToAdd + (numberOfNodes))); else neighbors.add(neighborToAdd); }else if ((nodeID % numberOfNodesInPartition) == (numberOfNodesInPartition - 1)) { neighbors.add(((nodeID + 1) % (numberOfNodes))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2926/buggy-version/Tools.InputGenerator.src.InputGenerator.java", "BodyUseAPI": [], "Fixed commit": "0cca2a521f82d06046f1d583342391e2f9e8113e", "Url": "https://api.github.com/repos/speter52/GraphSim", "Date": "2015-12-01T20:35:00Z"},
{"Line": "=>487", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cbxFachTyp.getSelectedItem().equals(\"FL\")) { l.setLagerort(Lager.Lagerort.freilager); }else { l.setLagerort(Lager.Lagerort.hochregal); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/779/buggy-version/view.BestandsaenderungFrame.java", "BodyUseAPI": [], "Fixed commit": "3196f1378bcdbfb9be308b386949612f6581d386", "Url": "https://api.github.com/repos/lagerverwaltung/lagerverwaltung", "Date": "2013-12-02T09:42:37Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cypherQuery.endsWith(\";\")) { cypherQuery = cypherQuery.substring(0, ((cypherQuery.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1300/buggy-version/spring-data-neo4j.src.main.java.org.springframework.data.neo4j.repository.query.GraphRepositoryQuery.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "635ae9a5b71754e58a1670ce1061b47861aa0d27", "Url": "https://api.github.com/repos/jasperblues/spring-data-neo4j", "Date": "2016-08-05T04:52:26Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((out) != null) { out.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5986/buggy-version/src.utwente.ss.connect.server.controller.ClientHandlerController.java", "BodyUseAPI": [], "Fixed commit": "daed4a3d4eb77e9f539ea51f3f4c52113d3284c3", "Url": "https://api.github.com/repos/victorlap/ss-connect-four-3d", "Date": "2017-02-01T18:31:01Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sock) != null) { sock.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5986/buggy-version/src.utwente.ss.connect.server.controller.ClientHandlerController.java", "BodyUseAPI": [], "Fixed commit": "daed4a3d4eb77e9f539ea51f3f4c52113d3284c3", "Url": "https://api.github.com/repos/victorlap/ss-connect-four-3d", "Date": "2017-02-01T18:31:01Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((in) != null) { in.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5986/buggy-version/src.utwente.ss.connect.server.controller.ClientHandlerController.java", "BodyUseAPI": [], "Fixed commit": "daed4a3d4eb77e9f539ea51f3f4c52113d3284c3", "Url": "https://api.github.com/repos/victorlap/ss-connect-four-3d", "Date": "2017-02-01T18:31:01Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getName().getParts().size()) == 1) { io.crate.analyze.Symbol symbol = context.symbolFromAlias(node.getSuffix().getSuffix()); if (symbol != null) { return symbol; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8789/buggy-version/sql.src.main.java.io.crate.analyze.SelectStatementAnalyzer.java", "BodyUseAPI": ["node.getSuffix().getSuffix()", "io.crate.analyze.SelectAnalysis.symbolFromAlias(node.getSuffix().getSuffix())", "io.crate.analyze.QualifiedNameReference.getSuffix()"], "Fixed commit": "ac6e00e66fd161983baa8f2ad2f9931c4246865b", "Url": "https://api.github.com/repos/crate/crate", "Date": "2014-03-26T13:40:29Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((splits != null) && ((splits.length) == 2)) { sb.append(\"<li><a href=\\\"\").append(metricsUri).append(\"/tp/\").append(tp).append(((((\"?pretty=true&topic=\" + (splits[0])) + \"&partition=\") + (splits[1])) + \"\\\">\")).append(tp).append(\"</a></li>\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6120/buggy-version/hermes-metrics.src.main.java.com.ctrip.hermes.metrics.HermesServlet.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "f4e92adc8db1ce6d32a17c1a41fbc3fc58590621", "Url": "https://api.github.com/repos/yiming187/hermes", "Date": "2016-01-25T11:09:48Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((splits != null) && ((splits.length) == 3)) { sb.append(\"<li><a href=\\\"\").append(metricsUri).append(\"/tpg/\").append(tpg).append(((((((\"?pretty=true&topic=\" + (splits[0])) + \"&partition=\") + (splits[1])) + \"&group=\") + (splits[2])) + \"\\\">\")).append(tpg).append(\"</a></li>\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6120/buggy-version/hermes-metrics.src.main.java.com.ctrip.hermes.metrics.HermesServlet.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "f4e92adc8db1ce6d32a17c1a41fbc3fc58590621", "Url": "https://api.github.com/repos/yiming187/hermes", "Date": "2016-01-25T11:09:48Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((recipe.title) != null) title = recipe.title.toLowerCase();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6618/buggy-version/app.src.main.java.com.pbylicki.cookbook.BrowseActivity.java", "BodyUseAPI": ["recipe.title.toLowerCase()"], "Fixed commit": "888b751e73fed3555696f202b4839cbdc4cc1828", "Url": "https://api.github.com/repos/pantikapajon/Cookbook", "Date": "2015-01-22T10:30:58Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jgit.lib.Repository.getRef(Constants.HEAD)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (HEAD == null) { throw new org.apache.maven.plugin.MojoExecutionException(\"Could not get HEAD Ref, are you sure you've set the dotGitDirectory property of this plugin to a valid path?\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3020/buggy-version/src.main.java.pl.project13.maven.git.GitCommitIdMojo.java", "BodyUseAPI": [], "Fixed commit": "ae0984e49893566fcc0fa9ebc32bbe75eef39d14", "Url": "https://api.github.com/repos/ags313/maven-git-commit-id-plugin", "Date": "2011-02-26T13:41:28Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(dependency.getFileName())", "java.util.regex.Pattern.matcher(i.getValue())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((coreJsfCPE.matches()) && (!(coreJsfFiles.matches()))) { itr.remove(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2809/buggy-version/dependency-check-core.src.main.java.org.owasp.dependencycheck.analyzer.FalsePositiveAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "20fe237c886da4f740b8456847fa0b32b5fc759b", "Url": "https://api.github.com/repos/colezlaw/DependencyCheck", "Date": "2014-06-14T11:04:02Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((transmitters.size()) == 0) { deregister(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5649/buggy-version/common.mekanism.api.transmitters.DynamicNetwork.java", "BodyUseAPI": [], "Fixed commit": "89e2279cb9d472485500ca16f449ebefe15733a1", "Url": "https://api.github.com/repos/aidancbrady/Mekanism", "Date": "2014-02-04T13:15:20Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ithinktree.becky.CophylogenyLikelihood.getStatesForNode(dr.evolution.tree.NodeRef)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (hostTree.isExternal(host)) throw new dr.inference.operators.OperatorFailedException(\"No change in state\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2242/buggy-version/src.org.ithinktree.becky.TugOperator.java", "BodyUseAPI": [], "Fixed commit": "00cb4363a9397b45b37e79e48a89cae39dc98c4c", "Url": "https://api.github.com/repos/armanbilge/BECKY", "Date": "2014-05-07T04:53:54Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.marklogic.client.impl.FailedRequest.getFailedRequest(response.getStatus(),response.getType(),java.io.InputStream)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((handler.getMessage()) == null) { handler.setMessageString(responseBody); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8208/buggy-version/src.main.java.com.marklogic.client.impl.JerseyServices.java", "BodyUseAPI": ["com.marklogic.client.impl.FailedRequest.setMessageString(java.lang.String)"], "Fixed commit": "e6daf26f129e0c8f985599e6a7ff69f1c1234025", "Url": "https://api.github.com/repos/laquereric/java-client-api", "Date": "2016-09-22T01:09:02Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((response.getStatus()) == 401) { com.marklogic.client.impl.FailedRequest failure = new com.marklogic.client.impl.FailedRequest(); failure.setMessageString(\"Unauthorized\"); failure.setStatusString(\"Failed Auth\"); return failure; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8208/buggy-version/src.main.java.com.marklogic.client.impl.JerseyServices.java", "BodyUseAPI": [], "Fixed commit": "e6daf26f129e0c8f985599e6a7ff69f1c1234025", "Url": "https://api.github.com/repos/laquereric/java-client-api", "Date": "2016-09-22T01:09:02Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(snapshot.getValue().toString().equals(\"true\"))) { usersmap = ((java.util.Map<java.lang.String, java.lang.Object>) (snapshot.getValue())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1724/buggy-version/app.src.main.java.com.example.lasyaboddapati.moneymatters.Addfriends.java", "BodyUseAPI": ["com.firebase.client.DataSnapshot.getValue()"], "Fixed commit": "7440199e5bc2a26267fa135f63fff4321e147d6e", "Url": "https://api.github.com/repos/kaustavghosh06/MoneyMatters-Android-App", "Date": "2015-03-07T03:35:41Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (usersmap != null) { for (java.lang.String key : usersmap.keySet()) { friendlist.add(key); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1724/buggy-version/app.src.main.java.com.example.lasyaboddapati.moneymatters.Addfriends.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.keySet()"], "Fixed commit": "7440199e5bc2a26267fa135f63fff4321e147d6e", "Url": "https://api.github.com/repos/kaustavghosh06/MoneyMatters-Android-App", "Date": "2015-03-07T03:35:41Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MenuItem.getItemId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == (R.id.settings)) { homeActivity.showPreferences(); }else if (id == (R.id.help)) { homeActivity.showHelp(); }else if (id == (R.id.mapManager)) { homeActivity.showLocalMaps(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4977/buggy-version/app.src.main.java.com.leaf.clips.view.HomeViewImp.java", "BodyUseAPI": [], "Fixed commit": "a4f982dfe67f8ba0a5c40f4456032bcbacd2ed99", "Url": "https://api.github.com/repos/LeafSWE/clips", "Date": "2016-05-26T15:41:06Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.co.rjsoftware.xmpp.model.RoomListModel.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (null != room) { room.join(this.connection); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3288/buggy-version/src.main.java.uk.co.rjsoftware.xmpp.model.RecentChatPersistor.java", "BodyUseAPI": ["uk.co.rjsoftware.xmpp.model.Room.join(uk.co.rjsoftware.xmpp.client.CustomConnection)"], "Fixed commit": "30e7c77f8a7ddd4aca4ef36589ed52280bab4f3c", "Url": "https://api.github.com/repos/richardsimpson/chat-client", "Date": "2014-08-17T19:08:04Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.co.rjsoftware.xmpp.model.UserListModel.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (null != user) { user.join(this.connection); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3288/buggy-version/src.main.java.uk.co.rjsoftware.xmpp.model.RecentChatPersistor.java", "BodyUseAPI": ["uk.co.rjsoftware.xmpp.model.User.join(uk.co.rjsoftware.xmpp.client.CustomConnection)"], "Fixed commit": "30e7c77f8a7ddd4aca4ef36589ed52280bab4f3c", "Url": "https://api.github.com/repos/richardsimpson/chat-client", "Date": "2014-08-17T19:08:04Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cls == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2370/buggy-version/ascent.src.main.java.net.jamesbaca.ascent.Ascent.java", "BodyUseAPI": [], "Fixed commit": "9763a59a7f98ac00ad96cf5dd96cb7caab3cb83f", "Url": "https://api.github.com/repos/desertjim/ascent", "Date": "2014-10-18T05:17:25Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<android.content.pm.ResolveInfo>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((com.todoroo.astrid.producteev.ProducteevPreferences.class.getName().equals(resolveInfo.activityInfo.name)) && (!(ProducteevUtilities.INSTANCE.isLoggedIn()))) && (!(com.todoroo.andlib.utility.Preferences.getBoolean(R.string.p_third_party_addons, false)))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7805/buggy-version/astrid.src.com.todoroo.astrid.helper.SyncActionHelper.java", "BodyUseAPI": [], "Fixed commit": "3956b340d3336f4039ba15c244312bfa3d3ec36b", "Url": "https://api.github.com/repos/todoroo/astrid", "Date": "2012-05-18T23:45:42Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (requestCode == (CallbackManagerImpl.RequestCodeOffset.Login.toRequestCode())) { mCallbackManager.onActivityResult(requestCode, resultCode, data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4274/buggy-version/app.src.main.java.com.oddhov.facebookcalendarsync.LoginFragment.java", "BodyUseAPI": ["com.facebook.CallbackManager.onActivityResult(int,int,android.content.Intent)"], "Fixed commit": "6ea48d9d5f2503efb3fc479b259db46889112e69", "Url": "https://api.github.com/repos/SammyO/FacebookCalendarSync", "Date": "2017-05-04T13:38:57Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (requestCode == (CallbackManagerImpl.RequestCodeOffset.Login.toRequestCode())) { mCallbackManager.onActivityResult(requestCode, resultCode, data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4274/buggy-version/app.src.main.java.com.oddhov.facebookcalendarsync.MainActivity.java", "BodyUseAPI": ["com.facebook.CallbackManager.onActivityResult(int,int,android.content.Intent)"], "Fixed commit": "6ea48d9d5f2503efb3fc479b259db46889112e69", "Url": "https://api.github.com/repos/SammyO/FacebookCalendarSync", "Date": "2017-05-04T13:38:57Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (onlineMode) { return db.getHighscores(); }else { throw new AntiTD.NoDatabaseConnectionException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6086/buggy-version/src.AntiTD.Environment.java", "BodyUseAPI": [], "Fixed commit": "266d7133d87ce094ce33a8ec92619017d0039bae", "Url": "https://api.github.com/repos/dv13tes/AntiTD", "Date": "2015-12-14T10:27:20Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["realm.where(com.kilogramm.mattermost.model.entity.Channel.class).equalTo(\"type\", \"O\").findFirst()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (channel != null) setSelectedChannel(channel.getId(), channel.getName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/159/buggy-version/app.src.main.java.com.kilogramm.mattermost.presenter.GeneralPresenter.java", "BodyUseAPI": ["com.kilogramm.mattermost.model.entity.Channel.getName()", "com.kilogramm.mattermost.model.entity.Channel.getId()", "com.kilogramm.mattermost.presenter.GeneralPresenter.setSelectedChannel(channel.getId(),channel.getName())"], "Fixed commit": "3520b167af6832fce5e48267e3b49bd321081276", "Url": "https://api.github.com/repos/Kilograpp/Mattermost-Android-Native", "Date": "2016-09-14T08:44:18Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tiles == null) return org.csdgn.cddatse.data.AsciiEntry.createAsciiTile(width, height, chr, fg, bg);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1159/buggy-version/src.org.csdgn.cddatse.data.AsciiEntry.java", "BodyUseAPI": [], "Fixed commit": "1945acdf40489a03978071c8e5846a72c12aa466", "Url": "https://api.github.com/repos/Chase-san/CDDA-Tileset-Editor", "Date": "2014-03-07T09:49:51Z"},
{"Line": "=>587", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((validFrom) != null) && ((validUpTo) != null)) { isError = dateValidation(isError); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4808/buggy-version/phresco-service-web.src.main.java.com.photon.phresco.service.admin.actions.admin.Customers.java", "BodyUseAPI": [], "Fixed commit": "d93a06ee8bee5727e91fb49952b537a6b9504640", "Url": "https://api.github.com/repos/photon-infotech/service", "Date": "2014-04-15T14:22:34Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.endeavourhealth.core.database.dal.ehr.ResourceDalI.getCurrentVersion(resourceType.toString(),java.util.UUID)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (extraResource == null) { java.util.List<org.endeavourhealth.core.database.dal.ehr.models.ResourceWrapper> history = resourceDal.getResourceHistory(resourceType.toString(), exchangeId); for (int i = (history.size()) - 1; i >= 0; i--) { org.endeavourhealth.core.database.dal.ehr.models.ResourceWrapper historyItem = history.get(i); if (!(historyItem.isDeleted())) { extraResource = historyItem; break; } } if (extraResource == null) { continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6912/buggy-version/src.eds-messaging-core.src.main.java.org.endeavourhealth.core.messaging.pipeline.components.MessageTransformOutbound.java", "BodyUseAPI": [], "Fixed commit": "0b5b53442f5bae0365e1e47a785fa1bc26ef9d4d", "Url": "https://api.github.com/repos/endeavourhealth/EDS", "Date": "2017-12-24T16:35:53Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rg) != null) { rg.setOnCheckedChangeListener(null); if ((getCurrentItem()) < (rg.getChildCount())) { rg.check(rg.getChildAt(getCurrentItem()).getId()); } rg.setOnCheckedChangeListener(occl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6008/buggy-version/android-easy-core.src.main.java.com.easy.view.EasyPager.java", "BodyUseAPI": [], "Fixed commit": "10b637768ba4bbc8e762e460d201c1865dd780f0", "Url": "https://api.github.com/repos/jokehuang/android-easy", "Date": "2016-05-11T03:40:14Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.bestread.app.bestread.SessionManager.g.isAuthenticated()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1756/buggy-version/app.src.main.java.com.bestread.app.bestread.SessionManager.java", "BodyUseAPI": [], "Fixed commit": "cf954230c55dc97fd9eafd9f53feb0971115f1dc", "Url": "https://api.github.com/repos/alfredsamy/BestRead", "Date": "2016-12-05T16:07:13Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(offerers.exists())) { offerers.mkdirs(); }else { for (java.io.File f : offerers.listFiles()) { f.delete(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/9001/buggy-version/AndroidCode.app.src.main.java.itsjustaaron.food.FoodActivities.OfferFragment.java", "BodyUseAPI": ["java.io.File.mkdirs()", "java.io.File.listFiles()"], "Fixed commit": "294eddeb71af98531ad85cd241aeb1d97ca4c361", "Url": "https://api.github.com/repos/TheLegendaryDuke/Food", "Date": "2017-02-27T15:07:18Z"},
{"Line": "=>558", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((simpleClassName.endsWith(\"$\")) && ((simpleClassName.length()) > 1)) { simpleClassName = simpleClassName.substring(0, ((simpleClassName.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4575/buggy-version/PluginsAndFeatures.azure-toolkit-for-eclipse.com.microsoft.azuretools.hdinsight.src.com.microsoft.azuretools.hdinsight.spark.ui.SparkSubmissionExDialog.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "0c396f8a2b143c7daa08790ec8ae4d30cf4b3ad8", "Url": "https://api.github.com/repos/djlan/azure-tools-for-java", "Date": "2017-11-30T04:28:30Z"},
{"Line": "=>552", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jdt.core.IType.getElementName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((simpleClassName == null) || (simpleClassName.isEmpty())) { simpleClassName = unitName.substring(0, ((unitName.length()) - 6)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4575/buggy-version/PluginsAndFeatures.azure-toolkit-for-eclipse.com.microsoft.azuretools.hdinsight.src.com.microsoft.azuretools.hdinsight.spark.ui.SparkSubmissionExDialog.java", "BodyUseAPI": [], "Fixed commit": "0c396f8a2b143c7daa08790ec8ae4d30cf4b3ad8", "Url": "https://api.github.com/repos/djlan/azure-tools-for-java", "Date": "2017-11-30T04:28:30Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gui) == null) gui = new com.neuronrobotics.nrconsole.plugin.BowlerConfig.BowlerConfigPanel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6351/buggy-version/application.nrconsole.src.com.neuronrobotics.nrconsole.plugin.BowlerConfig.NRConsoleBowlerConfigPlugin.java", "BodyUseAPI": [], "Fixed commit": "74e14643b441d3d38cbf5232f7b52bacdba359e7", "Url": "https://api.github.com/repos/NeuronRobotics/NrConsole", "Date": "2014-07-21T18:44:22Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mContext.getContentResolver().query(DataContract.CarTable.CONTENT_URI,<nulltype>,(((DataContract.CarTable._ID) + \" = \") + (mCurrentCarId)),<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (carCursor.moveToFirst()) { mCarDetailView.showCar(com.automotive.hhi.mileagetracker.model.data.CarFactory.fromCursor(carCursor)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5423/buggy-version/app.src.main.java.com.automotive.hhi.mileagetracker.presenter.CarDetailPresenter.java", "BodyUseAPI": ["com.automotive.hhi.mileagetracker.model.data.CarFactory.fromCursor(android.database.Cursor)", "com.automotive.hhi.mileagetracker.view.CarDetailView.showCar(com.automotive.hhi.mileagetracker.model.data.CarFactory.fromCursor(carCursor))"], "Fixed commit": "f1422d9d8f27055c82449624b48c1a82e6a6382f", "Url": "https://api.github.com/repos/JHadley1406/Capstone", "Date": "2016-04-07T21:14:36Z"},
{"Line": "=>2439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(maAgreements.isEmpty())) { mltAgreementReference.add(mhAgreeAgreeRef.get(msAgreement)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1023/buggy-version/src.erp.mod.fin.form.SFormLayoutBank.java", "BodyUseAPI": [], "Fixed commit": "215d9abf00350a6c2c676e0b9a5fe7a4a49dccef", "Url": "https://api.github.com/repos/swaplicado/siie32", "Date": "2017-06-01T21:13:42Z"},
{"Line": "=>2436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((moDateDateDue.getValue().equals(resulSet.getDate(\"dt_mat\"))) && (!(maAgreements.isEmpty()))) { mltAgreementReference.add(maAgreementsReference); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1023/buggy-version/src.erp.mod.fin.form.SFormLayoutBank.java", "BodyUseAPI": [], "Fixed commit": "215d9abf00350a6c2c676e0b9a5fe7a4a49dccef", "Url": "https://api.github.com/repos/swaplicado/siie32", "Date": "2017-06-01T21:13:42Z"},
{"Line": "=>2530", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(maAgreements.isEmpty())) { mltAgreementReference.add(mhAgreeAgreeRef.get(msAgreement)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1023/buggy-version/src.erp.mod.fin.form.SFormLayoutBank.java", "BodyUseAPI": [], "Fixed commit": "215d9abf00350a6c2c676e0b9a5fe7a4a49dccef", "Url": "https://api.github.com/repos/swaplicado/siie32", "Date": "2017-06-01T21:13:42Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flag == (-1)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3478/buggy-version/lucene.core.src.java.org.apache.lucene.search.HighlightAdapter.java", "BodyUseAPI": [], "Fixed commit": "8526ce64d2527fc5111d943a33ea0d73d9b5e160", "Url": "https://api.github.com/repos/raphael0914/Lucene", "Date": "2013-12-29T14:29:28Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tmp < 0) { tmp += 360; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2823/buggy-version/app.src.main.java.com.holenstudio.awesomeview.view.TurntableLayout.java", "BodyUseAPI": [], "Fixed commit": "a42b755954698110a3279974c9a20ec5b481c0b5", "Url": "https://api.github.com/repos/holenstudio/AwesomeView", "Date": "2016-06-20T06:46:01Z"},
{"Line": "=>784", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.rockwellcollins.atc.agree.agree.BinaryExpr.getRight()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!((rightSide instanceof com.rockwellcollins.atc.agree.agree.ConstStatement) || (rightSide instanceof com.rockwellcollins.atc.agree.agree.RealLitExpr))) { error(binExpr, ((\"right side of binary expression '\" + op) + \"' is not constant\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/427/buggy-version/fm-workbench.agree.com.rockwellcollins.atc.agree.src.com.rockwellcollins.atc.agree.validation.AgreeJavaValidator.java", "BodyUseAPI": [], "Fixed commit": "9c4eb8df4595672af0f375b7060d35137b157089", "Url": "https://api.github.com/repos/smaccm/smaccm", "Date": "2014-03-04T17:19:55Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((attendee.getLocation()) != null) { list.add(new cn.mobiledaily.web.pojo.CheckIn(java.lang.String.valueOf(attendee.getId()), attendee.getLocation().getLatitude(), attendee.getLocation().getLongitude(), attendee.getLocation().getAddress(), dateFormat.format(attendee.getCheckInAt()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1347/buggy-version/src.main.java.cn.mobiledaily.web.assembler.CheckInAssembler.java", "BodyUseAPI": ["cn.mobiledaily.domain.mobile.Attendee.getId()", "cn.mobiledaily.domain.mobile.Attendee.getLocation()", "cn.mobiledaily.domain.mobile.Attendee.getCheckInAt()", "java.util.List<cn.mobiledaily.web.pojo.CheckIn>.add(cn.mobiledaily.web.pojo.CheckIn)", "attendee.getLocation().getLongitude()", "cn.mobiledaily.domain.mobile.Attendee.getLocation()", "cn.mobiledaily.domain.mobile.Attendee.getLocation()", "java.lang.String.valueOf(attendee.getId())", "attendee.getLocation().getAddress()", "attendee.getLocation().getLatitude()", "java.text.DateFormat.format(attendee.getCheckInAt())"], "Fixed commit": "fbd1cdaff39a1b467d4f93cbaf7b4b2fe77794f7", "Url": "https://api.github.com/repos/qiaohe/exhibition", "Date": "2013-04-01T06:28:13Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((dwin / (dloss + dwin)) * 100) >= 10) { }else { return \"0\" + (df2.format(((dwin / (dloss + dwin)) * 100))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3805/buggy-version/app.src.main.java.com.example.guest.binder.models.Character.java", "BodyUseAPI": ["java.text.DecimalFormat.format(double)"], "Fixed commit": "bb5071bafde4cccfb9fa5352cecacae54c76839d", "Url": "https://api.github.com/repos/GarrettBoggs/DethWarz", "Date": "2016-12-16T21:21:03Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["alluxio.util.io.PathUtils.concatPath(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (alluxio.util.io.FileUtils.exists(tmpDirPath)) { alluxio.worker.block.meta.StorageTier.LOG.error(\"Failed to clean up temporary directory: {}.\", tmpDirPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3944/buggy-version/core.server.src.main.java.alluxio.worker.block.meta.StorageTier.java", "BodyUseAPI": ["org.slf4j.Logger.error(java.lang.String,java.lang.String)"], "Fixed commit": "3359e39fc8e33cb49d999f6c92a33ad5c8de4d8a", "Url": "https://api.github.com/repos/aaudiber/alluxio", "Date": "2016-05-24T20:46:47Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((openTiles.size()) == 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4893/buggy-version/src.entity.mobs.ai.path.Path.java", "BodyUseAPI": [], "Fixed commit": "2e542722641221796f601f158342f48d845dd983", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2016-03-26T13:28:11Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((world.getTileEntity(pos)) != null) && ((world.getTileEntity(pos)) instanceof wurmatron.spritesofthegalaxy.common.tileentity.TileMutiBlock)) { wurmatron.spritesofthegalaxy.common.tileentity.TileMutiBlock tile = ((wurmatron.spritesofthegalaxy.common.tileentity.TileMutiBlock) (world.getTileEntity(pos))); if (tile != null) tile.setCore(core); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5958/buggy-version/src.main.java.wurmatron.spritesofthegalaxy.common.utils.MutiBlockHelper.java", "BodyUseAPI": ["net.minecraft.world.World.getTileEntity(net.minecraft.util.math.BlockPos)"], "Fixed commit": "fdcc9908d838f54260a1be95cd84def93c37904d", "Url": "https://api.github.com/repos/Wurmatron/Sprites-Of-The-Galaxy", "Date": "2017-06-24T00:11:47Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<model.technologies.TechnologyType, model.technologies.Technology>.get(model.technologies.TechnologyType)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (t == null) { t = new model.technologies.Technology(type); this.tech.put(type, t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5466/buggy-version/WEB-INF.src.model.user.Actor.java", "BodyUseAPI": [], "Fixed commit": "426af3417e6b2ea944ded8f847d8c4f1eb312f62", "Url": "https://api.github.com/repos/judos/fisk", "Date": "2014-04-21T13:23:47Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ethanjones.cubes.world.CoordinateConverter.block(((player.position.y) - (player.height)))", "ethanjones.cubes.side.common.Cubes.getClient().world.getArea(ethanjones.cubes.world.CoordinateConverter.area(player.position.x),ethanjones.cubes.world.CoordinateConverter.area(player.position.z))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (y > (area.maxY)) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/880/buggy-version/core.src.ethanjones.cubes.side.client.ClientDebug.java", "BodyUseAPI": [], "Fixed commit": "fc706045840c87c319242da8c814422d4510cd39", "Url": "https://api.github.com/repos/ictrobot/Cubes", "Date": "2016-04-11T20:37:06Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ethanjones.cubes.world.CoordinateConverter.block(((player.position.y) - (player.height)))", "ethanjones.cubes.side.common.Cubes.getClient().world.getArea(ethanjones.cubes.world.CoordinateConverter.area(player.position.x),ethanjones.cubes.world.CoordinateConverter.area(player.position.z))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (y > (area.maxY)) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/880/buggy-version/core.src.ethanjones.cubes.side.client.ClientDebug.java", "BodyUseAPI": [], "Fixed commit": "fc706045840c87c319242da8c814422d4510cd39", "Url": "https://api.github.com/repos/ictrobot/Cubes", "Date": "2016-04-11T20:37:06Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["functions.ResponseFunction.devicesByPriority(java.util.List<functions.Device>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((devicesByPriority.get(k).get(l).getDeviceUsage()) >= 10) { devicesByPriority.get(k).get(l).setDeviceUsage(10); totalDevicesGreaterThanTen++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7853/buggy-version/CSULA-NRG.src.functions.ResponseFunction.java", "BodyUseAPI": ["java.util.List<java.util.List<functions.Device>>.get(int)", "devicesByPriority.get(k).get(l).setDeviceUsage(int)", "devicesByPriority.get(k).get(int)"], "Fixed commit": "9fba93a7bf4bcaebb210209ba2fabddc130e4c38", "Url": "https://api.github.com/repos/flyingsader/CSULA-NRG", "Date": "2014-02-21T02:23:26Z"},
{"Line": "=>470", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((storage.getStoredSettings().getSettingValue(SettingsLogic.WASD_NAV_SETTING)) == null) { storage.getStoredSettings().saveSetting(SettingsLogic.WASD_NAV_SETTING, SettingsLogic.DEFAULT_GAMEPAD_SETTING); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2425/buggy-version/src.aurora.V1.core.screen_ui.DashboardUI.java", "BodyUseAPI": ["aurora.V1.core.AuroraStorage.getStoredSettings()", "storage.getStoredSettings().saveSetting(SettingsLogic.WASD_NAV_SETTING,SettingsLogic.DEFAULT_GAMEPAD_SETTING)"], "Fixed commit": "f184b0fb67c26fe29dd2bdb35ac1eeb518942401", "Url": "https://api.github.com/repos/sguergachi/AuroraGameHub", "Date": "2014-08-09T05:09:52Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.ByteBuffer.getInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (length < 2) { throw new java.io.IOException(\"Length prefix on wire for expected JSON string is less than minimum size of a valid JSON document.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3135/buggy-version/src.frontend.org.voltcore.messaging.SocketJoiner.java", "BodyUseAPI": [], "Fixed commit": "d2c464095948eca0d7407fccb4c1bc7020026eeb", "Url": "https://api.github.com/repos/VoltDB/voltdb", "Date": "2014-07-29T15:29:19Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((story_id) != null) cmdStatement.setLong(1, story_id);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2284/buggy-version/src.nnode.StoryWriter.java", "BodyUseAPI": [], "Fixed commit": "8b4f008f62cb434d9598e98a7f8dfac32f31c867", "Url": "https://api.github.com/repos/vossnarrator/NarratorNode", "Date": "2017-04-11T22:24:59Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((passwordAuth) != null) auth = passwordAuth.authenticate(new java.lang.String[]{ input }); else disconnect(\"Couldn't find a working authentication method.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1842/buggy-version/src.com.redstoner.remote_console.protected_classes.User.java", "BodyUseAPI": [], "Fixed commit": "b4181181a4251b4c9244abe87908381380c02592", "Url": "https://api.github.com/repos/Pepich/Remote-Console", "Date": "2016-11-18T23:42:57Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.redcross.openmapkit.OSMMapBuilder.sharedPreferences) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/575/buggy-version/app.src.main.java.org.redcross.openmapkit.OSMMapBuilder.java", "BodyUseAPI": [], "Fixed commit": "8d45db4c4e05864874fe39842e1eb2dc3e62b1fd", "Url": "https://api.github.com/repos/posm/OpenMapKitAndroid", "Date": "2016-04-19T14:54:46Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mSettings.isSwipeToPaginate()) v.setOnTouchListener(new com.mde.potdroid.fragments.PaginateFragment.PaginateDragListener());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7282/buggy-version/src.main.java.com.mde.potdroid.fragments.PaginateFragment.java", "BodyUseAPI": [], "Fixed commit": "527d4a350a17e446a166871bb03f2a155f0929d1", "Url": "https://api.github.com/repos/janoliver/pOT-Droid", "Date": "2014-12-25T14:59:30Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mainRowElement.select(\"span.comment > span\").first()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (mainCommentSpan == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8579/buggy-version/hn-android.src.com.manuelmaly.hn.parser.HNCommentsParser.java", "BodyUseAPI": [], "Fixed commit": "10792763429a35615e754f0597873aaa069c0bfd", "Url": "https://api.github.com/repos/manmal/hn-android", "Date": "2015-07-23T11:05:57Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (groupChat != null) { groupChat.setTopic(topic); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3072/buggy-version/src.main.java.com.birthday.bot.skype.bot.BirthdayChatCreator.java", "BodyUseAPI": ["com.samczsun.skype4j.chat.GroupChat.setTopic(java.lang.String)"], "Fixed commit": "689e038dce9102343f2c378e16bdf212f694d55a", "Url": "https://api.github.com/repos/vsevolodk/birthday.bot", "Date": "2016-03-13T23:12:38Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stopLocationRequestsTimer) != null) { stopLocationRequestsTimer.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7656/buggy-version/androidapp.src.main.java.com.artigile.checkmyphone.service.LocationServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "7c96e760d4b4688cbab435b130f516ac120a9f1f", "Url": "https://api.github.com/repos/ioanbsu/hosismyphonedoing", "Date": "2013-08-02T14:40:08Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (test2 == \"\") newNumber = 0; else newNumber = java.lang.Double.valueOf(test2);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2362/buggy-version/DMLOptimizer.src.model.DML.java", "BodyUseAPI": ["java.lang.Double.valueOf(java.lang.String)"], "Fixed commit": "e62ae012752d4f307360263603f583eb9e3b1eca", "Url": "https://api.github.com/repos/imohanan/DMLOptimizer", "Date": "2016-04-20T17:37:42Z"},
{"Line": "=>731", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((amount.length()) > 10) { this.addActionError(\"You can not enter more than 10 digits.\"); isSuccess = -1; return ERROR; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1298/buggy-version/versat.src.com.action.FundAction.java", "BodyUseAPI": [], "Fixed commit": "98b36ac2bbaaf8ebd440b1cd088ca89da0a338e6", "Url": "https://api.github.com/repos/keweiw/versat", "Date": "2013-01-30T02:19:55Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (arg instanceof com.tbodt.trp.Transformer) return com.tbodt.trp.ArgumentTypeList.ArgumentType.TRANSFORMER; else throw new java.lang.IllegalArgumentException((\"invalid argument type \" + arg));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6280/buggy-version/src.main.java.com.tbodt.trp.ArgumentTypeList.java", "BodyUseAPI": [], "Fixed commit": "f9f6ea9f539641b558eedabbaa435c6b356ebcde", "Url": "https://api.github.com/repos/tbodt/trp", "Date": "2014-07-05T00:11:36Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (expenseList != null) { java.util.Iterator<objects.Expense> it = expenseList.iterator(); objects.Expense expense = null; while (it.hasNext()) { expense = it.next(); if ((expense.getServiceID()) == (service.getID())) { result += expense.getValue(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/9184/buggy-version/src.business.ProcessExpenses.java", "BodyUseAPI": ["java.util.ArrayList<objects.Expense>.iterator()"], "Fixed commit": "d92e1a222c67d96ffd4f9abf6fc8bdd7cad2de77", "Url": "https://api.github.com/repos/UofM-CS3350-Grp1/Project", "Date": "2014-07-07T15:47:52Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ingred.getAllergen()) != null) { result += delim + (ingred.getAllergen()); delim = \", \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6297/buggy-version/src.beans.ClientSession.java", "BodyUseAPI": ["resources.Ingredient.getAllergen()"], "Fixed commit": "e747ce708a479ef114c850367a27910b3d942367", "Url": "https://api.github.com/repos/CodeGuro/SixTwelveProject", "Date": "2014-12-16T20:05:54Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (EntityTypesHandle.T.getName_old.isAvailable()) { return EntityTypesHandle.T.getName_old.invoke(type); }else if (EntityTypesHandle.T.entityNamesMap_1_8_8.isAvailable()) { return EntityTypesHandle.T.entityNamesMap_1_8_8.get().get(type); }else { throw new java.lang.UnsupportedOperationException(\"Entity Name by Class lookup is not supported on this server\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3990/buggy-version/src.main.java.com.bergerkiller.reflection.net.minecraft.server.NMSEntityTypes.java", "BodyUseAPI": [], "Fixed commit": "fd704818e34407399420ceac6ad0c932785c9c91", "Url": "https://api.github.com/repos/bergerhealer/BKCommonLib", "Date": "2017-08-28T22:57:46Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (trainTestSplitType.equals(Constants.RANDOM)) { p.setNumSplits(numSplitsInternalRandom); }else if (trainTestSplitType.equals(Constants.SPHEREEXCLUSION)) { p.setNumSplits(numSplitsInternalSphere); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1774/buggy-version/src.main.java.edu.unc.ceccr.chembench.actions.ModelAction.java", "BodyUseAPI": ["java.lang.String.equals(Constants.SPHEREEXCLUSION)"], "Fixed commit": "5d6954679925892e2fbf810bfc5acddf79c54246", "Url": "https://api.github.com/repos/ceccr/chembench", "Date": "2016-06-03T02:40:53Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mBannerPosition) == ((FAKE_BANNER_SIZE) - 1)) { mBanner.setCurrentItem(((DEFAULT_BANNER_SIZE) - 1), false); }else { mBanner.setCurrentItem(mBannerPosition); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6886/buggy-version/app.src.main.java.com.ryg.banner.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "eccac4b87c97ceb8fe1d22e01e06363b99d5bd30", "Url": "https://api.github.com/repos/singwhatiwanna/banner", "Date": "2015-08-19T07:14:53Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuilder.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (android.text.TextUtils.isDigitsOnly(innerClassName)) { innerClassName = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2222/buggy-version/plog.src.main.java.org.mym.plog.LogEngine.java", "BodyUseAPI": [], "Fixed commit": "5c617992bef478e2cdb83eb496ec37b72172411f", "Url": "https://api.github.com/repos/JumeiRdGroup/Android-PLog", "Date": "2017-01-13T14:09:07Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((sbInnerClass.length()) > 0) && ((sbInnerClass.charAt(0)) == '$')) { sbInnerClass.deleteCharAt(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2222/buggy-version/plog.src.main.java.org.mym.plog.LogEngine.java", "BodyUseAPI": ["java.lang.StringBuilder.deleteCharAt(int)"], "Fixed commit": "5c617992bef478e2cdb83eb496ec37b72172411f", "Url": "https://api.github.com/repos/JumeiRdGroup/Android-PLog", "Date": "2017-01-13T14:09:07Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (guilayer.getButtonsMap().get(\"aktionenBeschwichtigen\").isEnabled()) { guilayer.getButtonsMap().get(\"aktionenBeschwichtigen\").setEnabled(false); }else { guilayer.getButtonsMap().get(\"aktionenBeschwichtigen\").setEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7547/buggy-version/main.TheStreet.src.com.stalkindustries.main.game.Control.java", "BodyUseAPI": ["guilayer.getButtonsMap().get(java.lang.String)", "guilayer.getButtonsMap().get(\"aktionenBeschwichtigen\").setEnabled(boolean)", "com.stalkindustries.main.game.GUILayer.getButtonsMap()", "guilayer.getButtonsMap().get(\"aktionenBeschwichtigen\").setEnabled(boolean)", "com.stalkindustries.main.game.GUILayer.getButtonsMap()", "guilayer.getButtonsMap().get(java.lang.String)"], "Fixed commit": "fd28e124e0e8f9f50a58d8f22dde6a8dd91b61a8", "Url": "https://api.github.com/repos/topahl/die-Strasse", "Date": "2013-10-26T14:18:19Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (guilayer.getButtonsMap().get(\"aktionRazzia\").isEnabled()) { guilayer.getButtonsMap().get(\"aktionRazzia\").setEnabled(false); }else { guilayer.getButtonsMap().get(\"aktionRazzia\").setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7547/buggy-version/main.TheStreet.src.com.stalkindustries.main.game.Control.java", "BodyUseAPI": ["guilayer.getButtonsMap().get(\"aktionRazzia\").setEnabled(boolean)", "guilayer.getButtonsMap().get(java.lang.String)", "com.stalkindustries.main.game.GUILayer.getButtonsMap()", "guilayer.getButtonsMap().get(\"aktionRazzia\").setEnabled(boolean)", "guilayer.getButtonsMap().get(java.lang.String)", "com.stalkindustries.main.game.GUILayer.getButtonsMap()"], "Fixed commit": "fd28e124e0e8f9f50a58d8f22dde6a8dd91b61a8", "Url": "https://api.github.com/repos/topahl/die-Strasse", "Date": "2013-10-26T14:18:19Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (guilayer.getButtonsMap().get(\"aktionenSpionage\").isEnabled()) { guilayer.getButtonsMap().get(\"aktionenSpionage\").setEnabled(false); }else { guilayer.getButtonsMap().get(\"aktionenSpionage\").setEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7547/buggy-version/main.TheStreet.src.com.stalkindustries.main.game.Control.java", "BodyUseAPI": ["guilayer.getButtonsMap().get(java.lang.String)", "guilayer.getButtonsMap().get(java.lang.String)", "guilayer.getButtonsMap().get(\"aktionenSpionage\").setEnabled(boolean)", "com.stalkindustries.main.game.GUILayer.getButtonsMap()", "guilayer.getButtonsMap().get(\"aktionenSpionage\").setEnabled(boolean)", "com.stalkindustries.main.game.GUILayer.getButtonsMap()"], "Fixed commit": "fd28e124e0e8f9f50a58d8f22dde6a8dd91b61a8", "Url": "https://api.github.com/repos/topahl/die-Strasse", "Date": "2013-10-26T14:18:19Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (guilayer.getButtonsMap().get(\"aktionNachhause\").isEnabled()) { guilayer.getButtonsMap().get(\"aktionNachhause\").setEnabled(false); }else { guilayer.getButtonsMap().get(\"aktionNachhause\").setEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7547/buggy-version/main.TheStreet.src.com.stalkindustries.main.game.Control.java", "BodyUseAPI": ["guilayer.getButtonsMap().get(java.lang.String)", "com.stalkindustries.main.game.GUILayer.getButtonsMap()", "guilayer.getButtonsMap().get(java.lang.String)", "guilayer.getButtonsMap().get(\"aktionNachhause\").setEnabled(boolean)", "guilayer.getButtonsMap().get(\"aktionNachhause\").setEnabled(boolean)", "com.stalkindustries.main.game.GUILayer.getButtonsMap()"], "Fixed commit": "fd28e124e0e8f9f50a58d8f22dde6a8dd91b61a8", "Url": "https://api.github.com/repos/topahl/die-Strasse", "Date": "2013-10-26T14:18:19Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((funktion.equals(\"pause\")) || (funktion.equals(\"close\"))) || (funktion.equals(\"aktionenBeschwichtigen\"))) || (funktion.equals(\"aktionenSpionage\"))) { guilayer.getMousefollower().setVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7547/buggy-version/main.TheStreet.src.com.stalkindustries.main.game.Control.java", "BodyUseAPI": [], "Fixed commit": "fd28e124e0e8f9f50a58d8f22dde6a8dd91b61a8", "Url": "https://api.github.com/repos/topahl/die-Strasse", "Date": "2013-10-26T14:18:19Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["values.next().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((columns.split(\"\\\\t\").length) < 4) { fullCombinedColumns += '\\t' + columns; }else { fullCombinedColumns = (columns + '\\t') + fullCombinedColumns; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2455/buggy-version/src.processes.WikipediaHadoopDataProcess.java", "BodyUseAPI": [], "Fixed commit": "2b9dab039a4d41e114f68dc5c0bead62c49e95c4", "Url": "https://api.github.com/repos/bmarcaur/Wikipedia-Blur-Table-Creator", "Date": "2012-07-11T19:12:33Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mode == (com.jetbrains.jetpad.vclang.term.expr.visitor.NormalizeVisitor.Mode.NFH)) { com.jetbrains.jetpad.vclang.term.expr.visitor.Substitution substitution = new com.jetbrains.jetpad.vclang.term.expr.visitor.Substitution(); return Pi(visitParameters(expr.getParameters(), substitution, mode), expr.getCodomain().subst(substitution).accept(this, mode)); }else { return expr; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2001/buggy-version/src.main.java.com.jetbrains.jetpad.vclang.term.expr.visitor.NormalizeVisitor.java", "BodyUseAPI": ["expr.getCodomain().subst(substitution).accept(com.jetbrains.jetpad.vclang.term.expr.visitor.NormalizeVisitor,com.jetbrains.jetpad.vclang.term.expr.visitor.NormalizeVisitor.Mode)", "com.jetbrains.jetpad.vclang.term.expr.visitor.NormalizeVisitor.Pi(com.jetbrains.jetpad.vclang.term.context.param.DependentLink,expr.getCodomain().subst(substitution).accept(this, mode))", "com.jetbrains.jetpad.vclang.term.expr.visitor.NormalizeVisitor.visitParameters(expr.getParameters(),com.jetbrains.jetpad.vclang.term.expr.visitor.Substitution,com.jetbrains.jetpad.vclang.term.expr.visitor.NormalizeVisitor.Mode)"], "Fixed commit": "ac58be9ab92f7a241ec390d54af58c2307a56fcd", "Url": "https://api.github.com/repos/valis/vclang", "Date": "2016-01-29T07:12:25Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mode == (com.jetbrains.jetpad.vclang.term.expr.visitor.NormalizeVisitor.Mode.TOP)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2001/buggy-version/src.main.java.com.jetbrains.jetpad.vclang.term.expr.visitor.NormalizeVisitor.java", "BodyUseAPI": [], "Fixed commit": "ac58be9ab92f7a241ec390d54af58c2307a56fcd", "Url": "https://api.github.com/repos/valis/vclang", "Date": "2016-01-29T07:12:25Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mode == (com.jetbrains.jetpad.vclang.term.expr.visitor.NormalizeVisitor.Mode.NFH)) { com.jetbrains.jetpad.vclang.term.expr.visitor.Substitution substitution = new com.jetbrains.jetpad.vclang.term.expr.visitor.Substitution(); return Lam(visitParameters(expr.getParameters(), substitution, mode), expr.getBody().subst(substitution).accept(this, mode)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2001/buggy-version/src.main.java.com.jetbrains.jetpad.vclang.term.expr.visitor.NormalizeVisitor.java", "BodyUseAPI": ["expr.getBody().subst(substitution).accept(com.jetbrains.jetpad.vclang.term.expr.visitor.NormalizeVisitor,com.jetbrains.jetpad.vclang.term.expr.visitor.NormalizeVisitor.Mode)", "com.jetbrains.jetpad.vclang.term.expr.visitor.NormalizeVisitor.visitParameters(expr.getParameters(),com.jetbrains.jetpad.vclang.term.expr.visitor.Substitution,com.jetbrains.jetpad.vclang.term.expr.visitor.NormalizeVisitor.Mode)", "com.jetbrains.jetpad.vclang.term.expr.visitor.NormalizeVisitor.Lam(com.jetbrains.jetpad.vclang.term.context.param.DependentLink,expr.getBody().subst(substitution).accept(this, mode))"], "Fixed commit": "ac58be9ab92f7a241ec390d54af58c2307a56fcd", "Url": "https://api.github.com/repos/valis/vclang", "Date": "2016-01-29T07:12:25Z"},
{"Line": "=>587", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (getAliasForName(dev))) { LOGGER.log(java.util.logging.Level.WARNING, \"no Aliasname fpr Device...\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7301/buggy-version/src.de.dmarcini.submatix.pclogger.utils.ConnectDatabaseUtil.java", "BodyUseAPI": [], "Fixed commit": "4953bfdf234637247286827a9f57f2e9a30524e1", "Url": "https://api.github.com/repos/dmarc0001/submatixBTPC", "Date": "2012-09-05T16:47:35Z"},
{"Line": "=>907", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["userProfile.getProfile().getEducationInformation().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((educationInformation.getPassingYear()) != null) { education = (education + (com.nascenia.biyeta.utils.Utils.convertEnglishYearDigittoBangla(educationInformation.getPassingYear()))) + \" : \"; }else { education = education + \" : \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5303/buggy-version/app.src.main.java.com.nascenia.biyeta.view.SendRequestFragmentView.java", "BodyUseAPI": ["com.nascenia.biyeta.model.newuserprofile.EducationInformation.getPassingYear()", "com.nascenia.biyeta.utils.Utils.convertEnglishYearDigittoBangla(educationInformation.getPassingYear())"], "Fixed commit": "821986520b529614f5d164c4784a55e4c86f2007", "Url": "https://api.github.com/repos/Ovi-nascenia/b-ye", "Date": "2017-04-09T10:05:09Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((editableLine) != null) { resetLine(editableLine); disableLine(editableLine); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6478/buggy-version/app.src.main.java.org.openlmis.core.view.adapter.StockMovementAdapter.java", "BodyUseAPI": [], "Fixed commit": "4e9346d32c42cb51626c20d68522787b5157162e", "Url": "https://api.github.com/repos/SIGLUS/lmis-moz-mobile", "Date": "2015-09-07T10:07:30Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.sw926.imagefileselector.CommonUtils.hasSDCardMounted()) { if ((mCallback) != null) { mCallback.onError(ErrorResult.error); } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5679/buggy-version/library.src.main.java.com.sw926.imagefileselector.ImageCaptureHelper.java", "BodyUseAPI": [], "Fixed commit": "007d1368a37313616398fdfc4887f46a9989427b", "Url": "https://api.github.com/repos/sw926/ImageFileSelector", "Date": "2017-07-26T12:27:51Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCallback) != null) { mCallback.onError(ErrorResult.error); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5679/buggy-version/library.src.main.java.com.sw926.imagefileselector.ImageCaptureHelper.java", "BodyUseAPI": [], "Fixed commit": "007d1368a37313616398fdfc4887f46a9989427b", "Url": "https://api.github.com/repos/sw926/ImageFileSelector", "Date": "2017-07-26T12:27:51Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.Maps.newHashMap()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (result.containsKey(p.getFirst())) { if ((result.get(p.getFirst())) > (p.getSecond())) { continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5236/buggy-version/core-metadata.src.main.java.org.apache.kylin.dimension.DimensionEncodingFactory.java", "BodyUseAPI": ["org.apache.kylin.common.util.Pair<java.lang.String, java.lang.Integer>.getSecond()", "java.util.Map<java.lang.String, java.lang.Integer>.get(p.getFirst())", "org.apache.kylin.common.util.Pair<java.lang.String, java.lang.Integer>.getFirst()"], "Fixed commit": "9cf480bc64b3790765a75f5312187df318aadc40", "Url": "https://api.github.com/repos/apache/kylin", "Date": "2016-11-17T08:46:59Z"},
{"Line": "=>832", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (name != null) { uk.setName(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2872/buggy-version/src.main.java.com.alibaba.druid.sql.dialect.mysql.parser.MySqlCreateTableParser.java", "BodyUseAPI": ["com.alibaba.druid.sql.dialect.mysql.ast.MySqlUnique.setName(com.alibaba.druid.sql.ast.SQLName)"], "Fixed commit": "9939e497ba4a2a1ca86004fdbad46a18e6b0979c", "Url": "https://api.github.com/repos/alibaba/druid", "Date": "2017-07-23T17:48:56Z"},
{"Line": "=>823", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (name != null) { pk.setName(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2872/buggy-version/src.main.java.com.alibaba.druid.sql.dialect.mysql.parser.MySqlCreateTableParser.java", "BodyUseAPI": ["com.alibaba.druid.sql.dialect.mysql.ast.MySqlPrimaryKey.setName(com.alibaba.druid.sql.ast.SQLName)"], "Fixed commit": "9939e497ba4a2a1ca86004fdbad46a18e6b0979c", "Url": "https://api.github.com/repos/alibaba/druid", "Date": "2017-07-23T17:48:56Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.imagej.Dataset.dimension(this.dataset.dimensionIndex(Axes.CHANNEL))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (channelDimension >= 2) { this.datasetCursor.setPosition(new int[]{ x, y, this.channel, t }); }else { this.datasetCursor.setPosition(new int[]{ x, y, t }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/518/buggy-version/src.main.java.fiji.plugin.kymographbuilder.KymographCreator.java", "BodyUseAPI": [], "Fixed commit": "0275f390e1d77ef5fafcb9ee984cac0bdf9a7151", "Url": "https://api.github.com/repos/fiji/KymographBuilder", "Date": "2016-04-25T05:35:28Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fileToDelete.exists()) { boolean deleted = fileToDelete.delete(); if (deleted) { logger.info(((\"File: \" + (fileToDelete.getPath())) + \" successfully deleted\")); resumeDao.deleteResume(resume); }else { logger.error(\"file not deleted successfully\"); } }else { logger.info(\"file to delete doesn't exist.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5486/buggy-version/src.main.java.usjobs.web.controller.ResumeController.java", "BodyUseAPI": ["java.io.File.delete()", "org.apache.log4j.Logger.info(java.lang.String)", "java.io.File.getPath()"], "Fixed commit": "10e41e5aae7c38c243e726cad2cac43c0e086eac", "Url": "https://api.github.com/repos/jsunthon/US-Jobs", "Date": "2016-11-06T04:04:20Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listView) != null) { if (!(entityAdapter.isEmpty())) { entityAdapter.clear(); } entityAdapter.addAll(currentList.ByDistance); entityAdapter.notify(); }else { if ((listLayout.getChildCount()) > 0) { listLayout.removeAllViews(); } android.view.LayoutInflater inflater = ((android.view.LayoutInflater) (context.getSystemService(Context.LAYOUT_INFLATER_SERVICE))); for (com.discreteit.hybridaugmentation.MainActivity.AdjacentPoint p : currentList.ByDistance) { android.view.View view = inflater.inflate(R.layout.list_layout, null); com.discreteit.hybridaugmentation.TextView labelView = ((com.discreteit.hybridaugmentation.TextView) (view.findViewById(R.id.placeText))); com.discreteit.hybridaugmentation.TextView distText = ((com.discreteit.hybridaugmentation.TextView) (view.findViewById(R.id.distanceText))); labelView.setText(p.name); com.discreteit.hybridaugmentation.ImageView imageView = ((com.discreteit.hybridaugmentation.ImageView) (view.findViewById(R.id.iconView))); if ((p.distanceToOrigin) < 5) { imageView.setImageResource(R.drawable.red); }else if (((p.distanceToOrigin) > 5) && ((p.distanceToOrigin) < 15)) { imageView.setImageResource(R.drawable.yellow); }else { imageView.setImageResource(R.drawable.green); } distText.setText(((java.lang.Long.toString(java.lang.Math.round(p.distanceToOrigin))) + \" Meters\")); view.setOnClickListener(new android.view.View.OnClickListener() { public void onClick(final android.view.View v) { android.graphics.drawable.Drawable original = v.getBackground(); v.setBackgroundColor(-13388315); v.setBackground(original); } }); listLayout.addView(view); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5320/buggy-version/src.com.discreteit.hybridaugmentation.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "48b0481e316c80b1e16c9c8f0ac9cb0c652559bd", "Url": "https://api.github.com/repos/erito/HybridAugmentation", "Date": "2013-05-30T06:14:05Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((_filterUtil.getItemsAndCount().size()) > 0) && (((this.isExcludeFilter) && (_filterUtil.getItemsAndCount().containsKey(item))) || ((!(this.isExcludeFilter)) && (!(_filterUtil.getItemsAndCount().containsKey(item)))))) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/622/buggy-version/common.net.minecraft.src.buildcraft.logisticspipes.modules.ModuleProvider.java", "BodyUseAPI": [], "Fixed commit": "ac0c122ed5f815e16e1102ea94e9d03e198c63fd", "Url": "https://api.github.com/repos/RS485/LogisticsPipes", "Date": "2012-08-06T22:44:09Z"},
{"Line": "=>1071", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pratilipi.data.DataAccessorFactory.getBlobAccessor().getBlob(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (blobEntry == null) blobEntry = com.pratilipi.data.DataAccessorFactory.getBlobAccessor().getBlob((((\"pratilipi-resource/\" + pratilipiId) + \"/\") + name));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8075/buggy-version/src.main.java.com.pratilipi.data.util.PratilipiDataUtil.java", "BodyUseAPI": [], "Fixed commit": "9c7c5ce8a947139d1e42cdf20ed27a31d69ddd9a", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-08-08T09:18:24Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.query(iptblrule.TABLE_NAME,java.lang.String[],<nulltype>,<nulltype>,<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (cursor.moveToFirst()) { do { java.lang.String uid = cursor.getString(cursor.getColumnIndexOrThrow(iptblrule.COLUMN_NAME_UID)); uidLst.add(uid); } while (cursor.moveToNext() ); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2098/buggy-version/NEOM.src.com.nikhil.neom.FilterFragment.java", "BodyUseAPI": ["android.database.Cursor.getString(cursor.getColumnIndexOrThrow(iptblrule.COLUMN_NAME_UID))", "android.database.Cursor.getColumnIndexOrThrow(iptblrule.COLUMN_NAME_UID)", "android.database.Cursor.moveToNext()"], "Fixed commit": "13e257f1fc945cfe593e5fbad11fd445f16b2f9c", "Url": "https://api.github.com/repos/nikhilgeo/NEOM_App", "Date": "2015-06-23T19:39:30Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.as.controller.SimpleAttributeDefinition.resolveModelAttribute(org.jboss.as.controller.OperationContext,org.jboss.dmr.ModelNode)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (directBuffersModel.isDefined()) { direct = directBuffersModel.asBoolean(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3221/buggy-version/io.src.main.java.org.wildfly.extension.io.BufferPoolResourceDefinition.java", "BodyUseAPI": ["org.jboss.dmr.ModelNode.asBoolean()"], "Fixed commit": "98d02cc61db1d1372a6b0533fc1610167cc61159", "Url": "https://api.github.com/repos/rhatlapa/wildfly", "Date": "2013-06-11T05:08:54Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset < 0) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7467/buggy-version/src.org.exist.dom.persistent.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "7d5335921502ae88573a23473f9e5c2b3bc68f8d", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:14:11Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset < 0) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7467/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "7d5335921502ae88573a23473f9e5c2b3bc68f8d", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:14:11Z"},
{"Line": "=>677", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(lit.equals(\"\"))) { ingene.setOrAppendName(lit); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3766/buggy-version/goci-interfaces.goci-ui.src.main.java.uk.ac.ebi.spot.goci.ui.service.JsonProcessingService.java", "BodyUseAPI": ["uk.ac.ebi.spot.goci.ui.service.JsonProcessingService.MappedGene.setOrAppendName(java.lang.String)"], "Fixed commit": "a921c77e12246dbde64fb986515f3f7f8008216b", "Url": "https://api.github.com/repos/EBISPOT/goci", "Date": "2016-02-24T11:51:34Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((envVar.getValue()) == null) { logger.fine(((\"script environment variable \" + (envVar.getKey())) + \": \\\"\\\"\")); pb.environment().put(envVar.getKey(), \"\"); }else { logger.fine(((((\"script environment variable \" + (envVar.getKey())) + \": \\\"\") + (envVar.getValue())) + \"\\\"\")); pb.environment().put(envVar.getKey(), envVar.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8848/buggy-version/esc.src.main.java.org.cloudifysource.esc.driver.provisioning.jclouds.softlayer.SoftlayerProvisioningDriver.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()", "org.cloudifysource.esc.driver.provisioning.jclouds.softlayer.SoftlayerProvisioningDriver.fine(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "org.cloudifysource.esc.driver.provisioning.jclouds.softlayer.SoftlayerProvisioningDriver.fine(java.lang.String)", "java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()", "java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()", "java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()", "java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()", "java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "48bbb7f4872110c937ebb527980ca339991e928d", "Url": "https://api.github.com/repos/CloudifySource/cloudify", "Date": "2014-11-02T23:01:30Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotBlank(osNameProp)) { isWindows = osNameProp.toLowerCase().startsWith(\"win\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8848/buggy-version/esc.src.main.java.org.cloudifysource.esc.driver.provisioning.jclouds.softlayer.SoftlayerProvisioningDriver.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)", "java.lang.String.toLowerCase()"], "Fixed commit": "48bbb7f4872110c937ebb527980ca339991e928d", "Url": "https://api.github.com/repos/CloudifySource/cloudify", "Date": "2014-11-02T23:01:30Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (key instanceof java.lang.ref.WeakReference) { result = internalMap.remove(key); }else { result = internalMap.remove(new io.craigmiller160.utils.collection.ComparableWeakReference(key)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7152/buggy-version/src.main.java.io.craigmiller160.utils.collection.SuperWeakHashMap.java", "BodyUseAPI": ["java.util.Map<io.craigmiller160.utils.collection.ComparableWeakReference<K>, io.craigmiller160.utils.collection.ComparableWeakReference<V>>.remove(io.craigmiller160.utils.collection.ComparableWeakReference)", "java.util.Map<io.craigmiller160.utils.collection.ComparableWeakReference<K>, io.craigmiller160.utils.collection.ComparableWeakReference<V>>.remove(java.lang.Object)"], "Fixed commit": "f6e3d3a4ace8ab2529a4d708d3681ce35a0e6022", "Url": "https://api.github.com/repos/craigmiller160/CM160-Utils", "Date": "2016-05-05T00:00:28Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(regionEntitiesStore.cellIsLoaded(pos))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8564/buggy-version/src.main.java.org.terasology.dynamicCities.settlements.SettlementEntityManager.java", "BodyUseAPI": [], "Fixed commit": "e982b485a547bd22fa39517e1f4604270185ea55", "Url": "https://api.github.com/repos/Terasology/DynamicCities", "Date": "2016-06-05T15:48:21Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sb.length()) > 0) java.lang.System.out.println(sb.substring(0, ((sb.length()) - 2))); else java.lang.System.out.println(\"No results found\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/9197/buggy-version/src.Main.java", "BodyUseAPI": ["java.lang.StringBuilder.substring(int,int)", "java.io.PrintStream.println(java.lang.String)", "java.lang.StringBuilder.length()"], "Fixed commit": "002c9d69dfde2567695d0e82b9a5e8038139461d", "Url": "https://api.github.com/repos/aliarobinson/InfoRetrieval", "Date": "2017-05-04T21:06:00Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getCorrectAnswers(i, variantsWords).length) > 0) { return getCorrectAnswers(i, variantsWords); }else { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1245/buggy-version/Croodle.src.org.ap.croodle.CroodleQuestionsParser.java", "BodyUseAPI": ["org.ap.croodle.CroodleQuestionsParser.getCorrectAnswers(int,java.util.ArrayList<java.lang.String[]>)"], "Fixed commit": "58818a2189f90adcbbe072c7ef8ba397996361f1", "Url": "https://api.github.com/repos/AndrewPonyk/JustForFunPROJECTS", "Date": "2014-01-04T21:09:35Z"},
{"Line": "=>1102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mIsCRUISEBoard) { synchronized(mLock) { if ((mNeedWaitInCallConnected) || ((mTTS) != null)) { if (mNeedWaitInCallConnected) android.util.Log.w(com.ingenic.glass.camera.VideoActivity.TAG, \"Need to wait BluetoothHfDevice connected.\"); else android.util.Log.w(com.ingenic.glass.camera.VideoActivity.TAG, \"Need to wait tts play end.\"); mNeedStartPreview = true; return; } mNeedStartPreview = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7338/buggy-version/src.com.ingenic.glass.camera.VideoActivity.java", "BodyUseAPI": [], "Fixed commit": "6c212bbaa688893903dba33de3ffaedcb6b022a1", "Url": "https://api.github.com/repos/hfutkang/HanLangSight", "Date": "2015-08-27T06:20:58Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (principal != null) username = principal.getName();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2743/buggy-version/GamesStoreProject.src.com.sebastian.web.gamestore.controller.HomeController.java", "BodyUseAPI": ["java.security.Principal.getName()"], "Fixed commit": "3dff26b16e6b922e0cb1d91e90bae1b03e8a5723", "Url": "https://api.github.com/repos/nsebastiancristian/spring_game_store", "Date": "2014-03-17T20:02:37Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.lang3.tuple.Pair<org.kframework.backend.java.kil.Term, org.kframework.backend.java.kil.Term>.getLeft()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (subject instanceof org.kframework.backend.java.kil.KLabelInjection) { if (pattern instanceof org.kframework.backend.java.kil.KLabelInjection) { match(((org.kframework.backend.java.kil.KLabelInjection) (subject)), ((org.kframework.backend.java.kil.KLabelInjection) (pattern))); }else { return false; } }else if (subject instanceof org.kframework.backend.java.kil.Hole) { check(subject.equals(pattern)); }else if ((subject instanceof org.kframework.backend.java.kil.BuiltinList) && (matchOnFunctionSymbol)) { if (pattern instanceof org.kframework.backend.java.kil.BuiltinList) { match(((org.kframework.backend.java.kil.BuiltinList) (subject)), ((org.kframework.backend.java.kil.BuiltinList) (pattern))); }else { return false; } }else if ((subject instanceof org.kframework.backend.java.kil.AssociativeCommutativeCollection) || (subject instanceof org.kframework.backend.java.kil.BuiltinList)) { return false; }else { throw org.kframework.utils.errorsystem.KExceptionManager.internalError((\"unexpected subject type: found \" + (subject.getClass().getSimpleName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4177/buggy-version/java-backend.src.main.java.org.kframework.backend.java.symbolic.NonACPatternMatcher.java", "BodyUseAPI": ["org.kframework.backend.java.kil.Term.equals(org.kframework.backend.java.kil.Term)", "org.kframework.utils.errorsystem.KExceptionManager.internalError((\"unexpected subject type: found \" + (subject.getClass().getSimpleName())))", "subject.getClass().getSimpleName()", "org.kframework.backend.java.kil.Term.getClass()", "org.kframework.backend.java.symbolic.NonACPatternMatcher.check(subject.equals(pattern))"], "Fixed commit": "b2344597fe26024a6cda975abaa453873b0798da", "Url": "https://api.github.com/repos/dwightguth/k", "Date": "2014-11-13T19:16:35Z"},
{"Line": "=>720", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.ByteBuffer.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (next == '\\r') { parseState = io.undertow.server.protocol.http.HttpRequestParser.AWAIT_DATA_END; }else if (next == '\\n') { state.state = ParseState.PARSE_COMPLETE; return; }else { state.state = ParseState.HEADER; state.parseState = 0; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5980/buggy-version/core.src.main.java.io.undertow.server.protocol.http.HttpRequestParser.java", "BodyUseAPI": [], "Fixed commit": "a537df152460c7fb52214d629aa5e900b8869dfa", "Url": "https://api.github.com/repos/undertow-io/undertow", "Date": "2014-09-25T03:01:35Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dataset == null) { return new org.openstreetmap.josm.data.coor.LatLon(0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1370/buggy-version/kendzi3d-plugin.src.main.java.kendzi.josm.kendzi3d.data.producer.EditorObjectsProducer.java", "BodyUseAPI": [], "Fixed commit": "720bfcfe67ecdf61edc05c2446d1c9373cb016f7", "Url": "https://api.github.com/repos/kendzi/kendzi3d", "Date": "2016-02-27T16:04:44Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((head) != null) { head = head.getNext(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4973/buggy-version/06_Recapitulation.src.main.java.hr.fer.oop.recapitulation.mylist.MyList.java", "BodyUseAPI": [], "Fixed commit": "732f613b853897d27e8d125b6aadc98ff5be6c9c", "Url": "https://api.github.com/repos/FER-OOP/Lectures", "Date": "2016-10-21T09:06:51Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((((clientConfiguration != null) && ((clientConfiguration.getRest()) != null)) && ((clientConfiguration.getRest().getHosts()) != null)) && (!(clientConfiguration.getRest().getHosts().isEmpty()))) && (org.apache.commons.lang3.StringUtils.isNotBlank(clientConfiguration.getVersion()))) { this.clientConfiguration = clientConfiguration; }else { throw new java.lang.IllegalArgumentException((\"version and host must be provided in a ClienConfiguration object\" + \" when building a CellBase client and cannot be empty\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4788/buggy-version/cellbase-client.src.main.java.org.opencb.cellbase.client.rest.CellBaseClient.java", "BodyUseAPI": [], "Fixed commit": "ca0d3d43e0b648cf1071a5f621340f0168836b75", "Url": "https://api.github.com/repos/opencb/cellbase", "Date": "2017-01-31T16:41:05Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(species)) { throw new java.lang.IllegalArgumentException(\"Species parameter cannot be empty when building a CellBaseClient\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4788/buggy-version/cellbase-client.src.main.java.org.opencb.cellbase.client.rest.CellBaseClient.java", "BodyUseAPI": [], "Fixed commit": "ca0d3d43e0b648cf1071a5f621340f0168836b75", "Url": "https://api.github.com/repos/opencb/cellbase", "Date": "2017-01-31T16:41:05Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.pms.configuration.RendererConfiguration.getRendererConfigurationByUUID(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (renderer != null) { player = ((net.pms.util.BasicPlayer.Logical) (renderer.getPlayer())); players.put(uuid, player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6973/buggy-version/src.main.java.net.pms.network.PlayerControlHandler.java", "BodyUseAPI": ["net.pms.configuration.RendererConfiguration.getPlayer()"], "Fixed commit": "c8d578f93d79e92edc1733a825fb1035f91f28b6", "Url": "https://api.github.com/repos/UniversalMediaServer/UniversalMediaServer", "Date": "2017-06-07T19:28:51Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i < (playerTmp.length)) playerTmp[i] = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8147/buggy-version/src.map.Map.java", "BodyUseAPI": [], "Fixed commit": "712c0ab9e2c48e706f41c7b3834fecc04a2006b0", "Url": "https://api.github.com/repos/propra12-orga/gruppe21", "Date": "2012-07-06T14:52:50Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations.getTarget(org.jetbrains.mps.openapi.model.SNode,jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getReferenceLink(1782411230332735017L, -6324602048325217350L, 6718020819487620876L, 6718020819487620877L, \"concept\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (concept == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6418/buggy-version/languages.languageDesign.editor.source_gen.jetbrains.mps.lang.editor.typesystem.check_ReferenceToNonexistentDefaultMenu_NonTypesystemRule.java", "BodyUseAPI": [], "Fixed commit": "901b3bc62c9b6b47994b6f3b67cfe97241d5ae85", "Url": "https://api.github.com/repos/JetBrains/MPS", "Date": "2016-06-14T15:46:05Z"},
{"Line": "=>1155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((configuration) == null) { final org.jivesoftware.openfire.spi.ConnectionManagerImpl connectionManager = ((org.jivesoftware.openfire.spi.ConnectionManagerImpl) (org.jivesoftware.openfire.http.XMPPServer.getInstance().getConnectionManager())); configuration = connectionManager.getListener(connectionType, true).generateConnectionConfiguration(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/232/buggy-version/src.java.org.jivesoftware.openfire.http.HttpSession.java", "BodyUseAPI": [], "Fixed commit": "3e10288f506309a38f241ae93ee4fa1cddca43e1", "Url": "https://api.github.com/repos/akrherz/Openfire", "Date": "2017-01-12T17:54:25Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pkt.PAYLOADLENGTH) > 0) { bytePacket[(bytePos++)] = ((byte) (255)); java.lang.System.arraycopy(pkt.PAYLOAD.toString().getBytes(), 0, bytePacket, bytePos, pkt.PAYLOADLENGTH); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3654/buggy-version/src.CoAP_example.CoAPPacket.java", "BodyUseAPI": ["java.lang.System.arraycopy(byte[],int,byte[],int,int)", "java.lang.String.getBytes()", "java.lang.StringBuffer.toString()"], "Fixed commit": "6e2e86abdd51780ad5f6e72fe96093dada1bab1d", "Url": "https://api.github.com/repos/kkangshawn/CoAP_example", "Date": "2016-01-11T10:59:15Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.world.getTileEntity(event.x,event.y,event.z)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tileentity instanceof robomuss.rc.block.te.TileEntityFooter) { robomuss.rc.block.te.TileEntityFooter te = ((robomuss.rc.block.te.TileEntityFooter) (tileentity)); te.forceConnection = (te.forceConnection) ? false : true; event.world.markBlockForUpdate(event.x, event.y, event.z); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5432/buggy-version/src.main.java.robomuss.rc.events.BlockClickedEvent.java", "BodyUseAPI": [], "Fixed commit": "8707530d4a3f63182819e6642a35d518b329eb76", "Url": "https://api.github.com/repos/ModForgery/Rollercoaster", "Date": "2014-09-07T11:02:55Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.grarak.kerneladiutor.utils.Utils.isLetter(com.grarak.kerneladiutor.utils.Utils.readFile(com.grarak.kerneladiutor.utils.kernel.ADRENO_IDLER_ACTIVATE))) { com.grarak.kerneladiutor.utils.root.Control.runCommand((active ? \"Y\" : \"N\"), com.grarak.kerneladiutor.utils.kernel.ADRENO_IDLER_ACTIVATE, Control.CommandType.GENERIC, context); }else { com.grarak.kerneladiutor.utils.root.Control.runCommand((active ? \"1\" : \"0\"), com.grarak.kerneladiutor.utils.kernel.ADRENO_IDLER_ACTIVATE, Control.CommandType.GENERIC, context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6986/buggy-version/app.src.main.java.com.grarak.kerneladiutor.utils.kernel.GPU.java", "BodyUseAPI": [], "Fixed commit": "425fc082c76920b2ee63a6ff497d9051c50c8578", "Url": "https://api.github.com/repos/AliHaide001/kernel_adiutor", "Date": "2017-12-05T13:31:57Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.m.getMyTime()) == null) this.m.setMyTime(uni.project.sd.event.EventCounter.getInstance(null).getNextEvent());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8623/buggy-version/ComunicationModule.src.uni.project.sd.comunications.task.MessageBase.java", "BodyUseAPI": ["uni.project.sd.comunications.entity.Message.setMyTime(uni.project.sd.event.EventCounter.getInstance(null).getNextEvent())"], "Fixed commit": "0fcbb37b3b013c594afa05b774fca9fe372cc69c", "Url": "https://api.github.com/repos/dgsfg88/SDProject", "Date": "2015-01-09T10:42:16Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (debug) com.haxademic.core.app.P.println(\"low res bounds:\", bounds);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3257/buggy-version/src.com.haxademic.core.draw.image.ImageUtil.java", "BodyUseAPI": [], "Fixed commit": "cce7f3f8d8bb2c3ff29b437ec33c1c4a6f9b045c", "Url": "https://api.github.com/repos/cacheflowe/haxademic", "Date": "2017-08-05T00:10:03Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isOptionSet(options, Options.BACKEND)) && (\"epub3\".equalsIgnoreCase(((java.lang.String) (options.get(Options.BACKEND)))))) { preloadLibrary(org.asciidoctor.internal.RubyGemsPreloader.EPUB3); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6054/buggy-version/src.main.java.org.asciidoctor.internal.RubyGemsPreloader.java", "BodyUseAPI": [], "Fixed commit": "6df3d40c0d2aefdc216af51fc763da8d98b839f3", "Url": "https://api.github.com/repos/aalmiray/asciidoctorj", "Date": "2014-08-14T16:56:51Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mpp.project.UserInfoMgr.getInstance().getUser().getAuthorizationLevel().equals(Person.AuthorizationLevel.LIBRARIAN)) { findViewById(R.id.btn_addMember).setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5359/buggy-version/app.src.main.java.com.mpp.project.activity.LibraryMemberActivity.java", "BodyUseAPI": [], "Fixed commit": "fdfad37f3adf111cfe0ce3ee97d8e64930707680", "Url": "https://api.github.com/repos/wudizhuo/MppProject", "Date": "2017-03-10T00:07:19Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jStart != 1) matrix[i][(jStart - 1)] = java.lang.Double.POSITIVE_INFINITY;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2427/buggy-version/src.measures.DTWWindowed.java", "BodyUseAPI": [], "Fixed commit": "16c654a2e7d16723c793f70e9600b8c536d5b785", "Url": "https://api.github.com/repos/fpetitjean/SITS-NN", "Date": "2016-11-13T22:26:12Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (leodagdag.play2morphia.utils.MorphiaLogger.isDebugEnabled()) { play.Logger.debug(leodagdag.play2morphia.utils.MorphiaLogger.format(msg, args), t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1007/buggy-version/src.main.java.leodagdag.play2morphia.utils.MorphiaLogger.java", "BodyUseAPI": [], "Fixed commit": "d5c8a0f2f3ba04f3c5332bfd446822db25ffc1e4", "Url": "https://api.github.com/repos/leodagdag/play2-morphia-plugin", "Date": "2012-10-07T19:09:29Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (leodagdag.play2morphia.utils.MorphiaLogger.isDebugEnabled()) { play.Logger.debug(leodagdag.play2morphia.utils.MorphiaLogger.format(msg, args)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1007/buggy-version/src.main.java.leodagdag.play2morphia.utils.MorphiaLogger.java", "BodyUseAPI": [], "Fixed commit": "d5c8a0f2f3ba04f3c5332bfd446822db25ffc1e4", "Url": "https://api.github.com/repos/leodagdag/play2-morphia-plugin", "Date": "2012-10-07T19:09:29Z"},
{"Line": "=>410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((environmentVariables.getProperty(ThucydidesSystemProperty.REMOTE_OS)) != null) { capabilities.setCapability(\"platform\", org.openqa.selenium.Platform.valueOf(environmentVariables.getProperty(ThucydidesSystemProperty.REMOTE_OS))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7054/buggy-version/thucydides-core.src.main.java.net.thucydides.core.webdriver.WebDriverFactory.java", "BodyUseAPI": ["net.thucydides.core.util.EnvironmentVariables.getProperty(ThucydidesSystemProperty.REMOTE_OS)", "org.openqa.selenium.remote.DesiredCapabilities.setCapability(java.lang.String,org.openqa.selenium.Platform.valueOf(environmentVariables.getProperty(ThucydidesSystemProperty.REMOTE_OS)))", "org.openqa.selenium.Platform.valueOf(environmentVariables.getProperty(ThucydidesSystemProperty.REMOTE_OS))"], "Fixed commit": "910d03e53d084df9c7520a7d079ea39d8923aa71", "Url": "https://api.github.com/repos/thucydides-webtests/thucydides", "Date": "2014-02-17T10:48:39Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((environmentVariables.getProperty(ThucydidesSystemProperty.REMOTE_BROWSER_VERSION)) != null) { capabilities.setCapability(\"version\", org.openqa.selenium.Platform.valueOf(environmentVariables.getProperty(ThucydidesSystemProperty.REMOTE_BROWSER_VERSION))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7054/buggy-version/thucydides-core.src.main.java.net.thucydides.core.webdriver.WebDriverFactory.java", "BodyUseAPI": ["org.openqa.selenium.remote.DesiredCapabilities.setCapability(java.lang.String,org.openqa.selenium.Platform.valueOf(environmentVariables.getProperty(ThucydidesSystemProperty.REMOTE_BROWSER_VERSION)))", "net.thucydides.core.util.EnvironmentVariables.getProperty(ThucydidesSystemProperty.REMOTE_BROWSER_VERSION)", "org.openqa.selenium.Platform.valueOf(environmentVariables.getProperty(ThucydidesSystemProperty.REMOTE_BROWSER_VERSION))"], "Fixed commit": "910d03e53d084df9c7520a7d079ea39d8923aa71", "Url": "https://api.github.com/repos/thucydides-webtests/thucydides", "Date": "2014-02-17T10:48:39Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (protection.hasComponent(org.getlwc.component.LocationSetComponent.class)) { for (org.getlwc.Location location : protection.getComponent(org.getlwc.component.LocationSetComponent.class).getAll()) { removeProtectionLocation(protection, location); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1204/buggy-version/backend.src.main.java.org.getlwc.db.memory.MemoryDatabase.java", "BodyUseAPI": ["protection.getComponent(org.getlwc.component.LocationSetComponent.class).getAll()", "org.getlwc.db.memory.MemoryDatabase.removeProtectionLocation(org.getlwc.model.Protection,org.getlwc.Location)", "org.getlwc.model.Protection.getComponent(java.lang.Class)"], "Fixed commit": "c2afd31c470897725108e7a691f4bfe2df6ebe88", "Url": "https://api.github.com/repos/Hidendra/LWC", "Date": "2014-11-25T01:09:30Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (block != null) { add(getBlockType(block), block); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1204/buggy-version/api.src.main.java.org.getlwc.ProtectionSet.java", "BodyUseAPI": ["org.getlwc.ProtectionSet.getBlockType(org.getlwc.Block)", "org.getlwc.ProtectionSet.add(org.getlwc.ProtectionSet.BlockType,org.getlwc.Block)"], "Fixed commit": "c2afd31c470897725108e7a691f4bfe2df6ebe88", "Url": "https://api.github.com/repos/Hidendra/LWC", "Date": "2014-11-25T01:09:30Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (base.isOneOf(\"minecraft:standing_sign\")) { blocks.add(base.getRelative(BlockFace.DOWN)); }else { org.getlwc.Block above = base.getRelative(BlockFace.UP); if (above.isOneOf(\"minecraft:wooden_door\", \"minecraft:iron_door\")) { blocks.add(above); blocks.add(above.getRelative(BlockFace.UP)); }else if ((above.isOneOf(\"minecraft:lever\")) && ((((above.getData()) & 5) == 5) || (((above.getData()) & 6) == 6))) { blocks.add(above); }else if (above.isOneOf(\"minecraft:standing_sign\")) { blocks.add(above); }else { org.getlwc.BlockFace[] POSSIBLE = new org.getlwc.BlockFace[]{ BlockFace.NORTH, BlockFace.SOUTH, BlockFace.EAST, BlockFace.WEST }; for (org.getlwc.BlockFace face : POSSIBLE) { org.getlwc.Block block = base.getRelative(face); byte direction = block.getData(); if (block.isOneOf(\"minecraft:wall_sign\")) { byte EAST = 5; byte WEST = 4; byte SOUTH = 3; byte NORTH = 2; if ((face == (BlockFace.EAST)) && ((direction & EAST) == EAST)) { blocks.add(block); break; }else if ((face == (BlockFace.WEST)) && ((direction & WEST) == WEST)) { blocks.add(block); break; }else if ((face == (BlockFace.SOUTH)) && ((direction & SOUTH) == SOUTH)) { blocks.add(block); break; }else if ((face == (BlockFace.NORTH)) && ((direction & NORTH) == NORTH)) { blocks.add(block); break; } }else if (block.isOneOf(\"minecraft:lever\", \"minecraft:stone_button\", \"minecraft:wooden_button\")) { byte EAST = 1; byte WEST = 2; byte SOUTH = 3; byte NORTH = 4; if ((block.isOneOf(\"minecraft:lever\")) && (((direction & 5) == 5) || ((direction & 6) == 6))) { break; } if ((face == (BlockFace.EAST)) && ((direction & EAST) == EAST)) { blocks.add(block); break; }else if ((face == (BlockFace.WEST)) && ((direction & WEST) == WEST)) { blocks.add(block); break; }else if ((face == (BlockFace.SOUTH)) && ((direction & SOUTH) == SOUTH)) { blocks.add(block); break; }else if ((face == (BlockFace.NORTH)) && ((direction & NORTH) == NORTH)) { blocks.add(block); break; } }else if (block.isOneOf(\"minecraft:trapdoor\")) { byte EAST = 2; byte WEST = 3; byte SOUTH = 0; byte NORTH = 1; if ((face == (BlockFace.WEST)) && ((direction & EAST) == EAST)) { blocks.add(block); break; }else if ((face == (BlockFace.EAST)) && ((direction & WEST) == WEST)) { blocks.add(block); break; }else if ((face == (BlockFace.NORTH)) && ((direction & SOUTH) == SOUTH)) { blocks.add(block); break; }else if ((face == (BlockFace.SOUTH)) && ((direction & NORTH) == NORTH)) { blocks.add(block); break; } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1204/buggy-version/backend.src.main.java.org.getlwc.SimpleProtectionMatcher.java", "BodyUseAPI": ["org.getlwc.Block.getRelative(org.getlwc.BlockFace)", "org.getlwc.ProtectionSet.add(base.getRelative(BlockFace.DOWN))", "org.getlwc.Block.getRelative(BlockFace.DOWN)", "org.getlwc.Block.getRelative(BlockFace.UP)"], "Fixed commit": "c2afd31c470897725108e7a691f4bfe2df6ebe88", "Url": "https://api.github.com/repos/Hidendra/LWC", "Date": "2014-11-25T01:09:30Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.camel.util.ObjectHelper.isNotEmpty(configuration.getAmazonSNSEndpoint())) { org.apache.camel.component.aws.sns.SnsEndpoint.LOG.trace((\"Updating the SNS region with : {} \" + (configuration.getAmazonSNSEndpoint()))); getSNSClient().setEndpoint(configuration.getAmazonSNSEndpoint()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8685/buggy-version/components.camel-aws.src.main.java.org.apache.camel.component.aws.sns.SnsEndpoint.java", "BodyUseAPI": ["org.apache.camel.component.aws.sns.SnsConfiguration.getAmazonSNSEndpoint()", "com.amazonaws.services.sns.AmazonSNS.setEndpoint(configuration.getAmazonSNSEndpoint())", "org.apache.camel.component.aws.sns.SnsConfiguration.getAmazonSNSEndpoint()", "org.slf4j.Logger.trace((\"Updating the SNS region with : {} \" + (configuration.getAmazonSNSEndpoint())))"], "Fixed commit": "275bcbe97b1d0c01e7484a71b820bfd4e02c624d", "Url": "https://api.github.com/repos/apache/camel", "Date": "2014-03-12T02:45:19Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dbHelper.hasVaults(gymnastId)) { insertFragment(); }else { nl.avans.ras.activities.VaultActivity.mProgressDialog = android.app.ProgressDialog.show(this, null, \"Loading Vaults...\", false); if (type == (nl.avans.ras.model.enums.UserType.GYMNAST)) { new nl.avans.ras.network.Networking(this).getVaultsOfSpecificGymnast(gymnastId); }else if (type == (nl.avans.ras.model.enums.UserType.TRAINER)) { new nl.avans.ras.network.Networking(this).getVaultsOfSpecificGymnast(gymnastId); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6216/buggy-version/App.src.nl.avans.ras.activities.VaultActivity.java", "BodyUseAPI": ["nl.avans.ras.network.Networking.getVaultsOfSpecificGymnast(int)", "nl.avans.ras.network.Networking.getVaultsOfSpecificGymnast(int)"], "Fixed commit": "51e230d9367a31bfd05ea1da31d3afb3d0b2bad9", "Url": "https://api.github.com/repos/42IN11EWd/RAS-Android", "Date": "2014-06-16T13:44:32Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((arena.disguiseBlocks) != null) { for (int i = arena.disguiseBlocks.size(); i > 0; i = i - 1) { panel.setItem(i, arena.disguiseBlocks.get((i - 1))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4824/buggy-version/src.nl.Steffion.BlockHunt.InventoryHandler.java", "BodyUseAPI": ["arena.disguiseBlocks.size()", "arena.disguiseBlocks.get(int)", "org.bukkit.inventory.Inventory.setItem(int,arena.disguiseBlocks.get((i - 1)))"], "Fixed commit": "0a9e4d48b538562c8bd7c08450bfa043d4de1f32", "Url": "https://api.github.com/repos/Steffion/BlockHunt", "Date": "2013-08-05T09:57:18Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getCurrentItem()) != null) { if (!(event.getCurrentItem().getType().isBlock())) { event.setCancelled(true); nl.Steffion.BlockHunt.Managers.MessageM.sendFMessage(player, ConfigC.error_setNotABlock, true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4824/buggy-version/src.nl.Steffion.BlockHunt.Listeners.OnInventoryClickEvent.java", "BodyUseAPI": ["org.bukkit.event.inventory.InventoryClickEvent.getCurrentItem()", "org.bukkit.event.inventory.InventoryClickEvent.setCancelled(boolean)", "event.getCurrentItem().getType()", "event.getCurrentItem().getType().isBlock()"], "Fixed commit": "0a9e4d48b538562c8bd7c08450bfa043d4de1f32", "Url": "https://api.github.com/repos/Steffion/BlockHunt", "Date": "2013-08-05T09:57:18Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (down == null) down = new com.Path.Dijkstra.SubGraph.Vertex(\"down\", (-99), (-99), (-1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/9266/buggy-version/src.com.Path.Dijkstra.SubGraph.Floor.java", "BodyUseAPI": [], "Fixed commit": "e2096c62b25f9944411e61cc066025d65155b043", "Url": "https://api.github.com/repos/OwlsCannotSleepAtMidnight/Indoor-Navigation", "Date": "2015-08-12T04:33:42Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (up == null) up = new com.Path.Dijkstra.SubGraph.Vertex(\"up\", (-99), 99, (-1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/9266/buggy-version/src.com.Path.Dijkstra.SubGraph.Floor.java", "BodyUseAPI": [], "Fixed commit": "e2096c62b25f9944411e61cc066025d65155b043", "Url": "https://api.github.com/repos/OwlsCannotSleepAtMidnight/Indoor-Navigation", "Date": "2015-08-12T04:33:42Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (down == null) down = new com.Path.Dijkstra.SubGraph.Vertex(\"down\", 99, (-99), (-1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/9266/buggy-version/src.com.Path.Dijkstra.SubGraph.Floor.java", "BodyUseAPI": [], "Fixed commit": "e2096c62b25f9944411e61cc066025d65155b043", "Url": "https://api.github.com/repos/OwlsCannotSleepAtMidnight/Indoor-Navigation", "Date": "2015-08-12T04:33:42Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (right == null) right = new com.Path.Dijkstra.SubGraph.Vertex(\"right\", 99, (-99), (-1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/9266/buggy-version/src.com.Path.Dijkstra.SubGraph.Floor.java", "BodyUseAPI": [], "Fixed commit": "e2096c62b25f9944411e61cc066025d65155b043", "Url": "https://api.github.com/repos/OwlsCannotSleepAtMidnight/Indoor-Navigation", "Date": "2015-08-12T04:33:42Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (left == null) left = new com.Path.Dijkstra.SubGraph.Vertex(\"left\", (-99), (-99), (-1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/9266/buggy-version/src.com.Path.Dijkstra.SubGraph.Floor.java", "BodyUseAPI": [], "Fixed commit": "e2096c62b25f9944411e61cc066025d65155b043", "Url": "https://api.github.com/repos/OwlsCannotSleepAtMidnight/Indoor-Navigation", "Date": "2015-08-12T04:33:42Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (right == null) right = new com.Path.Dijkstra.SubGraph.Vertex(\"right\", 99, 99, (-1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/9266/buggy-version/src.com.Path.Dijkstra.SubGraph.Floor.java", "BodyUseAPI": [], "Fixed commit": "e2096c62b25f9944411e61cc066025d65155b043", "Url": "https://api.github.com/repos/OwlsCannotSleepAtMidnight/Indoor-Navigation", "Date": "2015-08-12T04:33:42Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (up == null) up = new com.Path.Dijkstra.SubGraph.Vertex(\"up\", 99, 99, (-1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/9266/buggy-version/src.com.Path.Dijkstra.SubGraph.Floor.java", "BodyUseAPI": [], "Fixed commit": "e2096c62b25f9944411e61cc066025d65155b043", "Url": "https://api.github.com/repos/OwlsCannotSleepAtMidnight/Indoor-Navigation", "Date": "2015-08-12T04:33:42Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (left == null) left = new com.Path.Dijkstra.SubGraph.Vertex(\"left\", (-99), 99, (-1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/9266/buggy-version/src.com.Path.Dijkstra.SubGraph.Floor.java", "BodyUseAPI": [], "Fixed commit": "e2096c62b25f9944411e61cc066025d65155b043", "Url": "https://api.github.com/repos/OwlsCannotSleepAtMidnight/Indoor-Navigation", "Date": "2015-08-12T04:33:42Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mMediaPlayer.getMediaInfo().getMetadata()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (metadata != null) { title = mMediaPlayer.getMediaInfo().getMetadata().getString(MediaMetadata.KEY_TITLE); description = mMediaPlayer.getMediaInfo().getMetadata().getString(MediaMetadata.KEY_SUBTITLE); java.lang.String iconUrl = mMediaPlayer.getMediaInfo().getMetadata().getImages().get(0).getUrl().toString(); list = new java.util.ArrayList<com.connectsdk.core.ImageInfo>(); list.add(new com.connectsdk.core.ImageInfo(iconUrl)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1448/buggy-version/src.com.connectsdk.service.CastService.java", "BodyUseAPI": [], "Fixed commit": "8cdfd408edef5bc3b8522f43b4bad8ed401b5378", "Url": "https://api.github.com/repos/ConnectSDK/Connect-SDK-Android-Google-Cast", "Date": "2015-03-30T01:59:31Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fileName == null) { java.lang.System.out.println(); }else { java.io.File file = new java.io.File(fileName); java.lang.System.out.println((\"Exported to file \" + (file.getAbsolutePath()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5088/buggy-version/cli.src.main.java.com.vmware.bdd.cli.commands.CommandsUtils.java", "BodyUseAPI": [], "Fixed commit": "0444d9bdfe6d59f335692b2a08caafef7777b018", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2013-08-03T03:24:56Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["plugin.getSettings().getNighttime(java.lang.String)", "plugin.getSettings().getDaytime(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (daytime < nighttime) { addUpdateAction(block, (!((time >= daytime) && (time < nighttime)))); }else if (nighttime < daytime) { addUpdateAction(block, ((time >= nighttime) && (time < daytime))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7852/buggy-version/src.main.java.me.ase34.citylanterns.runnable.LanternUpdateThread.java", "BodyUseAPI": ["me.ase34.citylanterns.runnable.LanternUpdateThread.addUpdateAction(org.bukkit.block.Block,boolean)", "me.ase34.citylanterns.runnable.LanternUpdateThread.addUpdateAction(org.bukkit.block.Block,boolean)"], "Fixed commit": "57e5ec52ff676613bae1dcb4ccac2e0f8b43cf55", "Url": "https://api.github.com/repos/ase34/CityLanterns", "Date": "2014-01-12T20:50:19Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.ase34.citylanterns.Lantern.getGroup()", "me.ase34.citylanterns.Lantern.getLocation()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((loc.getWorld().hasStorm()) && (plugin.getSettings().onThunder(group))) { addUpdateAction(block, true); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7852/buggy-version/src.main.java.me.ase34.citylanterns.runnable.LanternUpdateThread.java", "BodyUseAPI": [], "Fixed commit": "57e5ec52ff676613bae1dcb4ccac2e0f8b43cf55", "Url": "https://api.github.com/repos/ase34/CityLanterns", "Date": "2014-01-12T20:50:19Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((taskFlow.getOrder()) == null) { de.zib.gndms.model.gorfx.types.DelegatingOrder<T> delegate = factory.getOrderDelegate(orderClass.cast(order)); taskFlow.setOrder(delegate); }else taskFlow.getOrder().setOrderBean(orderClass.cast(order));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1443/buggy-version/gorfx.src.de.zib.gndms.GORFX.service.TaskFlowServiceAux.java", "BodyUseAPI": ["de.zib.gndms.neomodel.gorfx.TaskFlow<T>.setOrder(de.zib.gndms.model.gorfx.types.DelegatingOrder<T>)", "taskFlow.getOrder().setOrderBean(T)", "de.zib.gndms.neomodel.gorfx.TaskFlow<T>.getOrder()"], "Fixed commit": "5722124434d5d2631522152120cfb34f5d96b80a", "Url": "https://api.github.com/repos/zibhub/GNDMS", "Date": "2012-09-06T10:00:54Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (user.getFollowings().toString().isEmpty()) sum += user.getPageRank(); else sb.append(user.getFollowings());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3713/buggy-version/src.mapreduce.Iteration.java", "BodyUseAPI": ["io.UserWritable.getPageRank()", "io.UserWritable.getFollowings()", "java.lang.StringBuilder.append(user.getFollowings())"], "Fixed commit": "46257625f4d4182d6cb770afa62c01c9655f47df", "Url": "https://api.github.com/repos/mvisat/hadoop-twitter", "Date": "2016-12-06T16:12:50Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.deuteriumlabs.dendrite.controller.SubmitEditController.getPageNumber()", "com.deuteriumlabs.dendrite.model.PageId.getNumber()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (altBeginningNumber != number) return alternativeBeginning; else return this.getId();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8465/buggy-version/Dendrite.src.com.deuteriumlabs.dendrite.controller.SubmitEditController.java", "BodyUseAPI": [], "Fixed commit": "3c6396b8e6e1968f32baa7e5f17a6f7d6cb6bd59", "Url": "https://api.github.com/repos/MattHeard/Dendrite", "Date": "2014-02-15T02:04:44Z"},
{"Line": "=>837", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Transport.Packet.getMessage()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((_cachedBegins.get(myMessage.getSeqNum())) != null) learned(aPacket, aWriter);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4227/buggy-version/src.main.java.org.dancres.paxos.impl.AcceptorLearner.java", "BodyUseAPI": [], "Fixed commit": "af0e2891e541e9b6b438c3affc4960b3a387ae43", "Url": "https://api.github.com/repos/dancres/paxos", "Date": "2013-12-20T14:34:15Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<org.easybatch.core.dispatcher.Predicate, java.util.concurrent.BlockingQueue<org.easybatch.core.api.Record>>.get(org.easybatch.core.dispatcher.DefaultPredicate)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (defaultQueue != null) { defaultQueue.put(record); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/373/buggy-version/easybatch-core.src.main.java.org.easybatch.core.dispatcher.ContentBasedRecordDispatcher.java", "BodyUseAPI": ["java.util.concurrent.BlockingQueue<org.easybatch.core.api.Record>.put(org.easybatch.core.api.Record)"], "Fixed commit": "e6795a950d67552e7531cdf79afdad59c5e6c667", "Url": "https://api.github.com/repos/j-easy/easy-batch", "Date": "2015-02-10T19:16:04Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (setType.equals(\"artist\")) { java.util.Collection<com.team0n3.webspotify.model.Song> popularSongs = ((java.util.Collection<com.team0n3.webspotify.model.Song>) (session.getAttribute(\"popularSongs\"))); player.setQueues(popularSongs, songIndex); }else if (setType.equals(\"followedSongs\")) { java.util.Collection<com.team0n3.webspotify.model.Song> followedSongs = ((java.util.Collection<com.team0n3.webspotify.model.Song>) (session.getAttribute(\"followedSongs\"))); player.setQueues(followedSongs, songIndex); }else if (setType.equals(\"queue\")) { java.util.Collection<com.team0n3.webspotify.model.Song> queueSongs = ((java.util.Collection<com.team0n3.webspotify.model.Song>) (session.getAttribute(\"queueSongs\"))); player.setQueues(queueSongs, songIndex); }else if (setType.equals(\"history\")) { java.util.Collection<com.team0n3.webspotify.model.Song> historySongs = ((java.util.Collection<com.team0n3.webspotify.model.Song>) (session.getAttribute(\"historySongs\"))); player.setQueues(historySongs, songIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3694/buggy-version/src.main.java.com.team0n3.webspotify.controller.SongPlayerController.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "cc4eefcb8a96d1d27fc3b631e1bd2826a2ef1ff1", "Url": "https://api.github.com/repos/dkeefe95/WebSpotify", "Date": "2017-12-07T16:14:10Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.kongzue.dialog.SelectDialog.positiveClick) != null) com.kongzue.dialog.SelectDialog.positiveClick.onClick(v);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4708/buggy-version/dialog.src.main.java.com.kongzue.dialog.SelectDialog.java", "BodyUseAPI": [], "Fixed commit": "ef20782df349a4e2bd909bc083bfcd8cc3c824e1", "Url": "https://api.github.com/repos/kongzue/Dialog", "Date": "2017-06-04T13:51:06Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.kongzue.dialog.SelectDialog.nativeClick) != null) com.kongzue.dialog.SelectDialog.nativeClick.onClick(v);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4708/buggy-version/dialog.src.main.java.com.kongzue.dialog.SelectDialog.java", "BodyUseAPI": [], "Fixed commit": "ef20782df349a4e2bd909bc083bfcd8cc3c824e1", "Url": "https://api.github.com/repos/kongzue/Dialog", "Date": "2017-06-04T13:51:06Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((meta == (EnumFacing.DOWN.getIndex())) || (meta == (EnumFacing.UP.getIndex()))) return getDefaultState();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6244/buggy-version/src.main.java.com.teambrmodding.neotech.common.blocks.machines.BlockMachine.java", "BodyUseAPI": [], "Fixed commit": "1347ae81e6e38c12c5726a6a56205462d4d01d27", "Url": "https://api.github.com/repos/TeamBR-Modding/NeoTech", "Date": "2017-02-18T03:39:02Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.N)) { target.setFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION); android.net.Uri contentUri = android.support.v4.content.FileProvider.getUriForFile(this, ((this.getApplicationContext().getPackageName()) + \".provider\"), directory); target.setDataAndType(contentUri, \"resource/folder\"); }else { target.setDataAndType(android.net.Uri.fromFile(directory), \"resource/folder\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3939/buggy-version/app.src.main.java.de.baumann.hhsmoodle.HHS_MainScreen.java", "BodyUseAPI": [], "Fixed commit": "526e19ae0090c813b398875ad648bb9ef92711a7", "Url": "https://api.github.com/repos/scoute-dich/HHSMoodle", "Date": "2016-11-06T18:08:18Z"},
{"Line": "=>767", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.N)) { target.setFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION); android.net.Uri contentUri = android.support.v4.content.FileProvider.getUriForFile(this, ((this.getApplicationContext().getPackageName()) + \".provider\"), directory); target.setDataAndType(contentUri, \"resource/folder\"); }else { target.setDataAndType(android.net.Uri.fromFile(directory), \"resource/folder\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3939/buggy-version/app.src.main.java.de.baumann.hhsmoodle.HHS_Browser.java", "BodyUseAPI": [], "Fixed commit": "526e19ae0090c813b398875ad648bb9ef92711a7", "Url": "https://api.github.com/repos/scoute-dich/HHSMoodle", "Date": "2016-11-06T18:08:18Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.bannerImageUrl) == null) || ((this.bannerImageUrl.length()) == 0)) { errors.add(new play.data.validation.ValidationError(\"bannerImageUrl\", \"Please choose your bannerImageUrl.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7700/buggy-version/app.views.formdata.IndexContentFormData.java", "BodyUseAPI": [], "Fixed commit": "dd9fe00d0c8ac4289b2abb0d1aac67edf17d3a90", "Url": "https://api.github.com/repos/OpenRainGarden/OpenRainGarden", "Date": "2014-04-13T20:52:06Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cost >= money) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3809/buggy-version/13_Binary_Search.src.main.java.com.epam.Solution.java", "BodyUseAPI": [], "Fixed commit": "59467eeed0330370ed45792ceb1386d73a39b263", "Url": "https://api.github.com/repos/Kirvolque/hackerrank", "Date": "2017-07-31T01:18:51Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ret.length()) > (70 * 1024)) { return getString(R.string.msg_too_large); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2586/buggy-version/src.de.onyxbits.listmyapps.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "28b8e1fc174ad331d89af7f3aa8791d40b27c97c", "Url": "https://api.github.com/repos/onyxbits/listmyaps", "Date": "2013-10-31T18:16:05Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hanabi.HumanStylePlayer.getTableau()", "hanabi.Hand.getCard(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (hanabi.Tableau.isPlayable(futureTableau, card)) { futureTableau = hanabi.Tableau.increment(futureTableau, hanabi.Card.getColor(card)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3429/buggy-version/src.main.java.hanabi.HumanStylePlayer.java", "BodyUseAPI": ["hanabi.Card.getColor(int)", "hanabi.Tableau.increment(int,hanabi.Card.getColor(card))"], "Fixed commit": "f5eaa13b5e116ca3c0ab71e5408a60f34e9de158", "Url": "https://api.github.com/repos/jingw/hanabi-bot", "Date": "2015-08-20T05:23:59Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((recordList.get(((recordList.size()) - 1)).getRunId()) <= untilRunId) recordList.remove(((recordList.size()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1714/buggy-version/src.oj.OJ.java", "BodyUseAPI": ["java.util.ArrayList<record.Record>.size()", "java.util.ArrayList<record.Record>.remove(((recordList.size()) - 1))"], "Fixed commit": "6e69292a98e03a1623015bbba096bb65d37d051f", "Url": "https://api.github.com/repos/foreverbell/OJMon", "Date": "2013-05-04T10:04:16Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["W.getHeaders()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (userProvidedHeaders == null) { writerSettings.setHeaders(headers); }else { headers = userProvidedHeaders; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5981/buggy-version/src.main.java.com.univocity.parsers.common.routine.AbstractRoutines.java", "BodyUseAPI": [], "Fixed commit": "0f3e6d932f3a059d723aafe07df762a0a64a44b3", "Url": "https://api.github.com/repos/mosoft521/univocity-parsers", "Date": "2017-05-22T11:04:47Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.todoroo.andlib.utility.Preferences.getLong(ActFmPreferenceService.PREF_USER_ID,int)", "org.json.JSONObject.optLong(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((oldId > 0) && (oldId != newId)) { new com.todoroo.astrid.actfm.sync.messages.ConvertSelfUserIdsToZero().execute(); com.todoroo.astrid.actfm.sync.ActFmSyncThread.clearTablePushedAtValues(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6555/buggy-version/astrid.plugin-src.com.todoroo.astrid.actfm.sync.ActFmSyncV2Provider.java", "BodyUseAPI": [], "Fixed commit": "fb8905f469768a6ac8446a8a250d455f36de5bac", "Url": "https://api.github.com/repos/todoroo/astrid", "Date": "2013-04-12T01:27:41Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((from) < (com.todoroo.astrid.service.UpgradeService.V4_6_3)) { new com.todoroo.astrid.actfm.sync.messages.ConvertSelfUserIdsToZero().execute(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6555/buggy-version/astrid.src.com.todoroo.astrid.service.UpgradeService.java", "BodyUseAPI": [], "Fixed commit": "fb8905f469768a6ac8446a8a250d455f36de5bac", "Url": "https://api.github.com/repos/todoroo/astrid", "Date": "2013-04-12T01:27:41Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.lang3.tuple.Pair<java.lang.Integer, java.lang.Integer>.getRight()", "org.apache.commons.lang3.tuple.Pair<java.lang.Integer, java.lang.Integer>.getLeft()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.github.jikoo.regionerator.Regionerator.getInstance().getFlagger().isChunkFlagged(world.getName(), chunkX, chunkZ)) { continue region; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/78/buggy-version/src.com.github.jikoo.regionerator.DeletionRunnable.java", "BodyUseAPI": [], "Fixed commit": "6db9d6cd78fd01692da6b6ca6a7ab59bfe18a7d0", "Url": "https://api.github.com/repos/Jikoo/Regionerator", "Date": "2015-05-23T21:09:50Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.nih.nci.cananolab.dto.common.PublicationBean.getDomainFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((pub.getPubMedId()) != null) this.setPubmedId(pub.getPubMedId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4243/buggy-version/software.cananolab-webapp.src.gov.nih.nci.cananolab.restful.view.SimpleSearchPublicationBean.java", "BodyUseAPI": ["gov.nih.nci.cananolab.domain.common.Publication.getPubMedId()", "gov.nih.nci.cananolab.restful.view.SimpleSearchPublicationBean.setPubmedId(pub.getPubMedId())"], "Fixed commit": "711f068ab3d19148d6ec6dbcca1f8dc1d81aa2fb", "Url": "https://api.github.com/repos/CBIIT/cananolab", "Date": "2014-09-25T18:30:27Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isQuote) { if (start != end) throw new java.lang.IllegalArgumentException(\"different quote chars\"); return str.substring(1, (len - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8471/buggy-version/src.main.j.str.StrUtil.java", "BodyUseAPI": [], "Fixed commit": "470be8f262f2f194d53ab276b8028dfe14a58bba", "Url": "https://api.github.com/repos/lucastan/libjava", "Date": "2013-04-14T05:36:25Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSpace(ch)) { this.source.unread(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5762/buggy-version/src.main.java.org.verapdf.parser.BaseParser.java", "BodyUseAPI": [], "Fixed commit": "9384e3f739a99e436bdaacfa781ba1f4d9cd5035", "Url": "https://api.github.com/repos/timurkamalov/veraPDF-parser", "Date": "2016-09-12T08:08:28Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (selectedCollectionName == null) { selectedCollectionName = crescentCollections.getCrescentCollections().get(0).getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1400/buggy-version/crescent_core_web.src.main.java.com.tistory.devyongsik.controller.MorphAdminMainController.java", "BodyUseAPI": [], "Fixed commit": "ab20ee425097c8b9df0e8a17055090004f6a136f", "Url": "https://api.github.com/repos/need4spd/crescent", "Date": "2013-04-27T04:13:14Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (map == null) java.lang.System.out.println(\"Eyadsafs\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8497/buggy-version/src.main.edu.columbia.cs6998.sdn.project.Topology.java", "BodyUseAPI": [], "Fixed commit": "997928a0f93ce3c0417c3120d66ce208e42a1d2e", "Url": "https://api.github.com/repos/AAthresh/LoadBalancer", "Date": "2013-12-10T19:43:53Z"},
{"Line": "=>1091", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.jdbm.Serialization.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (clazz == null) clazz = java.lang.Object.class;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3938/buggy-version/src.main.java.org.apache.jdbm.Serialization.java", "BodyUseAPI": [], "Fixed commit": "f5fdf1797012adec4a200834e42327280af9db06", "Url": "https://api.github.com/repos/joval/JDBM3", "Date": "2012-08-28T07:20:20Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCurrentLocation) != null) { com.google.android.gms.maps.model.LatLng mLatLng = com.spotpin.algorismsampleapp.util.CommonUtils.covertLocation(mCurrentLocation); mMap.clear(); mMap.addMarker(new com.google.android.gms.maps.model.MarkerOptions().position(mLatLng).title(getString(R.string.user_info_title)).snippet(com.spotpin.algorismsampleapp.util.CommonUtils.getAddressFromLatLng(mLatLng, getApplicationContext()))); }else { android.widget.Toast.makeText(this, \"Couldn't get your location\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/753/buggy-version/app.src.main.java.com.spotpin.algorismsampleapp.activity.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "6cc6335b8b62e8c4dc17739874d828561d496ff7", "Url": "https://api.github.com/repos/cjae/AlgorismSampleApp", "Date": "2016-11-30T17:49:46Z"},
{"Line": "=>626", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.massivecraft.factions.entity.BoardColl.get().getFactionAt(com.massivecraft.massivecore.ps.PS.valueOf(loc))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (facL.getId().equalsIgnoreCase(\"none\")) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3974/buggy-version/src.com.kirelcodes.RoboticCraft.Robot.RobotBase.java", "BodyUseAPI": [], "Fixed commit": "293a53812fa07dd948da9cb3fa8c1a5f0173ae41", "Url": "https://api.github.com/repos/NacOJerk/RoboticCraft", "Date": "2016-04-21T09:23:51Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getArmorStand().isDead()) || (getNavigator().isDead())) remove();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3974/buggy-version/src.com.kirelcodes.RoboticCraft.Robot.RobotBase.java", "BodyUseAPI": [], "Fixed commit": "293a53812fa07dd948da9cb3fa8c1a5f0173ae41", "Url": "https://api.github.com/repos/NacOJerk/RoboticCraft", "Date": "2016-04-21T09:23:51Z"},
{"Line": "=>618", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.bukkit.Bukkit.getOfflinePlayer(owner).isOp()) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3974/buggy-version/src.com.kirelcodes.RoboticCraft.Robot.RobotBase.java", "BodyUseAPI": [], "Fixed commit": "293a53812fa07dd948da9cb3fa8c1a5f0173ae41", "Url": "https://api.github.com/repos/NacOJerk/RoboticCraft", "Date": "2016-04-21T09:23:51Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((itemC.getAmount()) == 1) e.getPlayer().setItemInHand(new org.bukkit.inventory.ItemStack(org.bukkit.Material.AIR)); else itemC.setAmount(((itemC.getAmount()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3974/buggy-version/src.com.kirelcodes.RoboticCraft.listener.RobotListener.java", "BodyUseAPI": ["org.bukkit.inventory.ItemStack.setAmount(((itemC.getAmount()) - 1))", "org.bukkit.inventory.ItemStack.getAmount()"], "Fixed commit": "293a53812fa07dd948da9cb3fa8c1a5f0173ae41", "Url": "https://api.github.com/repos/NacOJerk/RoboticCraft", "Date": "2016-04-21T09:23:51Z"},
{"Line": "=>436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((last != null) && (!(last.isEmpty()))) { this.request(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8644/buggy-version/src.main.java.rx.observables.StringObservable.java", "BodyUseAPI": [], "Fixed commit": "16bcf207200ced41d90390973c2a2cf64430c969", "Url": "https://api.github.com/repos/jan-zajic/RxJavaString", "Date": "2016-09-20T09:08:29Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player.getImageRefrence()) != null) { images.add(player.getImageRefrence()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/534/buggy-version/risk.src.main.java.com.sonsofhesslow.games.risk.Overlay.java", "BodyUseAPI": ["java.util.ArrayList<android.net.Uri>.add(player.getImageRefrence())", "com.sonsofhesslow.games.risk.model.Player.getImageRefrence()"], "Fixed commit": "aec8b73433bc33a8b3915104f82945180964cade", "Url": "https://api.github.com/repos/NiklasJonsson6/project-sonsofHesslow", "Date": "2016-05-20T23:20:06Z"},
{"Line": "=>679", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (source == null) return ApamCapability.trueCap;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/819/buggy-version/plugins.apam-maven-plugin.src.main.java.fr.imag.adele.apam.apamMavenPlugin.CheckObr.java", "BodyUseAPI": [], "Fixed commit": "e008d43bfa6bb36404c0537e59a20bb748954eb7", "Url": "https://api.github.com/repos/AdeleResearchGroup/ApAM", "Date": "2013-10-07T14:33:17Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((result.get(\"url\")) != null) && (result.get(\"url\").startsWith(\"//\"))) { result.put(\"url\", (\"http:\" + (result.get(\"url\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7056/buggy-version/app.src.main.java.com.sendbird.android.sample.utils.WebUtils.java", "BodyUseAPI": ["java.util.Hashtable<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.Hashtable<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "6728adc9944827dedb48a90836c25ab6371354c1", "Url": "https://api.github.com/repos/smilefam/SendBird-Android", "Date": "2017-11-01T18:27:46Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((result.get(\"image\")) != null) && (result.get(\"image\").startsWith(\"//\"))) { result.put(\"image\", (\"http:\" + (result.get(\"image\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7056/buggy-version/app.src.main.java.com.sendbird.android.sample.utils.WebUtils.java", "BodyUseAPI": ["java.util.Hashtable<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.util.Hashtable<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "6728adc9944827dedb48a90836c25ab6371354c1", "Url": "https://api.github.com/repos/smilefam/SendBird-Android", "Date": "2017-11-01T18:27:46Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(result.containsKey(\"site_name\"))) { result.put(\"site_name\", result.get(\"title\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7056/buggy-version/app.src.main.java.com.sendbird.android.sample.utils.WebUtils.java", "BodyUseAPI": ["java.util.Hashtable<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.Hashtable<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "6728adc9944827dedb48a90836c25ab6371354c1", "Url": "https://api.github.com/repos/smilefam/SendBird-Android", "Date": "2017-11-01T18:27:46Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["latmod.cursegraph.JCurseGraph.getHeight()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((y + 18) > h) y = h - 18;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7430/buggy-version/src.latmod.cursegraph.JCurseGraph.java", "BodyUseAPI": [], "Fixed commit": "62bf6d3e1d32c81657bbbe6f65ee3a90dbd5f7e7", "Url": "https://api.github.com/repos/LatMod/CurseGraph", "Date": "2015-05-23T13:52:35Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Main.config.graphRelative.booleanValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (isRelative && (pointOver > 0)) { latmod.cursegraph.JCurseGraph.GraphPoint pp = points.get((pointOver - 1)); txt += \" :: +\" + ((p.downs) - (pp.downs)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7430/buggy-version/src.latmod.cursegraph.JCurseGraph.java", "BodyUseAPI": ["java.util.ArrayList<latmod.cursegraph.JCurseGraph.GraphPoint>.get(int)"], "Fixed commit": "62bf6d3e1d32c81657bbbe6f65ee3a90dbd5f7e7", "Url": "https://api.github.com/repos/LatMod/CurseGraph", "Date": "2015-05-23T13:52:35Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.FontMetrics.stringWidth(java.lang.String)", "latmod.cursegraph.JCurseGraph.getWidth()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((x + ts) + 18) > w) x = (w - ts) - 18;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7430/buggy-version/src.latmod.cursegraph.JCurseGraph.java", "BodyUseAPI": [], "Fixed commit": "62bf6d3e1d32c81657bbbe6f65ee3a90dbd5f7e7", "Url": "https://api.github.com/repos/LatMod/CurseGraph", "Date": "2015-05-23T13:52:35Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((hand.object) instanceof java.util.Map) { hands = java.util.Collections.singletonList(((java.util.Map) (hand.object))); }else { hands = ((java.util.List<java.util.Map>) (hand.object)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2990/buggy-version/src.java.nl.infcomtec.ansible.PlayBooks.java", "BodyUseAPI": ["java.util.Collections.singletonList(((java.util.Map) (hand.object)))"], "Fixed commit": "93a066dd50e70ba41dcd4c3779ac313e423fc395", "Url": "https://api.github.com/repos/Walter-Stroebel/AnsibleGUI", "Date": "2014-06-15T14:16:55Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pratilipi.data.access.DataAccessorFactory.getDataAccessor(request).getPratilipi(pratilipiContent.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((pratilipi.getSummary()) != null) { summarySubstr = pratilipi.getSummary().substring(pratilipi.getSummary().indexOf(\"<p>\"), pratilipi.getSummary().indexOf(\"</p>\")).replace(\"<p>\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6153/buggy-version/src.com.pratilipi.pagecontent.pratilipi.PratilipiContentProcessor.java", "BodyUseAPI": ["pratilipi.getSummary().substring(pratilipi.getSummary().indexOf(\"<p>\"), pratilipi.getSummary().indexOf(\"</p>\")).replace(java.lang.String,java.lang.String)", "com.pratilipi.data.transfer.Pratilipi.getSummary()", "pratilipi.getSummary().indexOf(java.lang.String)", "pratilipi.getSummary().substring(pratilipi.getSummary().indexOf(\"<p>\"),pratilipi.getSummary().indexOf(\"</p>\"))", "pratilipi.getSummary().indexOf(java.lang.String)", "com.pratilipi.data.transfer.Pratilipi.getSummary()", "com.pratilipi.data.transfer.Pratilipi.getSummary()"], "Fixed commit": "fcc263d511775b7863fa2da4e1b04c0702bdaab1", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2015-05-07T07:44:17Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dianping.cat.system.config.ExceptionThresholdConfigManager.queryDomainExceptionLimit(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (exceptionLimit == null) { exceptionLimit = m_configManager.queryDomainTotalLimit(domain); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5029/buggy-version/cat-home.src.main.java.com.dianping.cat.report.task.exceptionAlert.ExceptionAlert.java", "BodyUseAPI": [], "Fixed commit": "21f3348c23c266edd1b0a05b00d0c398f4cc2be0", "Url": "https://api.github.com/repos/jialinsun/cat", "Date": "2014-05-05T04:26:14Z"},
{"Line": "=>701", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((composition.get().getNotes()) != null) composition.get().getNotes().forEach(this::addGroupable);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/197/buggy-version/src.proj7BeckChanceRemondiSalerno.CompositionManager.java", "BodyUseAPI": ["composition.get().getNotes()", "composition.get().getNotes().forEach(this::addGroupable)", "java.util.Optional<proj7BeckChanceRemondiSalerno.Models.Composition>.get()"], "Fixed commit": "ce720ad3c5eaa0dc3cbaeef44b0dba029271f8e3", "Url": "https://api.github.com/repos/mremondi/CS361", "Date": "2016-11-15T17:43:32Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((searchResult) != null) { if (!(defaultToStore)) { client.resolve(searchResult, installedApps(context)); }else { client.resolve(searchResult, playStore(context)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2690/buggy-version/widgets.src.main.java.com.urx.widget.SearchButton.java", "BodyUseAPI": [], "Fixed commit": "3dbf55347f4c70fa8bcb0eae5ffdde96d232295f", "Url": "https://api.github.com/repos/URXtech/urx-widgets-android", "Date": "2015-06-20T00:04:59Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (retAmounts != null) { for (billsplit.engine.Participant p : participants) { java.lang.Double addAmount = retAmounts.get(p); if (addAmount != null) { p.addToBalance(((double) (addAmount))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2758/buggy-version/BillSplit.src.billsplit.engine.Event.java", "BodyUseAPI": ["java.util.HashMap<billsplit.engine.Participant, java.lang.Double>.get(billsplit.engine.Participant)"], "Fixed commit": "1ea6eec943e84329efda1591fcd49da39ca02872", "Url": "https://api.github.com/repos/dcashman/BillSplit", "Date": "2013-06-09T05:00:35Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["player.getInventory().getHelmet()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((helmet.getType()) == (org.bukkit.Material.CHAINMAIL_HELMET)) { armorWeight = armorWeight + 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1797/buggy-version/src.com.pwn9.PwnPvpBalance.PlayerMoveListener.java", "BodyUseAPI": [], "Fixed commit": "2570a912da30c11f40941cecad79a2cfe4230c5b", "Url": "https://api.github.com/repos/Pwn9/PwnPvpBalance", "Date": "2016-05-29T15:14:30Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["player.getInventory().getChestplate()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((chest.getType()) == (org.bukkit.Material.CHAINMAIL_CHESTPLATE)) { armorWeight = armorWeight + 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1797/buggy-version/src.com.pwn9.PwnPvpBalance.PlayerMoveListener.java", "BodyUseAPI": [], "Fixed commit": "2570a912da30c11f40941cecad79a2cfe4230c5b", "Url": "https://api.github.com/repos/Pwn9/PwnPvpBalance", "Date": "2016-05-29T15:14:30Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["player.getInventory().getBoots()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((boots.getType()) == (org.bukkit.Material.CHAINMAIL_BOOTS)) { armorWeight = armorWeight + 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1797/buggy-version/src.com.pwn9.PwnPvpBalance.PlayerMoveListener.java", "BodyUseAPI": [], "Fixed commit": "2570a912da30c11f40941cecad79a2cfe4230c5b", "Url": "https://api.github.com/repos/Pwn9/PwnPvpBalance", "Date": "2016-05-29T15:14:30Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["player.getInventory().getLeggings()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((pants.getType()) == (org.bukkit.Material.CHAINMAIL_LEGGINGS)) { armorWeight = armorWeight + 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1797/buggy-version/src.com.pwn9.PwnPvpBalance.PlayerMoveListener.java", "BodyUseAPI": [], "Fixed commit": "2570a912da30c11f40941cecad79a2cfe4230c5b", "Url": "https://api.github.com/repos/Pwn9/PwnPvpBalance", "Date": "2016-05-29T15:14:30Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEmpty(callLogRecords)) { validationErrors.add(new org.motechproject.whp.mtraining.web.domain.ValidationError(ResponseStatus.MISSING_CALL_LOG_CONTENT)); return validationErrors; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6792/buggy-version/mtraining.src.main.java.org.motechproject.whp.mtraining.web.domain.CallLogRequest.java", "BodyUseAPI": [], "Fixed commit": "86e26f950c93c00258521c49ca4b54ca30389344", "Url": "https://api.github.com/repos/motech-implementations/whp-mTraining", "Date": "2014-04-10T16:51:57Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getEntryDate()) != null) { java.util.Calendar diff = java.util.Calendar.getInstance(); diff.setTimeInMillis(((new java.util.Date().getTime()) - (getEntryDate().getTime()))); return ((\"\u041b\u0435\u0442: \" + ((diff.get(java.util.Calendar.YEAR)) - 1970)) + \", \u043c\u0435\u0441\u044f\u0446\u0435\u0432: \") + (diff.get(java.util.Calendar.MONTH)); }else return \"\u041d\u0415\u0422\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/251/buggy-version/dao.src.main.java.by.petko.entity.UserEntity.java", "BodyUseAPI": [], "Fixed commit": "e69154fa1a3b89079e37b934b2455cc142c84d41", "Url": "https://api.github.com/repos/petkodmitry/personalData", "Date": "2017-02-18T12:22:44Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((kclass) != null) { collection = ((com.mongodb.DBCollection) (staticMethod(kclass, \"collection\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1820/buggy-version/src.net.csdn.mongo.Criteria.java", "BodyUseAPI": [], "Fixed commit": "d5139d8e2d609bc54b741e6dd8fe685f43731dc2", "Url": "https://api.github.com/repos/allwefantasy/mongomongo", "Date": "2013-05-23T04:22:51Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((studyEvent.getSubjectEventStatus()) == (org.akaza.openclinica.bean.core.SubjectEventStatus.COMPLETED)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6515/buggy-version/core.src.main.java.org.akaza.openclinica.service.ParticipantEventService.java", "BodyUseAPI": [], "Fixed commit": "e4bed2640fce298a40fc4944c4d7f5e9c993d218", "Url": "https://api.github.com/repos/rooney/OpenClinica", "Date": "2015-11-30T07:47:47Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mattunderscore.trees.binary.ClosedMutableBinaryTreeNode<E>.getRight()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (node != null) { return new com.mattunderscore.trees.binary.search.WrappedBinaryNode(node); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1394/buggy-version/trees-binary.src.main.java.com.mattunderscore.trees.binary.search.WrappedBinaryNode.java", "BodyUseAPI": [], "Fixed commit": "7e96a1de0e0f8a88ea45e049bdd6fca683b9c0b0", "Url": "https://api.github.com/repos/mattunderscorechampion/tree-root", "Date": "2015-06-25T18:48:29Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (node != null) { return new com.mattunderscore.trees.binary.search.WrappedBinaryNode(node); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1394/buggy-version/trees-binary.src.main.java.com.mattunderscore.trees.binary.search.WrappedBinaryNode.java", "BodyUseAPI": [], "Fixed commit": "7e96a1de0e0f8a88ea45e049bdd6fca683b9c0b0", "Url": "https://api.github.com/repos/mattunderscorechampion/tree-root", "Date": "2015-06-25T18:48:29Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mattunderscore.trees.binary.ClosedMutableBinaryTreeNode<E>.getChild(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (node != null) { return new com.mattunderscore.trees.binary.search.WrappedBinaryNode(node); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1394/buggy-version/trees-binary.src.main.java.com.mattunderscore.trees.binary.search.WrappedBinaryNode.java", "BodyUseAPI": [], "Fixed commit": "7e96a1de0e0f8a88ea45e049bdd6fca683b9c0b0", "Url": "https://api.github.com/repos/mattunderscorechampion/tree-root", "Date": "2015-06-25T18:48:29Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mattunderscore.trees.binary.ClosedMutableBinaryTreeNode<E>.getLeft()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (node != null) { return new com.mattunderscore.trees.binary.search.WrappedBinaryNode(node); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1394/buggy-version/trees-binary.src.main.java.com.mattunderscore.trees.binary.search.WrappedBinaryNode.java", "BodyUseAPI": [], "Fixed commit": "7e96a1de0e0f8a88ea45e049bdd6fca683b9c0b0", "Url": "https://api.github.com/repos/mattunderscorechampion/tree-root", "Date": "2015-06-25T18:48:29Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ex instanceof java.io.FileNotFoundException) { newMessage = \"FileNotFoundException means that the credentials Jenkins is using is probably wrong. Or the user account does not have write access to the repo.\"; }else { newMessage = \"Could not update commit status of the Pull Request on GitHub.\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6273/buggy-version/src.main.java.org.jenkinsci.plugins.ghprb.GhprbRepository.java", "BodyUseAPI": [], "Fixed commit": "49e16f69fefab210d09e8aebff8fc4058d7b82a7", "Url": "https://api.github.com/repos/ddumontatibm/ghprb", "Date": "2015-05-07T14:36:04Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jobDesc.isEmpty()) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/402/buggy-version/src.main.java.com.mitrais.bootcamp.rms.data.entity.converter.ProjectJobDescConverter.java", "BodyUseAPI": [], "Fixed commit": "d7f23370f40ba49168bdab4eca5598408ea80008", "Url": "https://api.github.com/repos/angelairfani/rms-backend", "Date": "2017-03-27T06:57:32Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jobDesc == null) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/402/buggy-version/src.main.java.com.mitrais.bootcamp.rms.data.entity.converter.ProjectJobDescConverter.java", "BodyUseAPI": [], "Fixed commit": "d7f23370f40ba49168bdab4eca5598408ea80008", "Url": "https://api.github.com/repos/angelairfani/rms-backend", "Date": "2017-03-27T06:57:32Z"},
{"Line": "=>512", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.minecolonies.colony.buildings.AbstractBuilding.getTileEntity()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tileEntity instanceof com.minecolonies.colony.buildings.IInventory) { com.minecolonies.colony.buildings.InventoryHelper.dropInventoryItems(world, this.location, ((com.minecolonies.colony.buildings.IInventory) (tileEntity))); world.updateComparatorOutputLevel(this.location, block); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8706/buggy-version/src.main.java.com.minecolonies.colony.buildings.AbstractBuilding.java", "BodyUseAPI": [], "Fixed commit": "c8ab2f356e32d917bfe0e39a4d9f4588e751838e", "Url": "https://api.github.com/repos/ldtteam/minecolonies", "Date": "2016-12-03T13:47:08Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (needDrop) { android.util.Log.d(yuku.alkitab.base.storage.InternalDbHelper.TAG, (\"table need to be dropped: \" + (Db.TABLE_ReadingPlanProgress))); db.execSQL((\"drop table \" + (Db.TABLE_ReadingPlanProgress))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/627/buggy-version/Alkitab.src.yuku.alkitab.base.storage.InternalDbHelper.java", "BodyUseAPI": [], "Fixed commit": "23661710057a7227dfec4be1889bc2fd685a9948", "Url": "https://api.github.com/repos/yukuku/androidbible", "Date": "2013-11-26T04:11:01Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((codeValueType) == null) { codeValueType = org.dcm4che3.data.Code.guessCodeValueType(codeValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/560/buggy-version/dcm4che-core.src.main.java.org.dcm4che3.data.Code.java", "BodyUseAPI": [], "Fixed commit": "48c4f2ee2478a800b768ae74fcae179d307b72c2", "Url": "https://api.github.com/repos/dcm4che/dcm4che", "Date": "2016-07-22T12:41:33Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((head) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3075/buggy-version/src.LinkedList.java", "BodyUseAPI": [], "Fixed commit": "19c75e03136f2848dcf126dd4751f4633d6bb4d0", "Url": "https://api.github.com/repos/f430FERRARI/MergeSort", "Date": "2015-10-29T06:09:47Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fd.getFile()) != null) { filenames.add(((fd.getDirectory()) + (fd.getFile()))); listModel.addElement(fd.getFile()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5060/buggy-version/src.v1.ScannerGUI.java", "BodyUseAPI": ["java.awt.FileDialog.getFile()", "java.awt.FileDialog.getDirectory()", "java.util.ArrayList<java.lang.String>.add(java.lang.String)", "java.awt.FileDialog.getFile()", "javax.swing.DefaultListModel.addElement(java.lang.String)"], "Fixed commit": "fcc353fa6105fcf69f106c2374d98eb116c54599", "Url": "https://api.github.com/repos/nickschillaci1/tigerscan", "Date": "2016-10-06T00:43:45Z"},
{"Line": "=>500", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.reichholf.dreamdroid.activities.MainActivity.findViewById(R.id.appbar)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (appBarLayout != null) appBarLayout.setExpanded(true, true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6469/buggy-version/app.src.net.reichholf.dreamdroid.activities.MainActivity.java", "BodyUseAPI": ["android.support.design.widget.AppBarLayout.setExpanded(boolean,boolean)"], "Fixed commit": "1abd12d95d44685b7443ded25ada943290ddd9cd", "Url": "https://api.github.com/repos/sreichholf/dreamDroid", "Date": "2016-01-26T09:31:12Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.cpgaertner.edu.inf.api.Game.getInitialRoutine()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (activeRoutine == root) { log.warning(\"Infinite Loop detected. Host Routine, declines action. Falling back to RootRoutine\"); root = new de.cpgaertner.edu.inf.api.routine.RootRoutine(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7726/buggy-version/src.de.cpgaertner.edu.inf.api.CoreEngine.java", "BodyUseAPI": [], "Fixed commit": "2b80ba4260d365a64ef244db51417197dcfb4753", "Url": "https://api.github.com/repos/ChristianGaertner/TextAdventure", "Date": "2015-02-20T14:41:24Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (expressionString.contains(\"invalid\")) expressionString = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6260/buggy-version/app.src.main.java.com.example.applycation.calculator.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "5fa31c87b8d3412ebf6be9446ceb4a7cfa78c0a2", "Url": "https://api.github.com/repos/hung6613/Android_Calculator", "Date": "2016-03-24T15:08:43Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (expressionString.equals(\"invalid\")) expressionString = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6260/buggy-version/app.src.main.java.com.example.applycation.calculator.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "5fa31c87b8d3412ebf6be9446ceb4a7cfa78c0a2", "Url": "https://api.github.com/repos/hung6613/Android_Calculator", "Date": "2016-03-24T15:08:43Z"},
{"Line": "=>711", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (lastDotIndex == (-1)) { definitionPackage = \"\"; }else { definitionPackage = definitionFullName.substring(0, lastDotIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8700/buggy-version/global-extensions.src.main.java.org.ow2.mind.ext.EXTLoader.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "70e6b0bb0f3d38a12cf6f4a7015e233da6fe5bed", "Url": "https://api.github.com/repos/StephaneSeyvoz/global-extensions", "Date": "2014-03-25T14:18:39Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.seafile.seadroid2.SettingsManager.instance().getCameraUploadAccountEmail()) != null) { if ((com.seafile.seadroid2.SettingsManager.instance().getCameraUploadAccountEmail().equals(account.getEmail())) && (com.seafile.seadroid2.SettingsManager.instance().getCameraUploadAccountServer().equals(account.getServer()))) { android.content.Intent cameraUploadIntent = new android.content.Intent(this, com.seafile.seadroid2.sync.CameraUploadService.class); stopService(cameraUploadIntent); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1616/buggy-version/src.com.seafile.seadroid2.AccountsActivity.java", "BodyUseAPI": [], "Fixed commit": "a5f848f177308e7e650ecb0be9fa36e75f4b6434", "Url": "https://api.github.com/repos/haiwen/seadroid", "Date": "2014-10-29T07:08:11Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getText().length()) == 0) { android.widget.Toast.makeText(getApplicationContext(), \"Please enter Date first\", Toast.LENGTH_SHORT).show(); }else { if (currentDateFlag) { if (java.util.Calendar.getInstance().after(timeCheck)) { android.widget.Toast.makeText(getApplicationContext(), \"Entered Time should be after current Time\", Toast.LENGTH_SHORT).show(); t.setText(\"\"); }else { t.setText(((hourOfDay + \"::\") + minute)); } }else t.setText(((hourOfDay + \"::\") + minute)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4888/buggy-version/app.src.main.java.com.example.prashant.dentist.addNewAppointment.java", "BodyUseAPI": [], "Fixed commit": "61a6a19620c9efd1b1cd142e23e6f82cfa02bf9d", "Url": "https://api.github.com/repos/prashantalhat1406/Dentist", "Date": "2015-06-11T06:45:07Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((state) == (com.badlogic.cubocy.Bob.SPAWN)) || ((state) == (com.badlogic.cubocy.Bob.DYING))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3158/buggy-version/src.com.badlogic.cubocy.Bob.java", "BodyUseAPI": [], "Fixed commit": "73ccf3abec677af1223ead3002dd2af40a42aac4", "Url": "https://api.github.com/repos/ruobin/mario", "Date": "2013-05-28T03:40:00Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fullCharged) && (!(isCharging))) { charge -= delta / (retentionTime); fullCharged = false; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2683/buggy-version/core.src.me.itsrishi.ld39.Phone.java", "BodyUseAPI": [], "Fixed commit": "607ae5d00dbd5842de0b1971946b62a3c36dded6", "Url": "https://api.github.com/repos/RishiRaj22/LD39", "Date": "2017-07-31T03:45:06Z"},
{"Line": "=>662", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (addLedgerEntry) { ledgerEntries.add(ledgerEntryFromDb); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6264/buggy-version/app.src.main.java.com.ast.roundtracker.application.RoundTrackerActivity.java", "BodyUseAPI": [], "Fixed commit": "573c3ecb2ca6357370f6a9348576dc52b558098a", "Url": "https://api.github.com/repos/nottoast/RoundTracker", "Date": "2017-03-16T00:15:22Z"},
{"Line": "=>604", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (addUser) { users.add(userFromDb); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6264/buggy-version/app.src.main.java.com.ast.roundtracker.application.RoundTrackerActivity.java", "BodyUseAPI": [], "Fixed commit": "573c3ecb2ca6357370f6a9348576dc52b558098a", "Url": "https://api.github.com/repos/nottoast/RoundTracker", "Date": "2017-03-16T00:15:22Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (idEntries.contains(id)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3986/buggy-version/src.org.rapla.entities.storage.internal.ReferenceHandler.java", "BodyUseAPI": [], "Fixed commit": "c789e574b0ea37383a282cff0aa00a4316b3447b", "Url": "https://api.github.com/repos/rapla/rapla", "Date": "2014-08-18T17:44:29Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.getDurability()) == (selectedItem.getItemStack().getDurability())) { if (((item.getAmount()) + amountToAdd) <= (selectedItem.getItemStack().getMaxStackSize())) { item.setAmount(((item.getAmount()) + amountToAdd)); return true; } if ((item.getAmount()) < 64) { amountToAdd = ((item.getAmount()) + amountToAdd) % 64; item.setAmount(64); } if (amountToAdd <= 0) return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6188/buggy-version/src.net.dtl.citizenstrader_new.traders.Trader.java", "BodyUseAPI": ["org.bukkit.inventory.ItemStack.getAmount()", "selectedItem.getItemStack().getMaxStackSize()", "org.bukkit.inventory.ItemStack.setAmount(((item.getAmount()) + amountToAdd))", "org.bukkit.inventory.ItemStack.getAmount()", "org.bukkit.inventory.ItemStack.getAmount()", "org.bukkit.inventory.ItemStack.getAmount()", "org.bukkit.inventory.ItemStack.setAmount(int)", "net.dtl.citizenstrader_new.containers.StockItem.getItemStack()"], "Fixed commit": "0d4f8ab117effbc9656be8e0ef6d4af6f08bd34f", "Url": "https://api.github.com/repos/Dandielo/DtlCitizensTrader", "Date": "2012-07-15T17:32:37Z"},
{"Line": "=>508", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNQF) { isDeletion = false; }else { for (java.util.Map.Entry<gov.healthit.chpl.dto.CQMCriterionDTO, java.lang.Boolean> cqm : cqmResults.entrySet()) { java.lang.Boolean cqmIsNQF = (cqm.getKey().getCmsId()) == null; if (!cqmIsNQF) { if (cqm.getKey().getCmsId().equals(criterion.getCmsId())) { isDeletion = false; break; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5597/buggy-version/chpl.chpl-service.src.main.java.gov.healthit.chpl.manager.impl.CertifiedProductManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "97618a8494b7078ef17e82a6481cb734dfaba2b2", "Url": "https://api.github.com/repos/kekey1/chpl-api", "Date": "2015-11-12T18:31:24Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.processes) == null) { this.processes = processes; }else { this.processes.clear(); this.processes.addAll(processes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3758/buggy-version/Kitodo-DataManagement.src.main.java.org.kitodo.data.database.beans.Batch.java", "BodyUseAPI": [], "Fixed commit": "6d21e3e6a296d9f0053dc9b59e9c7900fe3fd671", "Url": "https://api.github.com/repos/Beacze/kitodo-production", "Date": "2017-05-11T09:27:14Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.batches) == null) { this.batches = batches; }else { this.batches.clear(); this.batches.addAll(batches); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3758/buggy-version/Kitodo-DataManagement.src.main.java.org.kitodo.data.database.beans.Process.java", "BodyUseAPI": [], "Fixed commit": "6d21e3e6a296d9f0053dc9b59e9c7900fe3fd671", "Url": "https://api.github.com/repos/Beacze/kitodo-production", "Date": "2017-05-11T09:27:14Z"},
{"Line": "=>511", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((progressDialog) != null) && (progressDialog.isShowing())) { progressDialog.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2129/buggy-version/app.src.main.java.de.bahnhoefe.deutschlands.bahnhofsfotos.MainActivity.java", "BodyUseAPI": ["android.app.ProgressDialog.dismiss()"], "Fixed commit": "db5c1db77f744b7a37637019b89ba827ab44b8f9", "Url": "https://api.github.com/repos/RailwayStations/RSAndroidApp", "Date": "2017-01-12T22:31:26Z"},
{"Line": "=>508", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isDestroyed()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2129/buggy-version/app.src.main.java.de.bahnhoefe.deutschlands.bahnhofsfotos.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "db5c1db77f744b7a37637019b89ba827ab44b8f9", "Url": "https://api.github.com/repos/RailwayStations/RSAndroidApp", "Date": "2017-01-12T22:31:26Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mBarcodePicker) != null) { mBarcodePicker.stopScanning(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4192/buggy-version/app.src.main.java.com.example.patrick.grocr2.ShoppingList.java", "BodyUseAPI": [], "Fixed commit": "e260774d7b3fa71ef5283d7ba4757b40be9846d3", "Url": "https://api.github.com/repos/turicumtre/grocr2", "Date": "2016-09-17T18:21:59Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mBarcodePicker) != null) { mBarcodePicker.stopScanning(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4192/buggy-version/app.src.main.java.com.example.patrick.grocr2.ShoppingList.java", "BodyUseAPI": [], "Fixed commit": "e260774d7b3fa71ef5283d7ba4757b40be9846d3", "Url": "https://api.github.com/repos/turicumtre/grocr2", "Date": "2016-09-17T18:21:59Z"},
{"Line": "=>4103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((key == null) || (key.isEmpty())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8836/buggy-version/src.main.java.com.elmakers.mine.bukkit.magic.MagicController.java", "BodyUseAPI": [], "Fixed commit": "629119672d971216a6e7e490c22e8a22d98496c6", "Url": "https://api.github.com/repos/elBukkit/MagicPlugin", "Date": "2015-03-19T17:48:32Z"},
{"Line": "=>883", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((oname.getPrefix()) == null) || (\"\".equals(oname.getPrefix()))) { oname = new net.sf.saxon.s9api.QName(\"\", name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3096/buggy-version/src.com.xmlcalabash.model.Parser.java", "BodyUseAPI": [], "Fixed commit": "f50e2252912deca80fd099bea24d5a2aef329d11", "Url": "https://api.github.com/repos/jamesrdf/xmlcalabash1", "Date": "2013-07-25T22:39:41Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(mDetailViewBodyContainerFvb.getDomainWithInputData().getTextData().trim())) { renderToastMsg(getString(R.string.err_unable_to_copy_text_to_clipboard)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6932/buggy-version/app.src.main.java.com.seongil.mvplife.sample.ui.detailview.fragment.DetailClipItemFragment.java", "BodyUseAPI": [], "Fixed commit": "e89f37cd216abfeef27f01a511e48ce0034ac9d4", "Url": "https://api.github.com/repos/allsoft777/MVP-with-Firebase", "Date": "2017-05-18T18:17:29Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((find) != (-1)) { fasts.set(find, null); fastButtons.get(find).setIcon(null); fastTable.set(find, (-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1523/buggy-version/MSxNTHU.src.bag.Bag.java", "BodyUseAPI": [], "Fixed commit": "05cfa04116e2a0b7b50a427d9426b9630c7f53f7", "Url": "https://api.github.com/repos/6892104/MSxNTHU", "Date": "2016-06-04T15:08:23Z"},
{"Line": "=>386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((find) != (-1)) fastButtons.get(find).setIcon(new javax.swing.ImageIcon(display.getItemImage(item.name(), item.amount)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1523/buggy-version/MSxNTHU.src.bag.Bag.java", "BodyUseAPI": [], "Fixed commit": "05cfa04116e2a0b7b50a427d9426b9630c7f53f7", "Url": "https://api.github.com/repos/6892104/MSxNTHU", "Date": "2016-06-04T15:08:23Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (cursor.isBeforeFirst()) { cursor.moveToNext(); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5878/buggy-version/app.src.main.java.com.count.countr.db.ItemDatabase.java", "BodyUseAPI": ["android.database.Cursor.moveToNext()"], "Fixed commit": "ad000033d89c92023478adde845a9a9f923ea22a", "Url": "https://api.github.com/repos/psedge/cOuntr", "Date": "2015-12-12T18:10:03Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (cursor.isBeforeFirst()) { cursor.moveToNext(); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5878/buggy-version/app.src.main.java.com.count.countr.db.ActivityDatabase.java", "BodyUseAPI": ["android.database.Cursor.moveToNext()"], "Fixed commit": "ad000033d89c92023478adde845a9a9f923ea22a", "Url": "https://api.github.com/repos/psedge/cOuntr", "Date": "2015-12-12T18:10:03Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((code == (SmsItem.STATUS_UNSUBSCRIBED)) || (code == (SmsItem.STATUS_FAS_GUIDE_SENT))) || (code == (SmsItem.STATUS_GUIDE_SENT))) { if (!(dc.removeFromQueue(msgId))) { com.sbar.smsnenado.Common.LOGE(\"cannot remove from queue!\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3925/buggy-version/src.com.sbar.smsnenado.BootService.java", "BodyUseAPI": [], "Fixed commit": "3bf54b1170a4d70d87a0233bff3d34bc484556ca", "Url": "https://api.github.com/repos/sbar/smsnenado", "Date": "2013-10-13T13:15:16Z"},
{"Line": "=>444", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((co1 == null) && (co2 == null)) { return 0; }else if (co1 == null) { return -1; }else if (co2 == null) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5176/buggy-version/src.org.nschmidt.ldparteditor.data.VM99Clipboard.java", "BodyUseAPI": [], "Fixed commit": "1e9b10888567d9713fcc9a36eb6666deb74d5bb8", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-05-05T21:18:03Z"},
{"Line": "=>1552", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isContainsInTypeAnnotation(argument.type.resolvedType, a)) { a.traverse(this, scope); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4278/buggy-version/src.main.java.spoon.support.compiler.jdt.JDTTreeBuilder.java", "BodyUseAPI": ["org.eclipse.jdt.internal.compiler.ast.Annotation.traverse(spoon.support.compiler.jdt.JDTTreeBuilder,org.eclipse.jdt.internal.compiler.lookup.BlockScope)"], "Fixed commit": "86cca62419e8d778d8c5aff7c35dafd02a56a349", "Url": "https://api.github.com/repos/GerardPaligot/spoon", "Date": "2015-02-17T14:42:39Z"},
{"Line": "=>2028", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isContainsInTypeAnnotation(localDeclaration.type.resolvedType, a)) { a.traverse(this, scope); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4278/buggy-version/src.main.java.spoon.support.compiler.jdt.JDTTreeBuilder.java", "BodyUseAPI": ["org.eclipse.jdt.internal.compiler.ast.Annotation.traverse(spoon.support.compiler.jdt.JDTTreeBuilder,org.eclipse.jdt.internal.compiler.lookup.BlockScope)"], "Fixed commit": "86cca62419e8d778d8c5aff7c35dafd02a56a349", "Url": "https://api.github.com/repos/GerardPaligot/spoon", "Date": "2015-02-17T14:42:39Z"},
{"Line": "=>2152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isContainsInTypeAnnotation(methodDeclaration.returnType.resolvedType, a)) { a.traverse(this, methodDeclaration.scope); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4278/buggy-version/src.main.java.spoon.support.compiler.jdt.JDTTreeBuilder.java", "BodyUseAPI": ["org.eclipse.jdt.internal.compiler.ast.Annotation.traverse(spoon.support.compiler.jdt.JDTTreeBuilder,methodDeclaration.scope)"], "Fixed commit": "86cca62419e8d778d8c5aff7c35dafd02a56a349", "Url": "https://api.github.com/repos/GerardPaligot/spoon", "Date": "2015-02-17T14:42:39Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.orientechnologies.orient.core.record.impl.ORecordBytes.RECORD_TYPE) == (com.orientechnologies.orient.core.record.ORecordInternal.getRecordType(record))) { for (java.util.Map.Entry<java.lang.String, java.lang.Object> projection : iProjections.entrySet()) { if (\"rid\".equalsIgnoreCase(projection.getKey())) { iValue.field(projection.getKey(), record.getIdentity()); } } return iValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8199/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.ORuntimeResult.java", "BodyUseAPI": ["com.orientechnologies.orient.core.record.ORecord.getIdentity()", "com.orientechnologies.orient.core.record.impl.ODocument.field(java.lang.String,record.getIdentity())"], "Fixed commit": "6718de23a502fbaea08f2c160f54ee0a14404d6a", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-04-15T16:11:17Z"},
{"Line": "=>447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (AndQuery == 1) { query += \" and st.invType != 'T'\"; }else { AndQuery = 1; query += \" st.invType != 'T'\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3203/buggy-version/src.java.com.smi.travel.datalayer.dao.impl.InvoiceImpl.java", "BodyUseAPI": [], "Fixed commit": "e46e35374ad1375903d0d57714f874df34715fd1", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2016-01-25T02:34:41Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i == 0) && ((this) == fig)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6073/buggy-version/SnakeOnLan.src.ch.hf.snakeonlan.server.model.BaseFigure.java", "BodyUseAPI": [], "Fixed commit": "e2cb89e907218d43568f5b92085002de17709bbc", "Url": "https://api.github.com/repos/ryru/SnakeOnLan", "Date": "2014-05-27T21:02:32Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["entry.getOwnerUsername().equals(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isOwner) { java.util.List<postit.server.model.ServerKeychain> sharedKeychains = this.getSharedKeychains(username, directoryEntryId); for (postit.server.model.ServerKeychain sharedKeychain : sharedKeychains) { if (!(db.removeDirectoryEntry(sharedKeychain.getDirectoryEntryId()))) { java.lang.System.err.println(\"Failed to delete dependent keychain of parent. Aborting.\"); return false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/386/buggy-version/server.src.main.java.postit.server.controller.KeychainHandler.java", "BodyUseAPI": [], "Fixed commit": "302119e1bbaa66419d6d77457e821de4e29169ab", "Url": "https://api.github.com/repos/jjl284/postit", "Date": "2017-04-20T20:56:09Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (updated) { perReaderTermState.setDocFreq(dfToSet); return new org.apache.lucene.search.TermQuery(term, perReaderTermState); }else { return new org.apache.lucene.search.TermQuery(term); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/9014/buggy-version/querqy-lucene.src.main.java.querqy.rewrite.lucene.TermQueryFactory.java", "BodyUseAPI": [], "Fixed commit": "b352bd322d30ed557c14cf06e5e454e7b71796ee", "Url": "https://api.github.com/repos/shopping24/querqy", "Date": "2014-08-08T14:26:28Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.peg4d.Grammar.newParserContext(org.peg4d.ParsingSource)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (p.isFailure()) { p.showErrorMessage(\"syntax error\"); }else { java.lang.System.out.println((\"Parsed: \" + pego)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2375/buggy-version/src.org.peg4d.Main.java", "BodyUseAPI": ["org.peg4d.ParsingStream.showErrorMessage(java.lang.String)"], "Fixed commit": "ca1ad9961a38af83aecdcfb03ef1d653fe3c8645", "Url": "https://api.github.com/repos/Kouhei-Moriya/peg4d-java", "Date": "2014-09-05T08:05:18Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (EntityModel.ID_COL.equals(colName)) { return com.turbomanage.storm.apt.entity.EntityModel.ID_COL; }else { return colName.toUpperCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6053/buggy-version/impl.src.com.turbomanage.storm.apt.entity.FieldModel.java", "BodyUseAPI": ["java.lang.String.toUpperCase()"], "Fixed commit": "2c4e2781131978b90755eab03a4ef857ec658914", "Url": "https://api.github.com/repos/turbomanage/storm-gen", "Date": "2013-01-24T16:28:29Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((aintViewL[lx][ly]) != 2) && ((aintViewR[rx][ry]) != 2)) graph.addEdge(pc[lx][ly][rx][ry], pc[newState.getLeftx()][newState.getLefty()][newState.getRightx()][newState.getRighty()]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2250/buggy-version/MirrorUniverse.src.mirroruniverse.g3player.G3Player.java", "BodyUseAPI": ["mirroruniverse.g3player.DirectedGraph<mirroruniverse.g3player.PointPair, mirroruniverse.g3player.SimpleEdge>.addEdge(pc[lx][ly][rx][ry],pc[newState.getLeftx()][newState.getLefty()][newState.getRightx()][newState.getRighty()])"], "Fixed commit": "0c720cb30f7084abdabfc9050acc0c442779b810", "Url": "https://api.github.com/repos/taosong/MirrorUniverse", "Date": "2011-11-21T05:58:21Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.host) != null) { address = new java.net.InetSocketAddress(this.host, this.port); }else { address = new java.net.InetSocketAddress(this.port); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3529/buggy-version/server.src.main.java.org.openscoring.server.Main.java", "BodyUseAPI": [], "Fixed commit": "91385f2b04ba245fc735044be5752f63fe49df2d", "Url": "https://api.github.com/repos/jpmml/openscoring", "Date": "2014-05-27T19:51:41Z"},
{"Line": "=>2746", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.util.ArrayList<android.content.ContentValues>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (l == null) { l = new java.util.ArrayList<android.content.ContentValues>(); lists.put(de.ub0r.android.callmeter.data.DataProvider.Numbers.TABLE, l); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8361/buggy-version/src.de.ub0r.android.callmeter.data.DataProvider.java", "BodyUseAPI": [], "Fixed commit": "b2a69c0499df3c7357372baae376eb196a117279", "Url": "https://api.github.com/repos/felixb/callmeter", "Date": "2012-12-06T06:16:24Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (indT >= 1) x[(indT - 1)] = (x[(indT - 1)]) + 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6949/buggy-version/effconnectivity.Forum.java", "BodyUseAPI": [], "Fixed commit": "ab230c403fda97fd386efec3a1596c7d622be64d", "Url": "https://api.github.com/repos/MiguelAguilera/cybersyn", "Date": "2013-12-03T16:28:38Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Player.getDirection()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(((((currentDirection == (NORTH)) && (direction == (SOUTH))) || ((currentDirection == (SOUTH)) && (direction == (NORTH)))) || ((currentDirection == (EAST)) && (direction == (WEST)))) || ((currentDirection == (WEST)) && (direction == (EAST))))) { player2.setDirection(direction); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3539/buggy-version/src.TronModel.java", "BodyUseAPI": ["Player.setDirection(int)"], "Fixed commit": "b8941b30cfe5eb310ae6ea43e1933039dbff5dfd", "Url": "https://api.github.com/repos/crowstars/Tron", "Date": "2017-12-06T18:02:39Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Player.getDirection()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(((((currentDirection == (NORTH)) && (direction == (SOUTH))) || ((currentDirection == (SOUTH)) && (direction == (NORTH)))) || ((currentDirection == (EAST)) && (direction == (WEST)))) || ((currentDirection == (WEST)) && (direction == (EAST))))) { player1.setDirection(direction); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3539/buggy-version/src.TronModel.java", "BodyUseAPI": ["Player.setDirection(int)"], "Fixed commit": "b8941b30cfe5eb310ae6ea43e1933039dbff5dfd", "Url": "https://api.github.com/repos/crowstars/Tron", "Date": "2017-12-06T18:02:39Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecore.minepermit.miner.PermitMiner.getPermit(net.minecore.minepermit.world.PermitArea,e.getBlock().getType())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (permit == null) { permit = pm.getUniversalPermit(pa); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5453/buggy-version/src.net.minecore.minepermit.BlockListener.java", "BodyUseAPI": [], "Fixed commit": "a62b331d00357aa7fd0e42a0203217f47b648fdc", "Url": "https://api.github.com/repos/MineCore/MinePermit", "Date": "2014-02-05T18:53:26Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.Jsoup.parse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((doc.select(\".pageNavLink\").size()) > 0) { searchobj = doc.select(\".pageNavLink\").first().attr(\"href\").split(\"\\\\?\")[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2327/buggy-version/src.de.geeksfactory.opacclient.apis.Zones22.java", "BodyUseAPI": ["doc.select(\".pageNavLink\").first().attr(java.lang.String)", "doc.select(\".pageNavLink\").first().attr(\"href\").split(java.lang.String)", "org.jsoup.nodes.Document.select(java.lang.String)", "doc.select(\".pageNavLink\").first()"], "Fixed commit": "5d143ecdb5a28e76aacf1fd349fbfe9b25d7cc17", "Url": "https://api.github.com/repos/raphaelm/opacclient", "Date": "2013-01-22T15:22:05Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((entry.getKey().equals(EntityType.PLAYER)) && ((playernames.size()) > 0)) { for (java.lang.String p : playernames) { message += \", \" + p; } message = (\" (\" + (message.substring(2))) + \")\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5935/buggy-version/src.main.java.me.eccentric_nz.TARDIS.listeners.TARDISScannerListener.java", "BodyUseAPI": [], "Fixed commit": "75201dacd79877afdbc6a2597037786869951c31", "Url": "https://api.github.com/repos/eccentricdevotion/TARDIS", "Date": "2013-03-04T09:27:56Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.entity.Entity.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (et.equals(EntityType.PLAYER)) { org.bukkit.entity.Player entPlayer = ((org.bukkit.entity.Player) (k)); playernames.add(entPlayer.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5935/buggy-version/src.main.java.me.eccentric_nz.TARDIS.listeners.TARDISScannerListener.java", "BodyUseAPI": [], "Fixed commit": "75201dacd79877afdbc6a2597037786869951c31", "Url": "https://api.github.com/repos/eccentricdevotion/TARDIS", "Date": "2013-03-04T09:27:56Z"},
{"Line": "=>457", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (tab == null) newTab = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3132/buggy-version/source.nl.esciencecenter.vbrowser.vb2.src.nl.esciencecenter.vbrowser.vb2.ui.browser.ProxyBrowser.java", "BodyUseAPI": [], "Fixed commit": "b14c094399a68cc9e63b730371ca25b3ec3d80df", "Url": "https://api.github.com/repos/NLeSC/vbrowser", "Date": "2013-09-19T13:34:53Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (se.vgregion.alfresco.mellanarkiv.platform.service.impl.FORMAT_ARCHIVE.equalsIgnoreCase(fileType)) { use = FORMAT_ARCHIVE; }else if (se.vgregion.alfresco.mellanarkiv.platform.service.impl.FORMAT_PLAINTEXT.equalsIgnoreCase(fileType)) { use = FORMAT_PLAINTEXT; }else if (se.vgregion.alfresco.mellanarkiv.platform.service.impl.FORMAT_METADATA.equalsIgnoreCase(fileType)) { use = FORMAT_METADATA; }else if (se.vgregion.alfresco.mellanarkiv.platform.service.impl.FORMAT_ORIGINAL.equalsIgnoreCase(fileType)) { use = FORMAT_ORIGINAL; }else { use = FORMAT_PRODUCTION; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6772/buggy-version/platform-mellanarkiv.src.main.java.se.vgregion.alfresco.mellanarkiv.platform.service.impl.ArchiveServiceImpl.java", "BodyUseAPI": ["se.vgregion.alfresco.mellanarkiv.platform.service.impl.FORMAT_PLAINTEXT.equalsIgnoreCase(java.lang.String)", "se.vgregion.alfresco.mellanarkiv.platform.service.impl.FORMAT_METADATA.equalsIgnoreCase(java.lang.String)", "se.vgregion.alfresco.mellanarkiv.platform.service.impl.FORMAT_ORIGINAL.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "f62071a71afab3d034129e7b7484b48c1ed61a12", "Url": "https://api.github.com/repos/Vastra-Gotalandsregionen/alfresco-mellanarkiv", "Date": "2017-12-20T13:55:12Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (listStepReportRef != null) { if (!(listStepReportRef.isEmpty())) { cases.get(((cases.size()) - 1)).setSteps(listStepReportRef); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6925/buggy-version/services.keyword.src.main.java.org.ats.services.keyword.report.KeywordReportService.java", "BodyUseAPI": ["cases.get(((cases.size()) - 1)).setSteps(java.util.List<org.ats.services.keyword.report.models.StepReportReference>)", "java.util.List<org.ats.services.keyword.report.models.StepReportReference>.isEmpty()"], "Fixed commit": "f7c9773e05a1c07bf904d96d7c200d67d60f1eff", "Url": "https://api.github.com/repos/tudh2/cloud-ats", "Date": "2016-03-24T03:04:44Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (listStepReportRef != null) { if (!(listStepReportRef.isEmpty())) { cases.get(((cases.size()) - 1)).setSteps(listStepReportRef); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6925/buggy-version/services.keyword.src.main.java.org.ats.services.keyword.report.KeywordReportService.java", "BodyUseAPI": ["java.util.List<org.ats.services.keyword.report.models.StepReportReference>.isEmpty()", "cases.get(((cases.size()) - 1)).setSteps(java.util.List<org.ats.services.keyword.report.models.StepReportReference>)"], "Fixed commit": "f7c9773e05a1c07bf904d96d7c200d67d60f1eff", "Url": "https://api.github.com/repos/tudh2/cloud-ats", "Date": "2016-03-24T03:04:44Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getWidget().getNumberOfSeries()) == 0) { seriesAndDataLabelsRendered = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8466/buggy-version/addon.src.main.java.com.vaadin.addon.charts.shared.ChartConnector.java", "BodyUseAPI": [], "Fixed commit": "1ccea3ffe0ff0a000396c1bac4e33f5996ae6977", "Url": "https://api.github.com/repos/vaadin/charts", "Date": "2017-06-09T10:57:16Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jsOverlay.getSeries()) != null) { return jsOverlay.getSeries().length(); }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8466/buggy-version/addon.src.main.java.com.vaadin.addon.charts.client.ui.HighchartWidget.java", "BodyUseAPI": ["com.vaadin.addon.charts.client.ui.HighchartJsOverlay.getSeries()", "jsOverlay.getSeries().length()"], "Fixed commit": "1ccea3ffe0ff0a000396c1bac4e33f5996ae6977", "Url": "https://api.github.com/repos/vaadin/charts", "Date": "2017-06-09T10:57:16Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.model.AbstractBuild<?, ?>.getProject()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (\"hudson.plugins.promoted_builds.PromotionProcess\".equals(project.getClass().getName())) { project = project.getRootProject(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5859/buggy-version/src.main.java.hudson.maven.RedeployPublisher.java", "BodyUseAPI": ["hudson.model.AbstractProject.getRootProject()"], "Fixed commit": "69710443b401a666ac2330b592dc80e0f59becd8", "Url": "https://api.github.com/repos/aheritier/maven-plugin", "Date": "2015-10-23T08:30:05Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.baidu.bae.api.log.BaeLogAppender.getLayout()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (layout.ignoresThrowable()) { java.lang.String[] s = event.getThrowableStrRep(); if (s != null) { for (java.lang.String string : s) { msg = (msg + string) + (org.apache.log4j.Layout.LINE_SEP); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3323/buggy-version/src.main.java.com.baidu.bae.api.log.BaeLogAppender.java", "BodyUseAPI": [], "Fixed commit": "2d44148f6c96a0d0539269704158a390b4ce039f", "Url": "https://api.github.com/repos/git9527/my-bae-sdk", "Date": "2014-04-12T09:08:05Z"},
{"Line": "=>4411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hp.hpl.jena.rdf.model.Literal.getDatatypeURI()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dtype.equals(XSD.xint.getURI())) { if (ptype.equals(XSD.integer.getURI())) return true; if (ptype.equals(XSD.xlong.getURI())) return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3105/buggy-version/sadl3.com.ge.research.sadl.parent.com.ge.research.sadl.jena.src.com.ge.research.sadl.jena.JenaBasedSadlModelProcessor.java", "BodyUseAPI": [], "Fixed commit": "a4ce57f29d3fbcf869b36adac7778916dc83d17c", "Url": "https://api.github.com/repos/crapo/sadlos2", "Date": "2016-09-15T13:50:43Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (col instanceof com.primefaces.datatable.ext.export.ExtColumn) { addColumnValue(rowHeader, textValue, ((com.primefaces.datatable.ext.export.ExtColumn) (col)).getExportSort()); }else { addColumnValue(rowHeader, textValue, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6504/buggy-version/primefaces-datatable-ext-export.src.main.java.com.primefaces.datatable.ext.export.XSSHExcel.java", "BodyUseAPI": [], "Fixed commit": "9c0047e797b9ffb50bf6133e723e665f8a596cf8", "Url": "https://api.github.com/repos/JasonQuan/primefaces_ext", "Date": "2016-08-08T04:06:18Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((java.lang.Integer.parseInt(quantity)) > 0) { int r = st.executeUpdate(((((((((((((\"INSERT INTO `orders` (`order_id`, `user_id`, `rest_id`, `status`, `menu`, `qty`) VALUES ('\" + SessionID) + \"' , '\") + user) + \"', '\") + restaurant) + \"', '\") + status) + \"', '\") + menu) + \"', '\") + quantity) + \"' )\")); if (r > 0) { java.lang.System.out.println(\"Insertion Successful\"); }else { java.lang.System.out.println(\"Insertion Failed\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6640/buggy-version/OnlineFoodDeliverySystem.src.com.code.Calculate.java", "BodyUseAPI": ["java.sql.Statement.executeUpdate(java.lang.String)"], "Fixed commit": "ced612616291cf5e9d618206a494b6037b5fec17", "Url": "https://api.github.com/repos/swaptheepic/OnlineFoodDeliverySystem", "Date": "2017-11-09T10:51:39Z"},
{"Line": "=>728", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bimserver.ServerSettingsCache.getServerSettings()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (webPluginConfiguration == (serverSettings.getWebModule())) { setDefaultWebModule(webModulePlugin); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4965/buggy-version/BimServer.src.org.bimserver.BimServer.java", "BodyUseAPI": [], "Fixed commit": "f6d20ae513e3dab0565c5a0a6614de52b2cd8f8d", "Url": "https://api.github.com/repos/opensourceBIM/BIMserver", "Date": "2015-03-13T14:59:54Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mp != (mMediaPlayer)) { android.util.Log.e(this.getClass().getSimpleName(), \"OnCompletionListener mp wasn't the same as mMediaPlayer!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2721/buggy-version/src.com.ftechz.DebatingTimer.BellRepeater.java", "BodyUseAPI": [], "Fixed commit": "b320ec85381654f92f11c566f645091214027ed2", "Url": "https://api.github.com/repos/czlee/debatekeeper", "Date": "2012-05-13T09:35:16Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mp != (mMediaPlayer)) { android.util.Log.e(this.getClass().getSimpleName(), \"OnErrorListener mp wasn't the same as mMediaPlayer!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2721/buggy-version/src.com.ftechz.DebatingTimer.BellRepeater.java", "BodyUseAPI": [], "Fixed commit": "b320ec85381654f92f11c566f645091214027ed2", "Url": "https://api.github.com/repos/czlee/debatekeeper", "Date": "2012-05-13T09:35:16Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cases) != null) for (org.mozilla.javascript.ast.SwitchCase sc : cases) { sb.append(sc.toSource((depth + 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6348/buggy-version/src.org.mozilla.javascript.ast.SwitchStatement.java", "BodyUseAPI": [], "Fixed commit": "6516dbc3b3e469a1df75f3f5b7259dce330bbef9", "Url": "https://api.github.com/repos/tntim96/rhino-jscover", "Date": "2015-01-14T23:37:21Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isAssert)) { fail(\"Gold copy has been updated\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7004/buggy-version/gild.src.main.java.org.fuwjax.oss.gild.Gild.java", "BodyUseAPI": [], "Fixed commit": "6c152ecdbe9945566e7055900e2da5e441f82d2b", "Url": "https://api.github.com/repos/fuwjax/ev-oss", "Date": "2015-10-07T22:58:01Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (limit == (-1)) return map;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/9141/buggy-version/araqne-syslog-parser.src.main.java.org.araqne.logparser.syslog.juniper.session.JuniperSessionLogParser.java", "BodyUseAPI": [], "Fixed commit": "ebe37e986f29d38d216ede0110600e52ff991d1d", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2015-04-15T07:50:11Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.dongliu.apk.parser.ApkParser.getFileData(meta.getIcon())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (data == null) { apkParser.close(); throw new java.io.IOException(\"No icon in APK\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2893/buggy-version/src.main.java.de.onyxbits.raccoon.vfs.AppIconNode.java", "BodyUseAPI": [], "Fixed commit": "6e699ea890f56bdef2f124ac094dd97c87d6fcff", "Url": "https://api.github.com/repos/onyxbits/raccoon4", "Date": "2017-02-27T13:13:31Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.dongliu.apk.parser.ApkParser.getApkMeta()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((meta.getIcon()) == null) { apkParser.close(); throw new java.io.IOException(\"No icon in APK\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2893/buggy-version/src.main.java.de.onyxbits.raccoon.vfs.AppIconNode.java", "BodyUseAPI": [], "Fixed commit": "6e699ea890f56bdef2f124ac094dd97c87d6fcff", "Url": "https://api.github.com/repos/onyxbits/raccoon4", "Date": "2017-02-27T13:13:31Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (vesselPos != null) { initIndicateLegGraphics(vesselPos, pos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5556/buggy-version/epd-common.src.main.java.dk.dma.epd.common.prototype.layers.route.ActiveRouteLegGraphic.java", "BodyUseAPI": [], "Fixed commit": "d198989b17e5a8b7e429c41846ea78f83cd11893", "Url": "https://api.github.com/repos/dma-enav/EPD", "Date": "2014-09-29T15:29:02Z"},
{"Line": "=>545", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mMarkerLocationMap.containsValue(location))) { mMarkerLocationMap.put(mGoogleMap.addMarker(location.getMarker()), location); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1120/buggy-version/CreuRoja.src.main.java.com.cruzroja.android.ui.activities.MainActivity.java", "BodyUseAPI": ["com.google.android.gms.maps.GoogleMap.addMarker(location.getMarker())", "com.cruzroja.android.app.Location.getMarker()", "java.util.Map<com.google.android.gms.maps.model.Marker, com.cruzroja.android.app.Location>.put(mGoogleMap.addMarker(location.getMarker()),com.cruzroja.android.app.Location)"], "Fixed commit": "db993f2f47fc1fbf4496e13e400ac125d658bb29", "Url": "https://api.github.com/repos/darthsuicune/CreuRoja", "Date": "2014-02-23T10:49:47Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((y < 0) || (y > (entities.Level.levelMap.length))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6364/buggy-version/src.entities.Level.java", "BodyUseAPI": [], "Fixed commit": "53d279a33bc64d31a54ba2ca40e9efad7c563c04", "Url": "https://api.github.com/repos/sparchatus/DavosJam_16_MR", "Date": "2016-02-19T18:48:40Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((x < 0) || (x > (entities.Level.levelMap[0].length))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6364/buggy-version/src.entities.Level.java", "BodyUseAPI": [], "Fixed commit": "53d279a33bc64d31a54ba2ca40e9efad7c563c04", "Url": "https://api.github.com/repos/sparchatus/DavosJam_16_MR", "Date": "2016-02-19T18:48:40Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.as.server.deployment.DeploymentPhaseContext.getDeploymentUnit()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (deploymentUnit.getName().equals(raxml.getArchive())) { org.jboss.as.connector.metadata.deployment.ResourceAdapterXmlDeploymentService service = new org.jboss.as.connector.metadata.deployment.ResourceAdapterXmlDeploymentService(connectorXmlDescriptor, raxml, module); serviceTarget.addService(ConnectorServices.RESOURCE_ADAPTER_XML_SERVICE_PREFIX.append(connectorXmlDescriptor.getDeploymentName()), service).addDependency(ConnectorServices.IRONJACAMAR_MDR, org.jboss.jca.core.spi.mdr.MetadataRepository.class, service.getMdrInjector()).addDependency(ConnectorServices.RA_REPOSISTORY_SERVICE, org.jboss.jca.core.spi.rar.ResourceAdapterRepository.class, service.getRaRepositoryInjector()).addDependency(ConnectorServices.MANAGEMENT_REPOSISTORY_SERVICE, org.jboss.jca.core.api.management.ManagementRepository.class, service.getManagementRepositoryInjector()).addDependency(ConnectorServices.RESOURCE_ADAPTER_REGISTRY_SERVICE, org.jboss.as.connector.registry.ResourceAdapterDeploymentRegistry.class, service.getRegistryInjector()).addDependency(ConnectorServices.TRANSACTION_INTEGRATION_SERVICE, org.jboss.jca.core.spi.transaction.TransactionIntegration.class, service.getTxIntegrationInjector()).addDependency(ConnectorServices.CONNECTOR_CONFIG_SERVICE, org.jboss.as.connector.subsystems.jca.JcaSubsystemConfiguration.class, service.getConfigInjector()).addDependency(SubjectFactoryService.SERVICE_NAME, org.jboss.security.SubjectFactory.class, service.getSubjectFactoryInjector()).addDependency(ConnectorServices.CCM_SERVICE, org.jboss.jca.core.api.connectionmanager.ccm.CachedConnectionManager.class, service.getCcmInjector()).addDependency(NamingService.SERVICE_NAME).addDependencies(ConnectorServices.RESOURCE_ADAPTER_SERVICE_PREFIX.append(connectorXmlDescriptor.getDeploymentName())).setInitialMode(Mode.ACTIVE).install(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4107/buggy-version/connector.src.main.java.org.jboss.as.connector.deployers.processors.RaXmlDeploymentProcessor.java", "BodyUseAPI": [], "Fixed commit": "d621428f6669137a32331183d1860aa3be00867e", "Url": "https://api.github.com/repos/emuckenhuber/wildfly", "Date": "2011-06-08T22:36:32Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((redisURI.getPassword()) != null) { java.lang.String password = new java.lang.String(redisURI.getPassword()); if (!(\"\".equals(password.trim()))) { connection.auth(password); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1882/buggy-version/src.main.java.com.lambdaworks.redis.cluster.ClusterTopologyRefresh.java", "BodyUseAPI": ["com.lambdaworks.redis.RedisURI.getPassword()"], "Fixed commit": "0acb5f1ee069350445730f01f993df7039a107d7", "Url": "https://api.github.com/repos/dowenliu-xyz/lettuce", "Date": "2015-12-25T16:13:33Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isFinishing())) { dlg.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/524/buggy-version/app.src.main.java.ru.qsolution.vodovoz.driver.OrdersActivity.java", "BodyUseAPI": [], "Fixed commit": "5393dbc13771de87aaa696d44a407d1b5d676c01", "Url": "https://api.github.com/repos/QualitySolution/VodovozDriverAndroid", "Date": "2016-08-12T06:24:25Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(event.getPlayer().getServer().getInfo().equals(event.getKickedFrom()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2023/buggy-version/src.main.java.com.imaginarycode.minecraft.hubmagic.ReconnectListener.java", "BodyUseAPI": [], "Fixed commit": "4f32336f2b0a216be0765d9c6827f4a1556e06d5", "Url": "https://api.github.com/repos/theminecoder/HubMagic", "Date": "2015-12-21T00:37:01Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (map.containsValue(match.getTargetAtom())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/551/buggy-version/src.org.openscience.smsd.algorithm.vflib.map.VFState.java", "BodyUseAPI": [], "Fixed commit": "6146973dd79249456129e095ddaac8d90df635fa", "Url": "https://api.github.com/repos/asad/SMSD", "Date": "2014-05-25T01:54:55Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (map.containsKey(queryPath.get(i))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/551/buggy-version/src.org.openscience.smsd.algorithm.vflib.map.VFState.java", "BodyUseAPI": [], "Fixed commit": "6146973dd79249456129e095ddaac8d90df635fa", "Url": "https://api.github.com/repos/asad/SMSD", "Date": "2014-05-25T01:54:55Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (map.containsValue(targetPath.get(i))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/551/buggy-version/src.org.openscience.smsd.algorithm.vflib.map.VFState.java", "BodyUseAPI": [], "Fixed commit": "6146973dd79249456129e095ddaac8d90df635fa", "Url": "https://api.github.com/repos/asad/SMSD", "Date": "2014-05-25T01:54:55Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (queryAtom.equals(candidate.getQueryNode())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/551/buggy-version/src.org.openscience.smsd.algorithm.vflib.map.VFState.java", "BodyUseAPI": [], "Fixed commit": "6146973dd79249456129e095ddaac8d90df635fa", "Url": "https://api.github.com/repos/asad/SMSD", "Date": "2014-05-25T01:54:55Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (thisEdge != null) connectivity.setEdgeWeight(thisEdge, bondOrder);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6003/buggy-version/autoscan.GaussianOutputFile.java", "BodyUseAPI": [], "Fixed commit": "1f118b255e674b8907763b9a897a9dfea1379066", "Url": "https://api.github.com/repos/ekwan/utilities", "Date": "2016-03-10T06:41:53Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Invocation.Builder.put(javax.ws.rs.client.Entity.xml(project))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((response.getStatusInfo().getFamily()) != (Response.Status.Family.SUCCESSFUL)) { throw new java.lang.RuntimeException(response.getStatusInfo().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6115/buggy-version/client.zanata-rest-client.src.main.java.org.zanata.rest.client.ProjectClient.java", "BodyUseAPI": ["javax.ws.rs.core.Response.getStatusInfo()", "response.getStatusInfo().toString()"], "Fixed commit": "7f36d8f7efc1ea1412a8e20e9eaa6c1e1164e95d", "Url": "https://api.github.com/repos/zanata/zanata-platform", "Date": "2017-01-21T02:14:51Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["webResource().request().put(javax.ws.rs.client.Entity.xml(projectVersion))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((response.getStatusInfo().getFamily()) != (Response.Status.Family.SUCCESSFUL)) { throw new java.lang.RuntimeException(response.getStatusInfo().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6115/buggy-version/client.zanata-rest-client.src.main.java.org.zanata.rest.client.ProjectIterationClient.java", "BodyUseAPI": ["javax.ws.rs.core.Response.getStatusInfo()", "response.getStatusInfo().toString()"], "Fixed commit": "7f36d8f7efc1ea1412a8e20e9eaa6c1e1164e95d", "Url": "https://api.github.com/repos/zanata/zanata-platform", "Date": "2017-01-21T02:14:51Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.update(java.lang.String,org.springframework.jdbc.core.namedparam.MapSqlParameterSource,org.springframework.jdbc.support.KeyHolder)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (res == 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8946/buggy-version/src.main.java.ru.hse.esadykov.dao.BugDao.java", "BodyUseAPI": [], "Fixed commit": "33a4a88b4c4ea1da2463555107eab4c6e5e50de3", "Url": "https://api.github.com/repos/Xokker/bugtracking", "Date": "2014-06-18T16:18:21Z"},
{"Line": "=>977", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JFileChooser.getSelectedFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((fs.length) == 0) { fs = new java.io.File[]{ fc.getSelectedFile() }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5613/buggy-version/src.com.calculator.aa.ui.MainWindow.java", "BodyUseAPI": [], "Fixed commit": "1b7387dfbbad3ee35a4205883f48c78c3f73ca3a", "Url": "https://api.github.com/repos/Oppositus/CalculatorAA", "Date": "2016-12-02T20:51:48Z"},
{"Line": "=>516", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (tab != null) { android.widget.TextView title = ((android.widget.TextView) (tab.findViewById(R.id.tab_title))); if (title != null) { title.setTypeface(tabTypeface, tabTypefaceSelectedStyle); android.support.v4.view.ViewCompat.setAlpha(title, tabTextSelectedAlpha); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4007/buggy-version/library.src.com.astuetz.PagerSlidingTabStrip.java", "BodyUseAPI": ["android.view.View.findViewById(R.id.tab_title)"], "Fixed commit": "60c11adb4230ed5dbe08428e6dc86be255dc124c", "Url": "https://api.github.com/repos/TakumaMochizuki/PagerSlidingTabStrip", "Date": "2015-01-14T10:57:10Z"},
{"Line": "=>506", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (tab != null) { android.widget.TextView title = ((android.widget.TextView) (tab.findViewById(R.id.tab_title))); if (title != null) { title.setTypeface(tabTypeface, tabTypefaceStyle); android.support.v4.view.ViewCompat.setAlpha(title, tabTextAlpha); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4007/buggy-version/library.src.com.astuetz.PagerSlidingTabStrip.java", "BodyUseAPI": ["android.view.View.findViewById(R.id.tab_title)"], "Fixed commit": "60c11adb4230ed5dbe08428e6dc86be255dc124c", "Url": "https://api.github.com/repos/TakumaMochizuki/PagerSlidingTabStrip", "Date": "2015-01-14T10:57:10Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.AbstractMap.SimpleEntry<java.lang.Object, nginx.clojure.ChannelListener<java.lang.Object>>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (l instanceof nginx.clojure.MessageListener) { if (!(req.channel().isClosed())) { ((nginx.clojure.MessageListener) (l)).onClose(en.getKey(), 1006, null); } }else { l.onClose(en.getKey()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6158/buggy-version/src.java.nginx.clojure.java.RequestRawMessageAdapter.java", "BodyUseAPI": ["nginx.clojure.ChannelListener<java.lang.Object>.onClose(en.getKey())"], "Fixed commit": "52497a61addce218a9ea687a67936f4a8b7f5e67", "Url": "https://api.github.com/repos/nginx-clojure/nginx-clojure", "Date": "2015-07-05T17:58:33Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.level) < 99) { (this.level)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8971/buggy-version/src.main.java.Employees.java", "BodyUseAPI": [], "Fixed commit": "b7e6cf909709d8864271f044c78152223059432e", "Url": "https://api.github.com/repos/nohe427/ArcMonsters-monsters", "Date": "2015-11-06T20:59:40Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["e.getEntity().getKiller()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (k == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1698/buggy-version/AnnihilationKits.src.com.gmail.lynx7478.kits.kits.Chronoshift.java", "BodyUseAPI": [], "Fixed commit": "03b5832c7bb44ba135373a2a4bc141964f54e69e", "Url": "https://api.github.com/repos/muresame/AssaultTheNexusKits", "Date": "2016-06-12T10:57:27Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((newMessagesCounter) > 0) { (newMessagesCounter)--; changeCount(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5338/buggy-version/app.src.main.java.neeedo.imimaprx.htw.de.neeedo.models.MessagesModel.java", "BodyUseAPI": [], "Fixed commit": "655a2bf04f3c67618f848c90575f4db2554a4ef9", "Url": "https://api.github.com/repos/neeedo/neeedo-android", "Date": "2015-07-15T08:13:14Z"},
{"Line": "=>505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x == null) { return null; }else if (reservedChars == null) { return x; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2623/buggy-version/cdm.src.main.java.ucar.nc2.util.EscapeStrings.java", "BodyUseAPI": [], "Fixed commit": "682fb0aef94ac54a1181e91ed2d9e5f940bea30c", "Url": "https://api.github.com/repos/dopplershift/thredds", "Date": "2015-01-12T23:46:25Z"},
{"Line": "=>1232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((allFinished()) && (!(allSucceeded()))) { fail(new freenet.client.FetchException(freenet.client.FetchException.SPLITFILE_ERROR, errors)); failed = true; }else { if (waitingForFetcher) return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6588/buggy-version/src.freenet.client.async.SplitFileFetcherStorage.java", "BodyUseAPI": [], "Fixed commit": "5dd23572e4493a474c71c71b423e1631cf478719", "Url": "https://api.github.com/repos/toad/fred-staging", "Date": "2014-08-18T23:59:56Z"},
{"Line": "=>720", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.basho.riak.client.api.commands.indexes.SecondaryIndexQuery.Response.isStreamable()) { return new java.util.ArrayList<>(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4530/buggy-version/src.main.java.com.basho.riak.client.api.commands.indexes.SecondaryIndexQuery.java", "BodyUseAPI": [], "Fixed commit": "002ba0e8bf1869c72307d64f2b8626d6e24aef33", "Url": "https://api.github.com/repos/basho/riak-java-client", "Date": "2016-11-15T19:21:32Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isCancelled()) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3556/buggy-version/app.src.main.java.se.mah.ae2513.androidclient.Splash.java", "BodyUseAPI": [], "Fixed commit": "371c6cc2a51e051d8e0c877840509948507b9d63", "Url": "https://api.github.com/repos/taurus84/Barduino", "Date": "2015-05-21T13:39:41Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentSweep >= 360) { canvas.drawCircle(midX, midX, radius, mPaint); }else { canvas.drawPath(p, mPaint); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2863/buggy-version/src.com.graph.chart.PieGraph.java", "BodyUseAPI": [], "Fixed commit": "247b99ef3678a6b42ffc247557dc049f86836674", "Url": "https://api.github.com/repos/kai-wang-john/android-chart", "Date": "2014-05-24T04:16:07Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(artikelForm.getArtikelAfbeelding().getOriginalFilename().isEmpty())) { com.adm.web.controllers.ArtikelController.slaAfbeeldingOp(artikel.getId(), artikelForm.getArtikelAfbeelding()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4792/buggy-version/src.main.java.com.adm.web.controllers.ArtikelController.java", "BodyUseAPI": ["com.adm.web.controllers.ArtikelController.slaAfbeeldingOp(artikel.getId(),artikelForm.getArtikelAfbeelding())", "com.adm.web.forms.ArtikelRegisterForm.getArtikelAfbeelding()"], "Fixed commit": "9cbe2bbdc1aaedbd24d831eee3550bd980563890", "Url": "https://api.github.com/repos/milanverheij/RSVIERPROJECT2", "Date": "2016-08-25T15:10:30Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((template == null) && (controller != null)) || ((template != null) && (controller == null))) { throw new java.lang.IllegalArgumentException(\"template and controller must both be non-null or null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/354/buggy-version/java.src.jmri.server.web.spi.AngularRoute.java", "BodyUseAPI": [], "Fixed commit": "343175dcabf83bc4ad4170c8ca31977e0fa514d4", "Url": "https://api.github.com/repos/rhwood/JMRI", "Date": "2017-05-01T11:13:55Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((redirection != null) && ((template != null) || (controller != null))) || ((redirection == null) && ((template == null) || (controller == null)))) { throw new java.lang.IllegalArgumentException(\"redirection must be null if template or controller is non-null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/354/buggy-version/java.src.jmri.server.web.spi.AngularRoute.java", "BodyUseAPI": [], "Fixed commit": "343175dcabf83bc4ad4170c8ca31977e0fa514d4", "Url": "https://api.github.com/repos/rhwood/JMRI", "Date": "2017-05-01T11:13:55Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isInEditMode())) { mGPUImage = new jp.co.cyberagent.android.gpuimage.GPUImage(getContext()); mGPUImage.setGLSurfaceView(mGLSurfaceView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8826/buggy-version/library.src.jp.co.cyberagent.android.gpuimage.GPUImageView.java", "BodyUseAPI": [], "Fixed commit": "0d169d1f617d26782fa33d8acb143a53ef02fc75", "Url": "https://api.github.com/repos/jonan/android-gpuimage", "Date": "2015-10-04T10:42:03Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(core.isAlive())) { core.start(); monitor.start(); monitor.addHandler(new net.openhft.chronicle.threads.EventGroup.LoopBlockMonitor()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2387/buggy-version/src.main.java.net.openhft.chronicle.threads.EventGroup.java", "BodyUseAPI": ["net.openhft.chronicle.threads.VanillaEventLoop.start()"], "Fixed commit": "069fa49210966fcb1d3da448ca4d5b2cd336313e", "Url": "https://api.github.com/repos/OpenHFT/Chronicle-Threads", "Date": "2015-08-18T13:56:48Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((name.startsWith(getKey())) && (index == (getKey().length()))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5757/buggy-version/placebooks-webapp.src.placebooks.model.MediaItem.java", "BodyUseAPI": [], "Fixed commit": "eb40c88d2360c2c2db4c5a45eddb729437c180f8", "Url": "https://api.github.com/repos/stuaart/Bridging-the-Rural-Divide--Placebooks", "Date": "2011-11-24T21:58:21Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((action.equals(latmod.emcc.tile.ACTION_OPEN_GUI)) && ((data.getByte(\"ID\")) == 1)) latmod.emcc.tile.LatCoreMC.openClientGui(ep, this, 1); else super.onClientAction(ep, action, data);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7903/buggy-version/src.main.java.latmod.emcc.tile.TileCondenser.java", "BodyUseAPI": ["latmod.emcc.tile.TileLM.onClientAction(net.minecraft.entity.player.EntityPlayer,java.lang.String,net.minecraft.nbt.NBTTagCompound)"], "Fixed commit": "5ae5d3674ea3d3dbe5a8b891cec8c542c0bda6b4", "Url": "https://api.github.com/repos/LatvianModder/EMC_Condenser", "Date": "2014-11-30T22:31:10Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (product.isDefaultProduct()) { defaultProduct = product; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3543/buggy-version/src.main.java.de.cismet.cids.custom.objectrenderer.utils.alkis.print.AlkisPrintingSettingsWidget.java", "BodyUseAPI": [], "Fixed commit": "9b1aae89fd2933d1e2986cf2a89a30132965c6a6", "Url": "https://api.github.com/repos/cismet/cids-custom-wuppertal", "Date": "2014-05-15T14:37:58Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((defaultProduct) != null) { cbClazz.setSelectedItem(defaultProduct.getClazz()); cbProduct.setSelectedItem(defaultProduct.getType()); }else { cbClazz.setSelectedIndex(((cbClazz.getModel().getSize()) - 1)); cbProduct.setSelectedIndex(((cbProduct.getModel().getSize()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3543/buggy-version/src.main.java.de.cismet.cids.custom.objectrenderer.utils.alkis.print.AlkisPrintingSettingsWidget.java", "BodyUseAPI": [], "Fixed commit": "9b1aae89fd2933d1e2986cf2a89a30132965c6a6", "Url": "https://api.github.com/repos/cismet/cids-custom-wuppertal", "Date": "2014-05-15T14:37:58Z"},
{"Line": "=>534", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((branches.get(key).leaf) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1545/buggy-version/h2o-core.src.main.java.water.api.RequestServer.java", "BodyUseAPI": [], "Fixed commit": "7b5642317392222a395447f6618fbf6c264e68b8", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2016-09-15T23:59:19Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentMap<java.lang.Object, hivemall.mix.server.PartialResult>.putIfAbsent(java.lang.Object,hivemall.mix.server.PartialResult)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (existing != null) { partial = existing; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1534/buggy-version/src.main.hivemall.mix.server.MixServerHandler.java", "BodyUseAPI": [], "Fixed commit": "0dc8264fb88aabaf3bef645fbe2a2a71b66ba8e1", "Url": "https://api.github.com/repos/myui/hivemall", "Date": "2014-09-01T07:11:29Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentMap<java.lang.String, java.util.concurrent.ConcurrentMap<java.lang.Object, hivemall.mix.server.PartialResult>>.putIfAbsent(java.lang.String,java.util.concurrent.ConcurrentMap<java.lang.Object, hivemall.mix.server.PartialResult>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (existing != null) { map = existing; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1534/buggy-version/src.main.hivemall.mix.server.MixServerHandler.java", "BodyUseAPI": [], "Fixed commit": "0dc8264fb88aabaf3bef645fbe2a2a71b66ba8e1", "Url": "https://api.github.com/repos/myui/hivemall", "Date": "2014-09-01T07:11:29Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.minecolonies.coremod.colony.ColonyManager.getColony(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(colony.getPermissions().isPlayerPermissionDefined(message.playerName, colony.getWorld()))) { colony.getPermissions().addPlayer(message.playerName, Rank.NEUTRAL, colony.getWorld()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1992/buggy-version/src.main.java.com.minecolonies.coremod.network.messages.PermissionsMessage.java", "BodyUseAPI": ["colony.getPermissions().addPlayer(java.lang.String,Rank.NEUTRAL,colony.getWorld())", "com.minecolonies.coremod.colony.Colony.getPermissions()", "com.minecolonies.coremod.colony.Colony.getWorld()"], "Fixed commit": "2d7c4b38438317cacd714b4275376f1dc99c354d", "Url": "https://api.github.com/repos/ldtteam/minecolonies", "Date": "2017-05-26T08:53:56Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (key.equals(\"password\")) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3146/buggy-version/app.src.main.java.me.hapened.hapened.SA.java", "BodyUseAPI": [], "Fixed commit": "9272d69b5ffe9b7871af19c41c7c72269cf7ebbb", "Url": "https://api.github.com/repos/h4shCollision/Hapened", "Date": "2016-01-13T00:52:44Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_googleAnalytics) == null) initAnalytics();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4244/buggy-version/onebusaway-nyc-sms-webapp.src.main.java.org.onebusaway.nyc.sms.actions.IndexAction.java", "BodyUseAPI": [], "Fixed commit": "911e52482d1073edcf1e6b60217343845056c04d", "Url": "https://api.github.com/repos/camsys/onebusaway-nyc", "Date": "2012-08-27T18:38:56Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_googleAnalytics) == null) initAnalytics();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4244/buggy-version/onebusaway-nyc-sms-webapp.src.main.java.org.onebusaway.nyc.sms.actions.IndexAction.java", "BodyUseAPI": [], "Fixed commit": "911e52482d1073edcf1e6b60217343845056c04d", "Url": "https://api.github.com/repos/camsys/onebusaway-nyc", "Date": "2012-08-27T18:38:56Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.time.LocalDateTime.parse(InfoHandler.LAST_PARSE_DATE,InfoHandler.formatter)", "java.time.LocalDateTime.ofInstant(java.time.Instant,java.time.ZoneId)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (fileModified.isAfter(lastParse)) { com.pawandubey.griffin.model.Parsable parsable = createParsable(file); Data.fileQueue.put(parsable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4950/buggy-version/src.main.java.com.pawandubey.griffin.DirectoryCrawler.java", "BodyUseAPI": [], "Fixed commit": "c307880cc785d77309c844e2d583a1894fac0b6c", "Url": "https://api.github.com/repos/pawandubey/griffin", "Date": "2015-11-30T17:48:32Z"},
{"Line": "=>1153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((vc.ccdaType) == null) { if ((vc.getInnerContextCount()) > 0) docVC.ccdaType = vc.getInnerContext(0).ccdaType; else docVC.ccdaType = \"- Non-specific CCDA\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1337/buggy-version/direct.src.gov.nist.direct.messageProcessor.direct.directImpl.DirectMimeMessageProcessor.java", "BodyUseAPI": ["gov.nist.toolkit.valsupport.client.ValidationContext.getInnerContext(int)", "gov.nist.toolkit.valsupport.client.ValidationContext.getInnerContextCount()"], "Fixed commit": "4f49b6fa8ca68716bac638d0aa92cfb16f259856", "Url": "https://api.github.com/repos/usnistgov/iheos-toolkit2", "Date": "2013-11-12T20:58:38Z"},
{"Line": "=>810", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((vc.ccdaType) == null) { if ((vc.getInnerContextCount()) > 0) docVC.ccdaType = vc.getInnerContext(0).ccdaType; else docVC.ccdaType = \"- Non-specific CCDA\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1337/buggy-version/direct.src.gov.nist.direct.messageProcessor.direct.directImpl.DirectMimeMessageProcessor.java", "BodyUseAPI": ["gov.nist.toolkit.valsupport.client.ValidationContext.getInnerContext(int)", "gov.nist.toolkit.valsupport.client.ValidationContext.getInnerContextCount()"], "Fixed commit": "4f49b6fa8ca68716bac638d0aa92cfb16f259856", "Url": "https://api.github.com/repos/usnistgov/iheos-toolkit2", "Date": "2013-11-12T20:58:38Z"},
{"Line": "=>698", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((vc.ccdaType) == null) { if ((vc.getInnerContextCount()) > 0) docVC.ccdaType = vc.getInnerContext(0).ccdaType; else docVC.ccdaType = \"- Non-specific CCDA\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1337/buggy-version/direct.src.gov.nist.direct.messageProcessor.direct.directImpl.DirectMimeMessageProcessor.java", "BodyUseAPI": ["gov.nist.toolkit.valsupport.client.ValidationContext.getInnerContext(int)", "gov.nist.toolkit.valsupport.client.ValidationContext.getInnerContextCount()"], "Fixed commit": "4f49b6fa8ca68716bac638d0aa92cfb16f259856", "Url": "https://api.github.com/repos/usnistgov/iheos-toolkit2", "Date": "2013-11-12T20:58:38Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uzuzjmd.competence.reflexion.dao.ActivityDao.addSuggestedActivityForCompetence(java.lang.String,((datastructures.trees.AbstractTreeEntry) (selectedActivityNode.getData())).getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result != 200) { javax.faces.application.FacesMessage message = new javax.faces.application.FacesMessage(javax.faces.application.FacesMessage.SEVERITY_ERROR, \"It worked\", \"It maybe worked\"); org.primefaces.context.RequestContext.getCurrentInstance().showMessageInDialog(message); }else { javax.faces.application.FacesMessage message = new javax.faces.application.FacesMessage(javax.faces.application.FacesMessage.SEVERITY_INFO, \"It worked\", \"It maybe worked\"); org.primefaces.context.RequestContext.getCurrentInstance().showMessageInDialog(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6067/buggy-version/src.main.java.uzuzjmd.competence.reflexion.ActivityCompetenceView.java", "BodyUseAPI": [], "Fixed commit": "37e8766b810cb354ef49a38940aff4c9ed6e8c77", "Url": "https://api.github.com/repos/uzuzjmd/competence-reflexion-teacher", "Date": "2016-09-15T12:37:39Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((parentGroup == (de.ovgu.featureide.core.mpl.job.CreateInterfaceJob.GROUP_AND)) && (!(curFeature.isMandatory()))) { for (de.ovgu.featureide.fm.core.Feature feature : curFeature.getChildren()) { feature.setMandatory(false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7247/buggy-version/plugins.de.ovgu.featureide.core.mpl.src.de.ovgu.featureide.core.mpl.job.CreateInterfaceJob.java", "BodyUseAPI": ["de.ovgu.featureide.fm.core.Feature.getChildren()"], "Fixed commit": "0fc923103663265ce80aeec95eace4a62a85ba65", "Url": "https://api.github.com/repos/skrieter/FeatureIDE", "Date": "2015-07-07T18:24:04Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.MessageService.findByMessageTypeAndEventAndVersionAndScope(java.lang.String,java.lang.String,java.lang.String,Constant.SCOPE.HL7STANDARD.name())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (message != null) { java.lang.String html = exportService.exportDataModelAsHtml(message, message.getName(), generateHost(request)); return new gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.ExportableDataModel(html, message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2955/buggy-version/igamt-lite-controller.src.main.java.gov.nist.healthcare.tools.hl7.v2.igamt.lite.web.controller.ExportController.java", "BodyUseAPI": ["gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Message.getName()", "gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.ExportService.exportDataModelAsHtml(gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Message,message.getName(),java.lang.String)"], "Fixed commit": "6d0d1d59af8c329d77cf37be151473e1f0672abc", "Url": "https://api.github.com/repos/haffonist/igamt", "Date": "2017-06-15T18:12:37Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.SegmentService.findByNameAndVersionAndScope(java.lang.String,java.lang.String,Constant.SCOPE.HL7STANDARD.name())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (segment != null) { java.lang.String html = exportService.exportDataModelAsHtml(segment, segment.getName(), generateHost(request)); return new gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.ExportableDataModel(html, segment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2955/buggy-version/igamt-lite-controller.src.main.java.gov.nist.healthcare.tools.hl7.v2.igamt.lite.web.controller.ExportController.java", "BodyUseAPI": ["gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.ExportService.exportDataModelAsHtml(gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Segment,segment.getName(),java.lang.String)", "gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Segment.getName()"], "Fixed commit": "6d0d1d59af8c329d77cf37be151473e1f0672abc", "Url": "https://api.github.com/repos/haffonist/igamt", "Date": "2017-06-15T18:12:37Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.TableService.findByScopeAndVersionAndBindingIdentifier(Constant.SCOPE.HL7STANDARD,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (table != null) { java.lang.String html = exportService.exportDataModelAsHtml(table, table.getName(), generateHost(request)); return new gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.ExportableDataModel(html, table); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2955/buggy-version/igamt-lite-controller.src.main.java.gov.nist.healthcare.tools.hl7.v2.igamt.lite.web.controller.ExportController.java", "BodyUseAPI": ["gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.ExportService.exportDataModelAsHtml(gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Table,table.getName(),java.lang.String)", "gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Table.getName()"], "Fixed commit": "6d0d1d59af8c329d77cf37be151473e1f0672abc", "Url": "https://api.github.com/repos/haffonist/igamt", "Date": "2017-06-15T18:12:37Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (dataFolder == null) { java.lang.System.out.println(\"No DATA folder found.\"); }else { for (java.io.File f : dataFolder.listFiles()) { java.lang.System.out.println((\"File found: \" + f)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8932/buggy-version/src.org.socialsketch.tool.SketchAdapter.java", "BodyUseAPI": [], "Fixed commit": "be05be0c8ea6f626eeede813071e728e2491a5f5", "Url": "https://api.github.com/repos/dimkir/SocialSketch", "Date": "2013-11-12T15:32:53Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (direction == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8204/buggy-version/src.com.untamedears.citadel.listener.BlockListener.java", "BodyUseAPI": [], "Fixed commit": "58ad53db4d7ecd6137ec2637532f69f8d2b3d366", "Url": "https://api.github.com/repos/Exultant/Citadel", "Date": "2012-05-26T02:42:57Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.block.Block.getRelative(org.bukkit.block.BlockFace,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((plugin.dao.findReinforcement(moved)) != null) { bpre.setCancelled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8204/buggy-version/src.com.untamedears.citadel.listener.BlockListener.java", "BodyUseAPI": [], "Fixed commit": "58ad53db4d7ecd6137ec2637532f69f8d2b3d366", "Url": "https://api.github.com/repos/Exultant/Citadel", "Date": "2012-05-26T02:42:57Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (direction == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8204/buggy-version/src.com.untamedears.citadel.listener.BlockListener.java", "BodyUseAPI": [], "Fixed commit": "58ad53db4d7ecd6137ec2637532f69f8d2b3d366", "Url": "https://api.github.com/repos/Exultant/Citadel", "Date": "2012-05-26T02:42:57Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.block.BlockState.getData()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (data instanceof org.bukkit.material.PistonBaseMaterial) { direction = ((org.bukkit.material.PistonBaseMaterial) (data)).getFacing(); org.bukkit.block.Block block = bpee.getBlock().getRelative(direction); com.untamedears.citadel.entity.Reinforcement reinforcement = plugin.dao.findReinforcement(block); if (reinforcement != null) { bpee.setCancelled(true); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8204/buggy-version/src.com.untamedears.citadel.listener.BlockListener.java", "BodyUseAPI": [], "Fixed commit": "58ad53db4d7ecd6137ec2637532f69f8d2b3d366", "Url": "https://api.github.com/repos/Exultant/Citadel", "Date": "2012-05-26T02:42:57Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.block.Block.getRelative(org.bukkit.block.BlockFace,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((moved.getType()) == (org.bukkit.Material.WOODEN_DOOR)) || ((moved.getType()) == (org.bukkit.Material.IRON_DOOR_BLOCK))) { org.bukkit.block.Block below = moved.getRelative(BlockFace.DOWN).getRelative(direction.getOppositeFace()); if ((plugin.dao.findReinforcement(below)) != null) { bpre.setCancelled(true); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8204/buggy-version/src.com.untamedears.citadel.listener.BlockListener.java", "BodyUseAPI": ["moved.getRelative(BlockFace.DOWN).getRelative(direction.getOppositeFace())", "org.bukkit.block.Block.getRelative(BlockFace.DOWN)"], "Fixed commit": "58ad53db4d7ecd6137ec2637532f69f8d2b3d366", "Url": "https://api.github.com/repos/Exultant/Citadel", "Date": "2012-05-26T02:42:57Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (dataManager != null) { dataManager.setOnCallService(this); dataManager.setDataChangeWatcher(this); if ((dataManager.size()) != 0) itemsAdded(0, dataManager); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3916/buggy-version/library.src.main.java.com.kimeeo.library.listDataView.mapView.BaseMapView.java", "BodyUseAPI": ["com.kimeeo.library.listDataView.dataManagers.DataManager.setOnCallService(com.kimeeo.library.listDataView.mapView.BaseMapView)", "com.kimeeo.library.listDataView.dataManagers.DataManager.size()", "com.kimeeo.library.listDataView.mapView.BaseMapView.itemsAdded(int,com.kimeeo.library.listDataView.dataManagers.DataManager)", "com.kimeeo.library.listDataView.dataManagers.DataManager.setDataChangeWatcher(com.kimeeo.library.listDataView.mapView.BaseMapView)"], "Fixed commit": "701c440f822fdbc2ec34092bb7634696d658901a", "Url": "https://api.github.com/repos/kimeeo/Kandroid", "Date": "2016-03-22T19:31:49Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((operations.size()) == 0) { return operations; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4143/buggy-version/modules.swagger-codegen.src.main.java.io.swagger.codegen.languages.LoopBackSwiftClientCodegen.java", "BodyUseAPI": [], "Fixed commit": "6e118d31a675e5476209bc7d77dc78ed578e5d21", "Url": "https://api.github.com/repos/ConnectCorp/swagger-codegen", "Date": "2016-04-22T16:02:04Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(game.getTableauDeBord().getInfoParClient().containsKey(p))) { game.getTableauDeBord().ajouterClient(new application.model.ClientInfo(p)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6735/buggy-version/src.application.rmi.Serveur.java", "BodyUseAPI": ["game.getTableauDeBord().ajouterClient(application.model.ClientInfo)", "application.rmi.Game.getTableauDeBord()"], "Fixed commit": "10b3310e561d2b486117a96219760dbe832d356a", "Url": "https://api.github.com/repos/julienremydev/Acquire", "Date": "2016-05-04T23:34:01Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((cost.getText()) != null) && (!(cost.getText().isEmpty()))) { if (!(cost.getText().startsWith(\"As an additional cost\"))) { sbRule.append(\"As an additional cost to cast {this}, \"); } sbRule.append(cost.getText()).append(\".\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2509/buggy-version/Mage.src.mage.abilities.AbilitiesImpl.java", "BodyUseAPI": ["mage.abilities.costs.Cost.getText()", "mage.abilities.costs.Cost.getText()", "java.lang.StringBuilder.append(cost.getText())", "cost.getText().startsWith(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "afb5162e6acdd737cec70c8466faee9c0a7d32df", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2012-08-23T10:16:52Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(str.equals(mOld))) { mChanged = true; s.replace(0, s.length(), str); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6098/buggy-version/src.net.gumbercules.loot.backend.NoDecimalCurrencyWatcher.java", "BodyUseAPI": ["android.text.Editable.replace(int,s.length(),java.lang.String)"], "Fixed commit": "badde6f30a0ffeb15d4d6e77b9e8e27b4906a8c0", "Url": "https://api.github.com/repos/chrismccurdy/loot", "Date": "2011-02-28T20:47:41Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numberOfPoints > 1) returnSetOfPoints.add(controlPoints.get(0));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7040/buggy-version/src.Points.java", "BodyUseAPI": [], "Fixed commit": "cc43f24b9255ea47706e75e54b66745aead81382", "Url": "https://api.github.com/repos/albertmourato/pg", "Date": "2017-11-07T11:40:42Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (type.equals(\"server_error\")) { createCards(\"Sunucuya eri\\ufffdilemiyor!\\nL\\ufffdtfen A\\ufffd ayarlar\\ufffdn\\ufffdz\\ufffd kontrol edin.\", \"\ufffd\ufffdk\ufffd\ufffd i\ufffdin \ufffdift g\ufffdz k\ufffdrp\ufffdn, ya da bekleyin\", R.drawable.error); canClose = true; }else if (type.equals(\"server_bad_response\")) { createCards(\"404 sayfa bulunamad\\ufffd!\\nSunucu bu iste\\ufffde yan\\ufffdt veremiyor.\", \"\ufffd\ufffdk\ufffd\ufffd i\ufffdin \ufffdift g\ufffdz k\ufffdrp\ufffdn, ya da bekleyin\", R.drawable.error); canClose = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4653/buggy-version/GlassApp.HackathonPerseusGlass.src.com.github.barcodeeye.scan.ResultsActivity.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "e3fa59b0af79a45b363732ce97a0a44a0e1e89e5", "Url": "https://api.github.com/repos/CagataySonmez/MobilHackathon2014", "Date": "2014-11-09T05:00:42Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (year != null) { try { long longYear = java.lang.Long.parseLong(year); } catch (java.lang.Throwable t) { org.jax.mgi.mgd.api.util.SearchResults<org.jax.mgi.mgd.api.domain.ReferenceDomain> results = new org.jax.mgi.mgd.api.util.SearchResults<org.jax.mgi.mgd.api.domain.ReferenceDomain>(); results.setError(\"InvalidParameter\", (\"Year is not an integer: \" + year), Constants.HTTP_BAD_REQUEST); return results; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/333/buggy-version/src.main.java.org.jax.mgi.mgd.api.controller.ReferenceController.java", "BodyUseAPI": ["org.jax.mgi.mgd.api.util.SearchResults<org.jax.mgi.mgd.api.domain.ReferenceDomain>.setError(java.lang.String,java.lang.String,Constants.HTTP_BAD_REQUEST)", "java.lang.Long.parseLong(java.lang.String)"], "Fixed commit": "23def9ef814d15e87182cd82948bf04f448e56a2", "Url": "https://api.github.com/repos/mgijax/mgd_java_api", "Date": "2017-08-09T17:56:23Z"},
{"Line": "=>810", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value > 1) { genMethodName = genMethodName + (value.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4071/buggy-version/tools.wadlto.jaxrs.src.main.java.org.apache.cxf.tools.wadlto.jaxrs.SourceGenerator.java", "BodyUseAPI": ["java.lang.Integer.toString()"], "Fixed commit": "05470459f4dad0864ae639d7d91ccc0637682710", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2016-01-29T10:13:46Z"},
{"Line": "=>806", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (value == null) { value = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4071/buggy-version/tools.wadlto.jaxrs.src.main.java.org.apache.cxf.tools.wadlto.jaxrs.SourceGenerator.java", "BodyUseAPI": [], "Fixed commit": "05470459f4dad0864ae639d7d91ccc0637682710", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2016-01-29T10:13:46Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(arr_client.removeAll(arr_toBeRemoved))) { lh_communication.write(((((\"ERROR: Failed to remove all of closed connections from master's client array (Removal Queue: \" + (arr_toBeRemoved.size())) + \"; Total Size: \") + (i_connectionCount + (arr_toBeRemoved.size()))) + \")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7336/buggy-version/net.staplr.common.Communicator.java", "BodyUseAPI": ["java.util.ArrayList<net.staplr.common.DefaultSocketConnection>.size()", "java.util.ArrayList<net.staplr.common.DefaultSocketConnection>.size()", "net.staplr.logging.LogHandle.write(((((\"ERROR: Failed to remove all of closed connections from master's client array (Removal Queue: \" + (arr_toBeRemoved.size())) + \"; Total Size: \") + (i_connectionCount + (arr_toBeRemoved.size()))) + \")\"))"], "Fixed commit": "684cfb6da19933109a8f13225463ce94493cd330", "Url": "https://api.github.com/repos/connorwm/staplr", "Date": "2015-01-09T22:28:31Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(arr_client.get(i_client).isClosed())) { java.lang.String str_address = arr_client.get(i_client).getAddress(); str_address = str_address.substring(1, str_address.indexOf(\":\")); map_masterAddresses.put(str_address, arr_client.get(i_client).getPort()); }else { arr_client.remove(i_client); map_masterAddresses = getConnectedMasters(); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7336/buggy-version/net.staplr.common.Communicator.java", "BodyUseAPI": ["arr_client.get(i_client).getPort()", "arr_client.get(i_client).getAddress()", "java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String,arr_client.get(i_client).getPort())", "java.util.ArrayList<net.staplr.common.DefaultSocketConnection>.get(int)", "java.util.ArrayList<net.staplr.common.DefaultSocketConnection>.get(int)", "java.util.ArrayList<net.staplr.common.DefaultSocketConnection>.remove(int)"], "Fixed commit": "684cfb6da19933109a8f13225463ce94493cd330", "Url": "https://api.github.com/repos/connorwm/staplr", "Date": "2015-01-09T22:28:31Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((entry) != null) text += (\"\\n\" + (entry)) + \"\\n\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2136/buggy-version/v9t9.v9t9-java.v9t9-machines.ti99.v9t9.machine.ti99.machine.fileExecutors.EditAssmLoadAndRunFileExecutor.java", "BodyUseAPI": [], "Fixed commit": "894c4d1f4d13a01e138e7fb8dc7dc6de6f88d727", "Url": "https://api.github.com/repos/eswartz/emul", "Date": "2013-03-24T17:28:09Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (editTextSearch.getText().toString().equals(\"\")) { editTextSearch.setError(getString(R.string.err_fill_search_box)); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/573/buggy-version/app.src.main.java.ir.rasen.charsoo.view.fragment.FragmentSearch.java", "BodyUseAPI": ["ir.rasen.charsoo.view.widget_customized.EditTextFont.setError(getString(R.string.err_fill_search_box))"], "Fixed commit": "9b9b3355827fe62396fefb286c36fe1380b615aa", "Url": "https://api.github.com/repos/A-Kaveh2/4Soo", "Date": "2015-05-26T10:19:53Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t instanceof ro.nextreports.server.domain.Folder) { return getClosedStyleClass(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/888/buggy-version/src.ro.nextreports.server.web.dashboard.AddWidgetPanel.java", "BodyUseAPI": [], "Fixed commit": "077c4ad11e3e39ec870b92fbfcf064a3530c9c18", "Url": "https://api.github.com/repos/nextreports/nextreports-server", "Date": "2014-01-24T14:27:48Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t instanceof ro.nextreports.server.domain.Folder) { return getClosedStyleClass(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/888/buggy-version/src.ro.nextreports.server.web.core.migration.AddEntityPanel.java", "BodyUseAPI": [], "Fixed commit": "077c4ad11e3e39ec870b92fbfcf064a3530c9c18", "Url": "https://api.github.com/repos/nextreports/nextreports-server", "Date": "2014-01-24T14:27:48Z"},
{"Line": "=>442", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Stack<org.breizhbeans.thrift.tools.thriftmongobridge.protocol.ThriftIO>.peek()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((documentThriftIO.securedMongoIO) != null) { documentThriftIO.securedMongoIO.put(java.lang.Short.toString(field.tfield.id), mapThriftIO.securedMongoIO); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2575/buggy-version/src.main.java.org.breizhbeans.thrift.tools.thriftmongobridge.protocol.TBSONUnstackedProtocol.java", "BodyUseAPI": ["documentThriftIO.securedMongoIO.put(java.lang.String,mapThriftIO.securedMongoIO)"], "Fixed commit": "30f39144b49dfe558ba4356af35ab5c7aaf8c596", "Url": "https://api.github.com/repos/BreizhBeans/ThriftMongoBridge", "Date": "2015-02-03T11:40:32Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (intentGoToMarket != null) { startActivity(intentGoToMarket); }else { android.widget.Toast.makeText(mActivity, getString(R.string.message_error_market), Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5293/buggy-version/permission.src.org.androidsoft.app.permission.ui.ApplicationFragment.java", "BodyUseAPI": ["org.androidsoft.app.permission.ui.ApplicationFragment.startActivity(android.content.Intent)"], "Fixed commit": "f749ba63cd177f4d4a799151fb603470066b94e5", "Url": "https://api.github.com/repos/androidsoft-org/permission", "Date": "2011-12-05T01:23:35Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (intentOpen != null) { intentOpen.addCategory(Intent.CATEGORY_LAUNCHER); startActivity(intentOpen); }else { android.widget.Toast.makeText(mActivity, getString(R.string.message_error_open), Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5293/buggy-version/permission.src.org.androidsoft.app.permission.ui.ApplicationFragment.java", "BodyUseAPI": ["android.content.Intent.addCategory(Intent.CATEGORY_LAUNCHER)", "org.androidsoft.app.permission.ui.ApplicationFragment.startActivity(android.content.Intent)"], "Fixed commit": "f749ba63cd177f4d4a799151fb603470066b94e5", "Url": "https://api.github.com/repos/androidsoft-org/permission", "Date": "2011-12-05T01:23:35Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (empty || (item == null)) { setText(null); setGraphic(null); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5719/buggy-version/src.main.java.de.uniks.networkparser.ext.javafx.component.TableCellFX.java", "BodyUseAPI": [], "Fixed commit": "ab656d57345803ac3c497edadb7dc4d8c64df311", "Url": "https://api.github.com/repos/fujaba/NetworkParser", "Date": "2016-10-12T11:44:14Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((this.field) != null) && (this.field.isListener())) { javafx.scene.control.TablePosition<?, ?> editingCell = getTableView().getFocusModel().getFocusedCell(); int row = editingCell.getRow(); java.lang.Object entity = tableComponent.getElement(row); de.uniks.networkparser.interfaces.SendableEntityCreator creator = tableComponent.getCreator(entity); this.field.getListener().onAction(entity, creator, getTableView().getLayoutX(), getTableView().getLayoutY()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5719/buggy-version/src.main.java.de.uniks.networkparser.ext.javafx.component.TableCellFX.java", "BodyUseAPI": ["de.uniks.networkparser.gui.Column.getListener()", "this.field.getListener().onAction(java.lang.Object,de.uniks.networkparser.interfaces.SendableEntityCreator,getTableView().getLayoutX(),getTableView().getLayoutY())"], "Fixed commit": "ab656d57345803ac3c497edadb7dc4d8c64df311", "Url": "https://api.github.com/repos/fujaba/NetworkParser", "Date": "2016-10-12T11:44:14Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["c.getSearchable().done(M,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (done) { com.barrybecker4.game.twoplayer.common.ui.AbstractTwoPlayerBoardViewer.sendGameChangedEvent(move); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6476/buggy-version/source.com.barrybecker4.game.twoplayer.common.ui.AbstractTwoPlayerBoardViewer.java", "BodyUseAPI": [], "Fixed commit": "3dd6f0ad61b22d71a27e2e815737ea60fc2925de", "Url": "https://api.github.com/repos/bb4/bb4-games", "Date": "2015-06-07T18:16:30Z"},
{"Line": "=>588", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(element.attr(\"style\").trim().isEmpty())) { java.lang.String[] styles = element.attr(\"style\").split(\";\"); for (java.lang.String style : styles) if (style.substring(0, style.indexOf(\":\")).trim().equals(\"text-align\")) alignment = com.pratilipi.data.type.PratilipiContentDoc.AlignmentType.valueOf(style.substring(((style.indexOf(\":\")) + 1)).trim().toUpperCase()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8975/buggy-version/src.main.java.com.pratilipi.data.util.PratilipiDocUtil.java", "BodyUseAPI": ["element.attr(\"style\").split(java.lang.String)", "org.jsoup.nodes.Element.attr(java.lang.String)"], "Fixed commit": "47c41a398798f0a938df2e02db7ee2b647cfb745", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-10-04T12:01:27Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (json == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/84/buggy-version/Leumi.src.com.pictureit.leumi.server.parse.JsonToObject.java", "BodyUseAPI": [], "Fixed commit": "08a50ead7d83bd5d2572107b81849d0f6714203a", "Url": "https://api.github.com/repos/NoamBO/Pictureit", "Date": "2014-08-13T10:39:00Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ti.getTypeName()) != null) { if ((!(ti.getTypeName().equals(\"javax.xml.ws.Holder\"))) && (!(inTypeNameToQName.get(ti.getTypeName()).equals(ti.getElName())))) { org.apache.camel.dataformat.soap.name.ServiceInterfaceStrategy.LOG.warn(((\"Ambiguous QName mapping. The type [ \" + (ti.getTypeName())) + \" ] is already mapped to a QName in this context.\")); continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7298/buggy-version/components.camel-soap.src.main.java.org.apache.camel.dataformat.soap.name.ServiceInterfaceStrategy.java", "BodyUseAPI": ["org.slf4j.Logger.warn(((\"Ambiguous QName mapping. The type [ \" + (ti.getTypeName())) + \" ] is already mapped to a QName in this context.\"))", "org.apache.camel.dataformat.soap.name.TypeInfo.getTypeName()", "javax.xml.namespace.QName.equals(ti.getElName())", "org.apache.camel.dataformat.soap.name.TypeInfo.getElName()", "java.util.Map<java.lang.String, javax.xml.namespace.QName>.get(ti.getTypeName())", "org.apache.camel.dataformat.soap.name.TypeInfo.getTypeName()", "ti.getTypeName().equals(java.lang.String)", "org.apache.camel.dataformat.soap.name.TypeInfo.getTypeName()"], "Fixed commit": "4fb4175c961a777e12bca80b7b090f03d5b90a73", "Url": "https://api.github.com/repos/askannon/camel", "Date": "2014-05-13T07:06:36Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (secondElementName.equalsIgnoreCase(localName)) { if (shouldRecord(uri, localName, name, atts)) { numLayersForRecording = 1; }else if ((numLayersForRecording) > 0) { ++(numLayersForRecording); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4057/buggy-version/src.main.java.cn.tingjiangzuo.handler.dahuodong.DaHuoDongTimeAddressHandler.java", "BodyUseAPI": ["cn.tingjiangzuo.handler.dahuodong.DaHuoDongTimeAddressHandler.shouldRecord(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"], "Fixed commit": "daf6f1fe3b97b5069fa1c71bb78fba67597c5d20", "Url": "https://api.github.com/repos/KaiJiangLou/offline", "Date": "2014-03-14T15:04:17Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (node.hasProperty(VdbLexicon.DataRole.MAPPED_ROLE_NAMES)) { javax.jcr.Property property = node.getProperty(VdbLexicon.DataRole.MAPPED_ROLE_NAMES); javax.jcr.Value[] mappedRoleValues = property.getValues(); for (javax.jcr.Value value : mappedRoleValues) { writeTab(org.komodo.modeshape.visitor.VdbNodeVisitor.ElementTabValue.MAPPED_ROLE_NAME); writeElementWithText(VdbLexicon.ManifestIds.MAPPED_ROLE_NAME, value.getString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5690/buggy-version/komodo-modeshape-vdb.src.main.java.org.komodo.modeshape.visitor.VdbNodeVisitor.java", "BodyUseAPI": ["javax.jcr.Node.getProperty(VdbLexicon.DataRole.MAPPED_ROLE_NAMES)"], "Fixed commit": "ae27c5ca35381efe30c1b5ce98f5bbbdb65638c2", "Url": "https://api.github.com/repos/elvisisking/komodo", "Date": "2017-07-21T17:13:25Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((device.getName()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/857/buggy-version/app.src.main.java.com.jamie.android.a4ypdatacollection.BluetoothModule.java", "BodyUseAPI": [], "Fixed commit": "1867e91b6410b99803dde2d9778eef4faf9ae02c", "Url": "https://api.github.com/repos/Oxford-step-counter/Data-Collection-Android-App", "Date": "2016-11-24T17:15:51Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type.getType()) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1415/buggy-version/src.main.java.com.bergerkiller.bukkit.common.internal.network.ProtocolLibPacketHandler.java", "BodyUseAPI": [], "Fixed commit": "5dea11c77405c17d1d7c349e531e4e00683d9880", "Url": "https://api.github.com/repos/bergerhealer/BKCommonLib", "Date": "2017-07-01T11:24:01Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bergerkiller.bukkit.common.internal.network.ProtocolLibPacketHandler.getPacketType(com.bergerkiller.bukkit.common.protocol.PacketType)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (comType != null) { comTypes.add(comType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1415/buggy-version/src.main.java.com.bergerkiller.bukkit.common.internal.network.ProtocolLibPacketHandler.java", "BodyUseAPI": ["java.util.List<com.bergerkiller.bukkit.common.protocol.PacketType>.add(com.bergerkiller.bukkit.common.protocol.PacketType)"], "Fixed commit": "5dea11c77405c17d1d7c349e531e4e00683d9880", "Url": "https://api.github.com/repos/bergerhealer/BKCommonLib", "Date": "2017-07-01T11:24:01Z"},
{"Line": "=>1639", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.nuxeo.ecm.core.api.impl.TransactionHelper.isNoTransaction()) { org.nuxeo.ecm.core.api.impl.TransactionHelper.startTransaction(); try { return writeReplace(); } finally { org.nuxeo.ecm.core.api.impl.TransactionHelper.commitOrRollbackTransaction(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2704/buggy-version/nuxeo-core.nuxeo-core-api.src.main.java.org.nuxeo.ecm.core.api.impl.DocumentModelImpl.java", "BodyUseAPI": [], "Fixed commit": "34be9a93304238e99439c6603795c84c24439d59", "Url": "https://api.github.com/repos/nuxeo/nuxeo", "Date": "2016-02-05T11:10:13Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tablePrefix != null) { name = tablePrefix = tableName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3501/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.mysql.MySQL.java", "BodyUseAPI": [], "Fixed commit": "c99a7872b3c4ce0a3795400069eab5d17283f2ed", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2017-11-19T18:35:20Z"},
{"Line": "=>798", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mBindPhotoHandler) != null) { mBindPhotoHandler.destroy(); mBindPhotoHandler = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1837/buggy-version/src.com.android.contacts.editor.ContactEditorFragment.java", "BodyUseAPI": [], "Fixed commit": "5f3034e8132521efee6f53258855fd67fe85d088", "Url": "https://api.github.com/repos/AOKP/packages_apps_Contacts", "Date": "2013-11-19T20:01:27Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(guestSP.contains(com.example.toshiba.airbnb.Profile.BecomeAHost.BasicQuestions.GuestFragment.TOTAL_BED))) edit.putString(com.example.toshiba.airbnb.Profile.BecomeAHost.BasicQuestions.GuestFragment.TOTAL_BED, tvTotalBedInput.getText().toString()).apply();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3935/buggy-version/app.src.main.java.com.example.toshiba.airbnb.Profile.BecomeAHost.BasicQuestions.GuestFragment.java", "BodyUseAPI": ["edit.putString(com.example.toshiba.airbnb.Profile.BecomeAHost.BasicQuestions.GuestFragment.TOTAL_BED, tvTotalBedInput.getText().toString()).apply()", "SharedPreferences.Editor.putString(java.lang.String,tvTotalBedInput.getText().toString())"], "Fixed commit": "f23e5e9e2c84e531c203c23ee6e0a28dea65f37f", "Url": "https://api.github.com/repos/mattfrancis888/Airbnb", "Date": "2017-09-04T05:13:33Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(guestSP.contains(com.example.toshiba.airbnb.Profile.BecomeAHost.BasicQuestions.GuestFragment.TOTAL_BED_ROOM))) edit.putString(com.example.toshiba.airbnb.Profile.BecomeAHost.BasicQuestions.GuestFragment.TOTAL_BED_ROOM, tvTotalBedRoomInput.getText().toString()).apply();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3935/buggy-version/app.src.main.java.com.example.toshiba.airbnb.Profile.BecomeAHost.BasicQuestions.GuestFragment.java", "BodyUseAPI": ["SharedPreferences.Editor.putString(java.lang.String,tvTotalBedRoomInput.getText().toString())", "edit.putString(com.example.toshiba.airbnb.Profile.BecomeAHost.BasicQuestions.GuestFragment.TOTAL_BED_ROOM, tvTotalBedRoomInput.getText().toString()).apply()"], "Fixed commit": "f23e5e9e2c84e531c203c23ee6e0a28dea65f37f", "Url": "https://api.github.com/repos/mattfrancis888/Airbnb", "Date": "2017-09-04T05:13:33Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(guestSP.contains(com.example.toshiba.airbnb.Profile.BecomeAHost.BasicQuestions.GuestFragment.TOTAL_GUEST))) edit.putString(com.example.toshiba.airbnb.Profile.BecomeAHost.BasicQuestions.GuestFragment.TOTAL_GUEST, tvTotalGuestInput.getText().toString()).apply();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3935/buggy-version/app.src.main.java.com.example.toshiba.airbnb.Profile.BecomeAHost.BasicQuestions.GuestFragment.java", "BodyUseAPI": ["edit.putString(com.example.toshiba.airbnb.Profile.BecomeAHost.BasicQuestions.GuestFragment.TOTAL_GUEST, tvTotalGuestInput.getText().toString()).apply()", "SharedPreferences.Editor.putString(java.lang.String,tvTotalGuestInput.getText().toString())"], "Fixed commit": "f23e5e9e2c84e531c203c23ee6e0a28dea65f37f", "Url": "https://api.github.com/repos/mattfrancis888/Airbnb", "Date": "2017-09-04T05:13:33Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(propertyTypeSP.contains(com.example.toshiba.airbnb.Profile.BecomeAHost.BasicQuestions.PropertyTypeFragment.PROPERTY_TYPE))) edit.putString(com.example.toshiba.airbnb.Profile.BecomeAHost.BasicQuestions.PropertyTypeFragment.PROPERTY_TYPE, tvTypeInput.getText().toString()).apply();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3935/buggy-version/app.src.main.java.com.example.toshiba.airbnb.Profile.BecomeAHost.BasicQuestions.PropertyTypeFragment.java", "BodyUseAPI": ["SharedPreferences.Editor.putString(java.lang.String,tvTypeInput.getText().toString())", "edit.putString(com.example.toshiba.airbnb.Profile.BecomeAHost.BasicQuestions.PropertyTypeFragment.PROPERTY_TYPE, tvTypeInput.getText().toString()).apply()"], "Fixed commit": "f23e5e9e2c84e531c203c23ee6e0a28dea65f37f", "Url": "https://api.github.com/repos/mattfrancis888/Airbnb", "Date": "2017-09-04T05:13:33Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(bathroomSP.contains(com.example.toshiba.airbnb.Profile.BecomeAHost.BasicQuestions.BathroomFragment.TOTAL_BATHROOM))) edit.putString(com.example.toshiba.airbnb.Profile.BecomeAHost.BasicQuestions.BathroomFragment.TOTAL_BATHROOM, tvTotalBathroomInput.getText().toString()).apply();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3935/buggy-version/app.src.main.java.com.example.toshiba.airbnb.Profile.BecomeAHost.BasicQuestions.BathroomFragment.java", "BodyUseAPI": ["SharedPreferences.Editor.putString(java.lang.String,tvTotalBathroomInput.getText().toString())", "edit.putString(com.example.toshiba.airbnb.Profile.BecomeAHost.BasicQuestions.BathroomFragment.TOTAL_BATHROOM, tvTotalBathroomInput.getText().toString()).apply()"], "Fixed commit": "f23e5e9e2c84e531c203c23ee6e0a28dea65f37f", "Url": "https://api.github.com/repos/mattfrancis888/Airbnb", "Date": "2017-09-04T05:13:33Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bathroomSP.getAll().isEmpty()) privateRadio.setChecked(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3935/buggy-version/app.src.main.java.com.example.toshiba.airbnb.Profile.BecomeAHost.BasicQuestions.BathroomFragment.java", "BodyUseAPI": [], "Fixed commit": "f23e5e9e2c84e531c203c23ee6e0a28dea65f37f", "Url": "https://api.github.com/repos/mattfrancis888/Airbnb", "Date": "2017-09-04T05:13:33Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ch.getAutorec().equals(\"true\")) { ch.setRecordable(\"true\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/685/buggy-version/src.com.lfv.lanzius.server.InfoRequestHandler.java", "BodyUseAPI": ["com.lfv.lanzius.server.InfoRequestHandler.Channel.setRecordable(java.lang.String)"], "Fixed commit": "813c6316fec01af6448d1d922194ff26ea7a907e", "Url": "https://api.github.com/repos/lfv-mssm/yada", "Date": "2015-08-13T09:30:08Z"},
{"Line": "=>547", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Expr.Binary.getOp()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (op == (Expr.BOp.ADD)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1587/buggy-version/src.wyscript.io.JavaScriptFileWriter.java", "BodyUseAPI": [], "Fixed commit": "733a05d737ecb83e9c8ad854f19fcb5deea2c60d", "Url": "https://api.github.com/repos/DanielJCampbell/Wyscript", "Date": "2014-01-29T04:28:55Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (str_ats != null) { k.getAttributesMap().put(str_ats, str_att); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4506/buggy-version/src.main.java.org.rapidprom.operators.padas.DataModelMM.java", "BodyUseAPI": ["k.getAttributesMap().put(java.lang.String,java.lang.String)"], "Fixed commit": "b2700b9cba50c9bf76419333e385375fa36a1dca", "Url": "https://api.github.com/repos/rapidprom/rapidprom-source", "Date": "2016-11-28T19:42:42Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((current) == null) { throw new java.lang.IllegalStateException(\"Attempting to move past end of range.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5344/buggy-version/javaparser-core.src.main.java.com.github.javaparser.TokenRange.java", "BodyUseAPI": [], "Fixed commit": "99f7bbcace002fae5fe18fc80db5dda2190ebbb3", "Url": "https://api.github.com/repos/javaparser/javaparser", "Date": "2017-09-23T23:58:12Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((current) == null) && (hasNext)) { throw new java.lang.IllegalStateException(\"End token is not linked to begin token.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5344/buggy-version/javaparser-core.src.main.java.com.github.javaparser.TokenRange.java", "BodyUseAPI": [], "Fixed commit": "99f7bbcace002fae5fe18fc80db5dda2190ebbb3", "Url": "https://api.github.com/repos/javaparser/javaparser", "Date": "2017-09-23T23:58:12Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((output.length()) > 3) output.delete(((output.length()) - 2), output.length());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1029/buggy-version/schedulr.src.main.java.core.preferences.Preferences.java", "BodyUseAPI": ["java.lang.StringBuilder.length()", "java.lang.StringBuilder.delete(int,int)", "java.lang.StringBuilder.length()"], "Fixed commit": "951c10b4cefff2a8dc6f15beb65a25ae189d8f1d", "Url": "https://api.github.com/repos/maxwell9999/kernels", "Date": "2017-03-09T06:40:11Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bimmr.mcinfected.Lobbys.Lobby.addIPlayer(org.bukkit.entity.Player)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((iPlayer.getZombieKit()) == null) iPlayer.setKit(Team.Zombie, iPlayer.chooseRandomKit(Team.Zombie));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5520/buggy-version/src.com.bimmr.mcinfected.Command.SubCommands.JoinCommand.java", "BodyUseAPI": ["com.bimmr.mcinfected.IPlayers.IPlayer.chooseRandomKit(Team.Zombie)", "com.bimmr.mcinfected.IPlayers.IPlayer.setKit(Team.Zombie,iPlayer.chooseRandomKit(Team.Zombie))"], "Fixed commit": "10c834e77ae9b3bea1cd8cd77889b6d68694b78f", "Url": "https://api.github.com/repos/Bimmr/McInfected", "Date": "2014-10-28T02:54:51Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bimmr.mcinfected.Lobbys.Lobby.addIPlayer(org.bukkit.entity.Player)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((iPlayer.getHumanKit()) == null) iPlayer.setKit(Team.Human, iPlayer.chooseRandomKit(Team.Human));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5520/buggy-version/src.com.bimmr.mcinfected.Command.SubCommands.JoinCommand.java", "BodyUseAPI": ["com.bimmr.mcinfected.IPlayers.IPlayer.chooseRandomKit(Team.Human)", "com.bimmr.mcinfected.IPlayers.IPlayer.setKit(Team.Human,iPlayer.chooseRandomKit(Team.Human))"], "Fixed commit": "10c834e77ae9b3bea1cd8cd77889b6d68694b78f", "Url": "https://api.github.com/repos/Bimmr/McInfected", "Date": "2014-10-28T02:54:51Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.rawQuery(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((loopCursor == null) || ((loopCursor.getCount()) == 0)) { for (java.lang.String s : selection) { java.lang.String[] parts = s.split(\":\"); java.lang.String ID = parts[0]; android.util.Log.d(\"Session table is empty\", \"Inserts poles\"); sessionDB.execSQL(((\"INSERT INTO sessionPole(poleId) VALUES (\" + ID) + \");\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2932/buggy-version/src.com.hig.prestigedevelopment.sprekigjovik.Maps.java", "BodyUseAPI": [], "Fixed commit": "d3987f736d8cac85defab35513460e3603490093", "Url": "https://api.github.com/repos/hakkepakke/sprekigjovik", "Date": "2013-12-11T17:05:05Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((prop.isReadOnly()) && (!(java.util.Collection.class.isAssignableFrom(prop.getType())))) && (!(org.rapidoid.var.Var.class.isAssignableFrom(prop.getType())))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/411/buggy-version/rapidoid-model.src.main.java.org.rapidoid.model.Models.java", "BodyUseAPI": [], "Fixed commit": "6688b7d29cab8aef41518f87dd254e10ae757d52", "Url": "https://api.github.com/repos/rapidoid/rapidoid", "Date": "2014-12-27T02:53:07Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState != null) { previouslyLoaded = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7865/buggy-version/app.src.main.java.com.allo.flickster.MovieActivity.java", "BodyUseAPI": [], "Fixed commit": "f6fcf70776d45752729883dcc2bdc19bfbd94489", "Url": "https://api.github.com/repos/allo86/Flickster", "Date": "2016-07-23T03:51:01Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.media.AudioManager.getStreamVolume(AudioManager.STREAM_MUSIC)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (currVolume <= 0) { currVolume = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8248/buggy-version/app.src.main.java.fatslayers.fatslayerrpg.MusicService.java", "BodyUseAPI": [], "Fixed commit": "5456f9a7570a5f76bf06455b358342c24f21aba0", "Url": "https://api.github.com/repos/gordineerandrew/FatSlayerRPG", "Date": "2017-08-06T21:00:05Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((operands.get(ctx.expr())) != null) { reg = getEmptyRegister(); saveToReg(operands.get(ctx.expr()), reg); }else if ((resultRegisters.get(ctx.expr())) != null) { reg = resultRegisters.get(ctx.expr()); }else if ((variables.get(ctx.expr())) != null) { reg = loadFromHeap(variables.get(ctx.expr())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1084/buggy-version/src.main.java.pp.finalproject.SprockelBuilder.java", "BodyUseAPI": ["GrammarParser.IfcompareContext.expr()", "org.antlr.v4.runtime.tree.ParseTreeProperty<pp.finalproject.Operand>.get(ctx.expr())", "org.antlr.v4.runtime.tree.ParseTreeProperty<java.lang.String>.get(ctx.expr())", "GrammarParser.IfcompareContext.expr()", "org.antlr.v4.runtime.tree.ParseTreeProperty<pp.finalproject.Reg>.get(ctx.expr())", "pp.finalproject.SprockelBuilder.loadFromHeap(variables.get(ctx.expr()))", "GrammarParser.IfcompareContext.expr()", "pp.finalproject.SprockelBuilder.saveToReg(operands.get(ctx.expr()),pp.finalproject.Reg)", "GrammarParser.IfcompareContext.expr()", "org.antlr.v4.runtime.tree.ParseTreeProperty<pp.finalproject.Reg>.get(ctx.expr())", "GrammarParser.IfcompareContext.expr()", "org.antlr.v4.runtime.tree.ParseTreeProperty<java.lang.String>.get(ctx.expr())"], "Fixed commit": "389a8b387bbebbdc5dc3254b7f279f1987ad1b12", "Url": "https://api.github.com/repos/michieltebraake/PP-Final-Project", "Date": "2015-07-06T08:45:43Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((operands.get(ctx.expr())) != null) { reg = getEmptyRegister(); saveToReg(operands.get(ctx.expr()), reg); }else if ((resultRegisters.get(ctx.expr())) != null) { reg = resultRegisters.get(ctx.expr()); }else if ((variables.get(ctx.expr())) != null) { reg = loadFromHeap(variables.get(ctx.expr())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1084/buggy-version/src.main.java.pp.finalproject.SprockelBuilder.java", "BodyUseAPI": ["org.antlr.v4.runtime.tree.ParseTreeProperty<java.lang.String>.get(ctx.expr())", "org.antlr.v4.runtime.tree.ParseTreeProperty<pp.finalproject.Operand>.get(ctx.expr())", "pp.finalproject.SprockelBuilder.saveToReg(operands.get(ctx.expr()),pp.finalproject.Reg)", "GrammarParser.WhilecompareContext.expr()", "GrammarParser.WhilecompareContext.expr()", "pp.finalproject.SprockelBuilder.loadFromHeap(variables.get(ctx.expr()))", "org.antlr.v4.runtime.tree.ParseTreeProperty<pp.finalproject.Reg>.get(ctx.expr())", "org.antlr.v4.runtime.tree.ParseTreeProperty<pp.finalproject.Reg>.get(ctx.expr())", "GrammarParser.WhilecompareContext.expr()", "GrammarParser.WhilecompareContext.expr()", "GrammarParser.WhilecompareContext.expr()", "org.antlr.v4.runtime.tree.ParseTreeProperty<java.lang.String>.get(ctx.expr())"], "Fixed commit": "389a8b387bbebbdc5dc3254b7f279f1987ad1b12", "Url": "https://api.github.com/repos/michieltebraake/PP-Final-Project", "Date": "2015-07-06T08:45:43Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.logger.isInfoEnabled()) { this.logger.info((((\"Schema \" + (schema.getName())) + \" registered with id \") + schema)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4237/buggy-version/spring-cloud-stream-schema.src.main.java.org.springframework.cloud.stream.schema.avro.AvroSchemaMessageConverter.java", "BodyUseAPI": ["this.logger.info((((\"Schema \" + (schema.getName())) + \" registered with id \") + schema))"], "Fixed commit": "25a73c95286650986648d1fd687fe69415369838", "Url": "https://api.github.com/repos/viniciusccarvalho/spring-cloud-stream", "Date": "2016-07-28T16:29:36Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.contact) != null) { this.contact.setUuid(this.uuid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/9095/buggy-version/maohifx.contact.src.main.java.com.maohi.software.maohifx.contact.bean.Customer.java", "BodyUseAPI": [], "Fixed commit": "0a68ebd5e231e72e05d080f40850b58e719f2943", "Url": "https://api.github.com/repos/Heifara/maohifx", "Date": "2015-12-18T02:22:05Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(versionRange)) technology.setVersionRange(versionRange);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1445/buggy-version/services.src.main.java.org.jboss.windup.web.services.service.TechnologyService.java", "BodyUseAPI": ["org.jboss.windup.web.services.model.Technology.setVersionRange(java.lang.String)"], "Fixed commit": "39665f1d1d17af327dc80b41957ef7188b5d47a9", "Url": "https://api.github.com/repos/windup/windup-web", "Date": "2016-11-16T21:40:21Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["train.getTimeIntervalList().get(int)", "net.parostroj.timetable.gui.views.TimeInterval.isFreight()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((interval.isFreight()) != originalIsFreight) { firstRow = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6540/buggy-version/grafikon-gui.src.main.java.net.parostroj.timetable.gui.views.TrainTableModel.java", "BodyUseAPI": [], "Fixed commit": "4c7be3c9654255c44c7a75c1aa5c30bfebe4bbd6", "Url": "https://api.github.com/repos/jub77/grafikon", "Date": "2016-10-12T20:55:31Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dataSnapshot.child(\"seen\").exists()) showNotifications(dataSnapshot.child(\"friend_name\").getValue().toString(), \"went to supermarket\", dataSnapshot.child(\"list_ref\").getValue().toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/729/buggy-version/app.src.main.java.com.hkapps.shoppie.NotificationListener.java", "BodyUseAPI": ["dataSnapshot.child(\"friend_name\").getValue().toString()", "dataSnapshot.child(\"list_ref\").getValue()", "com.hkapps.shoppie.NotificationListener.1.showNotifications(dataSnapshot.child(\"friend_name\").getValue().toString(),java.lang.String,dataSnapshot.child(\"list_ref\").getValue().toString())", "com.google.firebase.database.DataSnapshot.child(java.lang.String)", "dataSnapshot.child(\"friend_name\").getValue()", "dataSnapshot.child(\"list_ref\").getValue().toString()", "com.google.firebase.database.DataSnapshot.child(java.lang.String)"], "Fixed commit": "00f3d77a60b06d9d83ef396fe9bb26ea94b4b5e5", "Url": "https://api.github.com/repos/hksapp/Shoppie", "Date": "2017-03-19T17:28:07Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mika.task.consoledownloader.TokenBucket.getTokensLeft()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tokensLeft <= 0) { return read; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3439/buggy-version/src.main.java.com.mika.task.consoledownloader.LimitedByteChannel.java", "BodyUseAPI": [], "Fixed commit": "ce4b3169ed4f88d844e00642489f66965e72994e", "Url": "https://api.github.com/repos/gushinetsmv/ConsoleDownloader", "Date": "2014-09-12T12:38:59Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((values[idx]) != null) newValues[idx] = values[idx].toString(); else newValues[idx] = \"<null>\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3441/buggy-version/src.main.java.net.chandol.logjdbc.logging.collector.resultset.ResultSetData.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "f838b6057535b921ebb342c7ba59d3279c774d8c", "Url": "https://api.github.com/repos/JAVACAFE-STUDY/logjdbc", "Date": "2016-08-09T04:40:18Z"},
{"Line": "=>571", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.wso2.andes.kernel.AndesKernelBoot.isKernelShuttingDown())) { org.wso2.carbon.andes.authorization.andes.AndesAuthorizationHandler.removeQueueRoleCreateForLoggedInUser(newQName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2886/buggy-version/components.andes.org.wso2.carbon.andes.authorization.src.main.java.org.wso2.carbon.andes.authorization.andes.AndesAuthorizationHandler.java", "BodyUseAPI": [], "Fixed commit": "99a774e8537b5ace842ea736cc7b7404cd21b893", "Url": "https://api.github.com/repos/indikasampath2000/carbon-business-messaging", "Date": "2015-05-29T05:10:11Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(selectedSpeaker.getPhoto()))) { if (isNetworkConnected()) { com.squareup.picasso.Picasso.with(this).load(android.net.Uri.parse(selectedSpeaker.getPhoto())).into(((android.widget.ImageView) (findViewById(R.id.speaker_image))), new com.squareup.picasso.Callback() { @java.lang.Override public void onSuccess() { progressBar.setVisibility(View.GONE); } @java.lang.Override public void onError() { progressBar.setVisibility(View.GONE); } }); }else progressBar.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8606/buggy-version/android.app.src.main.java.org.fossasia.openevent.activities.SpeakerDetailsActivity.java", "BodyUseAPI": ["org.fossasia.openevent.data.Speaker.getPhoto()", "android.net.Uri.parse(selectedSpeaker.getPhoto())", "com.squareup.picasso.Picasso.with(this).load(android.net.Uri.parse(selectedSpeaker.getPhoto()))", "com.squareup.picasso.Picasso.with(this).load(android.net.Uri.parse(selectedSpeaker.getPhoto())).into(((android.widget.ImageView) (findViewById(R.id.speaker_image))),com.squareup.picasso.Callback)"], "Fixed commit": "7e7e7dcaffe26060efa0e16f5db4e16053ac1c9a", "Url": "https://api.github.com/repos/harshitagupta30/open-event-android", "Date": "2017-01-21T11:07:28Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (l == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2330/buggy-version/src.main.java.com.yogpc.fb.sa.MavenWrapper.java", "BodyUseAPI": [], "Fixed commit": "00a907ef08ffcc1dcd70c9f00b00364984d5aef4", "Url": "https://api.github.com/repos/yogpstop/ForgeBuilder", "Date": "2014-11-01T16:53:28Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (packaging == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2346/buggy-version/sword-server.src.main.java.edu.unc.lib.dl.cdr.sword.server.managers.ServiceDocumentManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "e594a016ad1de5b9a8b6c991ce77f36d5c9593f2", "Url": "https://api.github.com/repos/UNC-Libraries/Carolina-Digital-Repository", "Date": "2017-07-29T00:22:48Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entry.getKey()) == null) fieldName = org.springframework.cloud.stream.app.pmml.processor.PmmlProcessorConfiguration.DEFAULT_OUTPUT_FIELD; else fieldName = entry.getKey().getValue();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7685/buggy-version/processor.spring-cloud-starter-stream-processor-pmml.src.main.java.org.springframework.cloud.stream.app.pmml.processor.PmmlProcessorConfiguration.java", "BodyUseAPI": ["entry.getKey().getValue()", "java.util.Map.Entry<org.dmg.pmml.FieldName, ?>.getKey()"], "Fixed commit": "12016187e934aa83e7bdf959c1269b3488e9b1d0", "Url": "https://api.github.com/repos/melofred/spring-cloud-stream-app-starters", "Date": "2016-06-02T04:53:54Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["method.getAnnotations().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (methodAnnot != null) { org.teavm.jso.plugin.AnnotationValue redefinedMethodName = methodAnnot.getValue(\"value\"); if (redefinedMethodName != null) { name = redefinedMethodName.getString(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4436/buggy-version/teavm-jso.src.main.java.org.teavm.jso.plugin.JavascriptNativeProcessor.java", "BodyUseAPI": ["org.teavm.jso.plugin.AnnotationReader.getValue(java.lang.String)"], "Fixed commit": "da0220bb5b8c4a0f561fc6d18a18884d8eada679", "Url": "https://api.github.com/repos/giko/teavm", "Date": "2014-11-03T17:48:17Z"},
{"Line": "=>582", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((id.lastIndexOf(\".\")) == (-1)) { id = id + \".czi\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5669/buggy-version/components.formats-gpl.src.loci.formats.in.ZeissCZIReader.java", "BodyUseAPI": [], "Fixed commit": "87fd80e88b5ef57686b6034c14ce0d3d091badea", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2017-08-09T00:01:51Z"},
{"Line": "=>1480", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(f.exists())) { id = id.substring(0, id.lastIndexOf('.')); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5669/buggy-version/components.formats-gpl.src.loci.formats.in.ZeissCZIReader.java", "BodyUseAPI": [], "Fixed commit": "87fd80e88b5ef57686b6034c14ce0d3d091badea", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2017-08-09T00:01:51Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.neverwinterdp.scribengin.event.ScribenginEvent.getNodeEvent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((nodeEvent.getType()) == (NodeEvent.Type.DELETE)) { }else { java.lang.System.err.println((((\"unhandle assigned dataflow task event: \" + (nodeEvent.getPath())) + \" - \") + (nodeEvent.getType()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5395/buggy-version/V2.core.src.main.java.com.neverwinterdp.scribengin.dataflow.service.AssignedDataflowTaskListener.java", "BodyUseAPI": ["java.io.PrintStream.println((((\"unhandle assigned dataflow task event: \" + (nodeEvent.getPath())) + \" - \") + (nodeEvent.getType())))", "com.neverwinterdp.registry.event.NodeEvent.getType()", "com.neverwinterdp.registry.event.NodeEvent.getPath()"], "Fixed commit": "487bd4f27ca24d6d7ceef704cf796ea7729483eb", "Url": "https://api.github.com/repos/DemandCube/Scribengin", "Date": "2015-03-19T07:19:36Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((defaultValue != null) && (defaultValue instanceof java.lang.String)) { boundingBoxData.setDefaultValue(((java.lang.String) (defaultValue))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/742/buggy-version/bundles.wps.wps-service.src.main.java.org.orbisgis.wpsservice.controller.parser.BoundingBoxParser.java", "BodyUseAPI": [], "Fixed commit": "3b9e73b473b180adea87eaf29bb7754cb6ebabdd", "Url": "https://api.github.com/repos/orbisgis/orbisgis", "Date": "2017-03-15T12:33:58Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((obj instanceof org.apache.http.HttpRequest) || (obj instanceof org.apache.http.HttpResponse)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2571/buggy-version/src.main.java.com.ksyun.ks3.utils.StringUtils.java", "BodyUseAPI": [], "Fixed commit": "6de5f357369b70b88b869ef5f107cd27425aded6", "Url": "https://api.github.com/repos/ks3sdk/ks3-java-sdk", "Date": "2015-10-20T09:54:08Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Math.abs((deltaAngle - 360))) < maxDegrees) { return this.rotate((deltaAngle - 360)); }else if ((deltaAngle >= 0) && (deltaAngle <= 180)) { return this.rotate(maxDegrees); }else { return this.rotate((-maxDegrees)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6958/buggy-version/src.airplane.g2.Vector.java", "BodyUseAPI": ["airplane.g2.Vector.rotate(double)", "airplane.g2.Vector.rotate(double)", "airplane.g2.Vector.rotate(double)"], "Fixed commit": "d022c388b72e69d1dfe85c318a472975d8f3dbd7", "Url": "https://api.github.com/repos/sraper/Airplanes", "Date": "2013-11-21T15:32:47Z"},
{"Line": "=>652", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((victim.equals(get_state().get_tank())) && (get_state().get_MyBotTanks().contains(hunter))) { if ((victim.getDamages()) != (BattleCity_independent_code.Tank.getArmorPlayerTank())) { victim.setDamages(((victim.getDamages()) - 2)); bullet.setLive(false); } return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1553/buggy-version/core.src.BattleCity_independent_code.Logic.java", "BodyUseAPI": ["BattleCity_independent_code.Tank.getDamages()", "BattleCity_independent_code.Tank.setDamages(((victim.getDamages()) - 2))", "BattleCity_independent_code.Tank.getDamages()"], "Fixed commit": "49ae55652e2a9b315dfba8c20a7c4e7e36100de1", "Url": "https://api.github.com/repos/KuznetsovPavel/Tanks", "Date": "2016-09-17T19:52:46Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count == 1) { hit(tank, bullet, _state.get_tank()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1553/buggy-version/core.src.BattleCity_independent_code.Logic.java", "BodyUseAPI": [], "Fixed commit": "49ae55652e2a9b315dfba8c20a7c4e7e36100de1", "Url": "https://api.github.com/repos/KuznetsovPavel/Tanks", "Date": "2016-09-17T19:52:46Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (subBuilders.isEmpty()) { sb = inheritedSub; }else { sb = com.google.common.collect.Iterables.concat(inheritedSub, subBuilders.values()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6234/buggy-version/opendaylight.md-sal.sal-inmemory-datastore.src.main.java.org.opendaylight.controller.md.sal.dom.store.impl.ResolveDataChangeState.java", "BodyUseAPI": ["com.google.common.collect.Iterables.concat(java.lang.Iterable<org.opendaylight.controller.md.sal.dom.store.impl.DOMImmutableDataChangeEvent.Builder>,subBuilders.values())", "java.util.Map<org.opendaylight.controller.md.sal.dom.store.impl.DataChangeListenerRegistration<?>, org.opendaylight.controller.md.sal.dom.store.impl.DOMImmutableDataChangeEvent.Builder>.values()"], "Fixed commit": "015d108b0d4fb2d12e9badb42a446e57572f4f32", "Url": "https://api.github.com/repos/opendaylight/controller", "Date": "2014-09-09T07:12:46Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((def.expression) == null) def.expression = \"{ PrimaryCriteria: {} }\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7091/buggy-version/src.main.java.org.ohdsi.webapi.service.CohortDefinitionService.java", "BodyUseAPI": [], "Fixed commit": "d7b6ef9757b09b89fa2bebdffa4574d97b9aad66", "Url": "https://api.github.com/repos/regenstrief/WebAPI", "Date": "2015-03-16T14:24:59Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((progressBar) != null) { statusBar.addView(progressBar); }else { statusBar.addView(createBackToLocation(new net.osmand.plus.views.mapwidgets.MapInfoWidgetsFactory(net.osmand.plus.views.MapInfoLayer.scaleCoefficient))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3880/buggy-version/OsmAnd.src.net.osmand.plus.views.MapInfoLayer.java", "BodyUseAPI": [], "Fixed commit": "845f1e00b0e54dc720ed8bf08449a03d4f7291df", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2014-06-09T21:14:48Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.whosbean.qpush.gateway.keeper.ClientKeeper.count(product.getKey())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (total > 0) { doSinglePush(); doBroadcastPush(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8589/buggy-version/Gateway.src.main.java.com.whosbean.qpush.gateway.dispatch.Dispatcher.java", "BodyUseAPI": [], "Fixed commit": "02750ecc4266609ae7a9cc0f03e3cafd37f32f04", "Url": "https://api.github.com/repos/yamingd/QPush", "Date": "2014-08-12T08:38:36Z"},
{"Line": "=>627", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((op) == (org.apache.ignite.internal.processors.cache.GridCacheOperation.TRANSFORM)) val = org.apache.ignite.internal.processors.cache.EntryProcessorResourceInjectorProxy.wrap(cctx.kernalContext(), ((javax.cache.processor.EntryProcessor) (val)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2180/buggy-version/modules.core.src.main.java.org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicSingleUpdateFuture.java", "BodyUseAPI": [], "Fixed commit": "0b69f1404949faab42834f93e3f362ee70c325cc", "Url": "https://api.github.com/repos/gridgain/apache-ignite", "Date": "2016-08-11T18:16:56Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((today.getMonth()) + 1) < 10) { date.append(\"0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2646/buggy-version/src.main.java.DataBuilder.java", "BodyUseAPI": [], "Fixed commit": "916c2f13c9bdd8b46f947bd377fab1df89c97c56", "Url": "https://api.github.com/repos/riegelG/Currency", "Date": "2017-12-01T00:05:39Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((today.getDate()) < 10) { date.append(\"0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2646/buggy-version/src.main.java.DataBuilder.java", "BodyUseAPI": [], "Fixed commit": "916c2f13c9bdd8b46f947bd377fab1df89c97c56", "Url": "https://api.github.com/repos/riegelG/Currency", "Date": "2017-12-01T00:05:39Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.eclipse.jface.dialogs.MessageDialog.openConfirm(null, com.hangum.tadpole.commons.libs.core.message.CommonMessages.get().Confirm, com.hangum.tadpole.commons.admin.core.Messages.get().NewUserDialog_33)) { try { com.hangum.tadpole.engine.initialize.AddDefaultSampleDBToUser.addUserDefaultDB(userDao.getSeq(), userDao.getEmail()); } catch (java.lang.Exception e) { com.hangum.tadpole.commons.admin.core.dialogs.users.NewUserDialog.logger.error(\"Sample db copy error\", e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/408/buggy-version/com.hangum.tadpole.commons.admin.core.src.com.hangum.tadpole.commons.admin.core.dialogs.users.NewUserDialog.java", "BodyUseAPI": [], "Fixed commit": "c4aaf2fd5156408f40afb2d7ffa3b988dd74260b", "Url": "https://api.github.com/repos/hangum/TadpoleForDBTools", "Date": "2016-10-06T21:02:39Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.rawQuery(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((result.getCount()) == 0) return \"true\"; else { return result.getString(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/9007/buggy-version/app.src.main.java.com.example.android.dat_running_app.FreeRunDBHelper.java", "BodyUseAPI": ["android.database.Cursor.getString(int)"], "Fixed commit": "8620a23ecdea4badbbb78023b90cc37b4be4f43c", "Url": "https://api.github.com/repos/BenVizena/Dat_Running_App", "Date": "2016-09-26T03:44:33Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((conditions.size()) > 0) { list = dao.queryForFieldValues(conditions); }else { list = dao.queryForAll(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/507/buggy-version/src.com.mao.db.DBHelper.java", "BodyUseAPI": ["com.j256.ormlite.dao.Dao<T, java.lang.String>.queryForFieldValues(java.util.Map<java.lang.String, java.lang.Object>)"], "Fixed commit": "b3c9b443d311176445144205dbe737899baa3374", "Url": "https://api.github.com/repos/dolpphins/TravelServer", "Date": "2016-11-21T05:17:42Z"},
{"Line": "=>415", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ir.intermediateCode.TAInstructions.getOp2()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((destination.getOffset()) > 0) && ((destination.getOffset()) <= 6)) { ir.codeGeneration.CodeGenerator.pw.println((((\"movss \" + (value.toAsmCode())) + \", %xmm\") + (java.lang.Integer.toString(ir.codeGeneration.CodeGenerator.pushFloat)))); (ir.codeGeneration.CodeGenerator.pushFloat)++; }else { ir.codeGeneration.CodeGenerator.pw.println(\"sub $4, %rsp\"); ir.codeGeneration.CodeGenerator.pw.println(((\"movss \" + (value.toAsmCode())) + \" ,%xmm0\")); ir.codeGeneration.CodeGenerator.pw.println(\"movss %xmm0, (%rsp)\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7774/buggy-version/src.compilador.ir.codeGeneration.CodeGenerator.java", "BodyUseAPI": [], "Fixed commit": "3cc3e25b3d2e2fce5f31c826533f1ff475434d91", "Url": "https://api.github.com/repos/mpolitano/compilador", "Date": "2014-11-13T00:54:23Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (vData != null) { send = ((org.deviceconnect.android.deviceplugin.irkit.service.VirtualService) (getService())).sendIR(vData.getIr(), response); }else { org.deviceconnect.android.message.MessageUtils.setInvalidRequestParameterError(response, \"IR is not registered for that request\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5855/buggy-version/dConnectDevicePlugin.dConnectDeviceIRKit.app.src.main.java.org.deviceconnect.android.deviceplugin.irkit.profile.IRKitTVProfile.java", "BodyUseAPI": ["((org.deviceconnect.android.deviceplugin.irkit.service.VirtualService) (getService())).sendIR(vData.getIr(),android.content.Intent)", "org.deviceconnect.android.deviceplugin.irkit.data.VirtualProfileData.getIr()"], "Fixed commit": "a57e3ca109b95510707aa9bd4f1029cfb4c90be1", "Url": "https://api.github.com/repos/TakayukiHoshi1984/DeviceConnect-Android", "Date": "2017-01-10T08:31:10Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.develnext.jphp.core.compiler.jvm.statement.expr.value.ClosureValueCompiler.getLocalVariable(param.getName().getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (local == null) expr.writePushNull(); else expr.writeVarLoad(local);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7407/buggy-version/jphp-core.src.org.develnext.jphp.core.compiler.jvm.statement.expr.value.ClosureValueCompiler.java", "BodyUseAPI": ["org.develnext.jphp.core.compiler.jvm.statement.expr.value.ClosureValueCompiler.writeVarLoad(org.develnext.jphp.core.compiler.jvm.misc.LocalVariable)"], "Fixed commit": "088c21941cd6b9757245eec076de0ea6d5751e5a", "Url": "https://api.github.com/repos/POPSuL/jphp", "Date": "2014-05-28T06:14:34Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useAjax) { net.bootsfaces.component.ajax.AJAXRenderer.generateBootsFacesAJAXAndJavaScript(context, ((javax.faces.component.behavior.ClientBehaviorHolder) (navlink)), rw); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5926/buggy-version/src.main.java.net.bootsfaces.component.navLink.NavLinkRenderer.java", "BodyUseAPI": [], "Fixed commit": "50f5716761d11f848db3fcdcfad52314888622c5", "Url": "https://api.github.com/repos/TheCoder4eu/BootsFaces-OSP", "Date": "2016-10-20T18:59:55Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (viewIdsToProcess != null) this.channelsToProcess = spim.fiji.spimdata.SpimData2.getAllChannelsSorted(spimData, viewIdsToProcess); else this.channelsToProcess = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4490/buggy-version/src.main.java.spim.fiji.plugin.interestpointdetection.DifferenceOf.java", "BodyUseAPI": [], "Fixed commit": "1799718b5ff61c5e3a7bfe32cd757fbff92f904f", "Url": "https://api.github.com/repos/fiji/SPIM_Registration", "Date": "2015-03-18T17:34:58Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mGameMax) == (knaps.hacker.school.networking.Constants.INVALID_MIN)) { mGameMax = o.getCount(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1692/buggy-version/HackerSchool.src.main.java.knaps.hacker.school.GuessThatHSActivity.java", "BodyUseAPI": [], "Fixed commit": "16dab56c82d097480a1e3859e66ba844e4e0e84a", "Url": "https://api.github.com/repos/niftynei/HSFacesAndroid", "Date": "2013-09-20T12:37:30Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS) { spec.replaceAll(\"^/+\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7876/buggy-version/sdks.java.core.src.main.java.org.apache.beam.sdk.io.LocalFileSystem.java", "BodyUseAPI": [], "Fixed commit": "cfe6497900ab252e3f95440c1e791234f088c76f", "Url": "https://api.github.com/repos/flaviocf/beam", "Date": "2017-07-06T23:06:11Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (numberStr.isEmpty()) { return \"Zero\"; }else { numberStr = (numberStr.substring(0, 1).toUpperCase()) + (numberStr.substring(1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4919/buggy-version/src.org.lsong.converter.NumberBuilder.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.toUpperCase()", "java.lang.String.substring(int)"], "Fixed commit": "4452ba6da58b29a813bddac0f91fc59587a87a55", "Url": "https://api.github.com/repos/lornasong/number-to-words", "Date": "2014-11-25T20:43:59Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t < 0) t += 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4793/buggy-version/src.main.java.project.mis.group8.phase1.ConvertColors.java", "BodyUseAPI": [], "Fixed commit": "1cc7d7adab931a83b6de65c5ec7e26385e1729a5", "Url": "https://api.github.com/repos/mahtejo/cse408-project", "Date": "2015-09-23T09:01:44Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (innerJsonObject.getJSONArray(temp2).getString(i).split(\":\")[1].equalsIgnoreCase(input)) { if ((count != 0) && (i == ((innerJsonObject.getJSONArray(temp2).length()) - 1))) { java.lang.System.out.println(\"Thank you for playing the game\"); java.lang.System.exit(0); }else { continue; } }else if (count == 0) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3025/buggy-version/animalGame.src.animalGame.ParentJson.java", "BodyUseAPI": ["org.json.JSONObject.getJSONArray(java.lang.String)", "innerJsonObject.getJSONArray(temp2).length()"], "Fixed commit": "1f486d157516623476b8a0d1d72a177ff2ddd108", "Url": "https://api.github.com/repos/pratik12/animalGame", "Date": "2015-02-24T20:20:21Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (reader.isBigWigFile()) initMinMax();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8405/buggy-version/src.org.broad.igv.bigwig.BigWigDataSource.java", "BodyUseAPI": [], "Fixed commit": "81aec4f6654e6df1791e82aeeb6a8a0e7ec27d06", "Url": "https://api.github.com/repos/broadinstitute/IGV", "Date": "2014-08-11T03:50:05Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (var == null) { throw new org.exist.xquery.XPathException(new org.exist.extensions.exquery.restxq.impl.adapters.EXQueryErrorCode(org.exquery.restxq.RestXqErrorCodes.RQDY0101), getLine(), getColumn()); }else { return var.getValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2040/buggy-version/extensions.exquery.restxq.src.main.java.org.exist.extensions.exquery.restxq.impl.xquery.UriFunctions.java", "BodyUseAPI": ["org.exist.xquery.Variable.getValue()"], "Fixed commit": "51ecbb7e69b27c6b9111a90ebdba064ac4841eaa", "Url": "https://api.github.com/repos/wolfgangmm/exist", "Date": "2013-08-21T09:32:18Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.graph.sql.OCommandExecutorSQLDeleteVertex.parseOptionalWord(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (word.equalsIgnoreCase(\"from\")) { final java.lang.StringBuilder q = new java.lang.StringBuilder(); final int newPos = com.orientechnologies.orient.core.serialization.serializer.OStringSerializerHelper.getEmbedded(parserText, parserGetCurrentPosition(), (-1), q); query = database.command(new com.orientechnologies.orient.core.sql.query.OSQLAsynchQuery<com.orientechnologies.orient.core.record.impl.ODocument>(q.toString(), this)); parserSetCurrentPosition(newPos); }else if (word.equals(com.orientechnologies.orient.graph.sql.KEYWORD_WHERE)) { if (clazz == null) clazz = database.getMetadata().getSchema().getClass(OrientVertexType.CLASS_NAME); where = ((parserGetCurrentPosition()) > (-1)) ? \" \" + (parserText.substring(parserGetPreviousPosition())) : \"\"; query = database.command(new com.orientechnologies.orient.core.sql.query.OSQLAsynchQuery<com.orientechnologies.orient.core.record.impl.ODocument>(((\"select from \" + (clazz.getName())) + where), this)); break; }else if ((word.length()) > 0) { clazz = database.getMetadata().getSchema().getClass(word); if (clazz == null) throw new com.orientechnologies.orient.core.sql.OCommandSQLParsingException(((\"Class '\" + word) + \" was not found\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4286/buggy-version/graphdb.src.main.java.com.orientechnologies.orient.graph.sql.OCommandExecutorSQLDeleteVertex.java", "BodyUseAPI": ["database.getMetadata().getSchema().getClass(java.lang.String)", "java.lang.String.equals(com.orientechnologies.orient.graph.sql.KEYWORD_WHERE)", "java.lang.String.length()"], "Fixed commit": "99af8fcf561bcea24d33f883da63456b85c5d79e", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-04-19T10:36:04Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.label) != null) { printStatus(\"Adding symbol for \", node); addMapping(node.label, node, map); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1856/buggy-version/Compiler.java.AppleCoreCompiler.Semantics.AttributionPass.java", "BodyUseAPI": ["AppleCoreCompiler.Semantics.AttributionPass.InsertDecl.addMapping(node.label,AppleCoreCompiler.Semantics.DataDecl,java.util.Map<java.lang.String, AppleCoreCompiler.AST.Node>)", "AppleCoreCompiler.Semantics.AttributionPass.InsertDecl.printStatus(java.lang.String,AppleCoreCompiler.Semantics.DataDecl)"], "Fixed commit": "88eead8731090b26cd29c3bee590a599d7098a7b", "Url": "https://api.github.com/repos/bocchino/AppleCore", "Date": "2011-12-15T06:25:59Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((last) == 0) { opacityState = (visible) ? 1 : 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5430/buggy-version/src.main.java.ru.ifmo.acm.backend.player.widgets.Widget.java", "BodyUseAPI": [], "Fixed commit": "a3f3258a40e516fb76a52cca0eeed3b043065cf6", "Url": "https://api.github.com/repos/Aksenov239/icpc-live-v2", "Date": "2015-12-11T18:55:31Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (run_count < 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/763/buggy-version/src.main.java.com.workplacesystems.queuj.occurrence.FiniteOccurrence.java", "BodyUseAPI": [], "Fixed commit": "ff4c635602bc16dc44c447149da377ead7324154", "Url": "https://api.github.com/repos/workplacesystems/queuj", "Date": "2015-10-08T02:12:00Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastRiddle) != null) { assets.load(lastRiddle.imagePath, com.badlogic.gdx.graphics.Texture.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4514/buggy-version/core.src.fi.tamk.tiko.kivimiesgaming.RoomData.java", "BodyUseAPI": [], "Fixed commit": "c67ad4bd0bad44bd6bf7fe37348779708d345f3d", "Url": "https://api.github.com/repos/Infinitz/VapriikkiEscape", "Date": "2017-04-25T06:31:19Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastRiddle) != null) { assets.unload(lastRiddle.imagePath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4514/buggy-version/core.src.fi.tamk.tiko.kivimiesgaming.RoomData.java", "BodyUseAPI": [], "Fixed commit": "c67ad4bd0bad44bd6bf7fe37348779708d345f3d", "Url": "https://api.github.com/repos/Infinitz/VapriikkiEscape", "Date": "2017-04-25T06:31:19Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.nio.file.Files.isDirectory(path)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7386/buggy-version/src.main.java.potaufeu.LineMatcherFactory.java", "BodyUseAPI": [], "Fixed commit": "310d288961380be9327761bc18efb1b9c1a88632", "Url": "https://api.github.com/repos/argius/potaufeu", "Date": "2017-08-16T12:50:04Z"},
{"Line": "=>679", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.xml.parsers.DocumentBuilder.newDocument()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((selectedTemplate.getItems(doc).get(0).getTagName().equals(\"item\")) && (((templateId) == 5) || ((templateId) == 7))) { android.widget.Toast.makeText(this, \"Unable to perform action: Add Meta Details\", Toast.LENGTH_SHORT).show(); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2228/buggy-version/source-code.app.src.main.java.org.buildmlearn.toolkit.activity.TemplateEditor.java", "BodyUseAPI": [], "Fixed commit": "f71b06bb52b57c57813aedcd8096631bccb27c91", "Url": "https://api.github.com/repos/octacode/BuildmLearn-Toolkit-Android", "Date": "2016-12-10T20:35:05Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (tmpItem != null) { java.lang.System.out.println(tmpItem.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6502/buggy-version/Tracker.src.main.java.ru.napadovskiu.tracker.StartUI.java", "BodyUseAPI": ["java.io.PrintStream.println(tmpItem.toString())", "ru.napadovskiu.tracker.Item.toString()"], "Fixed commit": "9d806493411e43e4745a4ceaa198650b15501f04", "Url": "https://api.github.com/repos/bessovistnyj/jvm-byte-code", "Date": "2016-09-28T18:48:45Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((worldObj.getWorldTime()) % (net.minecraft.src.core_LogisticsPipes.LOGISTICS_DETECTION_FREQUENCY)) == (_delayOffset)) && ((getRouter()) instanceof net.minecraft.src.buildcraft.krapht.routing.Router)) ((net.minecraft.src.buildcraft.krapht.routing.Router) (getRouter())).reloadPipe(worldObj, xCoord, yCoord, zCoord);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/9040/buggy-version/common.net.minecraft.src.buildcraft.krapht.CoreRoutedPipe.java", "BodyUseAPI": ["net.minecraft.src.buildcraft.krapht.routing.IRouter.reloadPipe(net.minecraft.src.buildcraft.krapht.CoreRoutedPipe,net.minecraft.src.buildcraft.krapht.CoreRoutedPipe,net.minecraft.src.buildcraft.krapht.CoreRoutedPipe,net.minecraft.src.buildcraft.krapht.CoreRoutedPipe)"], "Fixed commit": "36c7fc0bab51eb7349d33c7674a987ad9ebf0450", "Url": "https://api.github.com/repos/mistaqur/LogisticsPipes", "Date": "2012-08-07T16:40:51Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (fields[0].equals(\"PRO\")) fields[0] = \"TPR\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3635/buggy-version/RamachandranLibrary.java", "BodyUseAPI": [], "Fixed commit": "1a8bd8c7ab8f90eee21840bfbc4d14ab6da31d57", "Url": "https://api.github.com/repos/ameller1994/rotamer_reader", "Date": "2014-03-30T06:00:36Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (fields[2].equals(\"PRO\")) fields[2] = \"TPR\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3635/buggy-version/RamachandranLibrary.java", "BodyUseAPI": [], "Fixed commit": "1a8bd8c7ab8f90eee21840bfbc4d14ab6da31d57", "Url": "https://api.github.com/repos/ameller1994/rotamer_reader", "Date": "2014-03-30T06:00:36Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((j - 1) >= 0) { if (board[i][(j - 1)].isWalkway()) adjacencyList.add(board[i][(j - 1)]); else if ((board[i][(j - 1)].isDoorway()) && ((board[i][(j - 1)].getDoorDirection()) == (DoorDirection.RIGHT))) adjacencyList.add(board[i][(j - 1)]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4452/buggy-version/src.clueGame.Board.java", "BodyUseAPI": ["board[i][(j - 1)].isDoorway()", "board[i][(j - 1)].isWalkway()", "java.util.LinkedList<clueGame.BoardCell>.add(board[i][(j - 1)])", "board[i][(j - 1)].getDoorDirection()", "java.util.LinkedList<clueGame.BoardCell>.add(board[i][(j - 1)])"], "Fixed commit": "cffe95f12f621ae2f4b3a593480c0e79f771d8cb", "Url": "https://api.github.com/repos/ratchet1179/Clue", "Date": "2016-03-20T22:35:27Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i + 1) < (numRows)) { if (board[(i + 1)][j].isWalkway()) adjacencyList.add(board[(i + 1)][j]); else if ((board[(i + 1)][j].isDoorway()) && ((board[(i + 1)][j].getDoorDirection()) == (DoorDirection.UP))) adjacencyList.add(board[(i + 1)][j]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4452/buggy-version/src.clueGame.Board.java", "BodyUseAPI": ["board[(i + 1)][j].isDoorway()", "board[(i + 1)][j].getDoorDirection()", "java.util.LinkedList<clueGame.BoardCell>.add(board[(i + 1)][j])", "board[(i + 1)][j].isWalkway()", "java.util.LinkedList<clueGame.BoardCell>.add(board[(i + 1)][j])"], "Fixed commit": "cffe95f12f621ae2f4b3a593480c0e79f771d8cb", "Url": "https://api.github.com/repos/ratchet1179/Clue", "Date": "2016-03-20T22:35:27Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(\"addAsset\".equals(getActivity().getIntent().getStringExtra(\"action\")))) { fireBugEquipment = ((com.ets.gd.Activities.FireBug.ViewInformation.ViewAssetInformationActivity) (getActivity())).getEquipment(); realmSyncGetResponseDTO = com.ets.gd.DataManager.DataManager.getInstance().getSyncGetResponseDTO(fireBugEquipment.getCustomer().getID()); }else { realmSyncGetResponseDTO = com.ets.gd.DataManager.DataManager.getInstance().getSyncGetResponseDTO(sharedPreferencesManager.getInt(SharedPreferencesManager.AFTER_SYNC_CUSTOMER_ID)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5007/buggy-version/app.src.main.java.com.ets.gd.Fragments.AssetInformationFragment.java", "BodyUseAPI": [], "Fixed commit": "c1c2b95b7b9567546156da2bc89d7682215f5cb5", "Url": "https://api.github.com/repos/hassan-akhtar/GD", "Date": "2017-04-20T07:04:08Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(\"addAsset\".equals(getActivity().getIntent().getStringExtra(\"action\")))) { fireBugEquipment = ((com.ets.gd.Activities.FireBug.ViewInformation.ViewAssetInformationActivity) (getActivity())).getEquipment(); realmSyncGetResponseDTO = com.ets.gd.DataManager.DataManager.getInstance().getSyncGetResponseDTO(fireBugEquipment.getCustomer().getID()); }else { realmSyncGetResponseDTO = com.ets.gd.DataManager.DataManager.getInstance().getSyncGetResponseDTO(sharedPreferencesManager.getInt(SharedPreferencesManager.AFTER_SYNC_CUSTOMER_ID)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5007/buggy-version/app.src.main.java.com.ets.gd.Fragments.AssetLocationFragment.java", "BodyUseAPI": [], "Fixed commit": "c1c2b95b7b9567546156da2bc89d7682215f5cb5", "Url": "https://api.github.com/repos/hassan-akhtar/GD", "Date": "2017-04-20T07:04:08Z"},
{"Line": "=>440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((jobToken.get()) == (-1)) { throw new java.io.IOException(\"Invalid job token\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7908/buggy-version/hadoop-mapreduce-project.hadoop-mapreduce-client.hadoop-mapreduce-client-app.src.main.java.org.apache.hadoop.mapred.TaskAttemptListenerImpl.java", "BodyUseAPI": [], "Fixed commit": "885d2d7f052538af0a1f853c9597a609f073b863", "Url": "https://api.github.com/repos/sandy197/Phadoop-2.2.0-src", "Date": "2014-06-20T22:57:17Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["caller.getPackageName().replace(char,char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(packageName.isEmpty())) { packageName += \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1693/buggy-version/compiler.src.main.java.org.robovm.compiler.plugin.lambda2.LambdaClassGenerator.java", "BodyUseAPI": [], "Fixed commit": "a953d4f30d44bd79a72abe2fc664316490247afc", "Url": "https://api.github.com/repos/badlogic/robovm", "Date": "2015-07-09T02:08:12Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((reader.peek()) == (android.util.JsonToken.STRING)) { error[i] = reader.nextString(); }else { reader.skipValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6026/buggy-version/src.com.btmura.android.reddit.net.ResponseParser.java", "BodyUseAPI": ["android.util.JsonReader.skipValue()", "android.util.JsonReader.nextString()"], "Fixed commit": "3f7a48141674a7c20aaef82c18cd31fda9554bf9", "Url": "https://api.github.com/repos/btmura/rbb", "Date": "2012-11-12T05:53:15Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(cursor.getColumnIndex(SqliteHelpers.NUMBER_COLUMN))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (numbers == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7292/buggy-version/app.src.main.java.com.byteshaft.callnote.IncomingCallListener.java", "BodyUseAPI": [], "Fixed commit": "2faab4a8077c467ede00e1ec869f8f78c6cea5dc", "Url": "https://api.github.com/repos/imranhakeem/call-note", "Date": "2015-06-22T12:50:10Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((newickFile.getValue()) != null) { node = new nl.tudelft.dnainator.parser.TreeParser(getNewickFile()).parse(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8399/buggy-version/dnainator-javafx.src.main.java.nl.tudelft.dnainator.javafx.services.GraphLoadService.java", "BodyUseAPI": [], "Fixed commit": "a0a87fd285e7dbbcf5d6436a68fdc30cfd0c8f12", "Url": "https://api.github.com/repos/gfokkema/dnainator", "Date": "2015-06-16T19:17:27Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (beanClass != null) { configureFromAnnotations(beanClass); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1753/buggy-version/src.main.java.com.univocity.parsers.common.CommonParserSettings.java", "BodyUseAPI": ["com.univocity.parsers.common.CommonParserSettings<F>.configureFromAnnotations(java.lang.Class<?>)"], "Fixed commit": "8fc5b890404ac4a8a03e21a23263e829dd904eb1", "Url": "https://api.github.com/repos/mosoft521/univocity-parsers", "Date": "2017-03-22T10:05:04Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((processor) instanceof com.univocity.parsers.common.AbstractBeanProcessor<?, ?>) { beanClass = ((com.univocity.parsers.common.AbstractBeanProcessor<?, ?>) (processor)).getBeanClass(); }else if ((processor) instanceof com.univocity.parsers.common.AbstractMultiBeanProcessor<?>) { java.lang.Class[] classes = ((com.univocity.parsers.common.AbstractMultiBeanProcessor<?>) (processor)).getBeanClasses(); for (java.lang.Class c : classes) { if ((com.univocity.parsers.common.AnnotationHelper.findHeadersAnnotation(c)) != null) { beanClass = c; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1753/buggy-version/src.main.java.com.univocity.parsers.common.CommonParserSettings.java", "BodyUseAPI": [], "Fixed commit": "8fc5b890404ac4a8a03e21a23263e829dd904eb1", "Url": "https://api.github.com/repos/mosoft521/univocity-parsers", "Date": "2017-03-22T10:05:04Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((javax.swing.tree.DefaultMutableTreeNode) (value)).getUserObject()) instanceof org.magic.api.beans.MagicEdition) { setIcon(new javax.swing.ImageIcon(back.getScaledInstance(15, 15, java.awt.Image.SCALE_DEFAULT))); }else if (isLeaf) { org.magic.api.beans.MagicCard mc = ((org.magic.api.beans.MagicCard) (((javax.swing.tree.DefaultMutableTreeNode) (value)).getUserObject())); { setIcon(new javax.swing.ImageIcon(pane.getManaSymbol(\"{C}\").getScaledInstance(15, 15, java.awt.Image.SCALE_DEFAULT))); } if ((mc.getColorIdentity().size()) == 1) { setIcon(new javax.swing.ImageIcon(pane.getManaSymbol(mc.getColorIdentity().get(0)).getScaledInstance(15, 15, java.awt.Image.SCALE_DEFAULT))); } if ((mc.getColorIdentity().size()) > 1) { setIcon(new javax.swing.ImageIcon(gold.getScaledInstance(15, 15, java.awt.Image.SCALE_DEFAULT))); } if (mc.getFullType().toLowerCase().contains(\"artifact\")) { setIcon(new javax.swing.ImageIcon(pane.getManaSymbol(\"{X}\").getScaledInstance(15, 15, java.awt.Image.SCALE_DEFAULT))); } if (mc.getFullType().toLowerCase().contains(\"land\")) { setIcon(new javax.swing.ImageIcon(uncolor.getScaledInstance(15, 15, java.awt.Image.SCALE_DEFAULT))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4213/buggy-version/src.org.magic.gui.renderer.MagicCollectionTreeCellRenderer.java", "BodyUseAPI": ["java.lang.Object.getUserObject()"], "Fixed commit": "7e4a6653219e137dde0128abf3ac121ad74e208e", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2016-03-22T16:47:24Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((result.size()) == 1) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6922/buggy-version/src.xjlm.domFunctions.DOM_Algorithms.java", "BodyUseAPI": [], "Fixed commit": "64d9cf79546339b50c72dfc2805917cc124673c3", "Url": "https://api.github.com/repos/marcusljx/GML_Model_Repair", "Date": "2016-02-20T06:40:14Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<org.dom4j.Element>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(result.contains(e.getParent()))) { result.set(i, e.getParent()); }else { result.remove(i); i--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6922/buggy-version/src.xjlm.domFunctions.DOM_Algorithms.java", "BodyUseAPI": ["java.util.ArrayList<org.dom4j.Element>.set(int,e.getParent())", "java.util.ArrayList<org.dom4j.Element>.remove(int)", "org.dom4j.Element.getParent()"], "Fixed commit": "64d9cf79546339b50c72dfc2805917cc124673c3", "Url": "https://api.github.com/repos/marcusljx/GML_Model_Repair", "Date": "2016-02-20T06:40:14Z"},
{"Line": "=>364", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(redirectPath.endsWith(\"/\"))) { redirectPath += \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7590/buggy-version/src.main.java.de.metalcon.middleware.controller.entity.EntityController.java", "BodyUseAPI": [], "Fixed commit": "8b0f6d3d09e2fe770402f3eb9e6016e1376f0f8d", "Url": "https://api.github.com/repos/Metalcon/middleware", "Date": "2014-03-18T15:16:24Z"},
{"Line": "=>421", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data == null) { com.microsoft.Malmo.MalmoMod.safeSendToAll(malmoMessage); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4944/buggy-version/Minecraft.src.main.java.com.microsoft.Malmo.MalmoMod.java", "BodyUseAPI": [], "Fixed commit": "dbe59e45c6be5c65093fce76bfa1b5c0178cf34d", "Url": "https://api.github.com/repos/Microsoft/malmo", "Date": "2016-12-14T14:03:55Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((valueArray.length) == 1) { java.lang.String[] valueArray2 = ((java.lang.String) (value)).split(\",\"); if ((valueArray2.length) > 1) { try { java.lang.Integer.parseInt(valueArray2[0]); valueArray = valueArray2; } catch (java.lang.Exception e) { } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/158/buggy-version/modules.uipage.src.main.java.org.shaolin.uimaster.page.ajax.MultiChoice.java", "BodyUseAPI": [], "Fixed commit": "b6f2aa49bf82dbebc1ee7e0040e26144aa3c7573", "Url": "https://api.github.com/repos/shaolinwu/uimaster", "Date": "2016-03-17T16:04:15Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hub.sam.dmx.DblIdentificationScheme.getContainerObjectOfType(hub.sam.dbl.IdExpr,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (ext != null) { addPlainNames(namedElementId.getName(), context, allIds); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7109/buggy-version/dev-plugins.hub.sam.dmx.src.hub.sam.dmx.DblIdentificationScheme.java", "BodyUseAPI": [], "Fixed commit": "096fad723ade96e4b65baa2cb3e3e765a21ed39d", "Url": "https://api.github.com/repos/ablunk/dmx", "Date": "2014-06-13T17:20:08Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((me.libraryaddict.Hungergames.Types.HungergamesApi.getConfigManager().displayScoreboards()) && (me.libraryaddict.Hungergames.Types.HungergamesApi.getConfigManager().isInvisSpectators())) { if (((player.getScoreboard()) != null) && ((player.getScoreboard().getTeam(\"Spectators\")) != null)) player.getScoreboard().getTeam(\"Spectators\").removePlayer(getPlayer()); player.removePotionEffect(PotionEffectType.INVISIBILITY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/9077/buggy-version/src.me.libraryaddict.Hungergames.Types.Gamer.java", "BodyUseAPI": [], "Fixed commit": "a53768ceffab233c38e2447ca46e7452ab3c36a4", "Url": "https://api.github.com/repos/libraryaddict/LibsHungergames", "Date": "2013-08-18T14:44:09Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.edu.utdallas.argus.cometnav.dataservices.emergencies.EmergencyClient.getEmergenciesMap()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (newEmergenciesList.isEmpty()) { emergencyList.clear(); android.util.Log.d(com.edu.utdallas.argus.cometnav.dataservices.emergencies.EmergencyService.TAG, \"No more emergencies. Clear the list.\"); allEmergenciesCleared = true; }else { for (com.edu.utdallas.argus.cometnav.dataservices.emergencies.Emergency newEmergency : newEmergenciesList) { boolean newEmergencyFlag = true; if (!(emergencyList.contains(newEmergency))) { for (int i = 0; i < (emergencyList.size()); i++) { if ((newEmergency.getEmergencyId()) == (emergencyList.get(i).getEmergencyId())) { android.util.Log.d(com.edu.utdallas.argus.cometnav.dataservices.emergencies.EmergencyService.TAG, (((\"Replacing emergency with updated emergency. New Emergency: \" + (newEmergency.toString())) + \" ::: Orig Emergency: \") + (emergencyList.get(i).toString()))); tmpList.add(newEmergency); emergencyList.remove(i); emergencyList.add(newEmergency); newEmergencyFlag = false; } } if (newEmergencyFlag) { tmpList.add(newEmergency); emergencyList.add(newEmergency); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7645/buggy-version/mobile.CometNav.app.src.main.java.com.edu.utdallas.argus.cometnav.dataservices.emergencies.EmergencyService.java", "BodyUseAPI": [], "Fixed commit": "7b99526b5181d950658b5ed878d9e28041af3b0d", "Url": "https://api.github.com/repos/gerrytucker78/emse_capstone_project", "Date": "2017-04-23T02:01:29Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (loadFromDB) { this.initializeDatanodeUuidToSidsMap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8851/buggy-version/hadoop-hdfs-project.hadoop-hdfs.src.main.java.io.hops.metadata.StorageMap.java", "BodyUseAPI": [], "Fixed commit": "a1a9b9eb8995b328d74bf813c36c79bc49ba770e", "Url": "https://api.github.com/repos/bcleenders/hops", "Date": "2016-03-08T11:24:08Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (loadFromDB) { initialize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8851/buggy-version/hadoop-hdfs-project.hadoop-hdfs.src.main.java.io.hops.metadata.StorageIdMap.java", "BodyUseAPI": [], "Fixed commit": "a1a9b9eb8995b328d74bf813c36c79bc49ba770e", "Url": "https://api.github.com/repos/bcleenders/hops", "Date": "2016-03-08T11:24:08Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<java.lang.String>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (tempSql == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5174/buggy-version/src.com.teradata.qaf.tset.utils.SQLWriter.java", "BodyUseAPI": [], "Fixed commit": "f6a3f290cd29bba49a3bc228a28d929e6a2437a7", "Url": "https://api.github.com/repos/kingzone/TSET_Java", "Date": "2013-03-08T06:48:47Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((subParts.length) != 2) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2075/buggy-version/dynjc.src.main.java.com.xafero.dynjc.core.EclipseCompiler.java", "BodyUseAPI": [], "Fixed commit": "21b9a95f3dae57af21c32a9098a3f0baf6b68581", "Url": "https://api.github.com/repos/xafero/dynjc", "Date": "2015-07-04T22:14:28Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.galeb.manager.repository.VirtualHostRepository.findOne(virtualHost.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (virtualHostExistent != null) { throw new io.galeb.manager.exceptions.ConflictException(\"Virtual Host already exists\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/9120/buggy-version/src.main.java.io.galeb.manager.handler.VirtualHostHandler.java", "BodyUseAPI": [], "Fixed commit": "6f166f62c5fcb3f9d3509c94a9fc62ec090e4a53", "Url": "https://api.github.com/repos/galeb/galeb-manager", "Date": "2017-11-07T14:52:57Z"},
{"Line": "=>2103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(JavaCore.SPACE.equals(settings.get(DefaultCodeFormatterConstants.FORMATTER_TAB_CHAR)))) this.tab_size = tabSize;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2518/buggy-version/org.eclipse.jdt.core.formatter.org.eclipse.jdt.internal.formatter.DefaultCodeFormatterOptions.java", "BodyUseAPI": [], "Fixed commit": "1e4bfb24b5853911ccf578ab5c655637f685bd6c", "Url": "https://api.github.com/repos/eclipse/eclipse.jdt.core", "Date": "2015-07-25T13:38:31Z"},
{"Line": "=>1331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (JavaCore.SPACE.equals(settings.get(DefaultCodeFormatterConstants.FORMATTER_TAB_CHAR))) this.tab_size = indentationSize;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2518/buggy-version/org.eclipse.jdt.core.formatter.org.eclipse.jdt.internal.formatter.DefaultCodeFormatterOptions.java", "BodyUseAPI": [], "Fixed commit": "1e4bfb24b5853911ccf578ab5c655637f685bd6c", "Url": "https://api.github.com/repos/eclipse/eclipse.jdt.core", "Date": "2015-07-25T13:38:31Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getMessage()) != null) ServerController.LOG.error(e.getMessage());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2525/buggy-version/src.com.miage.jirachi.rakechu.NetworkController.java", "BodyUseAPI": ["ServerController.LOG.error(java.lang.String)", "java.lang.InterruptedException.getMessage()"], "Fixed commit": "f6093b6fdf259cb78f282ceef45691f82727bd72", "Url": "https://api.github.com/repos/Jirachi/Rakechu", "Date": "2012-12-08T17:11:00Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(m_adeManager.isInitialized())) { m_adeManager.initialize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4194/buggy-version/src.org.opencms.main.OpenCmsCore.java", "BodyUseAPI": ["org.opencms.ade.configuration.CmsADEManager.initialize()"], "Fixed commit": "f312fa67750b14eddd306cf2b13b9d05bd1c1b93", "Url": "https://api.github.com/repos/alkacon/opencms-core", "Date": "2017-06-27T08:48:28Z"},
{"Line": "=>964", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(id.equals(org.sbolstandard.core2.URIcompliance.fixDisplayId(strSplit[1])))) { if ((strSplit[1].split(\"\\\\.\").length) > 1) { version = strSplit[1].split(\"\\\\.\")[((strSplit[1].split(\"\\\\.\").length) - 1)]; } java.lang.String vId = org.sbolstandard.core2.URIcompliance.fixDisplayId(strSplit[1].split(\"\\\\.\")[0]); if (!(id.equals(vId))) { throw new org.sbolstandard.core2.SBOLConversionException(\"Warning: id in version does not match id in accession\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7918/buggy-version/core2.src.main.java.org.sbolstandard.core2.GenBank.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "org.sbolstandard.core2.URIcompliance.fixDisplayId(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "649ec6abdd8feef2506068335973bae1f5ac4973", "Url": "https://api.github.com/repos/SynBioDex/libSBOLj", "Date": "2017-04-28T19:21:31Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sc.hasNextLine()) parseCommand(sc.nextLine()); else running = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3336/buggy-version/FamilyExplorer.src.FamilyExplorer.java", "BodyUseAPI": ["FamilyExplorer.parseCommand(java.lang.String)", "java.util.Scanner.nextLine()"], "Fixed commit": "7e86a14dffd1a5cdfec47d32cb4c089d8de177c5", "Url": "https://api.github.com/repos/PurdueCS190/lab6", "Date": "2014-11-03T06:14:56Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (idxFile == null) idxFile = \"attr.idx\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4607/buggy-version/src.Extractor.java", "BodyUseAPI": [], "Fixed commit": "07916bbfe9a371a72e203d4ad0afc7cdcd53d973", "Url": "https://api.github.com/repos/linzhp/CommitExtractor", "Date": "2011-08-01T21:44:09Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (dataFile == null) dataFile = \"output.libsvm\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4607/buggy-version/src.Extractor.java", "BodyUseAPI": [], "Fixed commit": "07916bbfe9a371a72e203d4ad0afc7cdcd53d973", "Url": "https://api.github.com/repos/linzhp/CommitExtractor", "Date": "2011-08-01T21:44:09Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (testingCheckbox.isChecked()) { android.widget.Toast.makeText(this, pair, Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3729/buggy-version/src.com.mnt.marketapp.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "19d77189823545ca2abd4418350827dd7b5fa68c", "Url": "https://api.github.com/repos/gorviligr/TradeApp", "Date": "2013-05-17T19:56:23Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Character.isWhitespace(a)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5479/buggy-version/src.Analysis.java", "BodyUseAPI": [], "Fixed commit": "8ccd61de3b0222ed865bbdaf9d0f6ffbc845c0b4", "Url": "https://api.github.com/repos/XSonicRU/SJAnalysing", "Date": "2016-12-25T07:09:42Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (tempListIps.contains(ipAddress)) { tempListIps.remove(tempListIps.indexOf(ipAddress)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8648/buggy-version/src.main.java.com.patchian.util.Matcher.java", "BodyUseAPI": ["java.util.List<java.lang.String>.remove(int)", "java.util.List<java.lang.String>.indexOf(java.lang.String)"], "Fixed commit": "755b6e719fb9e92c12488f0342bd69162b9930a0", "Url": "https://api.github.com/repos/mayhs/patch-player", "Date": "2016-02-21T07:40:34Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.ide.util.PropertiesComponent.getInstance().getValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (ret == null) ret = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6692/buggy-version/src.main.java.org.jaguar.dart.JaguarSettingsManager.java", "BodyUseAPI": [], "Fixed commit": "4e6ddc3ad6e15d9ffd2501a2214ae59ab11373fc", "Url": "https://api.github.com/repos/Jaguar-dart/jaguar_intellij_plugin", "Date": "2017-01-01T18:00:06Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((path.length()) != 0) { jagarExePathLbl.setText(path); }else { jagarExePathLbl.setText(\"Invalid!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6692/buggy-version/src.main.java.org.jaguar.dart.projectWizard.ProjectCreationStepGui.java", "BodyUseAPI": ["javax.swing.JLabel.setText(java.lang.String)"], "Fixed commit": "4e6ddc3ad6e15d9ffd2501a2214ae59ab11373fc", "Url": "https://api.github.com/repos/Jaguar-dart/jaguar_intellij_plugin", "Date": "2017-01-01T18:00:06Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.findViewById(R.id.leftCurrencyText)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (leftText.hasFocus()) { leftText.addTextChangedListener(currencyWatcherMap.get(leftText)); }else if (rightText.hasFocus()) { rightText.addTextChangedListener(currencyWatcherMap.get(rightText)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3887/buggy-version/app.src.main.java.com.example.fredrik.mobilelab.CurrencyConverterFragment.java", "BodyUseAPI": ["java.util.Map<android.widget.EditText, com.example.fredrik.mobilelab.CurrencyConverterFragment.CurrencyWatcher>.get(android.widget.EditText)", "android.widget.EditText.addTextChangedListener(currencyWatcherMap.get(leftText))"], "Fixed commit": "fc00c2ff602b8acc7ca3f6f7596f4fb04f6bf542", "Url": "https://api.github.com/repos/SwedFred/MobileLab", "Date": "2017-11-27T20:00:06Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((IP.equals(ip)) && (Port.equals(((app_kvServer.Listen.socket.getLocalPort()) + \"\")))) { logger.info(\"begin backup\"); backUp(ss[1], ss[2]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/854/buggy-version/src.app_kvServer.Listen.java", "BodyUseAPI": [], "Fixed commit": "8f3dc6aa016ee66bfc71e9cf5c5defecdcd2841e", "Url": "https://api.github.com/repos/shidh/CloudDataBases", "Date": "2015-01-08T10:09:59Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name == null) { throw new com.fredericboisguerin.insa.InvalidContactNameException(); }else if (name == \"\") { throw new com.fredericboisguerin.insa.InvalidContactNameException(); }else if ((email != null) && (!(email.matches(\"\\\\w+[@]\\\\w+[.]\\\\w\")))) { throw new com.fredericboisguerin.insa.InvalidEmailException(); }else { com.fredericboisguerin.insa.Contact newContact = new com.fredericboisguerin.insa.Contact(name, email, phoneNumber); listContact.add(newContact); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5419/buggy-version/src.main.java.com.fredericboisguerin.insa.ContactsManager.java", "BodyUseAPI": [], "Fixed commit": "d1089a5ddfdda699ee0320f2c26878c2f05672e2", "Url": "https://api.github.com/repos/lacarox/contacts-manager", "Date": "2017-11-16T11:12:47Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mGoodsAdapter.getCount()) != 0) { mCustomTitle.setVisibility(View.VISIBLE); ((android.widget.TextView) (mCustomTitle)).setText(((\"\u5df2\u9009\u4e2d\" + (mCount)) + \"\u9879\")); }else { mCustomTitle.setVisibility(View.INVISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5087/buggy-version/app.src.main.java.com.shopping.swb.shopping.activity.CollectActivity.java", "BodyUseAPI": [], "Fixed commit": "d92901ce226ce2136f47d1ba9743323a50f0f968", "Url": "https://api.github.com/repos/shewenbiao/Shopping", "Date": "2015-05-21T08:12:30Z"},
{"Line": "=>628", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.geni.aggregate.services.core.AggregateRspec.retrieveRspecInfo()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (rspecMap.containsKey(\"vlanResults\")) rspecMap.remove(\"vlanResults\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/9274/buggy-version/AggregateWS.src.net.geni.aggregate.services.core.AggregateRspecManager.java", "BodyUseAPI": ["java.util.HashMap.remove(java.lang.String)"], "Fixed commit": "5527c09dc4b56d5f4082eed801e4937eb5afaf7e", "Url": "https://api.github.com/repos/xi-yang/GENI-DCN-AM", "Date": "2015-06-05T19:34:16Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((videoId.length()) != 32) { try { int trackId = java.lang.Integer.parseInt(videoId); ru.rutube.RutubeAPI.models.Video video = new ru.rutube.RutubeAPI.models.Video(trackId, null); videoId = video.getVideoId(); } catch (java.lang.NumberFormatException ignored) { videoId = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2046/buggy-version/RutubeFeed.src.ru.rutube.RutubeFeed.ui.RelatedFeedFragment.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "eec984723434625233167e7ef5798da04e6bc81b", "Url": "https://api.github.com/repos/tumb1er/RutubeAppProject", "Date": "2013-12-30T07:59:24Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (videoId == null) { android.app.Activity activity = getActivity(); assert activity != null; android.net.Uri uri = activity.getIntent().getData(); assert uri != null; videoId = uri.getLastPathSegment(); if (ru.rutube.RutubeFeed.ui.RelatedFeedFragment.D) android.util.Log.d(ru.rutube.RutubeFeed.ui.RelatedFeedFragment.LOG_TAG, (\"VideoID last segment: \" + (java.lang.String.valueOf(videoId)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2046/buggy-version/RutubeFeed.src.ru.rutube.RutubeFeed.ui.RelatedFeedFragment.java", "BodyUseAPI": [], "Fixed commit": "eec984723434625233167e7ef5798da04e6bc81b", "Url": "https://api.github.com/repos/tumb1er/RutubeAppProject", "Date": "2013-12-30T07:59:24Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (products != null) mAdapter.replace(products);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5184/buggy-version/app.src.main.java.com.jsw.MngProductDatabase.Fragments.ListProduct_Fragment.java", "BodyUseAPI": ["com.jsw.MngProductDatabase.Adapter.ProductAdapter.replace(java.util.List<com.jsw.MngProductDatabase.Model.Product>)"], "Fixed commit": "d3a37ca23b205dcfd24843d1af14324b1310b246", "Url": "https://api.github.com/repos/JoseluGallardo/MngProductFragments", "Date": "2017-02-02T13:23:53Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mainChatInput.hasFocus()) { net.usikkert.kouchat.android.controller.ControllerUtils.scrollTextViewToBottom(mainChatView, mainChatScroll); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1086/buggy-version/kouchat-android-impl.src.main.java.net.usikkert.kouchat.android.controller.MainChatController.java", "BodyUseAPI": [], "Fixed commit": "9a3afaae60e97636497950590de8411fe3617ad1", "Url": "https://api.github.com/repos/blurpy/kouchat-android", "Date": "2013-07-23T09:26:18Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (privateChatInput.hasFocus()) { net.usikkert.kouchat.android.controller.ControllerUtils.scrollTextViewToBottom(privateChatView, privateChatScroll); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1086/buggy-version/kouchat-android-impl.src.main.java.net.usikkert.kouchat.android.controller.PrivateChatController.java", "BodyUseAPI": [], "Fixed commit": "9a3afaae60e97636497950590de8411fe3617ad1", "Url": "https://api.github.com/repos/blurpy/kouchat-android", "Date": "2013-07-23T09:26:18Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (input.contains(\"draw\")) { cardSymbol = adt.Card.Symbol.DRAW_TWO; }else if ((input.equals(\"wild\")) || (input.equals(\"w\"))) { cardSymbol = adt.Card.Symbol.WILD; }else { input = null; cardSymbol = null; java.lang.System.out.println(\"Invalid card symbol. Try again.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5943/buggy-version/src.uno.ConsoleInput.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "70e3a7df603825e69ef6efb63a3f5deec4046022", "Url": "https://api.github.com/repos/WitDataSctructures/CardGame", "Date": "2016-03-22T23:42:07Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shareActionProvider) != null) { android.content.Intent shareIntent = new android.content.Intent(android.content.Intent.ACTION_SEND); shareIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_DOCUMENT); shareIntent.setType(\"text/plain\"); shareIntent.putExtra(Intent.EXTRA_TEXT, ((getString(R.string.share_text)) + (bookTitle))); shareActionProvider.setShareIntent(shareIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/398/buggy-version/Alexandria.app.src.main.java.it.jaschke.alexandria.BookDetail.java", "BodyUseAPI": [], "Fixed commit": "4e080a149125148aa23e22d5a81335b851e63c4c", "Url": "https://api.github.com/repos/mhartvick/Alexandria_FootballScores", "Date": "2016-01-20T00:10:59Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isActive) { java.awt.event.ActionEvent event = new java.awt.event.ActionEvent(this, java.awt.event.ActionEvent.ACTION_PERFORMED, view.FieldTile.EXIT_EVENT); for (java.awt.event.ActionListener subscriber : this.actionListeners) { subscriber.actionPerformed(event); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3995/buggy-version/src.view.FieldTile.java", "BodyUseAPI": [], "Fixed commit": "43bef29adce8e4cb0acdad5716812396b3399a3f", "Url": "https://api.github.com/repos/sjlbos/SENG271-GroupProject", "Date": "2013-07-24T20:13:19Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["manager.RoomManager.deleteRoom(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (roomDeleted) { java.lang.System.out.println(((\"Room \" + rNumber) + \" has been deleted from database\")); }else { java.lang.System.out.println(\"Something wrong, room not deleted\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2557/buggy-version/src.sample.Main.java", "BodyUseAPI": [], "Fixed commit": "e790e4a7843756e018a22d5665c60f80f829de93", "Url": "https://api.github.com/repos/noorkhan58/Hotel-Reservation-Database", "Date": "2017-12-09T01:04:36Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.rockwellcollins.atc.agree.agree.NestedDotID.getBase()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (recStatement instanceof com.rockwellcollins.atc.agree.agree.RecordDefExpr) { return com.rockwellcollins.atc.agree.scoping.AgreeScopeProvider.getRecordComponents(recStatement); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8385/buggy-version/fm-workbench.agree.com.rockwellcollins.atc.agree.src.com.rockwellcollins.atc.agree.scoping.RecordExprScoper.java", "BodyUseAPI": ["com.rockwellcollins.atc.agree.scoping.AgreeScopeProvider.getRecordComponents(org.osate.aadl2.NamedElement)"], "Fixed commit": "fe1621391416e4812fadde921617f4eb7520f674", "Url": "https://api.github.com/repos/smaccm/smaccm", "Date": "2015-12-15T16:28:54Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) > 10) { alertDialog.getWindow().setBackgroundDrawableResource(android.R.color.transparent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3333/buggy-version/xcore.src.by.istin.android.xcore.ui.DialogBuilder.java", "BodyUseAPI": [], "Fixed commit": "4568507c4f8fe6fd5428b3ad8d6549133ad9e5dc", "Url": "https://api.github.com/repos/IstiN/android_xcore", "Date": "2013-07-30T17:25:09Z"},
{"Line": "=>1823", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((oppPony) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2812/buggy-version/gui.BattlePanel.java", "BodyUseAPI": [], "Fixed commit": "4d7a945de1bf70dc21bbb8bdef126c12b0d1c40c", "Url": "https://api.github.com/repos/silverweed/pokepon", "Date": "2014-09-20T15:12:08Z"},
{"Line": "=>1799", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((allyPony) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2812/buggy-version/gui.BattlePanel.java", "BodyUseAPI": [], "Fixed commit": "4d7a945de1bf70dc21bbb8bdef126c12b0d1c40c", "Url": "https://api.github.com/repos/silverweed/pokepon", "Date": "2014-09-20T15:12:08Z"},
{"Line": "=>1809", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((allyHPBar) != null) { allyHPBar.clearPseudoStatus(\"Taunt\"); allyHPBar.update(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2812/buggy-version/gui.BattlePanel.java", "BodyUseAPI": [], "Fixed commit": "4d7a945de1bf70dc21bbb8bdef126c12b0d1c40c", "Url": "https://api.github.com/repos/silverweed/pokepon", "Date": "2014-09-20T15:12:08Z"},
{"Line": "=>1824", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((oppHPBar) != null) { oppHPBar.clearPseudoStatus(\"Taunt\"); oppHPBar.update(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2812/buggy-version/gui.BattlePanel.java", "BodyUseAPI": [], "Fixed commit": "4d7a945de1bf70dc21bbb8bdef126c12b0d1c40c", "Url": "https://api.github.com/repos/silverweed/pokepon", "Date": "2014-09-20T15:12:08Z"},
{"Line": "=>778", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jdt.core.dom.Expression.resolveTypeBinding()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (typeBinding != null) { org.eclipse.iee.translator.antlr.translator.JavaTranslator.fVariableTypeString = rightSide.resolveTypeBinding().getName(); org.eclipse.iee.translator.antlr.translator.JavaTranslator.logger.debug((\"expr type: \" + (org.eclipse.iee.translator.antlr.translator.JavaTranslator.fVariableTypeString))); }else org.eclipse.iee.translator.antlr.translator.JavaTranslator.logger.debug(\"expr type: undefined variable\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/72/buggy-version/org.eclipse.iee.translator.antlr.src.org.eclipse.iee.translator.antlr.translator.JavaTranslator.java", "BodyUseAPI": [], "Fixed commit": "de5becc846a5ff28d5a82405e291729d9a36cec0", "Url": "https://api.github.com/repos/iee/iee", "Date": "2013-03-02T10:23:55Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["authzToken.getClaimsMap().get(Constants.USER_NAME)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (subject.startsWith(\"http://\")) { subject = subject.substring(6); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3640/buggy-version/airavata-api.airavata-api-server.src.main.java.org.apache.airavata.api.server.security.xacml.DefaultXACMLPEP.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "b311aa0ded9d4d4610691393bd23fab9b63cf1f5", "Url": "https://api.github.com/repos/apache/airavata", "Date": "2016-07-29T16:48:23Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.opencms.util.CmsStringUtil.isEmpty(getNewPwd())) { throw new org.opencms.main.CmsIllegalArgumentException(org.opencms.security.Messages.get().container(Messages.ERR_INVALID_NEWPWD_0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8422/buggy-version/src.org.opencms.security.CmsPasswordInfo.java", "BodyUseAPI": [], "Fixed commit": "bcbcc89947f3d1acdd62f9087a70d994a6e3470a", "Url": "https://api.github.com/repos/alkacon/opencms-core", "Date": "2012-11-30T16:44:25Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(Imports.GameAudio.audioSupported)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8930/buggy-version/Source.Imports.GameAudio.java", "BodyUseAPI": [], "Fixed commit": "15b674551b284482f6546324c07348fe06c29a0a", "Url": "https://api.github.com/repos/Williamxu98/WorldQuestOnline", "Date": "2017-01-12T04:06:28Z"},
{"Line": "=>442", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["column.getPlatformColumns().values()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (platformColumns != null) { for (org.jumpmind.db.model.PlatformColumn col : platformColumns) { if (col.getName().equals(DatabaseNamesConstants.ORACLE)) { return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5955/buggy-version/symmetric-db.src.main.java.org.jumpmind.db.io.DatabaseXmlUtil.java", "BodyUseAPI": [], "Fixed commit": "f9003f878d8caa1bb47de5cd9b8a6c9e4a713e53", "Url": "https://api.github.com/repos/JumpMind/symmetric-ds", "Date": "2017-11-01T18:02:25Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((entityName.indexOf(\"org\")) != (-1)) { entityName = entityName.substring(entityName.indexOf(\"org\")); }else if ((entityName.indexOf(\"com\")) != (-1)) { entityName = entityName.substring(entityName.indexOf(\"com\")); }else { org.shaolin.bmdp.runtime.entity.EntityManager.logger.error((\"Unsupported package rule of \" + entityName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2189/buggy-version/modules.runtime.src.main.java.org.shaolin.bmdp.runtime.entity.EntityManager.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.substring(int)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "3709dea188470660bc73212daf17320ef85bcaae", "Url": "https://api.github.com/repos/shaolinwu/uimaster", "Date": "2017-10-22T14:49:26Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.cubespace.geSuit.managers.HomesManager.getHome(net.cubespace.geSuit.objects.GSPlayer,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (home1.loc.getServer().getName().equals(loc.getServer().getName())) { home1.setLoc(loc); DatabaseManager.homes.updateHome(home1); net.cubespace.geSuit.managers.PlayerManager.sendMessageToTarget(player, ConfigManager.messages.HOME_UPDATED.replace(\"{home}\", home)); }else { net.cubespace.geSuit.managers.PlayerManager.sendMessageToTarget(player, ConfigManager.messages.HOME_EXISTS_OTHER_SERVER.replace(\"{home}\", home)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8710/buggy-version/src.main.java.net.cubespace.geSuit.managers.HomesManager.java", "BodyUseAPI": ["net.cubespace.geSuit.objects.Home.setLoc(net.cubespace.geSuit.objects.Location)", "DatabaseManager.homes.updateHome(net.cubespace.geSuit.objects.Home)"], "Fixed commit": "b47d0e01d853e41b45779e45ba88b952e3a1a6a9", "Url": "https://api.github.com/repos/Narimm/geSuit", "Date": "2015-09-08T12:29:05Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (content == null) { content = new byte[]{ }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6256/buggy-version/org.tuleap.mylyn.task.core.src.org.tuleap.mylyn.task.internal.core.repository.TuleapTaskAttachmentHandler.java", "BodyUseAPI": [], "Fixed commit": "285f32138f64aa494e0e77dc4b6d91858cbff100", "Url": "https://api.github.com/repos/sbegaudeau/mylyn.tasks", "Date": "2013-04-16T13:55:01Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["aux.getNodeTo().getGraphObject()", "org.reactome.web.diagram.data.layout.Node.getGraphObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (peF.getIdentifier().equals(peT.getIdentifier())) { for (org.reactome.web.diagram.data.layout.Node to : java.util.Arrays.asList(aux.getNodeFrom(), aux.getNodeTo())) { if (!(to.equals(node))) { org.reactome.web.diagram.client.StaticLink link = new org.reactome.web.diagram.client.StaticLink(node, to, aux.getId(), aux.getScore()); context.getInteractors().cache(currentResource, node, link); context.getInteractors().addInteractor(currentResource, link); } } }else { org.reactome.web.diagram.client.StaticLink link = new org.reactome.web.diagram.client.StaticLink(node, aux.getNodeTo(), aux.getId(), aux.getScore()); context.getInteractors().cache(currentResource, node, link); context.getInteractors().addInteractor(currentResource, link); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1259/buggy-version/src.main.java.org.reactome.web.diagram.client.InteractorsManager.java", "BodyUseAPI": [], "Fixed commit": "6592e8cf34291e03efc86804f3d138ab5f425fd8", "Url": "https://api.github.com/repos/reactome-pwp/diagram", "Date": "2016-02-06T20:25:04Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (readonly) { fieldTemplate.setDisplayerName(\"simpletext\"); }else { fieldTemplate.setDisplayerName(\"textarea\"); fieldTemplate.setMandatory(true); fieldTemplate.setReadOnly(readonly); fieldTemplate.addParameter(TextField.PARAM_MAXLENGTH, \"500\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4151/buggy-version/process-manager.process-manager-ejb.src.main.java.com.silverpeas.processManager.record.QuestionTemplate.java", "BodyUseAPI": ["com.silverpeas.form.record.GenericFieldTemplate.setReadOnly(boolean)"], "Fixed commit": "b99f20f0d2ec4968672bb4ffa15042d96d99905a", "Url": "https://api.github.com/repos/mmoqui/Silverpeas-Components", "Date": "2013-11-04T14:57:42Z"},
{"Line": "=>559", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"\".equals(data)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1591/buggy-version/src.main.java.suneido.database.server.DbmsRemote.java", "BodyUseAPI": [], "Fixed commit": "446f741ef7af63e07ea008d8c13e799504fae01e", "Url": "https://api.github.com/repos/leeeqian/jsuneido", "Date": "2015-04-02T16:01:46Z"},
{"Line": "=>2094", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (railo.commons.lang.StringUtil.isEmpty(writerType)) { if (scope.hasAttribute(\"cfml-writer\")) scope.removeAttribute(\"cfml-writer\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8951/buggy-version/railo-java.railo-core.src.railo.runtime.config.ConfigWebAdmin.java", "BodyUseAPI": [], "Fixed commit": "88f9507c4497919461a292696779e17dd411bcba", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2013-11-01T10:27:40Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((data.message.getClass().isArray()) == false) stream.writeLenOf(data.message);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/9227/buggy-version/src.se.kth.maandree.paradis.net.Packet.java", "BodyUseAPI": ["se.kth.maandree.paradis.net.TransferOutputStream.writeLenOf(java.lang.Object)"], "Fixed commit": "043855d52e4dde3a82d3a1211e1705af061c75ac", "Url": "https://api.github.com/repos/maandree/paradis", "Date": "2012-06-08T13:39:26Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["se.kth.maandree.paradis.net.TransferProtocolRegister.getClassByID(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((msgClass != null) && ((msgClass.isArray()) == false)) stream.readLen();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/9227/buggy-version/src.se.kth.maandree.paradis.net.Packet.java", "BodyUseAPI": [], "Fixed commit": "043855d52e4dde3a82d3a1211e1705af061c75ac", "Url": "https://api.github.com/repos/maandree/paradis", "Date": "2012-06-08T13:39:26Z"},
{"Line": "=>426", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.dandielo.core.items.serialize.ItemAttribute.init(net.dandielo.core.items.dItem,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (attribute != null) { attributes.remove(attribute); attributes.add(attribute); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4470/buggy-version/src.main.java.net.dandielo.core.items.dItem.java", "BodyUseAPI": ["java.util.Set<net.dandielo.core.items.serialize.ItemAttribute>.remove(net.dandielo.core.items.serialize.ItemAttribute)", "java.util.Set<net.dandielo.core.items.serialize.ItemAttribute>.add(net.dandielo.core.items.serialize.ItemAttribute)"], "Fixed commit": "6a8fd6345572e9f1438114dd9421dc0480a7237f", "Url": "https://api.github.com/repos/Dandielo/dtlCore", "Date": "2016-03-02T16:22:48Z"},
{"Line": "=>968", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.ui.ide.IDE.openEditorOnFileStore(org.eclipse.ui.IWorkbenchPage,org.eclipse.core.filesystem.IFileStore)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((editPart != null) && (org.eclipse.ui.ide.FileStoreEditorInput.class.isInstance(editPart.getEditorInput()))) { org.eclipse.ui.editors.text.IEncodingSupport encodingSupport = ((org.eclipse.ui.editors.text.IEncodingSupport) (editPart.getAdapter(org.eclipse.ui.editors.text.IEncodingSupport.class))); if (encodingSupport != null) { encodingSupport.setEncoding(com.alibaba.just.ui.util.PreferenceUtil.getFileCharset()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7447/buggy-version/com.alibaba.just.src.com.alibaba.just.ui.views.ModuleView.java", "BodyUseAPI": ["org.eclipse.ui.IEditorPart.getAdapter(java.lang.Class)"], "Fixed commit": "46c53249edfa38acf43e48f378bb1586e50a743d", "Url": "https://api.github.com/repos/bruce007lee/just-eclipse", "Date": "2014-02-25T06:43:04Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.ui.ide.IDE.openEditorOnFileStore(org.eclipse.ui.IWorkbenchPage,org.eclipse.core.filesystem.IFileStore)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((editPart != null) && (org.eclipse.ui.ide.FileStoreEditorInput.class.isInstance(editPart.getEditorInput()))) { org.eclipse.ui.editors.text.IEncodingSupport encodingSupport = ((org.eclipse.ui.editors.text.IEncodingSupport) (editPart.getAdapter(org.eclipse.ui.editors.text.IEncodingSupport.class))); if (encodingSupport != null) { encodingSupport.setEncoding(com.alibaba.just.ui.util.PreferenceUtil.getFileCharset()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7447/buggy-version/com.alibaba.just.src.com.alibaba.just.ui.dialogs.OpenModuleDialog.java", "BodyUseAPI": ["org.eclipse.ui.IEditorPart.getAdapter(java.lang.Class)"], "Fixed commit": "46c53249edfa38acf43e48f378bb1586e50a743d", "Url": "https://api.github.com/repos/bruce007lee/just-eclipse", "Date": "2014-02-25T06:43:04Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.util.SparseArray<java.util.List<java.util.List<com.sointeractive.getresults.app.pebble.responses.ResponseItem>>>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((observedPage) < ((oldRoom.size()) - 1)) { oldPage = oldRoom.get(observedPage); }else { oldPage = new java.util.LinkedList<com.sointeractive.getresults.app.pebble.responses.ResponseItem>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/30/buggy-version/app.src.main.java.com.sointeractive.getresults.app.pebble.cache.PeopleCache.java", "BodyUseAPI": ["java.util.List<java.util.List<com.sointeractive.getresults.app.pebble.responses.ResponseItem>>.get(int)"], "Fixed commit": "517de00170403b34e1bef8b18ad598cc94d968fb", "Url": "https://api.github.com/repos/isaacloud-getresults/mobile-android", "Date": "2014-08-27T11:26:28Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.sa.service.vipr.block.BlockStorageUtils.findExportsByName(java.lang.String,java.net.URI,java.net.URI)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((exportByName != null) && (com.emc.sa.service.vipr.block.BlockStorageUtils.isEmptyExport(exportByName))) { return exportByName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/749/buggy-version/vipr-portal.com.iwave.isa.content.src.java.com.emc.sa.service.vipr.block.ExportBlockVolumeHelper.java", "BodyUseAPI": [], "Fixed commit": "7a0e1a5e22cdf0f63f81d0e187b175cd1acd6d72", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2017-03-07T18:12:16Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.sa.service.vipr.block.BlockStorageUtils.findExportByCluster(com.emc.storageos.db.client.model.Cluster,java.net.URI,java.net.URI,volume.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (export == null) { com.emc.storageos.model.block.export.ExportGroupRestRep exportByName = com.emc.sa.service.vipr.block.BlockStorageUtils.findExportsByName(exportName, projectId, virtualArrayId); if ((exportByName != null) && (com.emc.sa.service.vipr.block.BlockStorageUtils.isEmptyExport(exportByName))) { export = exportByName; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/749/buggy-version/vipr-portal.com.iwave.isa.content.src.java.com.emc.sa.service.vipr.block.ExportBlockVolumeHelper.java", "BodyUseAPI": [], "Fixed commit": "7a0e1a5e22cdf0f63f81d0e187b175cd1acd6d72", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2017-03-07T18:12:16Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (startIndex >= (input.size())) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5772/buggy-version/src.main.java.name.kazennikov.annotations.patterns.RecursiveJapeAnnotator.java", "BodyUseAPI": [], "Fixed commit": "792ea154640bd30e499c10a67104716fee27924d", "Url": "https://api.github.com/repos/kzn/tokens", "Date": "2013-11-17T14:23:59Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index >= (input.size())) return index;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5772/buggy-version/src.main.java.name.kazennikov.annotations.patterns.RecursiveJapeAnnotator.java", "BodyUseAPI": [], "Fixed commit": "792ea154640bd30e499c10a67104716fee27924d", "Url": "https://api.github.com/repos/kzn/tokens", "Date": "2013-11-17T14:23:59Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tk.dcmmc.fundamentals.Exercises.BasicProgModel.rank(int,int[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (anyOffsetInA == (-1)) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8768/buggy-version/Algorithms.tk.dcmmc.fundamentals.Exercises.BasicProgModel.java", "BodyUseAPI": [], "Fixed commit": "c3f1ea114e347d8c195c5f3f236fce5073d1c957", "Url": "https://api.github.com/repos/DCMMC/Java-Algorithms-Learning", "Date": "2017-07-28T14:41:29Z"},
{"Line": "=>443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSize()) == 0) return \"\u6ca1\u6709\u4efb\u4f55\u5143\u7d20.\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8768/buggy-version/Algorithms.tk.dcmmc.fundamentals.Algorithms.DoubleLinkedList.java", "BodyUseAPI": [], "Fixed commit": "c3f1ea114e347d8c195c5f3f236fce5073d1c957", "Url": "https://api.github.com/repos/DCMMC/Java-Algorithms-Learning", "Date": "2017-07-28T14:41:29Z"},
{"Line": "=>2030", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getRGBChannelCount()) == 1) || ((getRGBChannelCount()) == (getSizeC()))) { if (((getSizeC()) > 1) && ((getSizeT()) > 1)) { ms.dimensionOrder += \"C\"; } for (java.lang.Long nBytes : bytes) { java.lang.String axis = bytesPerAxis.get(nBytes); if ((ms.dimensionOrder.indexOf(axis)) == (-1)) { ms.dimensionOrder += axis; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6029/buggy-version/components.formats-gpl.src.loci.formats.in.LIFReader.java", "BodyUseAPI": [], "Fixed commit": "75885a75c3cf2121a39ca67953432ac5b072c990", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-04-13T17:23:28Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (op.equals(\"end\")) { this.end = sample; if (this.end.isBefore(this.start)) this.start = this.end.plusMinutes((-duration)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4661/buggy-version/src.edu.stanford.nlp.sempre.interactive.actions.Event.java", "BodyUseAPI": [], "Fixed commit": "0d0db7c5ffba7cf3409fb1f8523103fb0f139043", "Url": "https://api.github.com/repos/NadavLidor/sempre", "Date": "2016-09-05T09:06:12Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (op.equals(\"end\")) { this.end = value.datetime; if (this.end.isBefore(this.start)) this.start = this.end.plusMinutes((-duration)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4661/buggy-version/src.edu.stanford.nlp.sempre.interactive.actions.Event.java", "BodyUseAPI": [], "Fixed commit": "0d0db7c5ffba7cf3409fb1f8523103fb0f139043", "Url": "https://api.github.com/repos/NadavLidor/sempre", "Date": "2016-09-05T09:06:12Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInBounds) { isValidOverwritten = (TicTacToe.board[TicTacToe.currentRow][TicTacToe.currentColumn]) == 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8760/buggy-version/src.TicTacToe.java", "BodyUseAPI": [], "Fixed commit": "f68fd1dcc1eddea60a491a78a72de45e0ba49236", "Url": "https://api.github.com/repos/salman-bhai/TicTacToe", "Date": "2016-10-15T18:45:08Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.smith_61.adventure.common.AdventureManager.getAdventurePlayer(sender.getName())", "me.smith_61.adventure.common.AdventurePlayer.getCurrentTeam()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((team.getLeader()) != player) { player.sendMessage(\"You are not the leader of your team.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2710/buggy-version/src.main.java.me.smith_61.adventure.bukkit.commands.CommandAdventure.java", "BodyUseAPI": ["me.smith_61.adventure.common.AdventurePlayer.sendMessage(java.lang.String)"], "Fixed commit": "3f00a6c76a37f8d7ca3912172ab225302828f176", "Url": "https://api.github.com/repos/smith61/AdventurePlugin", "Date": "2013-09-24T15:15:59Z"},
{"Line": "=>505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((m_equippedSword) != null) && ((m_equippedShield) != null)) && ((m_equippedHelmet) != null)) && ((m_equippedArmor) != null)) { return ((int) ((((((getAtk()) + (m_equippedSword.getBonusAtk())) + (m_equippedShield.getBonusAtk())) + (m_equippedHelmet.getBonusAtk())) + (m_equippedArmor.getBonusAtk())) * (getAtkModifier()))); }else { return getAtk(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6492/buggy-version/GenericRPG.src.ver0.Actor.java", "BodyUseAPI": [], "Fixed commit": "5a648ca114ef70826677fd2890277a6b576c8587", "Url": "https://api.github.com/repos/austinBailey5624/GenericRPGConsole", "Date": "2016-04-17T19:35:00Z"},
{"Line": "=>523", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((m_equippedSword) != null) && ((m_equippedShield) != null)) && ((m_equippedHelmet) != null)) && ((m_equippedArmor) != null)) { return ((int) ((((((getDef()) + (m_equippedSword.getBonusDef())) + (m_equippedShield.getBonusDef())) + (m_equippedHelmet.getBonusDef())) + (m_equippedArmor.getBonusDef())) * (getDefModifier()))); }else { return getDef(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6492/buggy-version/GenericRPG.src.ver0.Actor.java", "BodyUseAPI": [], "Fixed commit": "5a648ca114ef70826677fd2890277a6b576c8587", "Url": "https://api.github.com/repos/austinBailey5624/GenericRPGConsole", "Date": "2016-04-17T19:35:00Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((selected.getEquippedSword()) != null) { java.lang.System.out.println((((((\"Equipped Sword: \" + (selected.getEquippedSword().getName())) + \" bonus Attack: \") + (selected.getEquippedSword().getBonusAtk())) + \" bonus Defense: \") + (selected.getEquippedSword().getBonusDef()))); }else { java.lang.System.out.println(\"Equipped Sword: no sword\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6492/buggy-version/GenericRPG.src.ver0.Party.java", "BodyUseAPI": ["selected.getEquippedSword().getBonusDef()", "java.io.PrintStream.println((((((\"Equipped Sword:     \" + (selected.getEquippedSword().getName())) + \" bonus Attack: \") + (selected.getEquippedSword().getBonusAtk())) + \" bonus Defense: \") + (selected.getEquippedSword().getBonusDef())))", "ver0.PlayerActor.getEquippedSword()", "ver0.PlayerActor.getEquippedSword()", "selected.getEquippedSword().getName()", "selected.getEquippedSword().getBonusAtk()", "ver0.PlayerActor.getEquippedSword()"], "Fixed commit": "5a648ca114ef70826677fd2890277a6b576c8587", "Url": "https://api.github.com/repos/austinBailey5624/GenericRPGConsole", "Date": "2016-04-17T19:35:00Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((selected.getEquippedShield()) != null) { java.lang.System.out.println((((((\"Equipped Shield: \" + (selected.getEquippedShield().getName())) + \" bonus Atack: \") + (selected.getEquippedShield().getBonusAtk())) + \" bonus Defense: \") + (selected.getEquippedShield().getBonusDef()))); }else { java.lang.System.out.println(\"Equipped Shield: no shield\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6492/buggy-version/GenericRPG.src.ver0.Party.java", "BodyUseAPI": ["selected.getEquippedShield().getName()", "selected.getEquippedShield().getBonusDef()", "ver0.PlayerActor.getEquippedShield()", "ver0.PlayerActor.getEquippedShield()", "selected.getEquippedShield().getBonusAtk()", "java.io.PrintStream.println((((((\"Equipped Shield:    \" + (selected.getEquippedShield().getName())) + \" bonus Atack: \") + (selected.getEquippedShield().getBonusAtk())) + \" bonus Defense: \") + (selected.getEquippedShield().getBonusDef())))", "ver0.PlayerActor.getEquippedShield()"], "Fixed commit": "5a648ca114ef70826677fd2890277a6b576c8587", "Url": "https://api.github.com/repos/austinBailey5624/GenericRPGConsole", "Date": "2016-04-17T19:35:00Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((selected.getEquippedArmor()) != null) { java.lang.System.out.println((((((\"Equipped Armor: \" + (selected.getEquippedArmor().getName())) + \" bonus Attack: \") + (selected.getEquippedArmor().getBonusAtk())) + \" bonus Defense: \") + (selected.getEquippedArmor().getBonusDef()))); }else { java.lang.System.out.println(\"Equipped Armor: no armor\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6492/buggy-version/GenericRPG.src.ver0.Party.java", "BodyUseAPI": ["selected.getEquippedArmor().getBonusDef()", "java.io.PrintStream.println((((((\"Equipped Armor:     \" + (selected.getEquippedArmor().getName())) + \" bonus Attack: \") + (selected.getEquippedArmor().getBonusAtk())) + \" bonus Defense: \") + (selected.getEquippedArmor().getBonusDef())))", "selected.getEquippedArmor().getBonusAtk()", "selected.getEquippedArmor().getName()", "ver0.PlayerActor.getEquippedArmor()", "ver0.PlayerActor.getEquippedArmor()", "ver0.PlayerActor.getEquippedArmor()"], "Fixed commit": "5a648ca114ef70826677fd2890277a6b576c8587", "Url": "https://api.github.com/repos/austinBailey5624/GenericRPGConsole", "Date": "2016-04-17T19:35:00Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((selected.getEquippedHelmet()) != null) { java.lang.System.out.println((((((\"Equipped Helmet: \" + (selected.getEquippedHelmet().getName())) + \" bonus Attack: \") + (selected.getEquippedHelmet().getBonusAtk())) + \" bonus Defense: \") + (selected.getEquippedHelmet().getBonusDef()))); }else { java.lang.System.out.println(\"Equipped Helmet: no helmet\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6492/buggy-version/GenericRPG.src.ver0.Party.java", "BodyUseAPI": ["selected.getEquippedHelmet().getBonusDef()", "ver0.PlayerActor.getEquippedHelmet()", "selected.getEquippedHelmet().getName()", "ver0.PlayerActor.getEquippedHelmet()", "ver0.PlayerActor.getEquippedHelmet()", "java.io.PrintStream.println((((((\"Equipped Helmet:    \" + (selected.getEquippedHelmet().getName())) + \" bonus Attack: \") + (selected.getEquippedHelmet().getBonusAtk())) + \" bonus Defense: \") + (selected.getEquippedHelmet().getBonusDef())))", "selected.getEquippedHelmet().getBonusAtk()"], "Fixed commit": "5a648ca114ef70826677fd2890277a6b576c8587", "Url": "https://api.github.com/repos/austinBailey5624/GenericRPGConsole", "Date": "2016-04-17T19:35:00Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.micro.maintainance.task.service.CandidateMaintenanceLocalServiceUtil.getCandidateMaintenaceTask(candidateEntry.getCandidateEntryId(),long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (existingCandidateMaintenance == null) { com.liferay.micro.maintainance.task.model.CandidateMaintenance candidateMaintenance = com.liferay.micro.maintainance.task.service.CandidateMaintenanceLocalServiceUtil.addCandidateMaintenance(candidateEntry.getCandidateEntryId(), taskId); com.liferay.micro.maintainance.analysis.model.AnalysisEntry analysisEntry = com.liferay.micro.maintainance.analysis.service.AnalysisEntryLocalServiceUtil.addAnalysisEntry(userId, candidateMaintenance.getCandidateMaintenanceId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/133/buggy-version/modules.micro-maintainance-candidate.micro-maintainance-candidate-service.src.main.java.com.liferay.micro.maintainance.candidate.service.impl.CandidateEntryLocalServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "1de1a7bffa5303da03a910f3ea81e8ba9dc56f12", "Url": "https://api.github.com/repos/rimisaadouwork/OWXP", "Date": "2017-03-28T09:29:52Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.example.lord_tyler.meettoeat.SearchResultFragment.group) == null) { com.example.lord_tyler.meettoeat.SearchResultFragment.sendResultButton.setVisibility(View.INVISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4133/buggy-version/app.src.main.java.com.example.lord_tyler.meettoeat.SearchResultFragment.java", "BodyUseAPI": [], "Fixed commit": "00c6b5f057051943e0b09576c2b1cc53fa03b7c8", "Url": "https://api.github.com/repos/tylerscave/MeetToEat", "Date": "2015-11-30T17:35:40Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.facebook.Profile.getCurrentProfile()) != null) { name.setText((\"Bem vindo, \" + (com.facebook.Profile.getCurrentProfile().getFirstName()))); email.setText(\" \"); photo.setImageURI(com.facebook.Profile.getCurrentProfile().getProfilePictureUri(120, 120)); com.squareup.picasso.Picasso.with(this).load(com.facebook.Profile.getCurrentProfile().getProfilePictureUri(120, 120)).resize(120, 120).into(photo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3837/buggy-version/descarteaqui.app.src.main.java.com.descarteaqui.descarteaqui.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "0df63184f7bad1556afc40d76900a0f9164f1c4e", "Url": "https://api.github.com/repos/Gustavohqo/descarteaqui", "Date": "2016-09-21T22:34:46Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (actorType != (-1)) actorListener.onActorAction(new Actors.GenericActor(handler, actorType));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2198/buggy-version/src.Networking.ServerOffice.java", "BodyUseAPI": ["Simulation.ActorListener.onActorAction(Actors.GenericActor)"], "Fixed commit": "3787639cbb88516661fdf776a6b2698126411dfa", "Url": "https://api.github.com/repos/GaruSchool/Office-Simulation", "Date": "2014-12-05T12:57:49Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (balance < 0) java.lang.System.err.println(\"Negative balance. Creating empty bank account\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/840/buggy-version/src.mybankmachine.MyBankMachine.java", "BodyUseAPI": [], "Fixed commit": "090c7546ef7e610efb24937f2b63a7d0e767e477", "Url": "https://api.github.com/repos/datho7561/MyBankMachine", "Date": "2016-10-15T01:52:40Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.norconex.collector.core.data.store.impl.mongo.MongoConnectionDetails.getPort()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (port <= 0) { port = com.mongodb.ServerAddress.defaultPort(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7184/buggy-version/norconex-collector-core.src.main.java.com.norconex.collector.core.data.store.impl.mongo.MongoCrawlDataStore.java", "BodyUseAPI": [], "Fixed commit": "0bb5ad4486a739b56cf8094bc38cece55b72fd1b", "Url": "https://api.github.com/repos/Norconex/collector-core", "Date": "2015-05-06T19:36:49Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.yPos) <= 0) { this.xPos = xNew; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1985/buggy-version/src.main.Hero.java", "BodyUseAPI": [], "Fixed commit": "f1faf08747c182c304128219276e7e9244591e4e", "Url": "https://api.github.com/repos/AlexTelon/Platformer", "Date": "2013-08-14T21:53:45Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x < 0) { if (isSolid(this.getMap().getBoxMap()[pixelPosToBoxPos(this.yPos)][pixelPosToBoxPos(xNew)])) { xNew = ((pixelPosToBoxPos(xNew)) + 1) * (main.map.Box.getSide()); }else if ((!(this.onGround())) && (isSolid(this.getMap().getBoxMap()[pixelPosToBoxPos(((this.yPos) + (main.map.Box.getSide())))][pixelPosToBoxPos(xNew)]))) { xNew = ((pixelPosToBoxPos(xNew)) + 1) * (main.map.Box.getSide()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1985/buggy-version/src.main.Hero.java", "BodyUseAPI": [], "Fixed commit": "f1faf08747c182c304128219276e7e9244591e4e", "Url": "https://api.github.com/repos/AlexTelon/Platformer", "Date": "2013-08-14T21:53:45Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isSolid(this.getMap().getBoxMap()[pixelPosToBoxPos(this.yPos)][pixelPosToBoxPos((xNew + (main.map.Box.getSide())))])) { xNew = (pixelPosToBoxPos(xNew)) * (main.map.Box.getSide()); }else if ((!(this.onGround())) && (isSolid(this.getMap().getBoxMap()[pixelPosToBoxPos(((this.yPos) + (main.map.Box.getSide())))][pixelPosToBoxPos((xNew + (main.map.Box.getSide())))]))) { xNew = (pixelPosToBoxPos(xNew)) * (main.map.Box.getSide()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1985/buggy-version/src.main.Hero.java", "BodyUseAPI": ["main.Hero.pixelPosToBoxPos(int)", "main.Hero.pixelPosToBoxPos((xNew + (main.map.Box.getSide())))", "main.Hero.isSolid(this.getMap().getBoxMap()[pixelPosToBoxPos(((this.yPos) + (main.map.Box.getSide())))][pixelPosToBoxPos((xNew + (main.map.Box.getSide())))])", "main.Hero.pixelPosToBoxPos(int)"], "Fixed commit": "f1faf08747c182c304128219276e7e9244591e4e", "Url": "https://api.github.com/repos/AlexTelon/Platformer", "Date": "2013-08-14T21:53:45Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e.getKey().equalsIgnoreCase(\"Content-Length\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3698/buggy-version/containers.jersey2-routing.src.main.java.com.yahoo.gondola.container.client.ApacheHttpComponentProxyClient.java", "BodyUseAPI": [], "Fixed commit": "b334fcd0ed1e3d18021ee6b4f20b148ee399f05a", "Url": "https://api.github.com/repos/patc888/gondola", "Date": "2015-11-14T23:31:07Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((filePath) == null) { filePath = \"firstQuiz.txt\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6997/buggy-version/app.src.main.java.quiz.olgamrost.com.quiz.ShowQuizActivity.java", "BodyUseAPI": [], "Fixed commit": "69bdfbfb02c5d2e0593c3b11f7893ebe33d1cfc9", "Url": "https://api.github.com/repos/o-mrost/QuizMe", "Date": "2017-01-03T15:14:08Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jdt.core.dom.ClassInstanceCreation.getAnonymousClassDeclaration()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (null != anonymousClassDeclaration) { anonymousClassDeclaration.accept(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/284/buggy-version/MPAnalyzer.src.jp.ac.osaka_u.ist.sdl.mpanalyzer.ast.C3ASTVisitor.java", "BodyUseAPI": ["org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept(jp.ac.osaka_u.ist.sdl.mpanalyzer.ast.C3ASTVisitor)"], "Fixed commit": "d452fbf932667994bf729d173abd26b89d7e2c20", "Url": "https://api.github.com/repos/YoshikiHigo/MPAnalyzer", "Date": "2013-09-23T16:10:58Z"},
{"Line": "=>415", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (filesList == null) { net.tgxn.bukkit.backup.utils.LogUtils.sendLog(java.util.logging.Level.SEVERE, \"Failed to list backup directory.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8124/buggy-version/src.main.java.net.tgxn.bukkit.backup.threading.BackupTask.java", "BodyUseAPI": [], "Fixed commit": "7bdc16d6051eae751e7386f5cf6d3fc24b0babfd", "Url": "https://api.github.com/repos/tgxn/Backup", "Date": "2011-10-20T15:04:32Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (seqno > (hd)) low = hd = seqno;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1274/buggy-version/src.org.jgroups.util.Table.java", "BodyUseAPI": [], "Fixed commit": "08f4f35056f9781b54b62d8e32f60c36ccd3ef19", "Url": "https://api.github.com/repos/danberindei/JGroups", "Date": "2014-08-26T11:19:25Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (patient == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8302/buggy-version/similarity-genotype-view.src.main.java.org.phenotips.data.similarity.genotype.DefaultPatientGenotypeManager.java", "BodyUseAPI": [], "Fixed commit": "364314da8203003ab4156e163e9a0a2f798c49b4", "Url": "https://api.github.com/repos/phenotips/patient-network", "Date": "2017-12-07T16:56:37Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.genotype) != null) { json.put(\"genesStatus\", this.genotype.getGenesStatus()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8302/buggy-version/matching-notification-api.src.main.java.org.phenotips.matchingnotification.match.internal.DefaultPatientInMatch.java", "BodyUseAPI": [], "Fixed commit": "364314da8203003ab4156e163e9a0a2f798c49b4", "Url": "https://api.github.com/repos/phenotips/patient-network", "Date": "2017-12-07T16:56:37Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (null != customer) { request.getSession().setAttribute(\"login\", customer); model.addAttribute(\"message\", \"register and login success\"); return new org.springframework.web.servlet.ModelAndView(\"success\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8502/buggy-version/src.main.java.uk.ac.ncl.cs.zequnli.cc.controller.CustomerController.java", "BodyUseAPI": ["request.getSession().setAttribute(java.lang.String,uk.ac.ncl.cs.zequnli.cc.model.Customer)"], "Fixed commit": "95fe4486b1a7bfe5d2da28f32feefbc4970a7ca6", "Url": "https://api.github.com/repos/lizequn/cloudcourse", "Date": "2013-12-09T15:52:34Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.parse.ParseUser.getCurrentUser().get(\"flagISA\").equals(\"Persona\")) { intent = new android.content.Intent(com.clothapp.home.HomeActivity.activity, com.clothapp.profile.UserProfileActivity.class); }else { intent = new android.content.Intent(com.clothapp.home.HomeActivity.activity, com.clothapp.profile_shop.ShopProfileActivity.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2458/buggy-version/app.src.main.java.com.clothapp.home.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "d3d3d593762e966ad60f03d3972134aa41147011", "Url": "https://api.github.com/repos/ClothAppProject/ClothAppAndroid", "Date": "2016-03-09T00:30:30Z"},
{"Line": "=>633", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (questionView instanceof org.eyeseetea.malariacare.views.question.multiquestion.YearSelectorQuestionView) { ((org.eyeseetea.malariacare.views.question.multiquestion.YearSelectorQuestionView) (questionView)).setOnAnswerChangedListener(new org.eyeseetea.malariacare.layout.listeners.question.QuestionAnswerChangedListener(this, (!(org.eyeseetea.malariacare.utils.GradleVariantConfig.isButtonNavigationActive())))); }else if (questionView instanceof org.eyeseetea.malariacare.views.question.multiquestion.DatePickerQuestionView) { ((org.eyeseetea.malariacare.views.question.multiquestion.DatePickerQuestionView) (questionView)).setOnAnswerChangedListener(new org.eyeseetea.malariacare.layout.listeners.question.QuestionAnswerChangedListener(this, (!(org.eyeseetea.malariacare.utils.GradleVariantConfig.isButtonNavigationActive())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1746/buggy-version/app.src.main.java.org.eyeseetea.malariacare.layout.adapters.survey.DynamicTabAdapter.java", "BodyUseAPI": [], "Fixed commit": "1c3dfa0c6530798157855fa75466f3aef1e31b6a", "Url": "https://api.github.com/repos/EyeSeeTea/pictureapp", "Date": "2017-09-15T14:20:51Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.pressgang.ccms.contentspec.utils.ContentSpecUtilities.getContentSpecID(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (currentID != null) { checksum = org.jboss.pressgang.ccms.utils.common.HashUtilities.generateMD5(org.jboss.pressgang.ccms.contentspec.utils.ContentSpecUtilities.removeChecksum(failedContentSpec)); }else { checksum = org.jboss.pressgang.ccms.utils.common.HashUtilities.generateMD5(org.jboss.pressgang.ccms.contentspec.utils.ContentSpecUtilities.removeChecksum((((((org.jboss.pressgang.ccms.utils.constants.CommonConstants.CS_ID_TITLE) + \" = \") + id) + \"\\n\") + failedContentSpec))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6882/buggy-version/src.main.java.org.jboss.pressgang.ccms.contentspec.utils.ContentSpecUtilities.java", "BodyUseAPI": [], "Fixed commit": "cdd666f7479aad04c18f1d8fabdaddb518134729", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSContentSpec", "Date": "2013-09-05T15:13:27Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.djr.cards.games.GamesInterceptor.getSession(com.opensymphony.xwork2.ActionInvocation,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((session.getAttribute(\"tracking\")) == null) { return \"landing\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1791/buggy-version/src.main.java.com.djr.cards.games.GamesInterceptor.java", "BodyUseAPI": [], "Fixed commit": "e8dbcc62f0f93d7f454625190ce51021947abbac", "Url": "https://api.github.com/repos/djr4488/cards", "Date": "2014-02-17T14:50:49Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.samtools.SAMRecordIterator.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (record.getReadPairedFlag()) { record.setMateUnmappedFlag(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/37/buggy-version/src.java.nextgen.core.readers.PairedEndWriter.java", "BodyUseAPI": ["net.sf.samtools.SAMRecord.setMateUnmappedFlag(boolean)"], "Fixed commit": "94b9bfbaee06c9389abbc22fe76b9c6b3077210d", "Url": "https://api.github.com/repos/mgarber/scriptureV2", "Date": "2013-02-26T19:27:30Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.samtools.SAMRecordIterator.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (record.getReadPairedFlag()) { record.setMateUnmappedFlag(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/37/buggy-version/src.java.nextgen.core.readers.PairedEndWriter.java", "BodyUseAPI": ["net.sf.samtools.SAMRecord.setMateUnmappedFlag(boolean)"], "Fixed commit": "94b9bfbaee06c9389abbc22fe76b9c6b3077210d", "Url": "https://api.github.com/repos/mgarber/scriptureV2", "Date": "2013-02-26T19:27:30Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (e != null) { session.setAttribute(\"error\", e); if (!(response.isCommitted())) { response.sendRedirect(\"/eureka_webservice/pages/search-results.jsp\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3610/buggy-version/src.servlet.load.user.LoadUserSearchFood.java", "BodyUseAPI": ["javax.servlet.http.HttpSession.setAttribute(java.lang.String,java.lang.Exception)"], "Fixed commit": "27e56ddc0ba70d00674da23a57532c45dbccaf58", "Url": "https://api.github.com/repos/tweetweetarnold/eureka_webservice", "Date": "2016-03-08T11:22:32Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (returnList.isEmpty()) { throw new java.lang.Exception(\"No such food found.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3610/buggy-version/src.dao.FoodDAO.java", "BodyUseAPI": [], "Fixed commit": "27e56ddc0ba70d00674da23a57532c45dbccaf58", "Url": "https://api.github.com/repos/tweetweetarnold/eureka_webservice", "Date": "2016-03-08T11:22:32Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (split == (-1)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/250/buggy-version/exareme-master.src.main.java.madgik.exareme.master.gateway.ExaremeGatewayUtils.java", "BodyUseAPI": [], "Fixed commit": "835faf40b941ea557d469e37056d250f111b2dae", "Url": "https://api.github.com/repos/alexpap/exareme", "Date": "2016-03-18T18:01:54Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.model.Jenkins.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (jenkins == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1363/buggy-version/src.main.java.org.jenkinsci.plugins.Wso2IdSecurityRealm.java", "BodyUseAPI": [], "Fixed commit": "3bcbc0efe163903dddff44d261c62a6780135ce9", "Url": "https://api.github.com/repos/jenkinsci/wso2id-oauth-plugin", "Date": "2017-05-02T14:10:47Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(entities.isEmpty())) { if (!(entities.isEmpty())) { if ((turnIndex) == ((entities.size()) - 1)) { turnIndex = 0; }else { (turnIndex)++; } currentEntity = entities.get(turnIndex); nameLabel.setText(currentEntity.getDescriptions().getName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2453/buggy-version/src.View.GUI.CombatFrame.java", "BodyUseAPI": ["java.util.List<Models.Entity.Entity>.get(int)", "java.util.List<Models.Entity.Entity>.isEmpty()", "java.util.List<Models.Entity.Entity>.size()"], "Fixed commit": "dac760cc25c101995f15d54a919ea52f22aaa730", "Url": "https://api.github.com/repos/h3dg3-Wytch/DADA", "Date": "2015-12-02T04:38:47Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (j == 0) { xPos = xPos; }else { xPos = xPos + (15 * (playerHand.size())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4085/buggy-version/BlackJack.java", "BodyUseAPI": [], "Fixed commit": "677da891c59c473226cc45b97acf33d7c977fdc1", "Url": "https://api.github.com/repos/kdb14940/BlackJack", "Date": "2017-01-25T22:06:03Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (deltaX >= left) { translateX = left - deltaX; mCanScrollLeft = true; mCanScrollRight = false; }else if ((deltaX + currentImageWidth) <= right) { translateX = right - (deltaX + currentImageWidth); mCanScrollRight = true; mCanScrollLeft = false; }else { translateX = 0.0F; mCanScrollRight = false; mCanScrollLeft = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5982/buggy-version/app.src.main.java.com.gomdev.gomPhotoViewer.CustomImageView.java", "BodyUseAPI": [], "Fixed commit": "d5d7dcb27fb3b986e026d407498a9853e34cb2fb", "Url": "https://api.github.com/repos/zesty98/gomPhotoViewer", "Date": "2015-06-02T14:18:35Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Paths.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(java.nio.file.Files.exists(path))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2671/buggy-version/src.main.java.jp.toastkid.gui.jfx.cssgen.Controller.java", "BodyUseAPI": [], "Fixed commit": "659f3d9ea25098b5ac6b6065643cbcca5f764808", "Url": "https://api.github.com/repos/toastkidjp/javafx_css_generator", "Date": "2016-05-17T13:18:16Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (oldAuthentication == null) newAuthentication = new org.springframework.security.authentication.UsernamePasswordAuthenticationToken(newUsername, user.getPasswordHash()); else newAuthentication = new org.springframework.security.authentication.UsernamePasswordAuthenticationToken(newUsername, user.getPasswordHash(), oldAuthentication.getAuthorities());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1722/buggy-version/src.main.java.com.thoughtworks.bbs.web.UserController.java", "BodyUseAPI": ["org.springframework.security.core.Authentication.getAuthorities()"], "Fixed commit": "90fd73c2dc3488587d92dae2708b0bb6a91736cb", "Url": "https://api.github.com/repos/freddie218/bbs_team_b", "Date": "2014-01-07T13:03:11Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.unicoen.interpreter.Engine.toBool(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cond) { return execExpr(ui.trueStatement, scope); }else if ((ui.falseStatement) != null) { return execExpr(ui.falseStatement, scope); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7833/buggy-version/src.main.java.net.unicoen.interpreter.Engine.java", "BodyUseAPI": [], "Fixed commit": "2e82e1cf4edca850cbf11bb6c2742caefb5462b6", "Url": "https://api.github.com/repos/UnicoenProject/Junicoen", "Date": "2016-07-31T06:15:09Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((step.getType()) == (models.Step.Type.ROLL_END)) || ((step.getType()) == (models.Step.Type.HOLD_END))) { if ((currentHolds[holdIndex]) != null) { currentHolds[holdIndex].extend(height); currentHolds[holdIndex].end(); currentHolds[holdIndex] = null; } }else if (((step.getType()) == (models.Step.Type.ROLLING)) || ((step.getType()) == (models.Step.Type.HOLDING))) { if ((currentHolds[holdIndex]) != null) { currentHolds[holdIndex].extend(height); }else { if ((step.getType()) == (models.Step.Type.ROLLING)) { hold = new entities.Roll(x, y, width, height); currentHolds[holdIndex] = hold; }else if ((step.getType()) == (models.Step.Type.HOLDING)) { hold = new entities.Freeze(x, y, width, height); currentHolds[holdIndex] = hold; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3949/buggy-version/src.entities.Step.java", "BodyUseAPI": ["models.Step.getType()", "models.Step.getType()", "models.Step.getType()", "models.Step.getType()"], "Fixed commit": "202da680ccac16d5166c406472f2f1d08eed376f", "Url": "https://api.github.com/repos/UberZoonie/sm-printer", "Date": "2014-01-27T04:05:50Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMessageAdapter) == null) { setupListAdapter(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7841/buggy-version/HoloIRC.src.main.java.com.fusionx.lightirc.ui.ChannelFragment.java", "BodyUseAPI": [], "Fixed commit": "4c34eab12e7613c28a6e1d420941826b954be4b1", "Url": "https://api.github.com/repos/tilal6991/HoloIRC", "Date": "2013-12-02T17:52:42Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMessageAdapter) == null) { setupListAdapter(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7841/buggy-version/HoloIRC.src.main.java.com.fusionx.lightirc.ui.UserFragment.java", "BodyUseAPI": [], "Fixed commit": "4c34eab12e7613c28a6e1d420941826b954be4b1", "Url": "https://api.github.com/repos/tilal6991/HoloIRC", "Date": "2013-12-02T17:52:42Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.selected) == selected) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/416/buggy-version/Platform_SvgTree.src.net.sf.anathema.platform.svgtree.view.batik.intvalue.SVGBooleanValueDisplay.java", "BodyUseAPI": [], "Fixed commit": "c5dd8357e19a19f912e05013565de6dfde949131", "Url": "https://api.github.com/repos/anathema/anathema", "Date": "2012-08-17T21:51:25Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mediaServer) != null) { this.mediaServer.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6415/buggy-version/bootstrap.src.main.java.org.mobicents.media.server.bootstrap.Bootstrapper.java", "BodyUseAPI": [], "Fixed commit": "708a65e0fb2f5f9c039747602b7f3c0632f630b0", "Url": "https://api.github.com/repos/RestComm/media-core", "Date": "2016-10-13T17:03:19Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((md.getMaxLength()) != 0) && ((md.getMaxLength()) != (str.length()))) { md.setDateConfidence((-1)); md.setTimeCofidence((-1)); md.setType(RecordFieldMetaData.FIELD_TYPE.NUMBER); }else if (((md.getMinLength()) != 0) && ((md.getMinLength()) != (str.length()))) { md.setDateConfidence((-1)); md.setTimeCofidence((-1)); md.setType(RecordFieldMetaData.FIELD_TYPE.NUMBER); }else if ((((md.getDateConfidence()) >= 0) && ((md.getMaxLength()) == (md.getMinLength()))) && ((((((md.getMaxLength()) == 6) || ((md.getMaxLength()) == 8)) || ((md.getMaxLength()) == 10)) || ((md.getMaxLength()) == 12)) || ((md.getMaxLength()) == 14))) { if ((md.getMaxLength()) > 8) { if ((str.startsWith(\"0\")) && ((md.getDateConfidence()) < 10)) { md.setDateConfidence(8); md.setTimeCofidence(10); md.setType(RecordFieldMetaData.FIELD_TYPE.DATETIME); }else { md.setDateConfidence(8); md.setTimeCofidence(8); md.setType(RecordFieldMetaData.FIELD_TYPE.DATE); } }else { md.setType(RecordFieldMetaData.FIELD_TYPE.DATE); if ((str.startsWith(\"0\")) && ((md.getDateConfidence()) < 10)) { md.setDateConfidence(10); md.setTimeCofidence((-1)); }else { md.setDateConfidence(8); md.setTimeCofidence((-1)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1898/buggy-version/src.main.java.com.asksunny.utils.io.RecordMetaProfiler.java", "BodyUseAPI": ["com.asksunny.utils.io.RecordFieldMetaData.getDateConfidence()", "com.asksunny.utils.io.RecordFieldMetaData.getMaxLength()", "com.asksunny.utils.io.RecordFieldMetaData.setTimeCofidence(int)", "com.asksunny.utils.io.RecordFieldMetaData.getDateConfidence()", "com.asksunny.utils.io.RecordFieldMetaData.setTimeCofidence(int)", "com.asksunny.utils.io.RecordFieldMetaData.setDateConfidence(int)", "com.asksunny.utils.io.RecordFieldMetaData.getMinLength()", "com.asksunny.utils.io.RecordFieldMetaData.setTimeCofidence(int)", "com.asksunny.utils.io.RecordFieldMetaData.setDateConfidence(int)", "com.asksunny.utils.io.RecordFieldMetaData.getMinLength()", "com.asksunny.utils.io.RecordFieldMetaData.setType(RecordFieldMetaData.FIELD_TYPE.NUMBER)", "com.asksunny.utils.io.RecordFieldMetaData.getMinLength()", "com.asksunny.utils.io.RecordFieldMetaData.setDateConfidence(int)", "com.asksunny.utils.io.RecordFieldMetaData.getMaxLength()", "com.asksunny.utils.io.RecordFieldMetaData.setType(RecordFieldMetaData.FIELD_TYPE.DATE)", "com.asksunny.utils.io.RecordFieldMetaData.getDateConfidence()", "com.asksunny.utils.io.RecordFieldMetaData.getMaxLength()", "com.asksunny.utils.io.RecordFieldMetaData.setType(RecordFieldMetaData.FIELD_TYPE.DATE)", "com.asksunny.utils.io.RecordFieldMetaData.setDateConfidence(int)", "java.lang.String.length()", "com.asksunny.utils.io.RecordFieldMetaData.getMaxLength()", "com.asksunny.utils.io.RecordFieldMetaData.getMaxLength()", "com.asksunny.utils.io.RecordFieldMetaData.setTimeCofidence(int)", "com.asksunny.utils.io.RecordFieldMetaData.setTimeCofidence(int)", "com.asksunny.utils.io.RecordFieldMetaData.setType(RecordFieldMetaData.FIELD_TYPE.NUMBER)", "com.asksunny.utils.io.RecordFieldMetaData.setTimeCofidence(int)", "com.asksunny.utils.io.RecordFieldMetaData.setDateConfidence(int)", "java.lang.String.startsWith(java.lang.String)", "com.asksunny.utils.io.RecordFieldMetaData.getMaxLength()", "com.asksunny.utils.io.RecordFieldMetaData.setType(RecordFieldMetaData.FIELD_TYPE.DATETIME)", "com.asksunny.utils.io.RecordFieldMetaData.setDateConfidence(int)", "com.asksunny.utils.io.RecordFieldMetaData.getMaxLength()", "java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "4f60e9fd14649cc746b292a8025297703204406d", "Url": "https://api.github.com/repos/devsunny/utils", "Date": "2014-03-28T02:21:52Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((each.getUpdateCount()) == (-1)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3869/buggy-version/sharding-jdbc-core.src.main.java.com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractStatementAdapter.java", "BodyUseAPI": [], "Fixed commit": "577ae0bbbfba6c8d333d6cd8f0234870ecd7e3ed", "Url": "https://api.github.com/repos/sharding-sphere/sharding-sphere", "Date": "2016-07-25T08:52:40Z"},
{"Line": "=>470", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.broad.igv.track.TrackClickEvent.getFrame()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((frame == null) && (!(org.broad.igv.track.FrameManager.isGeneListMode()))) { frame = org.broad.igv.track.FrameManager.getDefaultFrame(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/235/buggy-version/src.org.broad.igv.track.TrackMenuUtils.java", "BodyUseAPI": [], "Fixed commit": "7e08862ae370d7c1bfee2e9de1d1e12ae422f7bf", "Url": "https://api.github.com/repos/igvteam/igv", "Date": "2016-07-19T18:48:17Z"},
{"Line": "=>497", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (frame != null) { org.broad.igv.feature.Range r = frame.getCurrentRange(); featurePopupMenu.add(org.broad.igv.track.TrackMenuUtils.getExtendViewItem(featureName, sequenceFeature, r)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/235/buggy-version/src.org.broad.igv.track.TrackMenuUtils.java", "BodyUseAPI": ["org.broad.igv.track.ReferenceFrame.getCurrentRange()"], "Fixed commit": "7e08862ae370d7c1bfee2e9de1d1e12ae422f7bf", "Url": "https://api.github.com/repos/igvteam/igv", "Date": "2016-07-19T18:48:17Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.model.Jenkins.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((instance.getRootUrl()) != null) { return instance.getRootUrl(); }else { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3762/buggy-version/src.main.java.com.ztbsuper.dingding.DingdingNotifier.java", "BodyUseAPI": ["jenkins.model.Jenkins.getRootUrl()"], "Fixed commit": "ce6aecd74f2d40d142fe6c9707ab7adedd76c221", "Url": "https://api.github.com/repos/jenkinsci/dingding-notifications-plugin", "Date": "2017-07-06T18:46:50Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((error.networkResponse) != null) { int errorCode = error.networkResponse.statusCode; if (errorCode == 404) { byte[] data = error.networkResponse.data; android.graphics.Bitmap bitmap = io.evercam.androidapp.utils.Commons.decodeBitmapFromResource(data, view.getWidth()); listener.onNotFoundErrorImage(bitmap); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4141/buggy-version/evercamPlay.src.main.java.io.evercam.androidapp.image.VolleyRequest.java", "BodyUseAPI": [], "Fixed commit": "9d7550984aa2db1b2fb42e791c848dc97b439b5b", "Url": "https://api.github.com/repos/evercam/evercam-android", "Date": "2016-04-18T14:18:48Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jssc.SerialInputStream.available()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (available == 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4747/buggy-version/src.java.jssc.SerialInputStream.java", "BodyUseAPI": [], "Fixed commit": "b7f39eeffba0b2989b929027707f89638a7ac528", "Url": "https://api.github.com/repos/therealchalz/java-simple-serial-connector", "Date": "2015-08-11T17:57:46Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["game.getProfileController().getCurrentProfileName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(profileName.equals(\"\"))) { game.getPersistenceManager().editSetting(profileName, newSetting); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/47/buggy-version/implementation.project.src.de.croggle.data.persistence.SettingController.java", "BodyUseAPI": ["game.getPersistenceManager().editSetting(java.lang.String,de.croggle.data.persistence.Setting)"], "Fixed commit": "4cb0aaed79583da093f6b65e5ebf687d8f3b1029", "Url": "https://api.github.com/repos/vincent23/lambda-alligatoren", "Date": "2014-02-02T13:24:30Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode == (android.app.Activity.RESULT_OK)) { loadData(); listView.getAdapter().notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3151/buggy-version/app.src.main.java.diy.uigeneric.sample.SampleListActivity.java", "BodyUseAPI": [], "Fixed commit": "bd20c3718417a96687b31dc52285da3101f554a7", "Url": "https://api.github.com/repos/taworn/uigeneric", "Date": "2016-04-17T01:26:29Z"},
{"Line": "=>2120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (formBean.getFreightType().equals(\"TRUCKING\")) { entity.setDestinationPort(\"N/A\"); }else { entity.setDestinationPort(formBean.getDestinationPort()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1330/buggy-version/freightbit.src.main.java.com.sr.apps.freightbit.order.action.OrderAction.java", "BodyUseAPI": ["com.sr.biz.freightbit.order.entity.Orders.setDestinationPort(formBean.getDestinationPort())", "com.sr.apps.freightbit.order.formbean.OrderBean.getDestinationPort()"], "Fixed commit": "c6f1381f35641c628d0a19fba60cfaa2e3d8dec8", "Url": "https://api.github.com/repos/johnpelquingua/freightbit-logistics", "Date": "2015-06-01T05:16:11Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orange.network.game.protocol.message.GameMessageProtos.GameMessage.getJoinGameRequest()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((joinRequest.hasUser()) && ((joinRequest.getUser()) != null)) { pbUser = joinRequest.getUser(); }else { pbUser = builder.build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1589/buggy-version/src.com.orange.game.draw.messagehandler.DrawJoinGameRequestHandler.java", "BodyUseAPI": ["com.orange.network.game.protocol.message.GameMessageProtos.JoinGameRequest.getUser()"], "Fixed commit": "b297faf9684cc656971e09afddddfdd1454f48a2", "Url": "https://api.github.com/repos/gckjdev/DrawGameServer", "Date": "2013-01-29T09:30:27Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (com.xgf.wineserver.ui.activity.MainActivity.mOrderAdapter)) { com.xgf.wineserver.ui.activity.MainActivity.refresh(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/810/buggy-version/src.com.xgf.wineserver.service.MsgService.java", "BodyUseAPI": [], "Fixed commit": "d9bd60d6fded98273a5d12f0ca8170d31f458b27", "Url": "https://api.github.com/repos/xiguofeng/WineServer", "Date": "2015-09-15T09:25:14Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Double.isNaN(r)) { if (!na_rm) return new water.rapids.vals.ValRow(new double[]{ java.lang.Double.NaN }, null); }else { d += r; n++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7714/buggy-version/h2o-core.src.main.java.water.rapids.ast.prims.reducers.AstMean.java", "BodyUseAPI": [], "Fixed commit": "5d34899b72c4f019fa51ba72b39178b500146672", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2016-10-18T19:20:05Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.onebusaway.gtfs_transformer.impl.EntitySchemaCache.getFieldMappingForCsvFieldName(java.lang.Class<?>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (mapping == null) { mapping = _schemaCache.getFieldMappingForObjectFieldName(parentEntityType, propertyName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2332/buggy-version/onebusaway-gtfs-transformer.src.main.java.org.onebusaway.gtfs_transformer.impl.DeferredValueSupport.java", "BodyUseAPI": [], "Fixed commit": "e8165d16ffa70de9690398ddb4386f2a741d3de3", "Url": "https://api.github.com/repos/masconsult/onebusaway-gtfs-modules", "Date": "2012-12-27T19:55:26Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmrs.api.PatientService.getPatientIdentifierTypeByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (openmrsIdType != null) { openmrsIdType.setName(\"iSantePlus ID\"); patientService.savePatientIdentifierType(openmrsIdType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1500/buggy-version/api.src.main.java.org.openmrs.module.isanteplus.ISantePlusActivator.java", "BodyUseAPI": ["org.openmrs.PatientIdentifierType.setName(java.lang.String)", "org.openmrs.api.PatientService.savePatientIdentifierType(org.openmrs.PatientIdentifierType)"], "Fixed commit": "c748547e2e7266898ce8bb1672aacc3789b2e277", "Url": "https://api.github.com/repos/IsantePlus/openmrs-module-isanteplus", "Date": "2017-07-18T01:15:20Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((atp.getDataDimension()) == 3) return initPlainMesh(((abfab3d.core.TriangleProducer) (producer))); else return initAttributedMesh(((abfab3d.core.AttributedTriangleProducer) (producer)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4518/buggy-version/src.java.abfab3d.datasources.DistanceToMeshDataSource.java", "BodyUseAPI": [], "Fixed commit": "064568b1d4ae011fe32d3ee115980499198e7cea", "Url": "https://api.github.com/repos/AbFab3D/AbFab3D", "Date": "2017-01-09T22:33:52Z"},
{"Line": "=>1322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (before) { element.prependElement(insertedElement); }else { element.appendElement(insertedElement); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5725/buggy-version/src.main.java.org.hatemile.implementation.AccessibleDisplayScreenReaderImplementation.java", "BodyUseAPI": [], "Fixed commit": "cdb90d20234736ccb5bb395e56622e97d91fc4fa", "Url": "https://api.github.com/repos/hatemile/hatemile-for-java", "Date": "2017-12-12T06:14:11Z"},
{"Line": "=>732", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ctx.block().size()) == 1) { block_false = new CodeFragment(); }else { block_false = visit(ctx.block(1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8578/buggy-version/saral.src.CompilerVisitor.java", "BodyUseAPI": ["SaralParser.If_statementContext.block(int)", "CompilerVisitor.visit(ctx.block(1))"], "Fixed commit": "a5361a0ed7b95ffc210591d579c72b46678313f3", "Url": "https://api.github.com/repos/laciKE/saral", "Date": "2015-01-04T08:41:35Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((XMLConfigConstants.SCOPE_OPERATION.equals(scope)) && (synCtx instanceof org.apache.synapse.core.axis2.Axis2MessageContext)) { org.apache.synapse.core.axis2.Axis2MessageContext axis2smc = ((org.apache.synapse.core.axis2.Axis2MessageContext) (synCtx)); org.apache.axis2.context.MessageContext axis2MessageCtx = axis2smc.getAxis2MessageContext(); org.apache.axis2.context.OperationContext axis2oc = axis2MessageCtx.getOperationContext(); axis2oc.removeProperty(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4081/buggy-version/modules.core.src.main.java.org.apache.synapse.mediators.builtin.PropertyMediator.java", "BodyUseAPI": [], "Fixed commit": "39b1889c9f0560015c2832585abb3683ac83336e", "Url": "https://api.github.com/repos/chanakaudaya/wso2-synapse", "Date": "2014-03-27T06:22:13Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x > ((getWorldWidth()) / 2)) { x = (getWorldHeight()) - (x * (-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4579/buggy-version/rover.rover.src.main.java.rover.GenericRover.java", "BodyUseAPI": [], "Fixed commit": "cfde2c8d4bf56da6c492a3ab8e9ca84c340ce9f3", "Url": "https://api.github.com/repos/Birdfriender/IA-AgentScape-Rover", "Date": "2016-11-20T17:19:16Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (y > ((getWorldHeight()) / 2)) { y = (getWorldHeight()) - (y * (-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4579/buggy-version/rover.rover.src.main.java.rover.GenericRover.java", "BodyUseAPI": [], "Fixed commit": "cfde2c8d4bf56da6c492a3ab8e9ca84c340ce9f3", "Url": "https://api.github.com/repos/Birdfriender/IA-AgentScape-Rover", "Date": "2016-11-20T17:19:16Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(f.exists())) { f = new java.io.File((((java.lang.System.getProperty(\"user.home\")) + (java.io.File.separator)) + fileName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5057/buggy-version/client.src.resourceManager.FileHandler.java", "BodyUseAPI": [], "Fixed commit": "4945be7f50128580ab82f2c7af8cf1c97fcb73e4", "Url": "https://api.github.com/repos/MsHax085/OOA_Spelprogram", "Date": "2016-02-24T12:39:58Z"},
{"Line": "=>2185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.cyberduck.ui.cocoa.controller.PathCache.lookup(ch.cyberduck.ui.cocoa.controller.NSObjectPathReference)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == file) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1762/buggy-version/osx.src.main.java.ch.cyberduck.ui.cocoa.controller.BrowserController.java", "BodyUseAPI": [], "Fixed commit": "25894f86e6ac53db9447969c3a14e533e4f2bb17", "Url": "https://api.github.com/repos/iterate-ch/cyberduck", "Date": "2017-07-07T13:57:52Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ar.edu.unrc.exa.dc.dose2016.riocuartobandasderock.dao.impl.SongDaoImpl.findById(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (s != null) { this.currentSession.delete(s); return true; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2030/buggy-version/src.main.java.ar.edu.unrc.exa.dc.dose2016.riocuartobandasderock.dao.impl.SongDaoImpl.java", "BodyUseAPI": ["org.hibernate.Session.delete(ar.edu.unrc.exa.dc.dose2016.riocuartobandasderock.model.Song)"], "Fixed commit": "a5067de551c6e5b8fa50cb79f90ef4e6d65c04d2", "Url": "https://api.github.com/repos/nmaguirre/riocuartobandasderock", "Date": "2016-11-21T19:55:33Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (useBom) for (java.lang.Integer bom : boms.get(encoding)) os.write(bom);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3569/buggy-version/araqne-logdb.src.main.java.org.araqne.logdb.writer.CsvLineWriter.java", "BodyUseAPI": [], "Fixed commit": "f7b6154e84670f285a8b08bf374038516201c48d", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2014-07-02T08:58:42Z"},
{"Line": "=>781", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.almalence.opencam.cameracontroller.CameraController.isHALv3)) com.almalence.opencam.cameracontroller.CameraController.SupportedPreviewSizesList = com.almalence.opencam.cameracontroller.CameraController.camera.getParameters().getSupportedPreviewSizes();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6569/buggy-version/src.com.almalence.opencam.cameracontroller.CameraController.java", "BodyUseAPI": [], "Fixed commit": "ecc6d5a8ec5d3acbbe24319f1f404fcffaa7e601", "Url": "https://api.github.com/repos/almalence/OpenCamera", "Date": "2014-08-14T03:13:22Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (history == null) { history = protocol.getLastProtocolHistory(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8058/buggy-version/src.main.java.module.protocols.dto.ProtocolCreationBean.java", "BodyUseAPI": [], "Fixed commit": "5ef89c406bc618daa5ed3832e59eab4188f8cb5c", "Url": "https://api.github.com/repos/jcarvalho/protocols", "Date": "2014-06-26T10:06:31Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (subType == null) { template = lookupTemplate(eachComp, ((java.lang.String) (value))); }else { template = lookupTemplate(eachComp, ((((java.lang.String) (value)) + \":\") + subType)); if (template == null) { template = lookupTemplate(eachComp, ((java.lang.String) (value))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1621/buggy-version/zkbind.src.org.zkoss.bind.impl.TemplateResolverImpl.java", "BodyUseAPI": ["org.zkoss.bind.impl.TemplateResolverImpl.lookupTemplate(org.zkoss.zk.ui.Component,java.lang.String)"], "Fixed commit": "8874f8d05f6cee841f1e4d86a7bbf038f86caac9", "Url": "https://api.github.com/repos/DevChu/zk", "Date": "2015-02-13T10:13:50Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["modTicket.getModData().getIntArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((blockPos.length) != 0) { net.minecraftforge.common.ForgeChunkManager.forceChunk(modTicket, new net.minecraft.world.ChunkCoordIntPair((((blockPos[0]) - 16) / 16), (((blockPos[2]) - 16) / 16))); rowautomation.Chunkloader.blockTickets.put(world.getBlock(blockPos[0], blockPos[1], blockPos[2]), modTicket); }else { net.minecraftforge.common.ForgeChunkManager.releaseTicket(modTicket); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2195/buggy-version/main.java.rowautomation.Chunkloader.java", "BodyUseAPI": ["net.minecraftforge.common.ForgeChunkManager.forceChunk(net.minecraftforge.common.ForgeChunkManager.Ticket,net.minecraft.world.ChunkCoordIntPair)", "java.util.Map<net.minecraft.block.Block, net.minecraftforge.common.ForgeChunkManager.Ticket>.put(world.getBlock(blockPos[0], blockPos[1], blockPos[2]),net.minecraftforge.common.ForgeChunkManager.Ticket)", "net.minecraft.world.World.getBlock(int,int,int)"], "Fixed commit": "a3ed605fb13414a7cca466720f0757c7eebbb4e8", "Url": "https://api.github.com/repos/DonBruce64/RailsOfWarAutomationModule", "Date": "2015-12-13T02:07:15Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(com.idega.util.StringUtil.isEmpty(courseProviderId))) && (!(com.idega.util.StringUtil.isEmpty(courseProviderUserId)))) { getCourseProviderUserHome().remove(courseProviderUserId, courseProviderId); }else if (!(com.idega.util.StringUtil.isEmpty(courseProviderUserId))) { getCourseProviderUserHome().remove(courseProviderUserId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/782/buggy-version/src.java.is.idega.idegaweb.egov.course.presentation.bean.CourseProviderUsersViewerBean.java", "BodyUseAPI": ["is.idega.idegaweb.egov.course.data.CourseProviderUserHome.remove(java.lang.String,java.lang.String)", "com.idega.util.StringUtil.isEmpty(java.lang.String)", "is.idega.idegaweb.egov.course.data.CourseProviderUserHome.remove(java.lang.String)"], "Fixed commit": "94353be734c7d86167cc4840bfa2dd50ecd1689b", "Url": "https://api.github.com/repos/idega/is.idega.idegaweb.egov.course", "Date": "2013-12-17T11:44:32Z"},
{"Line": "=>526", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((identifierEquals(\"precision\")) && (column.getDataType().getName().equalsIgnoreCase(\"double\"))) { lexer.nextToken(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2847/buggy-version/src.main.java.com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.java", "BodyUseAPI": [], "Fixed commit": "2e993b3cb540dcba7151be77c8ec9a465ec5ff76", "Url": "https://api.github.com/repos/wenshao/druid", "Date": "2013-04-04T02:01:12Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerItemConsumeEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((p.getItemInHand().getAmount()) == 1) p.setItemInHand(new org.bukkit.inventory.ItemStack(org.bukkit.Material.AIR)); else p.getItemInHand().setAmount(((evt.getPlayer().getItemInHand().getAmount()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4428/buggy-version/src.at.felixfritz.customhealth.eventlisteners.MainListener.java", "BodyUseAPI": ["org.bukkit.entity.Player.setItemInHand(org.bukkit.inventory.ItemStack)", "org.bukkit.entity.Player.getItemInHand()", "p.getItemInHand().setAmount(((evt.getPlayer().getItemInHand().getAmount()) - 1))"], "Fixed commit": "be46e284ee6e7089ede9134fcc6b5afd187127d0", "Url": "https://api.github.com/repos/felixfritz/CustomHealth", "Date": "2013-11-30T18:41:37Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((repeat.isSelected()) && ((endDate.getValue()) == null)) { errorText += \"Select an end date or uncheck weekly repetition. \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8118/buggy-version/RateChill.src.gui.addLecturesController.java", "BodyUseAPI": [], "Fixed commit": "74604a61489e3f7ccd9ad2f92bb440d317ed8812", "Url": "https://api.github.com/repos/inelofthus/Gruppe23", "Date": "2017-04-06T10:35:38Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.security.cert.X509Certificate.getExtendedKeyUsage()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (extendedKeyUsage == null) { java.lang.String message = \"Extended key usage extension is expected, but unavailable\"; throw new java.security.GeneralSecurityException(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3415/buggy-version/services.src.main.java.org.keycloak.authentication.authenticators.x509.CertificateValidator.java", "BodyUseAPI": [], "Fixed commit": "4704276c1f42fe5a0f1c37dec5e0e1783ea5c125", "Url": "https://api.github.com/repos/brat000012001/keycloak", "Date": "2016-08-30T12:54:07Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.security.cert.X509Certificate.getCriticalExtensionOIDs()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (critSet != null) { isCritical = critSet.contains(\"2.5.29.37\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3415/buggy-version/services.src.main.java.org.keycloak.authentication.authenticators.x509.CertificateValidator.java", "BodyUseAPI": ["java.util.Set.contains(java.lang.String)"], "Fixed commit": "4704276c1f42fe5a0f1c37dec5e0e1783ea5c125", "Url": "https://api.github.com/repos/brat000012001/keycloak", "Date": "2016-08-30T12:54:07Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.security.cert.X509Certificate.getKeyUsage()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (keyUsageBits == null) { if (expected != 0) { java.lang.String message = \"Key usage extension is expected, but unavailable.\"; throw new java.security.GeneralSecurityException(message); } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3415/buggy-version/services.src.main.java.org.keycloak.authentication.authenticators.x509.CertificateValidator.java", "BodyUseAPI": [], "Fixed commit": "4704276c1f42fe5a0f1c37dec5e0e1783ea5c125", "Url": "https://api.github.com/repos/brat000012001/keycloak", "Date": "2016-08-30T12:54:07Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.security.cert.X509Certificate.getCriticalExtensionOIDs()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (critSet != null) { isCritical = critSet.contains(\"2.5.29.15\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3415/buggy-version/services.src.main.java.org.keycloak.authentication.authenticators.x509.CertificateValidator.java", "BodyUseAPI": ["java.util.Set.contains(java.lang.String)"], "Fixed commit": "4704276c1f42fe5a0f1c37dec5e0e1783ea5c125", "Url": "https://api.github.com/repos/brat000012001/keycloak", "Date": "2016-08-30T12:54:07Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.abs(((enemy.getPosition().x) - (player.getPosition().x)))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((distance < (enemy.ATTACK_RADIUS)) && isOnSameLevel) && ((player.lifeState) != (Entity.LifeState.DEAD))) { enemy.startAttacking(); if (((enemy.direction) == (Entity.Direction.LEFT)) && (playersSide == (Entity.Direction.RIGHT))) { enemy.direction = Entity.Direction.RIGHT; }else if (((enemy.direction) == (Entity.Direction.RIGHT)) && (playersSide == (Entity.Direction.LEFT))) { enemy.direction = Entity.Direction.LEFT; } }else if (((distance < (enemy.RADIUS)) && isOnSameLevel) && ((player.lifeState) != (Entity.LifeState.DEAD))) { enemy.moveTo(player.getPosition(), deltaTime); }else { enemy.move(deltaTime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1030/buggy-version/core.src.com.lothbrok.game.controllers.EnemyController.java", "BodyUseAPI": ["com.lothbrok.game.model.entities.Enemy.moveTo(player.getPosition(),float)", "com.lothbrok.game.model.entities.Player.getPosition()", "com.lothbrok.game.model.entities.Enemy.startAttacking()", "com.lothbrok.game.model.entities.Enemy.move(float)"], "Fixed commit": "cd65f257bb928ca373625872c0be3bba99ed8920", "Url": "https://api.github.com/repos/leventemathe/Lothbrok", "Date": "2017-03-22T15:55:59Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(source.getAbsolutePath().contains(\".metadata.json\"))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7328/buggy-version/src.syncure.core.FileSync.java", "BodyUseAPI": [], "Fixed commit": "03345291d17de70c4642c6b67d6c036fc4e968d9", "Url": "https://api.github.com/repos/JobiProGrammer/SynCure", "Date": "2017-04-29T20:41:08Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (javassist.util.proxy.ProxyFactory.isProxyClass(consequenceExceptionHandler.getValue().getClass())) handlerClz = consequenceExceptionHandler.getValue().getClass().getSuperclass();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4640/buggy-version/jboss-seam.src.main.java.org.jboss.seam.drools.RuleBase.java", "BodyUseAPI": ["consequenceExceptionHandler.getValue().getClass().getSuperclass()", "org.jboss.seam.core.Expressions.ValueExpression<org.drools.spi.ConsequenceExceptionHandler>.getValue()", "consequenceExceptionHandler.getValue().getClass()"], "Fixed commit": "d9d858fc4f553d3d86c84f80318bc0929f1c1751", "Url": "https://api.github.com/repos/omidp/seam", "Date": "2016-01-19T08:34:22Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (element.equalsIgnoreCase(\"Information\")) { if (((patentsForAUniqueID) != null) && (!(patentsForAUniqueID.isEmpty()))) { patentIDs.put(compoundIdentifier, patentsForAUniqueID); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4322/buggy-version/src.main.com.silicolife.textmining.patentpipeline.PubChemAPI.PUGHelp.PUGRestPatentIDParser.java", "BodyUseAPI": [], "Fixed commit": "4af7bac154e3f1e7e85ad919ec899a44e07e1682", "Url": "https://api.github.com/repos/TAPAlves/development", "Date": "2017-04-03T17:23:51Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (tools != null) { for (int j = 0; j < (tools.tools.length); j++) { if (((tools.tools[j]) != null) && (tools.tools[j].isItemEnchanted())) { addApToItem(tools.tools[j]); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/388/buggy-version/ak.EnchantChanger.EcEntityApOrb.java", "BodyUseAPI": ["tools.tools[j].isItemEnchanted()", "ak.EnchantChanger.EcEntityApOrb.addApToItem(tools.tools[j])"], "Fixed commit": "ff3ff09f127bc301ba108daa9a7c6606e925d802", "Url": "https://api.github.com/repos/aksource/EnchantChanger152", "Date": "2013-10-28T04:22:30Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lData.getDateObj()) == null) { lData.setDateObj(oscar.util.UtilDateUtilities.getDateFromString(lData.dateTime, \"yyyy-MM-dd\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1078/buggy-version/src.main.java.oscar.oscarMDS.data.MDSResultsData.java", "BodyUseAPI": ["oscar.oscarLab.ca.on.LabResultData.setDateObj(oscar.util.UtilDateUtilities.getDateFromString(lData.dateTime, \"yyyy-MM-dd\"))", "oscar.util.UtilDateUtilities.getDateFromString(lData.dateTime,java.lang.String)"], "Fixed commit": "bb52e125ebcf7ea4b5fa5802fe1964902bf7fccb", "Url": "https://api.github.com/repos/scoophealth/oscar", "Date": "2013-08-20T16:07:29Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["oscar.oscarLab.ca.all.parsers.MessageHandler.getTimeStamp(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((((m.getDateObserved()) == null) && (datetime != null)) && ((datetime.length()) > 0)) { m.setDateObserved(oscar.util.UtilDateUtilities.StringToDate(datetime, \"yyyy-MM-dd\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1078/buggy-version/src.main.java.oscar.oscarLab.ca.all.Hl7textResultsData.java", "BodyUseAPI": ["org.oscarehr.common.model.Measurement.setDateObserved(oscar.util.UtilDateUtilities.StringToDate(datetime, \"yyyy-MM-dd\"))", "oscar.util.UtilDateUtilities.StringToDate(java.lang.String,java.lang.String)"], "Fixed commit": "bb52e125ebcf7ea4b5fa5802fe1964902bf7fccb", "Url": "https://api.github.com/repos/scoophealth/oscar", "Date": "2013-08-20T16:07:29Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((m.getDateObserved()) == null) { m.setDateObserved(oscar.util.UtilDateUtilities.StringToDate(dateEntered, \"yyyy-MM-dd hh:mm:ss\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1078/buggy-version/src.main.java.oscar.oscarLab.ca.all.Hl7textResultsData.java", "BodyUseAPI": ["org.oscarehr.common.model.Measurement.setDateObserved(oscar.util.UtilDateUtilities.StringToDate(dateEntered, \"yyyy-MM-dd hh:mm:ss\"))"], "Fixed commit": "bb52e125ebcf7ea4b5fa5802fe1964902bf7fccb", "Url": "https://api.github.com/repos/scoophealth/oscar", "Date": "2013-08-20T16:07:29Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((componentsData.size()) == 0) { componentsData.add(\"No components found\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4868/buggy-version/app.src.main.java.com.exerciseapp.mattiapalmas.solovegan.ComponentsFragment.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "f57208c2916713670ebdbb36bae47650df0e4042", "Url": "https://api.github.com/repos/mattiaPalmas/MondoVegan", "Date": "2017-12-17T20:49:54Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((autoStrategy) != null) { autoStrategy.autoPeriodic(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5554/buggy-version/FtcRobotController.src.main.java.com.qualcomm.ftcrobotcontroller.opmodes.FtcAuto.java", "BodyUseAPI": [], "Fixed commit": "7ee43c14b5f2580c0ac0216899d147bcbc07e267", "Url": "https://api.github.com/repos/trc492/Ftc2016FirstResQ", "Date": "2015-11-02T06:17:51Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((autoStrategy) != null) { sm.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5554/buggy-version/FtcRobotController.src.main.java.com.qualcomm.ftcrobotcontroller.opmodes.FtcAuto.java", "BodyUseAPI": [], "Fixed commit": "7ee43c14b5f2580c0ac0216899d147bcbc07e267", "Url": "https://api.github.com/repos/trc492/Ftc2016FirstResQ", "Date": "2015-11-02T06:17:51Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((labelsBuilder.length()) != 1) labelsBuilder.deleteCharAt(((labelsBuilder.length()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2638/buggy-version/LabeledDocuments.src.main.java.com.elex.bigdata.labeledDocuments.LabeledDocReducer.java", "BodyUseAPI": ["java.lang.StringBuilder.length()", "java.lang.StringBuilder.deleteCharAt(int)"], "Fixed commit": "90154454af49ad36abb6fae04145b54a1c5025c6", "Url": "https://api.github.com/repos/elex-bigdata/Url_Count", "Date": "2014-03-25T10:22:41Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["in.dc297.mqttclpro.SSL.SSLUtil.getSocketFactory(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (mSocketFactory != null) connectOptions.setSocketFactory(mSocketFactory);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5375/buggy-version/app.src.main.java.in.dc297.mqttclpro.mqtt.internal.MQTTClients.java", "BodyUseAPI": ["org.eclipse.paho.client.mqttv3.MqttConnectOptions.setSocketFactory(javax.net.SocketFactory)"], "Fixed commit": "a8ed8468a7ee3270a02ec97fb5da2acca53e7f6f", "Url": "https://api.github.com/repos/dc297/mqttclpro", "Date": "2017-12-19T12:47:14Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (annotation instanceof be.maximvdw.placeholderapi.internal.ModuleDescription) { setDescription(((be.maximvdw.placeholderapi.internal.ModuleDescription) (annotation)).value()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/735/buggy-version/src.main.java.be.maximvdw.placeholderapi.internal.PlaceholderPack.java", "BodyUseAPI": [], "Fixed commit": "0af64032ad5cf44877b76679367f7b67cafe30e7", "Url": "https://api.github.com/repos/Maximvdw/MVdWPlaceholderAPI", "Date": "2017-11-27T13:31:11Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(fastaIndexManager.isConnected())) { fastaIndexManager.index(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/311/buggy-version/cellbase-app.src.main.java.org.opencb.cellbase.app.transform.GeneParser.java", "BodyUseAPI": ["org.opencb.biodata.tools.sequence.fasta.FastaIndexManager.index()"], "Fixed commit": "f3d1135c69e669e5a3a44d8ed167ba8865c80201", "Url": "https://api.github.com/repos/opencb/cellbase", "Date": "2016-01-29T11:21:22Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (sv != null) { if ((instance.simpleVariantInspector) != null) { instance.simpleVariantInspector.setSimpleVariant(sv); } if ((instance.otherIndividualsVariantSubInspector) != null) { instance.otherIndividualsVariantSubInspector.handleEvent(sv); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/694/buggy-version/MedSavantClient.src.main.java.org.ut.biolab.medsavant.client.view.genetics.inspector.ComprehensiveInspector.java", "BodyUseAPI": ["org.ut.biolab.medsavant.client.view.genetics.variantinfo.OtherIndividualsVariantSubInspector.handleEvent(org.ut.biolab.medsavant.client.view.genetics.variantinfo.SimpleVariant)", "org.ut.biolab.medsavant.client.view.genetics.variantinfo.SimpleVariantSubInspector.setSimpleVariant(org.ut.biolab.medsavant.client.view.genetics.variantinfo.SimpleVariant)"], "Fixed commit": "dbae1312b513e937b154043b72fdf82f34c7f864", "Url": "https://api.github.com/repos/compbio-UofT/medsavant", "Date": "2013-08-22T21:56:18Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((simpleVariantInspector.getSelectedGene()) != null) { setGene(simpleVariantInspector.getSelectedGene()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/694/buggy-version/MedSavantClient.src.main.java.org.ut.biolab.medsavant.client.view.genetics.inspector.ComprehensiveInspector.java", "BodyUseAPI": ["org.ut.biolab.medsavant.client.view.genetics.variantinfo.SimpleVariantSubInspector.getSelectedGene()", "org.ut.biolab.medsavant.client.view.genetics.inspector.ComprehensiveInspector.7.setGene(simpleVariantInspector.getSelectedGene())"], "Fixed commit": "dbae1312b513e937b154043b72fdf82f34c7f864", "Url": "https://api.github.com/repos/compbio-UofT/medsavant", "Date": "2013-08-22T21:56:18Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((simpleVariantInspector.getSimpleVariant()) != null) { setSimpleVariant(simpleVariantInspector.getSimpleVariant()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/694/buggy-version/MedSavantClient.src.main.java.org.ut.biolab.medsavant.client.view.genetics.inspector.ComprehensiveInspector.java", "BodyUseAPI": ["org.ut.biolab.medsavant.client.view.genetics.inspector.ComprehensiveInspector.7.setSimpleVariant(simpleVariantInspector.getSimpleVariant())", "org.ut.biolab.medsavant.client.view.genetics.variantinfo.SimpleVariantSubInspector.getSimpleVariant()"], "Fixed commit": "dbae1312b513e937b154043b72fdf82f34c7f864", "Url": "https://api.github.com/repos/compbio-UofT/medsavant", "Date": "2013-08-22T21:56:18Z"},
{"Line": "=>1156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.teamshi.collectionsystem3.DataManager.getHole(holeId).isApproved()) { addRigButton.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/138/buggy-version/app.src.main.java.com.teamshi.collectionsystem3.RigIndexActivity.java", "BodyUseAPI": [], "Fixed commit": "f36443fb15cd1e99269fa0d6a0d2c01f3071273d", "Url": "https://api.github.com/repos/TeamShi/CollectionSystem3", "Date": "2016-12-19T11:11:09Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles(java.io.FileFilter)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (files == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1901/buggy-version/src.net.sourceforge.vietocr.util.Utils.java", "BodyUseAPI": [], "Fixed commit": "95e9e8fd87c5564c175cd75981b0a55be1277887", "Url": "https://api.github.com/repos/rimas-kudelis/VietOCR3", "Date": "2016-04-02T14:05:00Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((traversal.getEndStep()) instanceof org.apache.tinkerpop.gremlin.process.traversal.step.Barrier)) traversal.addStep(new org.apache.tinkerpop.gremlin.process.traversal.step.map.NoOpBarrierStep(traversal, org.apache.tinkerpop.gremlin.process.remote.traversal.strategy.decoration.RemoteStrategy.MAX_BARRIER_SIZE));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5045/buggy-version/gremlin-core.src.main.java.org.apache.tinkerpop.gremlin.process.remote.traversal.strategy.decoration.RemoteStrategy.java", "BodyUseAPI": ["traversal.addStep(org.apache.tinkerpop.gremlin.process.traversal.step.map.NoOpBarrierStep)"], "Fixed commit": "080306b099b3ca5dbf5bf5041447fd1a0557b9cb", "Url": "https://api.github.com/repos/apache/tinkerpop", "Date": "2017-02-15T22:07:53Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["unii.draft.mtg.parings.logic.pojo.Player.getPlayedGame()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (games == null) { return unii.draft.mtg.parings.buisness.algorithm.base.PlayersComparator.EQUAL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6468/buggy-version/MTGDraftParingApp.draftMTGParings.src.main.java.unii.draft.mtg.parings.buisness.algorithm.base.PlayersComparator.java", "BodyUseAPI": [], "Fixed commit": "efa0db34a082f822c5efd45f190f0add648c7c28", "Url": "https://api.github.com/repos/apachucy/MTGDraftParingApp", "Date": "2017-12-23T11:41:21Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((player.getPlayedGame()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6468/buggy-version/MTGDraftParingApp.draftMTGParings.src.main.java.unii.draft.mtg.parings.logic.pojo.Player.java", "BodyUseAPI": [], "Fixed commit": "efa0db34a082f822c5efd45f190f0add648c7c28", "Url": "https://api.github.com/repos/apachucy/MTGDraftParingApp", "Date": "2017-12-23T11:41:21Z"},
{"Line": "=>2209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Method.invoke(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((constructor != null) && ((parameters.size()) == 0)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/169/buggy-version/src.main.java.com.alibaba.fastjson.util.TypeUtils.java", "BodyUseAPI": [], "Fixed commit": "0e9063e82267127f7464f6945dff85a9a8786127", "Url": "https://api.github.com/repos/FlakyTestDetection/fastjson", "Date": "2017-11-10T15:51:31Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (effectiveEvents == null) { effectiveEvents = new java.util.ArrayList<com.microsoft.azure.eventhubs.EventData>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2569/buggy-version/azure-eventhubs-eph.src.main.java.com.microsoft.azure.eventprocessorhost.EventHubPartitionPump.java", "BodyUseAPI": [], "Fixed commit": "97a0ddc7637971dcbeec257bfc69dff0fc05a174", "Url": "https://api.github.com/repos/Azure/azure-event-hubs-java", "Date": "2017-03-02T21:23:13Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((!(selectedDish.equals(\"1\"))) && (!(selectedDish.equals(\"2\")))) && (!(selectedDish.equals(\"3\")))) { eu.trentorise.smartcampus.ifame.tabs.MenuGiornoFragment.StartWebSearchAlertDialog dialog = new eu.trentorise.smartcampus.ifame.tabs.MenuGiornoFragment.StartWebSearchAlertDialog(); dialog.show(getFragmentManager(), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3335/buggy-version/src.eu.trentorise.smartcampus.ifame.tabs.MenuGiornoFragment.java", "BodyUseAPI": [], "Fixed commit": "f9753898bf21899d5e7c6a103e2f250696d626c6", "Url": "https://api.github.com/repos/smartcampuslab/smartcampus.vas.ifame.android", "Date": "2013-07-10T09:18:21Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Thread.getContextClassLoader()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (classLoader == null) { classLoader = java.lang.Class.class.getClassLoader(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2054/buggy-version/src.main.java.com.wirecard.acqp.two.MsgAccessoryImpl.java", "BodyUseAPI": [], "Fixed commit": "7f365c4fcc41fd3acaacb3148c62cf49e6d6e13c", "Url": "https://api.github.com/repos/wakantanka/get_iso_8583", "Date": "2014-02-13T13:10:48Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["instance.getCamera().convertCanvasToWorld(java.awt.Point)", "instance.getCamera().convertCanvasToWorld(java.awt.Point)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((p1.getY()) < (p2.getY())) { lowerY = ((float) (p1.getY())); higherY = ((float) (p2.getY())); }else { lowerY = ((float) (p2.getY())); higherY = ((float) (p1.getY())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1339/buggy-version/netbeans-process-sketcher.src.bropals.processsketcher.SelectionManager.java", "BodyUseAPI": ["java.awt.geom.Point2D.Float.getY()", "java.awt.geom.Point2D.Float.getY()", "java.awt.geom.Point2D.Float.getY()", "java.awt.geom.Point2D.Float.getY()"], "Fixed commit": "7564bed2cfa04649e79d085256bb006b743f9061", "Url": "https://api.github.com/repos/Bro-Pals/process_sketcher", "Date": "2015-06-15T22:52:37Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((distance < nearestDistance) && ((p.getX()) > lowerX)) && ((p.getX()) < higherX)) && ((p.getY()) > lowerY)) && ((p.getY()) < higherY)) { nearestDistance = distance; thing = nl; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1339/buggy-version/netbeans-process-sketcher.src.bropals.processsketcher.SelectionManager.java", "BodyUseAPI": [], "Fixed commit": "7564bed2cfa04649e79d085256bb006b743f9061", "Url": "https://api.github.com/repos/Bro-Pals/process_sketcher", "Date": "2015-06-15T22:52:37Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data.streamingCache) == null) { data.factory = new org.pentaho.metastore.persist.MetaStoreFactory<org.pentaho.di.streaming.StreamingService>(org.pentaho.di.streaming.StreamingService.class, data.store, org.pentaho.metastore.util.PentahoDefaults.NAMESPACE); data.service = data.factory.loadElement(serviceName); java.lang.String slaveName = environmentSubstitute(meta.getSlaveServer()); data.slaveServer = getTransMeta().findSlaveServer(slaveName); if ((data.slaveServer) == null) { throw new org.pentaho.di.core.exception.KettleException(((\"Unable to find slave server '\" + slaveName) + \"'\")); } data.streamingCache = data.service.getStreamingCache(log, serviceName, data.slaveServer); log.logBasic(((\"Streaming cache for service '\" + serviceName) + \"' found through a web service call\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7810/buggy-version/src.org.pentaho.di.streaming.trans.steps.readcache.GetStreamingCache.java", "BodyUseAPI": [], "Fixed commit": "9647a737b1d553c6be1621a46a61c58fdb331c9d", "Url": "https://api.github.com/repos/mattcasters/pentaho-pdi-streaming", "Date": "2016-12-02T09:24:20Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getTrans().getContainerObjectId()) != null) { log.logBasic(\"We are running on a server, let's try to find the cache directly...\"); data.streamingCache = org.pentaho.di.streaming.www.cache.StreamingCache.getInstance().get(serviceName); if ((data.streamingCache) != null) { log.logBasic(((\"Streaming cache for service '\" + serviceName) + \"' found directly on the server\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7810/buggy-version/src.org.pentaho.di.streaming.trans.steps.readcache.GetStreamingCache.java", "BodyUseAPI": [], "Fixed commit": "9647a737b1d553c6be1621a46a61c58fdb331c9d", "Url": "https://api.github.com/repos/mattcasters/pentaho-pdi-streaming", "Date": "2016-12-02T09:24:20Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bento.lang.Definition.getSubdefInContext(bento.runtime.Context)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (this.equals(contextDef)) { return getFullName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8047/buggy-version/src.bento.lang.AnonymousDefinition.java", "BodyUseAPI": [], "Fixed commit": "35f5f48121a0a9b246264694fe478785f3b4ac40", "Url": "https://api.github.com/repos/bentodev/bentolang", "Date": "2016-03-28T13:07:36Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (err != null) { retrofit.client.Response resp = err.getResponse(); android.util.Log.v(\"Error :\", (\"err: \" + (resp.toString()))); return err; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5326/buggy-version/Code.BarScanner.app.src.main.java.fun.mota.com.barscanner.net.NetworkService.java", "BodyUseAPI": ["retrofit.RetrofitError.getResponse()"], "Fixed commit": "3bd9d1c6b60ce686f33ffd4c15d4af7c31494823", "Url": "https://api.github.com/repos/shailesh-mota/Test-Apps", "Date": "2017-01-28T18:28:49Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.web.util.ContentCachingResponseWrapper.getContentAsByteArray()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((body.length) > 0) { rawResponse.setContentLength(body.length); org.springframework.util.StreamUtils.copy(body, rawResponse.getOutputStream()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/237/buggy-version/src.main.java.com.nitorcreations.puggly.LoggingFilter.java", "BodyUseAPI": ["org.springframework.util.StreamUtils.copy(byte[],rawResponse.getOutputStream())", "javax.servlet.http.HttpServletResponse.setContentLength(int)"], "Fixed commit": "9d319dd9f1cacb1b8c26b9c56ca8beaadd346c95", "Url": "https://api.github.com/repos/NitorCreations/Puggly", "Date": "2015-06-12T07:19:14Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (value != 0) { (nonZeroBuckets)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1552/buggy-version/stats.src.main.java.com.facebook.stats.cardinality.HyperLogLog.java", "BodyUseAPI": [], "Fixed commit": "07fb343b5979062d9b859a26277dd5273d671972", "Url": "https://api.github.com/repos/zhou-jered/jcommon", "Date": "2016-03-29T01:43:43Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isBlank(org.wso2.carbon.identity.sso.saml.util.SAMLSSOUtil.getTenantDomainFromThreadLocal())) { org.wso2.carbon.identity.sso.saml.util.SAMLSSOUtil.setTenantDomainInThreadLocal(MultitenantConstants.SUPER_TENANT_DOMAIN_NAME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8835/buggy-version/components.sso-saml.org.wso2.carbon.identity.sso.saml.src.main.java.org.wso2.carbon.identity.sso.saml.validators.IdPInitSSOAuthnRequestValidator.java", "BodyUseAPI": [], "Fixed commit": "3bbb237ea1006a3c73a0470d0ec5f99f45cb60d7", "Url": "https://api.github.com/repos/thanujalk/carbon-identity", "Date": "2015-11-29T07:52:50Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (authors.isEmpty()) return new java.lang.String();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3832/buggy-version/src.main.java.com.silicolife.textmining.processes.ir.epopatent.opshandler.OPSPatentUpdateHandler.java", "BodyUseAPI": [], "Fixed commit": "7bd45cbadd2d73f3beb4592f4391713c77fdfc5a", "Url": "https://api.github.com/repos/biotextmining/processes", "Date": "2017-08-31T15:23:13Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(keys.exists())) { keys.mkdir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8779/buggy-version/src.main.java.WHS_planner.Main.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "292ad6483ed22c34dac470d3103402dc8f051f23", "Url": "https://api.github.com/repos/s0urc3d3v3l0pm3nt/whs_planner", "Date": "2016-12-05T16:31:43Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isEmpty(copyFromVersionSlug)) { setDefaultCopyFromVersion(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2531/buggy-version/zanata-war.src.main.java.org.zanata.action.VersionHome.java", "BodyUseAPI": [], "Fixed commit": "cfa8179b1f6a6435c2eb2b8603d31e33deb39604", "Url": "https://api.github.com/repos/zanata/zanata-server", "Date": "2014-10-27T22:31:28Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((sprite.parent) != null) sprite.parent.add(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1730/buggy-version/src.com.shatteredpixel.shatteredpixeldungeon.effects.Pushing.java", "BodyUseAPI": [], "Fixed commit": "e4e12f74dd5b220d3fe672223c0a94b5998d4466", "Url": "https://api.github.com/repos/00-Evan/shattered-pixel-dungeon", "Date": "2015-01-17T09:00:05Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fields != null) { for (java.lang.String field : fields) { this.fields.add(field); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1525/buggy-version/src.main.java.com.scaleset.search.QueryBuilder.java", "BodyUseAPI": [], "Fixed commit": "6057dbd5008235f32b39146d3d9c2f3b9ac6437e", "Url": "https://api.github.com/repos/owms/scaleset-search", "Date": "2014-11-07T19:55:43Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((optimizationSenseMaster) == (org.jorlib.frameworks.columnGeneration.master.OptimizationSense.MINIMIZE)) this.lowerBoundOnObjective = this.objectiveIncumbentSolution; else this.upperBoundOnObjective = this.objectiveIncumbentSolution;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3948/buggy-version/jorlib-core.src.main.java.org.jorlib.frameworks.columnGeneration.branchAndPrice.AbstractBranchAndPrice.java", "BodyUseAPI": [], "Fixed commit": "75534ad121fc87cd87602709b605b44b002f6b7d", "Url": "https://api.github.com/repos/jkinable/jorlib", "Date": "2015-10-06T03:54:46Z"},
{"Line": "=>586", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (initialSelection != 0) publishers.setSelection(initialSelection);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2861/buggy-version/src.com.myMinistry.fragments.SummaryFragment.java", "BodyUseAPI": ["com.myMinistry.model.PublisherSpinner.setSelection(int)"], "Fixed commit": "2b7c983ea660dddfb6469853862d767ca172ad67", "Url": "https://api.github.com/repos/derekwinstead/my-ministry-assistant", "Date": "2014-10-21T18:02:09Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fileList) != null) java.util.Arrays.sort(fileList); else fileList = new java.lang.String[0];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2861/buggy-version/src.com.myMinistry.fragments.DBBackupsListFragment.java", "BodyUseAPI": [], "Fixed commit": "2b7c983ea660dddfb6469853862d767ca172ad67", "Url": "https://api.github.com/repos/derekwinstead/my-ministry-assistant", "Date": "2014-10-21T18:02:09Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fileList) != null) java.util.Arrays.sort(fileList); else fileList = new java.lang.String[0];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2861/buggy-version/src.com.myMinistry.fragments.DBBackupsListFragment.java", "BodyUseAPI": [], "Fixed commit": "2b7c983ea660dddfb6469853862d767ca172ad67", "Url": "https://api.github.com/repos/derekwinstead/my-ministry-assistant", "Date": "2014-10-21T18:02:09Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (initialSelection != 0) publishers.setSelection(initialSelection);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2861/buggy-version/src.com.myMinistry.fragments.TimeEntriesFragment.java", "BodyUseAPI": ["com.myMinistry.model.PublisherSpinner.setSelection(int)"], "Fixed commit": "2b7c983ea660dddfb6469853862d767ca172ad67", "Url": "https://api.github.com/repos/derekwinstead/my-ministry-assistant", "Date": "2014-10-21T18:02:09Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fredboat.orchestrator.Allocator.getLowestAvailableChunk()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (chunk == (-1)) { throw new java.lang.IllegalStateException(\"Can't allocate new shards! All shards are already taken.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6902/buggy-version/Orchestrator.src.main.java.fredboat.orchestrator.Allocator.java", "BodyUseAPI": [], "Fixed commit": "77a1e17741491afdf86d6b8e89dc66402b2f34e4", "Url": "https://api.github.com/repos/napstr/FredBoat", "Date": "2017-04-28T19:49:26Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Driver.game.getLevelList().get(Driver.game.getCurrentLevel())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (curLevel.hasRope()) { g2d.drawLine(curLevel.getRope().getX(), curLevel.getRope().getY(), curLevel.getRope().getX(), curLevel.getHeight()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6659/buggy-version/java.src.Driver.java", "BodyUseAPI": ["Level.getRope()", "Level.getRope()", "java.awt.Graphics2D.drawLine(curLevel.getRope().getX(),curLevel.getRope().getY(),curLevel.getRope().getX(),curLevel.getHeight())", "Level.getRope()", "Level.getHeight()", "curLevel.getRope().getX()", "curLevel.getRope().getX()", "curLevel.getRope().getY()"], "Fixed commit": "90f37de4ce79746e8901cb54d2df53eba75570f1", "Url": "https://api.github.com/repos/Ishadijcks/SEMgroup32", "Date": "2015-09-03T12:36:54Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(tables.isEmpty())) { updateTable(tables.get(slider.getValue())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1505/buggy-version/src.pe1314.g11.gui.ResultsPanel.java", "BodyUseAPI": ["java.util.List<java.util.List<java.lang.String[]>>.get(int)", "pe1314.g11.gui.ResultsPanel.updateTable(java.util.List<java.lang.String[]>)"], "Fixed commit": "e3423e713a6d380523e460224e77607fff238578", "Url": "https://api.github.com/repos/SalamiCo/PEvol", "Date": "2014-03-21T11:21:25Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.tableExists(conn, ResourceStresserConstants.TABLENAME_IOINTEXPONENTIAL)) && (this.tableExists(conn, ResourceStresserConstants.TABLENAME_IOINTSTORE))) { stmt.execute((((\"INSERT INTO \" + (ResourceStresserConstants.TABLENAME_IOINTEXPONENTIAL)) + \" SELECT * FROM \") + (ResourceStresserConstants.TABLENAME_IOINTSTORE))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8393/buggy-version/src.com.oltpbenchmark.benchmarks.resourcestresser.ResourceStresserBenchmark.java", "BodyUseAPI": [], "Fixed commit": "daed46bb4026ead796f6fc88c9c57f7a2865852a", "Url": "https://api.github.com/repos/dvanaken/oltpbench", "Date": "2017-11-20T15:32:42Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index > 0) { java.lang.String lineNumber = typeLine.substring((index + 1), typeLine.length()).trim(); line = java.lang.Integer.valueOf(lineNumber).intValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8240/buggy-version/org.eclipse.jdt.productivity.openfromexternalevent.src.org.eclipse.jdt.productivity.openfromexternalevent.actions.OpenFromExternalEventAction.java", "BodyUseAPI": ["java.lang.String.trim()", "java.lang.String.substring(int,int)"], "Fixed commit": "7e1dac2fedaafb0d4d1650be8f402f0943d4850f", "Url": "https://api.github.com/repos/cbos/OpenFromExternalEvent", "Date": "2014-03-27T09:42:22Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentPage) == null) try { currentPage = getNextResultsPage().iterator(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3198/buggy-version/src.main.java.com.elasticthree.projectparser.RemoteRepoParser.java", "BodyUseAPI": [], "Fixed commit": "a1c3f54b4b2b51b652ac7dd390bc664ad8d9e602", "Url": "https://api.github.com/repos/ElasticThree/github-repo-parser", "Date": "2016-09-07T19:40:27Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (maxWidth == (NO_MAXIMUM)) { return new android.graphics.Rect[]{ new android.graphics.Rect(0, 0, java.lang.Math.max(topSize.width(), bottomSize.width()), operatorHeight), topSize, bottomSize }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5495/buggy-version/src.org.teaminfty.math_dragon.view.math.MathOperationDivide.java", "BodyUseAPI": [], "Fixed commit": "ed86aaf4bf9ea2dcd44e5f2b0bb407fe21b3a259", "Url": "https://api.github.com/repos/denu12/math-dragon", "Date": "2013-12-13T18:36:13Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getChild(0).getBoundingBox(int,org.teaminfty.math_dragon.view.math.NO_MAXIMUM)", "getChild(1).getBoundingBox(int,org.teaminfty.math_dragon.view.math.NO_MAXIMUM)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((topSize.width()) < maxWidth) || ((bottomSize.width()) < maxWidth)) { final float factor = (maxWidth == (NO_MAXIMUM)) ? 1.0F : ((float) (maxWidth)) / (java.lang.Math.max(topSize.width(), bottomSize.width())); topSize.set(0, 0, ((int) ((topSize.width()) * factor)), topSize.height()); bottomSize.set(0, 0, ((int) ((bottomSize.width()) * factor)), bottomSize.height()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5495/buggy-version/src.org.teaminfty.math_dragon.view.math.MathOperationDivide.java", "BodyUseAPI": ["android.graphics.Rect.height()", "android.graphics.Rect.width()", "android.graphics.Rect.width()", "android.graphics.Rect.height()", "java.lang.Math.max(topSize.width(),bottomSize.width())", "android.graphics.Rect.set(int,int,((int) ((topSize.width()) * factor)),topSize.height())", "android.graphics.Rect.set(int,int,((int) ((bottomSize.width()) * factor)),bottomSize.height())", "android.graphics.Rect.width()", "android.graphics.Rect.width()"], "Fixed commit": "ed86aaf4bf9ea2dcd44e5f2b0bb407fe21b3a259", "Url": "https://api.github.com/repos/denu12/math-dragon", "Date": "2013-12-13T18:36:13Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.domain.equalsIgnoreCase(\"integer\")) { java.lang.Integer a = min.intValue(); java.lang.Integer b = max.intValue(); setRange(agh.aq21gui.utils.Util.strings(a.toString(), b.toString())); }else { setRange(agh.aq21gui.utils.Util.strings(min.toString(), max.toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4396/buggy-version/backend-rest.src.main.java.agh.aq21gui.model.input.Domain.java", "BodyUseAPI": [], "Fixed commit": "8effde6f2e390f8cef6c9c2cce253398baa4ec07", "Url": "https://api.github.com/repos/mpasko/visualisation", "Date": "2013-12-14T13:03:19Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mFirstTrun) { mFirstTrun = false; java.io.File bakFile = new java.io.File(((mPath) + \".bak\")); if (bakFile.isFile()) { bakFile.delete(); } file.renameTo(bakFile); }else { file.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8447/buggy-version/app.src.main.java.net.xndroid.utils.LogUtils.java", "BodyUseAPI": [], "Fixed commit": "a00470ac984fe8209c960c177a45f25ec74af8bf", "Url": "https://api.github.com/repos/XndroidDev/Xndroid", "Date": "2017-12-12T17:07:56Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JList<java.lang.String>.getSelectedIndex()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index_sel != (-1)) plug_lay.getRequete().setTexteRequete(metier.GestionnaireExemples.getTab_req()[index_sel]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6126/buggy-version/src.listeners.AuditeurBoutonOkExemple.java", "BodyUseAPI": ["plug_lay.getRequete().setTexteRequete(metier.GestionnaireExemples.getTab_req()[index_sel])"], "Fixed commit": "3e11fe067e2f9ba0b8106116097250db49dabf3b", "Url": "https://api.github.com/repos/mmarcot/ObsTAPQuery", "Date": "2014-07-23T14:31:56Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["to.etc.domui.component.input.ClassMetaModel.getLookupSelectedProperties()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((l.size()) == 0) l = cmm.getTableDisplayProperties();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5515/buggy-version/to.etc.domui.src.main.java.to.etc.domui.component.input.SimpleLookupInputRenderer.java", "BodyUseAPI": [], "Fixed commit": "8bbd0a02d86c9f1aa5e24566bee3484f12b8c649", "Url": "https://api.github.com/repos/fjalvingh/domui", "Date": "2017-10-26T10:05:49Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((h + pHeight) >= (PlayerSkeleton.ROWS)) { return -1000; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1192/buggy-version/src.PlayerSkeleton.java", "BodyUseAPI": [], "Fixed commit": "6d45de5396fb4904de10092b934dc08cfe09a9c2", "Url": "https://api.github.com/repos/AnHaNguyen/CS3243Project", "Date": "2016-03-17T16:26:00Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (format == (org.jboss.pressgang.ccms.rest.v1.entities.enums.RESTXMLFormat.DOCBOOK_50)) { fixedXML = org.jboss.pressgang.ccms.ui.client.local.utilities.DocBookUtilities.addDocBook50Namespaces(org.jboss.pressgang.ccms.ui.client.local.utilities.XMLUtilities.removeAllPreamble(xml)); }else { fixedXML = org.jboss.pressgang.ccms.ui.client.local.utilities.XMLUtilities.removeAllPreamble(xml); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6431/buggy-version/src.main.java.org.jboss.pressgang.ccms.ui.client.local.utilities.XMLValidator.java", "BodyUseAPI": [], "Fixed commit": "037b8054365d57464d8d18530e6281b4ec0e4729", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSUI", "Date": "2014-07-03T05:37:27Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (doc.getDocumentElement().getNodeName().equalsIgnoreCase(\"section\")) { final com.google.gwt.xml.client.NodeList subSections = doc.getDocumentElement().getElementsByTagName(\"section\"); if ((subSections.getLength()) > 0) { for (int i = 0; i < (subSections.getLength()); i++) { final int line = numEntityLines + (org.jboss.pressgang.ccms.ui.client.local.utilities.XMLValidator.getLineNumberFromElement(((com.google.gwt.xml.client.Element) (subSections.item(i))))); retValue.append((((\"topic.xml:\" + line) + \": element section: validity error : Nested sections cannot be \") + \"used in topics. Please consider breaking the content into multiple topics\\n\")); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6431/buggy-version/src.main.java.org.jboss.pressgang.ccms.ui.client.local.utilities.XMLValidator.java", "BodyUseAPI": ["com.google.gwt.xml.client.Document.getDocumentElement()", "doc.getDocumentElement().getElementsByTagName(java.lang.String)"], "Fixed commit": "037b8054365d57464d8d18530e6281b4ec0e4729", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSUI", "Date": "2014-07-03T05:37:27Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.etools.ei18n.util.EI18NUtil.getFile(org.eclipse.jdt.core.IJavaElement)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (javaFile != null) { for (org.eclipse.etools.ei18n.util.MappingPreference pref : org.eclipse.etools.ei18n.util.MappingPreference.list(javaFile.getProject())) { if (pref.getJavaFile().equals(javaFile)) { hyperlinksCollector.add(new org.eclipse.etools.ei18n.EI18NHyperlink(wordRegion, openAction, element, qualify)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6472/buggy-version/src.org.eclipse.etools.ei18n.EI18NHyperlinkDetector.java", "BodyUseAPI": ["org.eclipse.core.resources.IFile.getProject()", "pref.getJavaFile().equals(org.eclipse.core.resources.IFile)", "org.eclipse.etools.ei18n.util.MappingPreference.list(javaFile.getProject())"], "Fixed commit": "5e347c82dd2255d917d0bad5e8a4bf22fc190667", "Url": "https://api.github.com/repos/cmoine/eclipe-tools", "Date": "2015-03-25T11:07:34Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (res instanceof org.eclipse.core.resources.IFile) return ((org.eclipse.core.resources.IFile) (res));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6472/buggy-version/src.org.eclipse.etools.ei18n.util.EI18NUtil.java", "BodyUseAPI": [], "Fixed commit": "5e347c82dd2255d917d0bad5e8a4bf22fc190667", "Url": "https://api.github.com/repos/cmoine/eclipe-tools", "Date": "2015-03-25T11:07:34Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((payload) == null) || (map == null)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3620/buggy-version/src.gui.org.deidentifier.arx.gui.worker.WorkerLoad.java", "BodyUseAPI": [], "Fixed commit": "d83659a994ac131133353a00c8377384c3f29ffc", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2015-02-24T12:25:57Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((i < (this.map.length)) && (i >= 0)) && (j < (this.map[0].length))) && (j >= 0)) if ((this.map[i][j]) == (dataContainer.GridState.Target)) { goals.add(new dataContainer.Coordinate(i, j, 0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4858/buggy-version/src.core.Map.java", "BodyUseAPI": ["java.util.ArrayList<dataContainer.Coordinate>.add(dataContainer.Coordinate)"], "Fixed commit": "d50cee5642f0e9ea462a73316b02b7cebe621fb4", "Url": "https://api.github.com/repos/probject22/SneakyThief4", "Date": "2015-05-28T11:25:07Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj instanceof de.splashfish.util.FileShift) { de.splashfish.util.FileShift shift = ((de.splashfish.util.FileShift) (obj)); return (from.equals(shift.get(de.splashfish.util.FileShift.FROM_FILE))) && (to.equals(shift.get(de.splashfish.util.FileShift.TO_FILE))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2173/buggy-version/Le-css.src.de.splashfish.util.FileShift.java", "BodyUseAPI": [], "Fixed commit": "c2b1d304199e3829b12f320a996ff905d01b788f", "Url": "https://api.github.com/repos/lukasdietrich/Le-css", "Date": "2012-09-15T23:15:18Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((sample.getSampleCollection1()) == null) || (sample.getSampleCollection1().isEmpty())) || ((sample.getSampleCollection1().iterator().next()) == null)) { sampleFacadeRest.removeNullHierarchy(sample.getSampleId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1203/buggy-version/silentlake-service.src.main.java.ca.on.oicr.silentlake.service.impl.DefaultHierarchyService.java", "BodyUseAPI": ["io.seqware.webservice.controller.CustomSampleFacadeREST.removeNullHierarchy(sample.getSampleId())", "io.seqware.webservice.generated.model.Sample.getSampleId()"], "Fixed commit": "bfbbd4040c46fcc72d2f12a6b672de05f6203fd5", "Url": "https://api.github.com/repos/seqprodbio/silentlake", "Date": "2014-07-11T20:31:33Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (url.contains(\"/app/jfzs\")) { view.getContext().startActivity(new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse(url))); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7133/buggy-version/app.src.main.java.com.jinjunhang.onlineclass.ui.activity.UpgradeActivity.java", "BodyUseAPI": ["view.getContext().startActivity(android.content.Intent)", "android.net.Uri.parse(java.lang.String)"], "Fixed commit": "3fe13b695935af0618a7d9b101643518792ffff4", "Url": "https://api.github.com/repos/jjhlzn/OnlineClassAndroid", "Date": "2016-07-30T01:04:29Z"},
{"Line": "=>669", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((position.getNettoSumme()) != null) { if (showInvoices == true) { java.math.BigDecimal invoicedSumForPosition = org.projectforge.business.fibu.RechnungDao.getNettoSumme(invoicePositionsByOrderPositionId); java.math.BigDecimal notInvoicedSumForPosition = position.getNettoSumme().subtract(invoicedSumForPosition); fs.add(new org.projectforge.web.wicket.flowlayout.DivTextPanel(fs.newChildId(), org.projectforge.business.utils.CurrencyFormatter.format(notInvoicedSumForPosition))); }else { fs.add(new org.projectforge.web.wicket.flowlayout.DivTextPanel(fs.newChildId(), org.projectforge.business.utils.CurrencyFormatter.format(position.getNettoSumme()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2520/buggy-version/projectforge-wicket.src.main.java.org.projectforge.web.fibu.AuftragEditForm.java", "BodyUseAPI": ["org.projectforge.business.fibu.AuftragsPositionDO.getNettoSumme()", "position.getNettoSumme().subtract(java.math.BigDecimal)", "org.projectforge.business.fibu.AuftragsPositionDO.getNettoSumme()", "org.projectforge.business.utils.CurrencyFormatter.format(position.getNettoSumme())", "org.projectforge.web.wicket.flowlayout.FieldsetPanel.add(org.projectforge.web.wicket.flowlayout.DivTextPanel)"], "Fixed commit": "36f23718111c12e74ed4ac23273f0f56ed618a9a", "Url": "https://api.github.com/repos/FlowsenAusMonotown/projectforge", "Date": "2017-01-17T10:00:28Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mParticipantType) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8908/buggy-version/src.org.adaptlab.chpir.android.participanttracker.NewParticipantFragment.java", "BodyUseAPI": [], "Fixed commit": "bbde61f376a1ef5f7115e54e5d66b7495df11aa6", "Url": "https://api.github.com/repos/DukeMobileTech/ParticipantTracker", "Date": "2017-10-02T17:00:17Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bb_loc == null) { sender.sendMessage(((plugin.pluginName) + \"Could not get the location of the TARDIS!\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6424/buggy-version/src.main.java.me.eccentric_nz.TARDIS.commands.TARDISAdminCommands.java", "BodyUseAPI": [], "Fixed commit": "3fa8bc431a89c5559ba96b0fc8a56991dc53b604", "Url": "https://api.github.com/repos/eccentricdevotion/TARDIS", "Date": "2013-02-10T00:59:52Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((afpChain.getAlnLength()) < 1) { return map; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6880/buggy-version/biojava3-structure.src.main.java.org.biojava.bio.structure.align.util.AlignmentTools.java", "BodyUseAPI": [], "Fixed commit": "20a417c1b125e3832f1e430a30e2febb6e324957", "Url": "https://api.github.com/repos/andreasprlic/biojava", "Date": "2014-03-14T20:42:48Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (files == null) { return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7666/buggy-version/upload-lib.src.main.java.com.ibm.ws.massive.upload.internal.MassiveUploader.java", "BodyUseAPI": [], "Fixed commit": "230379c4a49a96e66d1a5f2199d48329aa1340bc", "Url": "https://api.github.com/repos/WASdev/tool.lars", "Date": "2015-06-02T12:55:42Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((child.children.length) > 0) writeBytes(child, output);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7405/buggy-version/src.regions.Quadtree.java", "BodyUseAPI": ["regions.Quadtree.writeBytes(regions.Node,java.io.OutputStream)"], "Fixed commit": "e17a949a5357dd90eb64ef7d0db9b8a4e1e13570", "Url": "https://api.github.com/repos/TBMCPlugins/Regions", "Date": "2017-01-09T06:30:20Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((child.children.length) > 0) writeBytes(child, output);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7405/buggy-version/src.regions.Octree.java", "BodyUseAPI": ["regions.Octree.writeBytes(regions.Node,java.io.OutputStream)"], "Fixed commit": "e17a949a5357dd90eb64ef7d0db9b8a4e1e13570", "Url": "https://api.github.com/repos/TBMCPlugins/Regions", "Date": "2017-01-09T06:30:20Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (version == null) { result = com.Ben12345rocks.AdvancedCore.Util.Updater.Updater.UpdateResult.FAIL_SPIGOT; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5965/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Util.Updater.Updater.java", "BodyUseAPI": [], "Fixed commit": "01d43c53ec4ce9fad657aae7cf788cf52f8c85cd", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2017-08-11T18:04:23Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (GlobalData.shouldTick) engine.Screen.nextMusic = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3339/buggy-version/src.engine.Screen.java", "BodyUseAPI": [], "Fixed commit": "2e6d22fe63dfe325562894a68e6c88265899de97", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2016-04-05T23:43:05Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<intellimate.izou.system.ReloadableFile, java.util.List<intellimate.izou.system.FileSubscriber>>.get(intellimate.izou.system.ReloadableFile)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (subscribers == null) { java.util.List<intellimate.izou.system.FileSubscriber> subList = new java.util.ArrayList<>(); subList.add(fileSubscriber); fileSubscribers.put(reloadableFile, subList); }else { subscribers.add(fileSubscriber); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5150/buggy-version/src.main.java.intellimate.izou.system.FilePublisher.java", "BodyUseAPI": ["java.util.List<intellimate.izou.system.FileSubscriber>.add(intellimate.izou.system.FileSubscriber)"], "Fixed commit": "04805295cd304982ad4de78c8b104fc6bdcf8f33", "Url": "https://api.github.com/repos/intellimate/Izou", "Date": "2015-01-17T09:46:54Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["propertiesContainer.getProperties().propertyNames()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(keys.hasMoreElements())) { try { createDefaultPropertyFile(defaultPropertiesPath); } catch (java.io.IOException e) { context.logger.getLogger().error(\"Error while trying to copy the Default-Properties File\", e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5150/buggy-version/src.main.java.intellimate.izou.properties.PropertiesManager.java", "BodyUseAPI": [], "Fixed commit": "04805295cd304982ad4de78c8b104fc6bdcf8f33", "Url": "https://api.github.com/repos/intellimate/Izou", "Date": "2015-01-17T09:46:54Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name.startsWith(\"_\")) { name = \"a\" + name; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3721/buggy-version/src.com.iconmaster.source.link.platform.hppl.PlatformHPPL.java", "BodyUseAPI": [], "Fixed commit": "e1db2976fc0db2d1fa287046baa4742e1e0ebd05", "Url": "https://api.github.com/repos/iconmaster5326/Source", "Date": "2014-10-29T19:26:09Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name.startsWith(\"_\")) { name = \"a\" + name; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3721/buggy-version/src.com.iconmaster.source.link.platform.hppl.PlatformHPPL.java", "BodyUseAPI": [], "Fixed commit": "e1db2976fc0db2d1fa287046baa4742e1e0ebd05", "Url": "https://api.github.com/repos/iconmaster5326/Source", "Date": "2014-10-29T19:26:09Z"},
{"Line": "=>437", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((listItems.size()) == 0) { data = db.getAllData(); }else { data = db.getAllNewFrom(listItems.get(((listItems.size()) - 1)).getPushData()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5392/buggy-version/src.com.vhakulinen.pushtoolapp.MainActivity.java", "BodyUseAPI": ["listItems.get(((listItems.size()) - 1)).getPushData()", "java.util.List<com.vhakulinen.pushtoolapp.ListItem>.size()", "java.util.List<com.vhakulinen.pushtoolapp.ListItem>.get(((listItems.size()) - 1))", "com.vhakulinen.pushtoolapp.PushDataSource.getAllNewFrom(listItems.get(((listItems.size()) - 1)).getPushData())"], "Fixed commit": "e563be6608452a0d836c9c10b458cf74c51a4c96", "Url": "https://api.github.com/repos/vhakulinen/push-tool-android", "Date": "2015-04-14T13:53:40Z"},
{"Line": "=>1551", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gitblit.utils.StringUtils.getFirstPathElement(repository.name)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(com.gitblit.utils.StringUtils.isEmpty(projectPath))) { if (projectPath.equalsIgnoreCase(com.gitblit.GitBlit.getString(Keys.web.repositoryRootGroupName, \"main\"))) { repository.name = repository.name.substring(((projectPath.length()) + 1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2868/buggy-version/src.com.gitblit.GitBlit.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "repository.name.substring(int)", "java.lang.String.length()"], "Fixed commit": "2c60de580f6452365a6f25c998b7dd1ca68f7181", "Url": "https://api.github.com/repos/gitblit/gitblit", "Date": "2012-10-05T22:00:24Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.index.OSimpleKeyIndexDefinition.field(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (collatesNames != null) { com.orientechnologies.orient.core.index.OCompositeCollate collates = new com.orientechnologies.orient.core.index.OCompositeCollate(this); for (java.lang.String collateName : collatesNames) collates.addCollate(com.orientechnologies.orient.core.sql.OSQLEngine.getCollate(collateName)); this.collate = collates; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4517/buggy-version/core.src.main.java.com.orientechnologies.orient.core.index.OSimpleKeyIndexDefinition.java", "BodyUseAPI": [], "Fixed commit": "a92b5145e7e20707fd04df3a752691a934d0d3c9", "Url": "https://api.github.com/repos/sonatype/orientdb", "Date": "2015-10-05T15:32:27Z"},
{"Line": "=>653", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rw.contracts.containsKey(nt.name)) ret = rw.contracts.get(nt.name); else if (rw.cards.containsKey(nt.name)) ret = rw.cards.get(nt.name).struct; else throw new org.zinutils.exceptions.UtilException((\"Could not find type \" + (nt.name)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8601/buggy-version/src.main.java.org.flasck.flas.newtypechecker.TypeChecker2.java", "BodyUseAPI": ["rw.contracts.get(nt.name)", "rw.cards.get(nt.name)", "rw.cards.containsKey(nt.name)"], "Fixed commit": "3dbc3659cdd49c15195e52df6f2bc4e0346da007", "Url": "https://api.github.com/repos/zinikiGareth/flasckfl", "Date": "2016-11-07T18:30:00Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(s)) { if ((popupWindow) != null) popupWindow.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/9154/buggy-version/app.src.main.java.uk.co.jaspalsvoice.jv.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "354b22f406bc48f8a3669444f3a6fc8a03cc3182", "Url": "https://api.github.com/repos/skalyani-systango/JaspalsVoice", "Date": "2016-06-30T07:10:11Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.staxnav.StaxNavigatorImpl<N>.getAttributes()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(attributes.isEmpty())) { if (qualifiedAttributes.isEmpty()) { qualifiedAttributes = new java.util.HashMap<javax.xml.namespace.QName, java.lang.String>(qualifiedAttributes); } for (java.lang.String key : attributes.keySet()) { qualifiedAttributes.put(new javax.xml.namespace.QName(key), attributes.get(key)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7913/buggy-version/core.src.main.java.org.staxnav.StaxNavigatorImpl.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.Map<javax.xml.namespace.QName, java.lang.String>.put(javax.xml.namespace.QName,java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.keySet()"], "Fixed commit": "e81d98cdceea95501e08836fa9f90e8777c0ffef", "Url": "https://api.github.com/repos/defrancea/staxnav", "Date": "2011-08-01T07:54:51Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((transactionVS.getTagVS()) != null) { caption = getString(R.string.insufficient_cash_for_tagvs_caption, transactionVS.getTagVS().getName()); }else caption = getString(R.string.insufficient_cash_caption);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6117/buggy-version/VotingToolAndroidProject.VotingToolAndroid.src.main.java.org.votingsystem.android.fragment.UserVSAccountsFragment.java", "BodyUseAPI": ["org.votingsystem.android.fragment.UserVSAccountsFragment.getString(R.string.insufficient_cash_for_tagvs_caption,transactionVS.getTagVS().getName())", "transactionVS.getTagVS().getName()", "org.votingsystem.model.TransactionVS.getTagVS()"], "Fixed commit": "77e88c7ce5c52b27f3e984709411c8bad9a9fbf0", "Url": "https://api.github.com/repos/votingsystem/votingsystem", "Date": "2014-09-27T16:27:16Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cmdClass.getAnnotation(org.apache.cloudstack.api.APICommand.class)) == null) { java.lang.System.out.println(((\"Warning, API Cmd class \" + (cmdClass.getName())) + \" has no APICommand annotation \")); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4334/buggy-version/server.src.com.cloud.api.doc.ApiXmlDocWriter.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.lang.Class<?>.getName()"], "Fixed commit": "d13c84dee47559bac3aacd5721b03a1bce368cac", "Url": "https://api.github.com/repos/rsafonseca/cloudstack", "Date": "2015-05-20T01:01:41Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((out.writeMapNullValue) && (fieldSerializer instanceof com.alibaba.fastjson.serializer.JavaBeanSerializer)) { out.writeNull(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6060/buggy-version/src.main.java.com.alibaba.fastjson.serializer.FieldSerializer.java", "BodyUseAPI": ["com.alibaba.fastjson.serializer.SerializeWriter.writeNull()"], "Fixed commit": "e566c1e3195be458a5d688c7a3e5f7bf2efb62d8", "Url": "https://api.github.com/repos/VictorZeng/fastjson", "Date": "2016-04-21T07:57:05Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((main_act.toxSingleton.friendsList.getById(main_act.activeFriendKey)) != null) activeName = main_act.toxSingleton.friendsList.getById(main_act.activeFriendKey).getName();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8029/buggy-version/app.src.main.java.im.tox.antox.ChatFragment.java", "BodyUseAPI": ["main_act.toxSingleton.friendsList.getById(main_act.activeFriendKey)", "main_act.toxSingleton.friendsList.getById(main_act.activeFriendKey).getName()"], "Fixed commit": "feee1d89868e8c8bb88456f532ed4dc321c4882f", "Url": "https://api.github.com/repos/strider29/Antox", "Date": "2014-03-12T04:40:55Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (activeName == null) { main_act.pane.openPane(); android.widget.Toast.makeText(main_act, \"Cannot chat this person yet\", Toast.LENGTH_SHORT).show(); }else if (activeName.contains(\"(!)\")) { db.updateFriendName(main_act.activeFriendKey, activeName.substring(0, activeName.indexOf(\"(\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8029/buggy-version/app.src.main.java.im.tox.antox.ChatFragment.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "im.tox.antox.AntoxDB.updateFriendName(main_act.activeFriendKey,java.lang.String)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "feee1d89868e8c8bb88456f532ed4dc321c4882f", "Url": "https://api.github.com/repos/strider29/Antox", "Date": "2014-03-12T04:40:55Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((toxSingleton.friendsList.getById(key)) != null) { im.tox.antox.AntoxDB db = new im.tox.antox.AntoxDB(this); chat.updateChat(db.getMessageList(key)); db.updateFriendName(key, ((toxSingleton.friendsList.getById(key).getName()) + \" (!)\")); db.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8029/buggy-version/app.src.main.java.im.tox.antox.MainActivity.java", "BodyUseAPI": ["toxSingleton.friendsList.getById(key).getName()", "im.tox.antox.AntoxDB.getMessageList(java.lang.String)", "toxSingleton.friendsList.getById(java.lang.String)", "im.tox.antox.ChatFragment.updateChat(db.getMessageList(key))", "im.tox.antox.AntoxDB.updateFriendName(java.lang.String,((toxSingleton.friendsList.getById(key).getName()) + \" (!)\"))"], "Fixed commit": "feee1d89868e8c8bb88456f532ed4dc321c4882f", "Url": "https://api.github.com/repos/strider29/Antox", "Date": "2014-03-12T04:40:55Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hoho.android.usbserial.driver.FtdiSerialDriver.getInterfaceCount()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (interfaceCount == 0) throw new java.io.IOException(\"No available usb interface.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2455/buggy-version/dependencyLibs.usb-serial-for-android.UsbSerialLibrary.src.com.hoho.android.usbserial.driver.FtdiSerialDriver.java", "BodyUseAPI": [], "Fixed commit": "93f96ea0dd6de132404f8c78cd603fbc1d49aadf", "Url": "https://api.github.com/repos/dronekit/dronekit-android", "Date": "2015-10-07T23:37:51Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.hardware.usb.UsbInterface.getEndpointCount()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (endpointCount == 0) throw new java.io.IOException(\"No available usb endpoint.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2455/buggy-version/dependencyLibs.usb-serial-for-android.UsbSerialLibrary.src.com.hoho.android.usbserial.driver.FtdiSerialDriver.java", "BodyUseAPI": [], "Fixed commit": "93f96ea0dd6de132404f8c78cd603fbc1d49aadf", "Url": "https://api.github.com/repos/dronekit/dronekit-android", "Date": "2015-10-07T23:37:51Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.uniks.networkparser.list.SimpleSet<de.uniks.networkparser.graph.Literal>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(knownValues.contains(valueNames.getName()))) { enumCurrentPos = insertValue(valueNames, enumCurrentPos, (i == ((values.size()) - 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3749/buggy-version/src.main.java.org.sdmlib.models.classes.logic.GenEnumeration.java", "BodyUseAPI": ["org.sdmlib.models.classes.logic.GenEnumeration.insertValue(de.uniks.networkparser.graph.Literal,int,(i == ((values.size()) - 1)))"], "Fixed commit": "64087ae315252561794b0c8b1289ec07ab1ee5de", "Url": "https://api.github.com/repos/fujaba/SDMLib", "Date": "2016-02-26T14:00:55Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((findViewById(R.id.fragment)) != null) { com.example.dylan.serviceapplication.fragments.MainActivityFragment fragment = new com.example.dylan.serviceapplication.fragments.MainActivityFragment(); getSupportFragmentManager().beginTransaction().add(R.id.fragment, fragment).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6303/buggy-version/app.src.main.java.com.example.dylan.serviceapplication.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "95eea0eda14a0292ad7404d804b20ef4a2da8397", "Url": "https://api.github.com/repos/dylanvdst/ServiceOefening", "Date": "2017-01-22T10:12:42Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (codeEpoch < 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1515/buggy-version/APP-CineReminDay.src.main.java.fr.delcey.cinereminday.CRDUtils.java", "BodyUseAPI": [], "Fixed commit": "b3a30abc88a9085db790c8ce75995d811785b54f", "Url": "https://api.github.com/repos/NinoDLC/CineReminDay", "Date": "2017-06-26T00:35:47Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (codeEpoch < 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1515/buggy-version/APP-CineReminDay.src.main.java.fr.delcey.cinereminday.CRDUtils.java", "BodyUseAPI": [], "Fixed commit": "b3a30abc88a9085db790c8ce75995d811785b54f", "Url": "https://api.github.com/repos/NinoDLC/CineReminDay", "Date": "2017-06-26T00:35:47Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.apache.commons.lang3.StringUtils.isEmpty(date))) { userInfo.setDateOfBirth(java.sql.Date.valueOf(date)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1981/buggy-version/src.com.shooting_stars.project.command.SaveEditedUserInfoCommand.java", "BodyUseAPI": ["java.sql.Date.valueOf(java.lang.String)", "com.shooting_stars.project.entity.UserInfo.setDateOfBirth(java.sql.Date)"], "Fixed commit": "c17e4c4648ed60a01a109bd2abad4f9dbea80ccc", "Url": "https://api.github.com/repos/MAVH/Shooting-Stars", "Date": "2015-04-08T10:25:57Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["document.getElementsContainingOwnText(\"\u0417\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u043d\u044b\u0445\").first()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (clientElem != null) { repClientS = repClientElem.previousElementSibling().text(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4704/buggy-version/src.main.java.com.bigbro.reports.Weekly.java", "BodyUseAPI": [], "Fixed commit": "01485f726f7731f0b446aa3b1eceb40467f5ae7e", "Url": "https://api.github.com/repos/AlexanderAbrashenkov/BBReports", "Date": "2017-06-17T13:55:24Z"},
{"Line": "=>458", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((success) == 1) { android.widget.Toast.makeText(this, msg, Toast.LENGTH_LONG).show(); }else { android.widget.Toast.makeText(this, \"Oops! Looks like something went wrong\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/518/buggy-version/app.src.main.java.edu.elfak.mosis.phoneguardian.AddLocationActivity.java", "BodyUseAPI": [], "Fixed commit": "efb8310f64d86612a19c38be0dd08ea79f85deeb", "Url": "https://api.github.com/repos/PhoneGuardian/CitizenApp", "Date": "2015-04-11T18:49:18Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.catrobat.catroid.stage.PreStageActivity.onUtteranceCompletedListenerContainer) == null) { org.catrobat.catroid.stage.PreStageActivity.onUtteranceCompletedListenerContainer = new org.catrobat.catroid.stage.OnUtteranceCompletedListenerContainer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2699/buggy-version/catroid.src.org.catrobat.catroid.stage.PreStageActivity.java", "BodyUseAPI": [], "Fixed commit": "ec2ea4f72b217fd381cd42f4bd6a79f19f1fb366", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2013-09-10T14:52:37Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mat == (org.bukkit.Material.EMERALD_BLOCK)) && (on)) { lastblock.setType(Material.REDSTONE_BLOCK); }else if ((mat == (org.bukkit.Material.REDSTONE_BLOCK)) && (!(on))) { lastblock.setType(Material.EMERALD_BLOCK); }else { for (org.bukkit.entity.Entity e : lastblock.getWorld().getEntities()) { if ((e instanceof org.bukkit.entity.ItemFrame) && (plugin.util.compareLocation(e.getLocation().getBlock().getLocation(), lastblock.getLocation()))) { org.bukkit.entity.ItemFrame ifr = ((org.bukkit.entity.ItemFrame) (e)); org.bukkit.inventory.ItemStack i = ifr.getItem(); if ((i.getType()) == (org.bukkit.Material.MAP)) { if (((i.getData().getData()) == ((byte) (8))) || ((i.getData().getData()) == ((byte) (9)))) { i.setDurability(((short) (on ? 8 : 9))); ifr.setItem(i); } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2540/buggy-version/src.org.PortalStick.CheckWireTask.java", "BodyUseAPI": [], "Fixed commit": "7ec25acb4e7a1bd48e8f9cce4eaf6c18c2d1ee1a", "Url": "https://api.github.com/repos/V10lator/PortalStick", "Date": "2014-07-27T19:51:49Z"},
{"Line": "=>503", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mediaPlayer) != null) { try { return mediaPlayer.getCurrentPosition(); } catch (java.lang.IllegalStateException e) { android.util.Log.e(de.xikolo.controller.helper.VideoController.TAG, e.getMessage(), e); return 0; } }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1375/buggy-version/app.src.main.java.de.xikolo.controller.helper.VideoController.java", "BodyUseAPI": [], "Fixed commit": "4947a5e6481a91c9eefab30104253cf3bd5e8636", "Url": "https://api.github.com/repos/openHPI/xikolo-android", "Date": "2016-07-14T10:52:28Z"},
{"Line": "=>597", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((result.length()) > limit) { org.json.JSONArray limitedResult = new org.json.JSONArray(); for (int i = 0; i < limit; ++i) limitedResult.put(result.get(i)); return limitedResult; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3524/buggy-version/sense-android-library.src.nl.sense_os.platform.SensePlatform.java", "BodyUseAPI": ["org.json.JSONArray.put(result.get(i))", "org.json.JSONArray.get(int)"], "Fixed commit": "a46ab9ef55e2a196ce32dde01448935ce7abd2cf", "Url": "https://api.github.com/repos/senseobservationsystems/sense-android-library", "Date": "2015-06-26T12:16:01Z"},
{"Line": "=>550", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((result.length()) > limit) { org.json.JSONArray limitedResult = new org.json.JSONArray(); for (int i = 0; i < limit; ++i) limitedResult.put(result.get(i)); return limitedResult; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3524/buggy-version/sense-android-library.src.nl.sense_os.platform.SensePlatform.java", "BodyUseAPI": ["org.json.JSONArray.put(result.get(i))", "org.json.JSONArray.get(int)"], "Fixed commit": "a46ab9ef55e2a196ce32dde01448935ce7abd2cf", "Url": "https://api.github.com/repos/senseobservationsystems/sense-android-library", "Date": "2015-06-26T12:16:01Z"},
{"Line": "=>469", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((result.length()) > limit) { org.json.JSONArray limitedResult = new org.json.JSONArray(); for (int i = 0; i < limit; ++i) limitedResult.put(result.get(i)); return limitedResult; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3524/buggy-version/sense-android-library.src.nl.sense_os.platform.SensePlatform.java", "BodyUseAPI": ["org.json.JSONArray.get(int)", "org.json.JSONArray.put(result.get(i))"], "Fixed commit": "a46ab9ef55e2a196ce32dde01448935ce7abd2cf", "Url": "https://api.github.com/repos/senseobservationsystems/sense-android-library", "Date": "2015-06-26T12:16:01Z"},
{"Line": "=>511", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((result.length()) > limit) { org.json.JSONArray limitedResult = new org.json.JSONArray(); for (int i = 0; i < limit; ++i) limitedResult.put(result.get(i)); return limitedResult; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3524/buggy-version/sense-android-library.src.nl.sense_os.platform.SensePlatform.java", "BodyUseAPI": ["org.json.JSONArray.put(result.get(i))", "org.json.JSONArray.get(int)"], "Fixed commit": "a46ab9ef55e2a196ce32dde01448935ce7abd2cf", "Url": "https://api.github.com/repos/senseobservationsystems/sense-android-library", "Date": "2015-06-26T12:16:01Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["model.DatabaseReadManager.getUser(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (user != null) { java.lang.String databasePasswordHash = user.passwordHash; try { if (this.generatePasswordHash(password).equals(databasePasswordHash)) { return true; } } catch (java.security.NoSuchAlgorithmException exception) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8948/buggy-version/source.stockManagement-desktop.src.model.UserManager.java", "BodyUseAPI": [], "Fixed commit": "6d5e2fe40d6974e21edf96f16ce1d978132d3e2d", "Url": "https://api.github.com/repos/kayoslab/DRK-InventoryManagementSystem", "Date": "2016-12-16T16:26:52Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(java.util.regex.Pattern.matches(\"^[0-9]+$\", nowcoderId))) { return java.lang.String.format(\"{\\\"data\\\":[{\\\"subject\\\":\\\"Soryy, <label class=\\\\\\\"warning\\\\\\\">%s</label> is invalid, nowcoder ID should be pure numbers.\\\"}]}\", nowcoderId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3725/buggy-version/src.main.java.com.sicnu.yudidi.service.Recommendation.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.String)"], "Fixed commit": "dd47226a7a9d3678834f4b86d59f8aa278149f6f", "Url": "https://api.github.com/repos/yudidi/QuestionRecommendation", "Date": "2017-05-08T04:32:45Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((toolbarIsShown()) || (toolbarIsHidden())) { propagateToolbarState(toolbarIsShown()); }else { if (scrollY < toolbarHeight) { showToolbar(); }else { hideToolbar(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5132/buggy-version/widget.src.main.java.me.henrytao.mdwidget.activity.MdPagerTabActivity.java", "BodyUseAPI": [], "Fixed commit": "01426295192b8749f5fb17c35e71f105a0f19892", "Url": "https://api.github.com/repos/henrytao-me/android-md-core", "Date": "2015-06-06T11:46:18Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ilarkesto.core.logging.Log.logRecordHandler) != null) ilarkesto.core.logging.Log.logRecordHandler.log(new ilarkesto.core.logging.LogRecord(name, level, parameters));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1811/buggy-version/src.main.java.ilarkesto.core.logging.Log.java", "BodyUseAPI": [], "Fixed commit": "abf02476ea52b26b3df88522cf67f1ad5a2dfebb", "Url": "https://api.github.com/repos/Kunagi/ilarkesto", "Date": "2011-03-30T18:06:17Z"},
{"Line": "=>651", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAdded()) { net.jejer.hipda.ui.LoginDialog dialog = net.jejer.hipda.ui.LoginDialog.getInstance(getActivity()); if (dialog != null) { dialog.setHandler(mMsgHandler); dialog.setTitle(\"\u7528\u6237\u767b\u5f55\"); dialog.show(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1838/buggy-version/hipda.src.main.java.net.jejer.hipda.ui.ThreadListFragment.java", "BodyUseAPI": [], "Fixed commit": "82d331eb360803c3a3d798a9c035cf967f6a9866", "Url": "https://api.github.com/repos/GreenSkinMonster/hipda", "Date": "2016-05-05T04:36:01Z"},
{"Line": "=>485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getGamestate()) == (GameState.LOADING)) { setGamestate(GameState.LOBBY); menuController.actualizeScreen(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/126/buggy-version/cydonia.src.main.java.de.findus.cydonia.main.GameController.java", "BodyUseAPI": [], "Fixed commit": "871f45fb581123854e77b87e6f1fa452335e7e4e", "Url": "https://api.github.com/repos/findus/cydonia", "Date": "2013-04-03T22:02:11Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((matchCommand.getMatchId()) != null) { match = matchRepository.findOne(matchCommand.getMatchId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2489/buggy-version/src.main.java.de.fred4jupiter.fredbet.service.MatchService.java", "BodyUseAPI": ["de.fred4jupiter.fredbet.web.matches.MatchCommand.getMatchId()", "de.fred4jupiter.fredbet.repository.MatchRepository.findOne(matchCommand.getMatchId())"], "Fixed commit": "66dd7485f3aebec5f8d546739e470b9d18016f51", "Url": "https://api.github.com/repos/fred4jupiter/fredbet", "Date": "2016-03-26T14:10:38Z"},
{"Line": "=>684", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (turnOver()) { javax.swing.JOptionPane.showMessageDialog(null, \"It is not your turn!\"); }else { gui.AccusationDialog dialog = new gui.AccusationDialog(); if (dialog.isSubmitted()) { boolean correctAccusation = checkAccusation(dialog.getAccusation()); if (correctAccusation) { javax.swing.JOptionPane.showMessageDialog(null, \"Congratulation! You won!\"); java.lang.System.exit(0); }else { javax.swing.JOptionPane.showMessageDialog(null, \"That is incorrect.\"); human.setCompletedTurn(true); highlightTargets(false); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1359/buggy-version/src.clueGame.Board.java", "BodyUseAPI": [], "Fixed commit": "4abcbecafbdbdfffe0fc0beeb5b387c4d039e9ed", "Url": "https://api.github.com/repos/adamnelson97/ClueGame", "Date": "2017-12-05T06:52:15Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getNewSelection().getStartDateTime()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (startDateTime.isPresent()) { changeReferenceDate(startDateTime.get().getDateTimeForFullCalendar()); }else if (endDateTime.isPresent()) { changeReferenceDate(endDateTime.get().getDateTimeForFullCalendar()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8075/buggy-version/src.main.java.seedu.tache.ui.CalendarPanel.java", "BodyUseAPI": ["java.util.Optional<seedu.tache.model.task.DateTime>.get()", "startDateTime.get().getDateTimeForFullCalendar()", "seedu.tache.ui.CalendarPanel.changeReferenceDate(startDateTime.get().getDateTimeForFullCalendar())"], "Fixed commit": "6a292ca156c63936baf1290aa3d9b25611286896", "Url": "https://api.github.com/repos/CS2103JAN2017-T09-B4/main", "Date": "2017-03-29T11:29:07Z"},
{"Line": "=>791", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cluster.isCollapsed()) { cluster.getGroup().expand(selectedNetwork); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1674/buggy-version/EnrichmentMapPlugin.src.main.java.org.baderlab.csplugins.enrichmentmap.autoannotate.view.AutoAnnotationPanel.java", "BodyUseAPI": ["org.baderlab.csplugins.enrichmentmap.autoannotate.model.Cluster.getGroup()", "cluster.getGroup().expand(org.cytoscape.model.CyNetwork)"], "Fixed commit": "806683c24be08088c5bef89ce13f7acd2401cc87", "Url": "https://api.github.com/repos/BaderLab/EnrichmentMapApp", "Date": "2014-08-13T15:36:39Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(cursor.getColumnIndex(MediaStore.Audio.Media.TRACK))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((trackNumString != null) && (trackNumString.equals(\"null\"))) { trackNum = java.lang.Integer.parseInt(trackNumString); }else { trackNum = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/505/buggy-version/src.com.stanford.tutti.MusicLibraryLoaderThread.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "8d8c668d84aa458569c7d5c41ac3ef7b450f125f", "Url": "https://api.github.com/repos/JayThomason/Tutti", "Date": "2014-06-03T03:56:29Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (field.startsWith(\"_\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4494/buggy-version/documentdb.src.main.java.com.yahoo.ycsb.db.DocumentDBClient.java", "BodyUseAPI": [], "Fixed commit": "ca174624f2431737ecea0302bc5dccefb6bc3987", "Url": "https://api.github.com/repos/k1xme/YCSB", "Date": "2016-09-03T21:01:31Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.exist.security.internal.web.HttpAccount.getUserFromServletRequest(javax.servlet.http.HttpServletRequest)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (requestUser != null) { user = requestUser; }else { final java.lang.String auth = request.getHeader(\"Authorization\"); if (auth != null) { requestUser = authenticator.authenticate(request, response); if (requestUser != null) { user = requestUser; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4004/buggy-version/src.org.exist.http.urlrewrite.XQueryURLRewrite.java", "BodyUseAPI": [], "Fixed commit": "2698cf39d5ac18d43c1559b291b2bf95bdceb5ba", "Url": "https://api.github.com/repos/eXist-db/exist", "Date": "2014-01-30T21:43:03Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result == 0) { result = intervalInMs; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6495/buggy-version/src.main.java.com.github.phantomthief.collection.impl.GenericSimpleBufferTriggerBuilder.java", "BodyUseAPI": [], "Fixed commit": "f50b5242dfa771d243a9c5c1fb50e572e529547c", "Url": "https://api.github.com/repos/PhantomThief/buffer-trigger", "Date": "2017-11-13T15:58:11Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.JELLY_BEAN_MR1)) { if (activity.isDestroyed()) { return; } }else if (activity.isFinishing()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1003/buggy-version/app.src.main.java.ru.jehy.rutracker_free.TorProgressTask.java", "BodyUseAPI": [], "Fixed commit": "1eb7e55b471c49a66127fd6221e5b2ac971a6f0c", "Url": "https://api.github.com/repos/jehy/rutracker-free", "Date": "2017-01-16T07:37:16Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((customInteraction.getEvidence()) != null) && ((customInteraction.getEvidence().size()) > 0)) { interaction.setEvidence(customInteraction.getEvidence()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6381/buggy-version/src.main.java.org.reactome.server.tools.interactors.tuple.custom.CustomResource.java", "BodyUseAPI": ["org.reactome.server.tools.interactors.tuple.custom.TreeInteraction.setEvidence(customInteraction.getEvidence())", "org.reactome.server.tools.interactors.tuple.model.CustomInteraction.getEvidence()"], "Fixed commit": "450777c7fed1950f519a21ac6a21237f32a7927e", "Url": "https://api.github.com/repos/reactome-pwp/interactors-core", "Date": "2016-04-13T09:27:40Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.e16din.simplerecycler.adapter.SimplePagingAdapter.getItemCount()) == 0) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6872/buggy-version/src.main.java.com.e16din.simplerecycler.adapter.SimplePagingAdapter.java", "BodyUseAPI": [], "Fixed commit": "08e33a05973229059e038fc1c3f9ae64aac17243", "Url": "https://api.github.com/repos/e16din/SimpleRecycler", "Date": "2016-06-06T12:30:10Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((navigationDrawerFragment) != null) navigationDrawerFragment.initNavigationBarList();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5923/buggy-version/rssreader.src.main.java.volhovm.com.rssreader.RSSMainActivity.java", "BodyUseAPI": [], "Fixed commit": "40d95485bcd6fb02dadf0f4f84b2a327cafca60f", "Url": "https://api.github.com/repos/volhovM/lesson5", "Date": "2014-11-10T21:05:14Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dateInput.hasFocus()) { pickDate(); dateInput.clearFocus(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7303/buggy-version/Path2Success.src.main.java.com.example.tyler.Path2Success.InputNewGoal.java", "BodyUseAPI": ["android.widget.EditText.clearFocus()"], "Fixed commit": "f3e63292cb0b7ff12fadfdb3c1aa50fd8af5ada2", "Url": "https://api.github.com/repos/tskluzac/Path3Success", "Date": "2016-03-23T03:43:05Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jbei.ice.services.rest.SearchResource.getUserId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isEmpty(userId)) { requireWebPartner(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2485/buggy-version/src.main.java.org.jbei.ice.services.rest.SearchResource.java", "BodyUseAPI": [], "Fixed commit": "2217304437b798b3fa2a3504a3a319b82c0793b9", "Url": "https://api.github.com/repos/JBEI/ice", "Date": "2016-07-28T21:12:30Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((hashUsernameVsId) == null) & ((comments) != null)) { setComments(comments); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7020/buggy-version/app.src.main.java.org.kazin.timelike.object.ImageTimelike.java", "BodyUseAPI": [], "Fixed commit": "935eaf660ec808288a8fc307e8848fb959b4a2d2", "Url": "https://api.github.com/repos/gossiks/Timelike", "Date": "2015-08-25T05:49:43Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (hashUsernameVsId.containsKey(username)) { return hashUsernameVsId.get(username); }else { return \"empty\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7020/buggy-version/app.src.main.java.org.kazin.timelike.object.ImageTimelike.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "935eaf660ec808288a8fc307e8848fb959b4a2d2", "Url": "https://api.github.com/repos/gossiks/Timelike", "Date": "2015-08-25T05:49:43Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rootAccount.getBooleanParameter(RootAccount.STORE_PINS_PARAM, false)) { this.onlineService.cacheAuthentication(this.authKey, java.lang.String.valueOf(password)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3873/buggy-version/src.com.moneydance.modules.features.paypalimporter.integration.PayPalOnlineService.java", "BodyUseAPI": [], "Fixed commit": "e90a212e3a5eda2cc6afd0541025d7da7854f86d", "Url": "https://api.github.com/repos/my-flow/paypalimporter", "Date": "2013-07-13T17:23:48Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.expr) != null) sig.addAll(this.expr.getFullSignature());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5709/buggy-version/compiler.src.aeminium.compiler.east.EVariableDeclarationFragment.java", "BodyUseAPI": [], "Fixed commit": "666b961f8df1c85c74c846dcb122f67c2c844b3c", "Url": "https://api.github.com/repos/AEminium/java2aeminium", "Date": "2012-12-06T15:37:55Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.fenixedu.bennu.core.domain.Bennu.getInstance().getDefaultLdapServerIntegrationConfiguration()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((defaultLdapServer == null) || ((java.lang.Boolean.TRUE) == (org.fenixedu.bennu.core.util.CoreConfiguration.getConfiguration().developmentMode()))) { return super.login(username, password); }else { com.qubit.terra.ldapclient.LdapClient client = defaultLdapServer.getClient(); if (client.login()) { try { com.qubit.terra.ldapclient.QueryReply query = client.query(((((\"(& (cn=\" + username) + \") (userPassword=\") + password) + \"))\"), new java.lang.String[]{ com.qubit.solution.fenixedu.integration.ldap.service.ULisboaProfileResource.FENIX_USER_ATTRIBUTE, com.qubit.solution.fenixedu.integration.ldap.service.ULisboaProfileResource.FENIX_USER_ALIGNED_ATTRIBUTE }); if ((query.getNumberOfResults()) == 1) { com.qubit.terra.ldapclient.QueryReplyElement queryReplyElement = query.getResults().get(0); java.lang.String fenixUsername = queryReplyElement.getSimpleAttribute(com.qubit.solution.fenixedu.integration.ldap.service.ULisboaProfileResource.FENIX_USER_ATTRIBUTE); java.lang.String fenixUserAligned = queryReplyElement.getSimpleAttribute(com.qubit.solution.fenixedu.integration.ldap.service.ULisboaProfileResource.FENIX_USER_ALIGNED_ATTRIBUTE); boolean userAligned = java.lang.Boolean.valueOf(fenixUserAligned); if (!userAligned) { usernameAlign(fenixUsername, username); com.qubit.terra.ldapclient.AttributesMap attributesMap = new com.qubit.terra.ldapclient.AttributesMap(); attributesMap.add(com.qubit.solution.fenixedu.integration.ldap.service.ULisboaProfileResource.FENIX_USER_ALIGNED_ATTRIBUTE, \"TRUE\"); client.replaceInExistingContext((((\"cn=\" + username) + \",\") + (defaultLdapServer.getBaseDomain())), java.util.Collections.EMPTY_LIST, attributesMap); } org.fenixedu.bennu.core.security.Authenticate.login(request.getSession(true), username); return view(null, java.lang.Void.class, org.fenixedu.bennu.core.json.adapters.AuthenticatedUserViewer.class); } } finally { client.logout(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3557/buggy-version/src.main.java.com.qubit.solution.fenixedu.integration.ldap.service.ULisboaProfileResource.java", "BodyUseAPI": ["com.qubit.solution.fenixedu.integration.ldap.domain.configuration.LdapServerIntegrationConfiguration.getClient()", "com.qubit.terra.ldapclient.LdapClient.replaceInExistingContext((((\"cn=\" + username) + \",\") + (defaultLdapServer.getBaseDomain())),java.util.List,com.qubit.terra.ldapclient.AttributesMap)", "com.qubit.solution.fenixedu.integration.ldap.domain.configuration.LdapServerIntegrationConfiguration.getBaseDomain()"], "Fixed commit": "35bec05903e0188eaebc0e02a7580c1284554efb", "Url": "https://api.github.com/repos/qub-it/qub-ldap-integration", "Date": "2015-07-07T13:46:21Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(wordToStore.isEmpty())) { wordToStore = (\"(\" + wordToStore) + \")\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5442/buggy-version/de.ygriega.heinzelnisse.HeinzelnisseSQLiteConverter.java", "BodyUseAPI": [], "Fixed commit": "c58aae17b2f18796067350a656dc2844e83572e1", "Url": "https://api.github.com/repos/Wunderfitz/heinzelnisse-sqlite", "Date": "2017-01-21T22:08:18Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((taskDateKeyWords) == null) { return true; }else { return ((((taskDateKeyWords.equalsIgnoreCase(task.getStartDate().toString())) || (taskDateKeyWords.equalsIgnoreCase(task.getEndDate().toString()))) && (!(task.isDone()))) || (((task.getStartDate().value.equals(Messages.MESSAGE_NO_START_DATE_SPECIFIED)) && (task.getEndDate().value.equals(Messages.MESSAGE_NO_END_DATE_SPECIFIED))) && (!(task.isDone())))) || ((task.isOverdue()) && (!(task.isDone()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4048/buggy-version/src.main.java.seedu.ggist.model.ModelManager.java", "BodyUseAPI": [], "Fixed commit": "ea5c61b52bbae6c5ec1ebcf716cb4427f4c97430", "Url": "https://api.github.com/repos/CS2103AUG2016-W13-C2/main", "Date": "2016-10-26T02:06:16Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.util.UUID, org.bgu.domain.facades.Session>.get(java.util.UUID)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((session._member) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4320/buggy-version/Forum.src.main.java.org.bgu.domain.facades.UserFacade.java", "BodyUseAPI": [], "Fixed commit": "8ea8dc38e42fdfd605445ec853622454e5983441", "Url": "https://api.github.com/repos/sadnabgu/SEWorkshop", "Date": "2015-06-25T00:43:38Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"?\".equals(expression)) { if (constraints.isSpecialCharAllowed(SpecialChar.QUESTION_MARK)) { return new com.cronutils.parser.field.QuestionMark(constraints); }else { throw new java.lang.IllegalArgumentException((\"Invalid expression: \" + expression)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5276/buggy-version/src.main.java.com.cronutils.parser.field.FieldParser.java", "BodyUseAPI": [], "Fixed commit": "7c992fe4a0fc1b73d63f17c7af15c10b5161175e", "Url": "https://api.github.com/repos/kallem/cron-utils", "Date": "2016-03-06T14:05:19Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (latch.await(timeout, unit)) { final com.outbrain.ob1k.concurrent.eager.Try<T> currentValue = this.value.get(); if (currentValue.isSuccess()) { return currentValue.getValue(); }else { throw new java.util.concurrent.ExecutionException(currentValue.getError()); } }else { throw new java.util.concurrent.TimeoutException((((\"Timeout occurred while waiting for value (\" + timeout) + unit) + \")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8699/buggy-version/ob1k-concurrent.src.main.java.com.outbrain.ob1k.concurrent.eager.EagerComposableFuture.java", "BodyUseAPI": [], "Fixed commit": "755946366d9e6906c43ee3362c32a1cbc1c54b83", "Url": "https://api.github.com/repos/outbrain/ob1k", "Date": "2015-02-18T09:41:23Z"},
{"Line": "=>844", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.UserManager.getUserInfo(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((name == null) && (info != null)) { name = java.lang.Integer.toString(info.id); }else if (info == null) { name = context.getString(R.string.unknown); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6911/buggy-version/src.com.android.settings.applications.RunningState.java", "BodyUseAPI": ["java.lang.Integer.toString(info.id)"], "Fixed commit": "110ddbfea0b6ba8702d3f7ba9d00c9f97c908dbb", "Url": "https://api.github.com/repos/SlimXperiments/packages_apps_Settings", "Date": "2014-05-09T17:35:27Z"},
{"Line": "=>904", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((form.getTargetID()) == null) { command.put(\"target\", this.target.getTypedID().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1286/buggy-version/thingif.src.main.java.com.kii.thingif.ThingIFAPI.java", "BodyUseAPI": [], "Fixed commit": "e214bf2ac87e4022e0cd18bc147cd8f1d491fbae", "Url": "https://api.github.com/repos/KiiPlatform/thing-if-AndroidSDK", "Date": "2016-09-30T09:12:26Z"},
{"Line": "=>883", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.target) == null) { throw new java.lang.IllegalStateException(\"Can not perform this action before onboarding\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1286/buggy-version/thingif.src.main.java.com.kii.thingif.ThingIFAPI.java", "BodyUseAPI": [], "Fixed commit": "e214bf2ac87e4022e0cd18bc147cd8f1d491fbae", "Url": "https://api.github.com/repos/KiiPlatform/thing-if-AndroidSDK", "Date": "2016-09-30T09:12:26Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rquery.isPresent()) { query = rquery.get(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6443/buggy-version/raptor-api.raptor-app.src.main.java.org.createnet.raptor.application.AppController.java", "BodyUseAPI": ["java.util.Optional<org.createnet.raptor.models.query.AppQuery>.get()"], "Fixed commit": "e3897570c6ac8430b1d7a30776e9a5158544bbbc", "Url": "https://api.github.com/repos/raptorbox/raptor", "Date": "2017-10-23T14:48:36Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (isArchive) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8426/buggy-version/src.me.shadorc.twitterstalker.statistics.Stats.java", "BodyUseAPI": [], "Fixed commit": "e64c654c99dc1e6a79989b8730c87557ccd6da17", "Url": "https://api.github.com/repos/Shadorc/Twitter-Stalker-V.2", "Date": "2015-12-09T19:56:56Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.api.services.admin.directory.model.Member.getRole()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((gRole.equals(\"MANAGER\")) || (gRole.equals(\"OWNER\"))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4025/buggy-version/hooks.google-mail-groups-hook.docroot.WEB-INF.src.com.liferay.google.mail.groups.util.GoogleMailGroupsUtil.java", "BodyUseAPI": [], "Fixed commit": "48b32d94504bfc57df599b5e31f2bbd8918d90f7", "Url": "https://api.github.com/repos/IstvanD/liferay-plugins", "Date": "2014-09-26T00:18:40Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Bundle.getParcelableArrayList(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (bikeStationsBundle == null) { return false; }else { return (bikeStationsBundle.size()) == 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2507/buggy-version/ChicagoTracker.src.fr.cph.chicago.fragment.BikeFragment.java", "BodyUseAPI": ["java.util.List<fr.cph.chicago.entity.BikeStation>.size()"], "Fixed commit": "c3e3aa7303259f5335d7543be07a0d158c520e9a", "Url": "https://api.github.com/repos/carlphilipp/Chicago-Tracker", "Date": "2014-07-12T16:50:49Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mongodb.DBObject.get(java.lang.String)", "com.mongodb.DBObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((userFeedTitleList != null) && (userFeedIdList != null)) { for (int i = 0; i < (userFeedIdList.size()); i++) { java.util.HashMap<java.lang.String, java.lang.String> info = new java.util.HashMap<java.lang.String, java.lang.String>(); java.lang.String feedId = userFeedIdList.get(i).toString(); info.put(feedId, userFeedTitleList.get(i).toString()); feedCategory.userFeedsInfos.add(info); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5063/buggy-version/app.models.FeedCategory.java", "BodyUseAPI": ["userFeedTitleList.get(i).toString()", "userFeedIdList.get(i).toString()", "com.mongodb.BasicDBList.size()", "com.mongodb.BasicDBList.get(int)", "com.mongodb.BasicDBList.get(int)", "java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,userFeedTitleList.get(i).toString())"], "Fixed commit": "d9f72abd235606a4135cac1f06559a817d86da82", "Url": "https://api.github.com/repos/CMUSV-SmartReader/SmartReader", "Date": "2013-06-19T22:20:46Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jforex.programming.order.IOrderSubmissionPolicy.executeSubmitOrderPolicy(com.jforex.programming.order.OrderSpecification)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((oppositeOrder == null) || ((oppositeOrder.getState()) != (IOrder.State.FILLED))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2568/buggy-version/Utils.src.main.java.com.jforex.programming.fbsstatemachine.FBSStateMachineContext.java", "BodyUseAPI": [], "Fixed commit": "906cd2bdd1dd78d7db886216deab30be764e9f36", "Url": "https://api.github.com/repos/juxeii/JForexUtils", "Date": "2015-05-05T07:48:48Z"},
{"Line": "=>772", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((pair.length()) == 0) && nullIfEmpty) { pair = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6681/buggy-version/obase-webc.src.main.java.com.github.obase.webc.Kits.java", "BodyUseAPI": [], "Fixed commit": "e5066d2b2d2da55fcdf6378f22ac639e7010fcd1", "Url": "https://api.github.com/repos/obase/java", "Date": "2016-12-11T08:59:22Z"},
{"Line": "=>765", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((pair.length()) == 0) && nullIfEmpty) { pair = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6681/buggy-version/obase-webc.src.main.java.com.github.obase.webc.Kits.java", "BodyUseAPI": [], "Fixed commit": "e5066d2b2d2da55fcdf6378f22ac639e7010fcd1", "Url": "https://api.github.com/repos/obase/java", "Date": "2016-12-11T08:59:22Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.cxf.binding.soap.SoapMessage.getHeader(FlowIdHelper.FLOW_ID_QNAME)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (hdFlowId != null) { org.talend.esb.sam.agent.flowidprocessor.FlowIdSoapCodec.logger.warning(\"FlowId already existing in soap header, need not to write FlowId header.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/9260/buggy-version/sam.sam-agent.src.main.java.org.talend.esb.sam.agent.flowidprocessor.FlowIdSoapCodec.java", "BodyUseAPI": [], "Fixed commit": "f3af12ec0e0e8cd3de9b5141491ccc1a8b8827b3", "Url": "https://api.github.com/repos/Talend/tesb-rt-se", "Date": "2011-07-11T03:36:44Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (metaData == 0) metaData = 50;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5421/buggy-version/Essentials.src.com.earth2me.essentials.ItemDb.java", "BodyUseAPI": [], "Fixed commit": "5227824608da9c34b3c9a534ccd97e2e8acc7cd4", "Url": "https://api.github.com/repos/EssentialsX/Essentials", "Date": "2015-06-30T22:15:13Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeQuery()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((rs.getString(\"latlng\")) != null) consult.setLatlng(rs.getString(\"latlng\").replace(\"(\", \"\").replace(\")\", \"\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4325/buggy-version/Consultancy.src.com.consultancy.consultant.DAO.ConsultancyDAO.java", "BodyUseAPI": ["java.sql.ResultSet.getString(java.lang.String)", "com.consultancy.consultant.model.ConsultancyModel.setLatlng(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "8e8b93a493c4a82c247c8123d9ee1443adcae660", "Url": "https://api.github.com/repos/dpshkhnl/consultancy", "Date": "2016-12-21T17:41:03Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeQuery()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((rs.getString(\"latlng\")) != null) consult.setLatlng(rs.getString(\"latlng\").replace(\"(\", \"\").replace(\")\", \"\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4325/buggy-version/Consultancy.src.com.consultancy.consultant.DAO.ConsultancyDAO.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)", "com.consultancy.consultant.model.ConsultancyModel.setLatlng(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "8e8b93a493c4a82c247c8123d9ee1443adcae660", "Url": "https://api.github.com/repos/dpshkhnl/consultancy", "Date": "2016-12-21T17:41:03Z"},
{"Line": "=>550", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Enumeration.nextElement()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (entry.isDirectory()) { targetFile.mkdirs(); }else { targetFile.getParentFile().mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5088/buggy-version/src.java.org.infoglue.cms.io.FileHelper.java", "BodyUseAPI": [], "Fixed commit": "01fc0facc6acd7c350a18f4dffa09bd9bffddedc", "Url": "https://api.github.com/repos/bogeblad/infoglue", "Date": "2015-09-24T14:28:52Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(openDb())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1443/buggy-version/app.src.main.java.database.ImportNewDb.java", "BodyUseAPI": [], "Fixed commit": "0b763a0380f5e2cc5bda3737f906044f02e18f34", "Url": "https://api.github.com/repos/leletec/NameMemo", "Date": "2016-11-02T12:18:53Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newToken) { user.subtractEnergy(cc.blynk.server.application.handlers.main.logic.sharing.GetShareTokenLogic.PRIVATE_TOKEN_PRICE, message.id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8102/buggy-version/server.tcp-app-server.src.main.java.cc.blynk.server.application.handlers.main.logic.sharing.GetShareTokenLogic.java", "BodyUseAPI": [], "Fixed commit": "1a94773fc2179a6e1434083619cb27b8e320ce91", "Url": "https://api.github.com/repos/blynkkk/blynk-server", "Date": "2016-06-01T10:44:19Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lock) != null) { lock.lock(); locked = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5869/buggy-version/betterrandom.src.main.java.io.github.pr0methean.betterrandom.prng.RandomWrapper.java", "BodyUseAPI": [], "Fixed commit": "76dcd7f6858163fb9e742851ecf9289f75984e96", "Url": "https://api.github.com/repos/Pr0methean/BetterRandom", "Date": "2017-09-29T01:24:57Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (locked) { lock.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5869/buggy-version/betterrandom.src.main.java.io.github.pr0methean.betterrandom.prng.RandomWrapper.java", "BodyUseAPI": [], "Fixed commit": "76dcd7f6858163fb9e742851ecf9289f75984e96", "Url": "https://api.github.com/repos/Pr0methean/BetterRandom", "Date": "2017-09-29T01:24:57Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isWipeTriggered) { if (org.wso2.iot.agent.utils.Constants.SYSTEM_APP_ENABLED) { org.wso2.iot.agent.utils.CommonUtils.callSystemApp(context, Constants.Operation.WIPE_DATA, null, null); }else { android.app.admin.DevicePolicyManager devicePolicyManager = operationProcessor.getOperationManager().getDevicePolicyManager(); if (devicePolicyManager != null) { devicePolicyManager.wipeData(0); }else { android.util.Log.e(TAG, \"Unable to perform operation as device policy manager is null\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/65/buggy-version/client.client.src.main.java.org.wso2.iot.agent.services.MessageProcessor.java", "BodyUseAPI": [], "Fixed commit": "3d8ca9416ac85290e585c2b396e183b8fc348665", "Url": "https://api.github.com/repos/charithag/cdmf-agent-android", "Date": "2017-11-29T06:15:50Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (start > end) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2802/buggy-version/src.main.java.au.edu.wehi.idsv.alignment.BreakpointHomology.java", "BodyUseAPI": [], "Fixed commit": "0ec14599aa97ef12c1c54f0d6e9b9646b1998152", "Url": "https://api.github.com/repos/PapenfussLab/gridss", "Date": "2017-07-10T04:47:22Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (asks == null) { throw new si.mazi.rescu.ExceptionalReturnContentException(\"No asks in response.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8465/buggy-version/xchange-bitso.src.main.java.com.xeiam.xchange.bitso.dto.marketdata.BitsoOrderBook.java", "BodyUseAPI": [], "Fixed commit": "7a23e9e1072c638354b9def0a7a2046f43db8a3c", "Url": "https://api.github.com/repos/bryan4887/XChange", "Date": "2015-06-17T06:15:52Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (last == null) { throw new si.mazi.rescu.ExceptionalReturnContentException(\"No last in response.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8465/buggy-version/xchange-bitso.src.main.java.com.xeiam.xchange.bitso.dto.marketdata.BitsoTicker.java", "BodyUseAPI": [], "Fixed commit": "7a23e9e1072c638354b9def0a7a2046f43db8a3c", "Url": "https://api.github.com/repos/bryan4887/XChange", "Date": "2015-06-17T06:15:52Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.cxf.rs.security.jose.jwt.JwtClaims.getClaim(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (resourceAud instanceof java.util.List) { auds = org.apache.cxf.helpers.CastUtils.cast(((java.util.List<?>) (resourceAud))); }else { auds = java.util.Collections.singletonList(((java.lang.String) (resourceAud))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4073/buggy-version/rt.rs.security.oauth-parent.oauth2.src.main.java.org.apache.cxf.rs.security.oauth2.filters.LocalJwtAccessTokenValidator.java", "BodyUseAPI": [], "Fixed commit": "3b272f9a3ae43861a4e5894ea9d622954f0f5208", "Url": "https://api.github.com/repos/johnament/cxf", "Date": "2016-08-09T16:19:12Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.envArray) != null) { io.teknek.farsandra.CForgroundManager.LOGGER.debug((\"ENVIRONMENT: \" + (java.util.Arrays.asList(this.envArray)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3672/buggy-version/farsandra-core.src.main.java.io.teknek.farsandra.CForgroundManager.java", "BodyUseAPI": [], "Fixed commit": "ed5ca0d8e512bda491651baaf6ab6dce3e054a1b", "Url": "https://api.github.com/repos/hancockks/farsandra", "Date": "2016-07-25T17:21:17Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.springrts.springls.util.ProtocolUtil.ip2Long(java.net.InetAddress)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((rng != null) && (rng.contains(longIp))) { result = rng.getCountryCode2(); }else { com.springrts.springls.ip2country.IP2Country.LOG.debug(\"Failed to evaluate country code for IP: {}\", ip.getHostAddress()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8752/buggy-version/src.main.java.com.springrts.springls.ip2country.IP2Country.java", "BodyUseAPI": ["com.springrts.springls.ip2country.IPRange.getCountryCode2()"], "Fixed commit": "386a92996d4efda4847093667ff2cf067f1fb477", "Url": "https://api.github.com/repos/adelq/SpringLS", "Date": "2012-02-05T10:16:30Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((this.levels) != null) && ((this.levels.get(overrideLevelId)) != null)) { this.levels.get(overrideLevelId).setStartValue(startOverride.getVal().subtract(java.math.BigInteger.ONE)); org.docx4j.model.listnumbering.ListNumberingDefinition.log.debug((((\"level \" + overrideLevelId) + \"starts at \") + (startOverride.getVal()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3094/buggy-version/src.main.java.org.docx4j.model.listnumbering.ListNumberingDefinition.java", "BodyUseAPI": [], "Fixed commit": "6b982386e17cf40f15bc0434b40f5c4482a08922", "Url": "https://api.github.com/repos/JTaurus19/docx4j", "Date": "2015-07-28T16:46:47Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sadboys.Visitors.AsmVisitors.ClassDeclarationVisitor.sanitize(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (end.contains(\"$\")) end = end.substring(0, end.indexOf(\"$\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8525/buggy-version/src.com.sadboys.Visitors.AsmVisitors.ClassDeclarationVisitor.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "bb313e74522e4f9b959d977c65ab6a441bf8fc1b", "Url": "https://api.github.com/repos/loganga/CSSE-374-Project", "Date": "2016-02-19T20:38:29Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sadboys.Visitors.AsmVisitors.ClassInheritanceArrowVisitor.sanitize(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (end.contains(\"$\")) end = end.substring(0, end.indexOf(\"$\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8525/buggy-version/src.com.sadboys.Visitors.AsmVisitors.ClassInheritanceArrowVisitor.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "bb313e74522e4f9b959d977c65ab6a441bf8fc1b", "Url": "https://api.github.com/repos/loganga/CSSE-374-Project", "Date": "2016-02-19T20:38:29Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["utils.DataHelper.findActiveObjectWithId(sent.getSenderIdentifier())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (senderActiveObject == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4708/buggy-version/src.utils.DataHelper.java", "BodyUseAPI": [], "Fixed commit": "2c0c0e8ed8f4cf0a40003706f6b98eb09ab5a547", "Url": "https://api.github.com/repos/scale-proactive/A-viewer-tool-for-multiactive-objects", "Date": "2015-07-02T11:24:23Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["utils.DataHelper.findActiveObjectWithId(requestSent.getSenderIdentifier())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (senderActiveObject != null) { model.ActiveObjectThread senderThread = findThreadById(senderActiveObject, requestSent.getThreadId()); model.ThreadEvent callerEvent = senderThread.findThreadEventByTime(requestSent.getTimeStamp()); callerEvent.addArrow(new utils.NotCompleteArrow(callerEvent, requestSent.getTimeStamp(), deliveredRequest.getTimeStamp(), findActiveObjectWithId(deliveredRequest.getReceiverIdentifier()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4708/buggy-version/src.utils.DataHelper.java", "BodyUseAPI": ["utils.DataHelper.findThreadById(model.ActiveObject,requestSent.getThreadId())"], "Fixed commit": "2c0c0e8ed8f4cf0a40003706f6b98eb09ab5a547", "Url": "https://api.github.com/repos/scale-proactive/A-viewer-tool-for-multiactive-objects", "Date": "2015-07-02T11:24:23Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((renderOptions.maxNumberOfWordsToDraw) >= 0) { maxNumberOfWords = java.lang.Math.min(maxNumberOfWords, renderOptions.maxNumberOfWordsToDraw); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2143/buggy-version/src.wordcram.WordCramEngine.java", "BodyUseAPI": ["java.lang.Math.min(int,renderOptions.maxNumberOfWordsToDraw)"], "Fixed commit": "dab11e2b813a0d6b8a67f502697612abe5f72847", "Url": "https://api.github.com/repos/danbernier/WordCram", "Date": "2011-11-06T21:31:21Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["searchCall.execute().body()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (customSearch != null) { for (mx.evin.apps.words.model.entities.gsearch.Item item : customSearch.getItems()) { publishProgress(item); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/704/buggy-version/app.src.main.java.mx.evin.apps.words.viewmodel.async.CustomSearchAsyncTask.java", "BodyUseAPI": ["mx.evin.apps.words.model.entities.gsearch.CustomSearch.getItems()"], "Fixed commit": "3f22801ce291591fdf58a4e77f3c0cd4152793f1", "Url": "https://api.github.com/repos/Evin1-/Words", "Date": "2016-01-18T03:54:02Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(project.getName().equals(\"INT-Store\"))) { if (((user.getUserType()) == (org.bimserver.models.store.UserType.ADMIN)) || (((project.getState()) == (org.bimserver.models.store.ObjectState.ACTIVE)) && (authorization.hasRightsOnProjectOrSuperProjects(user, project)))) { result.add(project); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5113/buggy-version/BimServer.src.org.bimserver.database.actions.GetAllWritableProjectsDatabaseAction.java", "BodyUseAPI": ["org.bimserver.models.store.Project.getState()", "java.util.Set<org.bimserver.models.store.Project>.add(org.bimserver.models.store.Project)", "org.bimserver.webservices.authorization.Authorization.hasRightsOnProjectOrSuperProjects(org.bimserver.models.store.User,org.bimserver.models.store.Project)"], "Fixed commit": "66518ee0d07a29bef38199db92c11baa6f26017f", "Url": "https://api.github.com/repos/opensourceBIM/BIMserver", "Date": "2013-10-09T10:57:27Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (contentPage.canFinish()) { if ((!(contentPage.isCreateSerivce())) && (page == (pojoServiceSelectPage))) { return pojoServiceSelectPage.isPageComplete(); }else if ((servicePage) == page) { return servicePage.isPageComplete(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1297/buggy-version/org.entirej.ide.ui.src.org.entirej.ide.ui.wizards.report.service.NewEJReportPojoServiceWizard.java", "BodyUseAPI": ["org.entirej.ide.ui.wizards.report.service.NewEJReportPojoServiceContentPage.isCreateSerivce()"], "Fixed commit": "786f55ffd279ed3ad9a3814efc66ffee009fa6b6", "Url": "https://api.github.com/repos/entirej/plugin", "Date": "2015-11-30T09:03:20Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (contentPage.canFinish()) { if ((!(contentPage.isCreateSerivce())) && (page == (pojoServiceSelectPage))) { return pojoServiceSelectPage.isPageComplete(); }else if ((servicePage) == page) { return servicePage.isPageComplete(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1297/buggy-version/org.entirej.ide.ui.src.org.entirej.ide.ui.wizards.service.NewEJPojoServiceWizard.java", "BodyUseAPI": ["org.entirej.ide.ui.wizards.service.NewEJPojoServiceContentPage.isCreateSerivce()"], "Fixed commit": "786f55ffd279ed3ad9a3814efc66ffee009fa6b6", "Url": "https://api.github.com/repos/entirej/plugin", "Date": "2015-11-30T09:03:20Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.em.createNamedQuery(\"Role.selectByName\", cz.nitramek.organizational.data.implementation.dto.RoleDTO.class).setParameter(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((searchQuery.getResultList().size()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8921/buggy-version/organizational-data-layer-implementation.src.main.java.cz.nitramek.organizational.data.implementation.mappers.RoleMapperImpl.java", "BodyUseAPI": [], "Fixed commit": "7ee689a308f15b31f9820858c926b1027eccad1a", "Url": "https://api.github.com/repos/nitramek/Organizational", "Date": "2015-12-06T20:11:43Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dir.exists())) { dir.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1622/buggy-version/src.astraeus.game.model.entity.mob.player.io.PlayerContainer.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "6bf1e6148fc5dcd7b9104b5bb4e2d94b1f24337e", "Url": "https://api.github.com/repos/nshusa/astraeus-legacy", "Date": "2016-07-06T09:12:30Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dir.exists())) { dir.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1622/buggy-version/src.astraeus.game.model.entity.mob.player.io.PlayerDetails.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "6bf1e6148fc5dcd7b9104b5bb4e2d94b1f24337e", "Url": "https://api.github.com/repos/nshusa/astraeus-legacy", "Date": "2016-07-06T09:12:30Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.util.Arrays.asList(ThemeSelector.Theme.Black, ThemeSelector.Theme.Wallpaper).contains(themeSelector.getSelected())) { editText.setTextColor(Color.WHITE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3900/buggy-version/src.main.java.com.vackosar.searchbasedlauncher.boundary.SearchText.java", "BodyUseAPI": [], "Fixed commit": "b11b439f34873ecdbe3419ac355eb04eadffddb1", "Url": "https://api.github.com/repos/vackosar/search-based-launcher", "Date": "2016-04-16T21:11:55Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (userSelect) { editor.putInt(\"reminderOptionSelectedItemPosition\", reminderOption.getSelectedItemPosition()); editor.apply(); reminderSwitch.setChecked(true); userSelect = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8495/buggy-version/app.src.main.java.com.team5.iat381finalproject.AddItemActivity.java", "BodyUseAPI": [], "Fixed commit": "d6054a83d94dfdede9dd749a9cb8096d7900d0d0", "Url": "https://api.github.com/repos/wonglee5/IAT381FinalProject", "Date": "2016-12-02T15:37:04Z"},
{"Line": "=>501", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (commitId == null) { pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.logger.warn(\"Mapping tx {} to NULL commitId!\", txVersion); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7896/buggy-version/backend.jvstm-lf.runtime.src.main.java.pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.java", "BodyUseAPI": [], "Fixed commit": "40d02214c248b8ddbf11e3339ee1d44faee4307e", "Url": "https://api.github.com/repos/smmf/fenix-framework", "Date": "2013-10-21T22:49:21Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.tmatesoft.svn.core.SVNLogEntryPath.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (type == 'M') { fileChangeEntry = new jp.ac.osaka_u.ist.sdl.scanalyzer.io.in.FileChangeEntry(relativePath, relativePath, 'M'); }else if (type == 'R') { if ((path.getCopyPath()) == null) { fileChangeEntry = new jp.ac.osaka_u.ist.sdl.scanalyzer.io.in.FileChangeEntry(relativePath, relativePath, 'R'); }else { fileChangeEntry = new jp.ac.osaka_u.ist.sdl.scanalyzer.io.in.FileChangeEntry(path.getCopyPath(), relativePath, 'R'); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/732/buggy-version/src.main.java.jp.ac.osaka_u.ist.sdl.scanalyzer.io.in.svn.SVNFileChangeEntryDetector.java", "BodyUseAPI": [], "Fixed commit": "f906288ec3b07d2bc72c284ed53cf42be426afcb", "Url": "https://api.github.com/repos/k-hotta/SCAnalyzer", "Date": "2014-11-13T16:07:25Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.java.model.ExpressionUtils.skipParentheses(tree.expression())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (expression.is(Tree.Kind.IDENTIFIER)) { java.lang.String identifierName = ((org.sonar.plugins.java.api.tree.IdentifierTree) (expression)).name(); if ((\"this\".equals(identifierName)) || (\"super\".equals(identifierName))) { tree.identifier().accept(this); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8109/buggy-version/java-frontend.src.main.java.org.sonar.java.se.checks.SyntaxTreeNameFinder.java", "BodyUseAPI": [], "Fixed commit": "b15fbe23570a80e9b6612dc66bc6659dff233e65", "Url": "https://api.github.com/repos/SonarSource/sonar-java", "Date": "2017-05-17T07:34:18Z"},
{"Line": "=>1499", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCardTimer) != null) { mCardTimer.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6368/buggy-version/src.com.ichi2.anki.Reviewer.java", "BodyUseAPI": [], "Fixed commit": "9301b3aa3754ce4e1da6c4d22f9fbf270bd6e85c", "Url": "https://api.github.com/repos/andreypc/Anki-Android", "Date": "2012-11-17T17:14:14Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((data.get(att)) == null) { java.lang.System.out.println(att); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/834/buggy-version/src.com.main.Record.java", "BodyUseAPI": ["java.io.PrintStream.println(com.main.Attribute)"], "Fixed commit": "fbf220e90e154d77f67bed5e4f9504748530bbac", "Url": "https://api.github.com/repos/fonsecaeli/Random-Forest-Classification", "Date": "2016-08-03T21:02:24Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((model.GameState.getInstance().getAirship().getWeight()) == 0) { controller.WindowController.showConstruction(); }else { controller.WindowController.showHarbor(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8311/buggy-version/src.handler.SettingsStrategy.java", "BodyUseAPI": [], "Fixed commit": "3f13ddbb06a3e1cc852035da84b0e4e0cd7aa70b", "Url": "https://api.github.com/repos/Laranto/Airship-Captain", "Date": "2014-12-06T14:33:17Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (cachedType == null) { com.alibaba.fastjson.TypeReference.classTypeCache.putIfAbsent(type, type); cachedType = com.alibaba.fastjson.TypeReference.classTypeCache.get(type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1767/buggy-version/src.main.java.com.alibaba.fastjson.TypeReference.java", "BodyUseAPI": [], "Fixed commit": "5d0bf26527f40ca514fe6fa2d02d786cb1d04037", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2017-06-23T19:31:21Z"},
{"Line": "=>3717", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (convertMeta == null) { throw new org.pentaho.di.core.exception.KettleValueException(\"API coding error: convertMeta input parameter should not be equals to null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/9279/buggy-version/core.src.org.pentaho.di.core.row.value.ValueMetaBase.java", "BodyUseAPI": [], "Fixed commit": "8703c98f8a1c83e2b661edeb7b2e3745482c3b7f", "Url": "https://api.github.com/repos/pentaho/pentaho-kettle", "Date": "2014-11-19T13:31:09Z"},
{"Line": "=>3771", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (pol == null) { return null; }else if ((org.pentaho.di.core.Const.isEmpty(pol)) && (valueType != (org.pentaho.di.compatibility.Value.VALUE_TYPE_STRING))) { return null; }else { if (!(org.pentaho.di.core.Const.isEmpty(null_value))) { if ((null_value.length()) <= (pol.length())) { if (pol.equalsIgnoreCase(org.pentaho.di.core.Const.rightPad(new java.lang.StringBuffer(null_value), pol.length()))) { return emptyValue; } } }else { if (org.pentaho.di.core.Const.onlySpaces(pol)) { return emptyValue; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/9279/buggy-version/core.src.org.pentaho.di.core.row.value.ValueMetaBase.java", "BodyUseAPI": ["org.pentaho.di.core.Const.onlySpaces(java.lang.String)", "org.pentaho.di.core.Const.isEmpty(java.lang.String)", "java.lang.String.equalsIgnoreCase(org.pentaho.di.core.Const.rightPad(new java.lang.StringBuffer(null_value), pol.length()))", "java.lang.String.length()", "java.lang.String.length()", "org.pentaho.di.core.Const.rightPad(java.lang.StringBuffer,int)"], "Fixed commit": "8703c98f8a1c83e2b661edeb7b2e3745482c3b7f", "Url": "https://api.github.com/repos/pentaho/pentaho-kettle", "Date": "2014-11-19T13:31:09Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tw.edu.nctu.dcslab.WTACluster.Agent.CentralAgent.GetPeerList()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (peers == null) { java.lang.System.out.println(\"Please load peer list first\"); return; }else if ((peers.size()) == 0) { java.lang.System.out.println(\"Please load peer list first\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7326/buggy-version/src.tw.edu.nctu.dcslab.WTACluster.Agent.Behaviour.CentralPingPeerBehaviour.java", "BodyUseAPI": ["java.util.ArrayList<tw.edu.nctu.dcslab.WTACluster.util.PeerInfo>.size()"], "Fixed commit": "bf1fe85fafd57eddbd4119b964e9c249b63c219b", "Url": "https://api.github.com/repos/timfan3939/NCTU-WTA-Cluster", "Date": "2017-11-28T08:21:16Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.cxf.service.model.FaultInfo.getProperty(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (exClass == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2711/buggy-version/core.src.main.java.org.apache.cxf.interceptor.ClientFaultConverter.java", "BodyUseAPI": [], "Fixed commit": "388ee56113467653f48f02d1d927b91a8ce9de45", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2014-07-11T16:43:21Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) instanceof remixlab.remixcam.geom.InteractiveCameraFrame) ((remixlab.remixcam.geom.InteractiveCameraFrame) (this)).pinhole().lastFrameUpdate = ((remixlab.remixcam.geom.InteractiveCameraFrame) (this)).scene.frameCount();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5361/buggy-version/src.remixlab.remixcam.geom.VFrame.java", "BodyUseAPI": [], "Fixed commit": "dc49d5a0922adb48ed95d498d8b625f52286f587", "Url": "https://api.github.com/repos/nakednous/remixcam", "Date": "2012-09-21T19:56:48Z"},
{"Line": "=>448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (fe != null) fe.changedRemotely = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7780/buggy-version/src.Peer.java", "BodyUseAPI": [], "Fixed commit": "9e852b815f281eb23ad4b110094abd9c9200be3e", "Url": "https://api.github.com/repos/harrisch/454proj2", "Date": "2011-07-29T20:06:22Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (followType == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/700/buggy-version/Android.src.org.droidplanner.android.fragments.mode.ModeFollowFragment.java", "BodyUseAPI": [], "Fixed commit": "6295719ec6d84bf4a7d815c3b4bf3c160a5babc5", "Url": "https://api.github.com/repos/DroidPlanner/Tower", "Date": "2015-04-24T06:21:22Z"},
{"Line": "=>1408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.teiid.query.optimizer.relational.rules.FrameUtil.findOriginatingNode(org.teiid.query.optimizer.relational.plantree.PlanNode,java.util.Set<org.teiid.query.sql.symbol.GroupSymbol>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((useCardinalityIfUnknown != null) || ((source.getChildCount()) == 0)) { ndv = source.getCardinality(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4763/buggy-version/engine.src.main.java.org.teiid.query.optimizer.relational.rules.NewCalculateCostUtil.java", "BodyUseAPI": ["org.teiid.query.optimizer.relational.plantree.PlanNode.getCardinality()"], "Fixed commit": "9ad7fb2024c9b67a934eb4765df35fbe23f0d275", "Url": "https://api.github.com/repos/teiid/teiid", "Date": "2016-07-06T23:28:21Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Double.isNaN(v)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2283/buggy-version/ding-impl.ding-presentation-impl.src.main.java.org.cytoscape.ding.internal.charts.AbstractChartLayer.java", "BodyUseAPI": [], "Fixed commit": "59576f7b08857f46fe91cff82492a1b71bde964a", "Url": "https://api.github.com/repos/cytoscape/cytoscape-impl", "Date": "2014-10-18T15:05:07Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((row > 0) && (col > 0)) && ((board.getStatus((row - 1), (col - 1))) == 0)) board.setStatus((row - 1), (col - 1), (-1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3974/buggy-version/src.main.java.ProblemeDesReines.ChessPiece.Pawn.java", "BodyUseAPI": ["ProblemeDesReines.chessBoard.ChessBoard.setStatus(int,int,int)"], "Fixed commit": "67d1bcfc5a497bd0b01d69fa68116f85db242407", "Url": "https://api.github.com/repos/AlexBolot/ProblemeDesDames", "Date": "2017-04-19T18:08:59Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((row > 0) && (col < ((board.width) - 1))) && ((board.getStatus((row - 1), (col + 1))) == 0)) board.setStatus((row - 1), (col + 1), (-1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3974/buggy-version/src.main.java.ProblemeDesReines.ChessPiece.Pawn.java", "BodyUseAPI": ["ProblemeDesReines.chessBoard.ChessBoard.setStatus(int,int,int)"], "Fixed commit": "67d1bcfc5a497bd0b01d69fa68116f85db242407", "Url": "https://api.github.com/repos/AlexBolot/ProblemeDesDames", "Date": "2017-04-19T18:08:59Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.dv8tion.jda.core.entities.Message.getRawContent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((content.split(\" \").length) > 1) { java.lang.String searchWords = content.substring(8); hjeisa.waifubot.model.Request request = hjeisa.waifubot.Util.findRequestBySearchText(requestList, chan, searchWords); if (request != null) { if (postController.cancelPostCycle(request)) { chan.sendMessage(((\"Cancelled request for tags \\\"\" + (request.getSearchText())) + \"\\\".\")).queue(); }else { chan.sendMessage(\"Could not cancel request.\").queue(); } }else { chan.sendMessage(\"No request matching criteria found.\").queue(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5665/buggy-version/src.main.java.hjeisa.waifubot.ServerMessageListener.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "fcdb65ff4b496a88414e59cca50777d2d5d803d5", "Url": "https://api.github.com/repos/isakvik/waifubot", "Date": "2017-10-30T18:29:23Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.dv8tion.jda.core.entities.Message.getRawContent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (content.toLowerCase().equals(\"!cancel\")) { int cancelled = postController.cancelChannelPostCycles(chan); if (cancelled == 0) { chan.sendMessage(\"No requests to cancel for this channel.\").queue(); }else { chan.sendMessage(\"Cancelled all requests for this channel.\").queue(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5665/buggy-version/src.main.java.hjeisa.waifubot.ServerMessageListener.java", "BodyUseAPI": [], "Fixed commit": "fcdb65ff4b496a88414e59cca50777d2d5d803d5", "Url": "https://api.github.com/repos/isakvik/waifubot", "Date": "2017-10-30T18:29:23Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.WindowManager.getDefaultDisplay()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((d.getWidth()) < (d.getHeight())) { mc.lib.screen.ScreenHelper.wh[0] = d.getWidth(); mc.lib.screen.ScreenHelper.wh[1] = d.getHeight(); }else { mc.lib.screen.ScreenHelper.wh[1] = d.getWidth(); mc.lib.screen.ScreenHelper.wh[0] = d.getHeight(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/856/buggy-version/src.mc.lib.screen.ScreenHelper.java", "BodyUseAPI": ["android.view.Display.getWidth()", "android.view.Display.getHeight()", "android.view.Display.getWidth()", "android.view.Display.getHeight()"], "Fixed commit": "33b568cfff18e752a8fb20607ca37195808830db", "Url": "https://api.github.com/repos/mc-android-developer/mclib", "Date": "2013-05-07T11:44:58Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.mMap) != null) { this.mMap.setOnMyLocationChangeListener(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/534/buggy-version/app.src.main.java.com.mbsurfer.ui.fragment.MyLocationOptionFragment.java", "BodyUseAPI": [], "Fixed commit": "16cc91bebc57b05de98f7417b5166539fb029696", "Url": "https://api.github.com/repos/GrzegorzFeather/open-mbsurfer", "Date": "2015-01-27T02:42:44Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((prov.addProvenance(p)) && (dc.save())) && (prov.save())) return \"OK\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/9013/buggy-version/portal.src.main.java.edu.isi.wings.portal.controllers.DataController.java", "BodyUseAPI": [], "Fixed commit": "3627069c827f3c885443b97a17a737beea89c817", "Url": "https://api.github.com/repos/IKCAP/wings", "Date": "2014-10-15T23:43:22Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((m.originalSpan.size()) > 0) { java.lang.String lastWord = m.originalSpan.get(((m.originalSpan.size()) - 1)).get(CoreAnnotations.TextAnnotation.class); if (((lastWord.equals(\"'s\")) || (lastWord.equals(\"'\"))) && ((m.originalSpan.size()) != 1)) endIdx--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5642/buggy-version/src.edu.stanford.nlp.dcoref.RuleBasedCorefMentionFinder.java", "BodyUseAPI": ["m.originalSpan.size()", "m.originalSpan.size()", "m.originalSpan.get(((m.originalSpan.size()) - 1)).get(java.lang.Class)", "m.originalSpan.get(((m.originalSpan.size()) - 1))"], "Fixed commit": "10d230a95e549ce18d4ec30dd51d73dba872aa51", "Url": "https://api.github.com/repos/stanfordnlp/CoreNLP", "Date": "2013-08-20T00:25:35Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.inner().backendIPConfiguration()) == null) { return null; }else { return this.inner().backendIPConfiguration().id(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4936/buggy-version/azure-mgmt-network.src.main.java.com.microsoft.azure.management.network.implementation.InboundNatRuleImpl.java", "BodyUseAPI": [], "Fixed commit": "57001dab891ab5598c144d32a1b4a191fa898986", "Url": "https://api.github.com/repos/martinsawicki/azure-sdk-for-java", "Date": "2016-08-25T13:28:29Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == (com.musala.atmosphere.agent.devicewrapper.util.ondevicecomponent.DeviceRequestSender.CONNECTION_RETRY_LIMIT)) { com.musala.atmosphere.agent.devicewrapper.util.ondevicecomponent.DeviceRequestSender.LOGGER.error(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8915/buggy-version/src.main.java.com.musala.atmosphere.agent.devicewrapper.util.ondevicecomponent.DeviceRequestSender.java", "BodyUseAPI": [], "Fixed commit": "70f8e60ffcf3a9ac975eda42151251d19eb80945", "Url": "https://api.github.com/repos/MusalaSoft/atmosphere-agent", "Date": "2017-02-14T15:34:03Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(c.contains(\"input\"))) { MainFrame.octavePanel.evaluate(((\"DomainMath_OctaveVariables('\" + (org.domainmath.gui.MainFrame.parent_root)) + \"DomainMath_OctaveVariables.dat',whos);\")); MainFrame.varView.reload(); MainFrame.varView.reload(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6805/buggy-version/DomainMathIDE.src.org.domainmath.gui.octave.OctavePanel.java", "BodyUseAPI": [], "Fixed commit": "9dfb8f2186151f04ce0505888acd6bbb980a1241", "Url": "https://api.github.com/repos/vinukn/domainmath-ide", "Date": "2013-02-05T06:37:14Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operation instanceof com.owncloud.android.operations.GetSharesForFileOperation) { if ((result.getCode()) == (com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode.MAINTENANCE_MODE)) { message = res.getString(R.string.maintenance_mode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1143/buggy-version/src.com.owncloud.android.utils.ErrorMessageAdapter.java", "BodyUseAPI": [], "Fixed commit": "e2f4b9c15fac8e309fa5737e707b2db6ef9700e6", "Url": "https://api.github.com/repos/owncloud/android", "Date": "2016-12-28T09:27:05Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.context) != null) { this.context = context; accountDataSource = new com.example.locus.core.AccountDataSource(context); accountDataSource.open(); messageDataSource = new com.example.locus.core.MessageDataSource(context, accountDataSource); messageDataSource.open(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7198/buggy-version/Locus.src.com.example.locus.core.CoreImpl.java", "BodyUseAPI": [], "Fixed commit": "6d6ed57f0cc39d67916f4b327423789667906d94", "Url": "https://api.github.com/repos/Wenyao/LocUs", "Date": "2013-04-30T00:18:41Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSupportFragmentManager().findFragmentById(R.id.content)) == null) { android.support.v4.app.FragmentTransaction transaction = getSupportFragmentManager().beginTransaction(); transaction.add(R.id.content, favoritesFragment); if ((findViewById(R.id.detail)) != null) { transaction.add(R.id.detail, channelFragment); } transaction.commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2542/buggy-version/src.ch.citux.td.ui.TDActivity.java", "BodyUseAPI": [], "Fixed commit": "796319401701d6982d07eedaf6779ce214fc80c2", "Url": "https://api.github.com/repos/CiTuX/TD", "Date": "2014-01-25T16:54:02Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((InventoryHelper.waitTicks) > 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1613/buggy-version/src.main.java.com.rolandoislas.multihotbar.HotbarLogic.java", "BodyUseAPI": [], "Fixed commit": "ac9020802057fa2986208bd3c179ef8eba416e31", "Url": "https://api.github.com/repos/rolandoislas/multi-hotbar", "Date": "2016-06-14T23:03:09Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((InventoryHelper.waitTicks) > 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1613/buggy-version/src.main.java.com.rolandoislas.multihotbar.HotbarLogic.java", "BodyUseAPI": [], "Fixed commit": "ac9020802057fa2986208bd3c179ef8eba416e31", "Url": "https://api.github.com/repos/rolandoislas/multi-hotbar", "Date": "2016-06-14T23:03:09Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (connDef instanceof org.jboss.jca.common.api.metadata.common.v12.CommonConnDef) { setAttribute(model, org.jboss.as.connector.subsystems.resourceadapters.Constants.CONNECTABLE, ((org.jboss.jca.common.api.metadata.common.v12.CommonConnDef) (connDef)).isConnectable()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8880/buggy-version/connector.src.main.java.org.jboss.as.connector.subsystems.resourceadapters.IronJacamarResourceCreator.java", "BodyUseAPI": [], "Fixed commit": "afbd110751959defacd12aa7dcbc327f86161195", "Url": "https://api.github.com/repos/ErhardSiegl/jboss-as", "Date": "2014-03-20T13:52:55Z"},
{"Line": "=>431", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.getCash()) < 50) { java.lang.System.out.println(\"You do not have enough money to bail out. Would you like to mortgage property to do so? If this is your third turn, you will be forced to chose yes. 1:yes\\t2:no\"); int input = parseInput(cs1.Keyboard.readString(), 2); if ((input == 1) || ((p.getJailTurns()) >= 3)) { java.lang.System.out.println(\"Mortgage until you get at least $50. If you do not do so or cannot do so and end mortgaging, you will lose.\"); offerMortgageOptions(p, 0); if ((p.getCash()) < 50) return; } }else p.setJailTurns(((p.getJailTurns()) + 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2451/buggy-version/Monopoly.java", "BodyUseAPI": ["Player.getJailTurns()", "Player.getJailTurns()", "Monopoly.offerMortgageOptions(Player,int)", "Player.getCash()", "Player.setJailTurns(((p.getJailTurns()) + 1))"], "Fixed commit": "c745ab383132eb58dd33cc12feb946430db45369", "Url": "https://api.github.com/repos/alanc2k17/Team-Admeyerable-Pennybags", "Date": "2016-01-23T05:21:30Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((roboDrive.getProfile()) == 2) { damp = 1 - ((roboDrive.getSlider()) * 0.7); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/951/buggy-version/RobotCode.src.org.usfirst.frc.team1891.robot.JAGValue.java", "BodyUseAPI": ["org.usfirst.frc.team1891.robot.DriveMaster.getSlider()"], "Fixed commit": "f9c0b4f3a650245ad00429c3763b1758791d6503", "Url": "https://api.github.com/repos/sylsr/FRC2015Robot", "Date": "2015-01-31T17:39:00Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getFeatureMethod().getReflection().getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (result == null) { result = getParent().getReflection().getAnnotation(spock.lang.Unroll.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6196/buggy-version/spock-core.src.main.java.org.spockframework.runtime.model.FeatureInfo.java", "BodyUseAPI": [], "Fixed commit": "9329b7edf2b113db627ea6a485aad4d09e2569e7", "Url": "https://api.github.com/repos/fpape/spock", "Date": "2012-02-17T04:20:18Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mLastFragment.equals(mMapFragment))) { fragmentManager.beginTransaction().replace(R.id.content_frame, mLastFragment).addToBackStack(null).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4163/buggy-version/android.src.com.sims.topaz.DrawerActivity.java", "BodyUseAPI": ["fragmentManager.beginTransaction().replace(R.id.content_frame,android.support.v4.app.Fragment)", "fragmentManager.beginTransaction().replace(R.id.content_frame, mLastFragment).addToBackStack(null).commit()", "fragmentManager.beginTransaction().replace(R.id.content_frame, mLastFragment).addToBackStack(<nulltype>)"], "Fixed commit": "0098ca1e33f6fee4bef0c2c5a3fdb24afb7df7f6", "Url": "https://api.github.com/repos/SIMS-Topaz/sims-topaz-android", "Date": "2014-02-25T10:30:31Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((net.osmand.plus.voice.TTSCommandPlayerImpl.mTts.getVoice()) != null) { net.osmand.plus.voice.TTSCommandPlayerImpl.ttsVoiceName = ((net.osmand.plus.voice.TTSCommandPlayerImpl.ttsVoiceName) + \"\\n\\n\") + (net.osmand.plus.voice.TTSCommandPlayerImpl.mTts.getVoice().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4056/buggy-version/OsmAnd.src.net.osmand.plus.voice.TTSCommandPlayerImpl.java", "BodyUseAPI": ["android.speech.tts.TextToSpeech.getVoice()", "net.osmand.plus.voice.TTSCommandPlayerImpl.mTts.getVoice().toString()"], "Fixed commit": "ae922a991b1b8f1563491586587ba68a15a56ba1", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2016-12-18T14:50:23Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((path[0].charAt(((path[0].length()) - 1))) != '/') path[0] += \"/\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5734/buggy-version/src.main.java.simon.SecureStorage.Main.java", "BodyUseAPI": [], "Fixed commit": "6cc609c3fa3941dd469599dcef1c212ab3c18aec", "Url": "https://api.github.com/repos/simonq80/SimonsSecurishStorage", "Date": "2016-03-28T23:22:04Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.openintents.cloudsync.notepad.AsyncApplyResult.debug) android.util.Log.e(org.openintents.cloudsync.notepad.AsyncApplyResult.TAG, \"Json Format error in AsyncApplyResult:-> \", e);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5064/buggy-version/OICloudSync-Android.src.org.openintents.cloudsync.notepad.AsyncApplyResult.java", "BodyUseAPI": [], "Fixed commit": "c0b24cabeea63930e2a57f7ee8cbca33b884c055", "Url": "https://api.github.com/repos/openintents/cloudsync", "Date": "2012-08-20T15:44:26Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (noteobj.has(\"tags\")) { if ((!(noteobj.getString(\"tags\").trim().equals(\"null\"))) | (noteobj.getString(\"tags\").trim().equals(\"\"))) { values.put(Notes.TAGS, noteobj.getString(\"tags\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5064/buggy-version/OICloudSync-Android.src.org.openintents.cloudsync.notepad.AsyncApplyResult.java", "BodyUseAPI": ["noteobj.getString(\"tags\").trim().equals(java.lang.String)", "noteobj.getString(\"tags\").trim().equals(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)", "noteobj.getString(\"tags\").trim()", "noteobj.getString(\"tags\").trim()", "android.content.ContentValues.put(Notes.TAGS,noteobj.getString(\"tags\"))"], "Fixed commit": "c0b24cabeea63930e2a57f7ee8cbca33b884c055", "Url": "https://api.github.com/repos/openintents/cloudsync", "Date": "2012-08-20T15:44:26Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(((noteobj.getString(\"encrypted\").trim().equals(\"null\")) | ((noteobj.getBoolean(\"encrypted\")) != false)) | (noteobj.getString(\"encrypted\").trim().equals(\"\")))) | (noteobj.getString(\"encrypted\").trim().equals(\"false\"))) { if (!((noteobj.getBoolean(\"encrypted\")) == false)) { values.put(Notes.ENCRYPTED, noteobj.getLong(\"encrypted\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5064/buggy-version/OICloudSync-Android.src.org.openintents.cloudsync.notepad.AsyncApplyResult.java", "BodyUseAPI": ["org.json.JSONObject.getLong(java.lang.String)", "android.content.ContentValues.put(Notes.ENCRYPTED,noteobj.getLong(\"encrypted\"))", "org.json.JSONObject.getBoolean(java.lang.String)"], "Fixed commit": "c0b24cabeea63930e2a57f7ee8cbca33b884c055", "Url": "https://api.github.com/repos/openintents/cloudsync", "Date": "2012-08-20T15:44:26Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((null == field) || (null == issue)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7129/buggy-version/src.main.java.ru.mail.jira.plugins.disposition.customfields.IssueDispositionCF.java", "BodyUseAPI": [], "Fixed commit": "99eb5a05fbebe53ea087b5ff44c6497f9ea79789", "Url": "https://api.github.com/repos/grundic/jira-issues-disposition", "Date": "2012-09-19T08:39:44Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((item.type) == (net.osmand.plus.configuremap.ConfigureSettingsMenu.BACK_HEADER)) { app.getMapActivity().getMapActions().createOptionsMenuAsDrawer(false); }else if ((item.type) == (net.osmand.plus.configuremap.ConfigureSettingsMenu.LAYER)) { if (ch != null) { ch.setChecked((!(ch.isChecked()))); } if ((item.nameId) == (R.string.layer_poi)) { final net.osmand.plus.configuremap.OsmandSettings.OsmandPreference<java.lang.Boolean> pref = ((net.osmand.plus.configuremap.OsmandSettings.OsmandPreference<java.lang.Boolean>) (item.preference)); boolean value = !(pref.get()); if (value) { selectPOIFilterLayer(null); } }else { showGPXFileDialog(getAlreadySelectedGpx()); } }else { final net.osmand.plus.configuremap.OsmandSettings.OsmandPreference<java.lang.Boolean> pref = ((net.osmand.plus.configuremap.OsmandSettings.OsmandPreference<java.lang.Boolean>) (item.preference)); pref.set((!(pref.get()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7049/buggy-version/OsmAnd.src.net.osmand.plus.configuremap.ConfigureSettingsMenu.java", "BodyUseAPI": [], "Fixed commit": "9487c9add28286d5723ea5484be1bd6894822d7c", "Url": "https://api.github.com/repos/Bars107/Osmand", "Date": "2014-10-20T15:43:34Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (responseIsChunked(response)) { consumer = new rx.apache.http.consumers.ResponseConsumerChunked(observer, subscription); }else { consumer = new rx.apache.http.consumers.ResponseConsumerBasic(observer, subscription); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1333/buggy-version/src.main.java.rx.apache.http.consumers.ResponseConsumerDelegate.java", "BodyUseAPI": [], "Fixed commit": "41f97f8394c03453cdf3bb1c58415c85beb5ca8e", "Url": "https://api.github.com/repos/ylecaillez/RxApacheHttp", "Date": "2014-10-16T13:52:43Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (str.endsWith(\" \")) { textWidth += font.getSpaceWidth(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4118/buggy-version/src.seventh.client.gfx.GdxCanvas.java", "BodyUseAPI": [], "Fixed commit": "85bcbc25a8be9f4ad3a38de2abb328cfa387ddaa", "Url": "https://api.github.com/repos/tonysparks/seventh", "Date": "2017-01-02T19:01:19Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((de.domisum.lib.compitum.CompitumLib.instance) == null) throw new java.lang.IllegalArgumentException(((de.domisum.lib.compitum.CompitumLib.class.getSimpleName()) + \" has to be initialized before usage\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8154/buggy-version/src.main.java.de.domisum.lib.compitum.CompitumLib.java", "BodyUseAPI": [], "Fixed commit": "254e43dc1b0c43b7524bdf71d8c2918623d42513", "Url": "https://api.github.com/repos/domisum/CompitumLib", "Date": "2016-11-24T21:04:32Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((code.slot) == 0) && (wyil.transforms.Type.isSubtype(wyil.transforms.Type.T_PROCESS(Type.T_ANY), iter))) { wyil.transforms.Type.Process p = ((wyil.transforms.Type.Process) (iter)); iter = p.element(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2683/buggy-version/src.wyil.transforms.BackPropagation.java", "BodyUseAPI": [], "Fixed commit": "e0d1d0d5cc8a6187d77e9f291d2e4268f75d9c90", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-06-12T02:53:24Z"},
{"Line": "=>1850", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sorcer.util.GenericUtil.getJobControlWrapperScript(java.io.File,java.util.Vector<java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((wrapperScript.get(0)) != null) && (wrapperScript.get(0).contains(\"bash\"))) scriptCommand[0] = \"bash\"; else scriptCommand[0] = \"sh\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2274/buggy-version/sos.sos-util.src.main.java.sorcer.util.GenericUtil.java", "BodyUseAPI": [], "Fixed commit": "42c9c5d6cad2a694691f4bc77d1f43242f226610", "Url": "https://api.github.com/repos/sorcersoft/sorcer", "Date": "2014-10-28T11:09:29Z"},
{"Line": "=>1638", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!flag) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6188/buggy-version/src.main.java.flaxbeard.steamcraft.handler.SteamcraftEventHandler.java", "BodyUseAPI": [], "Fixed commit": "dbbb65160dad3dd07b6bc0a9fffa4df62a6bd45e", "Url": "https://api.github.com/repos/Esteemed-Innovation/Esteemed-Innovation", "Date": "2015-12-30T04:53:29Z"},
{"Line": "=>754", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isPaging) { showPagingProgress(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2113/buggy-version/xcore.src.by.istin.android.xcore.fragment.XListFragment.java", "BodyUseAPI": [], "Fixed commit": "d74fde3ad18a145bbd7ff90b43af59b8880c9d9f", "Url": "https://api.github.com/repos/IstiN/android_xcore", "Date": "2013-10-19T23:18:52Z"},
{"Line": "=>740", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isPaging) { showPagingProgress(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2113/buggy-version/xcore.src.by.istin.android.xcore.fragment.XListFragment.java", "BodyUseAPI": [], "Fixed commit": "d74fde3ad18a145bbd7ff90b43af59b8880c9d9f", "Url": "https://api.github.com/repos/IstiN/android_xcore", "Date": "2013-10-19T23:18:52Z"},
{"Line": "=>563", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mEndlessScrollListener) != null) && (mEndlessScrollListener.pagingLoading)) { mEndlessScrollListener.pagingLoading = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2113/buggy-version/xcore.src.by.istin.android.xcore.fragment.XListFragment.java", "BodyUseAPI": [], "Fixed commit": "d74fde3ad18a145bbd7ff90b43af59b8880c9d9f", "Url": "https://api.github.com/repos/IstiN/android_xcore", "Date": "2013-10-19T23:18:52Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["flashcards.GoogleDatastoreFacade.getDeck(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (deck != null) { ofy().delete().entity(deck).now(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/420/buggy-version/src.flashcards.GoogleDatastoreFacade.java", "BodyUseAPI": ["ofy().delete().entity(flashcards.Deck)", "ofy().delete().entity(deck).now()"], "Fixed commit": "cf8c68185d4e438bf8e9af4b37d1b8a175474bcf", "Url": "https://api.github.com/repos/hqchai/UCLA-Translate-Flashcards", "Date": "2014-03-05T11:48:39Z"},
{"Line": "=>1764", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<org.caltoopia.ir.Declaration>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((asList.size()) > size) { body.getDeclarations().addAll(asList.subList(size, asList.size())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8074/buggy-version/org.caltoopia.frontend.src.org.caltoopia.codegen.IR2CIR.java", "BodyUseAPI": ["java.util.List<org.caltoopia.ir.Declaration>.size()", "body.getDeclarations().addAll(asList.subList(size, asList.size()))", "java.util.List<org.caltoopia.ir.Declaration>.subList(int,asList.size())"], "Fixed commit": "3b7d6d369d3a570e9b9a01ecd36cff5d1d281e41", "Url": "https://api.github.com/repos/Caltoopia/caltoopia", "Date": "2013-01-31T13:21:38Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URL.openConnection()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((connection.getResponseCode()) == 416) { java.lang.System.out.println(\"Response Code 416\"); dTableModel.setValueAt(\"100%\", i, 2); }else if (((connection.getResponseCode()) / 100) != 2) { java.lang.System.err.println(\"Unknown response code!\"); }else { java.lang.String connectionField = connection.getHeaderField(\"content-range\"); if (connectionField != null) { java.lang.String[] connectionRanges = connectionField.substring(\"bytes=\".length()).split(\"-\"); downloadedSize = java.lang.Long.valueOf(connectionRanges[0]); } if ((connectionField == null) && (outputFileCache.exists())) outputFileCache.delete(); fileLength = (connection.getContentLength()) + downloadedSize; input = new java.io.BufferedInputStream(connection.getInputStream()); output = new java.io.RandomAccessFile(outputFileCache, \"rw\"); output.seek(downloadedSize); byte[] data = new byte[1024]; int count = 0; int __progress = 0; while (((count = input.read(data, 0, 1024)) != (-1)) && (__progress != 100)) { downloadedSize += count; output.write(data, 0, count); __progress = ((int) ((downloadedSize * 100) / fileLength)); dTableModel.setValueAt((__progress + \"%\"), i, 2); } output.close(); input.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5821/buggy-version/src.Downloader.java", "BodyUseAPI": ["java.net.HttpURLConnection.getContentLength()", "java.net.HttpURLConnection.getResponseCode()", "java.net.HttpURLConnection.getHeaderField(java.lang.String)", "java.net.HttpURLConnection.getInputStream()"], "Fixed commit": "d484d6a6298d561b6c4a5e35d61c3bed89b2f092", "Url": "https://api.github.com/repos/R3DST0RM/MediaDownloader", "Date": "2015-11-03T21:33:39Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getItem().getItemStack()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((item == null) || ((item.getTypeId()) == 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4890/buggy-version/src.main.java.net.t7seven7t.craftfx.listener.PlayerListener.java", "BodyUseAPI": [], "Fixed commit": "8a853258bbbe6fa7054d2d426b3b212ce7c403f0", "Url": "https://api.github.com/repos/t7seven7t/CraftFX", "Date": "2016-02-03T22:53:27Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ListIterator<org.bukkit.inventory.ItemStack>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((item == null) || ((item.getTypeId()) == 0)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4890/buggy-version/src.main.java.net.t7seven7t.craftfx.listener.PlayerListener.java", "BodyUseAPI": [], "Fixed commit": "8a853258bbbe6fa7054d2d426b3b212ce7c403f0", "Url": "https://api.github.com/repos/t7seven7t/CraftFX", "Date": "2016-02-03T22:53:27Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (is_update) java.lang.System.out.println(response.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4112/buggy-version/Infrastructure.SVM.SVM_IN.src.main.java.it.svm.iot.in.MyWebSocketHandler.java", "BodyUseAPI": [], "Fixed commit": "009ca37c7702190f3f654c2a32999d7a55bf30e2", "Url": "https://api.github.com/repos/paulrox/SmartVendingMachines", "Date": "2017-08-30T14:46:37Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentNumberOfSentencesPerLine > 0) { currentNumberOfSentencesPerLine--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1523/buggy-version/src.SentenceBoundaryDetection.java", "BodyUseAPI": [], "Fixed commit": "8b3d269d94aa32b0cbcab9feda7efb25c7e58d8b", "Url": "https://api.github.com/repos/arvids/SentenceBoundary", "Date": "2014-11-02T19:44:44Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (\"\".equals(lines[i])) { ssb.delete(index, ((index + (\"\".length())) + (i == ((lines.length) - 1) ? 0 : \"\\n\".length()))); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4041/buggy-version/rxmarkdown.src.main.java.com.yydcdut.rxmarkdown.grammar.android.CodeGrammar.java", "BodyUseAPI": ["android.text.SpannableStringBuilder.delete(int,int)"], "Fixed commit": "46d287a35e26c8507c86f64f67899742dd88bc21", "Url": "https://api.github.com/repos/yydcdut/RxMarkdown", "Date": "2016-06-23T03:08:40Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (damage > 0) divineShield_ = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2822/buggy-version/src.com.hearthsim.card.minion.Minion.java", "BodyUseAPI": [], "Fixed commit": "25fc112b62e13efaf2a9b6881d178d7ff676062a", "Url": "https://api.github.com/repos/oyachai/HearthSim", "Date": "2014-07-13T16:35:58Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((itemFactory) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8819/buggy-version/src.main.java.de.mineformers.investiture.core.RegistryCollectionEvent.java", "BodyUseAPI": [], "Fixed commit": "535cf971ba847405cea6435697d4b73d1c3b8259", "Url": "https://api.github.com/repos/PaleoCrafter/investiture", "Date": "2017-06-24T16:13:15Z"},
{"Line": "=>550", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isPlaying) { mPointer.startAnimation(animation_off_to_on); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/991/buggy-version/app.src.main.java.com.ifchan.music.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "2304560e01f675291c320fd58d568b0cae5c8852", "Url": "https://api.github.com/repos/Chen-Yufeng/Music", "Date": "2017-11-16T08:59:34Z"},
{"Line": "=>546", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isPlaying) { mPointer.startAnimation(animation_on_to_off); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/991/buggy-version/app.src.main.java.com.ifchan.music.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "2304560e01f675291c320fd58d568b0cae5c8852", "Url": "https://api.github.com/repos/Chen-Yufeng/Music", "Date": "2017-11-16T08:59:34Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["MGlobal.lua.run(org.luaj.vm2.LuaValue,LuaValue.NIL)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (result != (org.luaj.vm2.LuaValue.NIL)) { java.lang.Object resultObject = org.luaj.vm2.lib.jse.CoerceLuaToJava.coerce(result, java.lang.Object.class); java.lang.System.out.println(resultObject.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6167/buggy-version/src.saga-desktop.src.net.wombatrpgs.saga.core.DebugThread.java", "BodyUseAPI": ["org.luaj.vm2.lib.jse.CoerceLuaToJava.coerce(org.luaj.vm2.LuaValue,java.lang.Class)"], "Fixed commit": "d537d5ec9e3f80a2371e2f6657ae096ba3fd213a", "Url": "https://api.github.com/repos/psywombats/mgne", "Date": "2014-09-21T04:37:47Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCurrentVideoControllerView) != null) mCurrentVideoControllerView.setCanShowControllerView(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7957/buggy-version/app.src.main.java.com.brucetoo.listvideoplay.demo.ListViewSmallScreenFragment.java", "BodyUseAPI": [], "Fixed commit": "81f2a59dcfb3f0ad24e1b560a3c650a6af023a9c", "Url": "https://api.github.com/repos/brucetoo/ListVideoPlay", "Date": "2016-10-31T13:08:55Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mCurrentVideoControllerView) != null) && (!(mCanMoveVideoContainer))) { mCurrentVideoControllerView.setCanShowControllerView(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7957/buggy-version/app.src.main.java.com.brucetoo.listvideoplay.demo.ListViewSmallScreenFragment.java", "BodyUseAPI": [], "Fixed commit": "81f2a59dcfb3f0ad24e1b560a3c650a6af023a9c", "Url": "https://api.github.com/repos/brucetoo/ListVideoPlay", "Date": "2016-10-31T13:08:55Z"},
{"Line": "=>427", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCurrentVideoControllerView) != null) mCurrentVideoControllerView.setCanShowControllerView(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7957/buggy-version/app.src.main.java.com.brucetoo.listvideoplay.demo.RecyclerViewSmallScreenFragment.java", "BodyUseAPI": [], "Fixed commit": "81f2a59dcfb3f0ad24e1b560a3c650a6af023a9c", "Url": "https://api.github.com/repos/brucetoo/ListVideoPlay", "Date": "2016-10-31T13:08:55Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mCurrentVideoControllerView) != null) && (!(mCanMoveVideoContainer))) { mCurrentVideoControllerView.setCanShowControllerView(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7957/buggy-version/app.src.main.java.com.brucetoo.listvideoplay.demo.RecyclerViewSmallScreenFragment.java", "BodyUseAPI": [], "Fixed commit": "81f2a59dcfb3f0ad24e1b560a3c650a6af023a9c", "Url": "https://api.github.com/repos/brucetoo/ListVideoPlay", "Date": "2016-10-31T13:08:55Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newText1 == null) newText1 = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/9012/buggy-version/DroneApplication.app.src.main.java.fr.m2gla.istic.projet.activity.SVGAdapter.java", "BodyUseAPI": [], "Fixed commit": "455ad0c82bdf7857d5d2422480d5588f12180299", "Url": "https://api.github.com/repos/drone-project-m2gla/M2GLAProject-Drone-Project", "Date": "2015-04-14T09:57:00Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newText2 == null) newText2 = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/9012/buggy-version/DroneApplication.app.src.main.java.fr.m2gla.istic.projet.activity.SVGAdapter.java", "BodyUseAPI": [], "Fixed commit": "455ad0c82bdf7857d5d2422480d5588f12180299", "Url": "https://api.github.com/repos/drone-project-m2gla/M2GLAProject-Drone-Project", "Date": "2015-04-14T09:57:00Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((color == null) || ((color.length()) != 6)) color = \"ff0000\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/9012/buggy-version/DroneApplication.app.src.main.java.fr.m2gla.istic.projet.activity.SVGAdapter.java", "BodyUseAPI": [], "Fixed commit": "455ad0c82bdf7857d5d2422480d5588f12180299", "Url": "https://api.github.com/repos/drone-project-m2gla/M2GLAProject-Drone-Project", "Date": "2015-04-14T09:57:00Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kruth.symbol.lexers.SpaceLexer.peek()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (functionMap.containsKey(name)) { lexer.next(); com.kruth.symbol.Function function = functionMap.get(name); java.util.Map<java.lang.String, com.kruth.symbol.expression.Expression> parameterExpressionMap = new java.util.HashMap<>(); for (java.lang.String parameter : function.getParameters()) { parameterExpressionMap.put(parameter, new com.kruth.symbol.expression.Expression(instructionState, lexer)); } return function.execute(instructionState, parameterExpressionMap); }else if (((parentState) != null) && (parentState.hasFunction(name))) { return parentState.parseFunctionCall(parentState, lexer); }else { java.lang.System.out.println((\"ERROR: Function is not defined: \" + name)); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1644/buggy-version/src.main.java.com.kruth.symbol.InstructionState.java", "BodyUseAPI": ["java.util.Map<java.lang.String, com.kruth.symbol.Function>.get(java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "com.kruth.symbol.InstructionState.hasFunction(java.lang.String)"], "Fixed commit": "f38190e04c4b080feb2f554f69978f2565935344", "Url": "https://api.github.com/repos/kruthar/symbol", "Date": "2016-04-13T01:46:38Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(activity.shirts.isEmpty())) && (!(activity.pants.isEmpty()))) { if (activity.wardrobeDataSource.isWornToday(activity.shirts.get(shirtPosition).getId(), activity.pants.get(pantPosition).getId())) { selection.setChecked(true); }else { selection.setChecked(false); } if (activity.wardrobeDataSource.isFavourite(activity.shirts.get(shirtPosition).getId(), activity.pants.get(pantPosition).getId())) { favorite.setChecked(true); }else { favorite.setChecked(false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3203/buggy-version/src.com.example.android.wardrobe.fragments.SelectionFragment.java", "BodyUseAPI": ["activity.wardrobeDataSource.isWornToday(activity.shirts.get(shirtPosition).getId(),activity.pants.get(pantPosition).getId())", "activity.shirts.get(shirtPosition).getId()", "activity.pants.get(int)", "activity.pants.get(pantPosition).getId()", "activity.pants.get(int)", "activity.wardrobeDataSource.isFavourite(activity.shirts.get(shirtPosition).getId(),activity.pants.get(pantPosition).getId())", "activity.shirts.get(int)", "activity.shirts.get(int)", "activity.pants.get(pantPosition).getId()", "activity.shirts.get(shirtPosition).getId()"], "Fixed commit": "df7e5ccf1821cba511a3a02852a5c4984d36aeb8", "Url": "https://api.github.com/repos/sam6230i/wardrobe", "Date": "2013-10-26T21:49:54Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((content == null) || (content.equals(\"\"))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7268/buggy-version/app.src.main.java.jp.ac.titech.psg.nakano.keyphrasememo.activities.fragments.GetTagTask.java", "BodyUseAPI": [], "Fixed commit": "88f5a85cbe2af94234f1549dae4c9286a1d04464", "Url": "https://api.github.com/repos/mi-nakano/KeyphraseMemo", "Date": "2015-07-23T00:40:48Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(line.isEmpty())) { for (int i = 0; i < (line.length()); i++) writtenChars.add(((int) (line.charAt(i)))); no.fictive.irclib.control.IRCBufferedWriter.logger.error(java.lang.String.format(\"Line in decimal: %s\", writtenChars)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4896/buggy-version/src.main.java.no.fictive.irclib.control.IRCBufferedWriter.java", "BodyUseAPI": ["java.lang.String.charAt(int)", "java.lang.String.length()", "java.util.List<java.lang.Integer>.add(char)"], "Fixed commit": "3176ab31242873977f5c60d5aab3c62ca97efd14", "Url": "https://api.github.com/repos/espenja/irclib", "Date": "2013-05-25T16:23:55Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (line == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4896/buggy-version/src.main.java.no.fictive.irclib.control.IRCBufferedWriter.java", "BodyUseAPI": [], "Fixed commit": "3176ab31242873977f5c60d5aab3c62ca97efd14", "Url": "https://api.github.com/repos/espenja/irclib", "Date": "2013-05-25T16:23:55Z"},
{"Line": "=>1400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clusterTable) != null) { return clusterTable; }else { try { org.cytoscape.model.CyNetwork network = networkParams.getNetwork(); org.cytoscape.model.CyTableManager tableManager = networkParams.getModelManager().getTableManager(); java.lang.String tableName = cloudName.substring(0, cloudName.indexOf(\" Cloud \")); return tableManager.getTable(network.getDefaultNetworkTable().getRow(network.getSUID()).get(tableName, java.lang.Long.class)); } catch (java.lang.Exception e) { return null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/610/buggy-version/src.main.java.org.baderlab.wordcloud.internal.CloudParameters.java", "BodyUseAPI": [], "Fixed commit": "16c2f4fa517fcf7e9f2065c01e13b1064599d98c", "Url": "https://api.github.com/repos/BaderLab/WordCloudPlugin", "Date": "2014-08-01T20:18:25Z"},
{"Line": "=>648", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((limit == (java.lang.Integer.MAX_VALUE)) || ((plugins.size()) <= limit)) { return java.util.Collections.unmodifiableSortedMap(plugins); }else { return java.util.Collections.unmodifiableSortedMap(plugins.subMap(plugins.firstKey(), ((co.cask.cdap.internal.app.runtime.artifact.ArtifactDescriptor) (plugins.keySet().toArray()[limit])))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6573/buggy-version/cdap-app-fabric.src.main.java.co.cask.cdap.internal.app.runtime.artifact.ArtifactStore.java", "BodyUseAPI": ["java.util.SortedMap<co.cask.cdap.internal.app.runtime.artifact.ArtifactDescriptor, co.cask.cdap.api.plugin.PluginClass>.keySet()", "plugins.keySet().toArray()", "java.util.Collections.unmodifiableSortedMap(plugins.subMap(plugins.firstKey(), ((co.cask.cdap.internal.app.runtime.artifact.ArtifactDescriptor) (plugins.keySet().toArray()[limit]))))", "java.util.SortedMap<co.cask.cdap.internal.app.runtime.artifact.ArtifactDescriptor, co.cask.cdap.api.plugin.PluginClass>.firstKey()", "java.util.Collections.unmodifiableSortedMap(java.util.SortedMap<co.cask.cdap.internal.app.runtime.artifact.ArtifactDescriptor, co.cask.cdap.api.plugin.PluginClass>)", "java.util.SortedMap<co.cask.cdap.internal.app.runtime.artifact.ArtifactDescriptor, co.cask.cdap.api.plugin.PluginClass>.subMap(plugins.firstKey(),((co.cask.cdap.internal.app.runtime.artifact.ArtifactDescriptor) (plugins.keySet().toArray()[limit])))"], "Fixed commit": "03387b3af60c1c3329bdaef536f566e1b79053c5", "Url": "https://api.github.com/repos/caskdata/cdap", "Date": "2017-05-11T00:57:26Z"},
{"Line": "=>1069", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.broad.igv.ui.FileUtils.getFileExtension(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (extension == null) { extension = \".png\"; file = new java.io.File(((file.getAbsolutePath()) + extension)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2307/buggy-version/src.org.broad.igv.ui.IGV.java", "BodyUseAPI": [], "Fixed commit": "398e31e6453ea2eeb7a86b301490f8bd1f886abd", "Url": "https://api.github.com/repos/igvteam/igv", "Date": "2017-07-05T21:52:39Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((arg.length) == 1) { if (arg[0].equalsIgnoreCase(\"reload\")) { Vitality.instance.getServer().getPluginManager().disablePlugin(Vitality.instance); Vitality.instance.onLoad(); Vitality.instance.getServer().getPluginManager().enablePlugin(Vitality.instance); send(sender, \"Vitality Reloaded\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1157/buggy-version/src.main.java.org.cyberpwn.vitality.command.CommandVitality.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "bf0ef69a4fab788727597829df5707b191869d4d", "Url": "https://api.github.com/repos/cyberpwnn/Vitality", "Date": "2017-08-31T17:09:08Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (arguments == null) { throw new java.lang.IllegalArgumentException(\"One argument is expected\"); }else if ((arguments.size()) != 2) { throw new java.lang.IllegalArgumentException(((\"Two arguments were expected, \" + (arguments.size())) + \" were supplied\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/898/buggy-version/core-rules.src.main.java.org.hisp.dhis.rules.functions.RuleFunctionValidatePattern.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.size()"], "Fixed commit": "9db7f096b33bc785f32fcf43654793db265fc905", "Url": "https://api.github.com/repos/EyeSeeTea/dhis2-android-sdk", "Date": "2017-12-22T05:34:51Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.danielw.pentaho.di.plugin.step.redis.RedisOutputStep.environmentSubstitute(meta.getUrl())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((url == null) || (url.isEmpty())) { throw new java.lang.IllegalArgumentException(\"redis cluster url set configured\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/9225/buggy-version/src.main.java.cn.danielw.pentaho.di.plugin.step.redis.RedisOutputStep.java", "BodyUseAPI": [], "Fixed commit": "2de67aa7b7d23c5eacec0eb09d844799e2ffbda9", "Url": "https://api.github.com/repos/DanielYWoo/pentaho-di-redis-plugin", "Date": "2017-06-26T03:40:58Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tmt.getCurrentRound()) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1461/buggy-version/ChessClan.src.main.java.org.chessclan.presentationTier.frontControllers.TournamentsViewBean.java", "BodyUseAPI": [], "Fixed commit": "7e0ea0181e36149da2d33148efc2c0390ccf97be", "Url": "https://api.github.com/repos/gfduszynski/zpi", "Date": "2012-12-03T10:09:26Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((t.getCurrentRound()) != null) { for (org.chessclan.dataTier.models.PairingCard pc : t.getCurrentRound().getPairingCardSet()) { if ((pc.getPlayer().getId()) == (user.getId())) { userInTmt = true; } } if (userInTmt) { userTmt.add(t); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1461/buggy-version/ChessClan.src.main.java.org.chessclan.businessTier.businessObjects.impl.TournamentBOImpl.java", "BodyUseAPI": ["org.chessclan.dataTier.models.Tournament.getCurrentRound()", "t.getCurrentRound().getPairingCardSet()", "java.util.List<org.chessclan.dataTier.models.Tournament>.add(org.chessclan.dataTier.models.Tournament)"], "Fixed commit": "7e0ea0181e36149da2d33148efc2c0390ccf97be", "Url": "https://api.github.com/repos/gfduszynski/zpi", "Date": "2012-12-03T10:09:26Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((t.getCurrentRound()) != null) { t.getCurrentRound().getRoundState().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1461/buggy-version/ChessClan.src.main.java.org.chessclan.businessTier.businessObjects.impl.TournamentBOImpl.java", "BodyUseAPI": ["t.getCurrentRound().getRoundState().toString()", "org.chessclan.dataTier.models.Tournament.getCurrentRound()", "t.getCurrentRound().getRoundState()"], "Fixed commit": "7e0ea0181e36149da2d33148efc2c0390ccf97be", "Url": "https://api.github.com/repos/gfduszynski/zpi", "Date": "2012-12-03T10:09:26Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((groupsListAdapter) != null) { groupsListAdapter.clear(); groupsListAdapter.addAll(groupNames); groupsListAdapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4148/buggy-version/app.src.main.java.ca.dal.group5.jukefit.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "227efa0050846dde0f3ea82908ee53757af0a5cf", "Url": "https://api.github.com/repos/csci4126group5/jukebox-app", "Date": "2017-07-18T18:12:48Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(e instanceof com.pingcap.tikv.exception.GrpcUnrecoverableException)) { handleFailure(e, methodName, backOff.nextBackOffMillis()); }else { com.pingcap.tikv.policy.RetryPolicy.logger.error(java.lang.String.format(\"Failed to recover from last grpc error calling %s.\", methodName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1216/buggy-version/src.main.java.com.pingcap.tikv.policy.RetryPolicy.java", "BodyUseAPI": ["com.pingcap.tikv.policy.RetryPolicy<RespT>.handleFailure(java.lang.Exception,java.lang.String,backOff.nextBackOffMillis())"], "Fixed commit": "76e7f60b4cabb2fdc88ffe60262320f6c4a6f731", "Url": "https://api.github.com/repos/zhexuany/tikv-client-java", "Date": "2017-11-20T07:11:34Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.flink.configuration.Configuration.getString(ConfigConstants.EXECUTION_RETRY_DELAY_KEY,java.lang.String)", "org.apache.flink.configuration.Configuration.getString(ConfigConstants.AKKA_WATCH_HEARTBEAT_PAUSE,ConfigConstants.DEFAULT_AKKA_ASK_TIMEOUT)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (delayString.equals(pauseString)) { throw new java.lang.Exception(((((\"Invalid config value for \" + (org.apache.flink.configuration.ConfigConstants.AKKA_WATCH_HEARTBEAT_PAUSE)) + \": \") + pauseString) + \". Value must be a valid duration (such as '10 s' or '1 min')\")); }else { throw new java.lang.Exception(((((\"Invalid config value for \" + (org.apache.flink.configuration.ConfigConstants.EXECUTION_RETRY_DELAY_KEY)) + \": \") + delayString) + \". Value must be a valid duration (such as '100 milli' or '10 s')\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6101/buggy-version/flink-runtime.src.main.java.org.apache.flink.runtime.executiongraph.restart.RestartStrategyFactory.java", "BodyUseAPI": [], "Fixed commit": "a188010ed6b067629dbace6eda105e61d7665eff", "Url": "https://api.github.com/repos/tillrohrmann/flink", "Date": "2016-02-15T13:36:57Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (engine.equalsIgnoreCase(\"BOSE7\")) { return nl.giantit.minecraft.GiantShop.core.Eco.Eco.Engines.BOSE7; }else if (engine.equalsIgnoreCase(\"EWALLET\")) { return nl.giantit.minecraft.GiantShop.core.Eco.Eco.Engines.EWALLET; }else if (engine.equalsIgnoreCase(\"IC3O\")) { return nl.giantit.minecraft.GiantShop.core.Eco.Eco.Engines.IC3O; }else if (engine.equalsIgnoreCase(\"ICONOMY4\")) { return nl.giantit.minecraft.GiantShop.core.Eco.Eco.Engines.ICONOMY4; }else if (engine.equalsIgnoreCase(\"ICONOMY5\")) { return nl.giantit.minecraft.GiantShop.core.Eco.Eco.Engines.ICONOMY5; }else if (engine.equalsIgnoreCase(\"ICONOMY6\")) { return nl.giantit.minecraft.GiantShop.core.Eco.Eco.Engines.ICONOMY6; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7620/buggy-version/src.nl.giantit.minecraft.GiantShop.core.Eco.Eco.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "c61e58a7ce687b0b9b04cc49f8a052a55aad7bea", "Url": "https://api.github.com/repos/Thidox/GiantShop-2.0", "Date": "2012-04-01T21:10:50Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.support.v4.content.ContextCompat.checkSelfPermission(this, android.Manifest.permission.READ_PHONE_STATE)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) { android.support.v4.app.ActivityCompat.requestPermissions(this, new java.lang.String[]{ android.Manifest.permission.READ_PHONE_STATE }, 100); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5105/buggy-version/app.src.main.java.com.jiang.android.pushdemo.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c61628e41b2a7b3b7c7dfcc60224272cde6994a2", "Url": "https://api.github.com/repos/jiang111/AndroidPush", "Date": "2016-10-14T01:47:36Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mInvoices.isEmpty())) { mInvoices.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5956/buggy-version/app.src.main.java.com.example.admin.personnelefficiency.model.fragments.InvoiceListFragment.java", "BodyUseAPI": ["java.util.List<com.example.admin.personnelefficiency.model.model.Invoice>.clear()"], "Fixed commit": "91cca97f9e6ea644c05dbcca4cb29403fb2bcf9c", "Url": "https://api.github.com/repos/Scorpio93/MoneyFlow", "Date": "2017-12-20T15:54:12Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rawPrerequisite.endsWith(\".\")) { rawPrerequisite = rawPrerequisite.substring(0, ((rawPrerequisite.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1804/buggy-version/KBMP.src.backend.ModulesParser.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "ae8b2f05b485725288d0cc81671d2baaf8ee87fe", "Url": "https://api.github.com/repos/bsmmoon/KBMP", "Date": "2016-04-11T09:42:36Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jsonResult.getJSONArray(\"rows\").getJSONObject(0).getJSONArray(\"elements\").getJSONObject(0).getJSONObject(\"duration\").getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (time.contains(\"hours\")) { java.util.StringTokenizer token = new java.util.StringTokenizer(time, \"hours \"); h = java.lang.Integer.parseInt(token.nextToken()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8474/buggy-version/SmartAlarm.app.src.main.java.xavi.smartalarm.TrafficTimeAPI.java", "BodyUseAPI": [], "Fixed commit": "9e16c55813bf362ab5e489ffb87ce6a9c3154af1", "Url": "https://api.github.com/repos/xavimoya/AndroidProject", "Date": "2017-05-26T14:40:40Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.eclipse.rap.rwt.internal.service.ContextProvider.hasContext()) { java.lang.Object updater = org.eclipse.rap.rwt.RWT.getUISession().getAttribute(com.eclipsesource.tabris.internal.ui.UpdateUtil.UPDATER_PROPERTY); if ((updater != null) && (updater instanceof com.eclipsesource.tabris.internal.ui.UIUpdater)) { result = ((com.eclipsesource.tabris.internal.ui.UIUpdater) (updater)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/896/buggy-version/com.eclipsesource.tabris.src.com.eclipsesource.tabris.internal.ui.UpdateUtil.java", "BodyUseAPI": [], "Fixed commit": "5c99f24cca88ecc4dc8b567054cb7d829f292f89", "Url": "https://api.github.com/repos/eclipsesource/tabris", "Date": "2013-10-29T10:28:49Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(response instanceof javax.servlet.http.HttpServletResponse)) { chain.doFilter(request, response); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7860/buggy-version/src.main.java.jenkins.metrics.impl.MetricsFilter.java", "BodyUseAPI": ["javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"], "Fixed commit": "138e46a0c03db7fa9bb377cb4894529c65639d2b", "Url": "https://api.github.com/repos/jenkinsci/metrics-plugin", "Date": "2015-07-14T15:08:29Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.android.sunshine.DetailActivity.getIntent()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (intent.hasExtra(Intent.EXTRA_TEXT)) { java.lang.String weatherDetailText = intent.getStringExtra(Intent.EXTRA_TEXT); mWeatherDataDetail.setText(weatherDetailText); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6513/buggy-version/S04.02-Exercise-DisplayDayForecast.app.src.main.java.com.example.android.sunshine.DetailActivity.java", "BodyUseAPI": ["android.content.Intent.getStringExtra(Intent.EXTRA_TEXT)"], "Fixed commit": "68aa5511b11d354e3b207e5c4259c24fb3fea84a", "Url": "https://api.github.com/repos/mrfrederico-ist/ud851-Sunshine", "Date": "2017-03-07T12:02:57Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.uci.eecs.wukong.framework.buffer.TimeIndexBuffer.getTimeIndex(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (start < (this.dataBuffer.getCapacity())) { int firstSize = ((this.dataBuffer.getCapacity()) - 1) - start; byte[] firstBuf = new byte[firstSize]; byte[] secondBuf = new byte[start]; this.dataBuffer.get(firstBuf, start, firstSize); this.dataBuffer.get(secondBuf, 0, start); return java.nio.ByteBuffer.wrap(org.apache.commons.lang.ArrayUtils.addAll(firstBuf, secondBuf)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6014/buggy-version/server.src.main.java.edu.uci.eecs.wukong.framework.buffer.DoubleTimeIndexDataBuffer.java", "BodyUseAPI": ["edu.uci.eecs.wukong.framework.buffer.DataRingBuffer<T, E>.get(byte[],int,int)", "edu.uci.eecs.wukong.framework.buffer.DataRingBuffer<T, E>.getCapacity()", "edu.uci.eecs.wukong.framework.buffer.DataRingBuffer<T, E>.get(byte[],int,int)"], "Fixed commit": "1136829c93d104bd6e5d85d71aaa17c986015afa", "Url": "https://api.github.com/repos/HuangZhenQiu/Progression-Framework", "Date": "2016-06-09T22:50:40Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (s == null) maxUnits = 8; else maxUnits = s.getMaxUnits();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8499/buggy-version/src.net.fe.builderStage.TeamSelectionStage.java", "BodyUseAPI": [], "Fixed commit": "1e85aff73dfe68e6a40941a645558bbfb1c5856e", "Url": "https://api.github.com/repos/chudooder/FEMultiplayer", "Date": "2014-02-08T17:30:05Z"},
{"Line": "=>484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (paramIdx > 1) out.print(\"\\t\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/645/buggy-version/src.beast.util.LogAnalyser.java", "BodyUseAPI": [], "Fixed commit": "3bb6aa9401a989dc282a4d96076cf480403a75eb", "Url": "https://api.github.com/repos/tgvaughan/beast2", "Date": "2015-09-25T07:21:02Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["models.RainGardenDB.getRainGarden(long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (garden != null) { garden.getOwner().deleteGarden(garden); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7004/buggy-version/app.models.RainGardenDB.java", "BodyUseAPI": ["garden.getOwner().deleteGarden(models.RainGarden)", "models.RainGarden.getOwner()"], "Fixed commit": "78d3f0d71b8746487c90cdc66d770d72f792c44e", "Url": "https://api.github.com/repos/OpenRainGarden/OpenRainGarden", "Date": "2014-04-10T09:51:38Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (pukGroupDto != null) { long pukGroupId = pukGroupDto.getPukGroupId(); java.util.Optional<com.pce.domain.PukGroup> pukGroupById = pukGroupService.getPukGroupById(pukGroupId); if (!(pukGroupById.isPresent())) { errors.rejectValue(\"pukGroupId\", \"pukGroup.not.exists\", ((\"Puk Group \" + pukGroupId) + \" is not exists in the system, please select different one\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5195/buggy-version/backend.src.main.java.com.pce.validation.validator.PukGroupAssociationValidator.java", "BodyUseAPI": ["com.pce.domain.dto.PukGroupForPukDto.getPukGroupId()"], "Fixed commit": "8eb7b64b308f3cd6dc826ee9dc9a6ad3e939b932", "Url": "https://api.github.com/repos/tarjadil2q/invoicesys", "Date": "2016-12-09T12:46:09Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(lastModified.matches(\"[0-9]*\"))) { int ind = lastModified.lastIndexOf(\" \"); lastModified = (lastModified.substring(0, ind)) + \" GMT\"; java.util.Date tempD1 = org.apache.http.client.utils.DateUtils.parseDate(lastModified); lastModified = df.format(tempD1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4945/buggy-version/src.nl.surfsara.warcexamples.hadoop.warc.Record2Hashcode.java", "BodyUseAPI": ["java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "4cdb3f02c92138bbf57c2d7a319aadabf7a0ac35", "Url": "https://api.github.com/repos/wdwind/Warc2Hashcode", "Date": "2014-07-27T00:34:17Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (systemId == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6656/buggy-version/plugin-core.src.main.java.org.jvnet.jaxb2.maven2.resolver.tools.MavenCatalogResolver.java", "BodyUseAPI": [], "Fixed commit": "4469f60780b7b56147c83afd196f470def42fdc9", "Url": "https://api.github.com/repos/highsource/maven-jaxb2-plugin", "Date": "2014-12-15T19:58:51Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.sikuli.basics.Debug.is()) > 2) { org.sikuli.basics.FileManager.writeStringToFile(((header + trailer) + content), new java.io.File(org.sikuli.script.Runner.runTime.fSikulixStore, \"LastScriptFromNet.txt\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8911/buggy-version/API.src.main.java.org.sikuli.script.Runner.java", "BodyUseAPI": [], "Fixed commit": "17d41be720f86a31d5e261059ff06e3b7229348d", "Url": "https://api.github.com/repos/RaiMan/SikuliX-2014", "Date": "2015-06-29T14:58:18Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(scriptNames.trim().isEmpty())) service.setDefaultScripts(java.util.Arrays.asList(scriptNames.split(\",\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/9044/buggy-version/groovy-shell-server.src.main.java.me.bazhenov.groovysh.spring.GroovyShellServiceBean.java", "BodyUseAPI": ["me.bazhenov.groovysh.GroovyShellService.setDefaultScripts(java.util.List<java.lang.String>)", "java.lang.String.split(java.lang.String)", "java.util.Arrays.asList(java.lang.String[])"], "Fixed commit": "4b79c9ddce452dda96e8a1f505cf037286cb7192", "Url": "https://api.github.com/repos/bazhenov/groovy-shell-server", "Date": "2014-06-17T03:56:28Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.mail.park.database.kgulyy.controllers.Post.getMessage()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (updatedMesage == null) { return org.springframework.http.ResponseEntity.ok(post); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4504/buggy-version/src.main.java.ru.mail.park.database.kgulyy.controllers.PostController.java", "BodyUseAPI": [], "Fixed commit": "8ef5c89dab9e9483eaff1d0f42d0baeeed3841f2", "Url": "https://api.github.com/repos/kgulyy/database-forum-api", "Date": "2017-10-18T12:21:40Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.mail.park.database.kgulyy.controllers.Post.getMessage()", "postService.findById(id).orElseThrow(() -> ru.mail.park.database.kgulyy.controllers.exceptions.PostNotFoundException.throwEx(java.lang.String.valueOf(id)))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(updatedMesage.equals(post.getMessage()))) { post.setMessage(updatedMesage); post.setEdited(true); postService.update(post); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4504/buggy-version/src.main.java.ru.mail.park.database.kgulyy.controllers.PostController.java", "BodyUseAPI": ["ru.mail.park.database.kgulyy.controllers.Post.setMessage(java.lang.String)", "ru.mail.park.database.kgulyy.controllers.Post.setEdited(boolean)", "ru.mail.park.database.kgulyy.services.PostService.update(ru.mail.park.database.kgulyy.controllers.Post)"], "Fixed commit": "8ef5c89dab9e9483eaff1d0f42d0baeeed3841f2", "Url": "https://api.github.com/repos/kgulyy/database-forum-api", "Date": "2017-10-18T12:21:40Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rootLookup = null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8876/buggy-version/src.main.java.org.commcare.cases.query.queryset.DerivedCaseQueryLookup.java", "BodyUseAPI": [], "Fixed commit": "59f883c6f93ab9426ac8575c3b7a05713f92fe99", "Url": "https://api.github.com/repos/dimagi/commcare-core", "Date": "2017-09-27T13:55:03Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.springfaces.mvc.context.SpringFacesContext.getCurrentInstance(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (springFacesContext == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5812/buggy-version/springfaces-mvc.src.main.java.org.springframework.springfaces.mvc.servlet.FacesHandlerInterceptor.java", "BodyUseAPI": [], "Fixed commit": "e1d1c3b82f7e89c54f824f6378219fee880a46bd", "Url": "https://api.github.com/repos/philwebb/springfaces", "Date": "2011-06-03T12:18:02Z"},
{"Line": "=>1365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (query != null) { edu.stanford.muse.index.TopDocs tds = searcher.search(query, null, lt); edu.stanford.muse.index.Indexer.log.info((((\"Took: \" + ((java.lang.System.currentTimeMillis()) - st)) + \"ms for query:\") + query)); hits = tds.scoreDocs; totalHits = tds.totalHits; }else { edu.stanford.muse.index.Indexer.log.error(\"Query is null!!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2357/buggy-version/src.java.edu.stanford.muse.index.Indexer.java", "BodyUseAPI": ["edu.stanford.muse.index.IndexSearcher.search(edu.stanford.muse.index.Query,<nulltype>,int)", "org.apache.commons.logging.Log.info((((\"Took: \" + ((java.lang.System.currentTimeMillis()) - st)) + \"ms for query:\") + query))"], "Fixed commit": "b5cc2421998e335317eeff497ac0086ca69a57d6", "Url": "https://api.github.com/repos/ePADD/muse", "Date": "2016-01-05T06:56:29Z"},
{"Line": "=>938", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((allRoutes.bikeableRoutes.size()) == 0) { android.widget.Toast.makeText(getApplicationContext(), \"Origin and destination too close.\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3419/buggy-version/app.src.main.java.com.nnys.bikeable.CentralActivity.java", "BodyUseAPI": [], "Fixed commit": "5815053b2c208d00d5257ca90f0c743b7e87586b", "Url": "https://api.github.com/repos/nogalavi/Bikeable", "Date": "2016-02-25T16:01:39Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fixtureB.getBody().getUserData()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(fruit.scored)) { if ((--(lives)) <= 0) showGameOver(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4051/buggy-version/Game.core.src.com.badman.slingmango.screens.GameScreen.java", "BodyUseAPI": [], "Fixed commit": "94717525752d73d10331b6210306dd355b45b0cd", "Url": "https://api.github.com/repos/Roncon93/SlingMango", "Date": "2017-02-26T06:57:25Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fixtureA.getBody().getUserData()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(fruit.scored)) { if ((--(lives)) <= 0) showGameOver(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4051/buggy-version/Game.core.src.com.badman.slingmango.screens.GameScreen.java", "BodyUseAPI": [], "Fixed commit": "94717525752d73d10331b6210306dd355b45b0cd", "Url": "https://api.github.com/repos/Roncon93/SlingMango", "Date": "2017-02-26T06:57:25Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.Long, java.io.File>.get(long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null != lastWrittenFileName) { randomAccessFile = new java.io.RandomAccessFile(lastWrittenFileName, \"rw\"); randomAccessFile.seek(writeOffSet.longValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1779/buggy-version/rocketmq-client.src.main.java.com.alibaba.rocketmq.client.producer.concurrent.DefaultLocalMessageStore.java", "BodyUseAPI": [], "Fixed commit": "2f83734596a07e039b59582c59041afac4a149a2", "Url": "https://api.github.com/repos/lizhanhui/Alibaba_RocketMQ", "Date": "2014-11-29T16:55:30Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((children.size()) <= normalizedLimit) { normalizedLimit = children.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7554/buggy-version/corelib-solr.src.main.java.eu.europeana.corelib.solr.server.impl.Neo4jServerImpl.java", "BodyUseAPI": ["java.util.List<org.neo4j.graphdb.Node>.size()"], "Fixed commit": "ce3a21e498b02e11bdb294e3cd664a799b622847", "Url": "https://api.github.com/repos/europeana/corelib", "Date": "2014-07-15T12:15:51Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (theMessage.contentEquals(\"0)null\\n\")) feedContents.setText((\"This box will contain all the steps while \\n\" + (\"traversing through the heap.\\n\\nIt will update as\" + \"you heapify, unheapify, \\ninsert, or delete.\\n\"))); else feedContents.setText(theMessage);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/308/buggy-version/Gui.java", "BodyUseAPI": ["javax.swing.JTextArea.setText(java.lang.String)"], "Fixed commit": "f7f576246a8e4047fbb7f4fa85c04900f619bdbe", "Url": "https://api.github.com/repos/Cvalladares4837/HeapSort-Illustration", "Date": "2015-11-12T16:29:24Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.inner().subnets()) != null) { for (com.microsoft.azure.management.network.implementation.SubnetInner subnetInner : this.inner().subnets()) { com.microsoft.azure.management.network.implementation.SubnetImpl subnet = new com.microsoft.azure.management.network.implementation.SubnetImpl(subnetInner.name(), subnetInner, this); this.subnets.put(subnetInner.name(), subnet); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/105/buggy-version/azure-mgmt-network.src.main.java.com.microsoft.azure.management.network.implementation.NetworkImpl.java", "BodyUseAPI": [], "Fixed commit": "eb756f966024fe0d057eee025dacbea7f3a29911", "Url": "https://api.github.com/repos/martinsawicki/azure-sdk-for-java", "Date": "2016-07-26T07:21:58Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((repeatMin) != (-1)) { line += \", \\\"repeat\\\": \" + (repeatMin); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7069/buggy-version/src.main.java.net.krazyweb.cataclysm.mapeditor.map.data.PlaceGroupZone.java", "BodyUseAPI": [], "Fixed commit": "610022e91d2340959efc9044cda493626a439f7d", "Url": "https://api.github.com/repos/KrazyTheFox/Cataclysm-DDA-Map-Editor", "Date": "2015-03-01T20:08:44Z"},
{"Line": "=>1319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Arrays.binarySearch(java.lang.String[],java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (p < 0) { for (int i = 0; i < (paramNames.length); i++) { if (propertyName.equalsIgnoreCase(paramNames[i])) { p = i; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2998/buggy-version/src.main.java.com.alibaba.fastjson.util.TypeUtils.java", "BodyUseAPI": [], "Fixed commit": "c294d31b13b920afd242aa5800c171122735514c", "Url": "https://api.github.com/repos/FlakyTestDetection/fastjson", "Date": "2017-10-21T18:57:17Z"},
{"Line": "=>619", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fm.jiecao.jcvideoplayer_lib.JCMediaManager.intance().lastListener) != null) { fm.jiecao.jcvideoplayer_lib.JCMediaManager.intance().listener = fm.jiecao.jcvideoplayer_lib.JCMediaManager.intance().lastListener; fm.jiecao.jcvideoplayer_lib.JCMediaManager.intance().listener.onBackFullscreen(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2829/buggy-version/jcvideoplayer-lib.src.main.java.fm.jiecao.jcvideoplayer_lib.JCVideoPlayer.java", "BodyUseAPI": [], "Fixed commit": "7dce1f249fd345859a5225640f730d5ca6c993f5", "Url": "https://api.github.com/repos/lipangit/JiaoZiVideoPlayer", "Date": "2016-04-14T02:09:59Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((command.type) != (franks.game.actions.Action.ActionType.Die)) { this.executedCommands.add(command); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5913/buggy-version/src.franks.game.Turn.java", "BodyUseAPI": ["java.util.List<franks.game.actions.Command>.add(franks.game.actions.Command)"], "Fixed commit": "78bed75f1cdbabef7210f154a9997b167fea31f8", "Url": "https://api.github.com/repos/tonysparks/franks", "Date": "2016-12-03T05:16:44Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (screen.isActivePopup(draggable)) { org.illarion.nifty.controls.inventoryslot.InventorySlotControl.LOGGER.error(\"Trying to retrieve a draggable that is currently dragged!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/415/buggy-version/nifty-controls-illarion.src.org.illarion.nifty.controls.inventoryslot.InventorySlotControl.java", "BodyUseAPI": [], "Fixed commit": "808ec64c98aa3c7efd160624f5925b5d1eaa8972", "Url": "https://api.github.com/repos/mkaring/Illarion-Java", "Date": "2013-01-25T22:20:59Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isTorCircuitEstablished())) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/410/buggy-version/AndroidApp.src.ca.psiphon.ploggy.Engine.java", "BodyUseAPI": [], "Fixed commit": "6b5f63e930ac0a9131e64e557e1585a77c855a86", "Url": "https://api.github.com/repos/rod-hynes/ploggy", "Date": "2014-04-08T19:21:01Z"},
{"Line": "=>555", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isTorCircuitEstablished()) { ca.psiphon.ploggy.Log.addEntry(logTag(), ((((((\"scheduled \" + (taskType.name())) + \" for \") + nickname) + \" in \") + (java.lang.Long.toString(delayInMilliseconds))) + \"ms.\")); state.mScheduledTask = submitTask(state.mTaskInstance, delayInMilliseconds); }else { ca.psiphon.ploggy.Log.addEntry(logTag(), (((\"ignored \" + (taskType.name())) + \" for \") + nickname)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/410/buggy-version/AndroidApp.src.ca.psiphon.ploggy.Engine.java", "BodyUseAPI": [], "Fixed commit": "6b5f63e930ac0a9131e64e557e1585a77c855a86", "Url": "https://api.github.com/repos/rod-hynes/ploggy", "Date": "2014-04-08T19:21:01Z"},
{"Line": "=>580", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data.numInstances()) == 0) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8335/buggy-version/src.main.java.weka.custom_classifier.J48.CustomJ48.java", "BodyUseAPI": [], "Fixed commit": "1380f257d966789c81e050b8385256e6dea7afb6", "Url": "https://api.github.com/repos/filinamaria/custom-classifier", "Date": "2015-09-26T03:44:56Z"},
{"Line": "=>526", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (2 < (path.size())) { path.addFirst(terminalVertices.get(0)); path.addLast(terminalVertices.get(1)); return path; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6810/buggy-version/src.scheduling.three.ComponentSwapper.java", "BodyUseAPI": ["java.util.LinkedList<java.lang.Integer>.addFirst(java.lang.Integer)", "java.util.LinkedList<java.lang.Integer>.addLast(java.lang.Integer)"], "Fixed commit": "ddf67e45e65b62a1d21cd580cbe358b8770546e8", "Url": "https://api.github.com/repos/pawelkopec/Scheduling", "Date": "2017-04-18T17:48:28Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ch.ethz.inf.vs.a4.minker.einz.Debug.logKeepaliveSpam) || (!(line.equals(\"{\\\"header\\\":{\\\"messagegroup\\\":\\\"networking\\\",\\\"messagetype\\\":\\\"KeepAlive\\\"},\\\"body\\\":{}}\")))) { android.util.Log.d(\"ESCH\", (\"received line: \" + line)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2662/buggy-version/project.app.src.main.java.ch.ethz.inf.vs.a4.minker.einz.server.EinzServerClientHandler.java", "BodyUseAPI": ["android.util.Log.d(java.lang.String,java.lang.String)"], "Fixed commit": "0c4a4297f3de7a115562e233c3d1b65d5b8e0b68", "Url": "https://api.github.com/repos/lucidBrot/einz", "Date": "2017-12-11T21:43:15Z"},
{"Line": "=>1146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (libraryNamesAdded.contains(library.getFile().getName().substring(0, library.getFile().getName().lastIndexOf(\"-\")))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1788/buggy-version/src.main.java.com.atlauncher.workers.InstanceInstaller.java", "BodyUseAPI": [], "Fixed commit": "1fe4b7bd5e7f5ccb7248693b2b0eda13a54960ef", "Url": "https://api.github.com/repos/ATLauncher/ATLauncher", "Date": "2014-06-28T07:13:01Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (future.isSuccess()) { sayHello(); }else { future.cause().printStackTrace(); future.channel().close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4870/buggy-version/java.using_netty.src.main.java.TalktiveSpeakerHandler.java", "BodyUseAPI": ["io.netty.channel.ChannelFuture.channel()", "io.netty.channel.ChannelFuture.cause()", "future.cause().printStackTrace()", "future.channel().close()"], "Fixed commit": "52383b3fbdf8520366a6cb6ed8da8f3ea5065c8f", "Url": "https://api.github.com/repos/zach2014/autoware", "Date": "2016-04-11T09:28:08Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.wst.sse.core.internal.provisional.text.IStructuredDocumentRegion.getPrevious()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (previousRegion == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3344/buggy-version/jsdt.plugins.com.liferay.ide.alloy.core.src.com.liferay.ide.alloy.core.jsp.AlloyStructuredTextPartitionerForJSP.java", "BodyUseAPI": [], "Fixed commit": "10ee02e527e32e8071690f8c434c22b03bab49cd", "Url": "https://api.github.com/repos/rui123wang/liferay-ide", "Date": "2017-11-17T14:42:15Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((inputsequence.getResidueNumList().size()) != 0) { re.setInputResidueNum(inputsequence.getResidueNumList().get(0)); }else { re.setInputResidueNum(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7112/buggy-version/pdb-alignment-web.src.main.java.org.cbioportal.pdb_annotation.web.controllers.MainController.java", "BodyUseAPI": ["org.cbioportal.pdb_annotation.web.models.InputSequence.getResidueNumList()", "org.cbioportal.pdb_annotation.web.models.InputResidue.setInputResidueNum(inputsequence.getResidueNumList().get(0))", "inputsequence.getResidueNumList().get(int)"], "Fixed commit": "cf98ded8536b83b097e260f1932e4ed7b79b0de0", "Url": "https://api.github.com/repos/juexinwang/pdb-annotation", "Date": "2017-05-14T20:04:34Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.getModifiers()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((java.lang.reflect.Modifier.isStatic(fieldModifiers)) || (java.lang.reflect.Modifier.isFinal(fieldModifiers))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2973/buggy-version/src.main.java.io.github.benas.jpopulator.impl.PopulatorImpl.java", "BodyUseAPI": [], "Fixed commit": "28f1a0150a16def870a367dcd65c56f60492ce32", "Url": "https://api.github.com/repos/benas/jPopulator", "Date": "2013-12-18T21:46:13Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((firstChildPositionForRow) == null) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2019/buggy-version/app.src.main.java.io.plaidapp.ui.recyclerview.SpannedGridLayoutManager.java", "BodyUseAPI": [], "Fixed commit": "04a70705977c9f18d426f1823bdb73aba5d83af4", "Url": "https://api.github.com/repos/nickbutcher/plaid", "Date": "2016-09-22T14:47:41Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.core.expressions.IEvaluationContext.getVariable(ISources.ACTIVE_CURRENT_SELECTION_NAME)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(activeSelection instanceof org.eclipse.jface.viewers.ISelection)) return SelectionKind.OTHER;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3488/buggy-version/org.whole.lang.ui.src.org.whole.lang.ui.util.UIUtils.java", "BodyUseAPI": [], "Fixed commit": "acf5bd32053baf2d1df086a33f31b0b270939f71", "Url": "https://api.github.com/repos/wholeplatform/whole", "Date": "2013-01-10T14:33:31Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.core.expressions.IEvaluationContext.getVariable(ISources.ACTIVE_PART_NAME)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(part instanceof org.eclipse.ui.IWorkbenchPart)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3488/buggy-version/org.whole.lang.ui.src.org.whole.lang.ui.util.UIUtils.java", "BodyUseAPI": [], "Fixed commit": "acf5bd32053baf2d1df086a33f31b0b270939f71", "Url": "https://api.github.com/repos/wholeplatform/whole", "Date": "2013-01-10T14:33:31Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (vehicle == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5553/buggy-version/OSMap.src.cat.app.navi.GraphHopperOfflineRoadManager.java", "BodyUseAPI": [], "Fixed commit": "7c710de3a7145f632b35975bf2d73613f91422da", "Url": "https://api.github.com/repos/weixingsun/android", "Date": "2015-02-06T12:43:44Z"},
{"Line": "=>624", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getTargetException()) instanceof panama.exceptions.HttpErrorException) { throw ((panama.exceptions.HttpErrorException) (e.getTargetException())); }else { panama.core.Dispatcher.log.error(((\"could not invoke method '\" + (method.getName())) + \"'\")); panama.core.Dispatcher.log.errorException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6413/buggy-version/panama.src.panama.core.Dispatcher.java", "BodyUseAPI": ["panama.log.SimpleLogger.errorException(java.lang.reflect.InvocationTargetException)", "java.lang.reflect.InvocationTargetException.getTargetException()"], "Fixed commit": "0b80e9ace4becc40f623b860cdaad43909981cac", "Url": "https://api.github.com/repos/ridcully99/panama", "Date": "2015-12-26T10:57:06Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["no.difi.vefa.validator.ValidatorInstance.check(no.difi.xsd.vefa.validator._1.FileType,no.difi.vefa.validator.Document,no.difi.vefa.validator.Configuration)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((section.getFlag().compareTo(getReport().getFlag())) > 0) getReport().setFlag(section.getFlag());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/809/buggy-version/validator-core.src.main.java.no.difi.vefa.validator.Validation.java", "BodyUseAPI": ["no.difi.xsd.vefa.validator._1.Report.setFlag(section.getFlag())", "no.difi.vefa.validator.Section.getFlag()"], "Fixed commit": "9c293a6402877938885484d1bc03d47655aee01e", "Url": "https://api.github.com/repos/difi/vefa-validator", "Date": "2015-08-06T07:40:03Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(file.exists())) { file = new java.io.File(\"../model-layer/resources/default_settings.xml\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7237/buggy-version/model-layer.src.main.java.ks3.pmf.model.Settings.java", "BodyUseAPI": [], "Fixed commit": "c5949f2d8b688603049badb324ab7023efe519fa", "Url": "https://api.github.com/repos/kirill-strizhak/photo-meta-fixer", "Date": "2017-07-24T21:57:56Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((paramMap) != null) { paramMap = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2753/buggy-version/src.main.java.com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.java", "BodyUseAPI": [], "Fixed commit": "758e42ef5d05823a9f813c71197e18eea2e99c59", "Url": "https://api.github.com/repos/mosoft521/druid", "Date": "2015-03-10T13:41:01Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getSite().getWorkbenchWindow().getActivePage().getActiveEditor()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (actualEditor != null) { org.eclipse.jface.viewers.ISelection actualSelection = actualEditor.getEditorSite().getSelectionProvider().getSelection(); showSelection(actualEditor.getSite().getPart(), actualSelection); }else { showText(\"No Model Available\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5478/buggy-version/de.cooperateproject.plantumlpp.notation2plant.viewer.src.de.cooperateproject.notation2plant.viewer.Uml2PlantUmlView.java", "BodyUseAPI": ["de.cooperateproject.notation2plant.viewer.Uml2PlantUmlView.showSelection(actualEditor.getSite().getPart(),org.eclipse.jface.viewers.ISelection)", "org.eclipse.ui.IEditorPart.getEditorSite()", "actualEditor.getEditorSite().getSelectionProvider()", "actualEditor.getSite().getPart()", "actualEditor.getEditorSite().getSelectionProvider().getSelection()", "org.eclipse.ui.IEditorPart.getSite()"], "Fixed commit": "1efa61fbaa0e7d06cd58d13dc966c5609be7eaec", "Url": "https://api.github.com/repos/Cooperate-Project/PapyrusTextualDiagramProvider", "Date": "2016-02-16T12:18:42Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.bluetooth.BluetoothDevice.getName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (devName != null) { if (devName.equals(mDeviceName)) { android.util.Log.i(MyActivity.TAG, \"++++++++++++ DEVICE FOUND ++++++++++++\"); mBLEAdpater.stopLeScan(mLeScanCallBack); scanRecord[((scanRecord.length) - 1)] = ((byte) (rssi)); returnAdvData(scanRecord); } android.util.Log.i(MyActivity.TAG, \"++++++++++++ DEVICE ++++++++++++\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5083/buggy-version/android.PondLife.app.src.main.java.com.leetec.pondlife.BLEcontroller.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "cffb74799087d0410c531e97207dc86c0030ffa3", "Url": "https://api.github.com/repos/alphauk101/PondLife_beacon", "Date": "2015-05-21T15:58:38Z"},
{"Line": "=>519", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (kv.isDeleteFamily()) { data.get(row).get(kv.getFamily()).clear(); }else { data.get(row).get(kv.getFamily()).remove(kv.getQualifier()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5952/buggy-version/common.src.main.java.org.apache.kylin.common.util.MockHTable.java", "BodyUseAPI": ["java.util.NavigableMap<byte[], java.util.NavigableMap<byte[], java.util.NavigableMap<java.lang.Long, byte[]>>>.get(kv.getFamily())", "java.util.NavigableMap<byte[], java.util.NavigableMap<byte[], java.util.NavigableMap<java.lang.Long, byte[]>>>.get(kv.getFamily())", "org.apache.hadoop.hbase.KeyValue.getQualifier()", "org.apache.hadoop.hbase.KeyValue.getFamily()", "java.util.NavigableMap<byte[], java.util.NavigableMap<java.lang.Long, byte[]>>.clear()", "org.apache.hadoop.hbase.KeyValue.getFamily()", "java.util.NavigableMap<byte[], java.util.NavigableMap<java.lang.Long, byte[]>>.remove(kv.getQualifier())"], "Fixed commit": "ed3a21d735c2167f8ea00628fd4502eb20c4a5b4", "Url": "https://api.github.com/repos/apache/kylin", "Date": "2015-05-25T02:32:03Z"},
{"Line": "=>5171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.rfo.basic.Run.Interpreter.getVarAndType()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (var != null) { LineIndex -= var.name().length(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6323/buggy-version/src.com.rfo.basic.Run.java", "BodyUseAPI": ["com.rfo.basic.Var.name()", "var.name().length()"], "Fixed commit": "2dd9d332bcb48d4d8430fee7f6ea5da24e0b22b4", "Url": "https://api.github.com/repos/RFO-BASIC/Basic", "Date": "2016-03-10T01:56:25Z"},
{"Line": "=>5202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.rfo.basic.Run.Interpreter.getVarAndType()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (var != null) { LineIndex -= var.name().length(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6323/buggy-version/src.com.rfo.basic.Run.java", "BodyUseAPI": ["com.rfo.basic.Var.name()", "var.name().length()"], "Fixed commit": "2dd9d332bcb48d4d8430fee7f6ea5da24e0b22b4", "Url": "https://api.github.com/repos/RFO-BASIC/Basic", "Date": "2016-03-10T01:56:25Z"},
{"Line": "=>5186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.rfo.basic.Run.Interpreter.getVarAndType()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (var != null) { LineIndex -= var.name().length(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6323/buggy-version/src.com.rfo.basic.Run.java", "BodyUseAPI": ["com.rfo.basic.Var.name()", "var.name().length()"], "Fixed commit": "2dd9d332bcb48d4d8430fee7f6ea5da24e0b22b4", "Url": "https://api.github.com/repos/RFO-BASIC/Basic", "Date": "2016-03-10T01:56:25Z"},
{"Line": "=>5215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.rfo.basic.Run.Interpreter.parseVar(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (var != null) { if (var.isFunction()) { var = searchVar(var); if (var.isNew()) { return var; }else { RunTimeError(com.rfo.basic.Run.Interpreter.EXPECT_NEW_FN_NAME); } } LineIndex -= var.name().length(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6323/buggy-version/src.com.rfo.basic.Run.java", "BodyUseAPI": ["com.rfo.basic.Var.isFunction()", "com.rfo.basic.Run.Interpreter.searchVar(com.rfo.basic.Var)"], "Fixed commit": "2dd9d332bcb48d4d8430fee7f6ea5da24e0b22b4", "Url": "https://api.github.com/repos/RFO-BASIC/Basic", "Date": "2016-03-10T01:56:25Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((boots == (net.divinerpg.utils.items.TwilightItemsArmor.haliteBoots)) && (legs == (net.divinerpg.utils.items.TwilightItemsArmor.haliteLeggings))) && (body == (net.divinerpg.utils.items.TwilightItemsArmor.haliteChestplate))) && (helmet == (net.divinerpg.utils.items.TwilightItemsArmor.haliteHelmet))) size = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5036/buggy-version/java.net.divinerpg.client.render.gui.GUIOverlay.java", "BodyUseAPI": [], "Fixed commit": "475dee4d77233432a0ccbb744c88153649b47e27", "Url": "https://api.github.com/repos/DivineRPG/DivineRPG", "Date": "2015-09-20T19:55:17Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.client.Minecraft.getMinecraft().thePlayer.inventory.armorItemInSlot(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (stackLegs != null) legs = stackLegs.getItem(); else legs = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5036/buggy-version/java.net.divinerpg.client.render.gui.GUIOverlay.java", "BodyUseAPI": ["net.minecraft.item.ItemStack.getItem()"], "Fixed commit": "475dee4d77233432a0ccbb744c88153649b47e27", "Url": "https://api.github.com/repos/DivineRPG/DivineRPG", "Date": "2015-09-20T19:55:17Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.client.Minecraft.getMinecraft().thePlayer.inventory.armorItemInSlot(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (stackHelmet != null) helmet = stackHelmet.getItem(); else helmet = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5036/buggy-version/java.net.divinerpg.client.render.gui.GUIOverlay.java", "BodyUseAPI": ["net.minecraft.item.ItemStack.getItem()"], "Fixed commit": "475dee4d77233432a0ccbb744c88153649b47e27", "Url": "https://api.github.com/repos/DivineRPG/DivineRPG", "Date": "2015-09-20T19:55:17Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.client.Minecraft.getMinecraft().thePlayer.inventory.armorItemInSlot(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (stackBody != null) body = stackBody.getItem(); else body = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5036/buggy-version/java.net.divinerpg.client.render.gui.GUIOverlay.java", "BodyUseAPI": ["net.minecraft.item.ItemStack.getItem()"], "Fixed commit": "475dee4d77233432a0ccbb744c88153649b47e27", "Url": "https://api.github.com/repos/DivineRPG/DivineRPG", "Date": "2015-09-20T19:55:17Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.client.Minecraft.getMinecraft().thePlayer.inventory.armorItemInSlot(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (stackBoots != null) boots = stackBoots.getItem(); else boots = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5036/buggy-version/java.net.divinerpg.client.render.gui.GUIOverlay.java", "BodyUseAPI": ["net.minecraft.item.ItemStack.getItem()"], "Fixed commit": "475dee4d77233432a0ccbb744c88153649b47e27", "Url": "https://api.github.com/repos/DivineRPG/DivineRPG", "Date": "2015-09-20T19:55:17Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lineItems[1].indexOf('[')) == (-1)) { lineItemKey = lineItems[1]; }else { lineItemKey = lineItems[1].substring(0, lineItems[1].indexOf('[')); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8539/buggy-version/src.main.java.uk.ac.ebi.pride.gui.data.mztab.parser.MetadataLineItemParserStrategy.java", "BodyUseAPI": ["java.lang.String.indexOf(char)", "java.lang.String.substring(int,int)"], "Fixed commit": "bc6dae07855ce98ea7db846ac2bdb919f2fd6738", "Url": "https://api.github.com/repos/proteomexchange/px-submission-tool", "Date": "2016-07-12T08:50:24Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (createIfAbsent) { neo4jService.invokeCypher(cypher, false); if ((cypher.getErrorCount()) == 0) { return cypher.getResultDataRow(0).asLong(); }else { java.lang.System.out.println(\"retry getMinuteNodeId\"); return getMinuteNodeId(timeMillis, false); } }else { neo4jService.invokeCypher(cypher); if ((cypher.getResultDataRowCount()) != 1) return -1; else return cypher.getResultDataRow(0).asLong(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6875/buggy-version/net.locosoft.fold.channel.times.src.net.locosoft.fold.channel.times.internal.GetTimesNode.java", "BodyUseAPI": [], "Fixed commit": "8978f15b90378cc0d0f74abecac3585aeb2798d7", "Url": "https://api.github.com/repos/cjdaly/fold", "Date": "2015-07-30T05:24:29Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mPreview.mPreviewSize) == null) { mPreview.setCamera(mCamera, cameraCurrentlyLocked); }else { mPreview.switchCamera(mCamera, cameraCurrentlyLocked); mCamera.startPreview(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8635/buggy-version/src.android.com.mbppower.CameraActivity.java", "BodyUseAPI": ["com.mbppower.Preview.switchCamera(android.hardware.Camera,int)", "com.mbppower.Preview.setCamera(android.hardware.Camera,int)"], "Fixed commit": "9106a39b407032205ca3d4d992eea6f796996331", "Url": "https://api.github.com/repos/vitto32/CordovaCameraPreview", "Date": "2015-11-06T10:18:14Z"},
{"Line": "=>1014", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSearchView) != null) { outState.putBoolean(com.owncloud.android.ui.activity.FileDisplayActivity.KEY_IS_SEARCH_OPEN, (!(mSearchView.isIconified()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7681/buggy-version/src.main.java.com.owncloud.android.ui.activity.FileDisplayActivity.java", "BodyUseAPI": [], "Fixed commit": "bb5e51a2e1b44d849659056a657b5784bc237937", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-23T10:00:13Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getSourceProvider().isGoogleApiClientConnected()) { com.yayandroid.locationmanager.helper.LogUtils.logI(\"Requesting location update...\"); getSourceProvider().requestLocationUpdate(); }else { com.yayandroid.locationmanager.helper.LogUtils.logI(\"Tried to requestLocationUpdate, but GoogleApiClient wasn't connected. Trying to connect...\"); waitingForConnectionToRequestLocationUpdate(true); getSourceProvider().connectGoogleApiClient(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/859/buggy-version/library.src.main.java.com.yayandroid.locationmanager.providers.locationprovider.GooglePlayServicesLocationProvider.java", "BodyUseAPI": [], "Fixed commit": "98db0d4c6feb4b4b4970b3341d65ceb09e7e8d9f", "Url": "https://api.github.com/repos/yayaa/LocationManager", "Date": "2017-08-17T22:01:00Z"},
{"Line": "=>1038", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Arrays.binarySearch(java.lang.String[],java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (p < 0) { for (int i = 0; i < (paramNames.length); i++) { if (propertyName.equalsIgnoreCase(paramNames[i])) { p = i; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6579/buggy-version/src.main.java.com.alibaba.fastjson.util.TypeUtils.java", "BodyUseAPI": [], "Fixed commit": "3ba1ad1449824bf0ce26ac0d57633cbcf2647afa", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2017-10-21T19:00:43Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.janusproject.acl.ACLMessage.getConversationId()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (conversationId != null) { output.put(org.arakhne.vmutil.locale.Locale.getString(org.janusproject.acl.encoding.JSONACLCodec.class, \"CONVERSATIONID\"), aMsg.getConversationId().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2137/buggy-version/aclengine.src.main.java.org.janusproject.acl.encoding.JSONACLCodec.java", "BodyUseAPI": [], "Fixed commit": "b26a2daf525852ecbb1b41d11effa2b792c61a1e", "Url": "https://api.github.com/repos/Lothiraldan/janus-acl-json", "Date": "2013-01-08T20:30:59Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((date.get(java.util.Calendar.MONTH)) != (java.util.Calendar.JANUARY)) { date.roll(java.util.Calendar.MONTH, false); }else { date.roll(java.util.Calendar.YEAR, false); date.set(java.util.Calendar.MONTH, java.util.Calendar.DECEMBER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3750/buggy-version/src.ece641.March11th.ui.MonthlyFragment.java", "BodyUseAPI": ["java.util.Calendar.roll(int,boolean)", "java.util.Calendar.roll(int,boolean)", "java.util.Calendar.set(int,int)"], "Fixed commit": "fdc36c6a08e6aeaaaaefdcfd0e264e5ecac350c1", "Url": "https://api.github.com/repos/baihuqian/OmniGlucoseTracker", "Date": "2014-04-30T21:14:30Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.dqi11.quickStarter.modules.ModuleAction.getIcon()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (icon != null) { if (((icon.getIconWidth()) != (ICON_SIZE)) || ((icon.getIconHeight()) != (ICON_SIZE))) { icon.setImage(icon.getImage().getScaledInstance(ICON_SIZE, ICON_SIZE, java.awt.Image.SCALE_SMOOTH)); }else { icon.setImageObserver(new java.awt.image.ImageObserver() { @java.lang.Override public boolean imageUpdate(java.awt.Image img, int infoflags, int x, int y, int width, int height) { list.repaint(); if (infoflags > 16) img.flush(); return true; } }); } label.setIcon(icon); setIcon(icon); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2858/buggy-version/src.de.dqi11.quickStarter.gui.ModuleActionListCellRenderer.java", "BodyUseAPI": ["javax.swing.ImageIcon.setImageObserver(java.awt.image.ImageObserver)", "javax.swing.ImageIcon.getIconHeight()", "javax.swing.ImageIcon.getIconWidth()", "javax.swing.JLabel.setIcon(javax.swing.ImageIcon)", "java.awt.Image.getScaledInstance(int,int,int)", "javax.swing.ImageIcon.getImage()", "de.dqi11.quickStarter.gui.ModuleActionListCellRenderer.setIcon(javax.swing.ImageIcon)", "javax.swing.ImageIcon.setImage(java.awt.Image)"], "Fixed commit": "dbb13304a7c6c44d278fe910a5c716adeff12773", "Url": "https://api.github.com/repos/nunull/QuickStarter", "Date": "2014-05-27T10:40:43Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fieldName.length()) == 1) { fieldName = \"\"; }else { fieldName = fieldName.substring(1, ((fieldName.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5474/buggy-version/document.fr.opensagres.xdocreport.document.docx.src.main.java.fr.opensagres.xdocreport.document.docx.preprocessor.sax.MergefieldBufferedRegion.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "19a7e4650ba09acc4fc52387ad3e52c0ff8809e2", "Url": "https://api.github.com/repos/opensagres/xdocreport", "Date": "2014-08-08T10:03:58Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((expense.getAmount()) == 0.0) { amount.setText(\"0.0\"); }else { amount.setText((\"\" + (expense.getAmount()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3716/buggy-version/Mezu.app.src.main.java.money.mezu.mezu.ExpenseAdapter.java", "BodyUseAPI": ["android.widget.EditText.setText((\"\" + (expense.getAmount())))", "money.mezu.mezu.Expense.getAmount()"], "Fixed commit": "ff235db4d0f0ef3e84e6d7dd4d8a2f325818ec80", "Url": "https://api.github.com/repos/Assafbs/Mezu", "Date": "2017-05-13T11:25:06Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.findViewById(R.id.EditTextAmount)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (amountField.getText().toString().equals(\"\")) { amount = 0.0; }else { amount = java.lang.Double.parseDouble(amountField.getText().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3716/buggy-version/Mezu.app.src.main.java.money.mezu.mezu.BudgetViewActivity.java", "BodyUseAPI": ["android.widget.EditText.getText()", "amountField.getText().toString()", "java.lang.Double.parseDouble(amountField.getText().toString())"], "Fixed commit": "ff235db4d0f0ef3e84e6d7dd4d8a2f325818ec80", "Url": "https://api.github.com/repos/Assafbs/Mezu", "Date": "2017-05-13T11:25:06Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (management.logIn(username, password)) { java.lang.System.out.print(\"Logged in...\\n\"); session.setAttribute(\"status\", \"loggedin\"); session.setAttribute(\"name\", management.getInvoker().getUsername()); }else { java.lang.System.out.println(\"loggin failed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6686/buggy-version/eclipse.src.stoberry.Servberry.java", "BodyUseAPI": ["javax.servlet.http.HttpSession.setAttribute(java.lang.String,management.getInvoker().getUsername())", "stoberry.dataManagement.Management.getInvoker()", "management.getInvoker().getUsername()"], "Fixed commit": "914944eda63f11053c9b4811776a5c0d006da857", "Url": "https://api.github.com/repos/a1247418/stoberry", "Date": "2013-12-13T12:34:53Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (length > (file.length())) file.setLength(length); else numberOfChunks = ((int) ((file.length()) / (chunkSize)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6871/buggy-version/src.org.uiowa.cs2820.engine.fileoperations.RAFile.java", "BodyUseAPI": ["java.io.RandomAccessFile.setLength(int)", "java.io.RandomAccessFile.length()"], "Fixed commit": "68ba609bee98e173d9ce405a299dcd4ba8849243", "Url": "https://api.github.com/repos/TomWerner/SearchEngineV2", "Date": "2014-12-09T17:47:34Z"},
{"Line": "=>642", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!removeClickState) { v.performClick(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/705/buggy-version/backboard.src.main.java.com.tumblr.backboard.Actor.java", "BodyUseAPI": [], "Fixed commit": "b211df77e1fa86aca51743f416433849f144a8fa", "Url": "https://api.github.com/repos/tumblr/Backboard", "Date": "2016-08-10T18:16:48Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (project != null) { for (org.openbaton.catalogue.security.Role role : user.getRoles()) if (role.getProject().equals(project)) return true; throw new org.springframework.security.oauth2.common.exceptions.UnauthorizedUserException((currentUserName + \" user is not unauthorized for executing this request!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3033/buggy-version/api.src.main.java.org.openbaton.nfvo.api.interceptors.AuthorizeInterceptor.java", "BodyUseAPI": ["role.getProject().equals(java.lang.String)"], "Fixed commit": "3afa061f3ae7a7d33ebd5448475a11fcd9ca3037", "Url": "https://api.github.com/repos/openbaton/NFVO", "Date": "2016-06-02T12:10:12Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (up.getProject().getName().equals(project_name)) { java.lang.System.out.println((((\"ProjectId: \" + (up.getProject().getId())) + \" name: \") + (up.getProject().getName()))); model.RPMSProject p = projectDao.queryForId(up.getProject().getId()); return p; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6956/buggy-version/RPMS.src.beans.ProjectManagerBean.java", "BodyUseAPI": ["up.getProject().getName()", "up.getProject().getId()", "java.io.PrintStream.println((((\"ProjectId: \" + (up.getProject().getId())) + \" name: \") + (up.getProject().getName())))", "model.RPMSUserProjects.getProject()", "model.RPMSUserProjects.getProject()", "up.getProject().getId()", "com.j256.ormlite.dao.Dao<model.RPMSProject, java.lang.Integer>.queryForId(up.getProject().getId())", "model.RPMSUserProjects.getProject()"], "Fixed commit": "7d88d25ef7db6b9500e77eac6d6a9bd0fec036d6", "Url": "https://api.github.com/repos/serlachner/sw14_free_12", "Date": "2014-06-15T14:42:59Z"},
{"Line": "=>857", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portlet.journal.service.impl.JournalFolderLocalServiceImpl.fetchFolder(long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (parentFolder != null) { restrictionType = parentFolder.getRestrictionType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5091/buggy-version/portal-impl.src.com.liferay.portlet.journal.service.impl.JournalFolderLocalServiceImpl.java", "BodyUseAPI": ["com.liferay.portlet.journal.model.JournalFolder.getRestrictionType()"], "Fixed commit": "065570fd9dbcb95f4e667626e1c929973d012491", "Url": "https://api.github.com/repos/pat270/liferay-portal", "Date": "2014-04-28T18:29:17Z"},
{"Line": "=>690", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (persister.hasIndex()) { whereType = persister.getIndexType(); }else { whereType = persister.getElementType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4464/buggy-version/hibernate-core.src.main.java.org.hibernate.collection.internal.AbstractPersistentCollection.java", "BodyUseAPI": ["org.hibernate.persister.collection.CollectionPersister.getElementType()", "org.hibernate.persister.collection.CollectionPersister.getIndexType()"], "Fixed commit": "1ddcc7075fad463847e5ed804681c086e7d85698", "Url": "https://api.github.com/repos/Sanne/hibernate-orm", "Date": "2015-01-14T11:27:32Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getAbsolutePath()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (path.substring(((path.length()) - 4)).equals(\".map\")) { writer = new java.io.PrintWriter(path, \"UTF-8\"); }else { writer = new java.io.PrintWriter((path + \".map\"), \"UTF-8\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8063/buggy-version/src.komorebi.clyde.map.Map.java", "BodyUseAPI": [], "Fixed commit": "99ce3211bc70e5806afcae570b886d834113f339", "Url": "https://api.github.com/repos/aroy99/clydes", "Date": "2016-06-28T02:28:21Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (markers.isEmpty()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5451/buggy-version/android_app.OglasnikInstrukcija.app.src.main.java.hr.etfos.mivosevic.oglasnikinstrukcija.activities.MapActivity.java", "BodyUseAPI": [], "Fixed commit": "0800cd682365fc36feb33b3b9987a61ed1fa0e06", "Url": "https://api.github.com/repos/mivosevic/Instruction-tracker", "Date": "2016-07-06T07:58:42Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.getIdObject()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (id == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1246/buggy-version/src.main.java.com.datastax.hectorjpa.meta.key.CompositeKeyStrategy.java", "BodyUseAPI": [], "Fixed commit": "6886593281e95d584b39d1ac810697c3fc930ed7", "Url": "https://api.github.com/repos/riptano/hector-jpa", "Date": "2011-04-13T23:12:12Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.getIdObject()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (id == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1246/buggy-version/src.main.java.com.datastax.hectorjpa.meta.key.SingleKeyStrategy.java", "BodyUseAPI": [], "Fixed commit": "6886593281e95d584b39d1ac810697c3fc930ed7", "Url": "https://api.github.com/repos/riptano/hector-jpa", "Date": "2011-04-13T23:12:12Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.datastax.hectorjpa.meta.key.KeyStrategy.toByteArray(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (rowKey == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1246/buggy-version/src.main.java.com.datastax.hectorjpa.store.EntityFacade.java", "BodyUseAPI": [], "Fixed commit": "6886593281e95d584b39d1ac810697c3fc930ed7", "Url": "https://api.github.com/repos/riptano/hector-jpa", "Date": "2011-04-13T23:12:12Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (exp == null) { result = 0; }else { java.lang.Object r = fields.get(exp.toString()); if (r != null) { result = ((java.lang.Integer) (r)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2203/buggy-version/src.core.common.util.Abacus.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.get(exp.toString())", "org.eclipse.jdt.core.dom.Expression.toString()"], "Fixed commit": "1b4ac41233fef48c4bf15e57074cf75390d57273", "Url": "https://api.github.com/repos/Jtester2013/Jtester", "Date": "2013-02-08T08:40:32Z"},
{"Line": "=>522", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jdt.core.dom.Assignment.getLeftHandSide()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((fields.get(var.toString())) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2203/buggy-version/src.core.common.cfg.javacfg.ControlFlowGraphBuilder.java", "BodyUseAPI": [], "Fixed commit": "1b4ac41233fef48c4bf15e57074cf75390d57273", "Url": "https://api.github.com/repos/Jtester2013/Jtester", "Date": "2013-02-08T08:40:32Z"},
{"Line": "=>431", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (edge == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/9145/buggy-version/inmemory.src.main.java.org.vertexium.inmemory.InMemoryGraph.java", "BodyUseAPI": [], "Fixed commit": "6f355fb83a238e355fc73301bffca3c90e888c5f", "Url": "https://api.github.com/repos/visallo/vertexium", "Date": "2015-09-25T23:07:59Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.ide.project.core.upgrade.UpgradeAssistantSettingsUtil.getObjectFromStore(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (container != null) { _problems.add(container); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6722/buggy-version/tools.plugins.com.liferay.ide.project.ui.src.com.liferay.ide.project.ui.migration.MigrationContentProvider.java", "BodyUseAPI": ["java.util.List<com.liferay.ide.project.ui.migration.ProblemsContainer>.add(com.liferay.ide.project.ui.migration.MigrationProblemsContainer)"], "Fixed commit": "e33d9a788e46beeda4e7387f9dd150485fc6c432", "Url": "https://api.github.com/repos/gamerson/liferay-ide", "Date": "2016-04-11T08:17:50Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.Long, com.orbekk.protobuf.RpcChannel.RequestMetadata>.remove(long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (request != null) { cancelRequest(request, \"timeout\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7087/buggy-version/src.main.java.com.orbekk.protobuf.RpcChannel.java", "BodyUseAPI": ["com.orbekk.protobuf.RpcChannel.CancelRequestTask.cancelRequest(com.orbekk.protobuf.RpcChannel.RequestMetadata,java.lang.String)"], "Fixed commit": "c665fed11821f24dc99f71f77f297d404316cb24", "Url": "https://api.github.com/repos/orbekk/protobuf-simple-rpc", "Date": "2012-04-25T09:18:51Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.suspendIdList) == null) { de.uniks.networkparser.interfaces.ObjectCondition listener = this.map.getUpdateListener(); if (listener == null) { return; } if ((oldValue != null) && (newValue != null)) { listener.update(new de.uniks.networkparser.SimpleEvent(de.uniks.networkparser.interfaces.SendableEntityCreator.UPDATE, jsonObject, evt, map)); }else { listener.update(new de.uniks.networkparser.SimpleEvent(de.uniks.networkparser.interfaces.SendableEntityCreator.NEW, jsonObject, evt, map)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3067/buggy-version/src.main.java.de.uniks.networkparser.json.UpdateJson.java", "BodyUseAPI": [], "Fixed commit": "c30582cd0dfb3cbb444bcd05ac674a1eba7cf8ed", "Url": "https://api.github.com/repos/fujaba/NetworkParser", "Date": "2017-08-18T08:26:11Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (strNum == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3067/buggy-version/src.main.java.de.uniks.networkparser.EntityUtil.java", "BodyUseAPI": [], "Fixed commit": "c30582cd0dfb3cbb444bcd05ac674a1eba7cf8ed", "Url": "https://api.github.com/repos/fujaba/NetworkParser", "Date": "2017-08-18T08:26:11Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((envelope.version) != (org.ksoap2.serialization.SoapSerializationEnvelope.VER12)) { connection.setRequestProperty(\"SOAPAction\", soapAction); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7270/buggy-version/ksoap2-j2se.src.main.java.org.ksoap2.transport.HttpTransportSE.java", "BodyUseAPI": [], "Fixed commit": "d5752cf68aaea135068d7a7db06cd62c33a917ce", "Url": "https://api.github.com/repos/simpligility/ksoap2-android", "Date": "2011-07-06T20:25:48Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.tuple[2]) != null) { this.tuple[2] = ((long) ((this.tuple[2].longValue()) * rate)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/729/buggy-version/src.main.java.com.xingcloud.webinterface.model.ResultTuple.java", "BodyUseAPI": ["java.lang.Number.longValue()"], "Fixed commit": "18fede0062d842a9e9037016cbbc6a2dcb1f3d28", "Url": "https://api.github.com/repos/XingCloud/web-interface", "Date": "2013-12-19T10:55:01Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.tuple[1]) != null) { this.tuple[1] = ((long) ((this.tuple[1].longValue()) * rate)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/729/buggy-version/src.main.java.com.xingcloud.webinterface.model.ResultTuple.java", "BodyUseAPI": ["java.lang.Number.longValue()"], "Fixed commit": "18fede0062d842a9e9037016cbbc6a2dcb1f3d28", "Url": "https://api.github.com/repos/XingCloud/web-interface", "Date": "2013-12-19T10:55:01Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.tuple) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/729/buggy-version/src.main.java.com.xingcloud.webinterface.model.ResultTuple.java", "BodyUseAPI": [], "Fixed commit": "18fede0062d842a9e9037016cbbc6a2dcb1f3d28", "Url": "https://api.github.com/repos/XingCloud/web-interface", "Date": "2013-12-19T10:55:01Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.tuple[0]) != null) { this.tuple[0] = ((long) ((this.tuple[0].longValue()) * rate)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/729/buggy-version/src.main.java.com.xingcloud.webinterface.model.ResultTuple.java", "BodyUseAPI": ["java.lang.Number.longValue()"], "Fixed commit": "18fede0062d842a9e9037016cbbc6a2dcb1f3d28", "Url": "https://api.github.com/repos/XingCloud/web-interface", "Date": "2013-12-19T10:55:01Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.andoutay.jailhelper.JHUtils.getJailAPI(com.andoutay.jailhelper.JailHelper)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((jail.getPrisoner(p.getName())) != null) rsn = jail.getPrisoner(p.getName()).getReason();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5790/buggy-version/src.com.andoutay.jailhelper.JHUtils.java", "BodyUseAPI": ["com.matejdro.bukkit.jail.JailAPI.getPrisoner(p.getName())", "org.bukkit.entity.Player.getName()", "jail.getPrisoner(p.getName()).getReason()"], "Fixed commit": "630ecea4842f9e9ab15b790903ca6b592d95e84e", "Url": "https://api.github.com/repos/oey192/JailHelper", "Date": "2013-04-04T05:34:00Z"},
{"Line": "=>523", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(uri.contains(\":\"))) { for (int i = 0; i < (uri.length()); i++) { if ((uri.charAt(i)) == '-') { if ((count >= 2) && (count < 4)) { builder.setCharAt(i, ':'); } count++; } } uri = builder.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8606/buggy-version/src.main.java.org.icatproject.idav.IcatStore.java", "BodyUseAPI": ["java.lang.String.charAt(int)", "java.lang.String.length()"], "Fixed commit": "a7f0de8ae8680bcebc1a06704dfd47ff947fb7f4", "Url": "https://api.github.com/repos/icatproject/idav.server", "Date": "2016-08-16T08:38:44Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.badlogic.gdx.Gdx.app) != null) { Gdx.app.setLogLevel(logLevel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2346/buggy-version/rts-prototype.core.src.com.divergentthoughtsgames.rts.App.java", "BodyUseAPI": [], "Fixed commit": "02398cc02fc7b01763de40978efd4e4635608409", "Url": "https://api.github.com/repos/ChristopherCanfield/Train-Prototype", "Date": "2014-06-13T18:17:06Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["error.getNode().getSyntaxNode()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (syntaxNode != null) { org.openl.main.SourceCodeURLTool.printCodeAndError(syntaxNode.getSourceLocation(), syntaxNode.getModule(), writer); org.openl.main.SourceCodeURLTool.printSourceLocation(syntaxNode.getSourceLocation(), syntaxNode.getModule(), writer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3176/buggy-version/DEV.org.openl.core.src.org.openl.exception.OpenLExceptionUtils.java", "BodyUseAPI": ["org.openl.main.SourceCodeURLTool.printCodeAndError(syntaxNode.getSourceLocation(),syntaxNode.getModule(),java.io.PrintWriter)", "org.openl.main.SourceCodeURLTool.printSourceLocation(syntaxNode.getSourceLocation(),syntaxNode.getModule(),java.io.PrintWriter)", "org.openl.syntax.ISyntaxNode.getSourceLocation()", "org.openl.syntax.ISyntaxNode.getModule()", "org.openl.syntax.ISyntaxNode.getModule()", "org.openl.syntax.ISyntaxNode.getSourceLocation()"], "Fixed commit": "e487d2121f2a8e42f6a2854ad65e2846ccbefd54", "Url": "https://api.github.com/repos/openl-tablets/openl-tablets", "Date": "2017-10-26T17:41:34Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nl.lxtreme.ols.client.signaldisplay.signalelement.DataSet.getChannels()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((newChannelList[channelIdx]) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/369/buggy-version/client.src.main.java.nl.lxtreme.ols.client.signaldisplay.signalelement.SignalElementManager.java", "BodyUseAPI": [], "Fixed commit": "966fd9fa40d39bd85b36ed85958ff1a17d0009d2", "Url": "https://api.github.com/repos/jawi/ols", "Date": "2012-05-07T19:48:35Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.port) == (-1)) { if (this.enableSSL) { this.port = 443; }else { this.port = 80; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5070/buggy-version/org.ektorp.src.main.java.org.ektorp.http.StdHttpClient.java", "BodyUseAPI": [], "Fixed commit": "474fc8472e6393525203e3d195128b10654cbd02", "Url": "https://api.github.com/repos/helun/Ektorp", "Date": "2012-03-21T20:46:23Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((curAttr.isEmpty()) == false) && (prevName != \"\")) { allRelAttr.put(prevName, ((java.util.LinkedList<java.lang.String>) (curAttr.clone()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3801/buggy-version/src.SQLEngine.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.util.LinkedList<java.lang.String>>.put(java.lang.String,java.lang.Object)", "java.util.LinkedList<java.lang.String>.clone()"], "Fixed commit": "91a61d81f51461624b1e43e05f0cfde3392c6afc", "Url": "https://api.github.com/repos/spanoselias/TestingSQLCompliance", "Date": "2017-06-30T20:38:03Z"},
{"Line": "=>1130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["im.vector.util.SharedDataItem.getText()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (null == sequence) { if (null != htmlText) { text = android.text.Html.fromHtml(htmlText).toString(); }else { text = htmlText; } }else { text = sequence.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4532/buggy-version/vector.src.main.java.im.vector.activity.VectorRoomActivity.java", "BodyUseAPI": ["java.lang.CharSequence.toString()"], "Fixed commit": "8794b5973642998042a9248c4e2ceb4df72db9e0", "Url": "https://api.github.com/repos/vector-im/riot-android", "Date": "2016-06-13T07:52:16Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((applyButton) != null) { applyButton.setEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4198/buggy-version/teo.teo.isgci.gui.SettingsDialog.java", "BodyUseAPI": [], "Fixed commit": "dbc54ef3949f07ada69efb8fb4e17d0340563d0b", "Url": "https://api.github.com/repos/Konsteirama/KonDrawer-JGraphX-Integration", "Date": "2013-06-22T11:52:33Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<javax.swing.JComponent, teo.isgci.drawing.DrawingLibraryInterface>.get(java.awt.Component)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (graphInterface == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4198/buggy-version/teo.teo.isgci.gui.ISGCITabbedPane.java", "BodyUseAPI": [], "Fixed commit": "dbc54ef3949f07ada69efb8fb4e17d0340563d0b", "Url": "https://api.github.com/repos/Konsteirama/KonDrawer-JGraphX-Integration", "Date": "2013-06-22T11:52:33Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.carteFileName) == null) throw new java.lang.Exception(); else this.life = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7449/buggy-version/src.Creature.java", "BodyUseAPI": [], "Fixed commit": "0063b0a222e087d8252fc575dfda40149a420c98", "Url": "https://api.github.com/repos/nyradr/TP8-Javastone", "Date": "2015-12-11T12:10:19Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastScore) != null) { return ((lastScore) * 100) / (questionsCount); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5857/buggy-version/app.src.main.java.vesnell.pl.quiz.database.model.Quiz.java", "BodyUseAPI": [], "Fixed commit": "931b7675108f125ecfee61c961daab9314dc8b43", "Url": "https://api.github.com/repos/vesnell/Quiz", "Date": "2016-04-25T06:49:59Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(committedInstructions.containsKey(threadId))) { committedInstructions.put(threadId, 0L); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7470/buggy-version/src.main.java.archimulator.sim.uncore.cache.partitioning.CPIBasedCachePartitioningHelper.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, java.lang.Long>.put(int,long)"], "Fixed commit": "5dd042fc34dd8d0df0df4f3d85165953aab28b29", "Url": "https://api.github.com/repos/mcai/Archimulator", "Date": "2013-04-12T14:51:23Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hu.schonherz.y2014.partyappandroid.util.datamodell.Session.instance.searchViewClubs) == null) { return new java.util.LinkedList<hu.schonherz.y2014.partyappandroid.util.datamodell.Club>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4409/buggy-version/src.hu.schonherz.y2014.partyappandroid.util.datamodell.Session.java", "BodyUseAPI": [], "Fixed commit": "8cfafec1e02f0e13ec62d5a979a08dbd2ef3b1bc", "Url": "https://api.github.com/repos/toroktibor/partyappandroid", "Date": "2014-02-02T21:46:36Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((i == 0) && (charat == '-')) { length++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2422/buggy-version/src.SimpleCalculation.java", "BodyUseAPI": [], "Fixed commit": "0339c57fe456015b50151fbff52ba1d64d6a22d8", "Url": "https://api.github.com/repos/395253902/SimpleCalculation", "Date": "2017-04-06T06:07:04Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(isEndOfPage(row))) { row.removeTopBorders(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2865/buggy-version/src.main.java.be.quodlibet.boxable.Table.java", "BodyUseAPI": ["be.quodlibet.boxable.Row<T>.removeTopBorders()"], "Fixed commit": "dd414fb9ac91f763bdb05c3b229c4d9696e47843", "Url": "https://api.github.com/repos/dhorions/boxable", "Date": "2016-04-13T09:42:27Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (keepFormat) return insertSpacesInString(str, result); else return result.toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1496/buggy-version/dataquality-sampling.src.main.java.org.talend.dataquality.datamasking.functions.AbstractGenerateUniqueSsn.java", "BodyUseAPI": [], "Fixed commit": "fa5e499fbb361e334be1d71d4409fddd2b509b93", "Url": "https://api.github.com/repos/Talend/data-quality", "Date": "2016-07-26T13:47:16Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((movieList) != null) { movieList.clear(); }else { movieList = new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6958/buggy-version/app.src.main.java.me.unnikrishnanpatel.popular_movie2.MainFragment.java", "BodyUseAPI": [], "Fixed commit": "bd462fac6c3c33294e90c1019b641f02f4348764", "Url": "https://api.github.com/repos/ukpa/popular-movie2", "Date": "2016-04-19T20:07:47Z"},
{"Line": "=>488", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInitialized()) { animateLayoutAndWait(150); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/504/buggy-version/CodenameOne.src.com.codename1.components.OnOffSwitch.java", "BodyUseAPI": [], "Fixed commit": "52f94487e6420b811bac50c69fbad6f694896ba2", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2015-05-13T19:29:48Z"},
{"Line": "=>582", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((id.lastIndexOf(\".\")) == (-1)) { id = id + \".czi\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2417/buggy-version/components.formats-gpl.src.loci.formats.in.ZeissCZIReader.java", "BodyUseAPI": [], "Fixed commit": "cc0fc43894bc45ca65dd466c7afb49f4635a6b0b", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2017-08-08T00:01:30Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.massivecraft.factions.cmd.CmdList.argAsInt(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pagenumber > pagecount) pagenumber = pagecount; else if (pagenumber < 1) pagenumber = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8588/buggy-version/src.com.massivecraft.factions.cmd.CmdList.java", "BodyUseAPI": [], "Fixed commit": "857892738f4077e1421b5864161a421cf997fd59", "Url": "https://api.github.com/repos/AEtherSurfer/Factions", "Date": "2012-12-01T01:43:04Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pj.magic.service.impl.StockQuantityConversionServiceImpl.getStockQuantityConversion(stockQuantityConversion.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (updated.isPosted()) { throw new com.pj.magic.exception.AlreadyPostedException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3536/buggy-version/src.main.java.com.pj.magic.service.impl.StockQuantityConversionServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "f9f2226f0ff45112500c4e846a34d8ece3fc0562", "Url": "https://api.github.com/repos/pendelhaven3/magic", "Date": "2015-06-02T02:02:45Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((user.isused) == true) { mode = Mode.RENT; rentTime = new java.util.Date(user.getRenttime()); returnTime = null; }else { mode = Mode.RETURN; returnTime = new java.util.Date(user.getReturntime()); rentTime = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1758/buggy-version/src.Rental.java", "BodyUseAPI": [], "Fixed commit": "1497debcf22001f7fec21103540bd34f728c7d1d", "Url": "https://api.github.com/repos/junioryi/Ubike-system", "Date": "2015-06-03T17:52:10Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.google.gdata.util.common.base.StringUtil.isEmpty(((java.lang.String) (content)))) { content = new byte[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1383/buggy-version/src.main.java.com.emc.ecs.alfresco.EcsS3Adapter.java", "BodyUseAPI": [], "Fixed commit": "06202b6b8d50da5b393a760ed2358302641bb6cd", "Url": "https://api.github.com/repos/EMCECS/ecs-alfresco-content-store", "Date": "2016-10-26T19:35:15Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((acceptedOffers.size()) > 0) { block.updateOfferStatus(getOperations(recommendations)); }else { block.updateOfferStatus(java.util.Optional.empty()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3851/buggy-version/src.main.java.org.apache.mesos.scheduler.plan.DefaultBlockScheduler.java", "BodyUseAPI": [], "Fixed commit": "d141c27975cc03cc03caaff43ed8c74d1e9c86f2", "Url": "https://api.github.com/repos/mesosphere/dcos-commons", "Date": "2016-08-28T23:27:51Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.getReadableDatabase().rawQuery(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((cursor.getCount()) > 0) { cursor.close(); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8179/buggy-version/app.src.main.java.com.doorboard3.doorboardmobile.DoorboardDbHelper.java", "BodyUseAPI": ["android.database.Cursor.close()"], "Fixed commit": "cc760c7fc0385a396ad40acaaa3d2cfb061f8927", "Url": "https://api.github.com/repos/DChen7/DoorboardMobile", "Date": "2017-04-06T04:03:41Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (plan.isEmpty()) { cz.cuni.mff.d3s.deeco.logging.Log.e(\"Empty plan has been generated.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/9007/buggy-version/uncertain-architectures.src.cz.cuni.mff.d3s.jdeeco.ua.movement.NearestOldestTrajectoryPlanner.java", "BodyUseAPI": [], "Fixed commit": "a7390efd027dbaa207edcdbece4550f2fe833df7", "Url": "https://api.github.com/repos/d3scomp/uncertain-architectures", "Date": "2015-11-15T19:14:17Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (itemTable.isEditing()) itemTable.getCellEditor().stopCellEditing();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8943/buggy-version/BORGCalendar.swingui.src.main.java.net.sf.borg.ui.checklist.CheckListPanel.java", "BodyUseAPI": ["itemTable.getCellEditor().stopCellEditing()", "net.sf.borg.ui.util.StripedTable.getCellEditor()"], "Fixed commit": "601ca10cb90bd397b90466ecf84fab44565c375b", "Url": "https://api.github.com/repos/mikeberger/borg_calendar", "Date": "2015-03-14T18:24:28Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.tileentity.TileEntity.getCapability(CapabilityEnergy.ENERGY,facing.getOpposite())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (storage.canReceive()) this.extractEnergy(storage.receiveEnergy(getEnergyStored(), false), false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/192/buggy-version/src.main.java.zmaster587.libVulpes.tile.TileEntityForgeProducer.java", "BodyUseAPI": ["net.minecraftforge.energy.IEnergyStorage.receiveEnergy(int,boolean)", "zmaster587.libVulpes.tile.TileEntityForgeProducer.extractEnergy(storage.receiveEnergy(getEnergyStored(), false),boolean)"], "Fixed commit": "d8c9abc3663a529de175f5e3182d583a9bbdfb62", "Url": "https://api.github.com/repos/zmaster587/libVulpes", "Date": "2017-01-29T20:46:04Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraftforge.fluids.FluidTank.fill(net.minecraftforge.fluids.FluidContainerRegistry.getFluidForFilledItem(stack),boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (amtFilled == 0) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/192/buggy-version/src.main.java.zmaster587.libVulpes.tile.multiblock.hatch.TileFluidHatch.java", "BodyUseAPI": [], "Fixed commit": "d8c9abc3663a529de175f5e3182d583a9bbdfb62", "Url": "https://api.github.com/repos/zmaster587/libVulpes", "Date": "2017-01-29T20:46:04Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraftforge.fluids.FluidTank.fill(net.minecraftforge.fluids.FluidStack,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (amountDrained == 0) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/192/buggy-version/src.main.java.zmaster587.libVulpes.tile.multiblock.hatch.TileFluidHatch.java", "BodyUseAPI": [], "Fixed commit": "d8c9abc3663a529de175f5e3182d583a9bbdfb62", "Url": "https://api.github.com/repos/zmaster587/libVulpes", "Date": "2017-01-29T20:46:04Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (chip.badFreq) { java.lang.System.out.print('?'); }else { ru.nsc.interval.thermocompensation.model.ChipRefineF0 chipModel = new ru.nsc.interval.thermocompensation.model.ChipRefineF0(chip, inpsLists.get(chipNo).get(0).inp, f0); if (chipModel.isMonotonic0()) { chipModels[chipNo] = chipModel; java.lang.System.out.print('+'); }else { java.lang.System.out.print('X'); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7035/buggy-version/java.model.src.main.java.ru.nsc.interval.thermocompensation.model.ChipRefineF0.java", "BodyUseAPI": [], "Fixed commit": "e41f8bd7f4922f2fffb217bab5da1fb5387e82e0", "Url": "https://api.github.com/repos/nadezhin/thermocompensation", "Date": "2016-12-01T10:15:08Z"},
{"Line": "=>452", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (channel.isOpen()) { try { no.rmz.blobee.rpc.client.RpcClientImpl.log.info(\"about to close stuff\"); channel.close(); } catch (java.lang.Throwable e) { no.rmz.blobee.rpc.client.RpcClientImpl.log.log(java.util.logging.Level.INFO, (\"Something went wrong when closing channel: \" + (channel)), e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3548/buggy-version/blobee.src.main.java.no.rmz.blobee.rpc.client.RpcClientImpl.java", "BodyUseAPI": ["org.jboss.netty.channel.Channel.close()"], "Fixed commit": "a16761d6bd8304fd4af5959da29bca67e22dde2d", "Url": "https://api.github.com/repos/la3lma/blobee", "Date": "2013-02-05T10:33:29Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (num > 1) { for (; num > 0; num--) { result = num * result; } txtOutput.setText((\"\" + result)); }else { txtOutput.setText(\"Error!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2515/buggy-version/task11_6.src.task11_6.Task11_6.java", "BodyUseAPI": [], "Fixed commit": "06aeb857d9a51a5e1b5b7cb2a59b69656482189c", "Url": "https://api.github.com/repos/linfaimom/Java_Projects", "Date": "2015-12-22T04:50:35Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["xdi2.core.features.nodetypes.XdiInnerRoot.fromContextNode(this.getRelation().follow())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(xdiInnerRoot.getPredicateOfInnerRoot().equals(this.getRelation().getArcXri()))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2231/buggy-version/messaging.src.main.java.xdi2.messaging.Operation.java", "BodyUseAPI": [], "Fixed commit": "84f058bdaec1c1eb200787f68d68f84b6b42324e", "Url": "https://api.github.com/repos/projectdanube/xdi2", "Date": "2014-07-19T10:52:31Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["xdi2.core.features.nodetypes.XdiInnerRoot.fromContextNode(this.getRelation().follow())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (xdiInnerRoot == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2231/buggy-version/messaging.src.main.java.xdi2.messaging.Operation.java", "BodyUseAPI": [], "Fixed commit": "84f058bdaec1c1eb200787f68d68f84b6b42324e", "Url": "https://api.github.com/repos/projectdanube/xdi2", "Date": "2014-07-19T10:52:31Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["xdi2.core.features.nodetypes.XdiInnerRoot.fromContextNode(this.getRelation().follow())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(xdiInnerRoot.getSubjectOfInnerRoot().equals(this.getRelation().getContextNode().getXri()))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2231/buggy-version/messaging.src.main.java.xdi2.messaging.Operation.java", "BodyUseAPI": [], "Fixed commit": "84f058bdaec1c1eb200787f68d68f84b6b42324e", "Url": "https://api.github.com/repos/projectdanube/xdi2", "Date": "2014-07-19T10:52:31Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(UserInterface.UserInterfaceFacade.business.getPlayer().getPlayerInventory().contains(UserInterface.UserInterfaceFacade.business.getItem(id)))) { UserInterface.UserInterfaceFacade.business.getPlayer().addItemToInventory(UserInterface.UserInterfaceFacade.business.getItem(id)); updateListView(); if (UserInterface.UserInterfaceFacade.business.getItem(id).getCarryable()) { imageView.setVisible(false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/90/buggy-version/src.UserInterface.Controller.java", "BodyUseAPI": ["UserInterface.Controller.getPlayer()", "UserInterface.Controller.getItem(java.lang.String)", "UserInterface.UserInterfaceFacade.business.getPlayer().addItemToInventory(UserInterface.UserInterfaceFacade.business.getItem(id))", "UserInterface.UserInterfaceFacade.business.getItem(id).getCarryable()", "UserInterface.Controller.getItem(java.lang.String)"], "Fixed commit": "8be786f63f5df1e59b0eebdf9732c111c036d206", "Url": "https://api.github.com/repos/Semestergruppe23/worldofzuul2", "Date": "2017-12-08T11:57:09Z"},
{"Line": "=>466", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.gluu.site.ldap.persistence.LdapEntryManager.log.isTraceEnabled()) { org.gluu.site.ldap.persistence.LdapEntryManager.log.trace((((((\"Binary attribute: \" + (attribute.getName())) + \" value (hex): \") + (org.apache.commons.codec.binary.Hex.encodeHexString(attributeValues[i]))) + \" value (base64): \") + (attributeValueStrings[i]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3977/buggy-version/oxLdap.src.main.java.org.gluu.site.ldap.persistence.LdapEntryManager.java", "BodyUseAPI": ["org.slf4j.Logger.trace((((((\"Binary attribute: \" + (attribute.getName())) + \" value (hex): \") + (org.apache.commons.codec.binary.Hex.encodeHexString(attributeValues[i]))) + \" value (base64): \") + (attributeValueStrings[i])))"], "Fixed commit": "48142e199e654b53c93063b72365fe9f0cfd2d78", "Url": "https://api.github.com/repos/GluuFederation/oxCore", "Date": "2016-02-09T14:05:50Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.select.Elements.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((currentElement.child(1).childNodes().size()) > 5) { java.lang.String subParentCategory = currentElement.child(1).child(2).text(); categories += ((((parentCategory + \"|\") + subParentCategory) + \":\") + rank) + \",\"; }else { categories += ((parentCategory + \":\") + rank) + \",\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2228/buggy-version/crawler.src.main.java.com.dreamy.handler.AmazonCrawlerHandler.java", "BodyUseAPI": ["org.jsoup.nodes.Element.child(int)", "currentElement.child(1).child(int)", "currentElement.child(1).child(2).text()"], "Fixed commit": "fbde27db2a820190abc05e067621c59a426db4c8", "Url": "https://api.github.com/repos/dreamyteam/dreamy_ip", "Date": "2016-04-21T03:14:11Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.InputStream.skip(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nskip >= 0) this.curLeft -= ((int) (nskip));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1323/buggy-version/src.j.io.FixedInputStream.java", "BodyUseAPI": [], "Fixed commit": "b06979609ad083b1bb5b0748a099da23a97a0a5f", "Url": "https://api.github.com/repos/lucastan/libjava", "Date": "2012-12-23T15:34:11Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (msg != null) { java.lang.System.out.println(msg); if (!(msg.endsWith(\"\\n\"))) { msg += \"\\n\"; } this.logger.log(level, msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4509/buggy-version/src.main.java.abmi.bis.batch.CustomLogger.java", "BodyUseAPI": ["java.lang.String.endsWith(java.lang.String)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "a094bbe6d853426e45071b75c105ba12957dbd1c", "Url": "https://api.github.com/repos/imej/bis-batch", "Date": "2016-10-02T18:09:10Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null == usersDBBean) { userRegistrationAppService.addUser(userRegistrationAppServiceIB); }else { loginAppServiceIB.setUsername(usersDBBean.getUsername()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8615/buggy-version/UtilityContacts.src.login.appService.LoginAppService.java", "BodyUseAPI": ["com.databaseBeans.UsersDBBean.getUsername()", "login.appService.inputBeans.LoginAppServiceIB.setUsername(usersDBBean.getUsername())"], "Fixed commit": "7ea5953c06db8f392befe59e1aefcd68b28bb04b", "Url": "https://api.github.com/repos/NabarunDey/RentCastle", "Date": "2016-10-19T22:12:24Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (c.p.equals(p)) return c;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/9046/buggy-version/Assignment5.src.KdTree.java", "BodyUseAPI": [], "Fixed commit": "a428490084dc1a4c32c01a34a1f0c127705e8589", "Url": "https://api.github.com/repos/michaellohsy/Coursera-Algorithm", "Date": "2015-08-13T07:37:45Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ubic == \"Selecciona tienda\") { ubic = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6942/buggy-version/Promocion.app.src.main.java.com.onestopinteractive.promocion.Portada.java", "BodyUseAPI": [], "Fixed commit": "6d72ac55f51e2226129e275b748faa324af4e61d", "Url": "https://api.github.com/repos/Edwin205/App-Promocion", "Date": "2015-07-10T19:12:06Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ubicacionSuper.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ubicacionSuperv == \"Selecciona tienda\") { ubicacionSuperv = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6942/buggy-version/Promocion.app.src.main.java.com.onestopinteractive.promocion.Portada.java", "BodyUseAPI": [], "Fixed commit": "6d72ac55f51e2226129e275b748faa324af4e61d", "Url": "https://api.github.com/repos/Edwin205/App-Promocion", "Date": "2015-07-10T19:12:06Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuilder.length()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (count > 0) { context.signalEncoderChange(HighLevelEncoder.ASCII_ENCODATION); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3921/buggy-version/core.src.main.java.com.google.zxing.datamatrix.encoder.X12Encoder.java", "BodyUseAPI": [], "Fixed commit": "4b02337709279561745d7ae2ef7ff2e9f3b1a1a6", "Url": "https://api.github.com/repos/401610239/zxing", "Date": "2015-02-04T13:45:35Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (widgetModel != null) setExecutionMode(widgetModel.getExecutionMode());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4666/buggy-version/applications.plugins.org.csstudio.opibuilder.src.org.csstudio.opibuilder.properties.AbstractWidgetProperty.java", "BodyUseAPI": ["org.csstudio.opibuilder.properties.AbstractWidgetProperty.setExecutionMode(widgetModel.getExecutionMode())", "org.csstudio.opibuilder.model.AbstractWidgetModel.getExecutionMode()"], "Fixed commit": "920fdc6741550472fe19655485b1e8cbecffa6a7", "Url": "https://api.github.com/repos/ControlSystemStudio/cs-studio", "Date": "2012-09-10T20:44:13Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.fullwall.Citizens.Economy.EconomyHandler.useIconomy())) player.sendMessage(MessageUtils.noEconomyMessage); else displayMoney(player, npc);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5966/buggy-version/src.com.fullwall.Citizens.Commands.CommandExecutors.TraderExecutor.java", "BodyUseAPI": [], "Fixed commit": "654bd1a5d7b8a545ddb11fac3e1ef63bbbfdadef", "Url": "https://api.github.com/repos/fullwall/Citizens", "Date": "2011-06-07T11:58:44Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pack.getFileType().equals(packData.getFileType())) { pack.setInstallType(packData.getInstallType()); pack.setSilentInstall(packData.isSilentInstall()); pack.setShortcutPath(packData.getShortcutPath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5845/buggy-version/src.dcp.gui.pivot.facades.SetFacade.java", "BodyUseAPI": ["dcp.logic.model.Pack.getInstallType()", "dcp.logic.model.Pack.isSilentInstall()", "dcp.logic.model.Pack.setInstallType(packData.getInstallType())", "dcp.logic.model.Pack.setSilentInstall(packData.isSilentInstall())", "dcp.logic.model.Pack.getShortcutPath()", "dcp.logic.model.Pack.setShortcutPath(packData.getShortcutPath())"], "Fixed commit": "5ccf33bddb485e445f2c2bca2c0cd3791a55381a", "Url": "https://api.github.com/repos/DevComPack/setupmaker", "Date": "2015-03-02T09:49:09Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(pack.equals(packData.getPackDependency()))) pack.setPackDependency(packData.getPackDependency());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5845/buggy-version/src.dcp.gui.pivot.facades.SetFacade.java", "BodyUseAPI": ["dcp.logic.model.Pack.getPackDependency()", "dcp.logic.model.Pack.setPackDependency(packData.getPackDependency())"], "Fixed commit": "5ccf33bddb485e445f2c2bca2c0cd3791a55381a", "Url": "https://api.github.com/repos/DevComPack/setupmaker", "Date": "2015-03-02T09:49:09Z"},
{"Line": "=>4435", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pivotal.gemfirexd.internal.engine.Misc.getCacheLogWriterNoThrow()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((logger != null) && (totalExceptionCount > 1)) { logger.error(((\"Exception in removing the entry from index. \" + \"Total exception count :\") + totalExceptionCount)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1563/buggy-version/gemfirexd.core.src.main.java.com.pivotal.gemfirexd.internal.engine.access.index.GfxdIndexManager.java", "BodyUseAPI": ["com.gemstone.gemfire.LogWriter.error(java.lang.String)"], "Fixed commit": "95fd0352df56b2db6057d80a94709e0166a6976c", "Url": "https://api.github.com/repos/SnappyDataInc/snappy-store", "Date": "2017-11-24T13:30:06Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["model.ai.PossibleSituation.getBestSituation(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (((bestSituation != null) && ((bestSituation.getFrom()) != null)) && ((bestSituation.getTo()) != null)) { model.ChessField fromField = game.getChessBoard().getField(bestSituation.getFrom().getCol(), bestSituation.getFrom().getRow()); model.ChessField toField = game.getChessBoard().getField(bestSituation.getTo().getCol(), bestSituation.getTo().getRow()); model.Turn bestTurn = new model.Turn(fromField, toField); return bestTurn; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2637/buggy-version/Source.ch.zhaw.necarex.src.model.ComputerPlayer.java", "BodyUseAPI": ["model.ai.PossibleSituation.getTo()", "model.ai.PossibleSituation.getFrom()", "bestSituation.getTo().getRow()", "bestSituation.getTo().getCol()", "bestSituation.getFrom().getRow()", "bestSituation.getFrom().getCol()", "model.ai.PossibleSituation.getFrom()", "model.ai.PossibleSituation.getTo()", "game.getChessBoard().getField(bestSituation.getTo().getCol(),bestSituation.getTo().getRow())", "game.getChessBoard().getField(bestSituation.getFrom().getCol(),bestSituation.getFrom().getRow())"], "Fixed commit": "ad1f1d0e581953e8051229c8fbe10528d7684364", "Url": "https://api.github.com/repos/sprengmeister/IT10-t_SWE1_chess", "Date": "2012-12-10T13:55:40Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((model.ComputerPlayer) (game.getActivePlayer())).getBestTurn()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (computerTurn != null) doTurn(computerTurn.getFromField(), computerTurn.getToField());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2637/buggy-version/Source.ch.zhaw.necarex.src.control.GameController.java", "BodyUseAPI": ["control.GameController.doTurn(computerTurn.getFromField(),computerTurn.getToField())", "model.Turn.getFromField()", "model.Turn.getToField()"], "Fixed commit": "ad1f1d0e581953e8051229c8fbe10528d7684364", "Url": "https://api.github.com/repos/sprengmeister/IT10-t_SWE1_chess", "Date": "2012-12-10T13:55:40Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dbh.getBuildingCount()) == 0) { for (org.cpen321.discovr.model.Building bldg : buildings) { dbh.addBuilding(bldg); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8547/buggy-version/app.src.main.java.org.cpen321.discovr.MainActivity.java", "BodyUseAPI": ["org.cpen321.discovr.SQLiteDBHandler.addBuilding(org.cpen321.discovr.model.Building)"], "Fixed commit": "1e3b23967b0a938bbd9702f2148c6bee65034ff7", "Url": "https://api.github.com/repos/SimonJinaphant/Discovr", "Date": "2016-11-30T22:48:08Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.originalVecs) != null) clone.originalVecs = new java.util.ArrayList<jsat.distributions.multivariate.Vec>(this.originalVecs);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8371/buggy-version/JSAT.src.jsat.distributions.multivariate.ProductKDE.java", "BodyUseAPI": [], "Fixed commit": "128a0b12f8ae50c788efd45c5633c0d75a8bc5a7", "Url": "https://api.github.com/repos/EdwardRaff/JSAT", "Date": "2015-04-06T02:45:18Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.getType()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (this.valueType.isAssignableFrom(type)) { if (de.axnsoftware.settings.impl.accessor.DefaultTypeMapperImpl.getPreparedDefaultTypeMappings().containsKey(type)) { result = java.lang.Boolean.TRUE; }else if (visitee.isAnnotationPresent(de.axnsoftware.settings.Property.class)) { de.axnsoftware.settings.Property annotation = visitee.getAnnotation(de.axnsoftware.settings.Property.class); if (!(\"\".equals(annotation.typeMapper()))) { result = java.lang.Boolean.TRUE; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4485/buggy-version/src.main.java.de.axnsoftware.settings.impl.visitor.SimpleTypeFieldVisitorImpl.java", "BodyUseAPI": ["de.axnsoftware.settings.impl.accessor.DefaultTypeMapperImpl.getPreparedDefaultTypeMappings().containsKey(java.lang.Class<?>)"], "Fixed commit": "ff67fea14ea015d35251541c2cf35705ad395984", "Url": "https://api.github.com/repos/axnsoftware/commons-settings", "Date": "2013-12-16T17:30:45Z"},
{"Line": "=>717", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (foodQuantity == 0) { prototype.Logger.success(\"Game Over!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7511/buggy-version/src.prototype.Commands.java", "BodyUseAPI": [], "Fixed commit": "e5b1bf854872e069a0a838e73063aeaf8565992d", "Url": "https://api.github.com/repos/weeg/AntFarm", "Date": "2013-04-21T15:42:42Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (key != (com.gamesbykevin.squares.assets.Assets.AudioKey.Song1)) com.gamesbykevin.squares.assets.Audio.stop(com.gamesbykevin.squares.assets.Assets.AudioKey.Song1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7866/buggy-version/src.com.gamesbykevin.squares.assets.Assets.java", "BodyUseAPI": [], "Fixed commit": "234739d58d3152b88652aa30862822b94ff510f2", "Url": "https://api.github.com/repos/gamesbykevin/Squares", "Date": "2015-10-03T12:03:49Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (key != (com.gamesbykevin.squares.assets.Assets.AudioKey.Song2)) com.gamesbykevin.squares.assets.Audio.stop(com.gamesbykevin.squares.assets.Assets.AudioKey.Song2);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7866/buggy-version/src.com.gamesbykevin.squares.assets.Assets.java", "BodyUseAPI": [], "Fixed commit": "234739d58d3152b88652aa30862822b94ff510f2", "Url": "https://api.github.com/repos/gamesbykevin/Squares", "Date": "2015-10-03T12:03:49Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pojo.getMemberList().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((member.getGroup()) != null) { groupBox.setSelectedIndex(this.getIndexOfEntry(pojo.getGroupListAsArray(), member.getGroup().getName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7671/buggy-version/GroupBuilder.src.com.kn.groupBuilder.Gui.Popups.EditMemberFrame.java", "BodyUseAPI": ["com.kn.groupBuilder.Gui.Popups.EditMemberFrame.getIndexOfEntry(pojo.getGroupListAsArray(),member.getGroup().getName())", "javax.swing.JComboBox<java.lang.String>.setSelectedIndex(int)", "member.getGroup().getName()", "com.kn.groupBuilder.Storage.Member.getGroup()"], "Fixed commit": "49fdd6d7b224c5ea9089ea941f158cbae2cd2ccc", "Url": "https://api.github.com/repos/DennisMarkmann/GroupBuilder", "Date": "2013-07-19T11:04:08Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dsa.iot.dslink.node.Node.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (retries == null) child.setAttribute(\"retries\", new org.dsa.iot.dslink.node.value.Value(2));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2349/buggy-version/src.main.java.modbus.ModbusLink.java", "BodyUseAPI": [], "Fixed commit": "d8bf49063d70573b53a1f3495678e8a432a7b6bf", "Url": "https://api.github.com/repos/IOT-DSA/dslink-java-modbus", "Date": "2016-06-29T22:27:33Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dsa.iot.dslink.node.Node.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (timeout == null) child.setAttribute(\"Timeout\", new org.dsa.iot.dslink.node.value.Value(500));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2349/buggy-version/src.main.java.modbus.ModbusLink.java", "BodyUseAPI": [], "Fixed commit": "d8bf49063d70573b53a1f3495678e8a432a7b6bf", "Url": "https://api.github.com/repos/IOT-DSA/dslink-java-modbus", "Date": "2016-06-29T22:27:33Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((form.getPublicEmail().length()) != 0) { validator.isEmail(form.getPublicEmail(), errors, \"publicEmail\", \"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u0439 email\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1470/buggy-version/src.main.java.it.sevenbits.graphicartsindustry.web.service.registration.RegistrationFirstFormValidator.java", "BodyUseAPI": ["it.sevenbits.graphicartsindustry.web.domain.registration.RegistrationFirstForm.getPublicEmail()", "it.sevenbits.graphicartsindustry.web.service.CommonFieldValidator.isEmail(form.getPublicEmail(),java.util.HashMap<java.lang.String, java.lang.String>,java.lang.String,java.lang.String)"], "Fixed commit": "5fc8b101c88c6244d4185d5cdea529c293b44703", "Url": "https://api.github.com/repos/7bits/internship-2015-polygraphy", "Date": "2015-08-13T06:45:02Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["score.next()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((element.get()) > prevBestScore) { prevBestScore = element.get(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5884/buggy-version/integration.src.main.java.org.apache.mahout.utils.vectors.lucene.CategorizeDocumentFactory.java", "BodyUseAPI": ["element.get()"], "Fixed commit": "7550e4f134696c4ad0a65204d94292a97b25eba4", "Url": "https://api.github.com/repos/tquenolle/mahout", "Date": "2013-02-15T16:03:32Z"},
{"Line": "=>699", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pp.getErrorIndex()) >= 0) { throw new java.text.ParseException(string, pp.getErrorIndex()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7907/buggy-version/core.src.org.pentaho.di.core.row.value.ValueMetaBase.java", "BodyUseAPI": ["java.text.ParsePosition.getErrorIndex()"], "Fixed commit": "1a02e5c46a963060a50a027e3e6be5411ba0aa2f", "Url": "https://api.github.com/repos/jmcrfp/pentaho-kettle", "Date": "2015-08-13T08:59:03Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((clazz.getSuperclass()) != null) && (!(java.lang.Object.class.equals(clazz)))) { return isIndexable(clazz.getSuperclass()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8481/buggy-version/muikku-core.src.main.java.fi.otavanopisto.muikku.search.IndexEntityProcessor.java", "BodyUseAPI": ["fi.otavanopisto.muikku.search.IndexEntityProcessor.isIndexable(java.lang.Class<? super ?>)", "java.lang.Class<?>.getSuperclass()"], "Fixed commit": "41c6d2aa12ff666405bc024751fbda19f98a8622", "Url": "https://api.github.com/repos/otavanopisto/muikku", "Date": "2016-04-04T10:46:12Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.cis6930.geotaskit.EditorActivity.LOCATION_PICKED) { task_to_edit.latitude = ((float) (latitude)); task_to_edit.longitude = ((float) (longitude)); com.cis6930.geotaskit.EditorActivity.LOCATION_PICKED = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4087/buggy-version/src.com.cis6930.geotaskit.EditorActivity.java", "BodyUseAPI": [], "Fixed commit": "15a6466a703654251bb5936e743981fa753c287b", "Url": "https://api.github.com/repos/marcjmcdougall/geotaskit", "Date": "2013-04-23T16:36:48Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Nodes.Assign.get_sym_table_elem(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ste.is_array()) semantic_error(this, ((\"Variable \" + (name)) + \" should have int or float type.\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4565/buggy-version/Nodes.Assign.java", "BodyUseAPI": [], "Fixed commit": "ba5ab57aa18f9aa326fe8631d49f92c260d0e7d3", "Url": "https://api.github.com/repos/jhnaldo/mini-c-compiler", "Date": "2014-05-22T11:09:46Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((movieList.size()) > 0) { movieList.remove(0); showMovieTasteTest(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3866/buggy-version/app.src.main.java.com.example.gad.mysqlitemodule.MainActivity.java", "BodyUseAPI": ["java.util.ArrayList<com.example.gad.mysqlitemodule.model.MovieReview>.remove(int)"], "Fixed commit": "05b7de1bd99116b38cd2f1f5041b31a9495f2b9a", "Url": "https://api.github.com/repos/gadibt77/ModuleSQLiteFinalProject", "Date": "2017-06-11T11:20:01Z"},
{"Line": "=>545", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (op == (com.gmail.socraticphoenix.shnap.program.ShnapOperators.NEGATIVE)) { op = com.gmail.socraticphoenix.shnap.program.ShnapOperators.SUBTRACT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/117/buggy-version/src.main.java.com.gmail.socraticphoenix.shnap.parse.ShnapParser.java", "BodyUseAPI": [], "Fixed commit": "d5a492e42f0018b9a216ea35a59c90a09515a25c", "Url": "https://api.github.com/repos/ShnapLang/Shnap", "Date": "2017-09-26T18:21:51Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["inputLine.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((suggestions.getPosition(haskellToTry)) < 0) { suggestions.add(haskellToTry); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4989/buggy-version/tryhaskell.src.nl.bneijt.tryhaskell.TryhaskellActivity.java", "BodyUseAPI": ["android.widget.ArrayAdapter<java.lang.String>.add(java.lang.String)"], "Fixed commit": "6eb4edd2f04f8a28a3beccb856531a846c6bccff", "Url": "https://api.github.com/repos/bneijt/tryhaskell", "Date": "2012-07-21T11:37:12Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((books) != null) { books.remove(position); notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1326/buggy-version/app.src.main.java.com.josephcmontgomery.bookscanner.BookPagerAdapter.java", "BodyUseAPI": [], "Fixed commit": "4b7f22d922c8f926dfd523b95430fa493b89287b", "Url": "https://api.github.com/repos/Grotke/BookScanner", "Date": "2016-02-29T09:07:39Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.josephcmontgomery.bookscanner.Tools.ImageFetcher.cache.size()) >= (com.josephcmontgomery.bookscanner.Tools.ImageFetcher.MAX_CACHE_SIZE)) { com.josephcmontgomery.bookscanner.Tools.ImageFetcher.cache.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1326/buggy-version/app.src.main.java.com.josephcmontgomery.bookscanner.Tools.ImageFetcher.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, android.graphics.drawable.Drawable>.clear()"], "Fixed commit": "4b7f22d922c8f926dfd523b95430fa493b89287b", "Url": "https://api.github.com/repos/Grotke/BookScanner", "Date": "2016-02-29T09:07:39Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.usergrid.rest.applications.ServiceResource.executeServiceRequest(javax.ws.rs.core.UriInfo,org.apache.usergrid.rest.ApiResponse,ServiceAction.DELETE,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((!(sr.getResultsType().equals(ServiceResults.Type.CONNECTION))) && (!(sr.getResultsType().equals(ServiceResults.Type.COLLECTION)))) { for (org.apache.usergrid.persistence.Entity entity : sr.getEntities()) { if ((entity.getProperty(AssetUtils.FILE_METADATA)) != null) { binaryStore.delete(services.getApplicationId(), entity); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2612/buggy-version/stack.rest.src.main.java.org.apache.usergrid.rest.applications.ServiceResource.java", "BodyUseAPI": ["org.apache.usergrid.rest.applications.ServiceResults.getEntities()"], "Fixed commit": "982d851628b3c1e5745840e86c220b9d773494d8", "Url": "https://api.github.com/repos/snoopdave/usergrid", "Date": "2015-04-01T16:16:40Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<?>.getSuperclass()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(java.lang.Object.class.equals(superType))) { return summer.util.Reflect.getDeclaredField(superType, name); }else { throw new java.lang.RuntimeException(((targetType + \" do not has field \") + name), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5041/buggy-version/src.main.java.summer.util.Reflect.java", "BodyUseAPI": ["summer.util.Reflect.getDeclaredField(java.lang.Class<?>,java.lang.String)"], "Fixed commit": "1f97aae1677f73e04da7de139ffaf77996a07c44", "Url": "https://api.github.com/repos/limingwei/summer", "Date": "2015-10-15T05:50:12Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i > ((size) - 1)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6147/buggy-version/src.deck.Hand.java", "BodyUseAPI": [], "Fixed commit": "4bfeb258c161cf652764072f2ac85aec7044b012", "Url": "https://api.github.com/repos/tlucsci434/Hufflepuff", "Date": "2015-04-23T01:55:06Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i > ((size) - 1)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6147/buggy-version/src.deck.Hand.java", "BodyUseAPI": [], "Fixed commit": "4bfeb258c161cf652764072f2ac85aec7044b012", "Url": "https://api.github.com/repos/tlucsci434/Hufflepuff", "Date": "2015-04-23T01:55:06Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((plus1s.app.model.UserDetails.getCurrentUser().getLostItem()) != null) { for (java.lang.String i : plus1s.app.model.UserDetails.getCurrentUser().getLostItem()) { output += (i + \",\") + '\\n'; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3024/buggy-version/App.app.src.main.java.plus1s.app.controllers.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "51ada71162ca50daea2325422526b726d8ccc6d2", "Url": "https://api.github.com/repos/IvoryCandy/Plus1s", "Date": "2017-06-20T00:40:59Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(map.keySet().equals(newMap.keySet()))) throw new java.lang.Exception(\"No\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7777/buggy-version/src.microbesVsMetabolites.WriteTrialsForSVMLight.java", "BodyUseAPI": [], "Fixed commit": "5b9a1bc2af0756d86fac9b98e3676d5bc6729ba7", "Url": "https://api.github.com/repos/afodor/metagenomicsTools", "Date": "2014-11-27T14:09:48Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((map.size()) != (newMap.size())) throw new java.lang.Exception(\"No\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7777/buggy-version/src.microbesVsMetabolites.WriteTrialsForSVMLight.java", "BodyUseAPI": [], "Fixed commit": "5b9a1bc2af0756d86fac9b98e3676d5bc6729ba7", "Url": "https://api.github.com/repos/afodor/metagenomicsTools", "Date": "2014-11-27T14:09:48Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((map.keySet().size()) != (newMap.keySet().size())) throw new java.lang.Exception(\"No\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7777/buggy-version/src.microbesVsMetabolites.WriteTrialsForSVMLight.java", "BodyUseAPI": [], "Fixed commit": "5b9a1bc2af0756d86fac9b98e3676d5bc6729ba7", "Url": "https://api.github.com/repos/afodor/metagenomicsTools", "Date": "2014-11-27T14:09:48Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((checkperiods.length) > 2) { int i = ver[0].lastIndexOf(\".\"); java.lang.String[] vers = new java.lang.String[]{ ver[0].substring(0, i), ver[0].substring(i) }; bukkitVersion = java.lang.Float.parseFloat(vers[0]); }else { bukkitVersion = java.lang.Float.parseFloat(ver[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1904/buggy-version/src.com.ugleh.redstoneproximitysensor.configs.GeneralConfig.java", "BodyUseAPI": [], "Fixed commit": "ee1252a5a2e0d68a62c250f5d4804d39bd75eb2c", "Url": "https://api.github.com/repos/Ugleh/RedstoneProximitySensor", "Date": "2017-06-05T00:55:11Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["blackstorelongclass.personal_info_collector.DataHandler.userList.getTag(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (t.isCalendar()) { sentence = (sentence + (t.getTitle())) + \" INTEGER\"; config += \"2\"; }else if (t.isStr()) { sentence = (sentence + (t.getTitle())) + \" TEXT\"; config += \"3\"; }else if (t.isPos()) { sentence = (((sentence + (t.getTitle())) + \"x REAL,\") + (t.getTitle())) + \"y REAL\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/674/buggy-version/app.src.main.java.blackstorelongclass.personal_info_collector.DataHandler.listHandler.java", "BodyUseAPI": ["blackstorelongclass.personal_info_collector.DataHandler.userTag.isStr()", "blackstorelongclass.personal_info_collector.DataHandler.userTag.isPos()", "blackstorelongclass.personal_info_collector.DataHandler.userTag.getTitle()", "blackstorelongclass.personal_info_collector.DataHandler.userTag.getTitle()", "blackstorelongclass.personal_info_collector.DataHandler.userTag.getTitle()", "blackstorelongclass.personal_info_collector.DataHandler.userTag.getTitle()"], "Fixed commit": "853f19abf17a4d0d76b0d3cb72d50e92ef1ae2d9", "Url": "https://api.github.com/repos/BlackShopLongClass/Personal_Info_Collector", "Date": "2017-12-08T08:29:00Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (rules != null) for (java.lang.Object object : rules) { if (object instanceof com.std4453.freemclauncher.util.StructuredDataObject) this.rules.add(new com.std4453.freemclauncher.libraries.SystemFilterRule(((com.std4453.freemclauncher.util.StructuredDataObject) (object)))); else continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8561/buggy-version/src.com.std4453.freemclauncher.libraries.Library.java", "BodyUseAPI": [], "Fixed commit": "8064f4dcec0eaeec176d32299f3b871e6831cc2e", "Url": "https://api.github.com/repos/std4453/FreeMCLauncher", "Date": "2015-07-06T16:00:05Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fullName.length) > 0) searchPeople(fullName[0], null, null, null); else searchPeople(username, null, null, null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4906/buggy-version/ui-common.src.main.java.org.exoplatform.selenium.platform.ConnectionsManagement.java", "BodyUseAPI": ["org.exoplatform.selenium.platform.ConnectionsManagement.searchPeople(java.lang.String,<nulltype>,<nulltype>,<nulltype>)"], "Fixed commit": "e34ccbdd2c85ffd0adc13ebb6217a8f4625b896c", "Url": "https://api.github.com/repos/exoplatform/ui-test", "Date": "2015-12-24T07:41:35Z"},
{"Line": "=>848", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (enablePartialQuery) { sql.append(java.lang.String.format(\"\\nLIMIT %s\", pagesz)); }else { if ((pagekey == null) || (pagekey == 0)) { pagekey = 1; sql.append(java.lang.String.format(\"\\nLIMIT %s\", pagesz)); }else { sql.append(java.lang.String.format(\"\\nLIMIT %s,%s\", ((pagekey - 1) * pagesz), pagesz)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5087/buggy-version/jdcloud.src.com.jdcloud.AccessControl.java", "BodyUseAPI": [], "Fixed commit": "aac71d2cf08687356d9198118303a4fb43ec86af", "Url": "https://api.github.com/repos/skyshore2001/jdcloud-java", "Date": "2017-03-25T18:34:58Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["common.table_classes.Table.getColumn(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (column == null) throw new common.exceptions.QueryException(java.lang.String.format(\"Invalid column '%s' in table '%s'\", columnName, table.getName()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/997/buggy-version/src.parser.SQLListener.java", "BodyUseAPI": [], "Fixed commit": "c3a3cd80a93204793b525d4719454a9240066a2f", "Url": "https://api.github.com/repos/AirVan21/DBMS.Basic", "Date": "2015-12-31T12:13:04Z"},
{"Line": "=>738", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result.isEmpty()) { view.setCurrentScheduleIndex(0, 0); }else { view.setCurrentScheduleIndex(((sched_index) + 1), lessonGroupsList.size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3093/buggy-version/src.main.java.upandgo.client.presenter.SchedulerPresenter.java", "BodyUseAPI": [], "Fixed commit": "0566131e781aff5f08378d225bd557ca18484caa", "Url": "https://api.github.com/repos/TechnionYP5777/UpAndGo", "Date": "2017-06-29T03:46:09Z"},
{"Line": "=>589", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((this.molFormula) != null) && (!(this.molFormula.equals(\"\")))) this.molFormula = org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator.getString(org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator.getMolecularFormula(this.molFormula.trim(), org.openscience.cdk.nonotify.NoNotificationChemObjectBuilder.getInstance()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2852/buggy-version/src.de.ipbhalle.metfrag.web.controller.MetFragBean.java", "BodyUseAPI": ["java.lang.String.trim()", "org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator.getString(org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator.getMolecularFormula(this.molFormula.trim(), org.openscience.cdk.nonotify.NoNotificationChemObjectBuilder.getInstance()))", "org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator.getMolecularFormula(java.lang.String,org.openscience.cdk.nonotify.NoNotificationChemObjectBuilder.getInstance())"], "Fixed commit": "3597f9f7badc0e25cc70b68f5a4365ded0b4bf31", "Url": "https://api.github.com/repos/s-wolf/MetFragWeb", "Date": "2011-02-14T09:21:15Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((obj.getUsername()) == null) obj.setUsername(obj.getMail());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1262/buggy-version/src.main.java.com.blstream.myhoard.db.dao.UserDAO.java", "BodyUseAPI": ["com.blstream.myhoard.db.dao.UserDS.getMail()", "com.blstream.myhoard.db.dao.UserDS.setUsername(obj.getMail())"], "Fixed commit": "1fedede8946ae12793e48e69feaabb45926a77c5", "Url": "https://api.github.com/repos/blstream/myHoard_Java2", "Date": "2014-03-16T19:47:17Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (iRecord.isDirty()) com.orientechnologies.orient.core.record.ORecordInternal.unsetDirty(iRecord);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8599/buggy-version/server.src.main.java.com.orientechnologies.orient.server.network.protocol.binary.OBinaryNetworkProtocolAbstract.java", "BodyUseAPI": ["com.orientechnologies.orient.core.record.ORecordInternal.unsetDirty(com.orientechnologies.orient.core.record.ORecord)"], "Fixed commit": "c65d544368cfec1d5d5e7f400233f9220d490f76", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-08-19T21:44:32Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSelectedItems.size()) > 0) { setUpFilteredAdapter(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5960/buggy-version/TeamToApp.src.com.CMPUT301W15T02.teamtoapp.Activities.ClaimantClaimsListActivity.java", "BodyUseAPI": [], "Fixed commit": "2ceb11593ad00793e4893588c4b99062beecad34", "Url": "https://api.github.com/repos/CMPUT301W15T02/TeamTo", "Date": "2015-04-03T21:14:53Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((s.getLobby()) != null) { if (s.getLobby().equals(lobby)) { s.update(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2871/buggy-version/src.me.Aubli.ZvP.Sign.SignManager.java", "BodyUseAPI": ["me.Aubli.ZvP.Sign.ISign.getLobby()", "me.Aubli.ZvP.Sign.ISign.update()", "s.getLobby().equals(me.Aubli.ZvP.Game.Lobby)"], "Fixed commit": "a4b0d8fb444c3f205fe6b8e989ff71e6728797dd", "Url": "https://api.github.com/repos/AlexMl/ZvP", "Date": "2015-04-19T16:36:22Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((s.getArena()) != null) { if (s.getArena().equals(arena)) { s.update(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2871/buggy-version/src.me.Aubli.ZvP.Sign.SignManager.java", "BodyUseAPI": ["me.Aubli.ZvP.Sign.ISign.update()", "s.getArena().equals(me.Aubli.ZvP.Game.Arena)", "me.Aubli.ZvP.Sign.ISign.getArena()"], "Fixed commit": "a4b0d8fb444c3f205fe6b8e989ff71e6728797dd", "Url": "https://api.github.com/repos/AlexMl/ZvP", "Date": "2015-04-19T16:36:22Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { setupFragment(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7062/buggy-version/app.src.main.java.com.dannybit.tuneflow.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1e873a3a83fb4293bed327daa9e609c9e4642a9a", "Url": "https://api.github.com/repos/dannybit/TuneFlow", "Date": "2015-07-22T03:53:36Z"},
{"Line": "=>576", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((commaPos > (-1)) && ((role.startsWith(\"CN\")) || (role.startsWith(\"cn\")))) { java.lang.String roleName = role.substring(0, commaPos); java.lang.String location = role.substring((commaPos + 1)); if (location.endsWith(\",\")) location = location.substring(0, ((location.length()) - 1)); java.lang.String attrValues = performRoleSearch(location, roleName); if (attrValues != null) { addRole(attrValues, userRoles); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2730/buggy-version/src.main.java.com.googlecode.fascinator.authentication.custom.ldap.CustomLdapAuthenticationHandler.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.substring(int)"], "Fixed commit": "e5df0fb11907c518e574af63a242872da9342c90", "Url": "https://api.github.com/repos/IntersectAustralia/plugin-authentication-ad", "Date": "2014-01-22T23:26:32Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (retry > 2) { completed = true; throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7484/buggy-version/src.main.java.pt.tiago.lolsupport.facade.GenericRestFacade.java", "BodyUseAPI": [], "Fixed commit": "37d5d4b8e83824e5526504a89167e15e74fad75b", "Url": "https://api.github.com/repos/LolStatsOrganization/LOLSupport", "Date": "2016-05-08T20:07:27Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (parent != null) { this.setFont(parent.asComponent().getFont()); if ((foreground) == null) setForeground(parent.asComponent().getForeground()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5922/buggy-version/src.main.java.com.fbillioud.jmath.components.JMathDisplayer.java", "BodyUseAPI": [], "Fixed commit": "4fc86efac25643422be3aae0fb1053759737ad00", "Url": "https://api.github.com/repos/Sharcoux/JMath", "Date": "2016-09-15T12:57:14Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.graphaware.runtime.walk.NodeSelector.selectNode(input.getGraphDatabase())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (node != null) { result.put(node, score(node)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7668/buggy-version/src.main.java.com.graphaware.reco.neo4j.engine.RandomRecommendations.java", "BodyUseAPI": ["java.util.Map<org.neo4j.graphdb.Node, com.graphaware.reco.generic.result.PartialScore>.put(org.neo4j.graphdb.Node,com.graphaware.reco.generic.result.PartialScore)", "com.graphaware.reco.neo4j.engine.RandomRecommendations.score(org.neo4j.graphdb.Node)"], "Fixed commit": "734327304b45426216e96d28da75b39a6620789a", "Url": "https://api.github.com/repos/graphaware/neo4j-reco", "Date": "2015-06-16T03:10:10Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.configuration.file.FileConfiguration.getConfigurationSection(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (lampsC == null) { config.set((\"Lamps.\" + lampIDString), values); }else { lampsC.set(lampIDString, values); config.set(\"Lamps\", lampsC); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4377/buggy-version/Genie.src.main.java.com.djrapitops.genie.file.LampStorage.java", "BodyUseAPI": ["org.bukkit.configuration.ConfigurationSection.set(java.lang.String,java.util.Map<java.lang.String, java.io.Serializable>)", "org.bukkit.configuration.file.FileConfiguration.set(java.lang.String,org.bukkit.configuration.ConfigurationSection)"], "Fixed commit": "2f8beb7462688482c151e99ae5a095978547a6c1", "Url": "https://api.github.com/repos/Rsl1122/Genie", "Date": "2017-07-03T12:41:16Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parentClassName == null) parentClassName = parentView.getClass().getName();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7542/buggy-version/droidlib.src.main.java.org.itsnat.droid.impl.browser.FragmentLayoutInserter.java", "BodyUseAPI": [], "Fixed commit": "f0ca969ea6f25fc73d3a2e52f5115f31885ede9f", "Url": "https://api.github.com/repos/jmarranz/itsnat_droid", "Date": "2016-01-25T18:38:09Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ds.isNotConfigured()) { session.setAttribute(\"error\", \"Please login to the database first.\"); response.sendRedirect(\"oracle-login\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1346/buggy-version/src.LoginServlet.java", "BodyUseAPI": [], "Fixed commit": "4145fb5a935ddd053cf366ed20d1d9aea727b1a8", "Url": "https://api.github.com/repos/C391-Project/RadiologyApp", "Date": "2015-04-01T04:57:59Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (root instanceof javax.persistence.criteria.From) { root = ((javax.persistence.criteria.From) (root)).join(property); }else { root = root.get(property); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4285/buggy-version/src.main.java.com.github.tennaito.rsql.jpa.PredicateBuilder.java", "BodyUseAPI": ["javax.persistence.criteria.Path<?>.get(java.lang.String)"], "Fixed commit": "41f1832a0aaf8fb197d7cb8adf824337ab3d237f", "Url": "https://api.github.com/repos/egotsev/rsql-jpa", "Date": "2015-11-23T11:40:34Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (wildCard) { if (j == rank) { this.setWildCard(j); pokerEnums.eRank RankValue = eRank.values()[j]; pokerBase.Card NewCard = new pokerBase.Card(SuitValue, RankValue, true); MakingDeck.add(NewCard); }else { pokerEnums.eRank RankValue = eRank.values()[j]; pokerBase.Card NewCard = new pokerBase.Card(SuitValue, RankValue, (((13 * i) + j) + 1)); MakingDeck.add(NewCard); } }else { pokerEnums.eRank RankValue = eRank.values()[j]; pokerBase.Card NewCard = new pokerBase.Card(SuitValue, RankValue, (((13 * i) + j) + 1)); MakingDeck.add(NewCard); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6066/buggy-version/SpringBorgata.src.main.java.pokerBase.Deck.java", "BodyUseAPI": [], "Fixed commit": "18f33269182723a0e6bbb24afd40be651214db4f", "Url": "https://api.github.com/repos/Jjorss/PokerEngine", "Date": "2015-10-15T15:09:13Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((a == null) || (b == null)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4818/buggy-version/olca-core.src.main.java.org.openlca.core.math.IMatrixSolver.java", "BodyUseAPI": [], "Fixed commit": "65e236665f12761f78f24722b01ad18f491fa89c", "Url": "https://api.github.com/repos/GreenDelta/olca-modules", "Date": "2016-11-14T14:19:55Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m == null) || (v == null)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4818/buggy-version/olca-core.src.main.java.org.openlca.core.math.IMatrixSolver.java", "BodyUseAPI": [], "Fixed commit": "65e236665f12761f78f24722b01ad18f491fa89c", "Url": "https://api.github.com/repos/GreenDelta/olca-modules", "Date": "2016-11-14T14:19:55Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((a.columns()) != (b.rows())) throw new java.lang.IllegalArgumentException(\"a.columns != b.rows\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4818/buggy-version/olca-core.src.main.java.org.openlca.core.math.IMatrixSolver.java", "BodyUseAPI": [], "Fixed commit": "65e236665f12761f78f24722b01ad18f491fa89c", "Url": "https://api.github.com/repos/GreenDelta/olca-modules", "Date": "2016-11-14T14:19:55Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(messages.isEmpty())) { messages.get(0).setState(MessageState.READ); messageDao.save(messages.get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1238/buggy-version/baseProject.src.main.java.ch.unibe.ese.team8.controller.service.MessageService.java", "BodyUseAPI": ["java.util.List<ch.unibe.ese.team8.model.Message>.get(int)", "java.util.List<ch.unibe.ese.team8.model.Message>.get(int)", "ch.unibe.ese.team8.model.dao.MessageDao.save(messages.get(0))", "messages.get(0).setState(MessageState.READ)"], "Fixed commit": "9ec3e57c55647d6670ad1d359b02922698b96728", "Url": "https://api.github.com/repos/scg-unibe-ch/ese2016-team8", "Date": "2016-11-02T15:37:52Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mLabels) != null) { newLabels = new java.util.ArrayList<java.lang.String>(mLabels); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/154/buggy-version/src.mytasks.file.Task.java", "BodyUseAPI": [], "Fixed commit": "886655aa35fe4f1ebafbc0dc937f4352130d8688", "Url": "https://api.github.com/repos/cs2103aug2014-w09-1j/main", "Date": "2014-10-21T05:36:37Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (executor != null) { executor.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1927/buggy-version/subprojects.launcher.src.main.java.org.gradle.launcher.daemon.server.DefaultDaemonConnection.java", "BodyUseAPI": ["org.gradle.internal.concurrent.StoppableExecutor.stop()"], "Fixed commit": "ba044c8e65874b05bd19ca01e456bcadc5d2cd3e", "Url": "https://api.github.com/repos/gradle/gradle", "Date": "2012-08-27T04:08:28Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mTask.getReminder()) == null) && ((mTextReminder.getText().length()) != 0)) reminderChange = true; else if (((mTask.getReminder()) != null) && (!(mTask.getReminder().equals(mTextReminder.getText().toString())))) reminderChange = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7608/buggy-version/app.src.main.java.com.plant.activities.EditTaskActivity.java", "BodyUseAPI": ["com.plant.model.Task.getReminder()", "mTextReminder.getText().toString()", "mTask.getReminder().equals(mTextReminder.getText().toString())", "com.plant.model.Task.getReminder()", "android.widget.TextView.getText()"], "Fixed commit": "e711fc261670a6977267d0f5204c82ba4ef5fbec", "Url": "https://api.github.com/repos/cwfei/Plant", "Date": "2016-11-10T15:27:42Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["player.getWorld().getEntityManager().getEntity(message.getId())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (possibleTarget != null) { possibleTarget.entityInteract(player, message); }else { GlowServer.logger.info(((\"Player \" + (player.getName())) + \" tried to attack an entity that does not exist\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4835/buggy-version/src.main.java.net.glowstone.net.handler.play.player.InteractEntityHandler.java", "BodyUseAPI": ["net.glowstone.entity.GlowEntity.entityInteract(net.glowstone.entity.GlowPlayer,net.glowstone.net.message.play.player.InteractEntityMessage)"], "Fixed commit": "6f4428c7b058df9d7315c942e0f18ecd81c8d590", "Url": "https://api.github.com/repos/GlowstoneMC/Glowstone", "Date": "2015-01-11T23:24:33Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(event.isCancelled())) { possibleTarget.entityInteract(player, message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4835/buggy-version/src.main.java.net.glowstone.net.handler.play.player.InteractEntityHandler.java", "BodyUseAPI": [], "Fixed commit": "6f4428c7b058df9d7315c942e0f18ecd81c8d590", "Url": "https://api.github.com/repos/GlowstoneMC/Glowstone", "Date": "2015-01-11T23:24:33Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj instanceof com.google.gwt.user.client.ui.HasWidgets) { for (com.google.gwt.user.client.ui.Widget widget : ((com.google.gwt.user.client.ui.HasWidgets) (obj))) { if (widget instanceof com.google.gwt.user.client.ui.HasEnabled) { setEnabled(widget, enabled); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7647/buggy-version/gwt-material.src.main.java.gwt.material.design.client.base.mixin.EnabledMixin.java", "BodyUseAPI": [], "Fixed commit": "b0f88b3ef1f6e9da9e3cde4d8028353383ec7396", "Url": "https://api.github.com/repos/seamusmac/gwt-material", "Date": "2016-03-02T11:57:49Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (size > 0) { java.lang.String delTagContent = lastSelectTagView.getText().toString(); for (int i = 0; i < size; i++) { if (delTagContent.equals(mTagList.get(i))) { mTagList.remove(i); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2854/buggy-version/library.src.main.java.me.originqiu.library.EditTag.java", "BodyUseAPI": [], "Fixed commit": "28b18419603073c939e0757c35ed10c009aee07c", "Url": "https://api.github.com/repos/qiugang/EditTag", "Date": "2016-08-05T01:50:27Z"},
{"Line": "=>917", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((returnType) != (java.lang.Void.class)) { response = com.dynamicperception.nmx.NMXComs.getResponseVal(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8435/buggy-version/src.com.dynamicperception.nmx.Command.java", "BodyUseAPI": [], "Fixed commit": "8bd3c95c6fda3af24ff42d0d85e1aad47bf6f0b3", "Url": "https://api.github.com/repos/DynamicPerception/NMXComs", "Date": "2016-01-26T22:36:43Z"},
{"Line": "=>538", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getKey()) != null) { sequenceId = org.apache.synapse.aspects.flow.statistics.StatisticIdentityGenerator.getIdReferencingComponent(getKey().getKeyValue(), ComponentType.SEQUENCE, holder); }else { sequenceId = org.apache.synapse.aspects.flow.statistics.StatisticIdentityGenerator.getIdForFlowContinuableMediator(getSequenceNameForStatistics(), ComponentType.SEQUENCE, holder); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2635/buggy-version/modules.core.src.main.java.org.apache.synapse.mediators.base.SequenceMediator.java", "BodyUseAPI": [], "Fixed commit": "4b744d4aac82f54fa3935828c6d93005cdc67b5c", "Url": "https://api.github.com/repos/Buddhima/wso2-synapse", "Date": "2016-03-16T11:37:07Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.fi.muni.pa165.service.DestinationService.getDestinationById(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (destinationById == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8126/buggy-version/Airport-manager-service.src.main.java.cz.fi.muni.pa165.facade.DestinationFacadeImpl.java", "BodyUseAPI": [], "Fixed commit": "066b26e85f44dfa80a6081304d161d5608b1d33c", "Url": "https://api.github.com/repos/xprikryl2/Airport-manager", "Date": "2017-12-14T08:20:05Z"},
{"Line": "=>522", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class.getResourceAsStream(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (in == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1543/buggy-version/source.java.org.rsna.util.FileUtil.java", "BodyUseAPI": [], "Fixed commit": "f6ae8dfd1f93ac9e1fda71da5e75341b80c569fd", "Url": "https://api.github.com/repos/johnperry/Util", "Date": "2013-04-17T14:27:04Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reverse) { java.util.Collections.reverse(spells); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7297/buggy-version/core.src.main.java.org.wandledi.Scroll.java", "BodyUseAPI": [], "Fixed commit": "c8b4e119816e2ab4b7bca315cb5e7c6a363e0ca8", "Url": "https://api.github.com/repos/machisuji/Wandledi", "Date": "2011-10-11T17:35:13Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mappack) != null) { playerFoodStats.setMinFoodLevel(mappack.getMappackMetadata().getMinFoodLevel()); playerFoodStats.setMaxFoodLevel(mappack.getMappackMetadata().getMaxFoodLevel()); }else { playerFoodStats.setMinFoodLevel(0); playerFoodStats.setMinFoodLevel((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/30/buggy-version/Server.src.main.java.jk_5.nailed.map.NailedMap.java", "BodyUseAPI": [], "Fixed commit": "83b3f86eae4a20c41203622fdebe9999520f9dec", "Url": "https://api.github.com/repos/nailed/nailed-forge", "Date": "2014-05-09T07:39:51Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (input != null) { sb.append(\"\\tinput.size()==0 ? \").append(((input.size()) == 0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4094/buggy-version/document-classification.document-classification-logic.src.main.java.pl.edu.icm.coansys.classification.documents.pig.proceeders.FLAT_POS_NEG.java", "BodyUseAPI": ["org.apache.pig.data.Tuple.size()", "java.lang.StringBuilder.append(((input.size()) == 0))"], "Fixed commit": "4c216556e19fe2170df2e238f314610acceb5d59", "Url": "https://api.github.com/repos/axnow/CoAnSys", "Date": "2013-11-06T09:52:25Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tile instanceof objects.Wall) { java.awt.Rectangle bounding = tile.boundingBox(); if (below.intersects(bounding)) { if (!(tile instanceof objects.River)) south = true; }else if (above.intersects(bounding)) { if (!(tile instanceof objects.River)) north = true; }else if (right.intersects(bounding)) { if (!(tile instanceof objects.River)) east = true; }else if (left.intersects(bounding)) { if (!(tile instanceof objects.River)) west = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/9105/buggy-version/src.objects.Entity.java", "BodyUseAPI": ["objects.Tile.boundingBox()"], "Fixed commit": "0450c52d411962a8d41e53c0a952d922f72acab0", "Url": "https://api.github.com/repos/Avikash-Mishra/PixelJam2014", "Date": "2014-09-14T04:50:01Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getBlock().getRelative(event.getDirection()).getLocation()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((org.bitbucket.ucchy.sl.StandUtility.getArmorstandFromLocation(extLoc)) != null) { event.setCancelled(true); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4838/buggy-version/src.main.java.org.bitbucket.ucchy.sl.StandLockListener.java", "BodyUseAPI": [], "Fixed commit": "f39e591bcdafa6134ae9361df81f1251cf7f3f47", "Url": "https://api.github.com/repos/ucchyocean/StandLock", "Date": "2015-12-12T08:18:00Z"},
{"Line": "=>595", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mLIMEPref.getSmartChineseInput()) && (net.toload.main.hd.SearchServer.abandonPhraseSuggestion)) && ((code.length()) == 1)) { clearRunTimeSuggestion(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6951/buggy-version/LimeStudio.app.src.main.java.net.toload.main.hd.SearchServer.java", "BodyUseAPI": [], "Fixed commit": "d008c6688ac19d978439fa4312269ca8dd5e637a", "Url": "https://api.github.com/repos/lime-ime/limeime", "Date": "2015-07-16T12:54:29Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Timesheet.getCallback()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (callback != 0) { timeAndHalfNotApplicable += java.lang.Math.max(FOUR_HOURS, callback); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2968/buggy-version/src.Timesheet.java", "BodyUseAPI": ["java.lang.Math.max(long,long)"], "Fixed commit": "65fc6ba1a5cddcaad38305ddc7fb2fc937143ed6", "Url": "https://api.github.com/repos/devdebonair/acme", "Date": "2017-05-03T05:26:09Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ruleMetas == null) || ((ruleMetas.size()) == 0)) { net.paoding.rose.jade.shard.datasource.SpringShardBeanFactoryProcessor.log.info(\"no rule exist\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8694/buggy-version/src.main.java.net.paoding.rose.jade.shard.datasource.SpringShardBeanFactoryProcessor.java", "BodyUseAPI": [], "Fixed commit": "0668c749148cac706e2c125532f4322da2a1dabe", "Url": "https://api.github.com/repos/karvin/rose-jade-shard-plugin", "Date": "2016-02-01T10:16:26Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["painpoint.decoration.PainPointPresentation.getThumbsDownList()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (painPoints == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4596/buggy-version/src.painpoint.decoration.PainPointPresentation.java", "BodyUseAPI": [], "Fixed commit": "258e7280e4fa67e8c81a7f1f19f0c355ff83cc2b", "Url": "https://api.github.com/repos/RoboPlugins/PainPoints", "Date": "2016-03-29T18:46:15Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mPainPoints) != null) && (mPainPoints.isEmpty())) { java.util.List<painpoint.domain.painpoint.model.PainPoint> thumbsDown = new java.util.ArrayList<painpoint.domain.painpoint.model.PainPoint>(); for (painpoint.domain.painpoint.model.PainPoint painPoint : mPainPoints) { if (painPoint.isThumbsDown()) { thumbsDown.add(painPoint); } } return thumbsDown; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4596/buggy-version/src.painpoint.decoration.PainPointPresentation.java", "BodyUseAPI": [], "Fixed commit": "258e7280e4fa67e8c81a7f1f19f0c355ff83cc2b", "Url": "https://api.github.com/repos/RoboPlugins/PainPoints", "Date": "2016-03-29T18:46:15Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (trieConfig.isCaseInsensitive()) { character = java.lang.Character.toLowerCase(character); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1702/buggy-version/src.main.java.org.ahocorasick.trie.Trie.java", "BodyUseAPI": [], "Fixed commit": "e8b5be049773e1ed32185ef3fb4e59b63dd80536", "Url": "https://api.github.com/repos/jerryye/aho-corasick", "Date": "2014-08-26T07:50:15Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (metadata == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2011/buggy-version/src.main.java.org.literacybridge.dcp.handlers.DropboxFileMoveHandler.java", "BodyUseAPI": [], "Fixed commit": "1a59fa671d8798d0df13cb0504301f0e633d9276", "Url": "https://api.github.com/repos/LiteracyBridge/DropboxChangeWatcher", "Date": "2015-05-23T00:25:24Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(sort_parts[1].isEmpty())) { com.scaleset.search.Sort.Direction direction = (\"asc\".equals(sort_parts[1])) ? Sort.Direction.Ascending : Sort.Direction.Descending; qb.sort(new com.scaleset.search.Sort(field, direction)); }else { qb.sort(sort_parts[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3113/buggy-version/src.main.java.com.scaleset.search.SolrParamsParser.java", "BodyUseAPI": ["com.scaleset.search.QueryBuilder.sort(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "f893bf0f73c3e24a5f174d97bf77eb54323d3d39", "Url": "https://api.github.com/repos/owms/scaleset-search", "Date": "2014-09-05T18:40:45Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((cursorImage != null) && (cursorLoc != null)) { repaint(new java.awt.Rectangle(cursorLoc.x, cursorLoc.y, cursorImage.getWidth(), cursorImage.getHeight()), false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/877/buggy-version/projects.base.src.main.java.org.muis.base.widget.TextField.java", "BodyUseAPI": ["org.muis.base.widget.TextField.repaint(java.awt.Rectangle,boolean)", "java.awt.image.BufferedImage.getHeight()", "java.awt.image.BufferedImage.getWidth()"], "Fixed commit": "24d1c76ce6551fd61431c5668c68cbd46f0fb698", "Url": "https://api.github.com/repos/Updownquark/MUIS", "Date": "2014-02-27T05:26:25Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ctx.npcs.nearest().poll()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(nearestNpc.interact(\"Dismiss\"))) nearestNpc.interact(\"Attack\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3136/buggy-version/oldschool.scripts.NoobCrabs.Tasks.Attack.java", "BodyUseAPI": ["org.powerbot.script.rt4.Npc.interact(java.lang.String)"], "Fixed commit": "96ce29fbfe4cb9552b938a9e22131736c7c90620", "Url": "https://api.github.com/repos/sippylabs/NoobScripts", "Date": "2015-10-18T14:38:33Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tmp_width < 0) || (tmp_height < 0)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1504/buggy-version/SimpleFileExplorer.src.com.simplefileexplorer.SimpleButtonAdapter.java", "BodyUseAPI": [], "Fixed commit": "e498009d251a798264f1a20e38973b0e8e3de05f", "Url": "https://api.github.com/repos/yeyu456/Android", "Date": "2014-07-10T03:43:33Z"},
{"Line": "=>1331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((elapsedTime / 1000) > (batchRunTime)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5456/buggy-version/plugins.plugins.XactThrashingScenario.java", "BodyUseAPI": [], "Fixed commit": "98cbcf7e6fa2ebe540bf816c2f12e355fac6e39e", "Url": "https://api.github.com/repos/yksuh/thrashing_study", "Date": "2014-10-21T16:04:47Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.list()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (strs == null) return new r48.schema.specialized.UILabel(\"The folder does not exist or was not accessible.\", r48.FontSizes.schemaButtonTextHeight);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3822/buggy-version/src.main.java.r48.schema.specialized.FileSelectorSchemaElement.java", "BodyUseAPI": [], "Fixed commit": "20dfa126594f2aa457673f819cc7aae07721c1c1", "Url": "https://api.github.com/repos/20kdc/gabien-app-r48", "Date": "2017-06-15T18:48:17Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (ticketElement.has(\"invalid\")) { boolean invalid = \"1\".equals(ticketElement.getString(\"invalid\")); info.setInvalid(invalid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3879/buggy-version/flickrj-android.src.main.java.com.gmail.yuyang226.flickr.photos.upload.UploadInterface.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)", "java.lang.String.equals(ticketElement.getString(\"invalid\"))"], "Fixed commit": "1822020407cf7f336bd815b4277e0cda324388f9", "Url": "https://api.github.com/repos/yuyang226/FlickrjApi4Android", "Date": "2012-04-21T06:34:28Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((files != null) && ((files.length) > 0)) { for (java.io.File f : files) { if ((f.getName().contains(\"Report-\")) && (f.getName().contains(\"pdf\"))) { arrayAdapter.add(f.getName()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/247/buggy-version/app.src.main.java.com.unibo.koci.moneytracking.Activities.ReportActivity.java", "BodyUseAPI": [], "Fixed commit": "9aad4168cb8a85e27196f13f7afa79048f517b4c", "Url": "https://api.github.com/repos/alewin/moneytracking", "Date": "2017-09-01T15:28:45Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((r.nextInt(2)) == 0) { z = posZ; }else { z = negZ; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2452/buggy-version/teleblock.src.main.java.io.github.dreadedfall.teleblock.TeleblockListener.java", "BodyUseAPI": [], "Fixed commit": "c4d26fb68141578f542ca7b72a313aad2563e943", "Url": "https://api.github.com/repos/DreadedFall/TeleBlock", "Date": "2016-05-21T18:28:32Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((r.nextInt(2)) == 0) { x = posX; }else { x = negX; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2452/buggy-version/teleblock.src.main.java.io.github.dreadedfall.teleblock.TeleblockListener.java", "BodyUseAPI": [], "Fixed commit": "c4d26fb68141578f542ca7b72a313aad2563e943", "Url": "https://api.github.com/repos/DreadedFall/TeleBlock", "Date": "2016-05-21T18:28:32Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["message.getJSONObject(\"from\").getInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(conversations_by_user.containsKey(from_id))) registerBot(from_id, chat_id); else notifyBot(from_id, message);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/141/buggy-version/src.main.java.org.ebutler.telegram_bot.ConversationManager.java", "BodyUseAPI": ["org.ebutler.telegram_bot.ConversationManager.1.notifyBot(java.lang.Integer,org.json.JSONObject)", "org.ebutler.telegram_bot.ConversationManager.1.registerBot(java.lang.Integer,java.lang.Integer)"], "Fixed commit": "809b2681d8cb681c50741775bbc8ca78b5cee8b5", "Url": "https://api.github.com/repos/setzer22/e-butler", "Date": "2015-12-19T12:05:00Z"},
{"Line": "=>645", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((preloadedSQLiteDb.getVersion()) == (database.getVersion())) android.util.Log.i(com.bingzer.android.dbv.sqlite.Database.TAG, \"Same version. Do nothing\"); else if ((preloadedSQLiteDb.getVersion()) < (database.getVersion())) onUpgrade(preloadedSQLiteDb, preloadedSQLiteDb.getVersion(), database.getVersion()); else onDowngrade(preloadedSQLiteDb, preloadedSQLiteDb.getVersion(), database.getVersion());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3274/buggy-version/Library.src.main.java.com.bingzer.android.dbv.sqlite.Database.java", "BodyUseAPI": [], "Fixed commit": "a20c034e36c0328b98a0f079c8caf941cb463fe7", "Url": "https://api.github.com/repos/bingzer/DbQuery", "Date": "2013-11-30T01:02:22Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(socketGemsYAML.isConfigurationSection(\"socket-gems\"))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5182/buggy-version/MythicDrops-Sockets.src.main.java.net.nunnerycode.bukkit.mythicdrops.sockets.MythicDropsSockets.java", "BodyUseAPI": [], "Fixed commit": "449417de4e68022235918be63140a0d0de3996c4", "Url": "https://api.github.com/repos/Nunnery/MythicDrops", "Date": "2013-12-24T03:01:22Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasToken())) { throw new java.util.NoSuchElementException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4940/buggy-version/src.main.java.org.owasp.html.CssTokens.java", "BodyUseAPI": [], "Fixed commit": "fba8efd88c7317259145519ffbc6d79d633919d5", "Url": "https://api.github.com/repos/OWASP/java-html-sanitizer", "Date": "2015-10-08T17:56:09Z"},
{"Line": "=>812", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sceneId) == (Constants.sceneDirections)) { goToSceneDirections(findViewById(R.id.card_directions)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8302/buggy-version/app.src.main.java.brightseer.com.brewhaha.RecipeCardsActivity.java", "BodyUseAPI": [], "Fixed commit": "7e3adab08588e556a6bb6ff70829407897a5c00e", "Url": "https://api.github.com/repos/mikemcculloch/BrewHaHa_", "Date": "2016-05-17T07:11:04Z"},
{"Line": "=>815", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sceneId) == (Constants.sceneImages)) { goToSceneImages(findViewById(R.id.card_images)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8302/buggy-version/app.src.main.java.brightseer.com.brewhaha.RecipeCardsActivity.java", "BodyUseAPI": [], "Fixed commit": "7e3adab08588e556a6bb6ff70829407897a5c00e", "Url": "https://api.github.com/repos/mikemcculloch/BrewHaHa_", "Date": "2016-05-17T07:11:04Z"},
{"Line": "=>809", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sceneId) == (Constants.sceneIngredients)) { goToSceneIngredients(findViewById(R.id.card_ingredients)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8302/buggy-version/app.src.main.java.brightseer.com.brewhaha.RecipeCardsActivity.java", "BodyUseAPI": [], "Fixed commit": "7e3adab08588e556a6bb6ff70829407897a5c00e", "Url": "https://api.github.com/repos/mikemcculloch/BrewHaHa_", "Date": "2016-05-17T07:11:04Z"},
{"Line": "=>806", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sceneId) == (Constants.sceneOverview)) { goToSceneOverView(findViewById(R.id.card_overview), true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8302/buggy-version/app.src.main.java.brightseer.com.brewhaha.RecipeCardsActivity.java", "BodyUseAPI": [], "Fixed commit": "7e3adab08588e556a6bb6ff70829407897a5c00e", "Url": "https://api.github.com/repos/mikemcculloch/BrewHaHa_", "Date": "2016-05-17T07:11:04Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((iCompleteSutdy) != null) { iCompleteSutdy.close(); }else { if ((getActivity()) != null) { getActivity().finish(); getActivity().setResult(LazzyBeeShare.CODE_COMPLETE_STUDY_1000, new android.content.Intent()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6595/buggy-version/app.src.main.java.com.born2go.lazzybee.view.dialog.DialogCompleteStudy.java", "BodyUseAPI": [], "Fixed commit": "7d16adfdb7f3126822d930a71bb46f7ee28c9e36", "Url": "https://api.github.com/repos/hue1992/LazyBee-Android", "Date": "2016-10-11T03:24:13Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((text.endsWith(com.simplifyops.toolbelt.NiceFormatter.NL)) && (!(isTruncateFinalNewline()))) { sb.append(com.simplifyops.toolbelt.NiceFormatter.NL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1920/buggy-version/toolbelt.src.main.java.com.simplifyops.toolbelt.PrefixFormatter.java", "BodyUseAPI": [], "Fixed commit": "36622824526629bb27a95b89e20011c9ef25fd7e", "Url": "https://api.github.com/repos/rundeck/cli-toolbelt", "Date": "2017-02-02T20:16:21Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.netty.buffer.ChannelBuffer.readUnsignedShort()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (command == (org.traccar.protocol.MeiligaoProtocolDecoder.MSG_RFID)) { pattern = org.traccar.protocol.MeiligaoProtocolDecoder.PATTERN_RFID; }else { pattern = org.traccar.protocol.MeiligaoProtocolDecoder.PATTERN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2463/buggy-version/src.org.traccar.protocol.MeiligaoProtocolDecoder.java", "BodyUseAPI": [], "Fixed commit": "74c93c7cef8fe3ef53ba17b3c9da7b374003d042", "Url": "https://api.github.com/repos/traccar/traccar", "Date": "2015-10-13T00:17:35Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useDatabase) { super.bindGraph(); }else { bind(com.tinkerpop.blueprints.Graph.class).to(com.tinkerpop.blueprints.impls.tg.TinkerGraph.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5033/buggy-version/timbuctoo-tools.src.main.java.nl.knaw.huygens.timbuctoo.tools.config.ToolsInjectionModule.java", "BodyUseAPI": [], "Fixed commit": "4742c76850778bf8d3893a4b3ea86dbbf8f5956b", "Url": "https://api.github.com/repos/HuygensING/timbuctoo", "Date": "2015-12-03T08:16:35Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((x >= 0) && (x < (com.monkeymusicchallenge.warmup.GraphBuilder.rows))) && (y >= 0)) && (y < (com.monkeymusicchallenge.warmup.GraphBuilder.cols))) { return (x * (com.monkeymusicchallenge.warmup.GraphBuilder.cols)) + y; }else { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2314/buggy-version/src.main.java.com.monkeymusicchallenge.warmup.GraphBuilder.java", "BodyUseAPI": [], "Fixed commit": "cf251776fe20bc8f9d139ceba59e85f6dea64079", "Url": "https://api.github.com/repos/izimbra/java-starter-kit", "Date": "2014-11-04T08:56:05Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getSize()) == 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8718/buggy-version/src.org.ljrobotics.lib.util.MovingAverage.java", "BodyUseAPI": [], "Fixed commit": "367cd8391ddb8e2ccd38b4e6f70cb15c946188d1", "Url": "https://api.github.com/repos/Pumuckl007/PowerUp2018", "Date": "2017-12-19T02:34:23Z"},
{"Line": "=>701", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lwansbrough.RCTCamera.RCTCameraModule.writeDataToFile(byte[],java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (error != null) { promise.reject(\"failed to save image file\", error); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6882/buggy-version/android.src.main.java.com.lwansbrough.RCTCamera.RCTCameraModule.java", "BodyUseAPI": ["com.facebook.react.bridge.Promise.reject(java.lang.String,java.lang.Throwable)"], "Fixed commit": "ff6e63f96a1243e60d42ecda7b050e1e69a85ea3", "Url": "https://api.github.com/repos/MantaCodeDevs/react-native-camera", "Date": "2017-06-08T20:08:30Z"},
{"Line": "=>551", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.query(FileDatabaseContract.FileDatabase.TABLE_NAME,java.lang.String[],java.lang.String,java.lang.String[],<nulltype>,<nulltype>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(c1.isAfterLast())) { fileID = c1.getInt(c1.getColumnIndexOrThrow(FileDatabaseContract.FileDatabase._ID)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5794/buggy-version/app.src.main.java.com.snippet.snippet.controller.DatabaseUtils.java", "BodyUseAPI": ["android.database.Cursor.getColumnIndexOrThrow(FileDatabaseContract.FileDatabase._ID)", "android.database.Cursor.getInt(c1.getColumnIndexOrThrow(FileDatabaseContract.FileDatabase._ID))"], "Fixed commit": "f6f369a1cf4da2ab140935b73e7919ae8de5ab2b", "Url": "https://api.github.com/repos/Kdcarrero/Snippet", "Date": "2016-12-09T02:04:19Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (stringStringEntry.getKey().matches(\"<.*>\")) s = s.replaceAll(stringStringEntry.getKey(), value);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/851/buggy-version/Core.src.main.java.net.cogzmc.core.modular.Formatter.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()"], "Fixed commit": "eb910d15be0b78cb4cd8400058a1b0d99ce341a9", "Url": "https://api.github.com/repos/Twister915/Core", "Date": "2015-05-03T21:20:37Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kartoflane.superluminal2.core.SuperluminalConfig.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (s == null) return defaultValue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3792/buggy-version/src.java.com.kartoflane.superluminal2.core.SuperluminalConfig.java", "BodyUseAPI": [], "Fixed commit": "7b6d41bb8a3172ad279fe7433175c7e9267c6215", "Url": "https://api.github.com/repos/kartoFlane/superluminal2", "Date": "2014-10-10T22:06:38Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.umn.cs.spatialHadoop.OperationsParams.getPaths()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((paths.length) <= 1) && (!(params.checkInput()))) { edu.umn.cs.sthadoop.operations.STHash.printUsage(); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8649/buggy-version/src.main.java.edu.umn.cs.sthadoop.operations.STHash.java", "BodyUseAPI": [], "Fixed commit": "d88482db8185e2647b18e20fff4f8ebdd2d49980", "Url": "https://api.github.com/repos/lmarabi/st-hadoop", "Date": "2017-04-10T21:40:03Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.pageCount) == 0) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8200/buggy-version/src.beans.Paginator.java", "BodyUseAPI": [], "Fixed commit": "f6a258e354631e22de25eac791709eacb88ced0e", "Url": "https://api.github.com/repos/davidknezic/JSF-Forum", "Date": "2011-06-13T11:36:13Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((distributionManager) != null) { distributionManager.setReplicationDegree(configurationState.getNumberOfOwners()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1631/buggy-version/core.src.main.java.org.infinispan.statetransfer.BaseStateTransferManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "4c54743601267d5196e5c9fa2dd15173f66c595a", "Url": "https://api.github.com/repos/pruivo/infinispan", "Date": "2013-01-11T15:58:39Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (de.cismet.cids.custom.wunda.oab.OabUtilities.log.isDebugEnabled()) { de.cismet.cids.custom.wunda.oab.OabUtilities.log.debug(((((\"no collection found: [sourceBean=\" + sourceBean) + \"|prop=\") + collectionProperty) + \"]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3610/buggy-version/src.main.java.de.cismet.cids.custom.wunda.oab.OabUtilities.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug(((((\"no collection found: [sourceBean=\" + sourceBean) + \"|prop=\") + collectionProperty) + \"]\"))"], "Fixed commit": "0e1568473c0f312070b19fd1866046f06d9fe6b8", "Url": "https://api.github.com/repos/cismet/cids-custom-wuppertal", "Date": "2015-07-16T12:15:51Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((x < 0) || (y < 0)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7916/buggy-version/src.cpsc599.assets.Level.java", "BodyUseAPI": [], "Fixed commit": "0a67d6b50d349ec7d4d249b229d998777c0d71dc", "Url": "https://api.github.com/repos/Senney/CPSC599-RPG", "Date": "2014-04-01T23:11:56Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((x > (tile_bounds.x)) || (y > (tile_bounds.y))) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7916/buggy-version/src.cpsc599.assets.Level.java", "BodyUseAPI": [], "Fixed commit": "0a67d6b50d349ec7d4d249b229d998777c0d71dc", "Url": "https://api.github.com/repos/Senney/CPSC599-RPG", "Date": "2014-04-01T23:11:56Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((dcline3 != null) && (signUtils.isDelayedSign(dcline3))) scheduler.startSchedule(signUtils.getSignFromChest(dc), signUtils.getPeriod(dcline3));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2396/buggy-version/src.org.xcp23x.restockit.listeners.java", "BodyUseAPI": ["org.xcp23x.restockit.listeners.getPeriod(java.lang.String)", "org.xcp23x.restockit.listeners.startSchedule(signUtils.getSignFromChest(dc),signUtils.getPeriod(dcline3))", "org.xcp23x.restockit.listeners.getSignFromChest(org.bukkit.block.Block)"], "Fixed commit": "0cb7c335e32bd4b4d93333846d9e6ab6b335f21d", "Url": "https://api.github.com/repos/xCP23x/RestockIt", "Date": "2012-06-11T16:18:50Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedChatThreadInfo) != null) { view.updateSidePanel(newUnreadChatThreadTOs, selectedChatThreadInfo.getChatThreadUUID(), session.getCurrentUser().getPerson().getFullName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5513/buggy-version/kornell-gwt.src.main.java.kornell.gui.client.presentation.message.MessagePresenter.java", "BodyUseAPI": [], "Fixed commit": "441b1236d5b7bf90aa7d8eafc43f24cd99e55c44", "Url": "https://api.github.com/repos/Craftware/Kornell", "Date": "2016-12-06T04:00:22Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(tn.getUuid().equals(getUuid()))) { tn.setProperty(key, value); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2671/buggy-version/structr-ui.src.main.java.org.structr.web.entity.Image.java", "BodyUseAPI": ["org.structr.web.entity.Image.setProperty(org.structr.core.property.PropertyKey,java.lang.Object)"], "Fixed commit": "66fd9663083558cd4168fafba98452edd7ec8817", "Url": "https://api.github.com/repos/structr/structr", "Date": "2017-08-22T07:29:06Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(tn.getUuid().equals(getUuid()))) { tn.setProperties(tn.getSecurityContext(), propertiesCopiedToAllThumbnails); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2671/buggy-version/structr-ui.src.main.java.org.structr.web.entity.Image.java", "BodyUseAPI": ["org.structr.web.entity.Image.setProperties(tn.getSecurityContext(),org.structr.core.property.PropertyMap)", "org.structr.web.entity.Image.getSecurityContext()"], "Fixed commit": "66fd9663083558cd4168fafba98452edd7ec8817", "Url": "https://api.github.com/repos/structr/structr", "Date": "2017-08-22T07:29:06Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["InteractBlockEvent.Secondary.getTargetBlock()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(snapshot.getLocation().isPresent())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/797/buggy-version/src.main.java.com.skelril.skree.content.zone.group.goldrush.GoldRushListener.java", "BodyUseAPI": [], "Fixed commit": "6a329e81026605bef3d63fa70c5723b63037b1e8", "Url": "https://api.github.com/repos/Skelril/Skree", "Date": "2016-04-27T02:20:46Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dataLoaded) != null) { dataLoaded.accept(\"data loaded\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/601/buggy-version/app.src.main.java.ie.wit.application.service.data.UserDataService.java", "BodyUseAPI": [], "Fixed commit": "c49f000ba2c5dc10bf49c9fd525a7cb5ce179130", "Url": "https://api.github.com/repos/JavaTheNutt/Semester06_Assignment", "Date": "2017-04-09T23:09:39Z"},
{"Line": "=>665", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.entirej.framework.core.data.controllers.EJEditableBlockController.getScreenItem(EJScreenType.MAIN,itemProps.getReferencedItemName())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((item.getProperties().getVisualAttributeProperties()) != null) { renderer.setVisualAttribute(item.getProperties().getVisualAttributeProperties()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5662/buggy-version/entirej-fx.src.org.entirej.applicationframework.fx.renderers.blocks.EJFXSingleRecordBlockRenderer.java", "BodyUseAPI": ["item.getProperties().getVisualAttributeProperties()", "org.entirej.framework.core.interfaces.EJScreenItemController.getProperties()", "org.entirej.framework.core.renderers.EJManagedItemRendererWrapper.setVisualAttribute(item.getProperties().getVisualAttributeProperties())"], "Fixed commit": "10eb0a5c6a58cd9e7375cd69e5f3f653346c5ced", "Url": "https://api.github.com/repos/entirej/javafx", "Date": "2015-08-24T13:54:47Z"},
{"Line": "=>1330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.entirej.framework.core.data.controllers.EJEditableBlockController.getScreenItem(EJScreenType.MAIN,itemProps.getReferencedItemName())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((item.getProperties().getVisualAttributeProperties()) != null) { renderer.setVisualAttribute(item.getProperties().getVisualAttributeProperties()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5662/buggy-version/entirej-fx.src.org.entirej.applicationframework.fx.renderers.blocks.EJFXTreeTableRecordBlockRenderer.java", "BodyUseAPI": ["org.entirej.framework.core.renderers.EJManagedItemRendererWrapper.setVisualAttribute(item.getProperties().getVisualAttributeProperties())", "item.getProperties().getVisualAttributeProperties()", "org.entirej.framework.core.interfaces.EJScreenItemController.getProperties()"], "Fixed commit": "10eb0a5c6a58cd9e7375cd69e5f3f653346c5ced", "Url": "https://api.github.com/repos/entirej/javafx", "Date": "2015-08-24T13:54:47Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.entirej.framework.core.internal.EJInternalBlock.getScreenItem(org.entirej.framework.core.enumerations.EJScreenType,itemProps.getReferencedItemName())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((item.getProperties().getVisualAttributeProperties()) != null) { renderer.setVisualAttribute(item.getProperties().getVisualAttributeProperties()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5662/buggy-version/entirej-fx.src.org.entirej.applicationframework.fx.renderers.screen.EJFXAbstractScreenRenderer.java", "BodyUseAPI": ["item.getProperties().getVisualAttributeProperties()", "org.entirej.framework.core.interfaces.EJScreenItemController.getProperties()", "org.entirej.framework.core.renderers.EJManagedItemRendererWrapper.setVisualAttribute(item.getProperties().getVisualAttributeProperties())"], "Fixed commit": "10eb0a5c6a58cd9e7375cd69e5f3f653346c5ced", "Url": "https://api.github.com/repos/entirej/javafx", "Date": "2015-08-24T13:54:47Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(message.contains(tokenEntry.getKey()))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8050/buggy-version/src.uk.co.codefoo.bukkit.saywhat.GameVariableToken.TokenExpanders.java", "BodyUseAPI": [], "Fixed commit": "ee701fbc345ea16273f04b3314a4955a4c86885d", "Url": "https://api.github.com/repos/CodeFooGames/SayWhat", "Date": "2013-05-18T21:16:14Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hea3ven.tweaks.bootstrap.Bootstrap.getLibsDir()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (libsDir == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5917/buggy-version/Bootstrap.java", "BodyUseAPI": [], "Fixed commit": "075143e567632932376425167a9f4041a9e3dc60", "Url": "https://api.github.com/repos/hea3ven/bootstrap", "Date": "2015-08-29T02:28:12Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.security.CodeSource.getLocation()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(jarUrl.getProtocol().equals(\"jar\"))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5917/buggy-version/Bootstrap.java", "BodyUseAPI": [], "Fixed commit": "075143e567632932376425167a9f4041a9e3dc60", "Url": "https://api.github.com/repos/hea3ven/bootstrap", "Date": "2015-08-29T02:28:12Z"},
{"Line": "=>531", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sort.contains(\"pValue\")) { java.lang.String dir = sort.substring(((sort.length()) - 4)); java.lang.String pvalsort = \"pValueExponent\".concat(dir).concat(\"%2C+pValueMantissa\").concat(dir); solrSearchBuilder.append(\"&sort=\").append(pvalsort); }else { solrSearchBuilder.append(\"&sort=\").append(sort); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8290/buggy-version/goci-interfaces.goci-ui.src.main.java.uk.ac.ebi.spot.goci.ui.controller.SolrSearchController.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.length()"], "Fixed commit": "902bf0aaac0dbb8a055c645535454fa1eaa4298e", "Url": "https://api.github.com/repos/EBISPOT/goci", "Date": "2015-03-30T10:28:13Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e == null) { io.takari.bpm.state.BpmnErrorHelper.log.warn(\"raiseError ['{}'] -> empty error reference will be replaced with a default value\", errorRef); e = io.takari.bpm.state.BpmnErrorHelper.DEFAULT_ERROR_REF; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7165/buggy-version/bpm-engine-impl.src.main.java.io.takari.bpm.state.BpmnErrorHelper.java", "BodyUseAPI": [], "Fixed commit": "7aa79d2cc446799fe30fe624a0c1f73bf1450e0e", "Url": "https://api.github.com/repos/takari/bpm", "Date": "2016-08-10T02:30:14Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ch == '=') token.setAll(Token.TokenType.EQ, lexeme); else new edu.uci.ccai6.cs241.Reporter(Reporter.ReportType.ERROR, fileName(), lineNum(), charPos(), (\"Unexpected character: \" + lexeme));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8168/buggy-version/src.edu.uci.ccai6.cs241.Lexer.java", "BodyUseAPI": [], "Fixed commit": "639855a1f6d57dae78a06d9e0bf4c1311bf8bbf3", "Url": "https://api.github.com/repos/frankgt40/CS241", "Date": "2016-01-28T18:09:36Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (year < 0) { result = output1990Data.get(findCountryObject(countryID).obj.getISO()); }else { java.util.Map<java.lang.Integer, java.lang.Double> reports = reportingService.getReport(countryID); int simTime = (timeService.getTicksInYear()) * (year + 1); result = reports.get(simTime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8997/buggy-version/kyoto.src.main.java.uk.ac.ic.kyoto.countries.CarbonTarget.java", "BodyUseAPI": [], "Fixed commit": "32878288795561019775d0ee9bbd05a5cf125a31", "Url": "https://api.github.com/repos/farhanrahman/kyoto", "Date": "2012-06-16T15:07:47Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getItems()) != null) && ((getItems().size()) > 0)) { optionString = optionString.substring(0, optionString.lastIndexOf(\",\")); totalString = totalString.substring(0, totalString.lastIndexOf(\",\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2734/buggy-version/src.com.otis.marketing.entity.Statistic.java", "BodyUseAPI": [], "Fixed commit": "e0b4905a4f99497d38ac1c0e12831c679e406d08", "Url": "https://api.github.com/repos/liyinsong/otismarketing", "Date": "2015-03-08T04:01:00Z"},
{"Line": "=>894", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getConfig().getBoolean(\"config.teams\")) { otp.getInventory().setHelmet(null); otp.updateInventory(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2527/buggy-version/src.com.comze_instancelabs.boatgame.Main.java", "BodyUseAPI": [], "Fixed commit": "d151b5c39768d4f0927760e5e9826ab9af21c7fe", "Url": "https://api.github.com/repos/instance01/boatgame", "Date": "2013-09-21T23:47:19Z"},
{"Line": "=>832", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getConfig().getBoolean(\"config.teams\")) { p.getInventory().setHelmet(null); p.updateInventory(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2527/buggy-version/src.com.comze_instancelabs.boatgame.Main.java", "BodyUseAPI": [], "Fixed commit": "d151b5c39768d4f0927760e5e9826ab9af21c7fe", "Url": "https://api.github.com/repos/instance01/boatgame", "Date": "2013-09-21T23:47:19Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ExecutionState.FAILED.equals(job.getState())) || (ExecutionState.FINISHED.equals(job.getState()))) { job.setRequest(null); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8308/buggy-version/src.br.edu.ufcg.lsd.oursim.events.broker.ScheduleEvent.java", "BodyUseAPI": ["br.edu.ufcg.lsd.oursim.entities.job.Job.setRequest(<nulltype>)"], "Fixed commit": "fdf8142e890526dd19c9418c247f8c16128f1ba0", "Url": "https://api.github.com/repos/abmargb/oursim-ext", "Date": "2011-05-12T06:30:12Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((myParentFSM.myCitizenAgent.best_offer.size()) > 0) this.myParentFSM.myCitizenAgent.logger.info(\"!!! Best Offer Pool > 0 {}\", myParentFSM.myCitizenAgent.getLocalName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8891/buggy-version/mas-carpooling-appl.src.main.java.dreamteam.carpooling.appl.DriverBehaviours.FindBestOfferBehaviour.java", "BodyUseAPI": ["this.myParentFSM.myCitizenAgent.logger.info(java.lang.String,myParentFSM.myCitizenAgent.getLocalName())", "myParentFSM.myCitizenAgent.getLocalName()"], "Fixed commit": "cb0900695e1a5ea91834183fb7e139fb958c9e17", "Url": "https://api.github.com/repos/nshindarev/MAS_Carpooling", "Date": "2017-04-24T10:38:00Z"},
{"Line": "=>1737", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (0 == (reputFromOffset)) { reputFromOffset = result.getStartOffset(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3865/buggy-version/rocketmq-store.src.main.java.com.alibaba.rocketmq.store.DefaultMessageStore.java", "BodyUseAPI": [], "Fixed commit": "075299edbc7ab08994c1f74f8c5f6544087774aa", "Url": "https://api.github.com/repos/401610239/RocketMQ", "Date": "2015-02-06T10:39:51Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (screenWidth <= 0) screenWidth = 1080;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3561/buggy-version/app.src.main.java.de.Maxr1998.xposed.maxlock.ui.lock.PinFragment.java", "BodyUseAPI": [], "Fixed commit": "41a82897808febfd55eccc1d220073dfce6756b4", "Url": "https://api.github.com/repos/Maxr1998/MaxLock", "Date": "2014-11-23T16:24:34Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (screenHeight <= 0) screenHeight = 1920;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3561/buggy-version/app.src.main.java.de.Maxr1998.xposed.maxlock.ui.lock.PinFragment.java", "BodyUseAPI": [], "Fixed commit": "41a82897808febfd55eccc1d220073dfce6756b4", "Url": "https://api.github.com/repos/Maxr1998/MaxLock", "Date": "2014-11-23T16:24:34Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (screenWidth <= 0) screenWidth = 1080;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3561/buggy-version/app.src.main.java.de.Maxr1998.xposed.maxlock.ui.lock.KnockCodeFragment.java", "BodyUseAPI": [], "Fixed commit": "41a82897808febfd55eccc1d220073dfce6756b4", "Url": "https://api.github.com/repos/Maxr1998/MaxLock", "Date": "2014-11-23T16:24:34Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (screenHeight <= 0) screenHeight = 1920;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3561/buggy-version/app.src.main.java.de.Maxr1998.xposed.maxlock.ui.lock.KnockCodeFragment.java", "BodyUseAPI": [], "Fixed commit": "41a82897808febfd55eccc1d220073dfce6756b4", "Url": "https://api.github.com/repos/Maxr1998/MaxLock", "Date": "2014-11-23T16:24:34Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (callback != null) { cache.put(internalCall.getId(), callback); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6290/buggy-version/java.org.kevoree.library.java.hazelcast.src.main.java.org.kevoree.library.java.hazelcast.DistributedBroadcast.java", "BodyUseAPI": ["java.util.concurrent.ConcurrentHashMap<java.util.UUID, org.kevoree.library.java.hazelcast.Callback>.put(internalCall.getId(),org.kevoree.library.java.hazelcast.Callback)"], "Fixed commit": "26f2746162641855f7173763e8673b002820c00f", "Url": "https://api.github.com/repos/kevoree/kevoree-library", "Date": "2013-12-05T08:09:16Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(target.contains(\"#\"))) { target = target.replaceAll(\"[^a-zA-Z0-9]+\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4195/buggy-version/src.org.pircbotx.utilities.LoggingUtils.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "07d881e381bf997fd81a75c3008f97ccb902442d", "Url": "https://api.github.com/repos/Heufneutje/HeufyBot", "Date": "2013-09-27T10:12:51Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(source.contains(\"#\"))) { targetLog = source.replaceAll(\"[^a-zA-Z0-9]+\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4195/buggy-version/src.org.pircbotx.features.Log.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "07d881e381bf997fd81a75c3008f97ccb902442d", "Url": "https://api.github.com/repos/Heufneutje/HeufyBot", "Date": "2013-09-27T10:12:51Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((endPointsCount) > 0) { index %= endPointsCount; }else { index = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1295/buggy-version/carbon-gw-lb.components.org.wso2.carbon.gateway.httploadbalancer.src.main.java.org.wso2.carbon.gateway.httploadbalancer.algorithm.simple.RoundRobin.java", "BodyUseAPI": [], "Fixed commit": "ecdaa36e53cafc736c2b082211b1aff443aefd9b", "Url": "https://api.github.com/repos/Venkat2811/product-http-load-balancer", "Date": "2016-06-11T18:14:20Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (endRequest != null) { throw new java.lang.IllegalArgumentException(\"Never saw requested event\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/267/buggy-version/edu.ubc.mirrors.holographs.src.edu.ubc.mirrors.EventDispatch.java", "BodyUseAPI": [], "Fixed commit": "1661faa8702e3c1740f9f5565434fe906f1294be", "Url": "https://api.github.com/repos/robinsalkeld/retrospect", "Date": "2015-06-17T05:00:33Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (drone.state.isFlying()) { onDroneEvent(DroneEventsType.STATE, drone); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3978/buggy-version/Android.src.org.droidplanner.android.fragments.TelemetryFragment.java", "BodyUseAPI": ["org.droidplanner.android.fragments.TelemetryFragment.onDroneEvent(DroneEventsType.STATE,org.droidplanner.core.drone.Drone)"], "Fixed commit": "7fa9aef3340cd53373a6f882cad0261d889aab34", "Url": "https://api.github.com/repos/ne0fhyk/droidplanner", "Date": "2014-06-01T01:38:34Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSelectionAST()) != null) { result.add(getSelectionAST()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/873/buggy-version/org.strategoxt.imp.runtime.src.org.strategoxt.imp.runtime.editor.StrategoTermSelection.java", "BodyUseAPI": [], "Fixed commit": "eeb8aa7040b808d908ee048a428dded5f84c00f4", "Url": "https://api.github.com/repos/dcharkes/spoofax", "Date": "2014-02-25T01:37:46Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fileName) == null) { error(\"You must save before compiling.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6373/buggy-version/robocode.ui.editor.src.main.java.net.sf.robocode.ui.editor.EditWindow.java", "BodyUseAPI": [], "Fixed commit": "056b2ea3a62351db99125021b58a59e633e65451", "Url": "https://api.github.com/repos/robo-code/robocode", "Date": "2013-07-16T12:06:11Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(creature.isVisible())) { onCreatureSelection(null, true); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/9122/buggy-version/core.src.de.dakror.vloxlands.layer.HudLayer.java", "BodyUseAPI": [], "Fixed commit": "54cad4d58fef7d012cea380aa092a0301dc6b438", "Url": "https://api.github.com/repos/Dakror/Vloxlands", "Date": "2014-08-02T20:05:59Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getInputURL()) != null) && (!(\"\".equals(getInputURL())))) { inputBuffer = inputServiceLocator.getFrameBufferImplPort(getInputURL()); }else inputBuffer = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2847/buggy-version/livestream.src.eduze.livestream.Multiplexer.java", "BodyUseAPI": [], "Fixed commit": "fcc55e86fe2884a64c8dd5ee2f514ea925b6d825", "Url": "https://api.github.com/repos/madhawav/livestream", "Date": "2016-05-21T11:46:57Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.tools.ant.types.Path.list()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((paths.length) == 0) { ret = true; }else { for (int i = 0; i < (paths.length); ++i) { if (targetNeedsGen(paths[i], spaths)) { ret = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7122/buggy-version/trunk.ant-contrib.src.java.net.sf.antcontrib.logic.OutOfDate.java", "BodyUseAPI": ["net.sf.antcontrib.logic.OutOfDate.targetNeedsGen(java.lang.String,java.lang.String[])"], "Fixed commit": "496604922121e5a2f7a3ff5704048dd04641752e", "Url": "https://api.github.com/repos/crazy-max/ant-contrib", "Date": "2006-08-16T03:22:15Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.tiles.preparer.ViewPreparer.class.isAssignableFrom(this.getClass())) { return org.apache.struts2.ServletActionContext.getRequest(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1784/buggy-version/hq-web.src.main.java.org.hyperic.hq.ui.action.BaseActionNG.java", "BodyUseAPI": [], "Fixed commit": "30cf2b18dfc2a27bb25244c66f67b4d0faa79e33", "Url": "https://api.github.com/repos/hyperic/hq", "Date": "2015-11-17T10:20:43Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.message) != (glc.getMessage())) { this.textAnimationState = 0; this.textCounter = 0; this.message = glc.getMessage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6584/buggy-version/src.control.AnimationController.java", "BodyUseAPI": ["control.GameLoopController.getMessage()"], "Fixed commit": "e510405fa03839cf7e14d160222d78405cd40e0a", "Url": "https://api.github.com/repos/Jjorss/EstuaryGame", "Date": "2016-12-07T00:16:45Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getCallingActivity().getClassName().equals(com.example.a100536625.finalproject.SingleDoctorView.class.getName())) { if (((firstName) != null) && ((lastName) != null)) { txtName.setText((((\"Dr.\" + (firstName)) + \" \") + (lastName))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2688/buggy-version/app.src.main.java.com.example.a100536625.finalproject.EditAppointmentActivity.java", "BodyUseAPI": [], "Fixed commit": "87d0064cc80f04731fce63d2441a8178667f3159", "Url": "https://api.github.com/repos/robertk217/sofe4640-final-project", "Date": "2017-12-12T05:41:57Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isCR(this.source.read())) && (isLF(this.source.peek()))) { result += 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6609/buggy-version/src.main.java.org.verapdf.parser.SignatureParser.java", "BodyUseAPI": [], "Fixed commit": "f7acbbcfa2ebd233b859e6eae6e5fb6ef0141e76", "Url": "https://api.github.com/repos/veraPDF/veraPDF-parser", "Date": "2017-04-27T08:43:13Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isLF(this.source.peek())) { result++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6609/buggy-version/src.main.java.org.verapdf.parser.SignatureParser.java", "BodyUseAPI": [], "Fixed commit": "f7acbbcfa2ebd233b859e6eae6e5fb6ef0141e76", "Url": "https://api.github.com/repos/veraPDF/veraPDF-parser", "Date": "2017-04-27T08:43:13Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["maednpackage.MAEDNSpieler.getFigurFortRaw(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (startZahl == 0) wurfZahl = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4975/buggy-version/MAEDN.src.maednpackage.MAEDNSpieler.java", "BodyUseAPI": [], "Fixed commit": "0346466a595396b3ad22f5da2deeee680b593de4", "Url": "https://api.github.com/repos/kuhjunge/MAEDN_Java", "Date": "2013-04-11T21:14:29Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (showProgress) { builder.setProgress(0, 1, true); }else { builder.setProgress(0, 0, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4640/buggy-version/app.src.main.java.jonas.tool.saveForOffline.SaveService.java", "BodyUseAPI": [], "Fixed commit": "e75432e05fdeb30ab380a83941112b0eda67476d", "Url": "https://api.github.com/repos/JonasCz/save-for-offline", "Date": "2015-11-12T19:39:16Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (requestedPageNumber.matches(\"\\\\d{1,9}\")) { parsedPageNumber = java.lang.Integer.valueOf(requestedPageNumber); }else if (requestedPageNumber.matches(\"\\\\d+\")) { parsedPageNumber = java.lang.Integer.MAX_VALUE; }else { parsedPageNumber = org.jtalks.jcommune.model.dto.PageRequest.FIRST_PAGE_NUMBER; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5562/buggy-version/jcommune-model.src.main.java.org.jtalks.jcommune.model.dto.PageRequest.java", "BodyUseAPI": [], "Fixed commit": "895d1f3d2eb37ad8522b1b912321a85f455d2ede", "Url": "https://api.github.com/repos/jtalks-org/jcommune", "Date": "2013-09-15T15:24:58Z"},
{"Line": "=>949", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pos == (segmentState.pos)) { hashLookup.putPosition(segmentState.pos); }else { assert hashLookup.getPositions().isSet(segmentState.pos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3523/buggy-version/src.main.java.net.openhft.chronicle.map.ReplicatedChronicleMap.java", "BodyUseAPI": ["net.openhft.chronicle.map.MultiMap.putPosition(segmentState.pos)", "hashLookup.getPositions().isSet(segmentState.pos)"], "Fixed commit": "cbb97077a287aa775f4e53c9c8f6c4cbbd5f5d97", "Url": "https://api.github.com/repos/OpenHFT/Chronicle-Map", "Date": "2014-12-30T04:19:03Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((entity.Attacker) (e)).getBasicAttack().range) < (processing.core.PApplet.dist(target.x, target.y, e.x, e.y))) { e.sendAnimation(((((\"walk \" + ((target.x) + ((((e.x) - (target.x)) / (processing.core.PApplet.dist(target.x, target.y, e.x, e.y))) * (((entity.Attacker) (e)).getBasicAttack().range)))) + \" \") + ((target.y) + ((((e.y) - (target.y)) / (processing.core.PApplet.dist(target.x, target.y, e.x, e.y))) * (((entity.Attacker) (e)).getBasicAttack().range)))) + \" true\")); }else { e.sendAnimation(\"stand\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3149/buggy-version/EliteEngine.src.entity.animation.Attack.java", "BodyUseAPI": ["entity.Entity.sendAnimation(java.lang.String)", "entity.Entity.sendAnimation(((((\"walk \" + ((target.x) + ((((e.x) - (target.x)) / (processing.core.PApplet.dist(target.x, target.y, e.x, e.y))) * (((entity.Attacker) (e)).getBasicAttack().range)))) + \" \") + ((target.y) + ((((e.y) - (target.y)) / (processing.core.PApplet.dist(target.x, target.y, e.x, e.y))) * (((entity.Attacker) (e)).getBasicAttack().range)))) + \" true\"))", "processing.core.PApplet.dist(target.x,target.y,e.x,e.y)", "entity.Entity.getBasicAttack()", "entity.Entity.getBasicAttack()", "processing.core.PApplet.dist(target.x,target.y,e.x,e.y)"], "Fixed commit": "435ad70096acec823f7e232da9ec53f88fe5c631", "Url": "https://api.github.com/repos/Silverjust/Elite-Engine", "Date": "2015-07-18T13:51:05Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (throwable instanceof org.exist.xquery.XPathException) { throw throwable; }else { org.exist.xquery.TryCatchExpression.LOG.error(throwable); throw new org.exist.xquery.XPathException(throwable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8659/buggy-version/src.org.exist.xquery.TryCatchExpression.java", "BodyUseAPI": ["org.apache.logging.log4j.Logger.error(java.lang.Throwable)"], "Fixed commit": "b8410d4a3974e7ee6b11072fa9c2e1318abc62f5", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2016-08-08T00:10:28Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (android.text.TextUtils.isEmpty(s)) { return \"\"; }else { java.lang.String convertedString = java.text.Normalizer.normalize(s, java.text.Normalizer.Form.NFD).replaceAll(\"[^\\\\p{ASCII}]\", \"\"); return convertedString; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2760/buggy-version/app.src.main.java.tedxperiments.math.entrenamente.PersonalQuestions.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.text.Normalizer.normalize(java.lang.String,java.text.Normalizer.Form)"], "Fixed commit": "3c8b06fb367528fb97c2f1fa7ebdbee0a3c8b5f5", "Url": "https://api.github.com/repos/FedeZimmer/MoravecAndroidStudio", "Date": "2017-04-19T09:48:01Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((int) (value)) > ((statisticDateMapData.get(vendorList.get(selectedVendorIdx).id).get(selectedDayIdx).size()) - 1)) { value = (statisticDateMapData.get(vendorList.get(selectedVendorIdx).id).get(selectedDayIdx).size()) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1638/buggy-version/app.src.main.java.com.project.ishoupbud.view.fragment.ProductStatisticFragment.java", "BodyUseAPI": ["java.util.List<com.project.ishoupbud.api.model.Vendor>.get(int)", "java.util.List<java.util.List<java.lang.String>>.get(int)", "statisticDateMapData.get(vendorList.get(selectedVendorIdx).id).get(selectedDayIdx).size()", "java.util.HashMap<java.lang.Integer, java.util.List<java.util.List<java.lang.String>>>.get(vendorList.get(selectedVendorIdx).id)"], "Fixed commit": "c761691ab0c7bf6768142cb76454b5f1ac5344de", "Url": "https://api.github.com/repos/cyrax1800/ishoupbud", "Date": "2017-06-26T04:25:59Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == (-1)) { value = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1638/buggy-version/app.src.main.java.com.project.ishoupbud.view.fragment.ProductStatisticFragment.java", "BodyUseAPI": [], "Fixed commit": "c761691ab0c7bf6768142cb76454b5f1ac5344de", "Url": "https://api.github.com/repos/cyrax1800/ishoupbud", "Date": "2017-06-26T04:25:59Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) < 14) { return ((scrollView.getChildCount()) == 0) || (((scrollView.getChildCount()) != 0) && ((scrollView.getScrollY()) < ((scrollView.getChildAt(0).getHeight()) - (scrollView.getHeight())))); }else { return ((scrollView.getChildCount()) == 0) || (android.support.v4.view.ViewCompat.canScrollVertically(view, 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1021/buggy-version/library.src.main.java.me.dkzwm.smoothrefreshlayout.utils.ScrollCompat.java", "BodyUseAPI": [], "Fixed commit": "96782abc64c565c313719abe0e9262b5cc929b81", "Url": "https://api.github.com/repos/dkzwm/SmoothRefreshLayout", "Date": "2017-06-14T03:10:40Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.android.uamp.utils.BitmapHelper.fetchAndRescaleBitmap(java.lang.String,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (bitmap == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4013/buggy-version/mobile.src.main.java.com.example.android.uamp.AlbumArtCache.java", "BodyUseAPI": [], "Fixed commit": "c93d51204effc2bf95906a5d08a0bf46c6a6284a", "Url": "https://api.github.com/repos/antlersoft/patchyamp", "Date": "2017-02-25T01:01:14Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (out != null) { out.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3353/buggy-version/src.bepler.seq.svm.GridSearchParallel.java", "BodyUseAPI": ["java.io.PrintStream.close()"], "Fixed commit": "1012d87f001a11985ee791c5a65ad765d1aaf6eb", "Url": "https://api.github.com/repos/tbepler/seq-svm", "Date": "2014-08-11T16:04:36Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (requestedBBox.isEmpty()) emptyRequest = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8755/buggy-version/modules.plugin.imagemosaic.src.main.java.org.geotools.gce.imagemosaic.SpatialRequestHelper.java", "BodyUseAPI": [], "Fixed commit": "b4cc29de1e7c3d10bd6698161dc332b64826504b", "Url": "https://api.github.com/repos/HendrikPeilke/geotools", "Date": "2015-06-08T15:11:20Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((popularMealResults) != null) { if (position < (popularMealResults.size())) { java.util.Iterator<com.hagia.glucloser.fragments.home.listItems.PopularMealListItem> iterator = popularMealResults.iterator(); for (int i = 0; i < position; ++i) { iterator.next(); } return iterator.next(); }else { position -= popularMealResults.size(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7218/buggy-version/Android.src.com.hagia.glucloser.fragments.home.HomeListAdapter.java", "BodyUseAPI": [], "Fixed commit": "48ad0a5fab456453b00c6e50969e5b550260d3d3", "Url": "https://api.github.com/repos/nlefler/Glucloser", "Date": "2013-11-05T06:28:00Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (alFilter != null) { for (eu.rafaelaznar.helper.FilterBeanHelper oFilterBean : alFilter) { strSQLFilter += eu.rafaelaznar.helper.SqlBuilderHelper.getFilterExpression(oFilterBean); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7083/buggy-version/src.main.java.eu.rafaelaznar.helper.SqlBuilderHelper.java", "BodyUseAPI": [], "Fixed commit": "965cabf80351b4a1a791ca5facd1baadaa8c557d", "Url": "https://api.github.com/repos/rafaelaznar/trolleyes-server2", "Date": "2017-11-28T10:57:40Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((emat.getNumPos()) != (pmat.getNumPos())) { throw new java.lang.Error(\"energy matrix doesn't match pruning matrix, this is a bug\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6363/buggy-version/src.edu.duke.cs.osprey.control.ConfSearchFactory.java", "BodyUseAPI": [], "Fixed commit": "50c42347d5f8aa08b65c5178861107686ce8b067", "Url": "https://api.github.com/repos/donaldlab/OSPREY3", "Date": "2016-09-26T16:03:17Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.querydsl.mongodb.Operation<?>.getOperator()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (subOp == (Ops.COL_IS_EMPTY)) { com.mongodb.DBObject visit = ((com.mongodb.DBObject) (visit(com.querydsl.mongodb.OperationImpl.create(java.lang.Boolean.class, Ops.COL_IS_EMPTY, subOperation.getArg(0)), context))); java.lang.Object existingOperator = visit.removeField(\"$or\"); visit.put(\"$nor\", existingOperator); return visit; }else if ((subOp != (Ops.EQ)) && (subOp != (Ops.STRING_IS_EMPTY))) { return asDBObject(key, asDBObject(\"$not\", arg.get(key))); }else { return asDBObject(key, asDBObject(\"$ne\", arg.get(key))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8203/buggy-version/querydsl-mongodb.src.main.java.com.querydsl.mongodb.MongodbSerializer.java", "BodyUseAPI": [], "Fixed commit": "fbf2d23c62d490085dc6089559a286dd3b4782a6", "Url": "https://api.github.com/repos/querydsl/querydsl", "Date": "2015-03-18T19:08:26Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((arrow.getHit()) != null) { theArrow = arrow; }else { theArrow = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3335/buggy-version/src.main.java.com.wesserboy.overlays.renderers.BowAimHelp.java", "BodyUseAPI": [], "Fixed commit": "88dd648bbf65d800ee15794057d0f3fc1feda770", "Url": "https://api.github.com/repos/wesserboy/Overlays-MC-", "Date": "2017-09-06T22:45:24Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((messageParts.length) > 1) { out.writeObject(new com.edu.acme.Message(messageParts[0], messageParts[1])); }else { out.writeObject(new com.edu.acme.Message(messageParts[0], null)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/9080/buggy-version/src.main.java.com.edu.acme.ClientApp.java", "BodyUseAPI": ["java.io.ObjectOutputStream.writeObject(com.edu.acme.Message)", "java.io.ObjectOutputStream.writeObject(com.edu.acme.Message)"], "Fixed commit": "be8cfd9f0132687770ecb357a0544c4a835d3f46", "Url": "https://api.github.com/repos/alxiw/ConsoleChat", "Date": "2017-10-07T21:38:24Z"},
{"Line": "=>3957", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((fileName.startsWith(\"java-\")) || (fileName.startsWith(\"jdk-\"))) || (fileName.startsWith(\"jre-\"))) && ((fileName.contains(\"-openjdk\")) || (fileName.contains(\"-oracle\")))) { final java.util.regex.Matcher m = java.util.regex.Pattern.compile(\"^[^\\\\-]+-([0-9]+)-\").matcher(fileName); m.find(); return Capsule.shortJavaVersion(m.group(1)); }else if ((fileName.startsWith(\"jdk-\")) && ((fileName.contains(\"-openjdk\")) || (fileName.contains(\"-oracle\")))) { final java.util.regex.Matcher m = java.util.regex.Pattern.compile(\"java-([0-9]+)-\").matcher(fileName); m.find(); return Capsule.shortJavaVersion(m.group(1)); }else if ((((fileName.startsWith(\"jdk\")) || (fileName.startsWith(\"jre\"))) || (fileName.endsWith(\".jdk\"))) || (fileName.endsWith(\".jre\"))) { if ((fileName.startsWith(\"jdk\")) || (fileName.startsWith(\"jre\"))) fileName = fileName.substring(3); if ((fileName.endsWith(\".jdk\")) || (fileName.endsWith(\".jre\"))) fileName = fileName.substring(0, ((fileName.length()) - 4)); return Capsule.shortJavaVersion(fileName); }else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4621/buggy-version/capsule.src.main.java.Capsule.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.substring(int)", "java.util.regex.Pattern.matcher(java.lang.String)", "java.lang.String.endsWith(java.lang.String)", "java.lang.String.endsWith(java.lang.String)", "java.util.regex.Pattern.matcher(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "cfac74a97324a5218a60a06a14d0c113189bf65c", "Url": "https://api.github.com/repos/puniverse/capsule", "Date": "2015-04-16T11:12:52Z"},
{"Line": "=>776", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((msg.obj) instanceof com.google.android.exoplayer2.ExoPlaybackException) { handleFatalExceptionInternal(new ch.srg.mediaplayer.SRGMediaPlayerException(((com.google.android.exoplayer2.ExoPlaybackException) (msg.obj)))); }else { handleFatalExceptionInternal(((ch.srg.mediaplayer.SRGMediaPlayerException) (msg.obj))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1552/buggy-version/srgmediaplayer.src.main.java.ch.srg.mediaplayer.SRGMediaPlayerController.java", "BodyUseAPI": ["ch.srg.mediaplayer.SRGMediaPlayerController.handleFatalExceptionInternal(ch.srg.mediaplayer.SRGMediaPlayerException)", "ch.srg.mediaplayer.SRGMediaPlayerController.handleFatalExceptionInternal(((ch.srg.mediaplayer.SRGMediaPlayerException) (msg.obj)))"], "Fixed commit": "da88a1792873faee7cb49d4e3d616dae5da3c61e", "Url": "https://api.github.com/repos/SRGSSR/SRGMediaPlayer-Android", "Date": "2017-09-26T14:52:51Z"},
{"Line": "=>486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getHttpCode()) == 404) { for (java.lang.String pool : listPools()) { try { return request(version, pool); } catch (org.dasein.cloud.CloudException ignore) { } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8835/buggy-version/src.main.java.org.dasein.cloud.openstack.nova.os.network.NovaFloatingIP.java", "BodyUseAPI": [], "Fixed commit": "b27231777990f2b99c93b4bf7837cee861334f53", "Url": "https://api.github.com/repos/greese/dasein-cloud-openstack", "Date": "2013-02-25T20:37:27Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.activemq.command.Message.getOriginalDestination()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (origDest != null) { org.apache.activemq.util.ByteSequence origDestBytes = marshaller.marshal(origDest); origDestBytes.compact(); coreMessage.putBytesProperty(org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.AMQ_MSG_ORIG_DESTINATION, origDestBytes.data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1147/buggy-version/artemis-protocols.artemis-openwire-protocol.src.main.java.org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.java", "BodyUseAPI": ["org.apache.activemq.wireformat.WireFormat.marshal(org.apache.activemq.command.ActiveMQDestination)"], "Fixed commit": "94a7e5ffad212a75ea0064c3de9c2a64e644c78d", "Url": "https://api.github.com/repos/apache/activemq-artemis", "Date": "2016-02-18T12:52:32Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((row < (rows)) && (row >= 0)) && (col < (cols))) && (col >= 0)) { showStatus(((((\"Mouse at (\" + row) + \",\") + col) + \")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1315/buggy-version/display.java", "BodyUseAPI": ["display.showStatus(java.lang.String)"], "Fixed commit": "e7e7e8f2d5737bc745dbdbaeaa2c96756b273e33", "Url": "https://api.github.com/repos/joshatron/mines", "Date": "2013-04-14T01:07:06Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((prefix == null) || ((org.exist.dom.persistent.NodeImpl.getNodeType()) == (org.w3c.dom.Node.DOCUMENT_NODE))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6229/buggy-version/src.org.exist.dom.persistent.NodeImpl.java", "BodyUseAPI": [], "Fixed commit": "32094452932053456e656fca66143b0ac77997da", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-09T00:03:28Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((fs.length) > 0) { java.lang.StringBuffer extraPath = new java.lang.StringBuffer(); for (java.io.File f : fs) { java.lang.String filename = f.getName(); if (filename.toLowerCase().endsWith(\".jar\")) { extraPath.append(((epath + (java.io.File.separator)) + filename)).append(\",\"); } } context.setExtraClasspath(extraPath.toString()); }else { throw new java.io.IOException(\"there is no extra lib files.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3207/buggy-version/dedup.src.com.shentar.frontend.FrontMain.java", "BodyUseAPI": [], "Fixed commit": "e51007daa7ef76d1cfbc18761ffce72f94749e1a", "Url": "https://api.github.com/repos/shentar/jAlbum", "Date": "2017-04-09T15:46:37Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((s.readableBytes()) + (s.readerIndex())) != (s.writerIndex())) { java.lang.System.out.println((\"Incorrect length: \" + ((((s.readableBytes()) + (s.readerIndex())) + \" - \") + (s.writerIndex())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6108/buggy-version/src.dev.wolveringer.BungeeUtil.packets.PacketPlayOutPluginMessage.java", "BodyUseAPI": ["dev.wolveringer.packet.PacketDataSerializer.readerIndex()", "java.io.PrintStream.println((\"Incorrect length: \" + ((((s.readableBytes()) + (s.readerIndex())) + \" - \") + (s.writerIndex()))))", "dev.wolveringer.packet.PacketDataSerializer.readableBytes()", "dev.wolveringer.packet.PacketDataSerializer.writerIndex()"], "Fixed commit": "60369c71b37e663344acfccee721acf2da947e86", "Url": "https://api.github.com/repos/WolverinDEV/BungeeUtil", "Date": "2016-07-08T18:55:51Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (printedContainedReads.contains(containedRead.getId())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5814/buggy-version/src.hr.fer.zesoi.bioinfo.formaters.MinimuslikeOverlapGraphFormatter.java", "BodyUseAPI": [], "Fixed commit": "9bce3b89b792081e1bc4ba3c2d179d36173b11fe", "Url": "https://api.github.com/repos/JKMirko/bioinformatika-projekt", "Date": "2014-01-22T18:33:19Z"},
{"Line": "=>417", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.Graphics2D.getRenderingHint(java.awt.RenderingHints.Key)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (antialiasing != null) { graphics.setRenderingHint(java.awt.RenderingHints.KEY_ANTIALIASING, antialiasing); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/805/buggy-version/modules.library.render.src.main.java.org.geotools.renderer.label.LabelCacheImpl.java", "BodyUseAPI": ["java.awt.Graphics2D.setRenderingHint(java.awt.RenderingHints.Key,java.lang.Object)"], "Fixed commit": "7a438ce13f0a17669ac58870b560c01be0d23b92", "Url": "https://api.github.com/repos/ianturton/geotools", "Date": "2015-07-03T12:52:41Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (c == 'r') sb.append('\\r'); else if (c == 'n') sb.append('\\n'); else if (c == 't') sb.append('\\t'); else throw new org.araqne.logdb.QueryParseException(\"invalid-escape-sequence\", (-1), (\"char=\" + c));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4101/buggy-version/araqne-logdb.src.main.java.org.araqne.logdb.Strings.java", "BodyUseAPI": [], "Fixed commit": "c7ecf706ad0db91206877f37b90b65d0616734cf", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2014-11-19T05:46:11Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (paramter > 0) { ps.deleteCharAt(((ps.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4169/buggy-version/tools.poisoner.src.java.com.googlecode.dex2jar.Method.java", "BodyUseAPI": [], "Fixed commit": "82e4b683a70b4ac9aa64059d4b50f44b9ee90003", "Url": "https://api.github.com/repos/sudaoblinnnk/hello", "Date": "2017-05-16T10:26:52Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (editor != null) { editor.putLong(\"launch_count\", 0); editor.commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6512/buggy-version/app.src.main.java.com.concon.talkabout.talkabout.utils.AppRater.java", "BodyUseAPI": ["SharedPreferences.Editor.commit()", "SharedPreferences.Editor.putLong(java.lang.String,int)"], "Fixed commit": "a61ce66e084d99bd7cdc75c229d187803343634e", "Url": "https://api.github.com/repos/pablitoh/talkabout", "Date": "2015-05-15T02:32:21Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.artemis.ComponentMapper<com.github.fabioticconi.roguelike.components.commands.MoveCommand>.create(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((m.direction) == direction) return m.cooldown;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8766/buggy-version/src.main.java.com.github.fabioticconi.roguelike.systems.MovementSystem.java", "BodyUseAPI": [], "Fixed commit": "a39d2e3828b6b8f5a398bbf94ee032e56c509348", "Url": "https://api.github.com/repos/fabio-t/alone-rl", "Date": "2016-10-14T22:00:00Z"},
{"Line": "=>704", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(tmp[1].equals(\"null\"))) { org.agmip.ace.util.AcePathfinderUtil.insertValue(result, \"feamn\", tmp[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6491/buggy-version/src.main.java.org.agmip.functions.ExperimentHelper.java", "BodyUseAPI": ["org.agmip.ace.util.AcePathfinderUtil.insertValue(java.util.HashMap,java.lang.String,java.lang.String)"], "Fixed commit": "94a1131f0cc907a0fbaa07671a292ce14551c316", "Url": "https://api.github.com/repos/MengZhang/agmip-common-functions", "Date": "2013-05-17T17:35:44Z"},
{"Line": "=>689", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.agmip.functions.ExperimentHelper.round(product(fen_tot, ptps[i], \"0.01\"),int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (feamn == null) { org.agmip.functions.ExperimentHelper.LOG.error(\"Invalid value for FEN_TOT {} or PTP {}\", fen_tot, ptps[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6491/buggy-version/src.main.java.org.agmip.functions.ExperimentHelper.java", "BodyUseAPI": [], "Fixed commit": "94a1131f0cc907a0fbaa07671a292ce14551c316", "Url": "https://api.github.com/repos/MengZhang/agmip-common-functions", "Date": "2013-05-17T17:35:44Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((window.getParameters()[0]) instanceof org.wso2.siddhi.query.api.expression.constant.LongConstant) { duration = ((org.wso2.siddhi.query.api.expression.constant.LongConstant) (window.getParameters()[0])).getValue(); }else if ((window.getParameters()[0]) instanceof org.wso2.siddhi.query.api.expression.constant.IntConstant) { duration = ((long) (((org.wso2.siddhi.query.api.expression.constant.IntConstant) (window.getParameters()[0])).getValue())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1806/buggy-version/siddhi-hive-component.org.wso2.carbon.siddhihive.core.src.main.java.org.wso2.carbon.siddhihive.core.headerprocessor.WindowIsolator.java", "BodyUseAPI": ["org.wso2.siddhi.query.api.query.input.handler.Window.getParameters()", "((org.wso2.siddhi.query.api.expression.constant.IntConstant) (window.getParameters()[0])).getValue()", "((org.wso2.siddhi.query.api.expression.constant.LongConstant) (window.getParameters()[0])).getValue()", "org.wso2.siddhi.query.api.query.input.handler.Window.getParameters()", "org.wso2.siddhi.query.api.query.input.handler.Window.getParameters()"], "Fixed commit": "cfc6f460e784919b20af049c7f53fa592a41623e", "Url": "https://api.github.com/repos/tishan89/siddhi-hive", "Date": "2014-06-19T05:54:57Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((a.length()) > 0) { if (a.substring(((a.length()) - 1)).equals(\"+\")) a = a.substring(0, ((a.length()) - 1)); android.util.Log.d(\"filter\", (\"onClick: \" + a)); activity = a; }else { activity = \"hiking\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2977/buggy-version/app.src.main.java.com.example.guhao.mytrail.activity.MainTrail.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.length()", "java.lang.String.substring(int)", "java.lang.String.length()"], "Fixed commit": "56c56437975645535a218bb5eea51b22c031f88b", "Url": "https://api.github.com/repos/CS3714-Asian-Power/MyTrail", "Date": "2017-12-13T04:10:02Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((taskStatus.getRunState()) == (TaskStatus.State.RUNNING)) { (totalTasks)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/958/buggy-version/core.src.main.java.org.apache.hama.bsp.BSPMaster.java", "BodyUseAPI": [], "Fixed commit": "85e701f9da5045abf94a4194ad8f31aeaa58655c", "Url": "https://api.github.com/repos/kennethPATHn/hama", "Date": "2013-07-16T12:46:05Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (src == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6935/buggy-version/src.main.java.com.github.julman99.gsonfire.postProcessors.MergeMapPostProcessor.java", "BodyUseAPI": [], "Fixed commit": "106ec4c2e6e106d47117d712a84ef5a4bc2a4915", "Url": "https://api.github.com/repos/julman99/gson-fire", "Date": "2013-06-20T19:10:59Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (trustStore != null) { sslSocketFactory = new org.apache.http.conn.ssl.SSLSocketFactory(org.apache.http.conn.ssl.SSLSocketFactory.TLS, trustStore, keyStorePassword, trustStore, null, null, hostnameVerifier); }else { sslSocketFactory = new org.apache.http.conn.ssl.SSLSocketFactory(javax.net.ssl.SSLContext.getInstance(\"Default\"), hostnameVerifier); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/456/buggy-version/src.main.java.org.orbeon.oxf.resources.handler.HTTPURLConnection.java", "BodyUseAPI": [], "Fixed commit": "c6b8dfbfe600e85fe9a73a952bdbf5b70aaa6bf4", "Url": "https://api.github.com/repos/orbeon/orbeon-forms", "Date": "2014-08-27T01:08:56Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((potion.prevRotationPitch) == 0.0F) && ((potion.prevRotationYaw) == 0.0F)) { float f = net.minecraft.util.MathHelper.sqrt_double(((vx * vx) + (vz * vz))); potion.prevRotationYaw = potion.rotationYaw = ((float) (((java.lang.Math.atan2(vx, vz)) * 180.0) / (java.lang.Math.PI))); potion.prevRotationPitch = potion.rotationPitch = ((float) (((java.lang.Math.atan2(vy, ((double) (f)))) * 180.0) / (java.lang.Math.PI))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/9150/buggy-version/src.main.java.com.turkey.turkeyUtil.Mobs.EntityDamageSkeleton.java", "BodyUseAPI": [], "Fixed commit": "2020c2be4d47671bf2d09c0d173b0b463abb0db0", "Url": "https://api.github.com/repos/Turkey2349/TurkeyUtil", "Date": "2015-07-28T01:38:11Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fieldParametersLine == null) { throw new ru.nsu.fit.djachenko.mytanks.model.MapFormatException(\"Empty map file\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/9001/buggy-version/src.ru.nsu.fit.djachenko.mytanks.model.Field.java", "BodyUseAPI": [], "Fixed commit": "9268f4279de2f39fc5540a1e479b2cd2016c661b", "Url": "https://api.github.com/repos/djachenko/MyTanks", "Date": "2013-08-19T16:17:49Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((fieldParameters.length) < 2) { throw new ru.nsu.fit.djachenko.mytanks.model.MapFormatException(\"Wrong field parameters format\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/9001/buggy-version/src.ru.nsu.fit.djachenko.mytanks.model.Field.java", "BodyUseAPI": [], "Fixed commit": "9268f4279de2f39fc5540a1e479b2cd2016c661b", "Url": "https://api.github.com/repos/djachenko/MyTanks", "Date": "2013-08-19T16:17:49Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.authentication.UsernamePasswordAuthenticationToken.getCredentials()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(cred.equals(authentication.getCredentials()))) { this.proxy = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6433/buggy-version/src.main.java.grisu.control.GrisuUserDetails.java", "BodyUseAPI": [], "Fixed commit": "50dd1a482f17d5f1923a050200b82dd5d47905cc", "Url": "https://api.github.com/repos/grisu/enunciate-backend", "Date": "2011-11-30T00:22:52Z"},
{"Line": "=>545", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nCells == 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4909/buggy-version/src.fap_java.FSM.java", "BodyUseAPI": [], "Fixed commit": "784cf1e0cb4ff55244ea7ad4dd86cd5a813b3112", "Url": "https://api.github.com/repos/LeonardA-L/FAP_java", "Date": "2014-06-15T20:06:03Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mBluetoothAdapter) != null) { unregisterReceiver(bluetoothDisconnectReceiver); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5423/buggy-version/droid2ino.droid2ino.src.main.java.com.bq.robotic.droid2ino.activities.BaseBluetoothConnectionActivity.java", "BodyUseAPI": [], "Fixed commit": "c44d8d47cc7aab8882891f340a811bd426bd4a8f", "Url": "https://api.github.com/repos/bq/droid2ino", "Date": "2014-06-13T12:24:03Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["IdentityUtil.threadLocalProperties.get().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (domain != null) { username = org.wso2.carbon.identity.core.util.IdentityUtil.addDomainToName(username, domain.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5082/buggy-version/components.org.wso2.carbon.identity.application.authenticator.basicauth.src.main.java.org.wso2.carbon.identity.application.authenticator.basicauth.BasicAuthenticator.java", "BodyUseAPI": ["org.wso2.carbon.identity.core.util.IdentityUtil.addDomainToName(java.lang.String,java.lang.String)", "java.lang.Object.toString()"], "Fixed commit": "4d4488fe1c604e70dc2f7e2f884a2715eb4668be", "Url": "https://api.github.com/repos/wso2-extensions/identity-local-auth-basicauth", "Date": "2016-12-22T13:05:07Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.jmeter.services.FileServer.getFileServer().getBaseDir()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((baseDir != null) && (!(baseDir.endsWith(\"/\")))) { baseDir += \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/427/buggy-version/mqtt_jmeter.src.main.java.net.xmeter.Util.java", "BodyUseAPI": [], "Fixed commit": "9bc4b6d10cfbdfc28501ca8698275917a5752619", "Url": "https://api.github.com/repos/emqtt/mqtt-jmeter", "Date": "2017-02-21T10:12:43Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.java.model.ExpressionUtils.skipParentheses(tree.expression())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((expression.is(Tree.Kind.IDENTIFIER)) && (\"this\".equals(((org.sonar.plugins.java.api.tree.IdentifierTree) (expression)).name()))) { tree.identifier().accept(this); }else { expression.accept(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8491/buggy-version/java-frontend.src.main.java.org.sonar.java.se.checks.SyntaxTreeNameFinder.java", "BodyUseAPI": ["org.sonar.plugins.java.api.tree.ExpressionTree.accept(org.sonar.java.se.checks.SyntaxTreeNameFinder)"], "Fixed commit": "239d0aee730cd9e112ee0089994d9b8fc1e83114", "Url": "https://api.github.com/repos/SonarSource/sonar-java", "Date": "2017-05-15T16:01:31Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(PatternSearch.path.exists())) { java.lang.System.out.println(\"Failed to find file to apply expression to.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7666/buggy-version/src.PatternSearch.java", "BodyUseAPI": [], "Fixed commit": "ec6cfe60b237ebfba90b9c6f36619c367dfa68f9", "Url": "https://api.github.com/repos/Jarred10/317-Assignment-3---Pattern-Search", "Date": "2014-05-24T09:51:54Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((beanDefinitionRegistry) == null) { beanDefinitionRegistry = applicationContext.getBean(com.vaadin.spring.BeanDefinitionRegistryProvider.class).getBeanDefinitionRegistry(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4675/buggy-version/vaadin-spring.src.main.java.com.vaadin.spring.VaadinConfiguration.java", "BodyUseAPI": [], "Fixed commit": "c118ae443f7278545638a1be886870b00ca16f9d", "Url": "https://api.github.com/repos/alexo134/vaadin-spring3-support", "Date": "2016-01-25T23:36:16Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(taskList.get(i).getStatus().equals(logic.mark.STATUS_COMPLETED))) { isOverdue = logic.mark.Overdue.performCheckOverdueEvent(taskList.get(i)); if (isOverdue) { taskList.get(i).setStatus(logic.mark.STATUS_OVERDUE); logger.log(java.util.logging.Level.INFO, \"set status of non-recurring event to overdue\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5392/buggy-version/src.logic.mark.Overdue.java", "BodyUseAPI": ["logic.mark.Overdue.performCheckOverdueEvent(taskList.get(i))", "taskList.get(i).setStatus(logic.mark.STATUS_OVERDUE)", "java.util.ArrayList<common.TaskObject>.get(int)", "java.util.ArrayList<common.TaskObject>.get(int)"], "Fixed commit": "03bb0d5f3fef469246fb7de93eb3172994ffcb60", "Url": "https://api.github.com/repos/cs2103jan2016-t11-3j/main", "Date": "2016-04-06T15:57:10Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(taskList.get(i).getStatus().equals(logic.mark.STATUS_COMPLETED))) { isOverdue = logic.mark.Overdue.performCheckOverdueDeadline(taskList.get(i)); if (isOverdue) { taskList.get(i).setStatus(logic.mark.STATUS_OVERDUE); logger.log(java.util.logging.Level.INFO, \"set status of non-recurring deadline to overdue\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5392/buggy-version/src.logic.mark.Overdue.java", "BodyUseAPI": ["logic.mark.Overdue.performCheckOverdueDeadline(taskList.get(i))", "taskList.get(i).setStatus(logic.mark.STATUS_OVERDUE)", "java.util.ArrayList<common.TaskObject>.get(int)", "java.util.ArrayList<common.TaskObject>.get(int)"], "Fixed commit": "03bb0d5f3fef469246fb7de93eb3172994ffcb60", "Url": "https://api.github.com/repos/cs2103jan2016-t11-3j/main", "Date": "2016-04-06T15:57:10Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (succes) { if (ipass.services.ServiceProvider.getLibService().artiestVerwijderenOpNaam(naam)) { req.setAttribute(\"msgs\", (naam + \" is succesvol verwijderd.\")); rd = req.getRequestDispatcher(\"user/artiestToevoegen.jsp\"); } }else { req.setAttribute(\"msgs\", (naam + \" ging fout\")); rd = req.getRequestDispatcher(\"user/artiestToevoegen.jsp\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1672/buggy-version/src.main.java.ipass.servlets.ArtiestVerwijderenServlet.java", "BodyUseAPI": [], "Fixed commit": "d6866df0881065a917246f7b13b8d30ba9734a59", "Url": "https://api.github.com/repos/MartNoten/iPass", "Date": "2016-06-01T18:43:19Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["by.istin.android.xcore.source.impl.http.HttpAndroidDataSource.isRedirect(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isRedirect) { org.apache.http.Header firstHeader = response.getFirstHeader(\"Location\"); if (firstHeader != null) { java.lang.String value = firstHeader.getValue(); if ((!(by.istin.android.xcore.utils.StringUtil.isEmpty(value))) && (!(value.equals(request.getURI().toString())))) { org.apache.http.client.methods.HttpGet redirectUri = new org.apache.http.client.methods.HttpGet(value); request.abort(); return getInputSteam(redirectUri); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3072/buggy-version/xcore-library.xcore.src.main.java.by.istin.android.xcore.source.impl.http.HttpAndroidDataSource.java", "BodyUseAPI": [], "Fixed commit": "6171463bd834ba5223142490d9db05d1ababf5f6", "Url": "https://api.github.com/repos/IstiN/android_xcore", "Date": "2014-03-17T14:22:01Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (target_patient == null) { java.lang.String errorString = (\"Sorry, current person (\" + person) + \") is not a patient and we can not query for their encounters.\"; java.lang.System.out.println((\" `-> (x) error retreiving data: \" + errorString)); return \"ERROR: \" + errorString; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6507/buggy-version/omod.src.main.java.org.openmrs.module.simpleformservice.web.controller.DataApiController.java", "BodyUseAPI": [], "Fixed commit": "342b9c9346fc1a001bd8453689722d1d096d0b87", "Url": "https://api.github.com/repos/personalcancertoolkit/openmrs-module-simpleformservice", "Date": "2017-08-03T21:20:01Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((direction.equals(\"S\")) || (direction.equals(\"W\"))) degrees = -degrees;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7381/buggy-version/pt.ulisboa.tecnico.cmov.appServer.src.pt.ulisboa.tecnico.cmov.appServer.Coordenates.java", "BodyUseAPI": [], "Fixed commit": "2ec3d58a0f316e4979e0799a79507ad68c913997", "Url": "https://api.github.com/repos/ist-joaof/appServer", "Date": "2017-05-15T16:00:52Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((direction.equals(\"S\")) || (direction.equals(\"W\"))) degrees = -degrees;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7381/buggy-version/pt.ulisboa.tecnico.cmov.appServer.src.pt.ulisboa.tecnico.cmov.appServer.Coordenates.java", "BodyUseAPI": [], "Fixed commit": "2ec3d58a0f316e4979e0799a79507ad68c913997", "Url": "https://api.github.com/repos/ist-joaof/appServer", "Date": "2017-05-15T16:00:52Z"},
{"Line": "=>942", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.optLong(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (id == (-2)) { model.setValue(idProperty, (-1L)); if (userProperty != null) model.setValue(userProperty, \"\"); }else if (id == (com.todoroo.astrid.actfm.sync.ActFmPreferenceService.userId())) { model.setValue(idProperty, 0L); if (userProperty != null) model.setValue(userProperty, \"\"); }else { model.setValue(idProperty, id); if (userProperty != null) model.setValue(userProperty, user.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4657/buggy-version/astrid.plugin-src.com.todoroo.astrid.actfm.sync.ActFmSyncService.java", "BodyUseAPI": ["com.todoroo.andlib.data.AbstractModel.setValue(com.todoroo.andlib.data.Property.LongProperty,long)"], "Fixed commit": "a6c9dba696a0ee05e7a56c3f5533c9550b2de44c", "Url": "https://api.github.com/repos/todoroo/astrid", "Date": "2011-11-30T03:28:14Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((topicsData) == null) || ((topicsData.size()) <= 0)) { com.android.manqoul.connection.Connection.getMostReadNewsTopics(hostActivity, this, 0); mostReadLayout.setRefreshing(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6223/buggy-version/app.src.main.java.com.android.manqoul.controllers.inAppViews.home.fragments.MostReadNewsFragment.java", "BodyUseAPI": [], "Fixed commit": "84263fa714b7f09a5ee2d67e823dcc7a57aa6ed1", "Url": "https://api.github.com/repos/Eyadoos/Manqoul", "Date": "2016-11-11T01:53:42Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<java.lang.Object>.next()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (sourceElement != null) { org.modelmapper.spi.MappingContext<?, ?> elementContext = context.create(sourceElement, elementType); element = context.getMappingEngine().map(elementContext); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1769/buggy-version/core.src.main.java.org.modelmapper.internal.converter.IterableConverter.java", "BodyUseAPI": ["org.modelmapper.spi.MappingContext<S, D>.create(java.lang.Object,java.lang.Class<?>)"], "Fixed commit": "25d9d27c71846aefdec4b5b02a70d393262dc3d8", "Url": "https://api.github.com/repos/jhalterman/modelmapper", "Date": "2013-07-26T00:01:36Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entry.getValue()) != null) { org.modelmapper.spi.MappingContext<?, ?> valueContext = context.create(entry.getValue(), valueElementType); value = context.getMappingEngine().map(valueContext); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1769/buggy-version/core.src.main.java.org.modelmapper.internal.converter.MapConverter.java", "BodyUseAPI": ["java.util.Map.Entry<?, ?>.getValue()", "org.modelmapper.spi.MappingContext<java.util.Map<?, ?>, java.util.Map<java.lang.Object, java.lang.Object>>.create(entry.getValue(),java.lang.Class<?>)"], "Fixed commit": "25d9d27c71846aefdec4b5b02a70d393262dc3d8", "Url": "https://api.github.com/repos/jhalterman/modelmapper", "Date": "2013-07-26T00:01:36Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isAdded()) { getActivity().setProgressBarIndeterminateVisibility(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3234/buggy-version/src.com.johnfuetsch.android.twitter.fragments.TweetListFragment.java", "BodyUseAPI": [], "Fixed commit": "677a5d3ad89a42ff85efec4eab1969a87c1a6d77", "Url": "https://api.github.com/repos/terranlune/CodePath-TwitterClient", "Date": "2014-04-07T18:18:54Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAdded()) { com.johnfuetsch.android.twitter.helpers.ToastErrors.toastErrors(getActivity(), error, \"Error loading tweets\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3234/buggy-version/src.com.johnfuetsch.android.twitter.fragments.TweetListFragment.java", "BodyUseAPI": [], "Fixed commit": "677a5d3ad89a42ff85efec4eab1969a87c1a6d77", "Url": "https://api.github.com/repos/terranlune/CodePath-TwitterClient", "Date": "2014-04-07T18:18:54Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((calendarsigma.Select) == (ec.satoolkit.x11.CalendarSigma.Select)) && ((core.getSigmavec()) == null)) { this.setSigmavec(this.getSigmavec()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6181/buggy-version/nbdemetra-sa.src.main.java.ec.nbdemetra.x13.descriptors.X11SpecUI.java", "BodyUseAPI": [], "Fixed commit": "0b320c66779dc8cede28eaa32cbe75d5c167500d", "Url": "https://api.github.com/repos/jdemetra/jdemetra-app", "Date": "2015-04-17T14:34:54Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (undoManager.canUndo()) { undoManager.undo(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7976/buggy-version/src.visitor_practice.REPLConsole.java", "BodyUseAPI": ["javax.swing.undo.UndoManager.undo()"], "Fixed commit": "1f4ad1d5e9549c3a93ed4256722c71c25135e628", "Url": "https://api.github.com/repos/nkartashov/REPL", "Date": "2014-05-14T20:38:59Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Hashtable<java.lang.String, edu.cpp.cs356.assignment2.User>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (follow == null) { txtUserId.setText(\"User does not exist.\"); }else if (follow == (user)) { txtUserId.setText(\"You cannot follow yourself.\"); }else if (user.getFollowers().contains(follow)) { txtUserId.setText(\"Already following this user.\"); }else { user.follow(follow); followingListModel.addElement(follow); int index = (followingList.getModel().getSize()) - 1; followingList.setSelectedIndex(index); followingList.ensureIndexIsVisible(index); txtUserId.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/663/buggy-version/src.edu.cpp.cs356.assignment2.UserPanel.java", "BodyUseAPI": ["edu.cpp.cs356.assignment2.User.follow(edu.cpp.cs356.assignment2.User)", "user.getFollowers().contains(edu.cpp.cs356.assignment2.User)", "javax.swing.DefaultListModel<edu.cpp.cs356.assignment2.User>.addElement(edu.cpp.cs356.assignment2.User)"], "Fixed commit": "7e84a63a42e415e07d68e89889faf04ab1ea514b", "Url": "https://api.github.com/repos/superbarnie/CS356_A2", "Date": "2017-07-15T22:33:50Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (randomorder) { java.util.Collections.shuffle(questions); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/305/buggy-version/src.Quiz.Quiz.java", "BodyUseAPI": [], "Fixed commit": "9c7f9221e93c4aa6d924252a8835cd4da8d3832c", "Url": "https://api.github.com/repos/danduncan/QuizSite", "Date": "2014-12-05T22:32:59Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.getTimeInMillis()", "java.util.Calendar.getTimeInMillis()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (intendedTime >= currentTime) { alarmMgr.setRepeating(AlarmManager.RTC, intendedTime, AlarmManager.INTERVAL_DAY, alarmIntent); }else { firingCal.add(java.util.Calendar.DAY_OF_MONTH, 1); intendedTime = firingCal.getTimeInMillis(); alarmMgr.setRepeating(AlarmManager.RTC, intendedTime, AlarmManager.INTERVAL_DAY, alarmIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7562/buggy-version/app.src.main.java.com.nkdroid.dressify.MainActivity.java", "BodyUseAPI": ["android.app.AlarmManager.setRepeating(AlarmManager.RTC,long,AlarmManager.INTERVAL_DAY,android.app.PendingIntent)"], "Fixed commit": "54a1e10dc6b4679aa4461f369508d7ccc2a6b139", "Url": "https://api.github.com/repos/agarwalamit662/Dressify", "Date": "2016-06-26T08:30:21Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((speedUp) < (rinde.sim.ui.SimulationViewer.MAX_SPEED_UP)) { speedUp <<= 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5998/buggy-version/ui.src.main.java.rinde.sim.ui.SimulationViewer.java", "BodyUseAPI": [], "Fixed commit": "de76c4b22c64d2d0cb7e49cbaa5c8a93866bf0df", "Url": "https://api.github.com/repos/rinde/RinSim", "Date": "2013-10-30T11:00:04Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sd.exists())) sd = new java.io.File(\"src/main/yeti\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7234/buggy-version/src.main.java.org_yeti_maven.YetiCompileMojoBase.java", "BodyUseAPI": [], "Fixed commit": "ca5ca44f4ab456f087413b95ca71568059b91aac", "Url": "https://api.github.com/repos/chrisichris/yeti-maven-plugin", "Date": "2013-04-06T10:48:20Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sd.exists())) sd = new java.io.File(\"src/main/yeti\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7234/buggy-version/src.main.java.org_yeti_maven.YetiDocMojo.java", "BodyUseAPI": [], "Fixed commit": "ca5ca44f4ab456f087413b95ca71568059b91aac", "Url": "https://api.github.com/repos/chrisichris/yeti-maven-plugin", "Date": "2013-04-06T10:48:20Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Backpack.playerHandler.getBackpack(player)) != null) { counter++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1493/buggy-version/backpack.handler.ServerTickHandlerBackpack.java", "BodyUseAPI": [], "Fixed commit": "40a2193ae28f09ae0b5a5c6e4ee3c7995e9f4e40", "Url": "https://api.github.com/repos/Eydamos/Minecraft-Backpack-Mod", "Date": "2014-01-20T20:48:08Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (extensionIndex > 0) { java.lang.String fileExt = path.toString().substring(extensionIndex); if (fileExt.equals(\".sb2\")) { sb2Files.add(path); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3351/buggy-version/scratchgrader.ScratchLoader.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "380b53fe15004501a4765aaa80fc0d61f091befb", "Url": "https://api.github.com/repos/JaysGitLab/cs-5666-scatt-scattcats", "Date": "2017-04-02T01:06:36Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((slot) >= (itemHandler.getSlots())) { throw new java.util.NoSuchElementException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7421/buggy-version/src.main.java.appeng.util.inv.ItemHandlerIterator.java", "BodyUseAPI": [], "Fixed commit": "d470592e3c6d4bba3f3e0a85b4f1e278c6d7ec29", "Url": "https://api.github.com/repos/AppliedEnergistics/Applied-Energistics-2", "Date": "2016-10-26T06:53:50Z"},
{"Line": "=>578", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(entities.containsKey(entity))) { entities.put(entity, entity.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5320/buggy-version/src.de.Fear837.structs.EntityList.java", "BodyUseAPI": ["java.util.HashMap<de.Fear837.structs.EntityObject, java.lang.Integer>.put(de.Fear837.structs.EntityObject,entity.getId())", "de.Fear837.structs.EntityObject.getId()"], "Fixed commit": "e9476d6136e27371b4f97a042cf9df598cf7ea1e", "Url": "https://api.github.com/repos/Fear837/AnimalProtect", "Date": "2014-02-01T16:38:20Z"},
{"Line": "=>582", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(reverseKeys.containsKey(java.util.UUID.fromString(entity.getUniqueID())))) { reverseKeys.put(java.util.UUID.fromString(entity.getUniqueID()), entity.getOwner()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5320/buggy-version/src.de.Fear837.structs.EntityList.java", "BodyUseAPI": ["java.util.HashMap<java.util.UUID, java.lang.String>.put(java.util.UUID,entity.getOwner())", "de.Fear837.structs.EntityObject.getUniqueID()", "de.Fear837.structs.EntityObject.getOwner()", "java.util.UUID.fromString(entity.getUniqueID())"], "Fixed commit": "e9476d6136e27371b4f97a042cf9df598cf7ea1e", "Url": "https://api.github.com/repos/Fear837/AnimalProtect", "Date": "2014-02-01T16:38:20Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isSpatially_enabled()) { query.append((\"spatial_val\".equals(fieldname) ? value : \"null\")); query.append(\",\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/622/buggy-version/src.webapp.src.ch.specchio.eav_db.EAVDBServices.java", "BodyUseAPI": [], "Fixed commit": "5bb716425f74c37831f17ca4d57cc35daa79abc1", "Url": "https://api.github.com/repos/ahueni/SPECCHIO", "Date": "2017-09-18T11:13:01Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (isInEditMode()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1338/buggy-version/base.src.main.java.com.liangmayong.base.widget.skin.SkinRippleButton.java", "BodyUseAPI": [], "Fixed commit": "6b2069109b5487ed71be868951798e81cdbce195", "Url": "https://api.github.com/repos/LiangMaYong/android-base", "Date": "2016-11-05T09:48:47Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (isInEditMode()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1338/buggy-version/base.src.main.java.com.liangmayong.base.widget.skin.SkinRippleButton.java", "BodyUseAPI": [], "Fixed commit": "6b2069109b5487ed71be868951798e81cdbce195", "Url": "https://api.github.com/repos/LiangMaYong/android-base", "Date": "2016-11-05T09:48:47Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInEditMode()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1338/buggy-version/base.src.main.java.com.liangmayong.base.widget.skin.SkinRippleButton.java", "BodyUseAPI": [], "Fixed commit": "6b2069109b5487ed71be868951798e81cdbce195", "Url": "https://api.github.com/repos/LiangMaYong/android-base", "Date": "2016-11-05T09:48:47Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmrs.Visit.getStopDatetime()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((stopDate != null) && (stopDate.before(new java.util.Date()))) { throw new org.bahmni.module.bahmnicore.web.v1_0.VisitClosedException(errorMessage); }else { org.openmrs.module.bahmniemrapi.encountertransaction.contract.BahmniEncounterTransaction bahmniEncounterTransaction = get(uuid, false); bahmniEncounterTransaction.setReason(reason); bahmniEncounterTransactionService.delete(bahmniEncounterTransaction); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4791/buggy-version/bahmnicore-omod.src.main.java.org.bahmni.module.bahmnicore.web.v1_0.controller.BahmniEncounterController.java", "BodyUseAPI": [], "Fixed commit": "87ffde9fc9087692418bc3796c433e004555be68", "Url": "https://api.github.com/repos/Bahmni/bahmni-core", "Date": "2016-03-08T10:54:52Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.String>>.get(java.lang.String)", "java.lang.String.substring(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (currentDefault.containsKey(inputName)) { java.lang.String currentLabel = currentDefault.get(inputName); currentDefault.put(inputName, ((currentLabel + \", \") + label)); }else { currentDefault.put(inputName, label); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8566/buggy-version/src.main.java.org.commonwl.view.graphviz.RDFDotWriter.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "e63533f4b5fcbd5ce80ffda76a22e433e51dc60d", "Url": "https://api.github.com/repos/common-workflow-language/cwlviewer", "Date": "2017-07-07T15:49:50Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (objectsRead >= (n)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5239/buggy-version/src.main.java.de.jeha.s3pt.operations.CreateKeyFile.java", "BodyUseAPI": [], "Fixed commit": "404815c9dcf64a521c8816af53f189012a8396a2", "Url": "https://api.github.com/repos/jenshadlich/S3-Performance-Test", "Date": "2015-07-26T19:29:17Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((me.size()) != 0) map.getOverlays().add(me);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5220/buggy-version/src.eu.fbk.dycapo.activities.Navigation.java", "BodyUseAPI": ["map.getOverlays().add(eu.fbk.dycapo.maputils.DycapoItemizedOverlay)"], "Fixed commit": "1219042d3181b0b418ffb5f8ff800b8a56bec78e", "Url": "https://api.github.com/repos/urobo/dycadroid", "Date": "2011-05-17T12:50:27Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pref == 0.0) { pref = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5062/buggy-version/mr.src.main.java.org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender.java", "BodyUseAPI": [], "Fixed commit": "7ba678d056d764c37952f37e05bda99d6f109dd8", "Url": "https://api.github.com/repos/fdemoor/mahout", "Date": "2017-10-18T15:37:17Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(stack.isEmpty())) && (Converter.contains(high, stack.peek()))) { output += (stack.pop()) + \" \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7002/buggy-version/Project1.Converter.java", "BodyUseAPI": ["MyStack<java.lang.String>.pop()"], "Fixed commit": "77d923a6710f31cd6f5023e594ccb86ca8f10af6", "Url": "https://api.github.com/repos/pgranieri/cpe103labs", "Date": "2015-10-09T03:49:43Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (throwable instanceof javax.servlet.ServletException) { return ((javax.servlet.ServletException) (throwable)).getRootCause(); }else { throw new java.lang.IllegalArgumentException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4004/buggy-version/src.main.java.net.github.rtc.app.utils.AjaxTimeoutRedirectFilter.java", "BodyUseAPI": [], "Fixed commit": "41cd250c206cd6341f178e331570c67ddd84685a", "Url": "https://api.github.com/repos/ReturnOnIntellingenceTraineeCommunity/rtc-app", "Date": "2015-01-29T01:26:22Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(FeedNewsController.LAST_UPDATE_VIEW_KEY)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (lastUpdate == null) { throw new java.lang.NullPointerException(\"Last Update can not be null\"); }else { if (((feed.getUpdated()) == null) || ((lastUpdate.compareTo(feed.getUpdated())) > 0)) { feed.setUpdated(lastUpdate); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4004/buggy-version/src.main.java.net.github.rtc.app.utils.AtomFeedView.java", "BodyUseAPI": ["java.util.Date.compareTo(feed.getUpdated())", "net.github.rtc.app.utils.Feed.setUpdated(java.util.Date)"], "Fixed commit": "41cd250c206cd6341f178e331570c67ddd84685a", "Url": "https://api.github.com/repos/ReturnOnIntellingenceTraineeCommunity/rtc-app", "Date": "2015-01-29T01:26:22Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (completionListIsOnScreen()) resolveHelpPosition(help_.isVisible()); else help_.hide();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6528/buggy-version/src.gwt.src.org.rstudio.studio.client.workbench.views.console.shell.assist.CompletionPopupPanel.java", "BodyUseAPI": [], "Fixed commit": "9d710294c81034712f59d873df22c71289f59568", "Url": "https://api.github.com/repos/rstudio/rstudio", "Date": "2014-12-04T07:31:59Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (metadataParamTypes == null) { metadataParamTypes = getParamTypesUsingMetadata(connection, queryTemplate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6311/buggy-version/modules.db.src.main.java.org.mule.module.db.internal.resolver.param.DefaultParamTypeResolver.java", "BodyUseAPI": [], "Fixed commit": "53132c9847cb465af49e857c5c3b9ae1677c9672", "Url": "https://api.github.com/repos/mulesoft/mule", "Date": "2014-10-15T19:09:38Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((presenter.isDirty()) != dirty) { presenter.setVeiwDirtyState(dirty); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4472/buggy-version/applications.de-webapp.src.main.java.org.iplantc.de.client.viewer.views.TextViewerImpl.java", "BodyUseAPI": ["org.iplantc.de.client.viewer.views.Presenter.setVeiwDirtyState(java.lang.Boolean)"], "Fixed commit": "73ba0d2fea55047c72034068e9d54bef3b293dbe", "Url": "https://api.github.com/repos/iPlantCollaborativeOpenSource/DiscoveryEnvironment", "Date": "2014-06-04T18:48:17Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(appBase.endsWith(\"/\"))) { path = (appBase + (java.io.File.separator)) + (context.getDocBase()); }else { path = appBase + (context.getDocBase()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3835/buggy-version/components.jaggery-core.org.jaggeryjs.jaggery.core.src.main.java.org.jaggeryjs.jaggery.core.manager.JaggeryDeployerManager.java", "BodyUseAPI": [], "Fixed commit": "dd09ec8a40476c22bafbb2ca1f8442293a6de7b3", "Url": "https://api.github.com/repos/wso2/jaggery", "Date": "2016-07-02T07:09:47Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jaggeryjs.jaggery.tomcat.listener.JaggeryAppListener.getAppBase(org.jaggeryjs.jaggery.tomcat.listener.Context)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(appBase.endsWith(\"/\"))) { path = (appBase + (java.io.File.separator)) + (context.getDocBase()); }else { path = appBase + (context.getDocBase()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3835/buggy-version/components.app-listeners.org.jaggeryjs.jaggery.tomcat.listener.src.main.java.org.jaggeryjs.jaggery.tomcat.listener.JaggeryAppListener.java", "BodyUseAPI": [], "Fixed commit": "dd09ec8a40476c22bafbb2ca1f8442293a6de7b3", "Url": "https://api.github.com/repos/wso2/jaggery", "Date": "2016-07-02T07:09:47Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (contentMD5) { java.lang.String md5 = com.bugull.mongo.utils.StringUtil.encodeMD5(bytes); if (!(com.bugull.mongo.utils.StringUtil.isEmpty(md5))) { response.setHeader(\"Content-MD5\", md5.toLowerCase()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2141/buggy-version/bugu-mongo-fs.src.main.java.com.bugull.mongo.fs.UploadedFileServlet.java", "BodyUseAPI": [], "Fixed commit": "0c6f699cd8d16286eac0353b315c86bbc60a0269", "Url": "https://api.github.com/repos/xbwen/bugu-mongo", "Date": "2016-08-02T01:54:10Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((Settings.newNether) && (Settings.createNether)) { if (world.equals(com.wasteofplastic.askyblock.ASkyBlock.getIslandWorld())) { com.wasteofplastic.askyblock.ASkyBlock.getNetherWorld().regenerateChunk(x, z); } if (world.equals(com.wasteofplastic.askyblock.ASkyBlock.getNetherWorld())) { com.wasteofplastic.askyblock.ASkyBlock.getIslandWorld().regenerateChunk(x, z); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6554/buggy-version/src.com.wasteofplastic.askyblock.DeleteIslandChunk.java", "BodyUseAPI": [], "Fixed commit": "062b22ef8a2bd95759bce79f25e5cb69a813fc9c", "Url": "https://api.github.com/repos/tastybento/askyblock", "Date": "2015-09-14T02:04:38Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(file.exists())) { file = new java.io.File(((igwmod.IGWMod.proxy.getSaveLocation()) + \"\\\\igwmodServer\\\\properties.txt\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8892/buggy-version/src.igwmod.IGWMod.java", "BodyUseAPI": [], "Fixed commit": "9b0f2ecb272b1c7b5cbf94db00d2d2e7cfe964c1", "Url": "https://api.github.com/repos/MineMaarten/IGW-mod", "Date": "2015-04-23T21:23:21Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(serverFolder.exists())) { serverFolder = new java.io.File(((IGWMod.proxy.getSaveLocation()) + \"\\\\igwmodServer\\\\\")); if (serverFolder.exists()) { igwmod.lib.IGWLog.warning(\"Found IGW Mod server page in the 'igwmodServer' folder. This is deprecated! Rename the folder to 'igwmod' instead.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8892/buggy-version/src.igwmod.ServerProxy.java", "BodyUseAPI": [], "Fixed commit": "9b0f2ecb272b1c7b5cbf94db00d2d2e7cfe964c1", "Url": "https://api.github.com/repos/MineMaarten/IGW-mod", "Date": "2015-04-23T21:23:21Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.lang.reflect.Modifier.isStatic(method.getModifiers())) { com.netflix.governator.lifecycle.LifecycleMethods.log.warn((((\"static lifecycle method: \" + method) + \", target=\") + target)); handler.invoke(); }else { handler.invoke(target); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2002/buggy-version/governator-legacy.src.main.java.com.netflix.governator.lifecycle.LifecycleMethods.java", "BodyUseAPI": ["org.slf4j.Logger.warn(java.lang.String)"], "Fixed commit": "6dafe2d14da1f8e190f786d33639e7f4b7e24bd7", "Url": "https://api.github.com/repos/tcellucci/governator", "Date": "2016-10-10T21:27:43Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (session.getLoginName().equals(loginName)) throw new java.lang.IllegalStateException(\"cannot delete your own account\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4315/buggy-version/araqne-logdb.src.main.java.org.araqne.logdb.impl.AccountServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "80cb7004b871b37c33b3efc29ba789f2c60b6c92", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2013-06-07T09:31:14Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.HttpURLConnection.getContentEncoding()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((null != content_encode) && (!(\"\".equals(content_encode)))) && (content_encode.equals(\"gzip\"))) { is = new java.util.zip.GZIPInputStream(is); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6444/buggy-version/src.org.qii.weiciyuan.support.http.JavaHttpUtility.java", "BodyUseAPI": [], "Fixed commit": "7156efdc0f7f698ebe06f67b5cd6aa7098e5279b", "Url": "https://api.github.com/repos/Max-Sum/weiciyuan", "Date": "2014-03-10T15:20:46Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.core.Authentication.getName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (username.equals(\"anonymousUser\")) { return \"welcome\"; }else { com.norstc.asb.controller.WelcomeController.log.info((\"have logged in as : \" + username)); return \"redirect:/stock/target\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2685/buggy-version/src.main.java.com.norstc.asb.controller.WelcomeController.java", "BodyUseAPI": ["org.slf4j.Logger.info(java.lang.String)"], "Fixed commit": "0c50091837dd3ee5e3eaf0089651783a79031bf9", "Url": "https://api.github.com/repos/norstc/asb", "Date": "2017-11-21T12:52:41Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((context) != null) { progressDialog = android.app.ProgressDialog.show(getContext(), \"\", \"\u6b63\u5728\u52a0\u8f7d\"); getInfo(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4899/buggy-version/app.src.main.java.com.wangh.e_university.ChoosingIndexFragment.java", "BodyUseAPI": [], "Fixed commit": "4ffaed66dc10cb4a7544b9b3088e58ae79c9922b", "Url": "https://api.github.com/repos/GalaxyDL/e_University", "Date": "2017-03-01T14:38:46Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(dbf.isExist(p.hostUuid, org.zstack.header.host.HostVO.class))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8024/buggy-version/plugin.localstorage.src.main.java.org.zstack.storage.primary.local.LocalStorageImageCleaner.java", "BodyUseAPI": [], "Fixed commit": "a5e50934bb5c84c1d5829dd13b5179228571f113", "Url": "https://api.github.com/repos/camilesing/zstack", "Date": "2017-04-06T02:38:47Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (idx == (-1)) { return orderedChroms; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3823/buggy-version/SamTextViewer.src.tracks.IntervalFeatureSet.java", "BodyUseAPI": [], "Fixed commit": "00de20f722d64d732b7b0615e56e76ebbc44698e", "Url": "https://api.github.com/repos/dariober/Java-cafe", "Date": "2015-11-09T08:31:38Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pos >= (strDepth.size())) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3823/buggy-version/SamTextViewer.src.tracks.TextProfile.java", "BodyUseAPI": [], "Fixed commit": "00de20f722d64d732b7b0615e56e76ebbc44698e", "Url": "https://api.github.com/repos/dariober/Java-cafe", "Date": "2015-11-09T08:31:38Z"},
{"Line": "=>1765", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["one.lindegaard.MobHunting.compatibility.MyPetCompat.getMyPetOwner(org.bukkit.entity.Entity)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (p != null) return p;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5809/buggy-version/src.one.lindegaard.MobHunting.MobHuntingManager.java", "BodyUseAPI": [], "Fixed commit": "53da6521779ce04337746181051fd15e229bd74a", "Url": "https://api.github.com/repos/Rocologo/MobHunting", "Date": "2017-07-06T17:06:26Z"},
{"Line": "=>1769", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.WeakHashMap<org.bukkit.entity.LivingEntity, one.lindegaard.MobHunting.DamageInformation>.get(org.bukkit.entity.Entity)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((damageInformation != null) && (damageInformation.isCrackShotWeaponUsed())) return damageInformation.getAttacker();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5809/buggy-version/src.one.lindegaard.MobHunting.MobHuntingManager.java", "BodyUseAPI": ["one.lindegaard.MobHunting.DamageInformation.getAttacker()"], "Fixed commit": "53da6521779ce04337746181051fd15e229bd74a", "Url": "https://api.github.com/repos/Rocologo/MobHunting", "Date": "2017-07-06T17:06:26Z"},
{"Line": "=>1761", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (killer != null) return killer;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5809/buggy-version/src.one.lindegaard.MobHunting.MobHuntingManager.java", "BodyUseAPI": [], "Fixed commit": "53da6521779ce04337746181051fd15e229bd74a", "Url": "https://api.github.com/repos/Rocologo/MobHunting", "Date": "2017-07-06T17:06:26Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (j == (i - 4)) { maxNumberOfStraight = ((byte) (i + 2)); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/221/buggy-version/src.main.java.org.slingerxv.limitart.game.poker.texas.TXCardsCalculator.java", "BodyUseAPI": [], "Fixed commit": "7943b6bb31cd38655f543be60d1f3ef28e9aa67d", "Url": "https://api.github.com/repos/HankXV/Limitart", "Date": "2017-07-19T09:11:31Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p < 2.0E-323) { p = 2.0E-323; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/241/buggy-version/eqtl-mapping-pipeline.src.main.java.eqtlmappingpipeline.interactionanalysis.InteractionAnalysisTask.java", "BodyUseAPI": [], "Fixed commit": "d55c1ce7eb77e82914bd1343788030fd3a7c906d", "Url": "https://api.github.com/repos/Bonder-MJ/systemsgenetics", "Date": "2014-11-28T05:02:22Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p < 2.0E-323) { p = 2.0E-323; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/241/buggy-version/eqtl-mapping-pipeline.src.main.java.eqtlmappingpipeline.interactionanalysis.InteractionAnalysisTask.java", "BodyUseAPI": [], "Fixed commit": "d55c1ce7eb77e82914bd1343788030fd3a7c906d", "Url": "https://api.github.com/repos/Bonder-MJ/systemsgenetics", "Date": "2014-11-28T05:02:22Z"},
{"Line": "=>916", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dva.getComment()) != null) { if ((!(dva.getComment().isEmpty())) && ((dva.getComment()) != \"\")) { techComment = \"Yes\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2426/buggy-version/dhis-2.dhis-web.dhis-web-ivb.src.main.java.org.hisp.dhis.ivb.dataentry.action.LoadDataEntryFormAction.java", "BodyUseAPI": ["org.hisp.dhis.datavalue.DataValueAudit.getComment()", "dva.getComment().isEmpty()", "org.hisp.dhis.datavalue.DataValueAudit.getComment()"], "Fixed commit": "0f09ee583a839d336a1ffa5117a1b9744e004866", "Url": "https://api.github.com/repos/hispindia/dhis2-Core", "Date": "2017-06-13T12:57:34Z"},
{"Line": "=>504", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mDefaultSelector) { tabView.setBackgroundResource(getTabBackground()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3708/buggy-version/library.src.main.java.com.guerinet.materialtabs.TabLayout.java", "BodyUseAPI": [], "Fixed commit": "cb1713fba947d3ea77c9aa4cc74b68e35db78e4b", "Url": "https://api.github.com/repos/jguerinet/material-tabs", "Date": "2015-05-22T22:24:01Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mat.getActiveTechnique()) != null) { dummy.selectTechnique(mat.getActiveTechnique().getDef().getName(), com.jme3.gde.core.scene.SceneApplication.getApplication().getRenderManager()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/395/buggy-version/sdk.jme3-materialeditor.src.com.jme3.gde.materials.MaterialPreviewRenderer.java", "BodyUseAPI": ["com.jme3.material.Material.getActiveTechnique()", "mat.getActiveTechnique().getDef().getName()", "mat.getActiveTechnique().getDef()", "com.jme3.material.Material.selectTechnique(mat.getActiveTechnique().getDef().getName(),com.jme3.gde.core.scene.SceneApplication.getApplication().getRenderManager())"], "Fixed commit": "0e1619c01bdf868ffd49547923224d994482b5d2", "Url": "https://api.github.com/repos/jMonkeyEngine/jmonkeyengine", "Date": "2015-02-16T14:13:07Z"},
{"Line": "=>436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) < (android.os.Build.VERSION_CODES.HONEYCOMB)) { amount.setGravity(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4247/buggy-version/src.it.wm.perdue.coupon.CheckoutListFragment.java", "BodyUseAPI": [], "Fixed commit": "28ab5eca3654f6273b6140c0ade0bcab0d0753ce", "Url": "https://api.github.com/repos/eltazar/x2Android", "Date": "2013-03-08T10:45:43Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (params != null) { for (java.util.Map.Entry<java.lang.String, java.lang.Object> param : params.entrySet()) { if (i > 0) { sb.append('&'); } sb.append(param.getKey()).append('=').append(param.getValue()); i++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3466/buggy-version/src.main.java.org.claret.utils.NetUtils.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.entrySet()"], "Fixed commit": "b9030490e825d00772238a475b688c947c4782fd", "Url": "https://api.github.com/repos/lvyahui8/jutils", "Date": "2016-09-22T16:04:37Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isNestedScrollViewScrollable)) { mAppBarLayout.setExpanded(true, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3953/buggy-version/app.src.main.java.cn.j1angvei.cnbetareader.animation.AppBarLayoutNotEmptyBehavior.java", "BodyUseAPI": [], "Fixed commit": "ce7b63d947068129318a1ed223d513fd5f376819", "Url": "https://api.github.com/repos/j1angvei/CB-News", "Date": "2016-07-26T15:28:00Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.manywho.sdk.services.configuration.ConfigurationParser.from(com.manywho.sdk.api.describe.DescribeServiceRequest)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((serviceConfiguration.getPdfFormUrl()) != null) { if (com.google.common.base.Strings.isNullOrEmpty(serviceConfiguration.getPdfFormUrl())) { throw new java.lang.RuntimeException(\"The PDF Type Name can not be empty if PDF Form URL is populated\"); } return describeTypeService.getListTypeElement(serviceConfiguration.getPdfFormUrl()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1418/buggy-version/src.main.java.com.manywho.services.pdf.types.RawTypeProvider.java", "BodyUseAPI": ["com.manywho.services.pdf.ServiceConfiguration.getPdfFormUrl()", "com.manywho.services.pdf.managers.DescribeManager.getListTypeElement(serviceConfiguration.getPdfFormUrl())", "com.manywho.services.pdf.ServiceConfiguration.getPdfFormUrl()", "com.google.common.base.Strings.isNullOrEmpty(serviceConfiguration.getPdfFormUrl())"], "Fixed commit": "81b8f2aa9fc3bbe7997036ea091fe8cfe3f07ebc", "Url": "https://api.github.com/repos/manywho/service-pdf", "Date": "2017-07-14T08:57:08Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.toString().length()) > 580) error = e.toString().substring(0, 580);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5412/buggy-version/myBudget.src.main.java.com.gmail.ramawathar.priyash.businessLogic.StandardBankMessage.java", "BodyUseAPI": ["java.lang.Exception.toString()", "java.lang.String.substring(int,int)"], "Fixed commit": "a82eef412b12e004bfc6b21a5f7f43c452023d62", "Url": "https://api.github.com/repos/priyashR/LocalProjects", "Date": "2017-08-11T10:54:14Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.toString().length()) > 580) error = e.toString().substring(0, 580);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5412/buggy-version/myBudget.src.main.java.com.gmail.ramawathar.priyash.businessLogic.ABSAMessage.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.Exception.toString()"], "Fixed commit": "a82eef412b12e004bfc6b21a5f7f43c452023d62", "Url": "https://api.github.com/repos/priyashR/LocalProjects", "Date": "2017-08-11T10:54:14Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.htmlDocument) != null) { java.io.FileWriter fileWriter = new java.io.FileWriter(saveLocation); java.io.BufferedWriter bufferedWriter = new java.io.BufferedWriter(fileWriter); bufferedWriter.write(this.htmlDocument.body().html()); bufferedWriter.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3358/buggy-version/src.crawler.Spider.java", "BodyUseAPI": [], "Fixed commit": "4c752a5acd517bdde231867d10a33a278449e2dd", "Url": "https://api.github.com/repos/eckucukoglu/custom-web-se", "Date": "2015-06-03T11:01:07Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (intent == null) { android.util.Log.d(com.app.kent.volume.NotificationService.TAG, \"intent = null\"); return START_REDELIVER_INTENT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7073/buggy-version/app.src.main.java.com.app.kent.volume.NotificationService.java", "BodyUseAPI": [], "Fixed commit": "6e25cf15e7873d6a5289608fde41fa05febb0095", "Url": "https://api.github.com/repos/kent2480/Volume", "Date": "2015-05-25T11:20:38Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getExecutionCourse().getAssociatedShifts().size()) == 0) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6350/buggy-version/src.main.java.net.sourceforge.fenixedu.domain.Attends.java", "BodyUseAPI": [], "Fixed commit": "1e2057af5163441a0567ed4f07e00ffb69f6e833", "Url": "https://api.github.com/repos/mbborgez/fenix", "Date": "2014-07-17T11:15:05Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (serverClassLoader != null) { java.lang.Thread.currentThread().setContextClassLoader(serverClassLoader); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3942/buggy-version/bpm.bonita-core.bonita-process-engine.src.main.java.org.bonitasoft.engine.api.impl.ServerAPIImpl.java", "BodyUseAPI": ["java.lang.Thread.setContextClassLoader(java.lang.ClassLoader)"], "Fixed commit": "5b362731c2021ad01ad79bb70cc3a615ee62cd08", "Url": "https://api.github.com/repos/bonitasoft/bonita-engine", "Date": "2013-07-16T13:20:48Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sheepit.client.standalone.GuiSwing.getClient()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((client != null) && (client.isSuspended())) { pauseButton.setText(\"Resume\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/325/buggy-version/src.com.sheepit.client.standalone.swing.activity.Working.java", "BodyUseAPI": [], "Fixed commit": "e5d6587d443413861721c6e946df7d629c5eeb6b", "Url": "https://api.github.com/repos/laurent-clouet/sheepit-client", "Date": "2017-01-29T20:03:38Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (t != null) { t.trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8736/buggy-version/src.main.java.org.elasticsearch.rest.action.readonlyrest.ConfigurationHelper.java", "BodyUseAPI": [], "Fixed commit": "8fd9e340165266e5ab8bf50ea44e0df1fd0345cf", "Url": "https://api.github.com/repos/sscarduzio/elasticsearch-readonlyrest-plugin", "Date": "2014-06-03T13:56:32Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.net.ConnectivityManager.getActiveNetworkInfo()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (nf != null) { if ((sharedPreferences.getBoolean(\"pref_smart_sizing_on/off\", true)) && (isMetered(nf))) return sharedPreferences.getString(\"pref_smart_sizing_size\", \"small\"); else return sharedPreferences.getString(\"pref_viewer_image_size\", \"med\"); }else { android.util.Log.d(getString(R.string.app_tag), \"NetworkInfo null!\"); return sharedPreferences.getString(\"pref_viewer_image_size\", \"med\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1390/buggy-version/PuffinFeeder.src.main.java.edu.alaska.gina.feeder.puffinfeeder.ImageViewerFragment.java", "BodyUseAPI": ["edu.alaska.gina.feeder.puffinfeeder.ImageViewerFragment.isMetered(android.net.NetworkInfo)"], "Fixed commit": "3300b72d18ff7a0eecd5fce5e83381b3bc83fceb", "Url": "https://api.github.com/repos/BobbySig/gina-puffinfeeder-android-viewer", "Date": "2013-07-30T18:24:36Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dasein.cloud.network.RuleTarget.getRuleTargetType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (destinationType.equals(RuleTargetType.GLOBAL)) { if ((permission.equals(Permission.ALLOW)) && (direction.equals(Direction.INGRESS))) { throw new org.dasein.cloud.InternalException(\"Ingress rules with allow permission and a global destination are not supported in Terremark.\"); } destinationTypeElement.appendChild(doc.createTextNode(\"Any\")); destinationElement.appendChild(destinationTypeElement); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5539/buggy-version/src.main.java.org.dasein.cloud.terremark.network.FirewallRule.java", "BodyUseAPI": [], "Fixed commit": "fad70c45b0a0b5eafd784809a3637703c46547a8", "Url": "https://api.github.com/repos/greese/dasein-cloud-terremark", "Date": "2013-08-30T19:45:37Z"},
{"Line": "=>857", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((destinationType != null) && (permission != null)) { if ((destinationType.equals(\"Any\")) && (permission.equals(Permission.ALLOW))) { direction = org.dasein.cloud.network.Direction.EGRESS; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5539/buggy-version/src.main.java.org.dasein.cloud.terremark.network.FirewallRule.java", "BodyUseAPI": ["org.dasein.cloud.network.Permission.equals(Permission.ALLOW)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "fad70c45b0a0b5eafd784809a3637703c46547a8", "Url": "https://api.github.com/repos/greese/dasein-cloud-terremark", "Date": "2013-08-30T19:45:37Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentTime) == 0) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1207/buggy-version/core.src.olof.sjoholm.game.server.objects.ConveyorBelt.java", "BodyUseAPI": [], "Fixed commit": "a206053260354ac78b2fe88c987318061c3edadf", "Url": "https://api.github.com/repos/ollesate/ElectroRobot", "Date": "2017-12-19T09:56:36Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (JNIService.JNI_BROADCAST_USER_UPDATE_NAME_OR_SIGNATURE.equals(intent.getAction())) { android.os.Message.obtain(mHandler, com.v2tech.view.ContactsTabFragment.UPDATE_USER_SIGN, intent.getExtras().get(\"uid\")).sendToTarget(); }else if ((JNIService.JNI_BROADCAST_GROUP_USER_ADDED.equals(intent.getAction())) || (JNIService.JNI_BROADCAST_GROUP_USER_REMOVED.equals(intent.getAction()))) { com.v2tech.view.bo.GroupUserObject guo = ((com.v2tech.view.bo.GroupUserObject) (intent.getExtras().get(\"obj\"))); if (((flag) == (com.v2tech.view.ContactsTabFragment.TAG_CONTACT)) && ((guo.getmType()) == (Group.GroupType.CONTACT.intValue()))) { } for (com.v2tech.view.ContactsTabFragment.ListItem item : mItemList) { if ((item.g) != null) { ((com.v2tech.view.contacts.ContactGroupView) (item.v)).updateUserStatus(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1622/buggy-version/source.src.com.v2tech.view.ContactsTabFragment.java", "BodyUseAPI": ["android.os.Message.obtain(com.v2tech.view.ContactsTabFragment.ContactsHandler,int,intent.getExtras().get(\"uid\"))", "intent.getExtras().get(java.lang.String)", "JNIService.JNI_BROADCAST_GROUP_USER_ADDED.equals(intent.getAction())", "android.content.Intent.getExtras()", "android.os.Message.obtain(mHandler, com.v2tech.view.ContactsTabFragment.UPDATE_USER_SIGN, intent.getExtras().get(\"uid\")).sendToTarget()", "JNIService.JNI_BROADCAST_GROUP_USER_REMOVED.equals(intent.getAction())", "android.content.Intent.getAction()", "android.content.Intent.getAction()", "android.content.Intent.getExtras()", "intent.getExtras().get(java.lang.String)"], "Fixed commit": "0fa4448f32644330eac98f021c5635d6c22326eb", "Url": "https://api.github.com/repos/jiangzhen1984/V2TechConferenceClient", "Date": "2014-05-27T14:49:59Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cb_savePwd.isSelected()) com.voyager.utils.ConfigUtils.addConfig(\"savePwd\", \"true\"); else com.voyager.utils.ConfigUtils.addConfig(\"savePwd\", \"false\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8159/buggy-version/src.com.voyager.ui.Login.java", "BodyUseAPI": [], "Fixed commit": "ef6988d3f206630d3aab9315b79023532133ff37", "Url": "https://api.github.com/repos/a-voyager/LoginSystem_Client", "Date": "2016-01-11T13:20:53Z"},
{"Line": "=>467", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getLocalClassName().equals(\"MainActivity\")) { android.widget.TextView t = ((android.widget.TextView) (findViewById(R.id.introductoryText))); t.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6134/buggy-version/src.com.technionrankerv1.SearchResults.java", "BodyUseAPI": [], "Fixed commit": "e8e2ddd5cad262cc6787170cc8495425059d9ca0", "Url": "https://api.github.com/repos/firstdown77/TechnionRanker", "Date": "2014-06-15T20:35:29Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["at.spardat.xma.xdelta.JarPatcher.getEntry(org.apache.commons.compress.archivers.zip.ZipFile,java.lang.String,long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (JarDelta.zipFilesPattern.matcher(sourceEntry.getName()).matches()) { crc = sourceEntry.getCrc(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7896/buggy-version/src.main.java.at.spardat.xma.xdelta.JarPatcher.java", "BodyUseAPI": ["org.apache.commons.compress.archivers.zip.ZipArchiveEntry.getCrc()"], "Fixed commit": "a2825801ec17814ff8ee34e7275dbaa06dca0f44", "Url": "https://api.github.com/repos/NitorCreations/javaxdelta", "Date": "2015-08-28T18:14:17Z"},
{"Line": "=>466", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.hive.ql.parse.ASTNode.getChild(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((wAdminOption.getToken().getType()) == (HiveParser.TOK_GRANT_WITH_ADMIN_OPTION)) { rolesStartPos = 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2866/buggy-version/ql.src.java.org.apache.hadoop.hive.ql.parse.DDLSemanticAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "8479e60ab25153b4665823706fb9a95026ef8e4c", "Url": "https://api.github.com/repos/thejasmn/hive", "Date": "2014-01-02T03:03:47Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((stack.getStackDepth()) > 1) { edu.umd.cs.findbugs.OpcodeStack.Item itm = stack.getStackItem(0); if ((itm.getConstant()) != null) { it.remove(); continue; } edu.umd.cs.findbugs.ba.XMethod constantSource = itm.getReturnValueOf(); if (constantSource != null) { if (!(\"size\".equals(constantSource.getMethodDescriptor().getName()))) { it.remove(); continue; } }else if ((getPrevOpcode(1)) != (ARRAYLENGTH)) { it.remove(); continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3896/buggy-version/src.com.mebigfatguy.fbcontrib.detect.ListIndexedIterating.java", "BodyUseAPI": ["edu.umd.cs.findbugs.OpcodeStack.getStackItem(int)"], "Fixed commit": "2e611b9b78a6d4ba4f5a24e96080bb48b9aed656", "Url": "https://api.github.com/repos/ThrawnCA/fb-contrib", "Date": "2016-11-01T04:31:10Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(excludeFiles.isEmpty())) { excludeFiles.stream().forEach(( x) -> { if (!(x.equals(tmpFilename.getName()))) { inputFiles.add(tmpFilename); } }); }else { inputFiles.add(fileArray[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4204/buggy-version/src.main.java.gr.kzps.FileCrypto.filesystem.FilesystemOperations.java", "BodyUseAPI": ["java.util.stream.Stream<java.lang.String>.forEach(java.util.function.Consumer<? super java.lang.String>)", "java.util.List<java.lang.String>.stream()"], "Fixed commit": "63ecd2da8d637d259bdb65dec1c969143b559e46", "Url": "https://api.github.com/repos/kouzant/FileCrypto", "Date": "2015-06-09T19:31:39Z"},
{"Line": "=>1006", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(tk.wasdennnoch.androidn_ify.utils.ConfigUtils.qs().keep_header_background)) { try { de.robv.android.xposed.XposedHelpers.findAndHookMethod(classStatusBarHeaderView, \"doUpdateStatusBarCustomHeader\", android.graphics.drawable.Drawable.class, boolean.class, XC_MethodReplacement.DO_NOTHING); } catch (java.lang.Throwable ignore) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/186/buggy-version/app.src.main.java.tk.wasdennnoch.androidn_ify.systemui.notifications.StatusBarHeaderHooks.java", "BodyUseAPI": [], "Fixed commit": "2abaebf4ae2c309cfcb6873c7905a45524d140c9", "Url": "https://api.github.com/repos/Unpublished/AndroidN-ify", "Date": "2016-09-18T18:48:46Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { wv.loadUrl(url); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/9161/buggy-version/app.src.main.java.com.ibm.iot.android.iotstarter.activities.WebActivity.java", "BodyUseAPI": [], "Fixed commit": "5aba20eb463120edf6739d39a7b68c772218d200", "Url": "https://api.github.com/repos/ibm-watson-iot/iot-starter-for-android", "Date": "2016-01-19T17:37:04Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(javax.swing.JFrame,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (amountString == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8617/buggy-version/PizzaOrderingSystem.src.main.java.cs414.pos.ui.PlaceOrderUI.java", "BodyUseAPI": [], "Fixed commit": "d16466e1c62c83eafa2d5005a46b69dd8caeb7be", "Url": "https://api.github.com/repos/shimon0505004/CS414_ColoState", "Date": "2014-10-29T22:36:55Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(scan.hasNext())) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3854/buggy-version/Project.src.app.ClassSerializer.java", "BodyUseAPI": [], "Fixed commit": "a27ab1fa509bf1c48ca93ebbd431ee60ff657106", "Url": "https://api.github.com/repos/lihanchen/FitnessTrackerPro", "Date": "2015-04-03T01:29:14Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (Logger.debugMode) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4111/buggy-version/src.main.java.ch.eonum.TypeResolver.java", "BodyUseAPI": [], "Fixed commit": "a50a6e95b7e8aff635e7cb7e178b0e2632a478b9", "Url": "https://api.github.com/repos/pse-team2/eonum-client", "Date": "2012-05-07T11:27:05Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((entries.length) == 0) { return this.suppressed; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5496/buggy-version/src.main.org.deidentifier.arx.framework.check.groupify.HashGroupifyDistribution.java", "BodyUseAPI": [], "Fixed commit": "1d6838d14c10b0cc0e4b27429293860980a77c11", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2015-03-02T12:11:59Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mediaPlayer) != null) { return mediaPlayer.getCurrentPosition(); }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6296/buggy-version/app.src.main.java.com.codepath.insync.utils.VideoPlayer.java", "BodyUseAPI": [], "Fixed commit": "5fe51f3dc08a56c599bd28791176e4b4d4339957", "Url": "https://api.github.com/repos/InSyncCodepath/InSync", "Date": "2017-04-26T16:27:59Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cpw.mods.fml.common.Loader.isModLoaded(\"MineFactoryReloaded\")) || (cpw.mods.fml.common.Loader.isModLoaded(\"JABBA\"))) { dan200.computercraft.api.ComputerCraftAPI.registerPeripheralProvider(new pl.asie.computronics.integration.mfr.DeepStorageUnitPeripheral()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4571/buggy-version/src.main.java.pl.asie.computronics.Computronics.java", "BodyUseAPI": [], "Fixed commit": "1e5e48df52e8ac92e6dba03f5c6b39907a747126", "Url": "https://api.github.com/repos/asiekierka/Computronics", "Date": "2014-07-25T19:54:09Z"},
{"Line": "=>883", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.liferay.portal.service.impl.GroupLocalServiceImpl._log.isWarnEnabled()) { com.liferay.portal.service.impl.GroupLocalServiceImpl._log.warn((\"No resources found for group \" + (group.getGroupId()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1314/buggy-version/portal-impl.src.com.liferay.portal.service.impl.GroupLocalServiceImpl.java", "BodyUseAPI": ["com.liferay.portal.kernel.log.Log.warn((\"No resources found for group \" + (group.getGroupId())))"], "Fixed commit": "043784ae8668995934d2e26b9b148f63713a0192", "Url": "https://api.github.com/repos/csierra/liferay-portal", "Date": "2016-04-28T15:00:06Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nextLocalId) > 0) nextLocalId = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/737/buggy-version/app.src.main.java.com.sinergiass.asistencia.OperadorActivity.java", "BodyUseAPI": [], "Fixed commit": "c344e356315618c60f032d1ca3b5e3447a33f8e2", "Url": "https://api.github.com/repos/1990jmirandar/Asistencia", "Date": "2017-10-05T13:09:35Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.math.BigDecimal.class.equals(requiredType)) { value = rs.getBigDecimal(index); }else if (java.math.BigInteger.class.equals(requiredType)) { value = rs.getBigDecimal(index); }else if (java.sql.Blob.class.equals(requiredType)) { value = rs.getBlob(index); }else if (java.sql.Clob.class.equals(requiredType)) { value = rs.getClob(index); }else if (byte[].class.equals(requiredType)) { try { byte[] bytes = rs.getBytes(index); if (bytes == null) { value = null; }else { value = new java.lang.String(bytes, \"ISO-8859-1\"); } } catch (java.io.UnsupportedEncodingException e) { throw new java.sql.SQLException(e); } }else { value = com.alibaba.otter.node.etl.common.db.utils.SqlUtils.getResultSetValue(rs, index); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2859/buggy-version/node.etl.src.main.java.com.alibaba.otter.node.etl.common.db.utils.SqlUtils.java", "BodyUseAPI": ["java.lang.Class.equals(java.lang.Class<?>)", "java.lang.Class.equals(java.lang.Class<?>)", "java.lang.Class.equals(java.lang.Class<?>)", "java.lang.Class.equals(java.lang.Class<?>)"], "Fixed commit": "ffd7eb4942dd6dad97b10b0ca281ee139e921376", "Url": "https://api.github.com/repos/alibaba/otter", "Date": "2014-01-10T07:52:41Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((file) != null) { fileReaderBean.getWordsFromFile(file, file.getSubmittedFileName(), java.lang.Long.parseLong(utils.SessionUtils.getUserId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/630/buggy-version/PolyLingua-view.PolyLinguaWeb.src.words.FileUploadBacking.java", "BodyUseAPI": [], "Fixed commit": "0d15e411afbadbaf460234e3cc0e7ee9173c4883", "Url": "https://api.github.com/repos/Ted0ka/PolyLingua-EJB3", "Date": "2017-12-20T20:52:43Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (event instanceof org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent) { assert last == null; aggregateEvent = ((org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent) (event)); }else if (last == null) { aggregateEvent = org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent.getAggregatedEvent(event, eventCountOnCreation); }else { assert last instanceof org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent; org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent aggregateLastEvent = ((org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent) (last)); aggregateEvent = org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent.appendOneEditEvent(aggregateLastEvent, event, eventCountOnCreation, toNewDuration); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/819/buggy-version/org.eclipse.mylyn.context.core.src.org.eclipse.mylyn.internal.context.core.DegreeOfInterest.java", "BodyUseAPI": ["org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent.getAggregatedEvent(org.eclipse.mylyn.monitor.core.InteractionEvent,int)", "org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent.appendOneEditEvent(org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent,org.eclipse.mylyn.monitor.core.InteractionEvent,int,boolean)"], "Fixed commit": "6ad40edea07e20fc33676b9e2b6f75a406e65186", "Url": "https://api.github.com/repos/conachang/mylyn.context", "Date": "2015-05-28T07:39:07Z"},
{"Line": "=>827", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (logicAdded) { configProps.setProperty(\"LogicFile\", logicFile.getPath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1429/buggy-version/SWP2015.src.gui.GUI.java", "BodyUseAPI": [], "Fixed commit": "87ec7d417842949c0ab241dde64deb6b47964efd", "Url": "https://api.github.com/repos/135Shadowsoul/SWP2015", "Date": "2015-07-01T06:51:30Z"},
{"Line": "=>752", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getTier().getSpeaker()) != null) { token2Speaker.put(sToken, event.getTier().getSpeaker()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3403/buggy-version/src.main.java.org.corpus_tools.peppermodules.exmaralda.EXMARaLDA2SaltMapper.java", "BodyUseAPI": ["de.hu_berlin.german.korpling.saltnpepper.misc.exmaralda.Event.getTier()", "java.util.Map<org.corpus_tools.salt.common.SToken, de.hu_berlin.german.korpling.saltnpepper.misc.exmaralda.Speaker>.put(org.corpus_tools.salt.common.SToken,event.getTier().getSpeaker())", "event.getTier().getSpeaker()"], "Fixed commit": "600ed184f32f2db9c84d37b3c8fec8049a0ff158", "Url": "https://api.github.com/repos/korpling/pepperModules-EXMARaLDAModules", "Date": "2015-10-19T12:15:51Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.util.LinkedList<V>>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(keyValues.contains(value))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2201/buggy-version/kovacs-tamas.1.src.com.gmail.kovtamas1991.collections.ListBasedMultiMap.java", "BodyUseAPI": [], "Fixed commit": "2dbb306a2ecc1174e310ba9bcd9f9c5c0d90296c", "Url": "https://api.github.com/repos/schonherz-java-ee-2016-q4/homework", "Date": "2016-11-15T19:03:56Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.util.LinkedList<V>>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((keyValues.size()) == 1) { keys.remove(keyIndex); values.remove(keyIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2201/buggy-version/kovacs-tamas.1.src.com.gmail.kovtamas1991.collections.ListBasedMultiMap.java", "BodyUseAPI": [], "Fixed commit": "2dbb306a2ecc1174e310ba9bcd9f9c5c0d90296c", "Url": "https://api.github.com/repos/schonherz-java-ee-2016-q4/homework", "Date": "2016-11-15T19:03:56Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (result != null) { java.lang.String check = join(result, \"\"); if (lcWord.equals(check.toLowerCase())) { result = splitEqually(result, word); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8657/buggy-version/src.main.java.de.danielnaber.jwordsplitter.ExceptionSplits.java", "BodyUseAPI": ["de.danielnaber.jwordsplitter.ExceptionSplits.join(java.util.List<java.lang.String>,java.lang.String)", "de.danielnaber.jwordsplitter.ExceptionSplits.splitEqually(java.util.List<java.lang.String>,java.lang.String)"], "Fixed commit": "2c632d9fc009185f0efaad1b6d298fe7959a8389", "Url": "https://api.github.com/repos/kraftb/jwordsplitter", "Date": "2013-12-27T14:59:49Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(opt.isPresent())) { return source; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1387/buggy-version/jambeth.jambeth-merge.src.main.java.com.koch.ambeth.merge.copy.ObjectCopier.java", "BodyUseAPI": [], "Fixed commit": "aa3865ba484fc70168347e53555b7498758c69c1", "Url": "https://api.github.com/repos/Dennis-Koch/ambeth", "Date": "2017-09-28T14:36:19Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((txtviewTotal) != null) { txtviewTotal.setText(\"\"); txtviewTotal.setText(getResources().getText(R.string.message_lista_total_cartera)); txtviewTotal.setText((((txtviewTotal.getText()) + \" \") + (java.lang.String.valueOf(amount)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7151/buggy-version/SifaApp.app.src.main.java.yio.io.sifaapp.fragment.CarteraListFragment.java", "BodyUseAPI": [], "Fixed commit": "91098d223b4fa41aa6e6d6e1de3276ed611c7737", "Url": "https://api.github.com/repos/jovan688/app", "Date": "2017-03-27T00:48:49Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((pathElements[idx].length()) > 0) { directoryActual += (pathElements[idx]) + \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7568/buggy-version/src.com.matburt.mobileorg.Synchronizer.java", "BodyUseAPI": [], "Fixed commit": "a92bce4980b650b699f7334f86ccee845f7aab6d", "Url": "https://api.github.com/repos/sachac/mobileorg-android", "Date": "2009-12-13T19:19:42Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"\".equals(bal)) { bal = \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3910/buggy-version/HttpBank.src.servlet.bank.BankServlet.java", "BodyUseAPI": [], "Fixed commit": "2537e7702c573095134cc7a0f37602d51a74c100", "Url": "https://api.github.com/repos/Grisu118/vesys", "Date": "2015-03-16T17:38:37Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIntent().getStringExtra(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((targetActivity != null) && (targetActivity.equalsIgnoreCase(com.extenprise.mapp.medico.customer.activity.BookAppointmentActivity.class.getName()))) { mLoginType = com.extenprise.mapp.medico.net.MappService.CUSTOMER_LOGIN; mRadioGroupUType.check(R.id.radioButtonPatient); findViewById(R.id.radioButtonMedServiceProvider).setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5249/buggy-version/app.src.main.java.com.extenprise.mapp.medico.activity.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "0bd0329fed63c16b7c8d0549b4712df2f7858a67", "Url": "https://api.github.com/repos/ambey/MobApp", "Date": "2016-02-26T10:19:07Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((a.length) > 0) { round = java.lang.Integer.parseInt(a[0]); }else { round = 1000000000; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/418/buggy-version/src.main.java.me.piebridge.SwitchString.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "9e7ffe19b895c1b3145e164be0cb11785fab3ade", "Url": "https://api.github.com/repos/liudongmiao/switchstring", "Date": "2016-04-26T06:09:59Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (map != null) queryParams.putAll(map);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/915/buggy-version/src.main.java.com.mailosaur.MailboxApi.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.putAll(java.util.Map<java.lang.String, java.lang.String>)"], "Fixed commit": "632b4c6b73efe5064c8b3fce62a4a15265b1cb95", "Url": "https://api.github.com/repos/mailosaurapp/mailosaur-java", "Date": "2014-06-19T21:23:24Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((patient.getRadarNo()) == null) { radarNumberField = new org.apache.wicket.markup.html.form.TextField<java.lang.Long>(\"id\", new org.apache.wicket.model.PropertyModel<java.lang.Long>(patient, \"radarNo\")); }else { radarNumberField = new org.apache.wicket.markup.html.form.TextField<java.lang.Long>(\"id\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1903/buggy-version/patientview-parent.radar.src.main.java.org.patientview.radar.web.panels.PatientDetailPanel.java", "BodyUseAPI": [], "Fixed commit": "a602bdc43db32cd12d7e17146937ab4cd5fb14ec", "Url": "https://api.github.com/repos/robworth/patientview", "Date": "2013-12-04T14:41:41Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (toggleMat == null) toggleMat = org.bukkit.Material.AIR;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7479/buggy-version/src.main.java.de.secretcraft.galibri.mechanic.Gate.java", "BodyUseAPI": [], "Fixed commit": "1e3d3785551a5dbdf5205365763cdb56841e930c", "Url": "https://api.github.com/repos/SecretCraft/GaLiBri", "Date": "2012-09-28T14:54:45Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (toggleMat == null) toggleMat = gateMat;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7479/buggy-version/src.main.java.de.secretcraft.galibri.mechanic.Gate.java", "BodyUseAPI": [], "Fixed commit": "1e3d3785551a5dbdf5205365763cdb56841e930c", "Url": "https://api.github.com/repos/SecretCraft/GaLiBri", "Date": "2012-09-28T14:54:45Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (object == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7644/buggy-version/examples.java.src.main.java.org.apache.beam.examples.complete.TrafficRoutes.java", "BodyUseAPI": [], "Fixed commit": "b40eae9c0d0c2c29d6a84b5b86767506b61ecc61", "Url": "https://api.github.com/repos/eralmas7/beam", "Date": "2017-07-12T18:50:25Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((object.getClass()) != (getClass())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7644/buggy-version/examples.java.src.main.java.org.apache.beam.examples.complete.TrafficRoutes.java", "BodyUseAPI": [], "Fixed commit": "b40eae9c0d0c2c29d6a84b5b86767506b61ecc61", "Url": "https://api.github.com/repos/eralmas7/beam", "Date": "2017-07-12T18:50:25Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["loci.formats.tiff.IFD.getIFDRationalValue(IFD.X_RESOLUTION)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (xResolution != null) { put(\"XResolution\", xResolution.doubleValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7900/buggy-version/components.formats-bsd.src.loci.formats.in.BaseTiffReader.java", "BodyUseAPI": ["loci.formats.tiff.TiffRational.doubleValue()", "loci.formats.in.BaseTiffReader.put(java.lang.String,xResolution.doubleValue())"], "Fixed commit": "9dc903eb8cd7effb58ff953d172c3b3f6c583672", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-01-29T03:01:23Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["loci.formats.tiff.IFD.getIFDRationalValue(IFD.Y_RESOLUTION)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (yResolution != null) { put(\"YResolution\", yResolution.doubleValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7900/buggy-version/components.formats-bsd.src.loci.formats.in.BaseTiffReader.java", "BodyUseAPI": ["loci.formats.in.BaseTiffReader.put(java.lang.String,yResolution.doubleValue())", "loci.formats.tiff.TiffRational.doubleValue()"], "Fixed commit": "9dc903eb8cd7effb58ff953d172c3b3f6c583672", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-01-29T03:01:23Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getSide()) == (net.minecraftforge.fml.relauncher.Side.CLIENT)) { eiteam.esteemedinnovation.EsteemedInnovationJournal.registerSteamTools(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8744/buggy-version/src.main.java.eiteam.esteemedinnovation.EsteemedInnovation.java", "BodyUseAPI": [], "Fixed commit": "6fa363388f07326e00ab42490b4bb9b01221f0fc", "Url": "https://api.github.com/repos/Esteemed-Innovation/Esteemed-Innovation", "Date": "2016-10-17T00:39:03Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (deviceType.equals(\"grabba\")) { eidReader = new org.cordova.eid.EidReaderGrabba(cordova); }else { callbackContext.error(\"Deze tablet kan geen identiteitskaart lezen.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2134/buggy-version/src.android.org.cordova.eid.EidPlugin.java", "BodyUseAPI": [], "Fixed commit": "80b3cad8a1b2472707d52cc4d76c7f9d27ee2b7d", "Url": "https://api.github.com/repos/aximobile/cordova-plugin-eid", "Date": "2017-07-26T14:25:46Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bson.Document.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (masteryReport == null) { masteryReport = ((org.bson.Document) (metrics.get(\"MS\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2663/buggy-version/src.main.java.vt.cs.smells.datamanager.main.AnalysisResultReader.java", "BodyUseAPI": [], "Fixed commit": "0cd74c9a46c26a026b99d8963fbd8d67f8943977", "Url": "https://api.github.com/repos/peeratham/data-manager", "Date": "2016-07-12T15:28:35Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (l instanceof dae.project.AssetLevel) { bw.write(l.getRelativeLocation().getPath()); }else { bw.write(l.getLocation().getPath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4979/buggy-version/src.dae.io.ProjectSaver.java", "BodyUseAPI": ["java.io.BufferedWriter.write(l.getRelativeLocation().getPath())", "l.getRelativeLocation().getPath()", "java.io.BufferedWriter.write(l.getLocation().getPath())", "dae.project.Level.getRelativeLocation()", "dae.project.Level.getLocation()", "l.getLocation().getPath()"], "Fixed commit": "9ab2183d73ae4edcc522eab27904b26b53feb8d8", "Url": "https://api.github.com/repos/samynk/DArtE", "Date": "2017-11-08T09:16:14Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ref.isAbsolute()) { result = new java.lang.StringBuilder(subpath); }else { result = new java.lang.StringBuilder(service); if (service.endsWith(\"/\")) { if (subpath.startsWith(\"/\")) { result.append(subpath.substring(1)); }else { result.append(subpath); } }else { if (subpath.startsWith(\"/\")) { result.append(subpath); }else { result.append(\"/\").append(subpath); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4132/buggy-version/modules.org.restlet.ext.odata.src.org.restlet.ext.odata.Query.java", "BodyUseAPI": [], "Fixed commit": "fd96421b8f525fe4a6202560cc77d8e5ac9ccf60", "Url": "https://api.github.com/repos/restlet/restlet-framework-java", "Date": "2014-12-08T17:06:01Z"},
{"Line": "=>1529", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((monitorResult.getDbQuorumLostSince()) == 0) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5979/buggy-version/syssvc.src.main.java.com.emc.storageos.systemservices.impl.upgrade.CoordinatorClientExt.java", "BodyUseAPI": [], "Fixed commit": "3b78342070c88c5f5ef6db6945099aee62d2b166", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-12-24T20:42:10Z"},
{"Line": "=>1507", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(standbySite.getState().equals(SiteState.STANDBY_SYNCED))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5979/buggy-version/syssvc.src.main.java.com.emc.storageos.systemservices.impl.upgrade.CoordinatorClientExt.java", "BodyUseAPI": [], "Fixed commit": "3b78342070c88c5f5ef6db6945099aee62d2b166", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-12-24T20:42:10Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (id == (R.id.room_type)) { final com.geeksong.agricolascorer.control.PickerUnitScoreView roomCountScoreView = ((com.geeksong.agricolascorer.control.PickerUnitScoreView) (scorePlayer.findViewById(R.id.rooms_picker))); roomCountScoreView.updateScore(manager.getUnitScore(manager.getScore(), unitScoreView)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4388/buggy-version/src.com.geeksong.agricolascorer.control.scoretabfactory.AgricolaScoreTabFactory.java", "BodyUseAPI": [], "Fixed commit": "228cc46b4e5902790133097d16f54cbe43a43dc3", "Url": "https://api.github.com/repos/syllant/AgricolaScorer", "Date": "2014-02-15T17:27:07Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file.getName().startsWith(\"~\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4162/buggy-version/src.cl.TemplateParser.java", "BodyUseAPI": [], "Fixed commit": "b4238615d0cd5598cd3344442e7f5e4eb77bf0e9", "Url": "https://api.github.com/repos/whaleyr/ICPC", "Date": "2012-10-05T18:24:33Z"},
{"Line": "=>1219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.kore.kolabnotes.android.Utils.getUseRicheditor(activity))) { return html; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2450/buggy-version/app.src.main.java.org.kore.kolabnotes.android.fragment.DetailFragment.java", "BodyUseAPI": [], "Fixed commit": "ae7e40f0cfd4556e93b97ff908c258fd386a7ba0", "Url": "https://api.github.com/repos/konradrenner/kolabnotes-android", "Date": "2016-05-06T06:44:42Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (worldObj.isRemote) com.qkninja.network.utility.ParticleHelper.spawnSpark(worldObj, xCoord, yCoord, zCoord, tempLocs);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8416/buggy-version/src.main.java.com.qkninja.network.tileentity.TileEntityTransporter.java", "BodyUseAPI": [], "Fixed commit": "eeaa305ab6d7b32f9022864848e5922edaad2efe", "Url": "https://api.github.com/repos/samvbeckmann/network", "Date": "2015-12-16T02:31:59Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.imglib2.roi.EllipseRegionOfInterest.getPartialDisplacement(long[],int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (partialDisplacement == 1) { for (int j = i - 1; j >= 0; j--) { double originPosition = origin.getDoublePosition(j); if ((java.lang.Math.floor(originPosition)) != originPosition) continue dimensionloop; } for (int j = i - 1; j >= 0; j--) { position[j] = ((long) (origin.getDoublePosition(j))); end[j] = (j > 0) ? position[j] : (position[j]) + 1; } return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7941/buggy-version/imglib2.core.src.main.java.net.imglib2.roi.EllipseRegionOfInterest.java", "BodyUseAPI": [], "Fixed commit": "ca58979150efd0c4ee8f7c185d6de5a6020d3687", "Url": "https://api.github.com/repos/imagej/imglib", "Date": "2012-04-11T17:00:37Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((positionRanges.getAck()) == null) { com.alibaba.otter.canal.sink.CanalEventSink eventSink = canalInstance.getEventSink(); if (eventSink instanceof com.alibaba.otter.canal.sink.entry.EntryEventSink) { if (((com.alibaba.otter.canal.sink.entry.EntryEventSink) (eventSink)).isFilterTransactionEntry()) { updateCursor = true; } } }else { updateCursor = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8154/buggy-version/server.src.main.java.com.alibaba.otter.canal.server.embeded.CanalServerWithEmbeded.java", "BodyUseAPI": [], "Fixed commit": "80613232f9fa3f7e2fc03f8d7ca650f95aa03bfa", "Url": "https://api.github.com/repos/ChinaXing/canal", "Date": "2014-10-08T16:34:07Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (permissions != null) { for (payment.unopay.in.permissionmodule.Permission permission : permissions) { permissionArray[(index++)] = permission.getName(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5879/buggy-version/permissionmodule.src.main.java.payment.unopay.in.permissionmodule.PermissionHandler.java", "BodyUseAPI": [], "Fixed commit": "4f1b7a6b002417a1ab3c57574f8adaa1d1c18b0c", "Url": "https://api.github.com/repos/nitintechjini/MarshmallowPermissionLib", "Date": "2016-09-14T09:15:43Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<nodes.Node>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (next.equals(exclude)) { next = predNodes.next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6264/buggy-version/StockMarketPrediction.src.nodes.FiringStrengthNode.java", "BodyUseAPI": [], "Fixed commit": "8743794e14a90aed86e917b3b828097a1f082817", "Url": "https://api.github.com/repos/LukasBuchert/Stockmarketprediction_ANFIS", "Date": "2014-04-13T14:47:52Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sampleCount) > 0) shade.add3M(rflectColor.multiply3((1.0 / (sampleCount))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1710/buggy-version/src.raytrace.material.DiffusePTMaterial.java", "BodyUseAPI": ["raytrace.color.Color.add3M(rflectColor.multiply3((1.0 / (sampleCount))))", "raytrace.color.Color.multiply3(double)"], "Fixed commit": "45f83c1cecf53a8741b5c5db4141ead3241f56d9", "Url": "https://api.github.com/repos/CalVR/ParallelRaytracing", "Date": "2014-05-20T09:12:11Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["f1.getBody().getUserData()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((obj1.getDescription()) == \"PACMAN\") { objectsPackage.Pacman pac = identifyPacman(obj1); if ((pac.getLives()) > 0) { pac.decrementLives(); } }else if ((obj2.getDescription()) == \"PACMAN\") { objectsPackage.Pacman pac = identifyPacman(obj2); if ((pac.getLives()) > 0) { pac.decrementLives(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2246/buggy-version/src.main.java.mainPackage.CollisionContactListener.java", "BodyUseAPI": ["mainPackage.CollisionContactListener.identifyPacman(objectsPackage.UniqueObject)"], "Fixed commit": "b45ae2b0c7746ed2f089b66047d7dc64631f591b", "Url": "https://api.github.com/repos/LGott/Pacman", "Date": "2016-05-27T00:23:57Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dk.statsbiblioteket.newspaper.metadatachecker.film.FuzzyDate.getMinDate()", "dk.statsbiblioteket.newspaper.metadatachecker.film.FuzzyDate.getMinDate()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (thisMinDate.equals(thatMinDate)) { return (getPrecision()) < (fuzzyDate.getPrecision()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/287/buggy-version/src.main.java.dk.statsbiblioteket.newspaper.metadatachecker.film.FuzzyDate.java", "BodyUseAPI": [], "Fixed commit": "174d34fa33d78592d733195c888d7ed93d9be770", "Url": "https://api.github.com/repos/statsbiblioteket/newspaper-batch-metadata-checker", "Date": "2014-07-03T09:06:09Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dk.statsbiblioteket.newspaper.metadatachecker.film.FuzzyDate.getMaxDate()", "dk.statsbiblioteket.newspaper.metadatachecker.film.FuzzyDate.getMaxDate()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (thisMaxDate.equals(thatMaxDate)) { return (getPrecision()) < (fuzzyDate.getPrecision()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/287/buggy-version/src.main.java.dk.statsbiblioteket.newspaper.metadatachecker.film.FuzzyDate.java", "BodyUseAPI": [], "Fixed commit": "174d34fa33d78592d733195c888d7ed93d9be770", "Url": "https://api.github.com/repos/statsbiblioteket/newspaper-batch-metadata-checker", "Date": "2014-07-03T09:06:09Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((list.size()) <= 0) { noEventToShow.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8836/buggy-version/app.src.main.java.br.com.sardinha.iohan.eventos.EventosActivity.java", "BodyUseAPI": [], "Fixed commit": "b6cefdf6012c32d4dbcd3307e88533d05f11f846", "Url": "https://api.github.com/repos/IohanSardinha/Eventos", "Date": "2017-09-24T16:48:02Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) getActivity().runOnUiThread(() -> mPresenter.loadTranslation());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1523/buggy-version/app.src.main.java.com.example.kimichael.yandextranslate.sections.translate.TranslateFragment.java", "BodyUseAPI": [], "Fixed commit": "b4abc8dd7e4bf4c681a83c0f81aab9a96c3b740c", "Url": "https://api.github.com/repos/kimichael/mobilization-translator", "Date": "2017-04-29T09:11:58Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (intent == null) intent = new android.content.Intent(this, org.rhok.linguist.activity.recording.RecordingInstructionsActivity.class);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/9036/buggy-version/LanguageRecorder.app.src.main.java.org.rhok.linguist.activity.location.InterviewVillageActivity.java", "BodyUseAPI": [], "Fixed commit": "b61f7c4fecf2c0a6394c95dbbf7eb01c423480b2", "Url": "https://api.github.com/repos/RHoKAustralia/melb-timor-leste", "Date": "2016-02-09T08:47:29Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openflexo.gina.view.widget.table.impl.FIBTableCellRenderer<T, V>.getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (returned instanceof javax.swing.JLabel) { ((javax.swing.JLabel) (returned)).setText(renderValue(((T) (value)))); if (org.openflexo.toolbox.ToolBox.isMacOSLaf()) { if (isSelected) { ((javax.swing.JLabel) (returned)).setForeground(getSelectedTextColorFor(value)); }else { ((javax.swing.JLabel) (returned)).setForeground(getNonSelectedTextColorFor(value)); } } ((javax.swing.JLabel) (returned)).setFont(this.getFont()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3870/buggy-version/gina-core.src.main.java.org.openflexo.gina.view.widget.table.impl.CustomColumn.java", "BodyUseAPI": [], "Fixed commit": "bd5ef4c14045e96abf8f1ab4a37f2a62a95b5d5c", "Url": "https://api.github.com/repos/openflexo-team/gina", "Date": "2015-11-16T21:21:34Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((flag) == 1) { org.pathvisio.wpclient.PathwaySearchPanel.SearchTableModel model = ((org.pathvisio.wpclient.PathwaySearchPanel.SearchTableModel) (target.getModel())); java.io.File tmpDir = new java.io.File(plugin.getTmpDir(), org.pathvisio.wpclient.WikiPathwaysClientPlugin.shortClientName(model.clientName)); tmpDir.mkdirs(); plugin.openPathwayWithProgress(plugin.getClients().get(model.clientName), model.getValueAt(row, 0).toString(), 0, tmpDir); }else { org.pathvisio.wpclient.ResultTableModel model = ((org.pathvisio.wpclient.ResultTableModel) (target.getModel())); java.io.File tmpDir = new java.io.File(plugin.getTmpDir(), org.pathvisio.wpclient.WikiPathwaysClientPlugin.shortClientName(model.clientName)); tmpDir.mkdirs(); plugin.openPathwayWithProgress(plugin.getClients().get(model.clientName), model.getValueAt(row, 0).toString(), 0, tmpDir); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1008/buggy-version/src.org.pathvisio.wpclient.PathwaySearchPanel.java", "BodyUseAPI": [], "Fixed commit": "a73aaaf71ca1417f422c510ee9315e388654c016", "Url": "https://api.github.com/repos/SravanthiSinha/org.pathvisio.wpclient", "Date": "2013-08-19T14:56:45Z"},
{"Line": "=>432", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((resultFile) != null) { if ((resultFile.exists()) && (resultFile.isFile())) { resultFile.delete(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3989/buggy-version/src.de.mpa.client.model.FileExperiment.java", "BodyUseAPI": [], "Fixed commit": "adb3d0923c4dc48f3a5f89bd14101d89eb49ef3d", "Url": "https://api.github.com/repos/compomics/meta-proteome-analyzer", "Date": "2017-02-20T15:24:17Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotEmpty(getPilotProject())) { com.photon.phresco.commons.model.Element element = new com.photon.phresco.commons.model.Element(); element.setId(getPilotProject()); appInfo.setPilotInfo(element); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5213/buggy-version/phresco-framework-web.src.main.java.com.photon.phresco.framework.actions.applications.Features.java", "BodyUseAPI": [], "Fixed commit": "3f69049ebc5ea875b0fefc716069c257bb8dc569", "Url": "https://api.github.com/repos/phresco/framework", "Date": "2012-11-22T06:47:33Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nextLine) == null) { fetch(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/9012/buggy-version/src.main.java.jp.gr.java_conf.bebigquery.TableRowsGcsStream.java", "BodyUseAPI": [], "Fixed commit": "ccdb972818fd796ad2bd611c4987323fc47b0917", "Url": "https://api.github.com/repos/kamiru78/be-bigquery", "Date": "2016-02-03T13:22:32Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((task1.taskInfo.endDate.compareTo(task2.taskInfo.endDate)) > 0) { return 1; }else { if ((task1.taskInfo.endTime) == null) { return 1; }else if ((task2.taskInfo.endTime) == null) { return -1; }else { return task1.taskInfo.endTime.compareTo(task2.taskInfo.endTime); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/9162/buggy-version/TaskManagerProject.src.manager.datamanager.SearchManager.java", "BodyUseAPI": ["task1.taskInfo.endTime.compareTo(task2.taskInfo.endTime)"], "Fixed commit": "2bdf350b044fff4ee17a36d5544c61c9a30dfa2e", "Url": "https://api.github.com/repos/cs2103aug2014-w11-1j/main", "Date": "2014-10-31T03:02:57Z"},
{"Line": "=>447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getContentResolver().query(android.net.Uri,java.lang.String[],<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (c != null) { try { c.moveToNext(); count = c.getInt(0); } finally { c.close(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7362/buggy-version/Recipe_Manager.src.com.alex.recipemanager.ui.recipe.RecipeInfoEditActivity.java", "BodyUseAPI": ["android.database.Cursor.getInt(int)", "android.database.Cursor.close()", "android.database.Cursor.moveToNext()"], "Fixed commit": "839690e79bc62206bf60e09e224ac1882ef5d6e8", "Url": "https://api.github.com/repos/AlexChen2012/Chinese-Recipe-Manager", "Date": "2014-02-14T08:38:37Z"},
{"Line": "=>456", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count == (-1)) { throw new java.lang.IllegalArgumentException(\"can get recipe count from db.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7362/buggy-version/Recipe_Manager.src.com.alex.recipemanager.ui.recipe.RecipeInfoEditActivity.java", "BodyUseAPI": [], "Fixed commit": "839690e79bc62206bf60e09e224ac1882ef5d6e8", "Url": "https://api.github.com/repos/AlexChen2012/Chinese-Recipe-Manager", "Date": "2014-02-14T08:38:37Z"},
{"Line": "=>650", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getConfigData().getFormatters(m_cms, resource).getAllFormatters()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((!result) && ((allFormatters.size()) == 1)) { result = ((allFormatters.get(0).getSettings()) != null) && ((allFormatters.get(0).getSettings().size()) > 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8249/buggy-version/src.org.opencms.ade.containerpage.CmsElementUtil.java", "BodyUseAPI": ["java.util.List<org.opencms.xml.containerpage.I_CmsFormatterBean>.get(int)", "java.util.List<org.opencms.xml.containerpage.I_CmsFormatterBean>.get(int)", "allFormatters.get(0).getSettings()", "allFormatters.get(0).getSettings()", "allFormatters.get(0).getSettings().size()"], "Fixed commit": "c4e95c33c0313ce88c99a6e2e759b8f2b17fd28f", "Url": "https://api.github.com/repos/nelasoft/opencms-core", "Date": "2014-03-07T15:17:41Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTable.getSelectedRow()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rowNum == (-1)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6352/buggy-version/src.prd.fms.executor.FileTableMouseExecutor.java", "BodyUseAPI": [], "Fixed commit": "9d1b0fbbb439ff591426f5195ad4e8f1d2299261", "Url": "https://api.github.com/repos/zhoubo1832/fms", "Date": "2016-12-07T05:00:11Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTable.getSelectedRow()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rowNum == (-1)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6352/buggy-version/src.prd.fms.executor.FileTableMouseExecutor.java", "BodyUseAPI": [], "Fixed commit": "9d1b0fbbb439ff591426f5195ad4e8f1d2299261", "Url": "https://api.github.com/repos/zhoubo1832/fms", "Date": "2016-12-07T05:00:11Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.mskcc.cbio.oncokb.util.CacheUtils.VUS.containsKey(entrezGeneId)) { return org.mskcc.cbio.oncokb.util.CacheUtils.VUS.get(entrezGeneId); }else { org.mskcc.cbio.oncokb.model.Gene gene = org.mskcc.cbio.oncokb.util.GeneUtils.getGeneByEntrezId(entrezGeneId); if (gene != null) { org.mskcc.cbio.oncokb.util.CacheUtils.synEvidences(); } return org.mskcc.cbio.oncokb.util.CacheUtils.VUS.get(entrezGeneId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6073/buggy-version/core.src.main.java.org.mskcc.cbio.oncokb.util.CacheUtils.java", "BodyUseAPI": ["org.mskcc.cbio.oncokb.util.GeneUtils.getGeneByEntrezId(java.lang.Integer)", "java.util.Map<java.lang.Integer, java.util.Set<org.mskcc.cbio.oncokb.model.Alteration>>.get(java.lang.Integer)", "java.util.Map<java.lang.Integer, java.util.Set<org.mskcc.cbio.oncokb.model.Alteration>>.get(java.lang.Integer)"], "Fixed commit": "bddc0a7d6eb40c287cb2f5e42c29a864a4648bde", "Url": "https://api.github.com/repos/zhx828/oncokb", "Date": "2017-03-13T19:21:04Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((logoutItem) != null) { logoutItem.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/386/buggy-version/app.src.main.java.ly.mens.pivotjot.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e7c8ccc5b84328c51dfcd9f1243b0e9e0d3992b2", "Url": "https://api.github.com/repos/mensly/PivotJot", "Date": "2015-05-03T05:01:45Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getFragmentManager().findFragmentById(R.id.fragment_overlay)) instanceof ly.mens.pivotjot.LoginFragment) { logoutItem.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/386/buggy-version/app.src.main.java.ly.mens.pivotjot.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e7c8ccc5b84328c51dfcd9f1243b0e9e0d3992b2", "Url": "https://api.github.com/repos/mensly/PivotJot", "Date": "2015-05-03T05:01:45Z"},
{"Line": "=>973", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (file.contains(java.io.File.separator)) { name = new java.io.File(file).getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6924/buggy-version/src.de.mpc.pia.intermediate.compiler.PIACompiler.java", "BodyUseAPI": ["java.io.File.getName()"], "Fixed commit": "d998ee378881315cba3368e0f0a6f2a4d7bb1631", "Url": "https://api.github.com/repos/mpc-bioinformatics/pia", "Date": "2015-06-16T16:56:50Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sip.getEnzymes()) != null) { for (uk.ac.ebi.jmzidml.model.mzidml.Enzyme enzyme : sip.getEnzymes().getEnzyme()) { enzyme.setId(((((de.mpc.pia.tools.PIAConstants.enzyme_prefix) + (this.ID)) + \"_\") + idx)); idx++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6924/buggy-version/src.de.mpc.pia.intermediate.PIAInputFile.java", "BodyUseAPI": ["uk.ac.ebi.jmzidml.model.mzidml.SpectrumIdentificationProtocol.getEnzymes()", "sip.getEnzymes().getEnzyme()"], "Fixed commit": "d998ee378881315cba3368e0f0a6f2a4d7bb1631", "Url": "https://api.github.com/repos/mpc-bioinformatics/pia", "Date": "2015-06-16T16:56:50Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["character.AttackBehavior.attack(double,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((unmodifiedDamage <= (target.getDefenceRating())) && (unmodifiedDamage > 0)) { java.lang.System.out.println(((target.name) + \"'s armor protects him from damage\")); }else if (damage > 0) { hasDefended = target.defend(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5193/buggy-version/src.character.Character.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "character.Character.defend()"], "Fixed commit": "43a422ab54033a84f051085e76b236d62f7ece16", "Url": "https://api.github.com/repos/mattsw/CSCD454FinalProject", "Date": "2014-08-13T10:51:00Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.InputStream.read()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (type == ((byte) (-1))) { throw new java.io.IOException(\"Socket closed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7561/buggy-version/src.chatroom.client.ClientListeningThread.java", "BodyUseAPI": [], "Fixed commit": "db4f0ff8b0aa0cd47cfa878e075e9c0d9f5f1a34", "Url": "https://api.github.com/repos/AlexKue/ServerClientChatroom", "Date": "2017-11-10T11:52:52Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((picker.getGraphDataWithoutOutliers().getPoints().size()) > 4) picker.updateGraph();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4046/buggy-version/client.Ping.src.com.num.ui.viewgenerator.PickerOutlierViewGenerator.java", "BodyUseAPI": ["com.num.database.DatabasePicker.updateGraph()"], "Fixed commit": "9fbd31a4c1de3e5c8c96a742495fde600475bb14", "Url": "https://api.github.com/repos/gtnoise/myspeedtest", "Date": "2014-08-13T19:52:31Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (game.isPlayer1Turn()) { player1Name.setTypeface(Typeface.DEFAULT_BOLD); player2Name.setTypeface(Typeface.DEFAULT); }else { player2Name.setTypeface(Typeface.DEFAULT_BOLD); player1Name.setTypeface(Typeface.DEFAULT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8926/buggy-version/app.src.main.java.ghost.mprog.nl.ghost.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "81fe0ce6538d908189b02538bba49b3e8a43aa11", "Url": "https://api.github.com/repos/marvingfx/GHOST_appstudio", "Date": "2015-10-09T17:14:10Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (identifier == null) { identifier = CakeIdentifier.Other; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7828/buggy-version/src.com.vexus2.cakestorm.lib.CakeConfig.java", "BodyUseAPI": [], "Fixed commit": "7229bb4e2f0c026efbfc622fb3880bba080302ea", "Url": "https://api.github.com/repos/nanapi/cake-storm", "Date": "2013-07-25T10:40:59Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.preview.PreviewTextFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (args.containsKey(FileDisplayActivity.EXTRA_SEARCH_QUERY)) { mSearchQuery = args.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1105/buggy-version/src.main.java.com.owncloud.android.ui.preview.PreviewTextFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY)"], "Fixed commit": "3616ce8a9ba649a65e086790304a8350fa88f4aa", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-24T01:01:49Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (availableFields.containsKey(field.getId())) { availableFields.put(field.getId(), field); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8884/buggy-version/kie-wb-common-forms.kie-wb-common-forms-editor.kie-wb-common-forms-editor-client.src.main.java.org.kie.workbench.common.forms.editor.client.editor.FormEditorHelper.java", "BodyUseAPI": ["java.util.Map<java.lang.String, org.kie.workbench.common.forms.model.FieldDefinition>.put(field.getId(),org.kie.workbench.common.forms.model.FieldDefinition)", "org.kie.workbench.common.forms.model.FieldDefinition.getId()"], "Fixed commit": "e1c74d57a6e3c126c73f89c40338d4a3804f3714", "Url": "https://api.github.com/repos/pefernan/kie-wb-common", "Date": "2016-09-08T15:35:06Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.AsyncPlayerChatEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((Main.guiStatus.get(p.getName())) == null) Main.guiStatus.put(p.getName(), \"not in GUI\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1761/buggy-version/src.fr.TriiNoxYs.CallMe.events.PlayerChat.java", "BodyUseAPI": ["org.bukkit.entity.Player.getName()", "Main.guiStatus.put(p.getName(),java.lang.String)"], "Fixed commit": "28d0db869b3afcb2a4179aeaafa44fec4fafe103", "Url": "https://api.github.com/repos/triinoxys/CallMe", "Date": "2015-08-21T11:29:17Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.AsyncPlayerChatEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((fr.TriiNoxYs.CallMe.utils.ChannelUtils.getChannel(p)) != null) { if (fr.TriiNoxYs.CallMe.utils.ChannelUtils.isCaller(p)) { for (java.lang.String split : splits) { org.bukkit.Bukkit.dispatchCommand(p, (\"ajout \" + split)); } }else fr.TriiNoxYs.CallMe.utils.ChatUtils.sendInfo(\"sms\", p, Main.plugin.getConfig().getString(\"CALL.NOT_CALL_LEADER\").replaceAll(\"%target%\", splits[0]).replaceAll(\"%caller%\", p.getName())); }else fr.TriiNoxYs.CallMe.utils.ChatUtils.sendInfo(\"sms\", p, Main.plugin.getConfig().getString(\"CALL.NOT_IN_CALL\").replaceAll(\"%target%\", splits[0]).replaceAll(\"%caller%\", p.getName()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1761/buggy-version/src.fr.TriiNoxYs.CallMe.events.PlayerChat.java", "BodyUseAPI": ["fr.TriiNoxYs.CallMe.utils.ChatUtils.sendInfo(java.lang.String,org.bukkit.entity.Player,Main.plugin.getConfig().getString(\"CALL.NOT_IN_CALL\").replaceAll(\"%target%\", splits[0]).replaceAll(\"%caller%\", p.getName()))", "Main.plugin.getConfig().getString(\"CALL.NOT_CALL_LEADER\").replaceAll(\"%target%\", splits[0]).replaceAll(java.lang.String,p.getName())", "org.bukkit.entity.Player.getName()", "fr.TriiNoxYs.CallMe.utils.ChannelUtils.isCaller(org.bukkit.entity.Player)", "org.bukkit.Bukkit.dispatchCommand(org.bukkit.entity.Player,java.lang.String)", "Main.plugin.getConfig().getString(\"CALL.NOT_IN_CALL\").replaceAll(\"%target%\", splits[0]).replaceAll(java.lang.String,p.getName())", "org.bukkit.entity.Player.getName()", "fr.TriiNoxYs.CallMe.utils.ChatUtils.sendInfo(java.lang.String,org.bukkit.entity.Player,Main.plugin.getConfig().getString(\"CALL.NOT_CALL_LEADER\").replaceAll(\"%target%\", splits[0]).replaceAll(\"%caller%\", p.getName()))"], "Fixed commit": "28d0db869b3afcb2a4179aeaafa44fec4fafe103", "Url": "https://api.github.com/repos/triinoxys/CallMe", "Date": "2015-08-21T11:29:17Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.hdfs.server.datanode.DatanodeUtil.idToBlockDir(java.io.File,b.getBlockId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(blockDir.exists())) { throw new java.io.IOException((\"Failed to mkdirs \" + blockDir)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/228/buggy-version/hadoop-hdfs-project.hadoop-hdfs.src.main.java.org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.BlockPoolSlice.java", "BodyUseAPI": [], "Fixed commit": "524ed7c3581853db8c1abf5b04bf0aa084767036", "Url": "https://api.github.com/repos/JingchengDu/hadoop", "Date": "2016-09-14T04:06:58Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((freq.get(na.articleId)) == null) { freq.put(na.articleId, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1597/buggy-version/src.main.java.com.arko.javaproject.Recommend.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Integer>.put(na.articleId,int)"], "Fixed commit": "121452ce45259b6af0c2cf09755f2b531766cdde", "Url": "https://api.github.com/repos/cvhariharan/RealNews", "Date": "2017-12-10T09:34:57Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.lang.Integer>.get(na.articleId)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (f == 0) { val = 0; }else { val = java.lang.Math.log10(((na.totalFreq) / f)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1597/buggy-version/src.main.java.com.arko.javaproject.Recommend.java", "BodyUseAPI": ["java.lang.Math.log10(((na.totalFreq) / f))"], "Fixed commit": "121452ce45259b6af0c2cf09755f2b531766cdde", "Url": "https://api.github.com/repos/cvhariharan/RealNews", "Date": "2017-12-10T09:34:57Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (indexValue > 0) { java.lang.String substring = referenceName.substring((indexValue + 2), (indexValue + 3)); clcLevel = java.lang.Integer.parseInt(substring); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/9173/buggy-version/src.extension.wps-soil-sealing.wps-soil-sealing-index.src.main.java.org.geoserver.wps.gs.soilsealing.SoilSealingCLCProcess.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "46d2c5b85623c93f368d081bc3473bfb7eae8e09", "Url": "https://api.github.com/repos/geosolutions-it/soil_sealing", "Date": "2015-02-19T17:44:36Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((path.length) < 2) { com.mycompany.myproject.verticles.reverseproxy.AuthResponseHandler.log.error((\"Expected path to contain slash '/' but does not: \" + uriPath)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2611/buggy-version/src.main.java.com.mycompany.myproject.verticles.reverseproxy.AuthResponseHandler.java", "BodyUseAPI": [], "Fixed commit": "70fcc4e932bbea6720f3f243e1f8cd0f6d66438b", "Url": "https://api.github.com/repos/robertjchristian/vertx-reverse-proxy", "Date": "2014-04-07T20:02:35Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (((currentEmailHeader != null) || (currentEmailSubject != null)) || (currentEmailContent.matches(\".*[A-Za-z0-9].*\"))) { emails.add(new ch.heigvd.res.smtp.Email(currentEmailSubject, currentEmailContent, currentEmailHeader)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2083/buggy-version/src.ch.heigvd.res.smtp.emailMessageParser.DefaultEmailParser.java", "BodyUseAPI": ["java.util.ArrayList<ch.heigvd.res.smtp.Email>.add(ch.heigvd.res.smtp.Email)"], "Fixed commit": "63d1917cdd07c0dde21a81c8df274a103c1b4dda", "Url": "https://api.github.com/repos/BenjaminSchubert/HEIGVD-RES-2016-Labo-SMTP", "Date": "2016-04-18T20:37:21Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.evolveum.midpoint.xml.ns._public.common.common_2a.UserType.class.isAssignableFrom(type)) { options.add(com.evolveum.midpoint.schema.SelectorOptions.create(UserType.F_JPEG_PHOTO, com.evolveum.midpoint.schema.GetOperationOptions.createRetrieve(RetrieveOption.INCLUDE))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1650/buggy-version/gui.admin-gui.src.main.java.com.evolveum.midpoint.web.page.admin.configuration.PageDebugView.java", "BodyUseAPI": [], "Fixed commit": "694abba6ae3fd78f884d3cf6b60ae6af1e1a7ff8", "Url": "https://api.github.com/repos/Evolveum/midpoint", "Date": "2014-04-17T19:31:39Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (rollupThreshold != null) { metricConfigDTO.setRollupThreshold(rollupThreshold); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2359/buggy-version/thirdeye.thirdeye-pinot.src.main.java.com.linkedin.thirdeye.dashboard.resources.MetricConfigResource.java", "BodyUseAPI": ["com.linkedin.thirdeye.datalayer.dto.MetricConfigDTO.setRollupThreshold(java.lang.Double)"], "Fixed commit": "4807a2fb9c1fdd0de65bc2bbad607fb5c8156346", "Url": "https://api.github.com/repos/linkedin/pinot", "Date": "2016-12-05T21:55:01Z"},
{"Line": "=>1010", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, cascading.tuple.Fields>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(pipeGroupingSelector.isNone())) { cascading.tuple.Fields offsetFields = incomingField.selectPos(pipeGroupingSelector, offset); cascading.tuple.Fields resolvedSelect = declared.select(offsetFields); outGroupingFields = outGroupingFields.append(resolvedSelect); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/268/buggy-version/cascading-core.src.main.java.cascading.pipe.Splice.java", "BodyUseAPI": ["cascading.tuple.Fields.selectPos(cascading.tuple.Fields,int)"], "Fixed commit": "c55323ac8339df0d4f733f5efd130e5256007d93", "Url": "https://api.github.com/repos/etheriau/cascading", "Date": "2012-11-15T17:44:10Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["plugin.getServer().getWorld(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (w == null) { sender.sendMessage(((plugin.pluginName) + \"Cannot find the specified world! Make sure you type it correctly.\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7630/buggy-version/src.main.java.me.eccentric_nz.TARDIS.commands.TARDISTravelCommands.java", "BodyUseAPI": [], "Fixed commit": "bf46bf9c0b0f9bf1f05e7895873718d2a31a72f5", "Url": "https://api.github.com/repos/eccentricdevotion/TARDIS", "Date": "2013-02-10T00:45:05Z"},
{"Line": "=>2030", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getRGBChannelCount()) == 1) || ((getRGBChannelCount()) == (getSizeC()))) { if (((getSizeC()) > 1) && ((getSizeT()) > 1)) { ms.dimensionOrder += \"C\"; } for (java.lang.Long nBytes : bytes) { java.lang.String axis = bytesPerAxis.get(nBytes); if ((ms.dimensionOrder.indexOf(axis)) == (-1)) { ms.dimensionOrder += axis; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1794/buggy-version/components.formats-gpl.src.loci.formats.in.LIFReader.java", "BodyUseAPI": [], "Fixed commit": "015268a432e3faf6ecaa41579f587fd897e8bbc9", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-04-06T03:01:02Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.jeeshop.services.manage.spec.SpecService.selectById(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (spec == null) { spec = new net.jeeshop.services.manage.spec.bean.Spec(); spec.setProductID(productID); spec.setSpecPrice(\"100\"); spec.setSpecSize(\"100*100\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5356/buggy-version/src.main.java.net.jeeshop.web.action.front.cart.CartAction.java", "BodyUseAPI": [], "Fixed commit": "49d5854ececbdc3b32fe6ed350ce6f5558749160", "Url": "https://api.github.com/repos/gold-knights/jeeshop", "Date": "2016-04-28T13:22:47Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIntent().getExtras().getInt(PageTransitions.USERID)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (bundleUserId != 0) { java.lang.String userName = dbhelper.getUserName(bundleUserId); title = (bundleGroupName + \" - \") + userName; }else title = bundleGroupName + \" - archived\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4939/buggy-version/app.src.main.java.katherinechen.squigglers.com.tasksplitter.UserTasksActivity.java", "BodyUseAPI": ["katherinechen.squigglers.com.tasksplitter.UserTasksActivity.getUserName(int)"], "Fixed commit": "743e520eb4994a92b584adc39130eab8e7cec934", "Url": "https://api.github.com/repos/squigglers/Chores", "Date": "2014-12-16T18:57:21Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mygdx.game.maincontroller.Controller.getWinnerDecided()) { java.lang.Thread.currentThread().interrupt(); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/131/buggy-version/android.src.com.mygdx.game.maincontroller.Bot.java", "BodyUseAPI": [], "Fixed commit": "ea917bfe0350d733d67c70cae59c7027f7410d69", "Url": "https://api.github.com/repos/muhi28/worms-and-elevators", "Date": "2017-06-21T08:34:02Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javolution.xml.XMLFormat.InputElement.getAttribute(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cbs != (-1)) { ussdMessage.ussdDataCodingSch = new org.mobicents.protocols.ss7.map.datacoding.CBSDataCodingSchemeImpl(cbs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3988/buggy-version/map.map-impl.src.main.java.org.mobicents.protocols.ss7.map.service.supplementary.SupplementaryMessageImpl.java", "BodyUseAPI": [], "Fixed commit": "49483bb9455b651bf3834c8f0d57b1ab81fa0017", "Url": "https://api.github.com/repos/Mobicents/jss7", "Date": "2013-09-06T11:38:02Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mentalbilisim.memapper.util.FieldUtil.isBoolean(sourceField)) { sourceGetMethodName = \"is\" + fieldNameCapitalized; try { sourceGetMethod = sourceType.getMethod(sourceGetMethodName); } catch (java.lang.NoSuchMethodException e) { com.mentalbilisim.memapper.util.mapping.MapByFieldNameUtil.logger.debug(((((((\"Field '\" + (sourceType.getName())) + \" \") + sourceFieldName) + \"' does not have a getter method named \") + sourceGetMethodName) + \".\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/726/buggy-version/src.main.java.com.mentalbilisim.memapper.util.mapping.MapByFieldNameUtil.java", "BodyUseAPI": [], "Fixed commit": "6cc08a5e4a952e63a181424b7140938443ef5a73", "Url": "https://api.github.com/repos/mental-party/memapper-deprecated", "Date": "2017-05-11T08:54:59Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (sourceGetMethod == null) { sourceGetMethodName = \"get\" + fieldNameCapitalized; try { sourceGetMethod = sourceType.getMethod(sourceGetMethodName); } catch (java.lang.NoSuchMethodException e) { com.mentalbilisim.memapper.util.mapping.MapByFieldNameUtil.logger.debug((((((\"Field '\" + (sourceType.getName())) + \" \") + sourceFieldName) + \"' does not have a getter method.\") + \" Field is ignored.\")); continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/726/buggy-version/src.main.java.com.mentalbilisim.memapper.util.mapping.MapByFieldNameUtil.java", "BodyUseAPI": [], "Fixed commit": "6cc08a5e4a952e63a181424b7140938443ef5a73", "Url": "https://api.github.com/repos/mental-party/memapper-deprecated", "Date": "2017-05-11T08:54:59Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(answerTextView.getText().toString().contains(\"-\"))) { answerTextView.setText(\"-\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2607/buggy-version/app.src.main.java.com.kostyabakay.braintraininggame.fragment.GameFragment.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "bab460303695589690b6daa66942316b2a98fe3d", "Url": "https://api.github.com/repos/KostyaBakay/BrainTrainingGame", "Date": "2017-02-17T11:15:19Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bj4.yhh.accountant.database.DatabaseHelper.getPlan(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (plan != null) { int count = getPlanTypeCount(type); --(plan.mCurrentProgress); if ((plan.mCurrentProgress) < 0) { plan.mCurrentProgress = 0; } int upperBound = com.bj4.yhh.accountant.fragments.CreatePlanFragment.getUpperBound(count, plan.mTotalProgress, plan.mCurrentProgress); getDataBase().execSQL(((((((((((((((\"insert into \" + (com.bj4.yhh.accountant.database.DatabaseHelper.TABLE_NAME_TEST_FRAGMENT)) + \" select * from \") + (com.bj4.yhh.accountant.database.DatabaseHelper.TABLE_NAME_TEST)) + \" where \") + (com.bj4.yhh.accountant.database.DatabaseHelper.COLUMN_TYPE)) + \"='\") + type) + \"' and \") + (com.bj4.yhh.accountant.database.DatabaseHelper.COLUMN_ORDER)) + \" <\") + upperBound) + \" order by \") + (com.bj4.yhh.accountant.database.DatabaseHelper.COLUMN_ORDER)) + \" \")); }else { android.util.Log.w(com.bj4.yhh.accountant.database.DatabaseHelper.TAG, \"failed, plan should not be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7496/buggy-version/code.src.com.bj4.yhh.accountant.database.DatabaseHelper.java", "BodyUseAPI": [], "Fixed commit": "a912ee61830954959e17cd3030f6946f1c68e662", "Url": "https://api.github.com/repos/s011208/Accountant", "Date": "2014-07-04T02:44:35Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((appointment.getRoom()) != null) { appointment.setLocation(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/9149/buggy-version/src.calendarGUI.AppointmentViewController.java", "BodyUseAPI": ["calendar.Appointment.setLocation(java.lang.String)"], "Fixed commit": "3bbf8ba484bced2d551a182487f7c481cff495c0", "Url": "https://api.github.com/repos/johansme/Fellesprosjektet", "Date": "2015-03-20T14:59:43Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listener) != null) { listener.onPartialResult(result, request.getCardType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/314/buggy-version/app.src.main.java.be.ugent.zeus.hydra.fragments.home.loader.HomeFeedLoader.java", "BodyUseAPI": [], "Fixed commit": "f06ca9a78975b3fc4b88ea9d2a9c561c3fd7ca93", "Url": "https://api.github.com/repos/ZeusWPI/hydra-android", "Date": "2016-10-16T22:26:00Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listener) != null) { listener.onPartialError(request.getCardType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/314/buggy-version/app.src.main.java.be.ugent.zeus.hydra.fragments.home.loader.HomeFeedLoader.java", "BodyUseAPI": [], "Fixed commit": "f06ca9a78975b3fc4b88ea9d2a9c561c3fd7ca93", "Url": "https://api.github.com/repos/ZeusWPI/hydra-android", "Date": "2016-10-16T22:26:00Z"},
{"Line": "=>840", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dimID == 0) { micdoodle8.mods.galacticraft.core.util.GCLog.severe(((\"Client dimension \" + providerID) + \" has no match on server - probably a server dimension ID conflict problem.\")); }else { if (!(micdoodle8.mods.galacticraft.core.util.WorldUtil.registeredPlanets.contains(dimID))) { micdoodle8.mods.galacticraft.core.util.WorldUtil.registeredPlanets.add(dimID); net.minecraftforge.common.DimensionManager.registerDimension(dimID, providerID); }else { micdoodle8.mods.galacticraft.core.util.GCLog.severe((\"Dimension already registered to another mod: unable to register planet dimension \" + dimID)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5860/buggy-version/src.main.java.micdoodle8.mods.galacticraft.core.util.WorldUtil.java", "BodyUseAPI": ["net.minecraftforge.common.DimensionManager.registerDimension(java.lang.Integer,int)", "micdoodle8.mods.galacticraft.core.util.GCLog.severe(java.lang.String)", "java.util.List<java.lang.Integer>.contains(java.lang.Integer)", "java.util.List<java.lang.Integer>.add(java.lang.Integer)"], "Fixed commit": "6b75a3b0d2b41ef12bed1875015eec39a38c3309", "Url": "https://api.github.com/repos/micdoodle8/Galacticraft", "Date": "2017-03-19T13:04:30Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6079/buggy-version/src.core.lombok.javac.JavacResolution.java", "BodyUseAPI": [], "Fixed commit": "9be8cd4afdc2f12e6b6b26776f3ea6ccf79621c1", "Url": "https://api.github.com/repos/rzwitserloot/lombok", "Date": "2017-11-28T22:43:19Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t == null) return Javac.CTC_VOID;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6079/buggy-version/src.utils.lombok.javac.JavacTreeMaker.java", "BodyUseAPI": [], "Fixed commit": "9be8cd4afdc2f12e6b6b26776f3ea6ccf79621c1", "Url": "https://api.github.com/repos/rzwitserloot/lombok", "Date": "2017-11-28T22:43:19Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["aloksharma.ufl.edu.stash.PlaidHelper.getAccessTokenMap()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (bankMap == null) { bankMap = new java.util.HashMap<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3174/buggy-version/app.src.main.java.aloksharma.ufl.edu.stash.PlaidHelper.java", "BodyUseAPI": [], "Fixed commit": "a9ea7815897bbf4d50fb28b3b0ae2e8737f75be0", "Url": "https://api.github.com/repos/Alok-Sharma/Stash", "Date": "2015-11-08T00:30:03Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((position < 0) || (position >= (positionCount))) { throw new java.lang.IllegalArgumentException(((((\"Invalid position \" + position) + \" in block with \") + (positionCount)) + \" positions\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7064/buggy-version/presto-spi.src.main.java.com.facebook.presto.spi.block.DictionaryBlock.java", "BodyUseAPI": [], "Fixed commit": "802e2611c540611675697cd43cf436194e0e3aed", "Url": "https://api.github.com/repos/elonazoulay/presto", "Date": "2017-02-22T01:44:48Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stick.getRawButton(1)) { catapult.windWinch(); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3367/buggy-version/src.org.erhsroboticsclub.frc2014.Robot.java", "BodyUseAPI": [], "Fixed commit": "c3981d56d615b3ffb8f59879c02eb0e8b6f857ec", "Url": "https://api.github.com/repos/erhs-robotics/frc2014", "Date": "2014-02-18T21:09:21Z"},
{"Line": "=>1369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (i != (-1)) { trimmed = trimmed.substring(6, i).trim(); java.util.List<java.lang.String> split = org.python.pydev.shared_core.string.StringUtils.split(trimmed, ' '); if (((split.size()) == 2) && (split.get(1).equals(actTok))) { possible = split.get(0).trim(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8437/buggy-version/plugins.org.python.pydev.parser.src.org.python.pydev.parser.visitors.NodeUtils.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.trim()"], "Fixed commit": "81c7ff90e2c2853757211bac43ca103f320f2745", "Url": "https://api.github.com/repos/fabioz/Pydev", "Date": "2014-01-24T20:04:49Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (cards == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7480/buggy-version/Protocol.src.com.hxdcml.protocol.MagicProtocol.java", "BodyUseAPI": [], "Fixed commit": "8690568462836c3ffc2bf5c5b691e0b655964b0f", "Url": "https://api.github.com/repos/souleiman/ManaBase", "Date": "2013-01-13T18:17:44Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<com.abhi.android.sciencebowl.Subject, com.abhi.android.sciencebowl.Statistics.SubjectStatistics>.get(com.abhi.android.sciencebowl.Subject)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((subjStat.getQuestionsTotal()) != 0) return (100.0 * (subjStat.getQuestionsCorrect())) / (subjStat.getQuestionsTotal()); else return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2363/buggy-version/app.src.main.java.com.abhi.android.sciencebowl.Statistics.java", "BodyUseAPI": ["com.abhi.android.sciencebowl.Statistics.SubjectStatistics.getQuestionsTotal()", "com.abhi.android.sciencebowl.Statistics.SubjectStatistics.getQuestionsCorrect()"], "Fixed commit": "65fc6720590dcd19803678982fc7c036f3238dfb", "Url": "https://api.github.com/repos/AbhiSivaprasad/Science-Bowl", "Date": "2016-07-15T22:58:26Z"},
{"Line": "=>400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.inventory.ItemStack.getItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (si instanceof ic2.common.ItemElectricTool) { ic2.common.ItemElectricTool ci = ((ic2.common.ItemElectricTool) (si)); if (((ci.maxCharge) != (s.maxcharge)) || ((ci.transferLimit) != (s.chargerate))) { this.addOriginalEU(ci.id, ci.maxCharge, ci.transferLimit, mcItemStack); double charge = nbttagcompound.getInt(\"charge\"); java.lang.Double newcharge = ((new java.lang.Double(charge)) * (new java.lang.Double(s.maxcharge))) / (new java.lang.Double(ci.maxCharge)); ci.maxCharge = s.maxcharge; ci.transferLimit = s.chargerate; nbttagcompound.setInt(\"charge\", newcharge.intValue()); ic2.common.ElectricItem.charge(mcItemStack, 10, 9999, true, false); changed = true; } }else if (si instanceof ic2.common.ElectricItem) { ic2.common.ElectricItem ci = ((ic2.common.ElectricItem) (si)); if (((ci.maxCharge) != (s.maxcharge)) || ((ci.transferLimit) != (s.chargerate))) { this.addOriginalEU(ci.id, ci.maxCharge, ci.transferLimit, mcItemStack); double charge = nbttagcompound.getInt(\"charge\"); java.lang.Double newcharge = ((new java.lang.Double(charge)) * (new java.lang.Double(s.maxcharge))) / (new java.lang.Double(ci.maxCharge)); ci.maxCharge = s.maxcharge; ci.transferLimit = s.chargerate; nbttagcompound.setInt(\"charge\", newcharge.intValue()); ic2.common.ElectricItem.charge(mcItemStack, 10, 9999, true, false); changed = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1188/buggy-version/TekkitRestrict.src.com.github.dreadslicer.tekkitrestrict.TRThread.java", "BodyUseAPI": [], "Fixed commit": "d821406e8fcf1d665adb6d3d657c92c2a9b7ad48", "Url": "https://api.github.com/repos/EterniaLogic/TekkitRestrict", "Date": "2013-06-15T09:33:23Z"},
{"Line": "=>528", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (banned) { st2[i] = new org.bukkit.inventory.ItemStack(com.github.dreadslicer.tekkitrestrict.TRConfigCache.Threads.ChangeDisabledItemsIntoId, 1); changed1 = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1188/buggy-version/TekkitRestrict.src.com.github.dreadslicer.tekkitrestrict.TRThread.java", "BodyUseAPI": [], "Fixed commit": "d821406e8fcf1d665adb6d3d657c92c2a9b7ad48", "Url": "https://api.github.com/repos/EterniaLogic/TekkitRestrict", "Date": "2013-06-15T09:33:23Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (TRConfigCache.Global.useNewBanSystem) { if (com.github.dreadslicer.tekkitrestrict.TRCacheItem2.isBanned(player, \"noitem\", id, data)) banned = true; else if (((player.getGameMode()) == (org.bukkit.GameMode.CREATIVE)) && (com.github.dreadslicer.tekkitrestrict.TRCacheItem2.isBanned(player, \"creative\", id, data))) banned = true; }else { if (com.github.dreadslicer.tekkitrestrict.TRNoItem.isItemBanned(player, id, data)) banned = true; else if (((player.getGameMode()) == (org.bukkit.GameMode.CREATIVE)) && (com.github.dreadslicer.tekkitrestrict.TRNoItem.isCreativeItemBanned(player, id, data))) banned = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1188/buggy-version/TekkitRestrict.src.com.github.dreadslicer.tekkitrestrict.TRThread.java", "BodyUseAPI": [], "Fixed commit": "d821406e8fcf1d665adb6d3d657c92c2a9b7ad48", "Url": "https://api.github.com/repos/EterniaLogic/TekkitRestrict", "Date": "2013-06-15T09:33:23Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getActivity().getContentResolver().query(MovieContract.MovieEntry.CONTENT_URI,<nulltype>,<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(movieEntries.moveToFirst())) updateMovie(IS_REFRESH, 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5429/buggy-version/app.src.main.java.com.example.android.popularmovies.MoviePosterMainFragment.java", "BodyUseAPI": [], "Fixed commit": "a45833cc93d8150f6fd1a0fd1beed6bfaca8f9e4", "Url": "https://api.github.com/repos/qtao913/PopularMovies", "Date": "2016-02-14T18:34:45Z"},
{"Line": "=>784", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (subDirectory == null) { for (com.emc.storageos.model.file.FileSystemExportParam export : exports) { if (export.getSubDirectory().isEmpty()) { options.add(new com.emc.vipr.model.catalog.AssetOption(export.getSecurityType(), export.getSecurityType())); } } }else { for (com.emc.storageos.model.file.FileSystemExportParam export : exports) { if (export.getSubDirectory().equalsIgnoreCase(subDirectory)) { options.add(new com.emc.vipr.model.catalog.AssetOption(export.getSecurityType(), export.getSecurityType())); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3915/buggy-version/vipr-portal.com.iwave.isa.content.src.java.com.emc.sa.asset.providers.FileProvider.java", "BodyUseAPI": ["export.getSubDirectory().equalsIgnoreCase(java.lang.String)"], "Fixed commit": "e68e62f31d9426790b0650f4523e16199a57bfe8", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-06-17T12:59:10Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((patternListener) != null) { console.removePatternMatchListener(patternListener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4577/buggy-version/fm-workbench.agree.com.rockwellcollins.atc.agree.analysis.src.com.rockwellcollins.atc.agree.analysis.views.AgreeMenuListener.java", "BodyUseAPI": [], "Fixed commit": "69823588c845b281ebf0915e61f73f0205fb20e9", "Url": "https://api.github.com/repos/smaccm/smaccm", "Date": "2017-12-15T19:50:42Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (tUsername == null) tUsername = getUser().getUsername();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5799/buggy-version/src.org.ohmage.request.user.UserInfoReadRequest.java", "BodyUseAPI": [], "Fixed commit": "b4f4804212be754d5c3e6340783f2d627af40c1d", "Url": "https://api.github.com/repos/hongsudt/server", "Date": "2015-09-02T00:16:07Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((movieItemArray.size()) == 0) { android.widget.Toast.makeText(getActivity(), \"No favorites movies , please choose some movies !\", Toast.LENGTH_LONG).show(); startActivity(new android.content.Intent(getActivity(), com.example.kemos.fainalmoviemalapp.Controller.MainActivity.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8583/buggy-version/app.src.main.java.com.example.kemos.fainalmoviemalapp.Controller.FavoritesFragment.java", "BodyUseAPI": [], "Fixed commit": "a7701aca864a9ca1b7c657d68a95ad4ce8b82372", "Url": "https://api.github.com/repos/kemo94/Movie-MAL-App", "Date": "2016-04-12T04:58:45Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((movieItemArray.size()) == 0) { android.widget.Toast.makeText(getActivity(), \"No watch list movies , please choose some movies !\", Toast.LENGTH_LONG).show(); startActivity(new android.content.Intent(getActivity(), com.example.kemos.fainalmoviemalapp.Controller.MainActivity.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8583/buggy-version/app.src.main.java.com.example.kemos.fainalmoviemalapp.Controller.WatchListFragment.java", "BodyUseAPI": [], "Fixed commit": "a7701aca864a9ca1b7c657d68a95ad4ce8b82372", "Url": "https://api.github.com/repos/kemo94/Movie-MAL-App", "Date": "2016-04-12T04:58:45Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((localName.isEmpty()) && (prefixIdx > (-1))) { localName = qname.substring((prefixIdx + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5585/buggy-version/src.org.exist.dom.memtree.MemTreeBuilder.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "274d1f8ce6b4d4ccc440ec89aa00066cf4c37d66", "Url": "https://api.github.com/repos/RemiKoutcherawy/exist", "Date": "2017-11-29T01:55:54Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.cattaka.util.cathandsgendroid.apt.DataModelProcessor.createInnerFieldType(javax.lang.model.element.VariableElement,javax.lang.model.type.TypeMirror,net.cattaka.util.cathandsgendroid.annotation.DataModelAttrs)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ift == (InnerFieldType.PARCELABLE)) { if ((attr == null) || (attr.forDb())) { processingEnv.getMessager().printMessage(javax.tools.Diagnostic.Kind.ERROR, \"Do not use forDb to Parcelable because storing Parcelable to storage is danger in Android specification. Use serializable or use custom IAccessor.\", ve); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1396/buggy-version/cathandsgendroid-apt.src.main.java.net.cattaka.util.cathandsgendroid.apt.DataModelProcessor.java", "BodyUseAPI": [], "Fixed commit": "91a1743b055270d36f68ace9b2dfb6774d86dc58", "Url": "https://api.github.com/repos/cattaka/CatHandsGendroid", "Date": "2015-05-31T02:46:57Z"},
{"Line": "=>468", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vmware.bdd.apitypes.AppManagerRead.getManagedClusters()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((clusters != null) && ((clusters.size()) > 0)) { java.util.List<java.lang.String> warningMsgList = new java.util.ArrayList<java.lang.String>(1); warningMsgList.add(((((\"Application manager \" + name) + \" is used by clusters \") + clusters) + \".\")); if (!(com.vmware.bdd.cli.commands.CommandsUtils.showWarningMsg(name, Constants.OUTPUT_OBJECT_APPMANAGER, Constants.OUTPUT_OP_MODIFY, warningMsgList, false))) { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2998/buggy-version/cli.src.main.java.com.vmware.bdd.cli.commands.AppManagerCommands.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "3872662d8c426089bf343ee6be45fa590e36ecb6", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2014-08-20T08:08:07Z"},
{"Line": "=>457", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (Constants.IRONFAN.equals(name)) { com.vmware.bdd.cli.commands.CommandsUtils.printCmdFailure(Constants.OUTPUT_OBJECT_APPMANAGER, name, Constants.OUTPUT_OP_MODIFY, Constants.OUTPUT_OP_RESULT_FAIL, \"Cannot modify default software manager.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2998/buggy-version/cli.src.main.java.com.vmware.bdd.cli.commands.AppManagerCommands.java", "BodyUseAPI": ["com.vmware.bdd.cli.commands.CommandsUtils.printCmdFailure(Constants.OUTPUT_OBJECT_APPMANAGER,java.lang.String,Constants.OUTPUT_OP_MODIFY,Constants.OUTPUT_OP_RESULT_FAIL,java.lang.String)"], "Fixed commit": "3872662d8c426089bf343ee6be45fa590e36ecb6", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2014-08-20T08:08:07Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showConfirmDialog(<nulltype>,java.lang.String,java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (confirm == (javax.swing.JOptionPane.YES_OPTION)) { if (u != null) { if (gui.deleteUser(u)) { gui.showMessageDialog(\"User successfully removed.\"); } } gui.changeView(OperatorGUI.DEFAULT_MODE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7622/buggy-version/src.DeleteUserButton.java", "BodyUseAPI": [], "Fixed commit": "51eeb92fac4d13b1b517af893ee1351082907d73", "Url": "https://api.github.com/repos/tfla/etsa01", "Date": "2013-05-21T14:41:43Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timeMillis + offsetMillis) > dayMillis) { timeMillis -= dayMillis; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2786/buggy-version/src.main.java.com.bradley.gwt.user.client.ui.DateTimeEditor.java", "BodyUseAPI": [], "Fixed commit": "77e2805b4f81c0e548be6e5422730b1f3f03a855", "Url": "https://api.github.com/repos/bradseefeld/gwt-ui", "Date": "2011-07-22T02:59:22Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.openhft.chronicle.core.Jvm.IS_DEBUG) && (net.openhft.chronicle.wire.YamlLogging.showServerWrites)) try { java.lang.System.out.println((\"\\nServer Sends (from async publisher ) :\\n\" + (net.openhft.chronicle.wire.Wires.fromSizePrefixedBlobs(out.bytes(), out.bytes().readPosition(), out.bytes().readRemaining())))); } catch (java.lang.Exception e) { java.lang.System.out.println((\"\\nServer Sends ( from async publisher - corrupted ) :\\n\" + (out.bytes().toDebugString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3535/buggy-version/src.main.java.net.openhft.chronicle.network.connection.WireOutPublisher.java", "BodyUseAPI": [], "Fixed commit": "2a827a0af306500cc1ff5ed5d1f68cf62dbc4985", "Url": "https://api.github.com/repos/OpenHFT/Chronicle-Network", "Date": "2015-07-14T16:19:17Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cgeo.geocaching.LogCacheActivity.findViewById(R.id.favorite_check)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (fav_check.isChecked()) { cache.setFavorite(true); cache.setFavoritePoints(((cache.getFavoritePoints()) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8182/buggy-version/main.src.cgeo.geocaching.connector.gc.GCLoggingManager.java", "BodyUseAPI": [], "Fixed commit": "86de2926aac8e48a03fa24ffb19deb42f3328f24", "Url": "https://api.github.com/repos/madankb/cgeo", "Date": "2016-01-10T16:42:11Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tile.camo.getStackInSlot(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((camo != null) && ((camo.itemID) < 4096)) { block = net.minecraft.block.Block.blocksList[camo.itemID]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/415/buggy-version/src.main.java.com.dmillerw.remoteIO.block.BlockRemoteInventory.java", "BodyUseAPI": [], "Fixed commit": "2fa4c057a65db105051a67e25a7e67455cc02bb4", "Url": "https://api.github.com/repos/dmillerw/RemoteIO", "Date": "2014-01-13T05:15:19Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.IBlockAccess.getBlockTileEntity(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (((block != null) && (block.renderAsNormalBlock())) && (tile.hasUpgrade(Upgrade.CAMO))) { return block.getIcon(side, camo.getItemDamage()); }else { if (side == 1) { if ((tile != null) && (tile.lastClientState)) { return this.icons[1]; }else { return this.icons[0]; } }else { return this.icons[2]; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/415/buggy-version/src.main.java.com.dmillerw.remoteIO.block.BlockRemoteInventory.java", "BodyUseAPI": ["net.minecraft.block.Block.getIcon(int,camo.getItemDamage())"], "Fixed commit": "2fa4c057a65db105051a67e25a7e67455cc02bb4", "Url": "https://api.github.com/repos/dmillerw/RemoteIO", "Date": "2014-01-13T05:15:19Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.World.getBlockTileEntity(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(tile.hasUpgrade(Upgrade.LOCK))) { this.dropBlockAsItem_do(world, x, y, z, new net.minecraft.item.ItemStack(this.blockID, 1, meta)); for (net.minecraft.item.ItemStack stack : com.dmillerw.remoteIO.core.helper.InventoryHelper.getContents(tile.upgrades)) { if (stack != null) this.dropBlockAsItem_do(world, x, y, z, stack); } if ((tile.camo.getStackInSlot(0)) != null) this.dropBlockAsItem_do(world, x, y, z, tile.camo.getStackInSlot(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/415/buggy-version/src.main.java.com.dmillerw.remoteIO.block.BlockRemoteInventory.java", "BodyUseAPI": ["tile.camo.getStackInSlot(int)", "com.dmillerw.remoteIO.block.BlockRemoteInventory.dropBlockAsItem_do(net.minecraft.world.World,int,int,int,tile.camo.getStackInSlot(0))", "com.dmillerw.remoteIO.core.helper.InventoryHelper.getContents(tile.upgrades)", "tile.camo.getStackInSlot(int)"], "Fixed commit": "2fa4c057a65db105051a67e25a7e67455cc02bb4", "Url": "https://api.github.com/repos/dmillerw/RemoteIO", "Date": "2014-01-13T05:15:19Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.World.getBlockTileEntity(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((tile.camo.getStackInSlot(0)) != null) this.dropBlockAsItem_do(world, x, y, z, tile.camo.getStackInSlot(0));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/415/buggy-version/src.main.java.com.dmillerw.remoteIO.block.BlockIO.java", "BodyUseAPI": ["com.dmillerw.remoteIO.block.BlockIO.dropBlockAsItem_do(net.minecraft.world.World,int,int,int,tile.camo.getStackInSlot(0))", "tile.camo.getStackInSlot(int)"], "Fixed commit": "2fa4c057a65db105051a67e25a7e67455cc02bb4", "Url": "https://api.github.com/repos/dmillerw/RemoteIO", "Date": "2014-01-13T05:15:19Z"},
{"Line": "=>625", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((inventory[0]) != null) inventory[0].setStackDisplayName(string);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8772/buggy-version/src.pneumaticCraft.common.tileentity.TileEntityProgrammableController.java", "BodyUseAPI": ["inventory[0].setStackDisplayName(java.lang.String)"], "Fixed commit": "60dbcbc72895fa1e2b6993ef8c4295ca3d6b5f18", "Url": "https://api.github.com/repos/MineMaarten/PneumaticCraft", "Date": "2015-09-30T10:26:12Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(worldObj.isRemote)) getAIManager().setWidgets(progWidgets);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8772/buggy-version/src.pneumaticCraft.common.tileentity.TileEntityProgrammableController.java", "BodyUseAPI": [], "Fixed commit": "60dbcbc72895fa1e2b6993ef8c4295ca3d6b5f18", "Url": "https://api.github.com/repos/MineMaarten/PneumaticCraft", "Date": "2015-09-30T10:26:12Z"},
{"Line": "=>516", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type) != (Type.ATTRIBUTE)) { detail.setDefaultSelectClause(beanDescriptor); }else if (!(detail.hasSelectClause())) { detail.setEmptyBase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4766/buggy-version/src.main.java.io.ebeaninternal.server.querydefn.DefaultOrmQuery.java", "BodyUseAPI": [], "Fixed commit": "0e2900d796a59df89c56022ec2ffc72023ee4876", "Url": "https://api.github.com/repos/FOCONIS/ebean", "Date": "2017-02-26T00:08:10Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mCaloriesTextView.getText().equals(\"\"))) { if ((java.lang.Integer.parseInt(mCaloriesTextView.getText().toString())) <= 0) { sendMail(mCurrentUser, EMAIL_SUBJECT, EMAIL_BODY); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/164/buggy-version/app.src.main.java.edu.uw.tacoma.team5.calorit.HomeFragment.java", "BodyUseAPI": ["mCaloriesTextView.getText().toString()", "java.lang.Integer.parseInt(mCaloriesTextView.getText().toString())", "android.widget.TextView.getText()"], "Fixed commit": "e3ddc5e2b4ad8c12ce1e7d7b925fbb009b480d0a", "Url": "https://api.github.com/repos/jasonbai2014/Calorit", "Date": "2016-05-21T23:39:10Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((file.getSize()) != 0) { imageService.storeImage(file, sessionUser.getUserProfile()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/657/buggy-version/src.main.java.twitter.web.controllers.UserController.java", "BodyUseAPI": ["twitter.service.image.ImageService.storeImage(org.springframework.web.multipart.MultipartFile,sessionUser.getUserProfile())"], "Fixed commit": "296643147a5f4e31d4383df3a76f917b1dcf4960", "Url": "https://api.github.com/repos/studentgroupCracker/LikeTwitter", "Date": "2017-04-30T01:38:15Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.att.kiwilauncher.DanhSach.dsUngDung.size()) != 0) { com.att.kiwilauncher.DanhSach.rcUngDung.getChildAt(0).setBackgroundResource(R.drawable.none); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2819/buggy-version/app.src.main.java.com.att.kiwilauncher.DanhSach.java", "BodyUseAPI": [], "Fixed commit": "6306c1b1f74c2cb73292546e96bf137aaa29454a", "Url": "https://api.github.com/repos/tungnguyen020394/ATTKiwiLauncher", "Date": "2017-07-12T10:08:04Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.att.kiwilauncher.DanhSach.dsUngDung.size()) != 0) { com.att.kiwilauncher.DanhSach.rcUngDung.getChildAt((((com.att.kiwilauncher.DanhSach.didIndex) - (com.att.kiwilauncher.DanhSach.main)) - (com.att.kiwilauncher.DanhSach.dsChuDe.size()))).setBackgroundResource(R.drawable.border_pick); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2819/buggy-version/app.src.main.java.com.att.kiwilauncher.DanhSach.java", "BodyUseAPI": [], "Fixed commit": "6306c1b1f74c2cb73292546e96bf137aaa29454a", "Url": "https://api.github.com/repos/tungnguyen020394/ATTKiwiLauncher", "Date": "2017-07-12T10:08:04Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.att.kiwilauncher.DanhSach.dsUngDung.size()) != 0) { com.att.kiwilauncher.DanhSach.rcUngDung.getChildAt(0).setBackgroundResource(R.drawable.border_pick); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2819/buggy-version/app.src.main.java.com.att.kiwilauncher.DanhSach.java", "BodyUseAPI": [], "Fixed commit": "6306c1b1f74c2cb73292546e96bf137aaa29454a", "Url": "https://api.github.com/repos/tungnguyen020394/ATTKiwiLauncher", "Date": "2017-07-12T10:08:04Z"},
{"Line": "=>620", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((didIndex) == ((((main) + (com.att.kiwilauncher.TrangChu.cates.size())) + (bonusmain)) + 1)) { imageMinus.callOnClick(); }else if ((didIndex) == (((main) + (com.att.kiwilauncher.TrangChu.cates.size())) + (bonusmain))) { relayTatCa.callOnClick(); }else if (((didIndex) >= ((((main) + 2) + (com.att.kiwilauncher.TrangChu.cates.size())) + (bonusmain))) && ((didIndex) <= (((((main) + (com.att.kiwilauncher.TrangChu.cates.size())) + (com.att.kiwilauncher.TrangChu.listApps.get(com.att.kiwilauncher.TrangChu.demdsApp).size())) + (bonusmain)) + 1))) { com.att.kiwilauncher.TrangChu.rcApp.getChildAt((((((didIndex) - (main)) - 2) - (com.att.kiwilauncher.TrangChu.cates.size())) - (bonusmain))).callOnClick(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2819/buggy-version/app.src.main.java.com.att.kiwilauncher.TrangChu.java", "BodyUseAPI": ["java.util.List<com.att.kiwilauncher.model.ChuDe>.size()", "java.util.List<com.att.kiwilauncher.model.ChuDe>.size()", "android.support.v7.widget.RecyclerView.getChildAt((((((didIndex) - (main)) - 2) - (com.att.kiwilauncher.TrangChu.cates.size())) - (bonusmain)))", "java.util.List<com.att.kiwilauncher.model.ChuDe>.size()", "java.util.List<com.att.kiwilauncher.model.ChuDe>.size()", "com.att.kiwilauncher.TrangChu.rcApp.getChildAt((((((didIndex) - (main)) - 2) - (com.att.kiwilauncher.TrangChu.cates.size())) - (bonusmain))).callOnClick()"], "Fixed commit": "6306c1b1f74c2cb73292546e96bf137aaa29454a", "Url": "https://api.github.com/repos/tungnguyen020394/ATTKiwiLauncher", "Date": "2017-07-12T10:08:04Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (currentLevel)) { controller.startLevel(currentLevel); setGameWindow(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4042/buggy-version/src.ru.nsu.vakhrushev.pusher.viewer.Viewer.java", "BodyUseAPI": [], "Fixed commit": "7c5ac4f3bfd7d4c89a455f3f4d02d61788cfdcfe", "Url": "https://api.github.com/repos/mifril/PusherRep", "Date": "2013-05-19T07:33:32Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((variation == null) && (component.hasNode(com.peregrine.admin.servlets.RestrictedSearchServlet.THUMBNAIL_SAMPLE_PNG))) { answer.writeAttribute(com.peregrine.admin.servlets.RestrictedSearchServlet.THUMBNAIL, (((component.getPath()) + \"/\") + (com.peregrine.admin.servlets.RestrictedSearchServlet.THUMBNAIL_SAMPLE_PNG))); }else if (variation != null) { java.lang.String thumbnailName = (((com.peregrine.admin.servlets.RestrictedSearchServlet.THUMBNAIL) + \"-\") + (variation.getName().toLowerCase())) + \".png\"; if (component.hasNode(thumbnailName)) { answer.writeAttribute(com.peregrine.admin.servlets.RestrictedSearchServlet.THUMBNAIL, (((component.getPath()) + \"/\") + thumbnailName)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7970/buggy-version/admin-base.core.src.main.java.com.peregrine.admin.servlets.RestrictedSearchServlet.java", "BodyUseAPI": ["javax.jcr.Node.getPath()", "javax.jcr.Node.getPath()", "com.peregrine.admin.servlets.JsonResponse.writeAttribute(java.lang.String,(((component.getPath()) + \"/\") + (com.peregrine.admin.servlets.RestrictedSearchServlet.THUMBNAIL_SAMPLE_PNG)))", "javax.jcr.Node.hasNode(java.lang.String)", "variation.getName().toLowerCase()", "javax.jcr.Node.getName()", "com.peregrine.admin.servlets.JsonResponse.writeAttribute(java.lang.String,(((component.getPath()) + \"/\") + thumbnailName))"], "Fixed commit": "380773aed0c0d6427b6058e96d686589f80fdf19", "Url": "https://api.github.com/repos/headwirecom/peregrine-cms", "Date": "2017-11-21T21:12:45Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Double.isNaN(valueToRound)) return java.lang.Double.NaN;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1910/buggy-version/lorian.graph.function.Util.java", "BodyUseAPI": [], "Fixed commit": "869b2da07ec230798b706857fe3f91ed9b0474c6", "Url": "https://api.github.com/repos/lorian1333/graph", "Date": "2013-04-04T07:34:41Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Sms.Part.parse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (column != (Sms.Part.UNKNOWN)) { values.put(column, cursor.getString(cursor.getColumnIndex(columnName))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3552/buggy-version/src.org.toilelibre.libe.athg2sms.androidstuff.sms.SmsFinder.java", "BodyUseAPI": ["java.util.Map<Sms.Part, java.lang.Object>.put(Sms.Part,cursor.getString(cursor.getColumnIndex(columnName)))"], "Fixed commit": "0c37496d4f83a9d7f57711a7e84f686b7f79baca", "Url": "https://api.github.com/repos/libetl/athg2sms", "Date": "2017-02-13T15:38:33Z"},
{"Line": "=>1809", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getAnnotations()) == null) || ((getAnnotations().size()) < 1)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/576/buggy-version/src.main.java.org.ecocean.Encounter.java", "BodyUseAPI": [], "Fixed commit": "d7f22a73837315ed545538833eea8c35084dd9a1", "Url": "https://api.github.com/repos/WildbookOrg/Wildbook", "Date": "2017-02-23T18:34:46Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ecocean.Shepherd.getEncounter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((myShark.getAnnotations()) != null) { for (org.ecocean.Annotation ann : myShark.getAnnotations()) { myShepherd.getPM().makePersistent(ann); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/576/buggy-version/src.main.java.org.ecocean.servlet.EncounterSetGenusSpecies.java", "BodyUseAPI": ["org.ecocean.Encounter.getAnnotations()"], "Fixed commit": "d7f22a73837315ed545538833eea8c35084dd9a1", "Url": "https://api.github.com/repos/WildbookOrg/Wildbook", "Date": "2017-02-23T18:34:46Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((conn) != null) conn.disconnect();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4656/buggy-version/app.src.main.java.com.example.prikshit.recorder.UploaderService.java", "BodyUseAPI": [], "Fixed commit": "fa0ab062a3232272df46ba4977b41d8c84bf42fe", "Url": "https://api.github.com/repos/kprikshit/android-sensor-data-recorder", "Date": "2015-03-27T16:56:55Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dos) != null) { try { dos.flush(); dos.close(); } catch (java.io.IOException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4656/buggy-version/app.src.main.java.com.example.prikshit.recorder.UploaderService.java", "BodyUseAPI": [], "Fixed commit": "fa0ab062a3232272df46ba4977b41d8c84bf42fe", "Url": "https://api.github.com/repos/kprikshit/android-sensor-data-recorder", "Date": "2015-03-27T16:56:55Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((attributes.size()) == 1) && (attributes.keySet().iterator().next().equals(\"\"))) { allAttributes.put(io.datakernel.jmx.AttributeNodeForMap.VALUE_COLUMN_NAME, attributes.values().iterator().next()); }else { allAttributes.putAll(attributes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5177/buggy-version/eventloop.src.main.java.io.datakernel.jmx.AttributeNodeForMap.java", "BodyUseAPI": ["java.util.Iterator<java.lang.Object>.next()", "java.util.Map<java.lang.String, java.lang.Object>.values()", "java.util.Map<java.lang.String, java.lang.Object>.putAll(java.util.Map<java.lang.String, java.lang.Object>)", "java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.Object)", "java.util.Collection<java.lang.Object>.iterator()"], "Fixed commit": "8b7af57631736d7c3af54ede2c56bc6b54d56b4b", "Url": "https://api.github.com/repos/softindex/datakernel", "Date": "2016-02-23T17:27:24Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.datakernel.jmx.ValueFetcher.fetchFrom(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (currentList != null) { for (java.lang.Object element : currentList) { java.util.Map<java.lang.String, java.lang.Object> attributesFromElement = subNode.aggregateAllAttributes(java.util.Arrays.asList(element)); attributesFromAllElements.add(attributesFromElement); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5177/buggy-version/eventloop.src.main.java.io.datakernel.jmx.AttributeNodeForList.java", "BodyUseAPI": [], "Fixed commit": "8b7af57631736d7c3af54ede2c56bc6b54d56b4b", "Url": "https://api.github.com/repos/softindex/datakernel", "Date": "2016-02-23T17:27:24Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.datakernel.jmx.ValueFetcher.fetchFrom(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (currentList != null) { for (java.lang.Object element : currentList) { subNode.refresh(java.util.Arrays.asList(element), timestamp, smoothingWindow); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5177/buggy-version/eventloop.src.main.java.io.datakernel.jmx.AttributeNodeForList.java", "BodyUseAPI": [], "Fixed commit": "8b7af57631736d7c3af54ede2c56bc6b54d56b4b", "Url": "https://api.github.com/repos/softindex/datakernel", "Date": "2016-02-23T17:27:24Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (new_discard) discard(draw(false));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4356/buggy-version/src.racko.Deck.java", "BodyUseAPI": [], "Fixed commit": "61d41996691568efdee5d8d7717dba3ffaea0174", "Url": "https://api.github.com/repos/Azmisov/racko-ai", "Date": "2014-04-10T23:42:36Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((n.getChild(\"BillingTemplate\")) != null) { billingTemplate = hci.gnomex.utility.BillingTemplateParser.parse(n.getChild(\"BillingTemplate\"), sess); if ((!(isNewRequest)) && (!(this.isExternalExperiment()))) { hci.gnomex.model.BillingTemplate oldTemplate = hci.gnomex.utility.BillingTemplateQueryManager.retrieveBillingTemplate(sess, request); if ((oldTemplate == null) || (!(oldTemplate.equals(billingTemplate)))) { reassignBillingAccount = true; } } billingTemplate.setOrder(request); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3611/buggy-version/src.hci.gnomex.utility.RequestParser.java", "BodyUseAPI": ["org.jdom.Element.getChild(java.lang.String)", "hci.gnomex.utility.BillingTemplateParser.parse(n.getChild(\"BillingTemplate\"),org.hibernate.Session)"], "Fixed commit": "567878e93720c796306a14cc92e8bda9b9f26e1c", "Url": "https://api.github.com/repos/hci-gnomex/gnomex", "Date": "2016-03-09T19:51:46Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(isNewRequest)) && (!(this.isExternalExperiment()))) { hci.gnomex.model.BillingTemplate oldTemplate = hci.gnomex.utility.BillingTemplateQueryManager.retrieveBillingTemplate(sess, request); if ((oldTemplate == null) || (!(oldTemplate.equals(billingTemplate)))) { reassignBillingAccount = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3611/buggy-version/src.hci.gnomex.utility.RequestParser.java", "BodyUseAPI": [], "Fixed commit": "567878e93720c796306a14cc92e8bda9b9f26e1c", "Url": "https://api.github.com/repos/hci-gnomex/gnomex", "Date": "2016-03-09T19:51:46Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hci.gnomex.utility.BillingTemplateQueryManager.retrieveBillingTemplate(org.hibernate.Session,hci.gnomex.controller.Request)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (billingTemplate != null) { requestNode.setAttribute(\"idBillingTemplate\", billingTemplate.getIdBillingTemplate().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3611/buggy-version/src.hci.gnomex.controller.GetRequest.java", "BodyUseAPI": ["billingTemplate.getIdBillingTemplate().toString()", "org.jdom.Element.setAttribute(java.lang.String,billingTemplate.getIdBillingTemplate().toString())", "hci.gnomex.controller.BillingTemplate.getIdBillingTemplate()"], "Fixed commit": "567878e93720c796306a14cc92e8bda9b9f26e1c", "Url": "https://api.github.com/repos/hci-gnomex/gnomex", "Date": "2016-03-09T19:51:46Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.commcare.android.view.MeasureSpec.getSize(int)", "org.commcare.android.view.MeasureSpec.getSize(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((w == 0) || (h == 0)) { w = java.lang.Math.max(w, h); }else { w = java.lang.Math.min(w, h); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2170/buggy-version/app.src.org.commcare.android.view.SquareButton.java", "BodyUseAPI": ["java.lang.Math.max(int,int)", "java.lang.Math.min(int,int)"], "Fixed commit": "d42857fff284de73c84ce17715fe7b2aa17c981a", "Url": "https://api.github.com/repos/dimagi/commcare-android", "Date": "2015-07-28T15:05:38Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Set<se.edette.ordermatcher.Order>.iterator()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (buyIterator.hasNext()) sellOrder = sellIterator.next();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2864/buggy-version/src.se.edette.ordermatcher.OrderBook.java", "BodyUseAPI": [], "Fixed commit": "c66d03f61e9a0629a762554c9af49a1a42da1da5", "Url": "https://api.github.com/repos/Ezile/OrderMatcher", "Date": "2016-06-17T15:57:36Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getLoginFormPath()) == null) { super.challenge(response, stale); }else { org.restlet.data.Reference ref = response.getRequest().getResourceRef(); java.lang.String redirectQueryName = getRedirectQueryName(); java.lang.String redirectQueryValue = ref.getQueryAsForm().getFirstValue(redirectQueryName, \"\"); if (\"\".equals(redirectQueryValue)) { redirectQueryValue = new org.restlet.data.Reference(getLoginFormPath()).addQueryParameter(redirectQueryName, ref.toString()).toString(); } response.redirectSeeOther(redirectQueryValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4023/buggy-version/modules.org.restlet.ext.crypto.src.org.restlet.ext.crypto.CookieAuthenticator.java", "BodyUseAPI": [], "Fixed commit": "e184e3586778ca3c799b456262f32bb0ac7d5706", "Url": "https://api.github.com/repos/restlet/restlet-framework-java", "Date": "2012-12-21T17:14:11Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.reward.containsKey(sa)) { oldReward = this.reward.get(sa); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2022/buggy-version/DDV.src.agent.Model.java", "BodyUseAPI": ["java.util.Map<utils.StateAction, java.lang.Double>.get(utils.StateAction)"], "Fixed commit": "fed965774e8fd1d642d1d60824aad826e67a71ec", "Url": "https://api.github.com/repos/Wojje/Reinforcement-Learning-Competition-2014", "Date": "2014-05-07T08:29:59Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lecoy) { view.setSelectedShowExtra(((((Labels.INSTANCE.transcription()) + \"[\") + (Labels.INSTANCE.lecoy())) + \"]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1122/buggy-version/rosa-website.rosa-websites.rose-website.src.main.java.rosa.website.rose.client.activity.FSIViewerActivity.java", "BodyUseAPI": [], "Fixed commit": "9d0290d3ae948311c5155d5729850b95e07bc768", "Url": "https://api.github.com/repos/jhu-digital-manuscripts/rosa2", "Date": "2015-08-18T13:49:10Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lecoy) { view.setSelectedShowExtra(((((Labels.INSTANCE.transcription()) + \"[\") + (Labels.INSTANCE.lecoy())) + \"]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1122/buggy-version/rosa-website.rosa-websites.rose-website.src.main.java.rosa.website.rose.client.activity.JSViewerActivity.java", "BodyUseAPI": [], "Fixed commit": "9d0290d3ae948311c5155d5729850b95e07bc768", "Url": "https://api.github.com/repos/jhu-digital-manuscripts/rosa2", "Date": "2015-08-18T13:49:10Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.i3ick.com.WinterSlashManager.getArena(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!((arena.getPlayers().size()) == (arena.getMaxPlayers()))) { arena.sendMessage((((((org.bukkit.ChatColor.BLUE) + (player.getName())) + \" has joined the arena! We only need \") + playersLeft) + \" to start the game!\")); player.teleport(arena.getJoinLocation()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5767/buggy-version/WinterSlash.src.me.i3ick.com.WinterSlashManager.java", "BodyUseAPI": ["org.bukkit.entity.Player.teleport(arena.getJoinLocation())", "me.i3ick.com.WinterSlashArena.sendMessage((((((org.bukkit.ChatColor.BLUE) + (player.getName())) + \" has joined the arena! We only need \") + playersLeft) + \" to start the game!\"))", "me.i3ick.com.WinterSlashArena.getJoinLocation()"], "Fixed commit": "f74d0b95cda12f27cb7bd7c9db257cd890aa69d1", "Url": "https://api.github.com/repos/i3ick/Winter-Slash", "Date": "2014-03-18T21:28:19Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (temp.equals(\"N\u00e3o votou\")) naoVotou++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4296/buggy-version/CamaraLegislativaSP.src.VotesReducer.java", "BodyUseAPI": [], "Fixed commit": "0c3038a13b22027a7ae426b69d4f4c47580d4ad6", "Url": "https://api.github.com/repos/lucaskanashiro/hadoop_application", "Date": "2014-06-26T21:42:51Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ch.css.pomodoro.client.ui.registration.RegistrationUI.userPnrText.getText().length()) <= 4) { javax.swing.JOptionPane.showMessageDialog(null, \"Your P-Number should have at least 5 characters\"); }else { dispose(); ch.css.pomodoro.client.utility.UserInfo.setPNummer(org.apache.commons.lang3.StringUtils.trim(ch.css.pomodoro.client.ui.registration.RegistrationUI.userPnrText.getText())); ch.css.pomodoro.client.utility.UserInfo.setName(org.apache.commons.lang3.StringUtils.trim(ch.css.pomodoro.client.ui.registration.RegistrationUI.userNameText.getText())); ch.css.pomodoro.client.utility.UserInfo.setGroupName(org.apache.commons.lang3.StringUtils.trim(ch.css.pomodoro.client.ui.registration.RegistrationUI.gruppeNameText.getText())); ch.css.pomodoro.client.ui.registration.RegistrationHandler regHandler = new ch.css.pomodoro.client.ui.registration.RegistrationHandler(); try { regHandler.registerClient(); } catch (java.io.UnsupportedEncodingException e1) { javax.swing.JOptionPane.showMessageDialog(null, \"Please don't use unkown symbols/characters.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4360/buggy-version/pomodoro-client.src.main.java.ch.css.pomodoro.client.ui.registration.RegistrationUI.java", "BodyUseAPI": ["org.apache.commons.lang3.StringUtils.trim(java.lang.String)", "javax.swing.JTextField.getText()", "ch.css.pomodoro.client.utility.UserInfo.setPNummer(org.apache.commons.lang3.StringUtils.trim(ch.css.pomodoro.client.ui.registration.RegistrationUI.userPnrText.getText()))"], "Fixed commit": "7dc1fb6ec092a70c4978dc1e0214cb1f7e637cc7", "Url": "https://api.github.com/repos/pomodoro-css/pomodoro-client", "Date": "2015-10-15T15:45:50Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((scheduleField.getText().length()) != 0) { if ((count) < 1) { (count)++; displayDistancePath.setText((\"Shortest distance to your class: \" + (displayDistance()))); displayPath.setText(((\"Shortest path to your class: \" + (displayPath())) + \"\\n\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3065/buggy-version/RoommateFinder.src.ClassPathGUI.java", "BodyUseAPI": [], "Fixed commit": "c2f16b49a203ee6e94b2f0800c427180edbb7565", "Url": "https://api.github.com/repos/DoughKnight/RoommateFinder", "Date": "2016-05-10T17:40:43Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (view)) { view.layout(moveViewStartLeft, moveViewStartTop, moveViewStartRight, moveViewStartBottom); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3589/buggy-version/app.src.main.java.com.don.slidergobutton.AudioDragButton.java", "BodyUseAPI": [], "Fixed commit": "90214ae734a758c562683b0a4a6b6434f49e182d", "Url": "https://api.github.com/repos/ChocolateTan/AudioDragButton", "Date": "2017-03-28T07:12:07Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.njay.MenuFramework.getPlayerManager().getPlayer(((org.bukkit.entity.Player) (e.getPlayer())))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((player.getActiveMenu().getInventory()) != null) && (player.getActiveMenu().getInventory().getViewers().contains(e.getPlayer()))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1964/buggy-version/src.main.java.net.njay.listener.MenuListener.java", "BodyUseAPI": [], "Fixed commit": "d484e8735e45f8e3575f0374a718e3edaa0f6b5b", "Url": "https://api.github.com/repos/gcflames5/menu-framework", "Date": "2014-07-14T03:28:30Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((largestArmy) == player) { name += \" <i class=\\\"material-icons\\\">group</i>\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/95/buggy-version/Server.src.cox5529.catan.CatanGame.java", "BodyUseAPI": [], "Fixed commit": "cbd8ea3d8dbc2959081ef2dd63848c286389a660", "Url": "https://api.github.com/repos/cox5529/catan-multiplayer", "Date": "2017-12-09T05:27:15Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((longestRoad) == player) { name += \" <i class=\\\"material-icons\\\">map</i>\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/95/buggy-version/Server.src.cox5529.catan.CatanGame.java", "BodyUseAPI": [], "Fixed commit": "cbd8ea3d8dbc2959081ef2dd63848c286389a660", "Url": "https://api.github.com/repos/cox5529/catan-multiplayer", "Date": "2017-12-09T05:27:15Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["swp_compiler_ss13.common.ast.nodes.unary.ReturnNode.getRightValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (idNode == null) { icg.addQuadruple(swp_compiler_ss13.javabite.codegen.alternative.QuadrupleFactoryJb.generateReturn(new swp_compiler_ss13.javabite.codegen.alternative.IdentifierData(\"#0\", new swp_compiler_ss13.common.types.primitive.LongType()))); }else { icg.processNode(idNode); swp_compiler_ss13.javabite.codegen.alternative.IdentifierData data = icg.popIdentifierData(); icg.addQuadruple(swp_compiler_ss13.javabite.codegen.alternative.QuadrupleFactoryJb.generateReturn(data)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1073/buggy-version/javabite-code-gen.src.main.java.swp_compiler_ss13.javabite.codegen.alternative.converters.ReturnNodeConverter.java", "BodyUseAPI": ["swp_compiler_ss13.javabite.codegen.alternative.converters.ReturnNodeConverter.processNode(swp_compiler_ss13.common.ast.nodes.IdentifierNode)"], "Fixed commit": "2b962fcd7729697c12c529601de1379302d6b28e", "Url": "https://api.github.com/repos/swp-uebersetzerbau-ss13/javabite", "Date": "2013-05-23T15:26:26Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (type.equals(\"1\")) { com.google.appengine.api.datastore.Query.Filter Mail1_Filter = new com.google.appengine.api.datastore.Query.FilterPredicate(DatastorePropertyNames.Friends_mail1.getProperty(), Query.FilterOperator.EQUAL, Mail); com.google.appengine.api.datastore.Query.Filter Mail2_Filter = new com.google.appengine.api.datastore.Query.FilterPredicate(DatastorePropertyNames.Friends_mail2.getProperty(), Query.FilterOperator.EQUAL, Mail); com.google.appengine.api.datastore.Query.Filter request_Filter = Query.CompositeFilterOperator.or(Mail1_Filter, Mail2_Filter); Request_Query = new com.google.appengine.api.datastore.Query(DatastoreKindNames.FriendsData.getKind()).setFilter(request_Filter); }else if (type.equals(\"0\")) { com.google.appengine.api.datastore.Query.Filter Mail_Filter = new com.google.appengine.api.datastore.Query.FilterPredicate(DatastorePropertyNames.Friends_mail2.getProperty(), Query.FilterOperator.EQUAL, Mail); Request_Query = new com.google.appengine.api.datastore.Query(DatastoreKindNames.FriendsData.getKind()).setFilter(Mail_Filter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/788/buggy-version/backend.src.main.java.com.mapit.backend.FriendsEndpoint.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "49095507d1174b39f0689a132865c1a9549c7172", "Url": "https://api.github.com/repos/shubhashis-k/MAPit", "Date": "2015-02-21T07:59:20Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getAction()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (intentAction.equals((\"\" + (android.content.Intent.ACTION_SCREEN_OFF)))) { if (ScreenLockActivity.isShow) { ScreenLockActivity.isShow = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1818/buggy-version/src.com.eva.me.myscreenlock.LocalBroadcastReceiver.java", "BodyUseAPI": [], "Fixed commit": "6519dd52ca083bd934f4ebead8d077da4296a469", "Url": "https://api.github.com/repos/BigDipper7/My-Screen-Lock---Android", "Date": "2014-09-27T07:26:42Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URLConnection.guessContentTypeFromName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((contentType == null) && (url.endsWith(\".svg\"))) { contentType = \"image/svg+xml\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6897/buggy-version/MapService.src.hulop.hokoukukan.servlet.FileFilter.java", "BodyUseAPI": [], "Fixed commit": "126bfb87e1fd02278f0b242235de5c39b1984ccd", "Url": "https://api.github.com/repos/hulop/MapService", "Date": "2017-12-05T06:58:20Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (errorMessage != null) { error.setDescriptiveEnText(errorMessage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/859/buggy-version/src.main.java.org.jitsi.xmpp.util.IQUtils.java", "BodyUseAPI": ["XMPPError.Builder.setDescriptiveEnText(java.lang.String)"], "Fixed commit": "e645843a133646f7b78feb918811fa2122bf3205", "Url": "https://api.github.com/repos/jitsi/jicoco", "Date": "2017-08-05T22:34:41Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(configMapping.containsKey(token))) { throw new ramsdenj.yamlconfig.model.ConfigurationKeyNotFoundException((\"Configuration key not found: \" + path)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2322/buggy-version/src.main.java.ramsdenj.yamlconfig.YamlConfigImpl.java", "BodyUseAPI": [], "Fixed commit": "d8da9b5671c6c1602c3152620c09306a5653ba22", "Url": "https://api.github.com/repos/jramsden/yamlconfig", "Date": "2014-01-19T04:10:13Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (compare != 0) return compare;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2500/buggy-version/opencga-storage.opencga-storage-hadoop.src.main.java.org.opencb.opencga.storage.hadoop.variant.archive.VcfRecordComparator.java", "BodyUseAPI": [], "Fixed commit": "5b8272be7bd973450f239b1be4d657681da6bded", "Url": "https://api.github.com/repos/opencb/opencga", "Date": "2015-11-23T15:07:51Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pluginInfo.getProperties()) != null) { java.util.List<com.ning.billing.payment.api.PaymentMethodPlugin.PaymentMethodKVInfo> result = new java.util.LinkedList<com.ning.billing.payment.api.PaymentMethodPlugin.PaymentMethodKVInfo>(); for (com.ning.billing.jaxrs.json.PaymentMethodJson.PaymentMethodProperties cur : pluginInfo.getProperties()) { result.add(new com.ning.billing.payment.api.PaymentMethodPlugin.PaymentMethodKVInfo(cur.getKey(), cur.getValue(), cur.isUpdatable)); } return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3750/buggy-version/jaxrs.src.main.java.com.ning.billing.jaxrs.json.PaymentMethodJson.java", "BodyUseAPI": ["com.ning.billing.jaxrs.json.PaymentMethodJson.PaymentMethodPluginDetailJson.getProperties()"], "Fixed commit": "be610a37918516ecccdf59451c580740427ee8f4", "Url": "https://api.github.com/repos/ning/killbill", "Date": "2012-06-13T21:44:24Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (this.config.isJms()) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8839/buggy-version/kie-remote.kie-remote-client.src.main.java.org.kie.services.client.api.command.AbstractRemoteCommandObject.java", "BodyUseAPI": [], "Fixed commit": "90a1ae3c38c771a8c478393acb66a1a0295e3573", "Url": "https://api.github.com/repos/etirelli/droolsjbpm-integration", "Date": "2014-08-20T11:18:52Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((config.getTaskQueue()) == null) { throw new org.kie.services.client.api.command.exception.MissingRequiredInfoException(\"A Task queue is necessary in order to create a Remote Client TaskService instance.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8839/buggy-version/kie-remote.kie-remote-client.src.main.java.org.kie.services.client.api.command.TaskServiceClientCommandObject.java", "BodyUseAPI": [], "Fixed commit": "90a1ae3c38c771a8c478393acb66a1a0295e3573", "Url": "https://api.github.com/repos/etirelli/droolsjbpm-integration", "Date": "2014-08-20T11:18:52Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((config.getKsessionQueue()) == null) { throw new org.kie.services.client.api.command.exception.MissingRequiredInfoException(\"A KieSession queue is necessary in order to create a Remote Client KieSession instance.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8839/buggy-version/kie-remote.kie-remote-client.src.main.java.org.kie.services.client.api.command.KieSessionClientCommandObject.java", "BodyUseAPI": [], "Fixed commit": "90a1ae3c38c771a8c478393acb66a1a0295e3573", "Url": "https://api.github.com/repos/etirelli/droolsjbpm-integration", "Date": "2014-08-20T11:18:52Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(SSRCSignaling.SSRC_OWNER_JVB.equals(ownerJid))) logger.error((\"Stream owner not a participant or not found for jid: \" + ownerJid));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4203/buggy-version/src.main.java.org.jitsi.jicofo.LipSyncHack.java", "BodyUseAPI": ["org.jitsi.jicofo.Logger.error(java.lang.String)"], "Fixed commit": "d75078de29acd3bd7cdf18483afd7aa75b5100e0", "Url": "https://api.github.com/repos/jitsi/jicofo", "Date": "2016-10-05T20:59:00Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (metadataParamTypes == null) { metadataParamTypes = getParamTypesUsingMetadata(connection, queryTemplate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4754/buggy-version/modules.db.src.main.java.org.mule.module.db.internal.resolver.param.DefaultParamTypeResolver.java", "BodyUseAPI": [], "Fixed commit": "d1eee7090953b7e0965c93a737aa09eda5af41c6", "Url": "https://api.github.com/repos/ullgren/mule", "Date": "2014-10-15T19:09:38Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.lucidworks.analysis.CharArrayUtil.equals(potentialPhraseWords.get(0).toCharArray(), unusedTokens.get(0))) { int response = matches(potentialPhraseWords.subList(1, potentialPhraseWords.size()), unusedTokens.subList(1, unusedTokens.size())); if (response == (-1)) return -1; else return response + 1; }else return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5441/buggy-version/src.com.lucidworks.analysis.AutoPhrasingTokenFilter.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "java.util.List<char[]>.subList(int,int)", "com.lucidworks.analysis.AutoPhrasingTokenFilter.matches(java.util.List<java.lang.String>,java.util.List<char[]>)", "java.util.List<java.lang.String>.subList(int,int)", "java.util.List<char[]>.size()"], "Fixed commit": "13c895efb1ec2f826ac8c39ab5732034cf55254d", "Url": "https://api.github.com/repos/schledererj/auto-phrase-tokenfilter", "Date": "2015-08-21T18:45:20Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((object == null) || ((getClass()) != (object.getClass()))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/9109/buggy-version/grakn-graph.src.main.java.ai.grakn.graph.internal.EdgeElement.java", "BodyUseAPI": [], "Fixed commit": "f24fec5664ebbb25386ab0ab43c176eb6d76ab21", "Url": "https://api.github.com/repos/fppt/grakn", "Date": "2017-06-06T15:15:25Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<org.jsoup.nodes.Element>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (e2.toString().contains(\"code=\\\"c\\\"\")) { java.lang.String[] array = e2.toString().split(\"\\n\"); author = array[1].substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3947/buggy-version/src.main.java.no.hials.muldvarpweb.service.BIBSysService.java", "BodyUseAPI": ["org.jsoup.nodes.Element.toString()", "e2.toString().split(java.lang.String)"], "Fixed commit": "e19b2543e881f4dd61588d5a636661834924f331", "Url": "https://api.github.com/repos/mikael2/MuldvarpWeb", "Date": "2013-05-21T10:52:13Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.Object>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (componentName.trim().equals(\"\")) { java.lang.System.err.println(\"No name for component is provided\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8571/buggy-version/SupplyChainManager.src.controller.product.ComponentController.java", "BodyUseAPI": [], "Fixed commit": "33ead1afeffcd13c7aa3f8c1bb50d0f633bca1e0", "Url": "https://api.github.com/repos/arianbakh/OOD", "Date": "2017-08-10T14:20:43Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (net.pms.util.StringUtil.hasValue(tagInfo.year)) { if ((tagInfo.year.length()) > 4) { result.updateString(\"YEAR\", tagInfo.year.substring(0, 4)); }else { result.updateString(\"YEAR\", tagInfo.year); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6578/buggy-version/src.main.java.net.pms.database.TableMusicBrainzReleases.java", "BodyUseAPI": ["tagInfo.year.substring(int,int)", "tagInfo.year.length()", "java.sql.ResultSet.updateString(java.lang.String,tagInfo.year.substring(0, 4))", "java.sql.ResultSet.updateString(java.lang.String,tagInfo.year)"], "Fixed commit": "022cac5c4ba0df570511d68fafe5ed29ed9f31cd", "Url": "https://api.github.com/repos/UniversalMediaServer/UniversalMediaServer", "Date": "2016-12-18T06:28:01Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((command.getCardId()) != null) { com.bank.bean.card.CardBean card = cardRepository.findOne(command.getCardId()); bean.setCard(card); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7601/buggy-version/src.main.java.com.bank.service.transaction.TransactionService.java", "BodyUseAPI": ["com.bank.repository.card.CardRepository.findOne(command.getCardId())", "com.bank.command.transaction.TransactionAddCommand.getCardId()"], "Fixed commit": "c0b80c07039adc90f3b520a3a3513df7e0ce9a50", "Url": "https://api.github.com/repos/JvdK/F4U-Bank", "Date": "2017-04-24T19:40:11Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isAlive())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6037/buggy-version/java-practice.src.main.java.com.janosgyerik.codingame.tron.Player.java", "BodyUseAPI": [], "Fixed commit": "a27e7edd03f45d4a425434bc3b08374f10b3c431", "Url": "https://api.github.com/repos/janosgyerik/animated-octo-batman", "Date": "2014-05-01T16:25:31Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (target.getUniqueId().equals(ply.getUniqueId())) { ply.kick(org.spongepowered.api.text.Text.of(\"Ouf je viens de te sauv\u00e9 la vie, heuresement que je suis l\u00e0 !\")); return org.spongepowered.api.command.CommandResult.success(); }else if (fr.mrfern.pumpmysponge.config.PlayerConfig.getInstance().getPlayerConfigNode(target.getUniqueId()).getIsBanned()) { org.spongepowered.api.text.Text textClaimed = org.spongepowered.api.text.Text.builder(\"Le joueur sp\u00e9cifi\u00e9 est d\u00e9j\u00e0 banni \").color(TextColors.RED).build(); org.spongepowered.api.text.Text textEnTete = org.spongepowered.api.text.Text.builder(\"[ PumpMyStaff ] \").color(TextColors.GOLD).append(textClaimed).build(); ply.sendMessage(textEnTete); return org.spongepowered.api.command.CommandResult.empty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6434/buggy-version/src.main.java.fr.mrfern.pumpmysponge.player.ban.commands.TBanCommand.java", "BodyUseAPI": ["org.spongepowered.api.entity.living.player.Player.sendMessage(org.spongepowered.api.text.Text)", "fr.mrfern.pumpmysponge.config.PlayerConfig.getInstance().getPlayerConfigNode(target.getUniqueId())", "org.spongepowered.api.entity.living.player.Player.kick(org.spongepowered.api.text.Text.of(\"Ouf je viens de te sauv\u00e9 la vie, heuresement que je suis l\u00e0 !\"))", "fr.mrfern.pumpmysponge.config.PlayerConfig.getInstance().getPlayerConfigNode(target.getUniqueId()).getIsBanned()", "org.spongepowered.api.entity.living.player.Player.getUniqueId()"], "Fixed commit": "ef2819b098553e0a67dc666b917ec35cd4f8826a", "Url": "https://api.github.com/repos/PumpMyKins/PMK-Sponge-Poubelle", "Date": "2017-11-30T21:53:09Z"},
{"Line": "=>976", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (card.getStatus().containsStatus(CardStatusType.\u53ec\u5524)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5275/buggy-version/workspace.CardFantasyCore.src.cfvbaibai.cardfantasy.engine.SkillResolver.java", "BodyUseAPI": [], "Fixed commit": "1168f88c66d881f918b5090752eaf8fbdede1a5c", "Url": "https://api.github.com/repos/cfvbaibai/CardFantasy", "Date": "2015-02-13T13:47:27Z"},
{"Line": "=>504", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yat3s.chopin.wrapper.IndicatorViewWrapper.getHeight()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (start == end) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5522/buggy-version/chopin.src.main.java.com.yat3s.chopin.ChopinLayout.java", "BodyUseAPI": [], "Fixed commit": "96ed4c50944790a2cdf8ec15ce75ffaae43699d8", "Url": "https://api.github.com/repos/Yat3s/Chopin", "Date": "2017-07-28T10:20:56Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (primerSensor) { potencia = sensor.getPower(); primerSensor = false; sensorAcel = sensor; }else if ((potencia) >= (sensor.getPower())) { potencia = sensor.getPower(); sensorAcel = sensor; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7200/buggy-version/app.src.main.java.com.example.caxidy.proyectojuego.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c827cf5824762141d64d4f4eb7ddc48bf6d3d48f", "Url": "https://api.github.com/repos/ElenaCuellar/ProyectoJuego", "Date": "2017-02-11T11:23:21Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((t.getText()) != null) { values.add(java.lang.Double.parseDouble(t.getText().toString())); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5245/buggy-version/java.me.elizabeth_williams.matrix.MainActivity.java", "BodyUseAPI": ["android.widget.TextView.getText()", "t.getText().toString()", "java.util.ArrayList<java.lang.Double>.add(double)", "java.lang.Double.parseDouble(t.getText().toString())"], "Fixed commit": "cdd13a9b8c5711c8b830c4168b32039f06ebac89", "Url": "https://api.github.com/repos/ewilliams96/matrix-calculator", "Date": "2016-06-04T10:06:30Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((from != null) && (from.equals(\"warehouse@talk.kik.com\"))) { chatContext.runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { android.widget.Toast.makeText(chatContext.getApplicationContext(), (finalFrom + \" saw your message!\"), Toast.LENGTH_SHORT).show(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3935/buggy-version/app.src.main.java.com.xkikdev.xkik.xkik_xposed.java", "BodyUseAPI": [], "Fixed commit": "057e5b5472e051e3c643a2babb75c7732e2589b9", "Url": "https://api.github.com/repos/xkik-dev/XKik", "Date": "2017-05-07T22:34:57Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (member instanceof com.andela.member.Student) return -1; else return 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5628/buggy-version/src.com.andela.model.Member.java", "BodyUseAPI": [], "Fixed commit": "03a3766ff28376c8cb3062a2f19edf87db3c01aa", "Url": "https://api.github.com/repos/spykins/checkpointone", "Date": "2015-12-23T16:57:53Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.sqrt(double)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (r > 0) { c = x / r; s = (-y) / r; }else { c = 1; s = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1151/buggy-version/Part1.java", "BodyUseAPI": [], "Fixed commit": "1319ee6f97429c87736a14b0d66a071cc38c595a", "Url": "https://api.github.com/repos/HerndonHerbigCalcProject/Calc3Project", "Date": "2015-11-19T15:01:45Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Vector.magnitude()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (mag > 0) { X = X.scalarMultiply((1 / (X.magnitude()))).toVector(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1151/buggy-version/Part1.java", "BodyUseAPI": [], "Fixed commit": "1319ee6f97429c87736a14b0d66a071cc38c595a", "Url": "https://api.github.com/repos/HerndonHerbigCalcProject/Calc3Project", "Date": "2015-11-19T15:01:45Z"},
{"Line": "=>849", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.emc.storageos.storagedriver.DenaliDriver.GENERATE_EXPORT_DATA) { generateExportDataForVolumeReplica(volume, clone); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6653/buggy-version/internalLibraries.storagedriver.src.main.java.com.emc.storageos.storagedriver.DenaliDriver.java", "BodyUseAPI": [], "Fixed commit": "de29d842f932c9219538cf84541c39aadd88e624", "Url": "https://api.github.com/repos/Lidaja/coprhd-controller", "Date": "2016-05-27T16:04:27Z"},
{"Line": "=>819", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.emc.storageos.storagedriver.DenaliDriver.GENERATE_EXPORT_DATA) { generateExportDataForVolumeReplica(volume, snapshot); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6653/buggy-version/internalLibraries.storagedriver.src.main.java.com.emc.storageos.storagedriver.DenaliDriver.java", "BodyUseAPI": [], "Fixed commit": "de29d842f932c9219538cf84541c39aadd88e624", "Url": "https://api.github.com/repos/Lidaja/coprhd-controller", "Date": "2016-05-27T16:04:27Z"},
{"Line": "=>839", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.emc.storageos.storagedriver.DenaliDriver.CLONES_IN_CG) { clone.setConsistencyGroup((((volume.getConsistencyGroup()) + \"cloneGroup-\") + i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6653/buggy-version/internalLibraries.storagedriver.src.main.java.com.emc.storageos.storagedriver.DenaliDriver.java", "BodyUseAPI": [], "Fixed commit": "de29d842f932c9219538cf84541c39aadd88e624", "Url": "https://api.github.com/repos/Lidaja/coprhd-controller", "Date": "2016-05-27T16:04:27Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["RayTracing.Vector.dotProduct(L.toUnit())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (factor < 0) factor = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4515/buggy-version/src.RayTracing.Set.java", "BodyUseAPI": [], "Fixed commit": "a564ee5e40354e43b10c4e83099f19b9119420eb", "Url": "https://api.github.com/repos/eyalw711/RayTracing", "Date": "2017-05-14T12:06:33Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eluder.coveralls.maven.plugin.service.Shippable.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"false\".equals(pullRequest)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6071/buggy-version/src.main.java.org.eluder.coveralls.maven.plugin.service.Shippable.java", "BodyUseAPI": [], "Fixed commit": "89d02a4e7f6bb41199aba251312543ec7932bf7c", "Url": "https://api.github.com/repos/velo/coveralls-maven-plugin", "Date": "2015-02-26T21:11:23Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIntent().getStringExtra(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((tab != null) && (tab.equals(\"bills_law\"))) adapter.selectPage(2); else if ((tab != null) && (tab.equals(\"bills_active\"))) adapter.selectPage(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3197/buggy-version/app.src.main.java.com.sunlightlabs.android.congress.MenuBills.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "8b7f7b0b11ecedce9ae1c2045d3f9e1cf5c9c6ee", "Url": "https://api.github.com/repos/konklone/congress-android", "Date": "2017-09-24T19:50:17Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connetion) != null) { connetion.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2484/buggy-version/RemoteClient.src.main.RemoteWarClientController.java", "BodyUseAPI": [], "Fixed commit": "209cc772d5ee0392e848ecc7ffba48029858f71c", "Url": "https://api.github.com/repos/kokoreko/WarGamesGuyBen", "Date": "2014-10-11T10:36:27Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (flowStatuses != null) { for (com.baifendian.swordfish.dao.enums.FlowStatus status : flowStatuses) { flowStatusStrList.add(status.getType().toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2439/buggy-version/dao.src.main.java.com.baifendian.swordfish.dao.mapper.ExecutionFlowMapperProvider.java", "BodyUseAPI": [], "Fixed commit": "061da0c5fe75d4f23d26b98b73028d78efb3a3ba", "Url": "https://api.github.com/repos/baifendian/swordfish", "Date": "2017-04-12T11:26:34Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAlive()) super.add(buff);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/435/buggy-version/src.com.shatteredpixel.shatteredpixeldungeon.actors.mobs.Elemental.java", "BodyUseAPI": [], "Fixed commit": "23a644403b634b88a8bd90b6795122285fc01a60", "Url": "https://api.github.com/repos/00-Evan/shattered-pixel-dungeon", "Date": "2014-11-25T03:39:58Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sun.tools.visualvm.profiling.snapshot.ProfilerSnapshot.getLoadedSnapshot()", "com.sun.tools.visualvm.profiling.snapshot.ProfilerSnapshot.getLoadedSnapshot()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((s1.getSnapshot()) instanceof org.netbeans.lib.profiler.results.memory.LivenessMemoryResultsSnapshot) && ((s2.getSnapshot()) instanceof org.netbeans.lib.profiler.results.memory.LivenessMemoryResultsSnapshot)) return new org.netbeans.lib.profiler.results.memory.LivenessMemoryResultsDiff(((org.netbeans.lib.profiler.results.memory.LivenessMemoryResultsSnapshot) (s1.getSnapshot())), ((org.netbeans.lib.profiler.results.memory.LivenessMemoryResultsSnapshot) (s2.getSnapshot()))); else if (((s1.getSnapshot()) instanceof org.netbeans.lib.profiler.results.memory.SampledMemoryResultsSnapshot) && ((s2.getSnapshot()) instanceof org.netbeans.lib.profiler.results.memory.SampledMemoryResultsSnapshot)) return new org.netbeans.lib.profiler.results.memory.SampledMemoryResultsDiff(((org.netbeans.lib.profiler.results.memory.SampledMemoryResultsSnapshot) (s1.getSnapshot())), ((org.netbeans.lib.profiler.results.memory.SampledMemoryResultsSnapshot) (s2.getSnapshot())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3883/buggy-version/visualvm.profiling.src.com.sun.tools.visualvm.profiling.snapshot.diff.SnapshotDiffContainer.java", "BodyUseAPI": ["org.netbeans.modules.profiler.LoadedSnapshot.getSnapshot()", "org.netbeans.modules.profiler.LoadedSnapshot.getSnapshot()", "org.netbeans.modules.profiler.LoadedSnapshot.getSnapshot()", "org.netbeans.modules.profiler.LoadedSnapshot.getSnapshot()", "org.netbeans.modules.profiler.LoadedSnapshot.getSnapshot()", "org.netbeans.modules.profiler.LoadedSnapshot.getSnapshot()"], "Fixed commit": "57ade6aaa8203aef5c366b41167c67c001475b5d", "Url": "https://api.github.com/repos/oracle/visualvm", "Date": "2016-09-15T14:10:13Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bitcoinj.core.Transaction.getValue(org.bitcoinj.wallet.Wallet)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (dashjValue.isPositive()) { isIncoming = true; }else { isIncoming = false; dashjValue = dashjValue.negate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/32/buggy-version/src.main.java.com.mycelium.spvmodule.dash.providers.TransactionContentProvider.java", "BodyUseAPI": ["org.bitcoinj.core.Coin.negate()"], "Fixed commit": "7006a9a49788cb02866cbfe18d0504631a1ac253", "Url": "https://api.github.com/repos/tomasz-ludek/wallet-android-spvmodule-dash", "Date": "2017-12-18T16:28:14Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.oauth2.provider.token.DefaultTokenServices.loadAuthentication(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((oAuth2Authentication.getUserAuthentication()) != null) { oAuth2AuthenticationSpring.setAuthenticationSpring(mappingFrom(oAuth2Authentication.getUserAuthentication())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4436/buggy-version/auth-server.src.main.java.org.osiam.security.controller.TokenController.java", "BodyUseAPI": ["org.springframework.security.oauth2.provider.OAuth2Authentication.getUserAuthentication()", "org.osiam.security.OAuth2AuthenticationSpring.setAuthenticationSpring(org.osiam.security.AuthorizationRequestSpring)", "org.osiam.security.controller.TokenController.mappingFrom(oAuth2Authentication.getUserAuthentication())"], "Fixed commit": "88ff26353a855a0a8a9a151c2fd7356995f91ffa", "Url": "https://api.github.com/repos/dacrome/server", "Date": "2013-10-23T10:52:13Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((scroll.getContent()) != null) { scroll.getContent().dispose(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8409/buggy-version/src.per.dizzam.sustc.jwxt.gui.CourseManager.java", "BodyUseAPI": ["org.eclipse.swt.custom.ScrolledComposite.getContent()", "scroll.getContent().dispose()"], "Fixed commit": "923e0363ee7473e529e9755cac00f4d01b4a0055", "Url": "https://api.github.com/repos/dizzam/sustc-jwxt", "Date": "2017-12-22T03:55:44Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (source.hasTop()) { key = source.getTopKey(); }else { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/570/buggy-version/extensions.datastores.accumulo.src.main.java.mil.nga.giat.geowave.datastore.accumulo.query.QueryFilterIterator.java", "BodyUseAPI": ["org.apache.accumulo.core.iterators.SortedKeyValueIterator<org.apache.accumulo.core.data.Key, org.apache.accumulo.core.data.Value>.getTopKey()"], "Fixed commit": "2ee4591226a1516f1db58ffae32d6f3be6fc4167", "Url": "https://api.github.com/repos/locationtech/geowave", "Date": "2016-07-09T02:35:30Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["index.getIndexStrategy().getOrderedDimensionDefinitions()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((dimensions[d]) instanceof mil.nga.giat.geowave.core.index.sfc.SFCDimensionDefinition) { baseDefinitionCls = ((mil.nga.giat.geowave.core.index.sfc.SFCDimensionDefinition) (dimensions[d])).getDimensionDefinition().getClass(); }else { baseDefinitionCls = dimensions[d].getClass(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/570/buggy-version/core.store.src.main.java.mil.nga.giat.geowave.core.store.data.CommonIndexedPersistenceEncoding.java", "BodyUseAPI": ["((mil.nga.giat.geowave.core.index.sfc.SFCDimensionDefinition) (dimensions[d])).getDimensionDefinition()", "((mil.nga.giat.geowave.core.index.sfc.SFCDimensionDefinition) (dimensions[d])).getDimensionDefinition().getClass()", "dimensions[d].getClass()"], "Fixed commit": "2ee4591226a1516f1db58ffae32d6f3be6fc4167", "Url": "https://api.github.com/repos/locationtech/geowave", "Date": "2016-07-09T02:35:30Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["by.dzmitry.model.entities.Word.getMetadataEntry(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (synonyms == null) { return new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4532/buggy-version/src.main.java.by.dzmitry.controllers.QuestionsController.java", "BodyUseAPI": [], "Fixed commit": "109bf9b6569c9a1d088ac6c5a4e0db63d7337121", "Url": "https://api.github.com/repos/dzmitry-ivanou/words-mvc-gae", "Date": "2017-11-08T07:34:46Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(straySearch)) { presenter.onSearch(query); }else { straySearch = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5774/buggy-version/app.src.main.java.aashrai.android.gettowork.view.activity.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "8ae19779db3d749d90c7a46c4bb21ecdd7f66f32", "Url": "https://api.github.com/repos/aashrai/GET-TO-WORK", "Date": "2016-05-06T12:03:02Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(closed.get())) { bufferBytes -= page.getRetainedSizeInBytes(); systemMemoryUsageListener.updateSystemMemoryUsage((-(page.getRetainedSizeInBytes()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6234/buggy-version/presto-main.src.main.java.com.facebook.presto.operator.ExchangeClient.java", "BodyUseAPI": [], "Fixed commit": "07c22afffdf5b13928a359af31d46544441c47d3", "Url": "https://api.github.com/repos/dain/presto", "Date": "2016-12-28T23:44:05Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"getWrappedDriver\".equals(method.getName())) { element.getSize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8588/buggy-version/src.main.java.io.appium.java_client.pagefactory.ElementInterceptor.java", "BodyUseAPI": [], "Fixed commit": "b68de60b32f52f148b5f28c0cd39297083c31d07", "Url": "https://api.github.com/repos/d0lfin/java-client", "Date": "2015-10-14T16:38:37Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (args != null) jc.parse(args);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3440/buggy-version/seage-launcher.src.main.java.org.seage.launcher.Launcher.java", "BodyUseAPI": ["com.beust.jcommander.JCommander.parse(java.lang.String[])"], "Fixed commit": "8e900b1bc6704d62fe6832a96a47040f83d66032", "Url": "https://api.github.com/repos/seage/seage", "Date": "2016-08-20T22:45:31Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (length == 0) { while ((start > 0) && (java.lang.Character.isJavaIdentifierPart(contents[(start - 1)]))) { start -= 1; length += 1; } while (((contents.length) > (start + length)) && (java.lang.Character.isJavaIdentifierPart(contents[(start + length)]))) { length += 1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4353/buggy-version/ide.org.codehaus.groovy.eclipse.codebrowsing.src.org.codehaus.groovy.eclipse.codebrowsing.requestor.CodeSelectHelper.java", "BodyUseAPI": [], "Fixed commit": "0d2676a4ea6770a97f13ef332f3901600343d7a5", "Url": "https://api.github.com/repos/groovy/groovy-eclipse", "Date": "2017-09-30T14:29:27Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (arg0 != 2) { imageFragment.clearImagePath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8799/buggy-version/Encourage-Android.src.com.jhl.encourage.activities.JHReportWizardActivity.java", "BodyUseAPI": [], "Fixed commit": "fd0a89a108684bdf2588a74a51a9f4bf53cb8ed2", "Url": "https://api.github.com/repos/abubalanandan/Encourage-Android", "Date": "2014-07-21T17:20:07Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.TabHost.getCurrentTab()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pos != 2) { imageFragment.clearImagePath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8799/buggy-version/Encourage-Android.src.com.jhl.encourage.activities.JHReportWizardActivity.java", "BodyUseAPI": [], "Fixed commit": "fd0a89a108684bdf2588a74a51a9f4bf53cb8ed2", "Url": "https://api.github.com/repos/abubalanandan/Encourage-Android", "Date": "2014-07-21T17:20:07Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (promoteDebugAsInfo) { getLog().info(outputLine); }else { getLog().debug(outputLine); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/107/buggy-version/src.main.java.co.escapeideas.maven.ansible.AbstractAnsibleMojo.java", "BodyUseAPI": [], "Fixed commit": "90bde5a5115903d99ecfa9916ea4c32a539475cd", "Url": "https://api.github.com/repos/tmullender/ansible-maven-plugin", "Date": "2015-03-11T18:02:47Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (disableClickListener) { circle1.setOnClickListener(null); circle2.setOnClickListener(null); circle3.setOnClickListener(null); circle4.setOnClickListener(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3851/buggy-version/app.src.main.java.com.example.android.mastermind.ColourChoiceViewHolder.java", "BodyUseAPI": [], "Fixed commit": "5988cff93e52827acdd72bd0695696adb9126557", "Url": "https://api.github.com/repos/lydiazhu/Mastermind", "Date": "2016-05-28T19:54:50Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sonarQubeVersion.isGreaterThanOrEqual(JacocoConfiguration.SQ_6_2))) { extensions.add(org.sonar.plugins.jacoco.JaCoCoItSensor.class, org.sonar.plugins.jacoco.JaCoCoOverallSensor.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2180/buggy-version/java-jacoco.src.main.java.org.sonar.plugins.jacoco.JaCoCoExtensions.java", "BodyUseAPI": [], "Fixed commit": "3129bad65e4f3379b2913adf0539a8e20fde9637", "Url": "https://api.github.com/repos/SonarSource/sonar-java", "Date": "2016-12-14T16:53:38Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((command.getAmount()) < 0) { throw new com.bank.exception.BadRequestException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1775/buggy-version/src.main.java.com.bank.service.transaction.TransactionService.java", "BodyUseAPI": [], "Fixed commit": "c29e9def83b5e36ca04142b1e6a1e9f5f001f7c9", "Url": "https://api.github.com/repos/JvdK/F4U-Bank", "Date": "2017-04-26T06:51:36Z"},
{"Line": "=>492", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((counter) > 1) traverseToDeCompress(temp.charAt(i));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/507/buggy-version/src.core.LoadImage2.java", "BodyUseAPI": [], "Fixed commit": "d2edad5e84ef1ece2b40b74756f3de580890761a", "Url": "https://api.github.com/repos/TeamSantiagoNebril/CompressIt_MP2", "Date": "2017-05-07T12:26:45Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (heuristique == null) { if (arcmanager.isToCircle()) heuristique = arcmanager.heuristicDirect(depart.state.robot.getCinematique()); else throw new exceptions.PathfindingException(\"Aucun chemin trouv\u00e9 par le D* Lite !\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7485/buggy-version/pc.src.pathfinding.astar.AStarCourbe.java", "BodyUseAPI": [], "Fixed commit": "7f382d8f7a571b15a604606ca5d3a68dbc14eab2", "Url": "https://api.github.com/repos/INTechSenpai/moon-rover", "Date": "2017-05-11T13:01:37Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(worldIn.isRemote)) { for (net.minecraft.entity.projectile.EntityArrow entityarrow : arrows) { worldIn.spawnEntity(entityarrow); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7407/buggy-version/src.main.java.github.io.isenfireldc.misc.tileentity.TileEntityArrowSpawner.java", "BodyUseAPI": ["net.minecraft.world.World.spawnEntity(net.minecraft.entity.projectile.EntityArrow)"], "Fixed commit": "a8383e2746b86f8bd570e02acd0787bdf73af5ed", "Url": "https://api.github.com/repos/IsenfireLDC/mod_of_miscellany", "Date": "2017-10-25T18:09:10Z"},
{"Line": "=>1143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.String, com.orientechnologies.orient.server.distributed.impl.ODistributedStorage>.remove(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (stg != null) stg.close(true, false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7035/buggy-version/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.ODistributedAbstractPlugin.java", "BodyUseAPI": ["com.orientechnologies.orient.server.distributed.impl.ODistributedStorage.close(boolean,boolean)"], "Fixed commit": "9cad54ebc9816fd7595b2f5b2371b6f785d4dcc7", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-12-22T11:19:23Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (directionV) { (y)++; }else { (y)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5500/buggy-version/java.src.Bubble.java", "BodyUseAPI": [], "Fixed commit": "a52f40e2e407bb32ae650ae1acf51a68e4ce5dd4", "Url": "https://api.github.com/repos/Ishadijcks/SEMgroup32", "Date": "2015-09-02T22:02:03Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((x) + (radius)) > 250) && (directionH)) || (((x) <= 1) && (!(directionH)))) { bounceH(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5500/buggy-version/java.src.Bubble.java", "BodyUseAPI": [], "Fixed commit": "a52f40e2e407bb32ae650ae1acf51a68e4ce5dd4", "Url": "https://api.github.com/repos/Ishadijcks/SEMgroup32", "Date": "2015-09-02T22:02:03Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((y) + (radius)) > 350) && (directionV)) || (((y) <= 1) && (!(directionV)))) { bounceV(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5500/buggy-version/java.src.Bubble.java", "BodyUseAPI": [], "Fixed commit": "a52f40e2e407bb32ae650ae1acf51a68e4ce5dd4", "Url": "https://api.github.com/repos/Ishadijcks/SEMgroup32", "Date": "2015-09-02T22:02:03Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (directionH) { (x)++; }else { (x)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5500/buggy-version/java.src.Bubble.java", "BodyUseAPI": [], "Fixed commit": "a52f40e2e407bb32ae650ae1acf51a68e4ce5dd4", "Url": "https://api.github.com/repos/Ishadijcks/SEMgroup32", "Date": "2015-09-02T22:02:03Z"},
{"Line": "=>618", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((textField1.getText().length()) > 2) { jTextArea1.append((\"\\nCreated Bucket: \" + (textField1.getText()))); Bucket.makeBucket(Cred.getAccess_key(), Cred.getSecret_key(), textField1.getText().toLowerCase(), Cred.getEndpoint(), Cred.getRegion()); reloadBuckets(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4612/buggy-version/src.s3.NewJFrame.java", "BodyUseAPI": ["java.lang.String.toLowerCase()", "java.awt.TextField.getText()", "javax.swing.JTextArea.append(java.lang.String)", "s3.bucket.makeBucket(Cred.getAccess_key(),Cred.getSecret_key(),java.lang.String,Cred.getEndpoint(),Cred.getRegion())", "java.awt.TextField.getText()"], "Fixed commit": "257781fad031404fedfa3dc9b204a5070beb3eed", "Url": "https://api.github.com/repos/rusher81572/s3", "Date": "2013-11-25T05:26:17Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.talend.repository.model.nodes.IProjectRepositoryNode.getRootRepositoryNode(org.talend.core.model.repository.ERepositoryObjectType,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (rootNode != null) { if ((type != null) && (type.hasChildrenType())) { for (org.talend.core.model.repository.ERepositoryObjectType childType : type.getChildrenTypesArray()) { org.talend.repository.model.RepositoryNode childRootNode = ((org.talend.repository.model.ProjectRepositoryNode) (projectRepoNode)).getRootRepositoryNode(childType, true); if (((childRootNode != null) && (childRootNode.hasChildren())) && (!(rootNode.getChildren().contains(childRootNode)))) { rootNode.getChildren().add(childRootNode); } } } rootNodes.add(rootNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/9124/buggy-version/main.plugins.org.talend.core.repository.src.main.java.org.talend.repository.ui.utils.RecombineRepositoryNodeUtil.java", "BodyUseAPI": ["rootNode.getChildren().add(org.talend.repository.model.RepositoryNode)", "rootNode.getChildren().contains(org.talend.repository.model.RepositoryNode)", "org.talend.repository.model.RepositoryNode.getChildren()", "java.util.List<org.talend.repository.model.RepositoryNode>.add(org.talend.repository.model.RepositoryNode)", "org.talend.repository.model.RepositoryNode.getChildren()"], "Fixed commit": "10a1b63f81bdd680219de4236a725b1dc0045ebb", "Url": "https://api.github.com/repos/Talend/tcommon-studio-se", "Date": "2014-07-31T08:43:10Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (files != null) { for (java.io.File file : files) { java.lang.String name = file.getName(); if (name.endsWith(\".yml\")) { name = (io.fabric8.utils.Strings.stripSuffix(name, \".yml\")) + \".yaml\"; } java.io.File targetFile = new java.io.File(templatesDir, name); try { io.fabric8.utils.Files.copy(file, targetFile); } catch (java.io.IOException e) { throw new org.apache.maven.plugin.MojoExecutionException((((((\"Failed to copy manifest files from \" + file) + \" to \") + targetFile) + \": \") + e), e); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8885/buggy-version/plugin.src.main.java.io.fabric8.maven.plugin.HelmMojo.java", "BodyUseAPI": [], "Fixed commit": "8f91c861c09156e8617afaf892728f5275473a9a", "Url": "https://api.github.com/repos/rhuss/fabric8-maven-plugin", "Date": "2016-10-08T13:24:56Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ListIterator<com.samrj.devil.graphics.ShaderSource>.previous()", "java.util.ListIterator<com.samrj.devil.graphics.ShaderSource>.previous()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dependency == source) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5246/buggy-version/src.com.samrj.devil.graphics.ShaderProcessor.java", "BodyUseAPI": [], "Fixed commit": "759eb4f38f7b618919014f0b8129b520bbb3856e", "Url": "https://api.github.com/repos/SmashMaster/DevilUtil", "Date": "2014-10-19T04:15:19Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.wpi.cetask.Plan.getStatus()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (status.equals(Status.INAPPLICABLE)) return Mechanisms.Collaboration.Collaboration.GOAL_STATUS.INAPPLICABLE; else if (preconditionApplicability != null) if (!preconditionApplicability) return Mechanisms.Collaboration.Collaboration.GOAL_STATUS.INAPPLICABLE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6331/buggy-version/src.Mechanisms.Collaboration.Collaboration.java", "BodyUseAPI": [], "Fixed commit": "464cab21bead7def58c719aa1699fd39caf3f8f6", "Url": "https://api.github.com/repos/mshayganfar/AffectiveMotivationalCollaborationFramework", "Date": "2016-05-24T18:09:31Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((p.row) != (this.row)) || ((p.col) != (this.col))) { if ((p.value) == previousValue) { (p.numConflicts)--; (this.parentGrid.netConflict)--; }else if ((p.value) == (this.value)) { (p.numConflicts)++; (this.parentGrid.netConflict)++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5415/buggy-version/src.sudoku.EmptyPosition.java", "BodyUseAPI": [], "Fixed commit": "6634adbd68ccd9d6d393cd3f7762a5240edcb9db", "Url": "https://api.github.com/repos/thomascastleman/n-sudoku", "Date": "2017-11-26T19:07:01Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (serviceMgr.isServiceConnected()) { this.dpApi = serviceMgr.get3drServices().acquireDroidPlannerApi(this.droneCallback); resetFlightTimer(); lbm.registerReceiver(broadcastReceiver, com.o3dr.android.client.Drone.intentFilter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7499/buggy-version/lib.src.main.java.com.o3dr.android.client.Drone.java", "BodyUseAPI": ["com.o3dr.android.client.ServiceManager.get3drServices()", "serviceMgr.get3drServices().acquireDroidPlannerApi(com.o3dr.android.client.DroneCallback)"], "Fixed commit": "ced0cd36b468b58d8a32710513361b4cb03e9bb8", "Url": "https://api.github.com/repos/DroidPlanner/droidplanner", "Date": "2014-11-18T07:33:03Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (serviceMgr.isServiceConnected()) serviceMgr.get3drServices().releaseDroidPlannerApi(this.droneCallback);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7499/buggy-version/lib.src.main.java.com.o3dr.android.client.Drone.java", "BodyUseAPI": ["com.o3dr.android.client.ServiceManager.get3drServices()", "serviceMgr.get3drServices().releaseDroidPlannerApi(com.o3dr.android.client.DroneCallback)"], "Fixed commit": "ced0cd36b468b58d8a32710513361b4cb03e9bb8", "Url": "https://api.github.com/repos/DroidPlanner/droidplanner", "Date": "2014-11-18T07:33:03Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (updateCount == (java.sql.Statement.SUCCESS_NO_INFO)) { successNoInfo = true; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6585/buggy-version/src.main.java.io.confluent.connect.jdbc.sink.BufferedRecords.java", "BodyUseAPI": [], "Fixed commit": "70291626af0ca05185a49792a5944afd48ccc427", "Url": "https://api.github.com/repos/confluentinc/kafka-connect-jdbc", "Date": "2017-03-07T13:50:22Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (successNoInfo) { io.confluent.connect.jdbc.sink.BufferedRecords.log.info(\"Insert records:{} , but no count of the number of rows it affected is available\", records.size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6585/buggy-version/src.main.java.io.confluent.connect.jdbc.sink.BufferedRecords.java", "BodyUseAPI": [], "Fixed commit": "70291626af0ca05185a49792a5944afd48ccc427", "Url": "https://api.github.com/repos/confluentinc/kafka-connect-jdbc", "Date": "2017-03-07T13:50:22Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((currentCostPath < (Main.bestTotalCostPath)) && isEtapesReachEntree) && isWowSpotReachEntree) && isEtapesEdgesMinAtteint) { Main.bestTotalCostPath = currentCostPath; java.lang.System.out.println(\"-----------------------------------------------\"); for (int i = 0; i < (currentCouplesFound.size()); i++) { java.lang.System.out.println((((currentCouplesFound.get(i)[0]) + \" \") + (currentCouplesFound.get(i)[1]))); } java.lang.System.out.println(\"Fin\"); java.lang.System.out.println((\"Meilleur Cout trouve: \" + (Main.bestTotalCostPath))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6775/buggy-version/tp3-algo-raph.src.Main.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "1ec381fc80dfe60776e8bacbb6c1dee6ec4db797", "Url": "https://api.github.com/repos/lchamelin/AlgorithmAnalysis", "Date": "2017-04-19T19:45:09Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.kontalk.util.Preferences.getEasyMode())) { getSupportActionBar().setDisplayHomeAsUpEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3450/buggy-version/app.src.main.java.org.kontalk.ui.ContactsListActivity.java", "BodyUseAPI": [], "Fixed commit": "19633fb107c238d8c650cee717189a60ab8b229f", "Url": "https://api.github.com/repos/ADGOpenSource/KontalkFork", "Date": "2017-01-07T15:29:55Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.kontalk.util.Preferences.getEasyMode())) { android.support.v7.app.ActionBar bar = getSupportActionBar(); if (title != null) bar.setTitle(title); if (subtitle != null) bar.setSubtitle(subtitle); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3450/buggy-version/app.src.main.java.org.kontalk.ui.ComposeMessage.java", "BodyUseAPI": [], "Fixed commit": "19633fb107c238d8c650cee717189a60ab8b229f", "Url": "https://api.github.com/repos/ADGOpenSource/KontalkFork", "Date": "2017-01-07T15:29:55Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (vajadz\u012bba) cut_word = \"j\u0101\" + cut_word;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5862/buggy-version/src.main.java.lv.semti.morphology.analyzer.Analyzer.java", "BodyUseAPI": [], "Fixed commit": "fbce26a7b547a81d0497923f1448e5c014472987", "Url": "https://api.github.com/repos/PeterisP/morphology", "Date": "2012-11-01T18:32:14Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (word.startsWith(\"j\u0101\")) { vajadz\u012bba = true; word = word.substring(2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5862/buggy-version/src.main.java.lv.semti.morphology.analyzer.Analyzer.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "fbce26a7b547a81d0497923f1448e5c014472987", "Url": "https://api.github.com/repos/PeterisP/morphology", "Date": "2012-11-01T18:32:14Z"},
{"Line": "=>400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.cassandra.utils.btree.BTree.update(java.lang.Object[],java.util.Comparator<org.apache.cassandra.db.Cell>,java.util.Collection<org.apache.cassandra.db.Cell>,boolean,org.apache.cassandra.utils.btree.ReplaceFunction<org.apache.cassandra.db.Cell>,org.apache.cassandra.db.AtomicBTreeColumns.TerminateEarly)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (r == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4796/buggy-version/src.java.org.apache.cassandra.db.AtomicBTreeColumns.java", "BodyUseAPI": [], "Fixed commit": "70450f5ee6134f742936273a7bd7fb54087db35b", "Url": "https://api.github.com/repos/belliottsmith/cassandra", "Date": "2013-12-27T21:41:29Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.isInCreativeTab(tab))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2402/buggy-version/src.main.java.subaraki.BMA.item.ItemCraftLeather.java", "BodyUseAPI": [], "Fixed commit": "03f0aafa7c83bce49a8a1e9b78f9694860f5a025", "Url": "https://api.github.com/repos/ArtixAllMighty/Rpg-Addon-BerserkMageArcher", "Date": "2017-08-29T23:17:31Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.isInCreativeTab(tab))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2402/buggy-version/src.main.java.subaraki.BMA.item.weapons.ItemWand.java", "BodyUseAPI": [], "Fixed commit": "03f0aafa7c83bce49a8a1e9b78f9694860f5a025", "Url": "https://api.github.com/repos/ArtixAllMighty/Rpg-Addon-BerserkMageArcher", "Date": "2017-08-29T23:17:31Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.json.JsonObject.getString(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (gname.isEmpty()) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2161/buggy-version/Server.src.java.data.entity.Dishgroup.java", "BodyUseAPI": [], "Fixed commit": "f2dbada460b67eb0da12a748d85376c0ded0a449", "Url": "https://api.github.com/repos/jolin1337/Restaurang", "Date": "2014-10-15T04:24:19Z"},
{"Line": "=>452", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((!checkOverlap) || (source >= destination)) || (!(areOverlapping(destination, source, length)))) { for (int i = 0; i < length; i++) { write8((destination + i), ((byte) (read8((source + i))))); } }else { for (int i = length - 1; i >= 0; i--) { write8((destination + i), ((byte) (read8((source + i))))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7295/buggy-version/src.jpcsp.memory.DebuggerMemory.java", "BodyUseAPI": ["jpcsp.memory.DebuggerMemory.write8(int,int)", "jpcsp.memory.DebuggerMemory.read8(int)", "jpcsp.memory.DebuggerMemory.write8(int,int)", "jpcsp.memory.DebuggerMemory.read8(int)"], "Fixed commit": "0a04458e536112c321f1ae9c1eab957f671f4ccd", "Url": "https://api.github.com/repos/starlightknight/jpcsp", "Date": "2017-07-05T17:19:53Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (formVersion != null) { isNewerFormAvailable = (java.lang.Integer.parseInt(formVersion)) > localFormVersion; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5966/buggy-version/collect_app.src.main.java.org.odk.collect.android.tasks.DownloadFormListTask.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "c4e5094aabcebc26a3234b438ed03afaaaee7e6c", "Url": "https://api.github.com/repos/grzesiek2010/collect", "Date": "2017-12-05T12:10:32Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, yahoofinance.Stock>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (stock == null) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8511/buggy-version/app.src.main.java.com.ammar.stockhawk.sync.QuoteSyncJob.java", "BodyUseAPI": [], "Fixed commit": "2a64dee3682caf7827e1b20d323c65666850df7b", "Url": "https://api.github.com/repos/ammaratef45/stock-hawk", "Date": "2016-12-11T03:20:30Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.http.client.HttpClient.execute(org.apache.http.client.methods.HttpGet,org.apache.http.protocol.HttpContext)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((restResponse.getAllHeaders()) != null) { for (org.apache.http.Header header : restResponse.getAllHeaders()) { log.trace(\"Header {}: {}\", header.getName(), header.getValue()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4213/buggy-version/idp-attribute-impl-ecadata.src.main.java.fi.okm.mpass.shibboleth.attribute.resolver.dc.impl.RestDataConnector.java", "BodyUseAPI": ["org.apache.http.HttpResponse.getAllHeaders()"], "Fixed commit": "66bd673c3915f71ccd8bb927e46eb212ea07a329", "Url": "https://api.github.com/repos/Digipalvelutehdas/MPASSid-proxy", "Date": "2016-02-08T10:55:51Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.kylin.cube.cuboid.CuboidScheduler.getSpanningCuboid(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(children.isEmpty())) { synchronized(taskPending) { for (java.lang.Long child : children) { taskPending.add(new org.apache.kylin.cube.inmemcubing.InMemCubeBuilder.CuboidTask(parent, child)); } taskPending.notifyAll(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8547/buggy-version/core-cube.src.main.java.org.apache.kylin.cube.inmemcubing.InMemCubeBuilder.java", "BodyUseAPI": [], "Fixed commit": "94676a1ba17d9a75dec5454e40f686614d8c4a46", "Url": "https://api.github.com/repos/apache/kylin", "Date": "2015-07-23T22:44:44Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((result.charAt(((result.length()) - 1))) == '-') { result = result.substring(0, ((result.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1936/buggy-version/com.furryfaust.apps.patterns.multiplayer.screens.GameScreen.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "cf3de47c4511836543c2934bc89b6fe0ee46ee0c", "Url": "https://api.github.com/repos/k3v/patternsclient", "Date": "2015-06-16T20:38:01Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(data[i].startsWith(\"false\"))) { gameData.add(new com.furryfaust.apps.patterns.multiplayer.screens.GameScreen.Match(data[i])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1936/buggy-version/com.furryfaust.apps.patterns.multiplayer.screens.GameScreen.java", "BodyUseAPI": ["java.util.ArrayList<com.furryfaust.apps.patterns.multiplayer.screens.GameScreen.Match>.add(com.furryfaust.apps.patterns.multiplayer.screens.GameScreen.Match)"], "Fixed commit": "cf3de47c4511836543c2934bc89b6fe0ee46ee0c", "Url": "https://api.github.com/repos/k3v/patternsclient", "Date": "2015-06-16T20:38:01Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (callResult == null) { callResult = new com.onepagecrm.models.CallResult().setId(callResultId).setText(callObject.optString(com.onepagecrm.models.serializers.TEXT_TAG)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5050/buggy-version/src.main.java.com.onepagecrm.models.serializers.CallSerializer.java", "BodyUseAPI": [], "Fixed commit": "4267fea01cdc70456cfae53662fa012a0adc5a68", "Url": "https://api.github.com/repos/OnePageCRM/java-wrapper", "Date": "2016-09-07T10:58:24Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((a.size()) > 0) && ((a.size()) == (b.size()))) { return java.lang.Math.sqrt(Engines.Distances.MeanSquareError.meanSquareError(a, b)); }else { java.lang.System.out.println(\"List done haven same size or some are empty for RMSE calculation!\"); return java.lang.Double.NaN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5819/buggy-version/src.main.java.Engines.Distances.MeanSquareError.java", "BodyUseAPI": ["java.lang.Math.sqrt(double)", "Engines.Distances.MeanSquareError.meanSquareError(java.util.List<java.lang.Double>,java.util.List<java.lang.Double>)"], "Fixed commit": "0ddd95249dd661a366e713e489b631cd61b01bed", "Url": "https://api.github.com/repos/dice-group/TextComparisonEvaluationTool", "Date": "2017-02-14T10:34:01Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (serverVersion.lessThanOrEquals(ServerVersion.v5_5)) { return new com.jaspersoft.android.sdk.service.report.ExportOptionsMapper5_5(baseUrl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5109/buggy-version/core.src.main.java.com.jaspersoft.android.sdk.service.report.ExportOptionsMapper.java", "BodyUseAPI": [], "Fixed commit": "e7c5375fd86e3a066946f88885758a3a35a90796", "Url": "https://api.github.com/repos/Jaspersoft/js-android-sdk", "Date": "2016-01-25T07:59:16Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jcifs.smb.SmbRandomAccessFile.read(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (read > 0) dst.put(buffer, 0, read);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1627/buggy-version/src.main.java.ch.pontius.nio.smb.SeekableSMBByteChannel.java", "BodyUseAPI": ["java.nio.ByteBuffer.put(byte[],int,int)"], "Fixed commit": "fd017a59126453a3a3a56c613795a07235ee880a", "Url": "https://api.github.com/repos/pontiussoftware/smb-nio", "Date": "2017-10-08T15:23:52Z"},
{"Line": "=>589", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (annotation instanceof pojos.MapAnnotationData) { pojos.MapAnnotationData map = ((pojos.MapAnnotationData) (annotation)); link = gateway.findAnnotationLink(ctx, ho.getClass(), ho.getId().getValue(), map.getId(), exp.getId()); if (link == null) link = org.openmicroscopy.shoola.env.data.util.ModelMapper.linkAnnotation(ho, an); else { updateAnnotationData(ctx, map); exist = true; } }else if (annotation instanceof pojos.RatingAnnotationData) { clearAnnotation(ctx, data.getClass(), data.getId(), pojos.RatingAnnotationData.class); link = org.openmicroscopy.shoola.env.data.util.ModelMapper.linkAnnotation(ho, an); }else { link = org.openmicroscopy.shoola.env.data.util.ModelMapper.linkAnnotation(ho, an); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8845/buggy-version/components.insight.SRC.org.openmicroscopy.shoola.env.data.OmeroMetadataServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "ac9eaba6ea32e7e6b739aaaff73a50c8aa2094f5", "Url": "https://api.github.com/repos/openmicroscopy/openmicroscopy", "Date": "2015-01-08T10:12:02Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.inventory.PlayerInventory.getHelmet()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (head != null) { if ((head.getType()) != (org.bukkit.Material.AIR)) { inv.removeItem(head); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7590/buggy-version/src.main.java.xyz.jaoafa.mymaid.Command.Hat.java", "BodyUseAPI": ["org.bukkit.inventory.PlayerInventory.removeItem(org.bukkit.inventory.ItemStack)", "org.bukkit.inventory.ItemStack.getType()"], "Fixed commit": "70e5b2ac838ebc184262f3c84ec0b88c687015b8", "Url": "https://api.github.com/repos/book000/MyMaid", "Date": "2017-10-09T06:20:05Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDebuggable) throw new ru.lazard.tamperingprotection.TamperingProtection.ValidationException(ru.lazard.tamperingprotection.TamperingProtection.ValidationException.ERROR_CODE_DEBUG_MODE, (\"Run in debug mode checked by ApplicationInfo. Flags=\" + (context.getApplicationInfo().flags)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6629/buggy-version/tamperingprotection.src.main.java.ru.lazard.tamperingprotection.TamperingProtection.java", "BodyUseAPI": [], "Fixed commit": "d4f4d731a752f49d063012642c9d75d81ea7eb00", "Url": "https://api.github.com/repos/tepikin/AndroidTamperingProtection", "Date": "2016-11-09T07:08:24Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDebugAvailable) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6629/buggy-version/tamperingprotection.src.main.java.ru.lazard.tamperingprotection.TamperingProtection.java", "BodyUseAPI": [], "Fixed commit": "d4f4d731a752f49d063012642c9d75d81ea7eb00", "Url": "https://api.github.com/repos/tepikin/AndroidTamperingProtection", "Date": "2016-11-09T07:08:24Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Object, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (com.orientechnologies.common.collection.OMultiValue.isMultiValue(script)) { int i = 0; for (java.lang.Object o : com.orientechnologies.common.collection.OMultiValue.getMultiValueIterable(script)) { if (o != null) { if (i > 0) text.append(\"\\n\"); text.append(o.toString()); } } }else text.append(script);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4755/buggy-version/server.src.main.java.com.orientechnologies.orient.server.network.protocol.http.command.post.OServerCommandPostBatch.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.Object)", "com.orientechnologies.common.collection.OMultiValue.getMultiValueIterable(java.lang.Object)"], "Fixed commit": "9139f3954e041d0f0ecae3e718088cd865286c08", "Url": "https://api.github.com/repos/maggiolo00/orientdb", "Date": "2014-03-31T17:58:08Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.dhbw.jcd.Utilities.isNumeric(attributeType)) { throw new com.dhbw.jcd.exceptions.InvalidComparisonException(this.entityProvider, this.attributeName, \" like can only be applied to non-numeric types\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3386/buggy-version/JpaCustomDsl.src.main.java.com.dhbw.jcd.ComparatorProvider.java", "BodyUseAPI": [], "Fixed commit": "4cfd2573e1c734817647afa7b6100e6a9cb9d281", "Url": "https://api.github.com/repos/marcoabreu/JpaCustomDsl", "Date": "2016-12-13T13:48:47Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.iBank.system.Bank.getAccount(java.lang.String)", "com.iBank.system.Bank.getAccount(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (src.getName().equalsIgnoreCase(dest.getName())) dest = src;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8720/buggy-version/src.com.iBank.Commands.CommandTransfer.java", "BodyUseAPI": [], "Fixed commit": "925259d8e8ba4ddef4e313200127afdae8950cd0", "Url": "https://api.github.com/repos/iBa/iBank", "Date": "2013-11-26T21:21:51Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(isInEditMode())) { setProgressDrawable(resources.getDrawable(com.andrew.apollo.widgets.theme.ThemeableSeekBar.PROGESS)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7813/buggy-version/android.apollo.src.com.andrew.apollo.widgets.theme.ThemeableSeekBar.java", "BodyUseAPI": [], "Fixed commit": "414a9bb154603cc763e73b088ad9013695a1e0eb", "Url": "https://api.github.com/repos/gubatron/frostwire", "Date": "2016-10-11T18:14:22Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(isInEditMode())) { setBackground(resources.getDrawable(com.andrew.apollo.widgets.theme.ThemeableFrameLayout.BACKGROUND)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7813/buggy-version/android.apollo.src.com.andrew.apollo.widgets.theme.ThemeableFrameLayout.java", "BodyUseAPI": [], "Fixed commit": "414a9bb154603cc763e73b088ad9013695a1e0eb", "Url": "https://api.github.com/repos/gubatron/frostwire", "Date": "2016-10-11T18:14:22Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInEditMode()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7813/buggy-version/android.apollo.src.com.andrew.apollo.widgets.RepeatingImageButton.java", "BodyUseAPI": [], "Fixed commit": "414a9bb154603cc763e73b088ad9013695a1e0eb", "Url": "https://api.github.com/repos/gubatron/frostwire", "Date": "2016-10-11T18:14:22Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (toTextField.getText().equals(\"<enter email address here>\")) { toTextField.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/264/buggy-version/EmailSecurity.src.emailsecurity.ClientSendMailLayout.java", "BodyUseAPI": ["javax.swing.JTextField.setText(java.lang.String)"], "Fixed commit": "90f3d1db7ad9fe3d5452c64baa6bb3e4787fa1a0", "Url": "https://api.github.com/repos/EmailSecurity/JavaClient", "Date": "2015-10-02T20:33:15Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bodyTextField.getText().equals(\"<enter email body here>\")) { bodyTextField.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/264/buggy-version/EmailSecurity.src.emailsecurity.ClientSendMailLayout.java", "BodyUseAPI": ["javax.swing.JTextArea.setText(java.lang.String)"], "Fixed commit": "90f3d1db7ad9fe3d5452c64baa6bb3e4787fa1a0", "Url": "https://api.github.com/repos/EmailSecurity/JavaClient", "Date": "2015-10-02T20:33:15Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (subjectTextField.getText().equals(\"<enter subject here>\")) { java.lang.System.out.println(\"Entered if\"); subjectTextField.setText(\"\"); }else { java.lang.System.out.println(\"Couldn't enter if\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/264/buggy-version/EmailSecurity.src.emailsecurity.ClientSendMailLayout.java", "BodyUseAPI": ["javax.swing.JTextField.setText(java.lang.String)"], "Fixed commit": "90f3d1db7ad9fe3d5452c64baa6bb3e4787fa1a0", "Url": "https://api.github.com/repos/EmailSecurity/JavaClient", "Date": "2015-10-02T20:33:15Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.toAddress.equals(\"<enter email address here>\")) { java.lang.System.out.println(\"Please enter a valid email address\"); }else { new emailsecurity.SendEmailViaGmail(this.toAddress, this.subject, this.body); this.composeWindow.dispatchEvent(new java.awt.event.WindowEvent(this.composeWindow, java.awt.event.WindowEvent.WINDOW_CLOSING)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/264/buggy-version/EmailSecurity.src.emailsecurity.ClientSendMailLayout.java", "BodyUseAPI": [], "Fixed commit": "90f3d1db7ad9fe3d5452c64baa6bb3e4787fa1a0", "Url": "https://api.github.com/repos/EmailSecurity/JavaClient", "Date": "2015-10-02T20:33:15Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["realm.getClass().getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (name.equals(\"org.apache.shiro.realm.jdbc.JdbcRealm\")) { usersList.addAll(getUserListObj.getUserList(((org.apache.shiro.realm.jdbc.JdbcRealm) (realm)))); }else if (name.equals(\"org.apache.shiro.realm.jdbc.ZeppelinJdbcRealm\")) { usersList.addAll(getUserListObj.getUserList(((org.apache.zeppelin.realm.ZeppelinJdbcRealm) (realm)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6868/buggy-version/zeppelin-server.src.main.java.org.apache.zeppelin.rest.SecurityRestApi.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "a4c43914aa0caf6a4530c7da05549127d6b2b6b2", "Url": "https://api.github.com/repos/YuanGunGun/zeppelin", "Date": "2017-06-17T17:03:22Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (property != null) { type = property.getType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7031/buggy-version/src.main.java.com.fasterxml.jackson.datatype.hibernate3.PersistentCollectionSerializer.java", "BodyUseAPI": ["com.fasterxml.jackson.datatype.hibernate3.BeanProperty.getType()"], "Fixed commit": "dddb53fe0e5b47b369c7b6949743f67e0bc5c4bf", "Url": "https://api.github.com/repos/FasterXML/jackson-module-hibernate", "Date": "2012-05-31T01:32:37Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javafx.scene.control.TextField.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (userID.equals(\"\")) { actiontarget.setFill(Color.FIREBRICK); actiontarget.setText(\"Enter UserID\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4989/buggy-version/TCSS360_Group3_Project.src.gui.AddUser.java", "BodyUseAPI": [], "Fixed commit": "1206c0644f7c34a0aba34aa2a9bd9be8edc8792b", "Url": "https://api.github.com/repos/Iriohm/tcss360group3project", "Date": "2016-12-04T10:48:01Z"},
{"Line": "=>619", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mSyncOnResume) { sync(); mSyncOnResume = false; }else if (colIsOpen()) { updateDeckList(); hideProgressBar(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4749/buggy-version/AnkiDroid.src.main.java.com.ichi2.anki.DeckPicker.java", "BodyUseAPI": [], "Fixed commit": "d39665e12b7a3dd0241498a87a6b93a3918ce6cd", "Url": "https://api.github.com/repos/Robert-Cunningham/Anki-Android", "Date": "2015-07-26T22:22:10Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["channel.pipeline().get(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (handler != null) { channel.pipeline().remove(handler); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6717/buggy-version/src.main.java.io.vertx.core.http.impl.ServerConnection.java", "BodyUseAPI": ["channel.pipeline().remove(io.netty.channel.ChannelHandler)"], "Fixed commit": "d8d21f2b7385621afe7e386cd1ff7fd299a61331", "Url": "https://api.github.com/repos/eclipse/vert.x", "Date": "2015-02-11T13:40:59Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ws) != null) { return ws; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6717/buggy-version/src.main.java.io.vertx.core.http.impl.ServerConnection.java", "BodyUseAPI": [], "Fixed commit": "d8d21f2b7385621afe7e386cd1ff7fd299a61331", "Url": "https://api.github.com/repos/eclipse/vert.x", "Date": "2015-02-11T13:40:59Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.SesameService.changeLanguageSetting(language)) { return javax.ws.rs.core.Response.status(Response.Status.OK).build(); }else { return javax.ws.rs.core.Response.status(Response.Status.NOT_MODIFIED).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8918/buggy-version/src.main.java.de.klinikum.rest.ServerInfoREST.java", "BodyUseAPI": [], "Fixed commit": "b3098407a7eb60f8224814e4bafda96892d5239a", "Url": "https://api.github.com/repos/meca1012/Klinikum", "Date": "2013-06-27T09:31:06Z"},
{"Line": "=>580", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (runningChecksum == (currBlock.checksum)) { objects.add(currBlock); currBlock = null; }else if (frclib.FrcPixyCam.debugEnabled) { dbgTrace.traceInfo(funcName, \"Incorrect checksum %d (expecting %d).\", runningChecksum, currBlock.checksum); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8400/buggy-version/src.frclib.FrcPixyCam.java", "BodyUseAPI": ["java.util.ArrayList<frclib.FrcPixyCam.ObjectBlock>.add(frclib.FrcPixyCam.ObjectBlock)", "trclib.TrcDbgTrace.traceInfo(java.lang.String,java.lang.String,int,int)"], "Fixed commit": "370494e7e84fef844c16772ff17bc06fb04aaac9", "Url": "https://api.github.com/repos/trc492/Frc2017FirstSteamWorks", "Date": "2017-02-27T11:35:51Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((variable.getDataType().equals(DataTypes.DATE)) && ((variable.getScaleLevel()) == null)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1656/buggy-version/src.main.java.eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.validation.MandatoryScaleLevelForNumericDataTypeValidator.java", "BodyUseAPI": [], "Fixed commit": "3946df51c4f76cfc6ac61b8274f00f965da48413", "Url": "https://api.github.com/repos/dzhw/metadatamanagement", "Date": "2016-08-16T12:31:25Z"},
{"Line": "=>2594", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["instanceDefinition.getInternalOperations().get(InternalKeys.INTERNAL_APPLICATION_IMAGE_PATH)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (imagePath == null) { org.apache.hadoop.yarn.api.records.ApplicationReport appReport = YARNRegistryClient.findInstance(clusterName); org.apache.hadoop.fs.Path path1 = sliderFileSystem.getTempPathForCluster(clusterName); org.apache.hadoop.fs.Path subPath = new org.apache.hadoop.fs.Path(path1, ((appReport.getApplicationId().toString()) + \"/am\")); imagePath = subPath.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7918/buggy-version/slider-core.src.main.java.org.apache.slider.client.SliderClient.java", "BodyUseAPI": [], "Fixed commit": "3e581b584ef4503bbf02de972f429b9106e00cc2", "Url": "https://api.github.com/repos/thomasyuliu2014/incubator-slider", "Date": "2014-09-27T00:09:56Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pluginExecution.getConfiguration()) != null) { java.util.List<org.w3c.dom.Element> any = pluginExecution.getConfiguration().getAny(); processProfiles(androidProfile, any); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8003/buggy-version/phresco-pom.src.main.java.com.phresco.pom.util.AndroidPomProcessor.java", "BodyUseAPI": ["pluginExecution.getConfiguration().getAny()", "com.phresco.pom.model.PluginExecution.getConfiguration()"], "Fixed commit": "59236526696d9484433375ac1341be5a8426e76d", "Url": "https://api.github.com/repos/phresco/phresco", "Date": "2012-07-19T06:54:34Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["plugin2.getExecutions().getExecution()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (getSigningProfilePlugin(profile, execution).equals(profile.getId())) { return getSigningProfilePlugin(profile, execution); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8003/buggy-version/phresco-pom.src.main.java.com.phresco.pom.util.AndroidPomProcessor.java", "BodyUseAPI": ["com.phresco.pom.util.AndroidPomProcessor.getSigningProfilePlugin(com.phresco.pom.model.Profile,java.util.List<com.phresco.pom.model.PluginExecution>)"], "Fixed commit": "59236526696d9484433375ac1341be5a8426e76d", "Url": "https://api.github.com/repos/phresco/phresco", "Date": "2012-07-19T06:54:34Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["plugin2.getExecutions().getExecution()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (execution != null) { for (com.phresco.pom.model.PluginExecution pluginExecution : execution) { if ((pluginExecution.getConfiguration()) != null) { java.util.List<org.w3c.dom.Element> any = pluginExecution.getConfiguration().getAny(); processProfiles(androidProfile, any); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8003/buggy-version/phresco-pom.src.main.java.com.phresco.pom.util.AndroidPomProcessor.java", "BodyUseAPI": [], "Fixed commit": "59236526696d9484433375ac1341be5a8426e76d", "Url": "https://api.github.com/repos/phresco/phresco", "Date": "2012-07-19T06:54:34Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lugar) != null) { editTextLugar.setText(lugar.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5479/buggy-version/app.src.main.java.ar.edu.utn.frsf.isi.dam.reclamosonlinelab04.FormReclamo.java", "BodyUseAPI": [], "Fixed commit": "9fa041220c0d3057d9a16985223293512b21c32f", "Url": "https://api.github.com/repos/EstebanRebechi/ReclamosOnlineLab04", "Date": "2017-10-27T04:11:06Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkPermissions()) { startLocationUpdates(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7792/buggy-version/app.src.main.java.com.example.olymbeastmk2.ucdetailedmaps.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "8792d02a9f8ad5d528a04b7cc89b645c1b3c81fe", "Url": "https://api.github.com/repos/SoftwareEngineeringPractice2017/UCDetailedMaps", "Date": "2017-11-05T11:21:13Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((null != urls) && (i < (urls.length))) { siteService.saveSlide(urls[i], imageNames[i], imageIndexes[i], imageShow[i]); }else { siteService.saveSlide(\"\", imageNames[i], imageIndexes[i], imageShow[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3868/buggy-version/src.main.java.com.noeasy.money.admin.controller.AdminSlideController.java", "BodyUseAPI": ["com.noeasy.money.service.ISiteService.saveSlide(java.lang.String,java.lang.String,int,int)", "com.noeasy.money.service.ISiteService.saveSlide(java.lang.String,java.lang.String,int,int)"], "Fixed commit": "eb786508e7540b915a703ec10f4c5b75e149bd9f", "Url": "https://api.github.com/repos/DormitoryTeam/Dormitory", "Date": "2014-06-07T17:07:59Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (totalNumberOfRatings > 0) { averageRating = totalRating / totalNumberOfRatings; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3202/buggy-version/main.java.wikitrust.RatingStatistics.java", "BodyUseAPI": [], "Fixed commit": "49c1248c54e67b0508ad9641f70784c9ebc31fbf", "Url": "https://api.github.com/repos/wangkekekexili/WikiTrust", "Date": "2015-02-25T17:41:42Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tempDietNumbers.stats[i]) == 0) { warningStage[i] = new java.awt.Color(0, 1.0F, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2952/buggy-version/DietTracker.src.me.ci.CurrentStats.java", "BodyUseAPI": [], "Fixed commit": "f4e86c953f75ece847a573219cc8e2651a5cfa32", "Url": "https://api.github.com/repos/TheDudeFromCI/DietTracker", "Date": "2015-01-06T05:33:06Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inputString.startsWith(\"/_\")) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5536/buggy-version/src.main.java.org.elasticsearch.plugins.security.util.SecurityUtil.java", "BodyUseAPI": [], "Fixed commit": "eb4148dbe0bcc7dcb226e91ce2f4de1d2c66e917", "Url": "https://api.github.com/repos/gurvindersingh/elasticsearch-security-plugin", "Date": "2014-11-24T10:27:44Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mReader) == null) || (!(mReader.isOpened()))) requestPermission(callbackContext);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8149/buggy-version/src.com.fivestars.mtab.plugin.NFCReader.java", "BodyUseAPI": [], "Fixed commit": "3fb751ba238a535c8f7b6c46d88c712e8b6c3bee", "Url": "https://api.github.com/repos/yangxie/NFCReaderPlugin", "Date": "2014-07-24T22:18:02Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.catrobat.catroid.BuildConfig.DEBUG)) { menu.findItem(R.id.context_menu_backpack).setVisible(false); menu.findItem(R.id.context_menu_unpacking).setVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1141/buggy-version/catroid.src.org.catrobat.catroid.ui.fragment.SpritesListFragment.java", "BodyUseAPI": [], "Fixed commit": "d6fe09ebe90f9b038ad43606fcbe37a34058a68f", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2013-10-22T17:03:13Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (value instanceof java.lang.String) { if (!(\"\".equals(value))) { list.add(((((entry.getKey()) + \"=\") + value) + \"&\")); } }else { if (value != \"\") { list.add(((((entry.getKey()) + \"=\") + value) + \"&\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2046/buggy-version/src.main.java.com.tencent.common.Signature.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)", "java.util.ArrayList<java.lang.String>.add(java.lang.String)", "java.lang.String.equals(java.lang.Object)"], "Fixed commit": "0c1cd15caa24e0938ea6dece8b29acaecf9c9058", "Url": "https://api.github.com/repos/dreamkidd/wxpay_scanpay_java_sdk_proj", "Date": "2017-06-27T07:30:21Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s.isEmpty()) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2691/buggy-version/core.src.com.polarbirds.huldra.model.world.TilesWithOpenings.java", "BodyUseAPI": [], "Fixed commit": "87693d0aa694b580be62b95656a827f40a1b3a6a", "Url": "https://api.github.com/repos/haraldfw/huldra", "Date": "2015-05-28T17:36:30Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (AnalyzeMode.BINARIES_AND_SOURCES.equals(projectContent.getAnalyzeMode())) { newAndModifiedSourceResources = org.bundlemaker.core.internal.parser.FunctionalHelper.computeNewAndModifiedResources(((org.bundlemaker.core.projectdescription.AbstractContent) (projectContent)).getSourceResourceStandins(), storedResourcesMap, resourceCache, new org.eclipse.core.runtime.NullProgressMonitor()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8254/buggy-version/main.org.bundlemaker.core.src.org.bundlemaker.core.internal.parser.ModelSetup.java", "BodyUseAPI": [], "Fixed commit": "be634ea8422ddcc1ad61bae92491fc7df6f5affb", "Url": "https://api.github.com/repos/nilshartmann/bundlemaker", "Date": "2012-05-05T09:07:39Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotBlank(product.getName())) { productNode.setProperty(KKCndConstants.PRODUCT_NAME, product.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6346/buggy-version/konakart.cms.src.main.java.org.onehippo.forge.konakart.cms.replication.factory.AbstractProductFactory.java", "BodyUseAPI": ["com.konakart.app.Product.getName()", "org.onehippo.forge.konakart.cms.replication.factory.Node.setProperty(KKCndConstants.PRODUCT_NAME,product.getName())"], "Fixed commit": "5f8d4fe159bb81115180b41c0e67013efd966a4f", "Url": "https://api.github.com/repos/jmirc/Hippo-CMS-Konakart", "Date": "2012-07-05T18:05:59Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotBlank(product.getModel())) { productNode.setProperty(KKCndConstants.PRODUCT_MODEL, product.getModel()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6346/buggy-version/konakart.cms.src.main.java.org.onehippo.forge.konakart.cms.replication.factory.AbstractProductFactory.java", "BodyUseAPI": ["org.onehippo.forge.konakart.cms.replication.factory.Node.setProperty(KKCndConstants.PRODUCT_MODEL,product.getModel())", "com.konakart.app.Product.getModel()"], "Fixed commit": "5f8d4fe159bb81115180b41c0e67013efd966a4f", "Url": "https://api.github.com/repos/jmirc/Hippo-CMS-Konakart", "Date": "2012-07-05T18:05:59Z"},
{"Line": "=>448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (showSnackbar) { android.support.design.widget.Snackbar snackbar = android.support.design.widget.Snackbar.make(recyclerView, \"Device renamed\", Snackbar.LENGTH_LONG).setAction(\"UNDO\", new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View view) { } }); snackbar.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6917/buggy-version/mobile.src.main.java.com.nodrex.connectedworld.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "3b88f3f762b8d88c3df8e041091cd8bd079de425", "Url": "https://api.github.com/repos/Nodrex/ConnectedWorld", "Date": "2016-06-01T19:05:55Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (exe.toString().equals(\"invalid stream header\")) { client.trenneVerbindung(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6678/buggy-version/TicTacToeServer.src.core.networking.InputListener.java", "BodyUseAPI": [], "Fixed commit": "98f5549915ecc0727090f2aca7510deac8df9eec", "Url": "https://api.github.com/repos/Sharknoon/TicTacToe", "Date": "2016-07-08T10:35:57Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (record.hasSpeed()) { vehicle.setSpeed(record.getSpeed()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1801/buggy-version/core.src.main.java.org.movsim.simulator.roadnetwork.MicroInflowFileReader.java", "BodyUseAPI": ["org.movsim.simulator.roadnetwork.MicroInflowFileReader.MicroInflowRecord.getSpeed()", "org.movsim.simulator.vehicles.Vehicle.setSpeed(double)"], "Fixed commit": "dd43bd7f04f587149d1e8dc2fd9584738226103b", "Url": "https://api.github.com/repos/movsim/movsim", "Date": "2013-04-28T05:57:34Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((realEstate) != null) { getView().updateOwner(((realEstate.getOwner()) != null ? realEstate.getOwner().getId() : \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/220/buggy-version/src.main.java.eu.comexis.napoleon.client.core.estate.RealEstateUpdatePresenter.java", "BodyUseAPI": [], "Fixed commit": "d46d2f9b47a9d58aba50c20857cd657ca20c5cbf", "Url": "https://api.github.com/repos/pfdz/napoleon", "Date": "2012-10-08T21:44:44Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result.hasErrors()) { return \"admin-products\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3465/buggy-version/sm-shop.src.main.java.com.salesmanager.web.admin.controller.products.ProductsController.java", "BodyUseAPI": [], "Fixed commit": "51b1d8b046e6ffdb9f08ff3b3c3b3166adab1482", "Url": "https://api.github.com/repos/asaad1982/laVetrina", "Date": "2016-03-26T12:17:11Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((uploadItem == null) || ((uploadItem.getFileData()) != null)) || ((uploadItem.getFileData().getSize()) != 0)) { result.addError(new org.springframework.validation.ObjectError(\"fileData\", messages.getMessage(\"fileImport.importFile\", locale))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3465/buggy-version/sm-shop.src.main.java.com.salesmanager.web.admin.controller.products.ProductsController.java", "BodyUseAPI": [], "Fixed commit": "51b1d8b046e6ffdb9f08ff3b3c3b3166adab1482", "Url": "https://api.github.com/repos/asaad1982/laVetrina", "Date": "2016-03-26T12:17:11Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.createTempFile(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(file.delete())) { throw new org.takes.HttpException(java.net.HttpURLConnection.HTTP_BAD_REQUEST, \"Can not delete file\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7062/buggy-version/src.main.java.org.takes.http.MainRemote.java", "BodyUseAPI": [], "Fixed commit": "51754687574def34fcd0fe80439a7a1ba5fef537", "Url": "https://api.github.com/repos/sebing/takes", "Date": "2016-01-30T13:22:10Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((reader.read(chars)) < 0) { throw new org.takes.HttpException(java.net.HttpURLConnection.HTTP_BAD_REQUEST, \"The end of the stream has been reached\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7062/buggy-version/src.main.java.org.takes.http.Options.java", "BodyUseAPI": [], "Fixed commit": "51754687574def34fcd0fe80439a7a1ba5fef537", "Url": "https://api.github.com/repos/sebing/takes", "Date": "2016-01-30T13:22:10Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.unimol.my.utils.StringUtils.realTrim(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (avaibleExamsTrimmed.contains(\"appello disponibile\")) { avaibleExams = avaibleExamsTrimmed.replace(\" appello disponibile\", \"\"); }else { avaibleExams = avaibleExamsTrimmed.replace(\" appelli disponibili\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2730/buggy-version/src.java.it.unimol.my.login.UnimolLoginParser.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "b150e019b41707c589cb952a63ea92bda1b786c3", "Url": "https://api.github.com/repos/cbranca/myunimol-webservices", "Date": "2014-12-23T10:50:09Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.unimol.my.utils.StringUtils.realTrim(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (enrolledExamsTrimmed.contains(\"prenotazione\")) { enrolledExams = enrolledExamsTrimmed.replace(\" prenotazione\", \"\"); }else { enrolledExams = enrolledExamsTrimmed.replace(\" prenotazioni\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2730/buggy-version/src.java.it.unimol.my.login.UnimolLoginParser.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "b150e019b41707c589cb952a63ea92bda1b786c3", "Url": "https://api.github.com/repos/cbranca/myunimol-webservices", "Date": "2014-12-23T10:50:09Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["seedu.todo.logic.parser.TodoParser.tokenize(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tokens.isEmpty()) { return new seedu.todo.logic.parser.TodoParser.TodoResult(command, positional, named); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3877/buggy-version/src.main.java.seedu.todo.logic.parser.TodoParser.java", "BodyUseAPI": [], "Fixed commit": "e68b3fd9b157d21d7be8241a709614473a460775", "Url": "https://api.github.com/repos/CS2103AUG2016-W10-C4/main", "Date": "2016-10-05T14:45:19Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((expr.elseExpr) instanceof jkind.lustre.IdExpr) || ((((expr.elseExpr) instanceof jkind.lustre.UnaryExpr) && (((jkind.lustre.UnaryExpr) (expr.elseExpr)).op.equals(UnaryOp.NOT))) && ((((jkind.lustre.UnaryExpr) (expr.elseExpr)).expr) instanceof jkind.lustre.IdExpr))) { elseOb.obligation = new jkind.lustre.BinaryExpr(new jkind.lustre.UnaryExpr(jkind.lustre.UnaryOp.NOT, expr.cond), jkind.lustre.BinaryOp.AND, new jkind.lustre.BoolExpr(true)); }else { elseOb.obligation = new jkind.lustre.BinaryExpr(new jkind.lustre.UnaryExpr(jkind.lustre.UnaryOp.NOT, expr.cond), jkind.lustre.BinaryOp.AND, elseOb.obligation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/434/buggy-version/src.coverage.OMCDCVisitor.java", "BodyUseAPI": [], "Fixed commit": "ceec04c789232ad750e0de7062192d29ab069401", "Url": "https://api.github.com/repos/MENG2010/lustre", "Date": "2016-08-09T21:30:33Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((expr.thenExpr) instanceof jkind.lustre.IdExpr) || ((((expr.thenExpr) instanceof jkind.lustre.UnaryExpr) && (((jkind.lustre.UnaryExpr) (expr.thenExpr)).op.equals(UnaryOp.NOT))) && ((((jkind.lustre.UnaryExpr) (expr.thenExpr)).expr) instanceof jkind.lustre.IdExpr))) { thenOb.obligation = new jkind.lustre.BinaryExpr(expr.cond, jkind.lustre.BinaryOp.AND, new jkind.lustre.BoolExpr(true)); }else { thenOb.obligation = new jkind.lustre.BinaryExpr(expr.cond, jkind.lustre.BinaryOp.AND, thenOb.obligation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/434/buggy-version/src.coverage.OMCDCVisitor.java", "BodyUseAPI": [], "Fixed commit": "ceec04c789232ad750e0de7062192d29ab069401", "Url": "https://api.github.com/repos/MENG2010/lustre", "Date": "2016-08-09T21:30:33Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isGoal(robLoc)) { goal = node; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2027/buggy-version/src.a.star.NodeMap.java", "BodyUseAPI": [], "Fixed commit": "050538a97a25d78aa8da83184848a4457cd9ad17", "Url": "https://api.github.com/repos/farns24/search", "Date": "2017-06-03T22:06:04Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isBarrior(robLoc)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2027/buggy-version/src.a.star.NodeMap.java", "BodyUseAPI": [], "Fixed commit": "050538a97a25d78aa8da83184848a4457cd9ad17", "Url": "https://api.github.com/repos/farns24/search", "Date": "2017-06-03T22:06:04Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.codename1.ui.Display.getInstance().getProperty(\"StatusbarHidden\", \"\").equals(\"true\")) { com.codename1.impl.android.AndroidImplementation.activity.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7332/buggy-version/Ports.Android.src.com.codename1.impl.android.AndroidImplementation.java", "BodyUseAPI": [], "Fixed commit": "7c1010b58f0f6576a8736ee334e6256f6559f1c9", "Url": "https://api.github.com/repos/skyHALud/codenameone", "Date": "2013-02-28T12:06:16Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["co.marcin.novaguilds.manager.RegionManager.get(org.bukkit.Location)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (region == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8933/buggy-version/src.main.java.co.marcin.novaguilds.manager.RegionManager.java", "BodyUseAPI": [], "Fixed commit": "bb30e047e878d29d7b033c35c1801e439dc4d4e0", "Url": "https://api.github.com/repos/MarcinWieczorek/NovaGuilds", "Date": "2016-03-12T13:21:12Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["originalConfig.getConfiguration(\"connection[0]\").getString(Key.JDBC_URL)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.alibaba.datax.plugin.rdbms.writer.util.OriginalConfPretreatmentUtil.isOB10(jdbcUrl)) { forceUseUpdate = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8260/buggy-version/mysqlwriter.src.main.java.com.alibaba.datax.plugin.writer.mysqlwriter.MysqlWriter.java", "BodyUseAPI": [], "Fixed commit": "2270fe45da1d9726299acacb92071bf78c6d13fc", "Url": "https://api.github.com/repos/cloud-dev/DataX", "Date": "2016-07-29T16:03:05Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.colorInput.getText().toString().trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(fr.esgi.toutdouxapp.db.Category.isValidColor(color))) { color = \"#FFFFFF\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/780/buggy-version/src.fr.esgi.toutdouxapp.AddCategoryActivity.java", "BodyUseAPI": [], "Fixed commit": "6d89cf1bae8798bc69c44b03a7d1ae5e1c4a9e44", "Url": "https://api.github.com/repos/rhannequin/ToutDouxApp", "Date": "2014-01-27T00:20:58Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.titleInput.getText().toString().trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (title.matches(\"\")) { android.widget.Toast.makeText(getApplicationContext(), \"Title is empty\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/780/buggy-version/src.fr.esgi.toutdouxapp.AddCategoryActivity.java", "BodyUseAPI": [], "Fixed commit": "6d89cf1bae8798bc69c44b03a7d1ae5e1c4a9e44", "Url": "https://api.github.com/repos/rhannequin/ToutDouxApp", "Date": "2014-01-27T00:20:58Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (text.equals(\"###ENDCONNECTION###\")) out.writeUTF(text); else out.writeUTF((((ClientMain.NICKNAME) + \": \") + text));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/9100/buggy-version/src.barti132.client.Client.java", "BodyUseAPI": ["java.io.DataOutputStream.writeUTF(java.lang.String)", "java.io.DataOutputStream.writeUTF((((ClientMain.NICKNAME) + \": \") + text))"], "Fixed commit": "88c977ed24bced889176f7e18342146ed722935d", "Url": "https://api.github.com/repos/barti132/NetworkChat", "Date": "2017-05-11T20:54:44Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (array[i].equals(\"null\")) array[i] = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/9181/buggy-version/src.ku.util.Main.java", "BodyUseAPI": [], "Fixed commit": "36984b009dd71759f036b49a78fd2921401ddc26", "Url": "https://api.github.com/repos/guitarpawat/arrayiterator", "Date": "2017-02-10T15:55:33Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["title.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (titleString.contains(\"/\")) { title.setBackgroundResource(R.color.error); android.widget.Toast.makeText(this, \"/ cannot be used in the title.\", Toast.LENGTH_LONG).show(); }else { if (!((titleString.trim().length()) > 0)) { java.lang.String time = new java.text.SimpleDateFormat(\"HH:mm:ss, dd-MM-yyyy\").format(new java.util.Date()); titleString = \"Created: \" + time; } long millis = java.lang.System.currentTimeMillis(); this.noteCreated = millis; blot.jordan.ellis.com.blot.Note noteToSave = new blot.jordan.ellis.com.blot.Note(titleString, noteString, this.photoPaths, this.thisColour, millis, millis); title.setBackgroundResource(thisColour); try { java.io.FileOutputStream newNote = openFileOutput(titleString, Context.MODE_PRIVATE); java.io.ObjectOutputStream os = new java.io.ObjectOutputStream(newNote); os.writeObject(noteToSave); os.close(); if (this.requestType.equals(\"edit\")) { if (!(titleString.equals(this.originalTitle))) { java.lang.Boolean deleted = deleteFile(originalTitle); } } android.widget.Toast.makeText(getApplicationContext(), \"Saved note\", Toast.LENGTH_LONG).show(); title.setText(\"\"); note.setText(\"\"); android.view.inputmethod.InputMethodManager inputManager = ((android.view.inputmethod.InputMethodManager) (getSystemService(Context.INPUT_METHOD_SERVICE))); inputManager.hideSoftInputFromWindow(getCurrentFocus().getWindowToken(), InputMethodManager.HIDE_NOT_ALWAYS); finish(); } catch (java.io.FileNotFoundException e) { e.printStackTrace(); } catch (java.io.IOException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7252/buggy-version/src.main.java.blot.jordan.ellis.com.blot.ComposeActivity.java", "BodyUseAPI": ["java.lang.String.trim()", "java.lang.String.length()"], "Fixed commit": "2bb421c729042cb0c008722d5cc92c5df3635a1e", "Url": "https://api.github.com/repos/jordaniellis/Blot", "Date": "2015-03-04T15:59:37Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.location.LocationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (location == null) { location = mLocationManager.getLastKnownLocation(LocationManager.NETWORK_PROVIDER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7519/buggy-version/app.src.main.java.edu.washington.beerswains.beerwench.BeerAdd.java", "BodyUseAPI": [], "Fixed commit": "14ed4c1663110f03550ed3e92d1db73672941d47", "Url": "https://api.github.com/repos/Jordan-Numbers/beerwench", "Date": "2015-06-09T23:48:29Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((srcRoot == null) || (destRoot == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7949/buggy-version/olca-io.src.main.java.org.openlca.io.olca.CategoryImport.java", "BodyUseAPI": [], "Fixed commit": "606f2652bc0147044973542509d38950c9ec5b49", "Url": "https://api.github.com/repos/GreenDelta/olca-modules", "Date": "2014-06-11T16:46:46Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(plugin.isRestrictedToClans())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5032/buggy-version/src.main.java.net.sacredlabyrinth.phaed.simpleclans.commands.RestrictToClansCommand.java", "BodyUseAPI": [], "Fixed commit": "6917f27513e23eeaffdcf16f1b51549f6d997f67", "Url": "https://api.github.com/repos/xtphty/HardcoreTeamPvP", "Date": "2015-10-05T02:10:36Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(upElevators.isEmpty())) { curElevator = downElevators.remove(); }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6074/buggy-version/elevator.ElevatorManager.java", "BodyUseAPI": [], "Fixed commit": "33566ee89a382c51e47d4f147756f78e00723908", "Url": "https://api.github.com/repos/MFry/E51", "Date": "2011-11-25T19:29:39Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(upElevators.isEmpty())) { curElevator = upElevators.remove(); }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6074/buggy-version/elevator.ElevatorManager.java", "BodyUseAPI": ["java.util.PriorityQueue<Elevator>.remove()"], "Fixed commit": "33566ee89a382c51e47d4f147756f78e00723908", "Url": "https://api.github.com/repos/MFry/E51", "Date": "2011-11-25T19:29:39Z"},
{"Line": "=>644", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (comparator instanceof org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CSPreemptor.ResourcesComparator) { ((org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CSPreemptor.ResourcesComparator) (comparator)).releaseConsumption(app, memoryPerContainer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2710/buggy-version/hadoop-mapreduce-project.hadoop-yarn.hadoop-yarn-server.hadoop-yarn-server-resourcemanager.src.main.java.org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CSPreemptor.java", "BodyUseAPI": [], "Fixed commit": "f40fb1ae42f5f79afef21236990fb6539eb02f59", "Url": "https://api.github.com/repos/muntasirraihan/hadoop-common", "Date": "2013-02-20T04:03:29Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(transitionIterator.hasNext())) { findNext(ts); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7605/buggy-version/util.src.main.java.net.automatalib.util.ts.traversal.SimpleDFRecord.java", "BodyUseAPI": [], "Fixed commit": "5e98032048eb5f8d8e59f38c21f31c5e4cd72976", "Url": "https://api.github.com/repos/misberner/automatalib", "Date": "2014-01-30T23:19:56Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mobi.hsz.idea.gitignore.util.Resources.getResource(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (file != null) { java.lang.String content = mobi.hsz.idea.gitignore.util.Resources.getResourceContent(line); mobi.hsz.idea.gitignore.util.Resources.resourceTemplates.add(new mobi.hsz.idea.gitignore.util.Resources.Template(file, content)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5467/buggy-version/src.mobi.hsz.idea.gitignore.util.Resources.java", "BodyUseAPI": ["java.util.List<mobi.hsz.idea.gitignore.util.Resources.Template>.add(mobi.hsz.idea.gitignore.util.Resources.Template)"], "Fixed commit": "4c71a8c9be44a242e48345baaf03b99de5b57de4", "Url": "https://api.github.com/repos/hsz/idea-gitignore", "Date": "2015-07-02T10:04:20Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dataAvailable) == 0) { Log.i(\"READ\", \"No data was sent back.\"); }else { recvData = new byte[inStream.available()]; inStream.read(recvData); recv = new java.lang.String(recvData); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8809/buggy-version/app.src.main.java.com.example.zakk.seniordesignmay1719.ConnectedThread.java", "BodyUseAPI": [], "Fixed commit": "085c4d3115f98f8d8bf89ffff050d0f241a6209e", "Url": "https://api.github.com/repos/zbelloma/SeniorDesignMay1719", "Date": "2017-03-01T22:13:47Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (text.equals(\"Start\")) { button.setBackgroundColor(getResources().getColor(R.color.START_START)); }else { button.setBackgroundColor(getResources().getColor(R.color.START_STOP)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5713/buggy-version/src.com.njackson.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "32ef34e3bbd994e12200b2d325b716eeb8580304", "Url": "https://api.github.com/repos/jay3/PebbleBike-AndroidApp", "Date": "2013-08-07T21:57:03Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isRunning) || ((runPauseButton.isEnabled()) == false)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1253/buggy-version/src.info.pishen.gameoflife.MainGUI.java", "BodyUseAPI": [], "Fixed commit": "63968888f2cb1a30c6b23144cfc95c33acc1168a", "Url": "https://api.github.com/repos/pishen/parallel-game-of-life", "Date": "2013-06-06T09:12:33Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isRunning) || ((runPauseButton.isEnabled()) == false)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1253/buggy-version/src.info.pishen.gameoflife.MainGUI.java", "BodyUseAPI": [], "Fixed commit": "63968888f2cb1a30c6b23144cfc95c33acc1168a", "Url": "https://api.github.com/repos/pishen/parallel-game-of-life", "Date": "2013-06-06T09:12:33Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInt()) value = ((java.lang.Integer) (store)).intValue(); else if (isString()) value = java.lang.Integer.parseInt(((java.lang.String) (store))); else if (isLong()) value = ((java.lang.Long) (store)).intValue(); else if (isDouble()) value = ((java.lang.Double) (store)).intValue(); else throw new org.vxwo.java.json.JsonException(\"JsonValue cannot convert to a int\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5456/buggy-version/src.org.vxwo.java.json.JsonValue.java", "BodyUseAPI": [], "Fixed commit": "c51d74ad3fbcb0a07fa246fae32ac00868c57329", "Url": "https://api.github.com/repos/vietor/JsonJava", "Date": "2011-12-26T14:45:03Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isBoolean()) value = ((java.lang.Boolean) (store)).booleanValue(); else if (isString()) value = java.lang.Boolean.parseBoolean(((java.lang.String) (store))); else throw new org.vxwo.java.json.JsonException(\"JsonValue cannot convert to a bool\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5456/buggy-version/src.org.vxwo.java.json.JsonValue.java", "BodyUseAPI": [], "Fixed commit": "c51d74ad3fbcb0a07fa246fae32ac00868c57329", "Url": "https://api.github.com/repos/vietor/JsonJava", "Date": "2011-12-26T14:45:03Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDouble()) value = ((java.lang.Double) (store)).doubleValue(); else if (isString()) value = java.lang.Double.parseDouble(((java.lang.String) (store))); else if (isInt()) value = ((java.lang.Integer) (store)).doubleValue(); else if (isLong()) value = ((java.lang.Long) (store)).doubleValue(); else throw new org.vxwo.java.json.JsonException(\"JsonValue cannot convert to a double\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5456/buggy-version/src.org.vxwo.java.json.JsonValue.java", "BodyUseAPI": [], "Fixed commit": "c51d74ad3fbcb0a07fa246fae32ac00868c57329", "Url": "https://api.github.com/repos/vietor/JsonJava", "Date": "2011-12-26T14:45:03Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isLong()) value = ((java.lang.Long) (store)).longValue(); else if (isString()) value = java.lang.Long.parseLong(((java.lang.String) (store))); else if (isInt()) value = ((java.lang.Integer) (store)).longValue(); else if (isDouble()) value = ((java.lang.Double) (store)).longValue(); else throw new org.vxwo.java.json.JsonException(\"JsonValue cannot convert to a long\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5456/buggy-version/src.org.vxwo.java.json.JsonValue.java", "BodyUseAPI": [], "Fixed commit": "c51d74ad3fbcb0a07fa246fae32ac00868c57329", "Url": "https://api.github.com/repos/vietor/JsonJava", "Date": "2011-12-26T14:45:03Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (strwhere == null) throw new java.lang.Exception();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/9127/buggy-version/src.com.dao.DomitoryDao.java", "BodyUseAPI": [], "Fixed commit": "fc520f33c466c7df742675d159a3de28eff38921", "Url": "https://api.github.com/repos/Finspire13/SoftwareTestProject", "Date": "2016-06-23T07:23:33Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((((cnbean.getBuilding_Name()) == null) || ((cnbean.getDomitory_Name()) == null)) || ((cnbean.getDomitory_Number()) == null)) || ((cnbean.getDomitory_Tel()) == null)) || ((cnbean.getDomitory_Type()) == null)) throw new java.lang.Exception();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/9127/buggy-version/src.com.dao.DomitoryDao.java", "BodyUseAPI": [], "Fixed commit": "fc520f33c466c7df742675d159a3de28eff38921", "Url": "https://api.github.com/repos/Finspire13/SoftwareTestProject", "Date": "2016-06-23T07:23:33Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((((cnbean.getBuilding_Name()) == null) || ((cnbean.getDomitory_Name()) == null)) || ((cnbean.getDomitory_Number()) == null)) || ((cnbean.getDomitory_Tel()) == null)) || ((cnbean.getDomitory_Type()) == null)) throw new java.lang.Exception();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/9127/buggy-version/src.com.dao.DomitoryDao.java", "BodyUseAPI": [], "Fixed commit": "fc520f33c466c7df742675d159a3de28eff38921", "Url": "https://api.github.com/repos/Finspire13/SoftwareTestProject", "Date": "2016-06-23T07:23:33Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((cnbean.getBuilding_Introduction()) == null) || ((cnbean.getBuilding_Name()) == null)) throw new java.lang.Exception();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/9127/buggy-version/src.com.dao.BuildingDao.java", "BodyUseAPI": [], "Fixed commit": "fc520f33c466c7df742675d159a3de28eff38921", "Url": "https://api.github.com/repos/Finspire13/SoftwareTestProject", "Date": "2016-06-23T07:23:33Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (strwhere == null) throw new java.lang.Exception();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/9127/buggy-version/src.com.dao.BuildingDao.java", "BodyUseAPI": [], "Fixed commit": "fc520f33c466c7df742675d159a3de28eff38921", "Url": "https://api.github.com/repos/Finspire13/SoftwareTestProject", "Date": "2016-06-23T07:23:33Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((cnbean.getBuilding_Introduction()) == null) || ((cnbean.getBuilding_Name()) == null)) throw new java.lang.Exception();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/9127/buggy-version/src.com.dao.BuildingDao.java", "BodyUseAPI": [], "Fixed commit": "fc520f33c466c7df742675d159a3de28eff38921", "Url": "https://api.github.com/repos/Finspire13/SoftwareTestProject", "Date": "2016-06-23T07:23:33Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((arguments.length()) >= 2) && ((arguments.charAt(1)) == '/')) { return false; }else { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7697/buggy-version/src.main.java.seedu.dailyplanner.logic.parser.Parser.java", "BodyUseAPI": [], "Fixed commit": "dcf6031c8182af943d363138adfbadb03a8fbb2f", "Url": "https://api.github.com/repos/CS2103AUG2016-F11-C4/main", "Date": "2016-11-06T06:11:44Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_picTakerModel) != null) { _picTakerModel.submitUnRegister(_picFrameNumber); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6156/buggy-version/FramePicAppAndroid.FramePicApp.src.main.java.com.creativedrewy.framepicapp.activities.PicTakerActivity.java", "BodyUseAPI": [], "Fixed commit": "c3194d255ccb8c5d028f3e7c36f4502a772eaf9c", "Url": "https://api.github.com/repos/creativedrewy/FreezeTime3D", "Date": "2013-11-02T21:30:27Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dawb.workbench.ui.editors.PlotDataEditor.getDataSet(java.lang.Object,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (set == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2148/buggy-version/org.dawb.workbench.ui.src.org.dawb.workbench.ui.editors.PlotDataEditor.java", "BodyUseAPI": [], "Fixed commit": "3883337fb754e0ae609663ef6e2cb4c5ef15b2b0", "Url": "https://api.github.com/repos/DawnScience/dawn-ui", "Date": "2012-09-28T10:34:34Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((edu.illinois.library.cantaloupe.operation.Crop.Shape.SQUARE.equals(getShape())) && ((fullSize.width) != (fullSize.height))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7316/buggy-version/src.main.java.edu.illinois.library.cantaloupe.operation.Crop.java", "BodyUseAPI": [], "Fixed commit": "fb18486fd58f80599b696e997010003a63bd971b", "Url": "https://api.github.com/repos/medusa-project/cantaloupe", "Date": "2016-12-16T19:59:16Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(inputBuffer.hasRemaining())) { finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4765/buggy-version/src.main.java.org.jboss.stdio.WriterOutputStream.java", "BodyUseAPI": [], "Fixed commit": "859ec6d6eab90e73a8abe8603848ea507e9d0f86", "Url": "https://api.github.com/repos/dmlloyd/jboss-stdio", "Date": "2011-05-11T02:59:52Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.hawksman.unnamedgame.Fight.monster.life) > 0) && ((com.hawksman.unnamedgame.Fight.player.life) > 0)) { MainGame.display.Enable(MainGame.display.continueFight); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/9151/buggy-version/UnnamedGame.src.com.hawksman.unnamedgame.Fight.java", "BodyUseAPI": [], "Fixed commit": "e285e09e709ed0bf03510b67b508b68bb5e3461b", "Url": "https://api.github.com/repos/SuperHawksman/UnnamedGame", "Date": "2012-08-03T17:59:49Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((event.getClickedBlock().getState()) instanceof org.bukkit.block.Sign)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1256/buggy-version/src.main.java.com.garbagemule.MobArena.listeners.MAGlobalListener.java", "BodyUseAPI": [], "Fixed commit": "36313d5b2f90eafacce14d88b4b4ef46bcdd81da", "Url": "https://api.github.com/repos/PlanetCraft/MobArena", "Date": "2016-08-21T02:08:22Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.garbagemule.MobArena.listeners.PlayerInteractEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (p.isSneaking()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1256/buggy-version/src.main.java.com.garbagemule.MobArena.listeners.MAGlobalListener.java", "BodyUseAPI": [], "Fixed commit": "36313d5b2f90eafacce14d88b4b4ef46bcdd81da", "Url": "https://api.github.com/repos/PlanetCraft/MobArena", "Date": "2016-08-21T02:08:22Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(event.hasBlock())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1256/buggy-version/src.main.java.com.garbagemule.MobArena.listeners.MAGlobalListener.java", "BodyUseAPI": [], "Fixed commit": "36313d5b2f90eafacce14d88b4b4ef46bcdd81da", "Url": "https://api.github.com/repos/PlanetCraft/MobArena", "Date": "2016-08-21T02:08:22Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((inClearnessIndexValues) != null) clearnessIndex = inClearnessIndexValues.get(idStations[i])[0];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/9209/buggy-version/src.main.java.lwrbPointCase.Lwrb.java", "BodyUseAPI": [], "Fixed commit": "f4cbe5f09788bfb08eec1a4721399c1e79e3b835", "Url": "https://api.github.com/repos/geoframecomponents/LongWaveRadiationBalance", "Date": "2016-11-11T14:18:22Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles(java.io.FilenameFilter)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (files == null) { java.lang.System.out.println(((\"directory \" + (directoryFile)) + \" not found\")); files = new java.io.File[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5240/buggy-version/src.main.java.net.hydromatic.optiq.impl.csv.CsvSchema.java", "BodyUseAPI": [], "Fixed commit": "387bee8b616623d91103751e8afe6d7c21842446", "Url": "https://api.github.com/repos/julianhyde/optiq-csv", "Date": "2013-10-22T20:20:30Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (id != (-1)) countlist.add(Map.peredgeweight(k));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5035/buggy-version/src.Map.java", "BodyUseAPI": [], "Fixed commit": "636709aab41bd686966c975e75d972263248744b", "Url": "https://api.github.com/repos/TerenceWang/RoutePlan", "Date": "2016-10-07T08:07:38Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["AMWGraph.getFirstNeighbor(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id != (-1)) countlist.add(Map.peredgeweight(k));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5035/buggy-version/src.Map.java", "BodyUseAPI": [], "Fixed commit": "636709aab41bd686966c975e75d972263248744b", "Url": "https://api.github.com/repos/TerenceWang/RoutePlan", "Date": "2016-10-07T08:07:38Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((json == null) || (json.equals(\"null\"))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/12/buggy-version/src.UPPERCASE.IO.CONNECT.java", "BodyUseAPI": [], "Fixed commit": "4a623947312ebede20c20033dd6678ea9052f7ca", "Url": "https://api.github.com/repos/Hanul/UPPERCASE.IO-Java-Client", "Date": "2014-11-13T13:55:23Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((actualCurrent) == 0) element.powerResistor.highImpedance(); else element.powerResistor.setR(((element.load.getU()) / (actualCurrent)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6595/buggy-version/mods.eln.transparentnode.turret.TurretSlowProcess.java", "BodyUseAPI": ["element.powerResistor.setR(((element.load.getU()) / (actualCurrent)))"], "Fixed commit": "9aae172dc735212a0589f600f45eeb3c90c32f1a", "Url": "https://api.github.com/repos/Dolu1990/ElectricalAge", "Date": "2014-09-09T22:07:58Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.mahout.math.VectorWritable.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((vec.size()) > 0) { for (java.util.Iterator<org.apache.mahout.math.Vector.Element> vecIter = vec.iterateNonZero(); vecIter.hasNext();) { org.apache.mahout.math.Vector.Element vecEl = vecIter.next(); int i = vecEl.index(); extendAColIfNeeded(i, ((aRowCount) + 1)); aCols[i].setQuick(aRowCount, vecEl.get()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5584/buggy-version/core.src.main.java.org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob.java", "BodyUseAPI": ["org.apache.mahout.math.Vector.iterateNonZero()"], "Fixed commit": "f62c2c2e17ced74f4271c66396e7ec2c575e878a", "Url": "https://api.github.com/repos/dlyubimov/mahout-commits", "Date": "2011-12-12T22:14:36Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(isTarget(player))) { player.sendMessage(((((\" + \" + (player.getChatName())) + \" \") + (WHITE)) + msg)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2464/buggy-version/src.info.tregmine.commands.NotifyCommand.java", "BodyUseAPI": ["info.tregmine.api.TregminePlayer.sendMessage(((((\" + \" + (player.getChatName())) + \" \") + (WHITE)) + msg))", "info.tregmine.api.TregminePlayer.getChatName()"], "Fixed commit": "285bf0ea91e49a089e7634f6b9a01f6a25fc3f28", "Url": "https://api.github.com/repos/Tregmine/tregmine-mc", "Date": "2013-08-03T21:53:54Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.olympe.Killer.debug) { java.lang.System.out.println((((((((\"Process : user=\" + (info[0])) + \" pid=\") + (info[1])) + \" cpu=\") + (info[2])) + \" ram=\") + (info[3]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5867/buggy-version/src.com.olympe.Killer.java", "BodyUseAPI": [], "Fixed commit": "dd99ecb60c11d368d9f07e54f30307b4338946bb", "Url": "https://api.github.com/repos/OlympeNetwork/java-phpkiller", "Date": "2015-06-30T23:34:27Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<org.eclipse.che.ide.api.command.CommandGoal, org.eclipse.che.ide.command.toolbar.commands.button.GoalButton>.get(org.eclipse.che.ide.api.command.CommandGoal)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (button == null) { button = buttonFactory.newButton(goal, delegate, getKeyBinding(goal)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5490/buggy-version/ide.che-core-ide-app.src.main.java.org.eclipse.che.ide.command.toolbar.commands.ExecuteCommandViewImpl.java", "BodyUseAPI": [], "Fixed commit": "ad55bbc8bc857728851e7ada012268dccf720c51", "Url": "https://api.github.com/repos/eclipse/che", "Date": "2017-03-29T12:30:25Z"},
{"Line": "=>2329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mContext.getPackageManager().getPackagesForUid(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (packages != null) { for (java.lang.String packageName : packages) { if (!(mUsageStats.isAppIdle(packageName, uid, userId))) { return false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7067/buggy-version/services.core.java.com.android.server.net.NetworkPolicyManagerService.java", "BodyUseAPI": [], "Fixed commit": "36089d59a38cbf4df9dbe18fbe6263037b58b204", "Url": "https://api.github.com/repos/sub77-du/android_frameworks_base", "Date": "2016-06-09T14:12:26Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.evollu.react.fcm.FIRMessagingModule.getCurrentActivity()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (activity == null) { promise.resolve(null); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4381/buggy-version/android.src.main.java.com.evollu.react.fcm.FIRMessagingModule.java", "BodyUseAPI": [], "Fixed commit": "504a674b5814c7b470139218f58e4f5e4ea38dac", "Url": "https://api.github.com/repos/evollu/react-native-fcm", "Date": "2017-09-27T13:39:42Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (legAnswer.equalsIgnoreCase(\"yes\")) { java.lang.System.out.println(\"How many legs do you want me to have?\"); int newLegCount = keyboardInput.nextInt(); firstMonster.setLegCount(newLegCount); }else { java.lang.System.out.println(\"I get to keep all of my legs!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/526/buggy-version/src.monster.controller.MonsterController.java", "BodyUseAPI": [], "Fixed commit": "0487aa0ca5240d25cb37d70e77c29850d558653e", "Url": "https://api.github.com/repos/jnilson4/MonsterProject", "Date": "2016-09-16T19:25:45Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (noseAnswer.equalsIgnoreCase(\"yes\")) { java.lang.System.out.println(\"How many eyes noses do you want me to have?\"); int newNoseCount = keyboardInput.nextInt(); firstMonster.setNoseCount(newNoseCount); }else { java.lang.System.out.println(\"I get to keep all my noses! :D\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/526/buggy-version/src.monster.controller.MonsterController.java", "BodyUseAPI": [], "Fixed commit": "0487aa0ca5240d25cb37d70e77c29850d558653e", "Url": "https://api.github.com/repos/jnilson4/MonsterProject", "Date": "2016-09-16T19:25:45Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (eyeAnswer.equalsIgnoreCase(\"Yes\")) { java.lang.System.out.println(\"How many eyes do you want me to have?\"); int newEyeCount = keyboardInput.nextInt(); firstMonster.setEyeCount(newEyeCount); }else { java.lang.System.out.println(\"I get to keep all my eyes! :D\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/526/buggy-version/src.monster.controller.MonsterController.java", "BodyUseAPI": [], "Fixed commit": "0487aa0ca5240d25cb37d70e77c29850d558653e", "Url": "https://api.github.com/repos/jnilson4/MonsterProject", "Date": "2016-09-16T19:25:45Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((charPos > 0) && ((string.charAt((charPos - 1))) == '\\\\')) { singleQuoteOn = !singleQuoteOn; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2608/buggy-version/src.main.java.cz.startnet.utils.pgdiff.parsers.Parser.java", "BodyUseAPI": [], "Fixed commit": "88433bd60bd6d0f51b184e501c85fd0150f18ace", "Url": "https://api.github.com/repos/ArcadiaConsulting/apgdiff", "Date": "2012-09-22T18:39:19Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bid > (cash)) window.print(\"You can't bid that much\"); else window.print(\"Please enter your bid\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6005/buggy-version/src.poker.Human.java", "BodyUseAPI": [], "Fixed commit": "f79159971dcdebced3ee8025b5b307a9defd4da1", "Url": "https://api.github.com/repos/paulsteele/texas-hold-em", "Date": "2013-11-27T14:30:11Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNewInstance) { selectedProjectType = getProject().getDefaultProjectType().name(); }else { selectedProjectType = getInstance().getProjectType().name(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6948/buggy-version/zanata-war.src.main.java.org.zanata.action.VersionHome.java", "BodyUseAPI": [], "Fixed commit": "ff5ad350c0781c05c31c01326969a279a8556d24", "Url": "https://api.github.com/repos/zanata/zanata-server", "Date": "2014-04-21T21:36:27Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.noroomattheinn.timeseries.Row.get(VTData.schema,VTData.OdometerKey)", "org.noroomattheinn.timeseries.Row.get(VTData.schema,VTData.LatitudeKey)", "org.noroomattheinn.timeseries.Row.get(VTData.schema,VTData.LongitudeKey)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((lat == 0.0) && (lng == 0.0)) || (odo == 0.0)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/481/buggy-version/src.org.noroomattheinn.visibletesla.TripController.java", "BodyUseAPI": [], "Fixed commit": "a926ac9ed2e2cfe946141919ea151d1e9edbdc66", "Url": "https://api.github.com/repos/jpasqua/VisibleTesla", "Date": "2015-02-05T01:08:19Z"},
{"Line": "=>480", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type.isRepeated()) && (!(type.isMap()))) { return methodName(com.google.api.codegen.util.Name.from(\"get\").join(name).join(\"list\")); }else { return methodName(com.google.api.codegen.util.Name.from(\"get\").join(name)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3217/buggy-version/src.main.java.com.google.api.codegen.transformer.SurfaceNamer.java", "BodyUseAPI": [], "Fixed commit": "0fc2b1a1ba91f80a259f7caaf386379dad5987fc", "Url": "https://api.github.com/repos/shinfan/toolkit", "Date": "2016-08-17T20:28:08Z"},
{"Line": "=>456", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (count > 1) { return methodName(com.google.api.codegen.util.Name.upperCamel(method.getSimpleName(), (\"Test\" + (java.lang.Integer.toString(count))))); }else { return methodName(com.google.api.codegen.util.Name.upperCamel(method.getSimpleName(), \"Test\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3217/buggy-version/src.main.java.com.google.api.codegen.transformer.SurfaceNamer.java", "BodyUseAPI": ["java.lang.Integer.toString(java.lang.Integer)", "com.google.api.codegen.transformer.SurfaceNamer.methodName(com.google.api.codegen.util.Name.upperCamel(method.getSimpleName(), (\"Test\" + (java.lang.Integer.toString(count)))))", "com.google.api.codegen.util.Name.upperCamel(method.getSimpleName(),java.lang.String)"], "Fixed commit": "0fc2b1a1ba91f80a259f7caaf386379dad5987fc", "Url": "https://api.github.com/repos/shinfan/toolkit", "Date": "2016-08-17T20:28:08Z"},
{"Line": "=>1140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (null != name) { try { declEx = new net.ssehub.easy.varModel.cst.OCLFeatureCall(new net.ssehub.easy.varModel.cst.Variable(context.findVariable(name, null)), net.ssehub.easy.varModel.model.datatypes.OclKeyWords.ASSIGNMENT, declEx); } catch (net.ssehub.easy.varModel.model.ModelQueryException e) { throw new net.ssehub.easy.dslCore.translation.TranslatorException(e, op, IvmlPackage.Literals.CONTAINER_OP__DECL); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4830/buggy-version/Plugins.IVML.de.uni_hildesheim.sse.ivml.src.de.uni_hildesheim.sse.translation.ExpressionTranslator.java", "BodyUseAPI": ["de.uni_hildesheim.sse.translation.TypeContext.findVariable(java.lang.String,<nulltype>)"], "Fixed commit": "cfe797a3124b1c06788227c5278d82829bfa8d52", "Url": "https://api.github.com/repos/SSEHUB/EASyProducer", "Date": "2017-06-23T13:41:01Z"},
{"Line": "=>1134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.uni_hildesheim.sse.ivml.ContainerOp.getArgs()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (null != args) { de.uni_hildesheim.sse.ivml.ActualArgument arg0 = args.get(0); name = arg0.getName(); ex = arg0.getArg(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4830/buggy-version/Plugins.IVML.de.uni_hildesheim.sse.ivml.src.de.uni_hildesheim.sse.translation.ExpressionTranslator.java", "BodyUseAPI": ["java.util.List<de.uni_hildesheim.sse.ivml.ActualArgument>.get(int)"], "Fixed commit": "cfe797a3124b1c06788227c5278d82829bfa8d52", "Url": "https://api.github.com/repos/SSEHUB/EASyProducer", "Date": "2017-06-23T13:41:01Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<com.tomgarne.game.model.Block>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (b.isVisible()) { g.drawImage(Assets.sBlock, ((int) (b.getX())), ((int) (b.getY())), com.tomgarne.game.state.PlayState.BLOCK_WIDTH, com.tomgarne.game.state.PlayState.BLOCK_HEIGHT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1385/buggy-version/app.src.main.java.com.tomgarne.game.state.PlayState.java", "BodyUseAPI": ["com.tomgarne.game.model.Block.getY()", "com.tomgarne.game.model.Block.getX()", "com.tomgarne.framework.util.Painter.drawImage(Assets.sBlock,((int) (b.getX())),((int) (b.getY())),int,int)"], "Fixed commit": "eb1e358247829fcee4a26999757bbe13a7ab1a24", "Url": "https://api.github.com/repos/icytom/EllioAndroid", "Date": "2015-03-14T01:23:41Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class.getResourceAsStream(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (resourceAsStream == null) throw new org.apache.velocity.exception.ResourceNotFoundException(((\"Resource \" + name) + \" could not be found\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1076/buggy-version/src.de.endrullis.utils.VelocityUtils.java", "BodyUseAPI": [], "Fixed commit": "c65648720494d36c3ae4937c2e906f7a6cd46766", "Url": "https://api.github.com/repos/xylo/JErgometer", "Date": "2012-03-11T09:03:23Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj instanceof som.vmobjects.SBlock) { return new som.interpreter.nodes.dispatch.DispatchGuard.CheckSBlock(((som.vmobjects.SBlock) (obj)).getSOMClass()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7065/buggy-version/src.som.interpreter.nodes.dispatch.DispatchGuard.java", "BodyUseAPI": [], "Fixed commit": "da10f5fa11f5a1275185f547e4528a0b809f60c6", "Url": "https://api.github.com/repos/charig/TruffleMATE", "Date": "2016-07-27T19:15:00Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((!(returnIndirectDependencies.contains(tempDTO))) && (!(containsDependency(tempDTO, returnIndirectDependencies)))) && (!(isDependencyInList(tempDTO, returnIndirectDependencies)))) { returnIndirectDependencies.add(tempDTO); }else { java.lang.System.out.println(\"Already on the list bru! 2\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7038/buggy-version/src.husacct.analyse.domain.famix.FamixDependencyFinder.java", "BodyUseAPI": ["java.util.List<husacct.common.dto.DependencyDTO>.add(husacct.common.dto.DependencyDTO)"], "Fixed commit": "905342280210fbed7751b7b11b69926d03e47bef", "Url": "https://api.github.com/repos/HUSACCT/HUSACCT", "Date": "2013-04-15T21:22:43Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (c < required) c = required;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5180/buggy-version/src.main.java.com.tomgibara.streams.ByteWriteStream.java", "BodyUseAPI": [], "Fixed commit": "d05f54861096f9c414e92bd71101241b1bb3710e", "Url": "https://api.github.com/repos/tomgibara/streams", "Date": "2015-07-19T17:11:28Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.happy8.dao.Happy8DAO.getFindBuddyInfo(args.getBdInfoId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((fd != null) && ((fd.getCommentList()) != null)) { for (com.happy8.args.FindBuddyCommentInfo info : fd.getCommentList()) { if ((info.getCommentId()) == id) { res.setItem(info); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6321/buggy-version/happy8.src.main.java.com.happy8.app.findbuddy.ReplayFindBuddyInfoServlet.java", "BodyUseAPI": ["com.happy8.args.FindBuddyInfoItem.getCommentList()"], "Fixed commit": "e072ad034f52410f2a80d9c9889160a6b27d0ff7", "Url": "https://api.github.com/repos/weiPATHotian/happy8", "Date": "2015-11-15T08:25:17Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (child == null) { child = document.createElement(\"conf-providers\"); if (nextNode == null) { rootElement.appendChild(child); }else { rootElement.insertBefore(child, nextNode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7890/buggy-version/src.main.java.org.walkmod.conf.providers.xml.AddProviderConfigXMLAction.java", "BodyUseAPI": [], "Fixed commit": "16de5e1c39c089e6b2c24b94967cbf9521b6a3c5", "Url": "https://api.github.com/repos/walkmod/walkmod-core", "Date": "2015-10-30T16:54:53Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Node.getNodeName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((\"merge-policies\".equals(nodeName)) || (\"chain\".equals(nodeName))) || (\"transformation\".equals(nodeName))) { nextNode = childNode; finish = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7890/buggy-version/src.main.java.org.walkmod.conf.providers.xml.AddProviderConfigXMLAction.java", "BodyUseAPI": [], "Fixed commit": "16de5e1c39c089e6b2c24b94967cbf9521b6a3c5", "Url": "https://api.github.com/repos/walkmod/walkmod-core", "Date": "2015-10-30T16:54:53Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((menuscene.GameScreen.getNumOfPlayers()) < 4) index = (menuscene.GameScreen.getIndex()) - (menuscene.GameScreen.getNumOfPlayers()); else index = (menuscene.GameScreen.getIndex()) - 3;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3816/buggy-version/src.menuscene.VictoryPointInitScreen.java", "BodyUseAPI": [], "Fixed commit": "55c88c46515b6ade8f642913d07a169578c86ca7", "Url": "https://api.github.com/repos/strtsoia/AgeOfMyth", "Date": "2011-12-09T04:05:31Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (key == (org.lwjgl.glfw.GLFW.GLFW_KEY_LEFT_ALT)) { altDown = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/648/buggy-version/src.se.wiklund.haderengine.GameStateManager.java", "BodyUseAPI": [], "Fixed commit": "a321af88ad589f06fc5c65a7c5f955f5e0e3fa02", "Url": "https://api.github.com/repos/Hadermite/HaderEngine", "Date": "2017-04-20T22:12:30Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.muxAPanel.isVisible()) { controller.setMuxNumA(gatherMuxNumA()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3521/buggy-version/src.view.MainForm.java", "BodyUseAPI": [], "Fixed commit": "34466f496eac3ff7ae9d3945bb3c0216c1f52189", "Url": "https://api.github.com/repos/blorente/pevolinator-3000", "Date": "2017-05-27T06:51:07Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (values == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2992/buggy-version/provisioning.provisioning-impl.src.main.java.com.evolveum.midpoint.provisioning.ucf.query.ValueOperation.java", "BodyUseAPI": [], "Fixed commit": "7b48ed92a8f8f9067f1733117253549d34bb83a6", "Url": "https://api.github.com/repos/Evolveum/midpoint", "Date": "2015-10-30T10:13:23Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastValidTick) == null) { com.jforex.programming.price.InstrumentPriceEngine.logger.error(\"Last tick from platform is null; probably connection problems -> returning empty tick!\"); lastValidTick = new com.jforex.programming.price.EmptyTick(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4889/buggy-version/Utils.src.main.java.com.jforex.programming.price.InstrumentPriceEngine.java", "BodyUseAPI": [], "Fixed commit": "0db1a125f416a4cb523428ccecbbf8857f1a3476", "Url": "https://api.github.com/repos/juxeii/JForexUtils", "Date": "2014-06-09T19:51:14Z"},
{"Line": "=>422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (key == null) throw new java.lang.NullPointerException(\"key can not be null\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1114/buggy-version/src.main.java.net.openhft.chronicle.map.StatelessChronicleMap.java", "BodyUseAPI": [], "Fixed commit": "e654451d2fd9a1e1a1d5d6bb1adb33befb4703a0", "Url": "https://api.github.com/repos/OpenHFT/Chronicle-Map", "Date": "2014-10-29T16:53:12Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((type.getTypeName().indexOf(\"java.util.List\")) == 0) { classTypes[i] = java.util.List.class; setContainerType(true); }else if ((type.getTypeName().indexOf(\"java.util.Set\")) == 0) { classTypes[i] = java.util.Set.class; setContainerType(true); }else if ((type.getTypeName().indexOf(\"java.util.Map\")) == 0) { classTypes[i] = java.util.Map.class; setContainerType(true); }else { classTypes[i] = ((java.lang.Class<?>) (types[i])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2980/buggy-version/ikasoa-rpc.src.com.ikamobile.ikasoa.rpc.handler.ReturnData.java", "BodyUseAPI": [], "Fixed commit": "67b2aa7f413a42fd7a0b9585e3be962add9c91c9", "Url": "https://api.github.com/repos/venwyhk/ikasoa", "Date": "2016-11-16T09:04:27Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (changeTo > 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7491/buggy-version/src.risk.RiskBoard.java", "BodyUseAPI": [], "Fixed commit": "9db473de4bece46c26c40b15904834e630af0d68", "Url": "https://api.github.com/repos/kiarnold/RiskSimlutator", "Date": "2015-01-21T04:49:40Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entry.getPlayerOrTeamId()) != null) { try { ID = java.lang.Long.parseLong(entry.getPlayerOrTeamId()); set.add(ID); } catch (final java.lang.NumberFormatException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6033/buggy-version/src.com.robrua.orianna.type.dto.league.League.java", "BodyUseAPI": ["com.robrua.orianna.type.dto.league.LeagueEntry.getPlayerOrTeamId()", "java.lang.Long.parseLong(entry.getPlayerOrTeamId())"], "Fixed commit": "e2c96bdbbd426beebfbf2bcd60449e3d040cde99", "Url": "https://api.github.com/repos/meraki-analytics/orianna", "Date": "2015-02-25T23:44:41Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.restlet.engine.converter.DefaultConverter.VARIANT_OBJECT_BINARY_SUPPORTED) { result = addVariant(result, org.restlet.engine.converter.DefaultConverter.VARIANT_OBJECT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8891/buggy-version/modules.org.restlet.src.org.restlet.engine.converter.DefaultConverter.java", "BodyUseAPI": [], "Fixed commit": "f52c7d0c9203a3c4c65e9d5a89a186c17190529e", "Url": "https://api.github.com/repos/restlet/restlet-framework-java", "Date": "2013-08-22T09:51:02Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.restlet.engine.converter.DefaultConverter.VARIANT_OBJECT_BINARY_SUPPORTED) { updatePreferences(preferences, MediaType.APPLICATION_JAVA_OBJECT, 1.0F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8891/buggy-version/modules.org.restlet.src.org.restlet.engine.converter.DefaultConverter.java", "BodyUseAPI": [], "Fixed commit": "f52c7d0c9203a3c4c65e9d5a89a186c17190529e", "Url": "https://api.github.com/repos/restlet/restlet-framework-java", "Date": "2013-08-22T09:51:02Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (net.bootsfaces.utils.BsfUtils.isStringValued(node.getData())) { sb.append(((\"\\\"data\\\": \\\"\" + (node.getData())) + \"\\\", \")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1891/buggy-version/src.main.java.net.bootsfaces.component.tree.model.TreeModelUtils.java", "BodyUseAPI": ["java.lang.StringBuilder.append(((\"\\\"data\\\": \\\"\" + (node.getData())) + \"\\\", \"))", "net.bootsfaces.component.tree.model.Node.getData()"], "Fixed commit": "cc0eab52b4b136e4f2e6561027f14490c3d37ad7", "Url": "https://api.github.com/repos/TheCoder4eu/BootsFaces-OSP", "Date": "2016-06-30T12:17:08Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((null == string) || (string.isEmpty())) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4962/buggy-version/src.com.activeandroid.sebbia.internal.ModelHelper.java", "BodyUseAPI": [], "Fixed commit": "2ccc4ed73162027a07090936d4b45fc0fb340e22", "Url": "https://api.github.com/repos/ultraon/ActiveAndroid", "Date": "2015-02-04T18:25:35Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((settings.getInt(\"BackgroundServiceDelay\", 30)) < 60) { DelayLabel.setText(((java.lang.Integer.toString(settings.getInt(\"BackgroundServiceDelay\", 30))) + \" secs\")); }else { double minutes = 0.016666667 * (settings.getInt(\"BackgroundServiceDelay\", 30)); java.text.DecimalFormat df = new java.text.DecimalFormat(\"#.##\"); DelayLabel.setText(((df.format(minutes)) + \" mins\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3712/buggy-version/src.net.networksaremadeofstring.rhybudd.Settings.java", "BodyUseAPI": ["android.widget.TextView.setText(((java.lang.Integer.toString(settings.getInt(\"BackgroundServiceDelay\", 30))) + \" secs\"))", "android.content.SharedPreferences.getInt(java.lang.String,int)", "android.content.SharedPreferences.getInt(java.lang.String,int)", "java.lang.Integer.toString(settings.getInt(\"BackgroundServiceDelay\", 30))"], "Fixed commit": "4a5032dbf44779c81a0b344dffd4ceae2b76e431", "Url": "https://api.github.com/repos/NetworksAreMadeOfString/Rhybudd", "Date": "2011-09-18T20:24:05Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((root.lastChild) == pointer) { root.lastChild = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2118/buggy-version/src.main.java.me.doubledutch.lazyjson.LazyObject.java", "BodyUseAPI": [], "Fixed commit": "e36bb8a56e691db860e19d1e0feebb51ce3d514c", "Url": "https://api.github.com/repos/doubledutch/LazyJSON", "Date": "2017-05-03T18:02:16Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.hadoop.hdfs.server.namenode.NameNodeDummy.DEBUG) java.lang.System.out.println((\"Found existing namespace: \" + (subTree.getFullPathName())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7748/buggy-version/hadoop-hdfs-project.hadoop-hdfs.src.main.java.org.apache.hadoop.hdfs.server.namenode.dummy.INodeClient.java", "BodyUseAPI": [], "Fixed commit": "c9cb72fc6f003171bf6a2c606ebd0250ccd1edc1", "Url": "https://api.github.com/repos/rlzhang/hadoop", "Date": "2015-07-30T15:23:35Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (accountId != null) { final java.util.List<com.ning.killbill.zuora.dao.entities.PaymentMethodEntity> old = transactional.getByAccountId(accountId); for (com.ning.killbill.zuora.dao.entities.PaymentMethodEntity cur : old) { transactional.deleteById(cur.getKbPaymentMethodId()); } for (com.ning.killbill.zuora.dao.entities.PaymentMethodEntity cur : newPms) { transactional.insert(cur); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4081/buggy-version/src.main.java.com.ning.killbill.zuora.dao.dbi.JDBIZuoraPluginDao.java", "BodyUseAPI": ["com.ning.killbill.zuora.dao.dbi.PaymentMethodEntitySqlDao.getByAccountId(java.lang.String)"], "Fixed commit": "1e6dfe4aa85c16780613fd05213a1f5f3d7efe5d", "Url": "https://api.github.com/repos/killbill/killbill-zuora-plugin", "Date": "2013-03-18T22:59:26Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPopupWindow) != null) { if (mPopupWindow.isShowing()) { mPopupWindow.dismiss(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4581/buggy-version/app.src.main.java.com.masum.locationnote.NoteEditor.java", "BodyUseAPI": [], "Fixed commit": "50fd4a75c0a66a4cdc2a7b38f1000b548f9d8ea6", "Url": "https://api.github.com/repos/madsum/LocationNote", "Date": "2015-08-15T07:11:38Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mFilteredLogcatData.size()) > 10000) { mFilteredLogcatData.clear(); mLogcatData.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1888/buggy-version/logcatviewer.src.main.java.com.fatangare.logcatviewer.ui.adapter.LogcatViewerListAdapter.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.clear()"], "Fixed commit": "57462c4580c0175616f6ba5bc03223dce3b1c127", "Url": "https://api.github.com/repos/smithaaron/LogcatViewer", "Date": "2016-07-21T09:38:11Z"},
{"Line": "=>681", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((apiVersion) != (Version.VERSION_2_6)) { endpoint = \"oauth/device\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1295/buggy-version/source.library.com.restfb.DefaultFacebookClient.java", "BodyUseAPI": [], "Fixed commit": "b8707b5add3ce4dae76fcdddb115b721c9347d9b", "Url": "https://api.github.com/repos/restfb/restfb", "Date": "2016-04-28T22:04:04Z"},
{"Line": "=>698", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((apiVersion) != (Version.VERSION_2_6)) { endpoint = \"oauth/device\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1295/buggy-version/source.library.com.restfb.DefaultFacebookClient.java", "BodyUseAPI": [], "Fixed commit": "b8707b5add3ce4dae76fcdddb115b721c9347d9b", "Url": "https://api.github.com/repos/restfb/restfb", "Date": "2016-04-28T22:04:04Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((table != null) && (!(table.isEmpty()))) { java.lang.String[] row = table.split(\"],\\\\[\"); for (int i = 0; i < (row.length); i++) { java.lang.String[] col = row[i].split(\",(?=(?:[^\\\"]*\\\"[^\\\"]*\\\")*[^\\\"]*$)\", (-1)); for (int j = 0; j < (col.length); j++) { if ((col[j]) != null) { col[j] = col[j].replaceAll(\"^\\\"|\\\"$\", \"\"); } res.append(((col[j]) + \" \\t\")); } res.append(\" \\n\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1665/buggy-version/kylin.src.main.java.org.apache.zeppelin.kylin.KylinInterpreter.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "c32c55af555d8c190122e4c9ff90fcc3bb46fddd", "Url": "https://api.github.com/repos/jinxliu/zeppelin", "Date": "2017-10-27T07:03:26Z"},
{"Line": "=>585", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.min(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (indexOfFirstPrefix <= 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3425/buggy-version/src.seedu.addressbook.AddressBook.java", "BodyUseAPI": [], "Fixed commit": "6b7bd6bdb3ab68a79b9662d35434ab3dbc58b7bb", "Url": "https://api.github.com/repos/yunpengn/addressbook-level1", "Date": "2017-08-26T07:49:06Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jsonObject.get(\"locations\")) != null) for (com.google.gson.JsonElement element : jsonObject.get(\"locations\").getAsJsonArray()) { member.location.add(element.getAsJsonObject().get(\"name\").getAsString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3945/buggy-version/src.main.java.com.hehehey.ghost.bot.ZhihuBot.java", "BodyUseAPI": ["jsonObject.get(\"locations\").getAsJsonArray()", "com.google.gson.JsonObject.get(java.lang.String)"], "Fixed commit": "18305eae2ade6d61458d0cc09b3de1a8f012a15d", "Url": "https://api.github.com/repos/dickrd/ghost", "Date": "2017-08-29T06:26:12Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jsonObject.get(\"business\")) != null) for (com.google.gson.JsonElement element : jsonObject.get(\"business\").getAsJsonArray()) { member.business.add(element.getAsJsonObject().get(\"name\").getAsString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3945/buggy-version/src.main.java.com.hehehey.ghost.bot.ZhihuBot.java", "BodyUseAPI": ["jsonObject.get(\"business\").getAsJsonArray()", "com.google.gson.JsonObject.get(java.lang.String)"], "Fixed commit": "18305eae2ade6d61458d0cc09b3de1a8f012a15d", "Url": "https://api.github.com/repos/dickrd/ghost", "Date": "2017-08-29T06:26:12Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jsonObject.get(\"educations\")) != null) for (com.google.gson.JsonElement element : jsonObject.get(\"educations\").getAsJsonArray()) { for (java.util.Map.Entry<java.lang.String, com.google.gson.JsonElement> entry : element.getAsJsonObject().entrySet()) { member.education.add(entry.getValue().getAsJsonObject().get(\"name\").getAsString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3945/buggy-version/src.main.java.com.hehehey.ghost.bot.ZhihuBot.java", "BodyUseAPI": ["jsonObject.get(\"educations\").getAsJsonArray()", "com.google.gson.JsonObject.get(java.lang.String)"], "Fixed commit": "18305eae2ade6d61458d0cc09b3de1a8f012a15d", "Url": "https://api.github.com/repos/dickrd/ghost", "Date": "2017-08-29T06:26:12Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jsonObject.get(\"employments\")) != null) for (com.google.gson.JsonElement element : jsonObject.get(\"employments\").getAsJsonArray()) { for (java.util.Map.Entry<java.lang.String, com.google.gson.JsonElement> entry : element.getAsJsonObject().entrySet()) { member.employment.add(entry.getValue().getAsJsonObject().get(\"name\").getAsString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3945/buggy-version/src.main.java.com.hehehey.ghost.bot.ZhihuBot.java", "BodyUseAPI": ["jsonObject.get(\"employments\").getAsJsonArray()", "com.google.gson.JsonObject.get(java.lang.String)"], "Fixed commit": "18305eae2ade6d61458d0cc09b3de1a8f012a15d", "Url": "https://api.github.com/repos/dickrd/ghost", "Date": "2017-08-29T06:26:12Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(gname.equals(\"\"))) { window.getHandler().getOutHandler().createGroup(gname); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1762/buggy-version/src.main.java.de.jattyv.desktop.gui.cards.ChatCard.java", "BodyUseAPI": ["window.getHandler().getOutHandler().createGroup(java.lang.String)"], "Fixed commit": "5f3692b221c3fa2f9dd2d64d3bbb0ce2bc843d22", "Url": "https://api.github.com/repos/Lixja/jattyv-chat-desktop", "Date": "2017-02-06T14:09:32Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(fname.equals(\"\"))) { friends.add(fname); modelFG.addElement(new de.jattyv.desktop.gui.cards.cell.FG(fname, de.jattyv.desktop.gui.cards.cell.FG.FG_TYPE_FRIEND)); if (settings.isClientSettingsPathAvailable()) { new de.jattyv.desktop.data.ConfigFileHandler().write(settings.getClientSettingsPath(), de.jattyv.jcapi.data.jfc.JattyvFileController.getFriendsAsJson(friends)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1762/buggy-version/src.main.java.de.jattyv.desktop.gui.cards.ChatCard.java", "BodyUseAPI": ["javax.swing.DefaultListModel.addElement(de.jattyv.desktop.gui.cards.cell.FG)", "java.util.LinkedList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "5f3692b221c3fa2f9dd2d64d3bbb0ce2bc843d22", "Url": "https://api.github.com/repos/Lixja/jattyv-chat-desktop", "Date": "2017-02-06T14:09:32Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog((\"Enter the UserName of you friend you want to add to \" + (fg.getTitle())))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(fname.equals(\"\"))) { window.getHandler().getOutHandler().addUserToGroup(fg.getTitle(), fname); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1762/buggy-version/src.main.java.de.jattyv.desktop.gui.cards.ChatCard.java", "BodyUseAPI": ["window.getHandler().getOutHandler().addUserToGroup(fg.getTitle(),java.lang.String)"], "Fixed commit": "5f3692b221c3fa2f9dd2d64d3bbb0ce2bc843d22", "Url": "https://api.github.com/repos/Lixja/jattyv-chat-desktop", "Date": "2017-02-06T14:09:32Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (number > (pokemon.PokemonInfo.NUM_POKEMON)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8586/buggy-version/src.gui.view.PokedexView.java", "BodyUseAPI": [], "Fixed commit": "e9dace5bab4c621910a25d0ecbaee817b7f92a3f", "Url": "https://api.github.com/repos/leahfortier/pokemon", "Date": "2017-02-16T05:09:26Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.guidefreitas.gamebox.Game.getParseFile(Game.FIELD_COVER_IMAGE)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (coverImageFile != null) { mImageFetcher.loadImage(coverImageFile.getUrl(), viewHolder.imageView, this.loadingCoverImage); }else { viewHolder.imageView.setImageBitmap(this.loadingCoverImage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1928/buggy-version/src.com.guidefreitas.gamebox.adapters.GamesAdapter.java", "BodyUseAPI": ["com.parse.ParseFile.getUrl()", "com.guidefreitas.gamebox.util.ImageFetcher.loadImage(coverImageFile.getUrl(),android.widget.ImageView,android.graphics.Bitmap)"], "Fixed commit": "626d143cd8186c89b9fa8bc09989432ee58748b8", "Url": "https://api.github.com/repos/guidefreitas/gamebox", "Date": "2013-07-19T18:21:39Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.guidefreitas.gamebox.Game.getParseFile(Game.FIELD_COVER_IMAGE)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (coverImageFile != null) { mImageFetcher.loadImage(coverImageFile.getUrl(), coverImageView, emptyCoverImage); }else { coverImageView.setImageBitmap(emptyCoverImage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1928/buggy-version/src.com.guidefreitas.gamebox.EditGameActivity.java", "BodyUseAPI": ["com.guidefreitas.gamebox.util.ImageFetcher.loadImage(coverImageFile.getUrl(),android.widget.ImageView,android.graphics.Bitmap)", "com.parse.ParseFile.getUrl()"], "Fixed commit": "626d143cd8186c89b9fa8bc09989432ee58748b8", "Url": "https://api.github.com/repos/guidefreitas/gamebox", "Date": "2013-07-19T18:21:39Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.guidefreitas.gamebox.Game.getParseFile(Game.FIELD_COVER_IMAGE)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (coverImageFile != null) { mImageFetcher.loadImage(coverImageFile.getUrl(), ivCoverImage, emptyCoverImage); }else { ivCoverImage.setImageBitmap(emptyCoverImage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1928/buggy-version/src.com.guidefreitas.gamebox.GameDetailActivity.java", "BodyUseAPI": ["com.parse.ParseFile.getUrl()", "com.guidefreitas.gamebox.util.ImageFetcher.loadImage(coverImageFile.getUrl(),android.widget.ImageView,android.graphics.Bitmap)"], "Fixed commit": "626d143cd8186c89b9fa8bc09989432ee58748b8", "Url": "https://api.github.com/repos/guidefreitas/gamebox", "Date": "2013-07-19T18:21:39Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.googlecode.flyway.core.util.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((dollarQuote) == null) && (cleanToken.matches(com.googlecode.flyway.core.dbsupport.postgresql.PostgreSQLSqlStatementBuilder.DOLLAR_QUOTE_REGEX))) { if (\"$$\".equals(cleanToken)) { dollarQuote = cleanToken; }else { dollarQuote = cleanToken.substring(0, ((cleanToken.substring(1).indexOf(\"$\")) + 2)); if (((cleanToken.length()) > (dollarQuote.length())) && (cleanToken.endsWith(dollarQuote))) { dollarQuote = null; continue; } } tokenTypes.add(com.googlecode.flyway.core.dbsupport.postgresql.PostgreSQLSqlStatementBuilder.TokenType.DOLLAR_OPEN); }else if (((dollarQuote) != null) && ((cleanToken.equals(dollarQuote)) || ((!(cleanToken.startsWith(dollarQuote))) && (cleanToken.endsWith(dollarQuote))))) { tokenTypes.add(com.googlecode.flyway.core.dbsupport.postgresql.PostgreSQLSqlStatementBuilder.TokenType.DOLLAR_CLOSE); dollarQuote = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/897/buggy-version/flyway-core.src.main.java.com.googlecode.flyway.core.dbsupport.postgresql.PostgreSQLSqlStatementBuilder.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.endsWith(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.endsWith(java.lang.String)"], "Fixed commit": "05a1768e902f1f51583c6e8c07955b49b3bf9b1a", "Url": "https://api.github.com/repos/cdedie/flyway", "Date": "2013-02-06T10:31:00Z"},
{"Line": "=>786", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (closeOnCancel) { org.atmosphere.cpr.AtmosphereResponse.class.cast(response).close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6850/buggy-version/modules.cpr.src.main.java.org.atmosphere.cpr.AtmosphereResourceImpl.java", "BodyUseAPI": [], "Fixed commit": "22d08c1bb70c956a3a67ea71b5ccbb2c265a7307", "Url": "https://api.github.com/repos/Atmosphere/atmosphere", "Date": "2015-03-13T22:23:04Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (android.text.TextUtils.isEmpty(mUrls[position])) { com.squareup.picasso.Picasso.with(mContext).cancelRequest(imageView); imageView.setImageDrawable(null); com.squareup.picasso.Picasso.with(mContext).load(R.drawable.ic_image_broken).into(imageView); }else { com.squareup.picasso.Picasso.with(mContext).load(mUrls[position]).placeholder(R.drawable.ic_android).error(R.drawable.ic_image_broken).into(imageView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5697/buggy-version/app.src.main.java.me.li2.android.tutorial.Picasso.L2ImageDisplaying.ImageDisplaying.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(mContext).load(mUrls[position]).placeholder(R.drawable.ic_android)", "com.squareup.picasso.Picasso.with(mContext).load(java.lang.String)", "com.squareup.picasso.Picasso.with(mContext).load(mUrls[position]).placeholder(R.drawable.ic_android).error(R.drawable.ic_image_broken).into(android.widget.ImageView)", "com.squareup.picasso.Picasso.with(mContext).load(mUrls[position]).placeholder(R.drawable.ic_android).error(R.drawable.ic_image_broken)"], "Fixed commit": "e682d8f014d7be7bf1a253105e5ce42521c57c12", "Url": "https://api.github.com/repos/li2/android-tutorial", "Date": "2017-05-03T08:26:05Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (best == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7454/buggy-version/src.main.java.ca.mcgill.cs.crown.procedure.VerbPatternExtractor.java", "BodyUseAPI": [], "Fixed commit": "3dcd61f8be268298ca48f8d13cc2e6f0803a25d3", "Url": "https://api.github.com/repos/davidjurgens/crown", "Date": "2015-06-01T16:47:05Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.adgsoftware.mydomo.engine.controller.gateway.Gateway.getIpAddress()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (ipAddress == null) { sb.append(\"\\nIP address: Not available\"); }else { sb.append(\"\\nIP address:\").append(((ipAddress[0]) < 0 ? (ipAddress[0]) & 255 : ipAddress[0])).append(\".\").append(((ipAddress[1]) < 0 ? (ipAddress[1]) & 255 : ipAddress[1])).append(\".\").append(((ipAddress[2]) < 0 ? (ipAddress[2]) & 255 : ipAddress[2])).append(\".\").append(((ipAddress[3]) < 0 ? (ipAddress[3]) & 255 : ipAddress[3])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8668/buggy-version/android.src.main.java.com.adgsoftware.mydomo.ui.components.GatewayComponent.java", "BodyUseAPI": ["java.lang.StringBuffer.append(int)", "java.lang.StringBuffer.append(int)", "java.lang.StringBuffer.append(int)", "java.lang.StringBuffer.append(java.lang.String)", "java.lang.StringBuffer.append(java.lang.String)", "java.lang.StringBuffer.append(int)", "java.lang.StringBuffer.append(java.lang.String)"], "Fixed commit": "e91374d11eb2ef832357ac0552fc014cb4517030", "Url": "https://api.github.com/repos/arnauddegiuli/MyDomo", "Date": "2013-03-07T21:03:34Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.adgsoftware.mydomo.engine.controller.gateway.Gateway.getNetMask()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (netMask == null) { sb.append(\"\\nNetMask: Not available\"); }else { sb.append(\"\\nNetMask:\").append(((netMask[0]) < 0 ? (netMask[0]) & 255 : netMask[0])).append(\".\").append(((netMask[1]) < 0 ? (netMask[1]) & 255 : netMask[1])).append(\".\").append(((netMask[2]) < 0 ? (netMask[2]) & 255 : netMask[2])).append(\".\").append(((netMask[3]) < 0 ? (netMask[3]) & 255 : netMask[3])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8668/buggy-version/android.src.main.java.com.adgsoftware.mydomo.ui.components.GatewayComponent.java", "BodyUseAPI": ["java.lang.StringBuffer.append(int)", "java.lang.StringBuffer.append(java.lang.String)", "java.lang.StringBuffer.append(int)", "java.lang.StringBuffer.append(java.lang.String)", "java.lang.StringBuffer.append(java.lang.String)", "java.lang.StringBuffer.append(int)", "java.lang.StringBuffer.append(int)"], "Fixed commit": "e91374d11eb2ef832357ac0552fc014cb4517030", "Url": "https://api.github.com/repos/arnauddegiuli/MyDomo", "Date": "2013-03-07T21:03:34Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.adgsoftware.mydomo.engine.controller.gateway.Gateway.getKernelVersion()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (kernelVersion == null) { sb.append(\"\\nKernel Version: Not available\"); }else { sb.append(\"\\nKernel Version:\").append(kernelVersion.getBuild()).append(\".\").append(kernelVersion.getRelease()).append(\".\").append(kernelVersion.getVersion()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8668/buggy-version/android.src.main.java.com.adgsoftware.mydomo.ui.components.GatewayComponent.java", "BodyUseAPI": ["sb.append(\"\\nKernel Version:\").append(kernelVersion.getBuild()).append(\".\").append(kernelVersion.getRelease())", "com.adgsoftware.mydomo.engine.controller.gateway.Version.getVersion()", "sb.append(\"\\nKernel Version:\").append(kernelVersion.getBuild()).append(\".\").append(kernelVersion.getRelease()).append(\".\").append(kernelVersion.getVersion())", "com.adgsoftware.mydomo.engine.controller.gateway.Version.getRelease()", "java.lang.StringBuffer.append(java.lang.String)", "java.lang.StringBuffer.append(kernelVersion.getBuild())", "com.adgsoftware.mydomo.engine.controller.gateway.Version.getBuild()", "sb.append(\"\\nKernel Version:\").append(kernelVersion.getBuild()).append(\".\").append(kernelVersion.getRelease()).append(java.lang.String)"], "Fixed commit": "e91374d11eb2ef832357ac0552fc014cb4517030", "Url": "https://api.github.com/repos/arnauddegiuli/MyDomo", "Date": "2013-03-07T21:03:34Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.adgsoftware.mydomo.engine.controller.gateway.Gateway.getDistributionVersion()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (version == null) { sb.append(\" Not available\"); }else { sb.append(version.getBuild()).append(\".\").append(version.getRelease()).append(\".\").append(version.getVersion()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8668/buggy-version/android.src.main.java.com.adgsoftware.mydomo.ui.components.GatewayComponent.java", "BodyUseAPI": ["com.adgsoftware.mydomo.engine.controller.gateway.Version.getBuild()", "sb.append(version.getBuild()).append(\".\").append(version.getRelease()).append(java.lang.String)", "sb.append(version.getBuild()).append(\".\").append(version.getRelease())", "java.lang.StringBuffer.append(java.lang.String)", "com.adgsoftware.mydomo.engine.controller.gateway.Version.getRelease()", "com.adgsoftware.mydomo.engine.controller.gateway.Version.getVersion()", "java.lang.StringBuffer.append(version.getBuild())", "sb.append(version.getBuild()).append(\".\").append(version.getRelease()).append(\".\").append(version.getVersion())"], "Fixed commit": "e91374d11eb2ef832357ac0552fc014cb4517030", "Url": "https://api.github.com/repos/arnauddegiuli/MyDomo", "Date": "2013-03-07T21:03:34Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.adgsoftware.mydomo.engine.controller.gateway.Gateway.getFirmwareVersion()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (firmwareVersion == null) { sb.append(\"\\nFirmWare Version: Not available\"); }else { sb.append(\"\\nFirmWare Version:\").append(firmwareVersion.getBuild()).append(\".\").append(firmwareVersion.getRelease()).append(\".\").append(firmwareVersion.getVersion()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8668/buggy-version/android.src.main.java.com.adgsoftware.mydomo.ui.components.GatewayComponent.java", "BodyUseAPI": ["java.lang.StringBuffer.append(java.lang.String)", "com.adgsoftware.mydomo.engine.controller.gateway.Version.getVersion()", "sb.append(\"\\nFirmWare Version:\").append(firmwareVersion.getBuild()).append(\".\").append(firmwareVersion.getRelease()).append(java.lang.String)", "java.lang.StringBuffer.append(firmwareVersion.getBuild())", "com.adgsoftware.mydomo.engine.controller.gateway.Version.getBuild()", "com.adgsoftware.mydomo.engine.controller.gateway.Version.getRelease()", "sb.append(\"\\nFirmWare Version:\").append(firmwareVersion.getBuild()).append(\".\").append(firmwareVersion.getRelease())", "sb.append(\"\\nFirmWare Version:\").append(firmwareVersion.getBuild()).append(\".\").append(firmwareVersion.getRelease()).append(\".\").append(firmwareVersion.getVersion())"], "Fixed commit": "e91374d11eb2ef832357ac0552fc014cb4517030", "Url": "https://api.github.com/repos/arnauddegiuli/MyDomo", "Date": "2013-03-07T21:03:34Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i < (victims.length)) { getController().robPlayer(victims[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7373/buggy-version/Catan.java.src.client.map.RobView.java", "BodyUseAPI": ["client.map.IMapController.robPlayer(victims[i])"], "Fixed commit": "71df0c74160cdf71edd636314996c39ccbc18fad", "Url": "https://api.github.com/repos/Chad-Barlow/CS340", "Date": "2014-10-24T23:02:25Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (varName.startsWith(\"$$_bol\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2106/buggy-version/client.src.main.java.org.evosuite.symbolic.solver.z3str2.Z3Str2ResultParser.java", "BodyUseAPI": [], "Fixed commit": "3adff238ffaab3cfd6e8f0ea7c1765b09d943e15", "Url": "https://api.github.com/repos/EvoSuite/evosuite", "Date": "2015-11-09T20:32:58Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (varName.startsWith(\"$$_int_\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2106/buggy-version/client.src.main.java.org.evosuite.symbolic.solver.z3str2.Z3Str2ResultParser.java", "BodyUseAPI": [], "Fixed commit": "3adff238ffaab3cfd6e8f0ea7c1765b09d943e15", "Url": "https://api.github.com/repos/EvoSuite/evosuite", "Date": "2015-11-09T20:32:58Z"},
{"Line": "=>1295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((x.getDataType()) != null) { column.setDataType(x.getDataType().getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3481/buggy-version/src.main.java.com.alibaba.druid.sql.visitor.SchemaStatVisitor.java", "BodyUseAPI": ["x.getDataType().getName()", "com.alibaba.druid.sql.ast.statement.SQLColumnDefinition.getDataType()", "com.alibaba.druid.stat.TableStat.Column.setDataType(x.getDataType().getName())"], "Fixed commit": "f6ce8b65614fa8408a6d3f69b490b8229ae37bb5", "Url": "https://api.github.com/repos/wenshao/druid", "Date": "2016-05-20T19:05:25Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((breakList.size()) > 0) breakList.remove(((breakList.size()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/157/buggy-version/src.main.java.io.bdrc.gittodbs.EtextContents.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.size()", "java.util.List<java.lang.Integer>.remove(int)"], "Fixed commit": "0e1f27e098c1fb4a7a52541d50637ac8752efc2a", "Url": "https://api.github.com/repos/BuddhistDigitalResourceCenter/git-to-dbs", "Date": "2017-10-05T15:13:43Z"},
{"Line": "=>849", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(variable.address.startsWith(\"0xf\"))) global = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5218/buggy-version/Analyzer.java", "BodyUseAPI": [], "Fixed commit": "f5250582593fce843376ee9ccbd66019c536ce40", "Url": "https://api.github.com/repos/JamesWWalker/SecureCvisualJ", "Date": "2017-11-06T14:41:36Z"},
{"Line": "=>648", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dynamicLink.length()) >= 18) { returnAddress = dynamicLink.substring(0, 10); dynamicLink = \"0x\" + (dynamicLink.substring(10, 18)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5218/buggy-version/Analyzer.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)"], "Fixed commit": "f5250582593fce843376ee9ccbd66019c536ce40", "Url": "https://api.github.com/repos/JamesWWalker/SecureCvisualJ", "Date": "2017-11-06T14:41:36Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["legends.model.Entity.getAssignment(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (a == null) return \"\" + (positionProfileId);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8244/buggy-version/src.main.java.legends.model.EntityPositionLink.java", "BodyUseAPI": [], "Fixed commit": "8bf017676dad344f81a5c0f7b7144c3b03f14564", "Url": "https://api.github.com/repos/robertjanetzko/LegendsBrowser", "Date": "2016-01-12T18:18:39Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getenv(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (path != null) { java.lang.String[] segments = path.split(\":\"); for (java.lang.String p : segments) { addPath(p); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8007/buggy-version/src.org.yinwang.pysonar.Indexer.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "faf7e715c6a39b07529754db745d0522f27c6d8b", "Url": "https://api.github.com/repos/yinwang0/pysonar2", "Date": "2013-11-04T04:52:09Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["miniJava.SyntacticAnalyzer.Parser.parseProgram(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((pck.main) == null) { java.lang.System.out.print(\"No main method found\"); java.lang.System.exit(4); }else if ((errs.size()) > 0) { for (miniJava.ContextualAnalyzer.Exceptions.TypeException e : errs) { java.lang.System.out.println(e.getMessage()); } java.lang.System.exit(4); }else { java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1949/buggy-version/src.miniJava.Compiler.java", "BodyUseAPI": [], "Fixed commit": "d18a8c74c8148319fd83b4acdc1b7c42a0bbc522", "Url": "https://api.github.com/repos/JohnEspenhahn/MiniJavaCompiler", "Date": "2017-04-05T16:22:38Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.paypal.core.rest.PayPalResource.configInitialized) { return new com.paypal.core.rest.OAuthTokenCredential(com.paypal.core.rest.PayPalResource.getClientID(), com.paypal.core.rest.PayPalResource.getClientSecret(), com.paypal.core.rest.PayPalResource.configurationMap); }else { return new com.paypal.core.rest.OAuthTokenCredential(com.paypal.core.rest.PayPalResource.getClientID(), com.paypal.core.rest.PayPalResource.getClientSecret()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5554/buggy-version/src.main.java.com.paypal.core.rest.PayPalResource.java", "BodyUseAPI": [], "Fixed commit": "432f907ef140b687749d07f8a26ce865a38724d6", "Url": "https://api.github.com/repos/paypal/sdk-core-java", "Date": "2014-11-28T19:52:42Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lines.size()) != 0) { lines.add(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1352/buggy-version/multicolumn.src.main.java.multicolumn.App.java", "BodyUseAPI": ["java.util.LinkedList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "cc709f4dc8d8bbd0fdf30fb86c92900e5ffc795a", "Url": "https://api.github.com/repos/raeffs/SWE.F13", "Date": "2013-02-24T18:50:53Z"},
{"Line": "=>951", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(org.springframework.util.StringUtils.isEmpty(form.getDescription()))) && ((form.getDescription().length) >= (i + 1))) { description = form.getDescription()[i]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8484/buggy-version/src.main.java.selling.sunshine.controller.AgentController.java", "BodyUseAPI": ["selling.sunshine.controller.OrderItemForm.getDescription()"], "Fixed commit": "1b55d793dcd0902cc9e69459f19f0763d255e8f6", "Url": "https://api.github.com/repos/sunshinezxf/Selling", "Date": "2016-08-03T03:28:50Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((level[i][((centerXList[(a + 1)]) + 2)]) == (nullID)) level[i][((centerXList[(a + 1)]) + 2)] = hallID;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5499/buggy-version/src.base.Map.LevelGenerator.java", "BodyUseAPI": [], "Fixed commit": "090e2a68fd1e826733a9ba0003d88aa6c945b683", "Url": "https://api.github.com/repos/stevenman42/java-class-project", "Date": "2015-05-10T22:37:26Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((level[i][((centerXList[(a + 1)]) - 2)]) == (nullID)) level[i][((centerXList[(a + 1)]) - 2)] = hallID;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5499/buggy-version/src.base.Map.LevelGenerator.java", "BodyUseAPI": [], "Fixed commit": "090e2a68fd1e826733a9ba0003d88aa6c945b683", "Url": "https://api.github.com/repos/stevenman42/java-class-project", "Date": "2015-05-10T22:37:26Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (c < 0) c = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7450/buggy-version/MapDataDrawer.java", "BodyUseAPI": [], "Fixed commit": "d36322f0791425a17dd0ee31ae0af9f230c85425", "Url": "https://api.github.com/repos/pheerathat/mountainpaths", "Date": "2017-05-02T09:22:33Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bazaarvoice.emodb.table.db.TableDAO.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((table.getAvailability()) == null) { throw new com.bazaarvoice.emodb.sor.api.UnknownPlacementException(\"Table unavailable locally and has no local facade\", table.getOptions().getPlacement(), tableName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/311/buggy-version/sor.src.main.java.com.bazaarvoice.emodb.sor.core.DefaultDataStore.java", "BodyUseAPI": ["com.bazaarvoice.emodb.table.db.Table.getOptions()", "table.getOptions().getPlacement()"], "Fixed commit": "a3732c68ec8d752b109b0a50d668c8d07bc1dca7", "Url": "https://api.github.com/repos/bazaarvoice/emodb", "Date": "2017-05-15T16:37:50Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["view.UIGenerateMaze.parseInteger(java.lang.String)", "view.UIGenerateMaze.parseInteger(java.lang.String)", "javax.swing.JSpinner.getValue()", "javax.swing.JSpinner.getValue()", "view.UIGenerateMaze.parseInteger(java.lang.String)", "view.UIGenerateMaze.parseInteger(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((((((((startX >= 0) && (startX < width)) && (startY >= 0)) && (startY < length)) && (endX >= 0)) && (endX < width)) && (endY >= 0)) && (endY < length)) { mm.generateMazeWithStartEnd(name, length, width, startX, startY, endX, endY, creator); this.redirect(); }else { javax.swing.JOptionPane.showMessageDialog(null, \"Coordinates fields are incorrect !\", \"Failure\", javax.swing.JOptionPane.ERROR_MESSAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5216/buggy-version/src.view.UIGenerateMaze.java", "BodyUseAPI": ["model.MazeManager.generateMazeWithStartEnd(java.lang.String,int,int,int,int,int,int,model.business.Person)"], "Fixed commit": "0020c35721bb3252c6d65725d89a0e968e5c0e24", "Url": "https://api.github.com/repos/ben-tei/Polymaze", "Date": "2016-11-04T11:15:35Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.net.wifi.WifiInfo.getSSID()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (wirelessNetworkName != null) { wirelessNetworkName = wirelessNetworkName.replaceAll(\"\\\"\", \"\"); if ((wirelessNetworkName.contentEquals(\"GrinnellCollegeStudent\")) || (wirelessNetworkName.contentEquals(\"GrinnellCollegeWireless\"))) { edu.grinnell.appdev.grinnelldirectory.SearchFormActivity.inGrinnell = true; }else { edu.grinnell.appdev.grinnelldirectory.SearchFormActivity.inGrinnell = false; } }else { edu.grinnell.appdev.grinnelldirectory.SearchFormActivity.inGrinnell = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7350/buggy-version/GrinnellDirectory.src.edu.grinnell.appdev.grinnelldirectory.SearchFormActivity.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "f1567e572104688d21dd11d68a3aec69a6a42cbc", "Url": "https://api.github.com/repos/GrinnellAppDev/Grinnell-DB-Android", "Date": "2014-03-06T03:39:37Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(this.optional.isPresent())) { notPresent.run(); }else { present.accept(this.optional.get()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6720/buggy-version/org.iobserve.analysis.src.main.java.org.iobserve.analysis.utils.Opt.java", "BodyUseAPI": [], "Fixed commit": "a0508c1087f8d3ea15e32f43c09ed01733d5153f", "Url": "https://api.github.com/repos/research-iobserve/iobserve-analysis", "Date": "2016-11-07T09:26:16Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (this.optional.isPresent()) { present.accept(this.optional.get()); }else { notPresent.run(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6720/buggy-version/org.iobserve.analysis.src.main.java.org.iobserve.analysis.utils.Opt.java", "BodyUseAPI": [], "Fixed commit": "a0508c1087f8d3ea15e32f43c09ed01733d5153f", "Url": "https://api.github.com/repos/research-iobserve/iobserve-analysis", "Date": "2016-11-07T09:26:16Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(newProps.containsKey(MetaStb.CATSSERVERHOST))) { newProps.put(MetaStb.CATSSERVERHOST, match.get(MetaStb.CATSSERVERHOST)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8755/buggy-version/libraries.dawg-house.src.main.java.com.comcast.video.dawg.controller.house.HouseRestController.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(MetaStb.CATSSERVERHOST,java.lang.Object)"], "Fixed commit": "567f8d71bf19bad162e182a0825970ba9d204ee9", "Url": "https://api.github.com/repos/dimaj/dawg", "Date": "2016-09-20T03:30:16Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["responseData.getFreeMediation().isPresent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isFreeMediationApplicable) { isFreeMediationRequested = responseData.getFreeMediation().get().equals(ResponseData.FreeMediationOption.YES); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3235/buggy-version/src.main.java.uk.gov.hmcts.cmc.claimstore.services.notifications.DefendantResponseNotificationService.java", "BodyUseAPI": [], "Fixed commit": "f82573acb533b4647f9171fa16e8b28daa39769f", "Url": "https://api.github.com/repos/hmcts/cmc-claim-store", "Date": "2017-11-14T16:19:03Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null == (cachedTemplates.get(filePath))) { java.io.InputStream inputStream = context.getResourceAsStream(filePath); final java.lang.String string = io.betterlife.framework.util.IOUtil.getInstance().inputStreamToString(inputStream); cachedTemplates.put(filePath, string); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8384/buggy-version/work.src.io.betterlife.framework.util.TemplateUtils.java", "BodyUseAPI": ["javax.servlet.ServletContext.getResourceAsStream(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "4618f9ce3f80d36546bc1b2d0e5fe4589f0f17ba", "Url": "https://api.github.com/repos/betterlife/erp", "Date": "2015-02-28T16:18:54Z"},
{"Line": "=>2030", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getRGBChannelCount()) == 1) || ((getRGBChannelCount()) == (getSizeC()))) { if (((getSizeC()) > 1) && ((getSizeT()) > 1)) { ms.dimensionOrder += \"C\"; } for (java.lang.Long nBytes : bytes) { java.lang.String axis = bytesPerAxis.get(nBytes); if ((ms.dimensionOrder.indexOf(axis)) == (-1)) { ms.dimensionOrder += axis; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8922/buggy-version/components.formats-gpl.src.loci.formats.in.LIFReader.java", "BodyUseAPI": [], "Fixed commit": "9253cdf7199e6820a4ba78b290c8292a739029c7", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-04-08T03:01:10Z"},
{"Line": "=>768", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotBlank(renameManifestPackage)) { commands.add(\"--rename-manifest-package\"); commands.add(renameManifestPackage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6209/buggy-version/src.main.java.com.jayway.maven.plugins.android.phase09package.ApkMojo.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "489ed94d24a7c1d0ffe4f885786853be46e9e793", "Url": "https://api.github.com/repos/simpligility/android-maven-plugin", "Date": "2011-05-05T20:55:47Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (flashlistRow.has(\"SLinkCRCError\")) { this.numSCRCerrors = flashlistRow.get(\"SLinkCRCError\").asInt(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4992/buggy-version/src.main.java.rcms.utilities.daqaggregator.data.FED.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)", "flashlistRow.get(\"SLinkCRCError\").asInt()"], "Fixed commit": "dba7e9d55d8d379dd37ae714518989ce47612196", "Url": "https://api.github.com/repos/cmsdaq/DAQAggregator", "Date": "2017-07-05T09:31:56Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (errorMessage == null) { episdoeUrlView.setText(url); episdoeUrlView.setTextColor(android.support.v4.content.ContextCompat.getColor(com.einmalfel.podlisten.EpisodeViewHolder.context, (playerState.isStopped() ? R.color.text : R.color.text_bright))); }else { episdoeUrlView.setTextColor(android.support.v4.content.ContextCompat.getColor(com.einmalfel.podlisten.EpisodeViewHolder.context, R.color.accent_secondary)); episdoeUrlView.setText(errorMessage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/963/buggy-version/app.src.main.java.com.einmalfel.podlisten.EpisodeViewHolder.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "e8a92d46f9d4234eb456c296cb3df888e37c3f2b", "Url": "https://api.github.com/repos/einmalfel/PodListen", "Date": "2015-11-17T17:33:36Z"},
{"Line": "=>1207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (unreadGroupCount.equals(\"0\")) { unreadGroupTextView.setVisibility(View.GONE); }else { unreadGroupTextView.setText(unreadGroupCount); unreadGroupTextView.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6183/buggy-version/app.src.main.java.com.zulip.android.activities.ZulipActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "babebff16d324a68fc29067ecd4a73a3d5d32cd8", "Url": "https://api.github.com/repos/Sam1301/zulip-android", "Date": "2017-01-15T17:54:53Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset < 0) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1529/buggy-version/src.org.exist.dom.persistent.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "a9616ebf9e3422cadb9fbb84ebda36e58835ebd7", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:14:11Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset < 0) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1529/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "a9616ebf9e3422cadb9fbb84ebda36e58835ebd7", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:14:11Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.validation.Validator.validate(library.Book)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((errors.size()) > 0) { throw new javax.validation.ConstraintViolationException(errors); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1782/buggy-version/books-library.src.main.java.library.BooksResource.java", "BodyUseAPI": [], "Fixed commit": "9d42bb148d7e9618f37225d51339c84ebdcf22c0", "Url": "https://api.github.com/repos/bagabont/WebScience", "Date": "2015-01-17T19:42:46Z"},
{"Line": "=>560", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.thommil.libgdx.runtime.actor.graphics.ImageAnimation.getKeyFrame(float)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((keyFrame.width) + (keyFrame.height)) > 0) { this.setScale(((keyFrame.width) > 0 ? (keyFrame.width) / (this.width) : 1.0F), ((keyFrame.height) > 0 ? (keyFrame.height) / (this.height) : 1.0F)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7760/buggy-version/core.src.com.thommil.libgdx.runtime.actor.graphics.SpriteActor.java", "BodyUseAPI": ["com.thommil.libgdx.runtime.actor.graphics.SpriteActor.setScale(((keyFrame.width) > 0 ? (keyFrame.width) / (this.width) : 1.0F),((keyFrame.height) > 0 ? (keyFrame.height) / (this.height) : 1.0F))"], "Fixed commit": "7635e718adc561352bac6c9c200e68a2c9fbca81", "Url": "https://api.github.com/repos/Thommil/GameRuntime", "Date": "2016-04-22T22:24:43Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cytoscape.filter.internal.view.FilterWorker.getFilter()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (filter instanceof org.cytoscape.filter.model.CompositeFilter) { org.cytoscape.filter.model.CompositeFilter<org.cytoscape.model.CyNetwork, org.cytoscape.model.CyIdentifiable> composite = ((org.cytoscape.filter.model.CompositeFilter<org.cytoscape.model.CyNetwork, org.cytoscape.model.CyIdentifiable>) (filter)); if ((composite.getLength()) == 0) { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/276/buggy-version/filter2-impl.src.main.java.org.cytoscape.filter.internal.view.FilterWorker.java", "BodyUseAPI": [], "Fixed commit": "6e1e8d85d3811bbf967b25e217d441ad77f080ec", "Url": "https://api.github.com/repos/cytoscape/cytoscape-impl", "Date": "2013-12-04T15:27:51Z"},
{"Line": "=>605", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (state.equals(\"free\")) { this.vehicleId = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3007/buggy-version/src.main.java.nl.tue.iot.ParkingSpot.java", "BodyUseAPI": [], "Fixed commit": "03fb28dfa2b82f14d13dea530e494ebf0fb1da63", "Url": "https://api.github.com/repos/rparrapy/parking-spot", "Date": "2016-01-13T01:05:05Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Paths.get(java.lang.String)", "java.nio.file.Paths.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((link.endsWith(\".\")) || (link.endsWith(\"..\"))) && (link.normalize().equals(target.normalize()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5077/buggy-version/vax_interpreter.Kernel.java", "BodyUseAPI": [], "Fixed commit": "632f00c7f0a6abac512f0aa0e33ef855bbbd0f89", "Url": "https://api.github.com/repos/kusabanachi/VaxInterpreter", "Date": "2016-02-06T05:31:08Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (line == null) { if ((id != null) && ((sb.length()) != 0)) { agis.ps.link.Contig cnt = new agis.ps.link.Contig(sb.toString()); cnt.setID(id); cnts.put(id, cnt); cnt = null; } sb = null; temp = null; id = null; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4164/buggy-version/src.agis.ps.util.ContigReader.java", "BodyUseAPI": [], "Fixed commit": "788e9f8a0cc920e2c5bcedac0f120753c61faadc", "Url": "https://api.github.com/repos/shingocat/lrscaf", "Date": "2016-04-23T01:29:22Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (script.startsWith(\"eval('\")) { script = script.replaceAll(\"eval\\\\(\\'\", \"'\").replaceAll(\"\\'\\\\)\", \"'\"); return eval(((context.evaluateString(currentScope, script, script, 1, null)) + \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/944/buggy-version/VxmlInterpreter.src.cudl.script.Scripting.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "614a6b67b0a035dbfdeb64f345a9fba4eff1ff8e", "Url": "https://api.github.com/repos/multimediabs/cudl", "Date": "2013-04-05T12:45:03Z"},
{"Line": "=>429", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((totalScore) < 10) { displayTotalScore.setText((\"Score\\n \" + (totalScore))); }else if ((totalScore) < 100) { displayTotalScore.setText((\"Score\\n \" + (totalScore))); }else if ((totalScore) < 1000) { displayTotalScore.setText((\"Score\\n \" + (totalScore))); }else { displayTotalScore.setText((\"Score\\n\" + (totalScore))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6262/buggy-version/app.src.main.java.add.on.dave.sumrun.MainActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)", "android.widget.TextView.setText(java.lang.String)", "android.widget.TextView.setText(java.lang.String)", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "d6dfab34d363729835e8919c81515ea56b986ac1", "Url": "https://api.github.com/repos/DaveDe/SumRun", "Date": "2015-12-11T00:53:31Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ofbiz.entity.util.EntityUtil.getFirst(delegator.findByAnd(\"DimensionDistances\", org.ofbiz.base.util.UtilMisc.toMap(\"dimensionPrimary\", dimensionPrimary, \"dimensionSecondary\", dimensionSecondary)))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((dimensionDistances != null) || (!(dimensionDistances.isEmpty()))) { returnValue = dimensionDistances.getBigDecimal(\"distances\"); }else { org.ofbiz.base.util.Debug.log((((\"getDimensionDistances Error ---\" + dimensionPrimary) + \"***\") + dimensionSecondary)); throw new org.ofbiz.entity.GenericEntityException((((\"getDimensionDistances Error ---\" + dimensionPrimary) + \"***\") + dimensionSecondary)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8178/buggy-version/hot-deploy.zuczugetl.src.com.zuczug.analysis.AnalysisProductDistancesService.java", "BodyUseAPI": ["org.ofbiz.entity.GenericValue.getBigDecimal(java.lang.String)"], "Fixed commit": "c6c435830d72b5ccbe8a527501a6694236273b39", "Url": "https://api.github.com/repos/zuczug/bluemountain", "Date": "2016-08-11T08:26:16Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dayA.isChecked()) { myCal.add(java.util.Calendar.DATE, 1); currentDate.setText(df.format(myCal.getTime())); displayAppointmentForDate(currentDate.getText().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1539/buggy-version/app.src.main.java.com.example.prashant.dentist.viewAppiontmentPage.java", "BodyUseAPI": [], "Fixed commit": "cd8437801727a2af6c6106ef4aba5cb0c79d8cdc", "Url": "https://api.github.com/repos/prashantalhat1406/Dentist", "Date": "2015-06-09T08:27:15Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JList.getSelectedValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(copyModel.contains(selected))) { copyModel.addElement(selected); model.removeElement(selected); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2861/buggy-version/VIPCheck.src.com.yaz.vip.volunteer.AttributeTab.java", "BodyUseAPI": ["javax.swing.DefaultListModel.removeElement(java.lang.Object)", "javax.swing.DefaultListModel.addElement(java.lang.Object)"], "Fixed commit": "025f97460b1ff02481afcf262cbe5b686546676d", "Url": "https://api.github.com/repos/lalkishor/VIP", "Date": "2016-07-28T17:28:48Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JList.getSelectedValues()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(copyModel.contains(from[i]))) { copyModel.addElement(from[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2861/buggy-version/VIPCheck.src.com.yaz.vip.volunteer.AttributeTab.java", "BodyUseAPI": ["javax.swing.DefaultListModel.addElement(java.lang.Object)"], "Fixed commit": "025f97460b1ff02481afcf262cbe5b686546676d", "Url": "https://api.github.com/repos/lalkishor/VIP", "Date": "2016-07-28T17:28:48Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<net.minecraft.util.ChunkCoordinates, java.util.concurrent.atomic.AtomicInteger>.get(net.minecraft.util.ChunkCoordinates)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (count == null) count = new java.util.concurrent.atomic.AtomicInteger(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3406/buggy-version/src.main.java.com.creativemd.littletiles.client.render.RenderingThread.java", "BodyUseAPI": [], "Fixed commit": "38608d5c4bd50d74ad6cb1f1ea1e1251cdfaf864", "Url": "https://api.github.com/repos/CreativeMD/LittleTiles", "Date": "2016-02-27T14:04:20Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((student) != null) { android.content.Intent intent = new android.content.Intent(this, org.ema.activities.operations.StatsActivity.class); intent.putExtra(\"studentId\", student.getId()); startActivity(intent); }else { android.app.FragmentManager fm = getFragmentManager(); org.ema.dialogs.NoStatsYetDialog noStatsYetDialog = new org.ema.dialogs.NoStatsYetDialog(); noStatsYetDialog.show(fm, \"no stats\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5084/buggy-version/app.src.main.java.org.ema.activities.operations.DataAnalysisActivity.java", "BodyUseAPI": [], "Fixed commit": "491a657f9f3df987c3a63beabafb4976d30e984b", "Url": "https://api.github.com/repos/samuelyuri/E-MobileActivities", "Date": "2017-08-13T21:06:58Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (readOnly) { editText.setTag(com.manuelpeinado.addressfragment.Utils.RANDOM_TAG_KEY, editText.getKeyListener()); editText.setKeyListener(null); }else { editText.setKeyListener(((android.text.method.KeyListener) (tag))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7089/buggy-version/library.src.com.manuelpeinado.addressfragment.Utils.java", "BodyUseAPI": [], "Fixed commit": "c18d861b36e56047fa089d8fe22bc89284759e53", "Url": "https://api.github.com/repos/ManuelPeinado/AddressFragment", "Date": "2013-05-10T06:02:49Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((count % 100) == 0) { java.lang.System.out.println((count + \"tags passed\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/982/buggy-version/src.main.java.edu.virginia.cs.solr.repository.TagRepositoryImpl.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "116ecd5baef27d7e89cee0efdc4e48c56b6e0fe4", "Url": "https://api.github.com/repos/MinghuaJiang/hierarchial-search-recommendation", "Date": "2017-05-06T01:55:14Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(amountSplit[0].equals(\"\"))) && (!(amountSplit[0].equals(\"-\")))) { dollarAmount = (java.lang.Integer.parseInt(amountSplit[0])) * 100; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4729/buggy-version/app.src.main.java.katrinahoffert.simplebudget.AddToBudgetActivity.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "dcf446f9bb9f68faa62709c8f149cfc8c02fce54", "Url": "https://api.github.com/repos/KatrinaHoffert/SimpleBudget", "Date": "2017-02-13T03:46:48Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isStartTimeFound) && (isEndTimeFound)) { if ((java.lang.Integer.parseInt(endTime)) < (java.lang.Integer.parseInt(startTime))) { startDate = parser.InputParser.getModifiedDate(0); endDate = parser.InputParser.getModifiedDate(1); }else { deadLine = parser.InputParser.getModifiedDate(0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2242/buggy-version/src.parser.InputParser.java", "BodyUseAPI": [], "Fixed commit": "c30f3397602c29d508fa22934bdfebbedfc7c987", "Url": "https://api.github.com/repos/cs2103aug2014-t11-1j/main", "Date": "2014-10-17T04:43:51Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"equals\".equals(method.getName())) { return args[0].equals(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8939/buggy-version/src.com.mysql.jdbc.jdbc2.optional.WrapperBase.java", "BodyUseAPI": [], "Fixed commit": "bacf5a153c749fe666163593a83fb25e261e1e2b", "Url": "https://api.github.com/repos/mysql/mysql-connector-j", "Date": "2017-07-04T02:31:15Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mysql.jdbc.MultiHostConnectionProxy.METHOD_EQUALS.equals(method.getName())) { return args[0].equals(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8939/buggy-version/src.com.mysql.jdbc.MultiHostConnectionProxy.java", "BodyUseAPI": [], "Fixed commit": "bacf5a153c749fe666163593a83fb25e261e1e2b", "Url": "https://api.github.com/repos/mysql/mysql-connector-j", "Date": "2017-07-04T02:31:15Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"equals\".equals(method.getName())) { return args[0].equals(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8939/buggy-version/src.com.mysql.jdbc.interceptors.ResultSetScannerInterceptor.java", "BodyUseAPI": [], "Fixed commit": "bacf5a153c749fe666163593a83fb25e261e1e2b", "Url": "https://api.github.com/repos/mysql/mysql-connector-j", "Date": "2017-07-04T02:31:15Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cc == 'x') { nc2 = '0'; (targets)--; }else { nc2 = 'o'; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4274/buggy-version/src.su.drsouko.SokoGameState.java", "BodyUseAPI": [], "Fixed commit": "19a3e089b3323b25e2229b741c7330ef60bfa070", "Url": "https://api.github.com/repos/tomari/Sokoban", "Date": "2014-02-22T04:34:38Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sksamuel.jqm4gwt.JQMContext.getWidgetDefaults()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (dflt != null) dflt.loaded(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4804/buggy-version/library.src.main.java.com.sksamuel.jqm4gwt.table.JQMTableGrid.java", "BodyUseAPI": ["com.sksamuel.jqm4gwt.JQMContext.WidgetDefaults.loaded(com.sksamuel.jqm4gwt.table.JQMTableGrid)"], "Fixed commit": "b5fa22d720440d5620ae4e5997df30f7a69fb5d5", "Url": "https://api.github.com/repos/jqm4gwt/jqm4gwt", "Date": "2016-02-24T01:59:31Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isNew)) { currentForm.setValue(initialValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6032/buggy-version/content.src.org.riotfamily.pages.riot.form.PagePropertiesEditor.java", "BodyUseAPI": [], "Fixed commit": "9c86937ce4c6f1004f78b810dd536debba2beb2a", "Url": "https://api.github.com/repos/cwoelk/riot", "Date": "2011-04-14T15:21:46Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stack.peek()) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/456/buggy-version/src.programming.datastructure.BalancedBrackets.java", "BodyUseAPI": [], "Fixed commit": "d0e7e85a945345648f450f0098add179671a879b", "Url": "https://api.github.com/repos/superm1a3/JavaExamples", "Date": "2016-12-06T22:29:47Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((brackets.length()) % 2) != 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/456/buggy-version/src.programming.datastructure.BalancedBrackets.java", "BodyUseAPI": [], "Fixed commit": "d0e7e85a945345648f450f0098add179671a879b", "Url": "https://api.github.com/repos/superm1a3/JavaExamples", "Date": "2016-12-06T22:29:47Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["iniconfigurationmanager.schema.SectionSchema.getOption(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(optionSchema.hasDefaultValue())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/9047/buggy-version/src.iniconfigurationmanager.schema.OptionData.java", "BodyUseAPI": [], "Fixed commit": "2d353df644390b8741a341d67ef59181f721517a", "Url": "https://api.github.com/repos/choko/IniConfigurationManager", "Date": "2011-05-08T11:20:10Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["game.getPlayer(0).getX()", "game.getPlayer(0).getY()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!((game.getBoard().getTile(playerZeroX, playerZeroY)) instanceof se.chalmers.group11.core.FireTile)) { sprite1.drawAnimation((playerZeroX * 60), (playerZeroY * 60), 60, 60); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4493/buggy-version/src.se.chalmers.group11.BombSquadGUI.GamePlayState.java", "BodyUseAPI": ["se.chalmers.group11.utils.SpriteSheets.drawAnimation(int,int,int,int)"], "Fixed commit": "2bc3b18e79d1a57f7dad896cb34726690745b211", "Url": "https://api.github.com/repos/epoxy/BombSquad", "Date": "2012-05-07T08:34:28Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["game.getPlayer(1).getX()", "game.getPlayer(1).getY()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!((game.getBoard().getTile(playerOneX, playerOneY)) instanceof se.chalmers.group11.core.FireTile)) { sprite2.drawAnimation((playerOneX * 60), (playerOneY * 60), 60, 60); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4493/buggy-version/src.se.chalmers.group11.BombSquadGUI.GamePlayState.java", "BodyUseAPI": ["se.chalmers.group11.utils.SpriteSheets.drawAnimation(int,int,int,int)"], "Fixed commit": "2bc3b18e79d1a57f7dad896cb34726690745b211", "Url": "https://api.github.com/repos/epoxy/BombSquad", "Date": "2012-05-07T08:34:28Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(plugin.aiSpawns.isNPCCarsEnabled())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4969/buggy-version/src.main.java.net.stormdev.ucars.trade.AIVehicles.spawning.AbstractAISpawnManager.java", "BodyUseAPI": [], "Fixed commit": "1126c90bbf35741cc9f9915a3dc37301d445376c", "Url": "https://api.github.com/repos/storm345dev/uCarsTrade", "Date": "2015-06-16T20:27:24Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.kronos.mclib.auth.yggdrasil.AuthYggdrasil.authenticate(YggdrasilAgent.AGENT_MINECRAFT,java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (rep == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1201/buggy-version/src.main.java.fr.theshark34.openlauncherlib.Authenticator.java", "BodyUseAPI": [], "Fixed commit": "96138228d664d6791f4ce99a55ad812f9fdfe14e", "Url": "https://api.github.com/repos/Litarvan/OpenLauncherLib", "Date": "2015-04-14T11:02:40Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.kronos.mclib.auth.yggdrasil.AuthYggdrasil.authenticate(YggdrasilAgent.AGENT_MINECRAFT,java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((rep.getAccessToken()) == null) return rep;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1201/buggy-version/src.main.java.fr.theshark34.openlauncherlib.Authenticator.java", "BodyUseAPI": [], "Fixed commit": "96138228d664d6791f4ce99a55ad812f9fdfe14e", "Url": "https://api.github.com/repos/Litarvan/OpenLauncherLib", "Date": "2015-04-14T11:02:40Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((values.size()) > 0) { met.setMin(values.get(0)); }else { met.setMin(defValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6690/buggy-version/src.org.pikater.core.agents.system.metadata.MetadataReader.java", "BodyUseAPI": ["java.util.List<java.lang.Double>.get(int)", "org.pikater.core.agents.system.metadata.NumericalAttributeMetadata.setMin(java.lang.Double)"], "Fixed commit": "34baef2b8526ed1b2e172ad77c4c1d0d761b52da", "Url": "https://api.github.com/repos/krajj7/pikater", "Date": "2014-09-04T18:23:00Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((values.size()) > 0) { met.setMedian(values.get(half)); }else { met.setMedian(defValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6690/buggy-version/src.org.pikater.core.agents.system.metadata.MetadataReader.java", "BodyUseAPI": ["java.util.List<java.lang.Double>.get(int)", "org.pikater.core.agents.system.metadata.NumericalAttributeMetadata.setMedian(java.lang.Double)"], "Fixed commit": "34baef2b8526ed1b2e172ad77c4c1d0d761b52da", "Url": "https://api.github.com/repos/krajj7/pikater", "Date": "2014-09-04T18:23:00Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((values.size()) > 0) { met.setMax(values.get(((values.size()) - 1))); }else { met.setMax(defValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6690/buggy-version/src.org.pikater.core.agents.system.metadata.MetadataReader.java", "BodyUseAPI": ["java.util.List<java.lang.Double>.get(int)", "java.util.List<java.lang.Double>.size()", "org.pikater.core.agents.system.metadata.NumericalAttributeMetadata.setMax(java.lang.Double)"], "Fixed commit": "34baef2b8526ed1b2e172ad77c4c1d0d761b52da", "Url": "https://api.github.com/repos/krajj7/pikater", "Date": "2014-09-04T18:23:00Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (line.startsWith(I18n.DATFILE_InlinePrefix)) { result.add(new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GData0(line))); result.add(new org.nschmidt.ldparteditor.data.ParsingResult(org.nschmidt.ldparteditor.i18n.I18n.DATPARSER_InliningRelict, (\"[W01] \" + (org.nschmidt.ldparteditor.i18n.I18n.DATPARSER_Warning)), org.nschmidt.ldparteditor.data.ResultType.WARN)); }else if (line.startsWith(\"0 !: \")) { org.nschmidt.ldparteditor.data.GData newLPEmetaTag = org.nschmidt.ldparteditor.text.TexMapParser.parseGeometry(line, depth, r, g, b, a, parent, productMatrix, alreadyParsed, datFile); if (newLPEmetaTag == null) { newLPEmetaTag = new org.nschmidt.ldparteditor.data.GData0(line); result.add(new org.nschmidt.ldparteditor.data.ParsingResult(newLPEmetaTag)); result.add(new org.nschmidt.ldparteditor.data.ParsingResult(org.nschmidt.ldparteditor.i18n.I18n.DATPARSER_InvalidTEXMAP, (\"[E99] \" + (org.nschmidt.ldparteditor.i18n.I18n.DATPARSER_SyntaxError)), org.nschmidt.ldparteditor.data.ResultType.ERROR)); }else { result.add(new org.nschmidt.ldparteditor.data.ParsingResult(newLPEmetaTag)); } }else if (line.startsWith(\"0 !TEXMAP \")) { org.nschmidt.ldparteditor.data.GData newLPEmetaTag = org.nschmidt.ldparteditor.text.TexMapParser.parseTEXMAP(data_segments, line, parent, datFile); if (newLPEmetaTag == null) { newLPEmetaTag = new org.nschmidt.ldparteditor.data.GData0(line); result.add(new org.nschmidt.ldparteditor.data.ParsingResult(newLPEmetaTag)); result.add(new org.nschmidt.ldparteditor.data.ParsingResult(org.nschmidt.ldparteditor.i18n.I18n.DATPARSER_InvalidTEXMAP, (\"[E99] \" + (org.nschmidt.ldparteditor.i18n.I18n.DATPARSER_SyntaxError)), org.nschmidt.ldparteditor.data.ResultType.ERROR)); }else { result.add(new org.nschmidt.ldparteditor.data.ParsingResult(newLPEmetaTag)); } }else if (line.startsWith(\"0 !LPE\")) { org.nschmidt.ldparteditor.data.GData0 newLPEmetaTag = new org.nschmidt.ldparteditor.data.GData0(line); result.add(new org.nschmidt.ldparteditor.data.ParsingResult(newLPEmetaTag)); result.add(new org.nschmidt.ldparteditor.data.ParsingResult(org.nschmidt.ldparteditor.i18n.I18n.DATPARSER_UnofficialMetaCommand, (\"[W0D] \" + (org.nschmidt.ldparteditor.i18n.I18n.DATPARSER_Warning)), org.nschmidt.ldparteditor.data.ResultType.WARN)); if (line.startsWith(\"TODO \", 7)) { result.add(new org.nschmidt.ldparteditor.data.ParsingResult(line.substring(12), (\"[WFF] \" + (org.nschmidt.ldparteditor.i18n.I18n.DATPARSER_TODO)), org.nschmidt.ldparteditor.data.ResultType.WARN)); }else if (line.startsWith(\"VERTEX \", 7)) { java.lang.Object[] messageArguments = new java.lang.Object[]{ line.substring(14) }; java.text.MessageFormat formatter = new java.text.MessageFormat(\"\"); formatter.setLocale(MyLanguage.LOCALE); formatter.applyPattern(I18n.DATPARSER_VertexAt); result.add(new org.nschmidt.ldparteditor.data.ParsingResult(formatter.format(messageArguments), (\"[WFE] \" + (org.nschmidt.ldparteditor.i18n.I18n.DATPARSER_VertexDeclaration)), org.nschmidt.ldparteditor.data.ResultType.WARN)); boolean numberError = false; if ((data_segments.length) == 6) { try { org.nschmidt.ldparteditor.text.DatParser.start.setX(new java.math.BigDecimal(data_segments[3], org.nschmidt.ldparteditor.enums.Threshold.mc)); org.nschmidt.ldparteditor.text.DatParser.start.setY(new java.math.BigDecimal(data_segments[4], org.nschmidt.ldparteditor.enums.Threshold.mc)); org.nschmidt.ldparteditor.text.DatParser.start.setZ(new java.math.BigDecimal(data_segments[5], org.nschmidt.ldparteditor.enums.Threshold.mc)); } catch (java.lang.NumberFormatException nfe) { numberError = true; } }else { numberError = true; } if (numberError) { result.add(new org.nschmidt.ldparteditor.data.ParsingResult(org.nschmidt.ldparteditor.i18n.I18n.DATPARSER_InvalidNumberFormat, (\"[E99] \" + (org.nschmidt.ldparteditor.i18n.I18n.DATPARSER_SyntaxError)), org.nschmidt.ldparteditor.data.ResultType.ERROR)); }else if (!errorCheckOnly) { if (depth == 0) { datFile.getVertexManager().addVertex(new org.nschmidt.ldparteditor.data.Vertex(org.nschmidt.ldparteditor.text.DatParser.start.X, org.nschmidt.ldparteditor.text.DatParser.start.Y, org.nschmidt.ldparteditor.text.DatParser.start.Z), newLPEmetaTag); }else { org.lwjgl.util.vector.Vector4f vert = new org.lwjgl.util.vector.Vector4f(((org.nschmidt.ldparteditor.text.DatParser.start.getXf()) * 1000.0F), ((org.nschmidt.ldparteditor.text.DatParser.start.getYf()) * 1000.0F), ((org.nschmidt.ldparteditor.text.DatParser.start.getZf()) * 1000.0F), 1.0F); org.lwjgl.util.vector.Matrix4f.transform(productMatrix, vert, vert); datFile.getVertexManager().addSubfileVertex(new org.nschmidt.ldparteditor.data.Vertex(vert), newLPEmetaTag, parent); } } }else if (line.startsWith(\"DISTANCE \", 7)) { boolean numberError = false; final org.nschmidt.ldparteditor.data.GColour colour; if ((data_segments.length) == 10) { colour = org.nschmidt.ldparteditor.text.DatParser.validateColour(data_segments[3], r, g, b, a); if (colour == null) { result.add(new org.nschmidt.ldparteditor.data.ParsingResult(org.nschmidt.ldparteditor.i18n.I18n.DATPARSER_InvalidColour, (\"[E99] \" + (org.nschmidt.ldparteditor.i18n.I18n.DATPARSER_SyntaxError)), org.nschmidt.ldparteditor.data.ResultType.ERROR)); return result; } try { org.nschmidt.ldparteditor.text.DatParser.start.setX(new java.math.BigDecimal(data_segments[4], org.nschmidt.ldparteditor.enums.Threshold.mc)); org.nschmidt.ldparteditor.text.DatParser.start.setY(new java.math.BigDecimal(data_segments[5], org.nschmidt.ldparteditor.enums.Threshold.mc)); org.nschmidt.ldparteditor.text.DatParser.start.setZ(new java.math.BigDecimal(data_segments[6], org.nschmidt.ldparteditor.enums.Threshold.mc)); org.nschmidt.ldparteditor.text.DatParser.end.setX(new java.math.BigDecimal(data_segments[7], org.nschmidt.ldparteditor.enums.Threshold.mc)); org.nschmidt.ldparteditor.text.DatParser.end.setY(new java.math.BigDecimal(data_segments[8], org.nschmidt.ldparteditor.enums.Threshold.mc)); org.nschmidt.ldparteditor.text.DatParser.end.setZ(new java.math.BigDecimal(data_segments[9], org.nschmidt.ldparteditor.enums.Threshold.mc)); } catch (java.lang.NumberFormatException nfe) { numberError = true; } }else { numberError = true; colour = null; } if (numberError) { result.add(new org.nschmidt.ldparteditor.data.ParsingResult(org.nschmidt.ldparteditor.i18n.I18n.DATPARSER_InvalidNumberFormat, (\"[E99] \" + (org.nschmidt.ldparteditor.i18n.I18n.DATPARSER_SyntaxError)), org.nschmidt.ldparteditor.data.ResultType.ERROR)); }else if (!errorCheckOnly) { if (depth == 0) { result.remove(0); result.add(0, new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GData2(colour.getColourNumber(), colour.getR(), colour.getG(), colour.getB(), colour.getA(), org.nschmidt.ldparteditor.text.DatParser.start.X, org.nschmidt.ldparteditor.text.DatParser.start.Y, org.nschmidt.ldparteditor.text.DatParser.start.Z, org.nschmidt.ldparteditor.text.DatParser.end.X, org.nschmidt.ldparteditor.text.DatParser.end.Y, org.nschmidt.ldparteditor.text.DatParser.end.Z, parent, datFile, false))); } } }else if (line.startsWith(\"PROTRACTOR \", 7)) { boolean numberError = false; final org.nschmidt.ldparteditor.data.GColour colour; if ((data_segments.length) == 13) { colour = org.nschmidt.ldparteditor.text.DatParser.validateColour(data_segments[3], r, g, b, a); if (colour == null) { result.add(new org.nschmidt.ldparteditor.data.ParsingResult(org.nschmidt.ldparteditor.i18n.I18n.DATPARSER_InvalidColour, (\"[E99] \" + (org.nschmidt.ldparteditor.i18n.I18n.DATPARSER_SyntaxError)), org.nschmidt.ldparteditor.data.ResultType.ERROR)); return result; } try { org.nschmidt.ldparteditor.text.DatParser.vertexA.setX(new java.math.BigDecimal(data_segments[4], org.nschmidt.ldparteditor.enums.Threshold.mc)); org.nschmidt.ldparteditor.text.DatParser.vertexA.setY(new java.math.BigDecimal(data_segments[5], org.nschmidt.ldparteditor.enums.Threshold.mc)); org.nschmidt.ldparteditor.text.DatParser.vertexA.setZ(new java.math.BigDecimal(data_segments[6], org.nschmidt.ldparteditor.enums.Threshold.mc)); org.nschmidt.ldparteditor.text.DatParser.vertexB.setX(new java.math.BigDecimal(data_segments[7], org.nschmidt.ldparteditor.enums.Threshold.mc)); org.nschmidt.ldparteditor.text.DatParser.vertexB.setY(new java.math.BigDecimal(data_segments[8], org.nschmidt.ldparteditor.enums.Threshold.mc)); org.nschmidt.ldparteditor.text.DatParser.vertexB.setZ(new java.math.BigDecimal(data_segments[9], org.nschmidt.ldparteditor.enums.Threshold.mc)); org.nschmidt.ldparteditor.text.DatParser.vertexC.setX(new java.math.BigDecimal(data_segments[10], org.nschmidt.ldparteditor.enums.Threshold.mc)); org.nschmidt.ldparteditor.text.DatParser.vertexC.setY(new java.math.BigDecimal(data_segments[11], org.nschmidt.ldparteditor.enums.Threshold.mc)); org.nschmidt.ldparteditor.text.DatParser.vertexC.setZ(new java.math.BigDecimal(data_segments[12], org.nschmidt.ldparteditor.enums.Threshold.mc)); } catch (java.lang.NumberFormatException nfe) { numberError = true; } }else { numberError = true; colour = null; } if (numberError) { result.add(new org.nschmidt.ldparteditor.data.ParsingResult(org.nschmidt.ldparteditor.i18n.I18n.DATPARSER_InvalidNumberFormat, (\"[E99] \" + (org.nschmidt.ldparteditor.i18n.I18n.DATPARSER_SyntaxError)), org.nschmidt.ldparteditor.data.ResultType.ERROR)); }else if (!errorCheckOnly) { if (depth == 0) { result.remove(0); result.add(0, new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GData3(colour.getColourNumber(), colour.getR(), colour.getG(), colour.getB(), colour.getA(), org.nschmidt.ldparteditor.text.DatParser.vertexA.X, org.nschmidt.ldparteditor.text.DatParser.vertexA.Y, org.nschmidt.ldparteditor.text.DatParser.vertexA.Z, org.nschmidt.ldparteditor.text.DatParser.vertexB.X, org.nschmidt.ldparteditor.text.DatParser.vertexB.Y, org.nschmidt.ldparteditor.text.DatParser.vertexB.Z, org.nschmidt.ldparteditor.text.DatParser.vertexC.X, org.nschmidt.ldparteditor.text.DatParser.vertexC.Y, org.nschmidt.ldparteditor.text.DatParser.vertexC.Z, parent, datFile, false))); } } }else if (line.startsWith(\"CSG_\", 7)) { if (line.startsWith(\"UNION\", 11)) { result.remove(0); result.add(0, new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GDataCSG(datFile, org.nschmidt.csg.CSG.UNION, line, parent))); }else if (line.startsWith(\"DIFFERENCE\", 11)) { result.remove(0); result.add(0, new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GDataCSG(datFile, org.nschmidt.csg.CSG.DIFFERENCE, line, parent))); }else if (line.startsWith(\"INTERSECTION\", 11)) { result.remove(0); result.add(0, new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GDataCSG(datFile, org.nschmidt.csg.CSG.INTERSECTION, line, parent))); }else if (line.startsWith(\"TRANSFORM\", 11)) { result.remove(0); result.add(0, new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GDataCSG(datFile, org.nschmidt.csg.CSG.TRANSFORM, line, parent))); }else if (line.startsWith(\"CUBOID\", 11)) { result.remove(0); result.add(0, new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GDataCSG(datFile, org.nschmidt.csg.CSG.CUBOID, line, parent))); }else if (line.startsWith(\"ELLIPSOID\", 11)) { result.remove(0); result.add(0, new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GDataCSG(datFile, org.nschmidt.csg.CSG.ELLIPSOID, line, parent))); }else if (line.startsWith(\"QUAD\", 11)) { result.remove(0); result.add(0, new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GDataCSG(datFile, org.nschmidt.csg.CSG.QUAD, line, parent))); }else if (line.startsWith(\"CYLINDER\", 11)) { result.remove(0); result.add(0, new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GDataCSG(datFile, org.nschmidt.csg.CSG.CYLINDER, line, parent))); }else if (line.startsWith(\"MESH\", 11)) { result.remove(0); result.add(0, new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GDataCSG(datFile, org.nschmidt.csg.CSG.MESH, line, parent))); }else if (line.startsWith(\"CONE\", 11)) { result.remove(0); result.add(0, new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GDataCSG(datFile, org.nschmidt.csg.CSG.CONE, line, parent))); }else if (line.startsWith(\"CIRCLE\", 11)) { result.remove(0); result.add(0, new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GDataCSG(datFile, org.nschmidt.csg.CSG.CIRCLE, line, parent))); }else if (line.startsWith(\"COMPILE\", 11)) { result.remove(0); result.add(0, new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GDataCSG(datFile, org.nschmidt.csg.CSG.COMPILE, line, parent))); }else if (line.startsWith(\"QUALITY\", 11)) { result.remove(0); result.add(0, new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GDataCSG(datFile, org.nschmidt.csg.CSG.QUALITY, line, parent))); }else if (line.startsWith(\"EPSILON\", 11)) { result.remove(0); result.add(0, new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GDataCSG(datFile, org.nschmidt.csg.CSG.EPSILON, line, parent))); }else if (line.startsWith(\"EXTRUDE\", 11)) { result.remove(0); result.add(0, new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GDataCSG(datFile, org.nschmidt.csg.CSG.EXTRUDE, line, parent))); }else if (line.startsWith(\"EXT_CFG\", 11)) { result.remove(0); result.add(0, new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GDataCSG(datFile, org.nschmidt.csg.CSG.EXTRUDE_CFG, line, parent))); org.nschmidt.ldparteditor.data.GDataCSG.forceRecompile(datFile); } }else if (((line.startsWith(\"PNG\", 7)) && (depth == 0)) && ((data_segments.length) >= 12)) { try { org.nschmidt.ldparteditor.data.Vertex offset = new org.nschmidt.ldparteditor.data.Vertex(new java.math.BigDecimal(data_segments[3]), new java.math.BigDecimal(data_segments[4]), new java.math.BigDecimal(data_segments[5])); java.math.BigDecimal a1 = new java.math.BigDecimal(data_segments[6]); java.math.BigDecimal a2 = new java.math.BigDecimal(data_segments[7]); java.math.BigDecimal a3 = new java.math.BigDecimal(data_segments[8]); org.nschmidt.ldparteditor.data.Vertex scale = new org.nschmidt.ldparteditor.data.Vertex(new java.math.BigDecimal(data_segments[9]), new java.math.BigDecimal(data_segments[10]), java.math.BigDecimal.ONE); java.lang.StringBuilder sb = new java.lang.StringBuilder(); for (int s = 11; s < ((data_segments.length) - 1); s++) { sb.append(data_segments[s]); sb.append(\" \"); } sb.append(data_segments[((data_segments.length) - 1)]); result.remove(0); final org.nschmidt.ldparteditor.data.GDataPNG gpng = new org.nschmidt.ldparteditor.data.GDataPNG(line, offset, a1, a2, a3, scale, sb.toString()); if (!errorCheckOnly) datFile.getVertexManager().setSelectedBgPicture(gpng); result.add(0, new org.nschmidt.ldparteditor.data.ParsingResult(gpng)); if (!errorCheckOnly) org.nschmidt.ldparteditor.text.DatParser.upatePngImages = true; } catch (java.lang.Exception ex) { } } }else if (line.startsWith(\"0 BFC \")) { if (line.startsWith(\"INVERTNEXT\", 6)) { result.add(new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GDataBFC(org.nschmidt.ldparteditor.data.BFC.INVERTNEXT))); }else if (line.startsWith(\"CERTIFY\", 6)) { if ((line.startsWith(\"CLIP CCW\", 14)) || (line.startsWith(\"CCW CLIP\", 14))) { result.add(new org.nschmidt.ldparteditor.data.ParsingResult(org.nschmidt.ldparteditor.i18n.I18n.DATPARSER_MLCAD_ClipCCW, (\"[W0C] \" + (org.nschmidt.ldparteditor.i18n.I18n.DATPARSER_Warning)), org.nschmidt.ldparteditor.data.ResultType.WARN)); result.add(new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GDataBFC(org.nschmidt.ldparteditor.data.BFC.CCW_CLIP))); }else if ((line.startsWith(\"CLIP CW\", 14)) || (line.startsWith(\"CW CLIP\", 14))) { result.add(new org.nschmidt.ldparteditor.data.ParsingResult(org.nschmidt.ldparteditor.i18n.I18n.DATPARSER_MLCAD_ClipCW, (\"[W0C] \" + (org.nschmidt.ldparteditor.i18n.I18n.DATPARSER_Warning)), org.nschmidt.ldparteditor.data.ResultType.WARN)); result.add(new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GDataBFC(org.nschmidt.ldparteditor.data.BFC.CW_CLIP))); }else if (line.startsWith(\"CCW\", 14)) { result.add(new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GDataBFC(org.nschmidt.ldparteditor.data.BFC.CCW_CLIP))); }else if (line.startsWith(\"CW\", 14)) { result.add(new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GDataBFC(org.nschmidt.ldparteditor.data.BFC.CW_CLIP))); }else if (line.startsWith(\"INVERTNEXT\", 14)) { result.add(new org.nschmidt.ldparteditor.data.ParsingResult(org.nschmidt.ldparteditor.i18n.I18n.DATPARSER_MLCAD_InvertNext, (\"[W0B] \" + (org.nschmidt.ldparteditor.i18n.I18n.DATPARSER_Warning)), org.nschmidt.ldparteditor.data.ResultType.WARN)); result.add(new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GDataBFC(org.nschmidt.ldparteditor.data.BFC.INVERTNEXT))); }else if (line.startsWith(\"CLIP\", 14)) { result.add(new org.nschmidt.ldparteditor.data.ParsingResult(org.nschmidt.ldparteditor.i18n.I18n.DATPARSER_MLCAD_Clip, (\"[W0B] \" + (org.nschmidt.ldparteditor.i18n.I18n.DATPARSER_Warning)), org.nschmidt.ldparteditor.data.ResultType.WARN)); result.add(new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GDataBFC(org.nschmidt.ldparteditor.data.BFC.CLIP))); }else if (line.startsWith(\"NOCLIP\", 14)) { result.add(new org.nschmidt.ldparteditor.data.ParsingResult(org.nschmidt.ldparteditor.i18n.I18n.DATPARSER_MLCAD_NoClip, (\"[W0B] \" + (org.nschmidt.ldparteditor.i18n.I18n.DATPARSER_Warning)), org.nschmidt.ldparteditor.data.ResultType.WARN)); result.add(new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GDataBFC(org.nschmidt.ldparteditor.data.BFC.NOCLIP))); }else { result.add(new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GData0(line))); } }else if (line.startsWith(\"NOCERTIFY\", 6)) { result.add(new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GDataBFC(org.nschmidt.ldparteditor.data.BFC.NOCERTIFY))); }else if (line.startsWith(\"CCW\", 6)) { result.add(new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GDataBFC(org.nschmidt.ldparteditor.data.BFC.CCW))); }else if (line.startsWith(\"CW\", 6)) { result.add(new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GDataBFC(org.nschmidt.ldparteditor.data.BFC.CW))); }else if (line.startsWith(\"NOCLIP\", 6)) { result.add(new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GDataBFC(org.nschmidt.ldparteditor.data.BFC.NOCLIP))); }else if (line.startsWith(\"CLIP CCW\", 6)) { result.add(new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GDataBFC(org.nschmidt.ldparteditor.data.BFC.CCW_CLIP))); }else if (line.startsWith(\"CLIP CW\", 6)) { result.add(new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GDataBFC(org.nschmidt.ldparteditor.data.BFC.CW_CLIP))); }else if (line.startsWith(\"CCW CLIP\", 6)) { result.add(new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GDataBFC(org.nschmidt.ldparteditor.data.BFC.CCW_CLIP))); }else if (line.startsWith(\"CW CLIP\", 6)) { result.add(new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GDataBFC(org.nschmidt.ldparteditor.data.BFC.CW_CLIP))); }else if (line.startsWith(\"CLIP\", 6)) { result.add(new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GDataBFC(org.nschmidt.ldparteditor.data.BFC.CLIP))); }else { result.add(new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GData0(line))); } }else { if (line.equals(\"0 STEP\")) { result.add(new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GData0(line, true))); }else { result.add(new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GData0(line))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/9137/buggy-version/src.org.nschmidt.ldparteditor.text.DatParser.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.util.ArrayList<org.nschmidt.ldparteditor.data.ParsingResult>.add(int,org.nschmidt.ldparteditor.data.ParsingResult)", "java.util.ArrayList<org.nschmidt.ldparteditor.data.ParsingResult>.add(int,org.nschmidt.ldparteditor.data.ParsingResult)", "java.lang.String.startsWith(java.lang.String,int)", "java.util.ArrayList<org.nschmidt.ldparteditor.data.ParsingResult>.add(org.nschmidt.ldparteditor.data.ParsingResult)", "java.util.ArrayList<org.nschmidt.ldparteditor.data.ParsingResult>.add(org.nschmidt.ldparteditor.data.ParsingResult)", "java.lang.String.startsWith(java.lang.String,int)", "java.util.ArrayList<org.nschmidt.ldparteditor.data.ParsingResult>.add(org.nschmidt.ldparteditor.data.ParsingResult)", "java.util.ArrayList<org.nschmidt.ldparteditor.data.ParsingResult>.add(int,org.nschmidt.ldparteditor.data.ParsingResult)", "java.util.ArrayList<org.nschmidt.ldparteditor.data.ParsingResult>.add(org.nschmidt.ldparteditor.data.ParsingResult)", "java.lang.String.startsWith(java.lang.String,int)", "java.util.ArrayList<org.nschmidt.ldparteditor.data.ParsingResult>.add(int,org.nschmidt.ldparteditor.data.ParsingResult)", "java.lang.String.startsWith(java.lang.String,int)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.startsWith(java.lang.String,int)", "java.lang.String.startsWith(java.lang.String)", "java.util.ArrayList<org.nschmidt.ldparteditor.data.ParsingResult>.add(int,org.nschmidt.ldparteditor.data.ParsingResult)", "java.lang.String.startsWith(java.lang.String,int)", "java.lang.String.startsWith(java.lang.String,int)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.startsWith(java.lang.String,int)", "java.lang.String.startsWith(java.lang.String,int)", "org.nschmidt.ldparteditor.text.TexMapParser.parseGeometry(java.lang.String,int,float,float,float,float,org.nschmidt.ldparteditor.data.GData1,org.lwjgl.util.vector.Matrix4f,java.util.Set<java.lang.String>,org.nschmidt.ldparteditor.data.DatFile)", "java.lang.String.startsWith(java.lang.String,int)", "java.lang.String.startsWith(java.lang.String,int)", "java.lang.String.startsWith(java.lang.String,int)", "java.lang.String.startsWith(java.lang.String,int)", "java.lang.String.startsWith(java.lang.String,int)", "java.util.ArrayList<org.nschmidt.ldparteditor.data.ParsingResult>.add(int,org.nschmidt.ldparteditor.data.ParsingResult)", "java.lang.String.startsWith(java.lang.String,int)", "java.util.ArrayList<org.nschmidt.ldparteditor.data.ParsingResult>.add(int,org.nschmidt.ldparteditor.data.ParsingResult)", "java.util.ArrayList<org.nschmidt.ldparteditor.data.ParsingResult>.add(int,org.nschmidt.ldparteditor.data.ParsingResult)", "java.lang.String.startsWith(java.lang.String,int)", "java.lang.String.startsWith(java.lang.String,int)", "java.util.ArrayList<org.nschmidt.ldparteditor.data.ParsingResult>.add(org.nschmidt.ldparteditor.data.ParsingResult)", "java.lang.String.startsWith(java.lang.String,int)", "java.lang.String.startsWith(java.lang.String,int)", "java.lang.String.startsWith(java.lang.String,int)", "java.lang.String.startsWith(java.lang.String,int)", "java.lang.String.startsWith(java.lang.String,int)", "java.lang.String.startsWith(java.lang.String,int)", "java.lang.String.startsWith(java.lang.String,int)", "java.lang.String.startsWith(java.lang.String,int)", "java.util.ArrayList<org.nschmidt.ldparteditor.data.ParsingResult>.add(int,org.nschmidt.ldparteditor.data.ParsingResult)", "java.util.ArrayList<org.nschmidt.ldparteditor.data.ParsingResult>.add(org.nschmidt.ldparteditor.data.ParsingResult)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.startsWith(java.lang.String,int)", "java.lang.String.startsWith(java.lang.String,int)", "java.lang.String.startsWith(java.lang.String,int)", "java.lang.String.equals(java.lang.String)", "java.lang.String.startsWith(java.lang.String,int)", "java.util.ArrayList<org.nschmidt.ldparteditor.data.ParsingResult>.add(int,org.nschmidt.ldparteditor.data.ParsingResult)", "java.lang.String.startsWith(java.lang.String,int)", "java.lang.String.startsWith(java.lang.String,int)", "java.util.ArrayList<org.nschmidt.ldparteditor.data.ParsingResult>.add(int,org.nschmidt.ldparteditor.data.ParsingResult)", "java.lang.String.startsWith(java.lang.String,int)", "org.nschmidt.ldparteditor.text.TexMapParser.parseTEXMAP(java.lang.String[],java.lang.String,org.nschmidt.ldparteditor.data.GData1,org.nschmidt.ldparteditor.data.DatFile)", "java.util.ArrayList<org.nschmidt.ldparteditor.data.ParsingResult>.add(int,org.nschmidt.ldparteditor.data.ParsingResult)", "java.lang.String.startsWith(java.lang.String,int)", "java.lang.String.startsWith(java.lang.String,int)", "java.lang.String.startsWith(java.lang.String,int)", "java.lang.String.substring(int)", "java.util.ArrayList<org.nschmidt.ldparteditor.data.ParsingResult>.add(int,org.nschmidt.ldparteditor.data.ParsingResult)", "java.lang.String.startsWith(java.lang.String,int)", "java.util.ArrayList<org.nschmidt.ldparteditor.data.ParsingResult>.add(int,org.nschmidt.ldparteditor.data.ParsingResult)", "java.lang.String.startsWith(java.lang.String,int)", "java.util.ArrayList<org.nschmidt.ldparteditor.data.ParsingResult>.add(int,org.nschmidt.ldparteditor.data.ParsingResult)", "java.lang.String.startsWith(java.lang.String,int)", "java.lang.String.startsWith(java.lang.String,int)", "java.lang.String.startsWith(java.lang.String,int)", "java.lang.String.startsWith(java.lang.String,int)", "java.util.ArrayList<org.nschmidt.ldparteditor.data.ParsingResult>.add(int,org.nschmidt.ldparteditor.data.ParsingResult)", "java.lang.String.startsWith(java.lang.String,int)"], "Fixed commit": "b6cc956067334ad4a4ac3a6da48ad1ae79cebaca", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2017-06-16T18:46:17Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.processes) == null) { this.processes = processes; }else { this.processes.clear(); this.processes.addAll(processes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4909/buggy-version/Kitodo-DataManagement.src.main.java.org.kitodo.data.database.beans.Batch.java", "BodyUseAPI": [], "Fixed commit": "beacb6bfbca6a405aaece30ad893572b2661003c", "Url": "https://api.github.com/repos/Beacze/kitodo-production", "Date": "2017-05-11T09:27:14Z"},
{"Line": "=>360", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.batches) == null) { this.batches = batches; }else { this.batches.clear(); this.batches.addAll(batches); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4909/buggy-version/Kitodo-DataManagement.src.main.java.org.kitodo.data.database.beans.Process.java", "BodyUseAPI": [], "Fixed commit": "beacb6bfbca6a405aaece30ad893572b2661003c", "Url": "https://api.github.com/repos/Beacze/kitodo-production", "Date": "2017-05-11T09:27:14Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(parentActivity.isAdded())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4003/buggy-version/catroid.src.org.catrobat.catroid.utils.CopyProjectTask.java", "BodyUseAPI": [], "Fixed commit": "ef92639a66b1cc148ccb3d22d6c3cc09130b946b", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2013-04-24T22:17:50Z"},
{"Line": "=>744", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((post.getAuthor().getLastIP()) != null) && (!(post.getAuthor().getLastIP().isEmpty()))) { data.put(\"comment_author_IP\", post.getAuthor().getLastIP()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6549/buggy-version/src.main.java.com.craftfire.bifrost.scripts.cms.WordPress.java", "BodyUseAPI": ["post.getAuthor().getLastIP()", "java.util.HashMap<java.lang.String, java.lang.Object>.put(java.lang.String,post.getAuthor().getLastIP())", "com.craftfire.bifrost.classes.Post.getAuthor()"], "Fixed commit": "396472b67880ec6b91c2345cc687eefb9fb3afe8", "Url": "https://api.github.com/repos/Wolf480pl/Bifrost", "Date": "2012-08-17T09:39:05Z"},
{"Line": "=>726", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((post.getThread()) != null) { post.setSubject(post.getThread().getSubject()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6549/buggy-version/src.main.java.com.craftfire.bifrost.scripts.cms.WordPress.java", "BodyUseAPI": ["com.craftfire.bifrost.classes.Post.setSubject(post.getThread().getSubject())", "post.getThread().getSubject()", "com.craftfire.bifrost.classes.Post.getThread()"], "Fixed commit": "396472b67880ec6b91c2345cc687eefb9fb3afe8", "Url": "https://api.github.com/repos/Wolf480pl/Bifrost", "Date": "2012-08-17T09:39:05Z"},
{"Line": "=>830", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.craftfire.commons.managers.DataManager.getArray(((((\"SELECT * FROM `\" + (this.dataManager.getPrefix())) + \"posts` WHERE `ID` = '\") + threadid) + \"'\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (array.containsKey(\"post_type\")) { boardid = (array.get(\"post_type\").toString().equalsIgnoreCase(\"post\")) ? 1 : 2; if ((boardid > 1) && (!(array.get(\"post_type\").toString().equalsIgnoreCase(\"page\")))) { return null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6549/buggy-version/src.main.java.com.craftfire.bifrost.scripts.cms.WordPress.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.lang.Object.toString()", "java.lang.Object.toString()", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "396472b67880ec6b91c2345cc687eefb9fb3afe8", "Url": "https://api.github.com/repos/Wolf480pl/Bifrost", "Date": "2012-08-17T09:39:05Z"},
{"Line": "=>539", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((jp.getCurrentToken()) == (com.fasterxml.jackson.core.JsonToken.VALUE_NULL)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6826/buggy-version/src.us.kbase.typedobj.core.JsonTokenValidationSchema.java", "BodyUseAPI": [], "Fixed commit": "bea6a3e3606a70b9d1c391989e1985fe1e245164", "Url": "https://api.github.com/repos/kbase/workspace_deluxe", "Date": "2014-04-25T21:11:41Z"},
{"Line": "=>618", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(minValueDefined)) && (!(maxValueDefined))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6826/buggy-version/src.us.kbase.typedobj.core.JsonTokenValidationSchema.java", "BodyUseAPI": [], "Fixed commit": "bea6a3e3606a70b9d1c391989e1985fe1e245164", "Url": "https://api.github.com/repos/kbase/workspace_deluxe", "Date": "2014-04-25T21:11:41Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((arg._name.equals(\"regression_stop\")) && (classification)) { arg.disable(\"Only for regression.\", inputArgs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6877/buggy-version/src.main.java.hex.nn.NN.java", "BodyUseAPI": ["hex.nn.Argument.disable(java.lang.String,java.util.Properties)"], "Fixed commit": "31eb5a23ab222c5d65ca25fc44b44cfee40422e0", "Url": "https://api.github.com/repos/0xdata/h2o", "Date": "2014-02-21T02:59:20Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((arg._name.equals(\"classification_stop\")) && (!(classification))) { arg.disable(\"Only for classification.\", inputArgs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6877/buggy-version/src.main.java.hex.nn.NN.java", "BodyUseAPI": ["hex.nn.Argument.disable(java.lang.String,java.util.Properties)"], "Fixed commit": "31eb5a23ab222c5d65ca25fc44b44cfee40422e0", "Url": "https://api.github.com/repos/0xdata/h2o", "Date": "2014-02-21T02:59:20Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fittess < lastFittess) org.spicydog.Utility.log(\"WTF!!!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7182/buggy-version/src.org.spicydog.Main.java", "BodyUseAPI": [], "Fixed commit": "202cab4f33924a21a172e63f4109f6056b847edf", "Url": "https://api.github.com/repos/spicydog/CPE614-Component-Allocation-GA", "Date": "2014-10-25T17:41:32Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (key instanceof org.spout.api.map.DefaultedKey) { return get(((org.spout.api.map.DefaultedKey<T>) (key))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4851/buggy-version/src.main.java.org.spout.api.datatable.DataMap.java", "BodyUseAPI": [], "Fixed commit": "7059edd77ac08860fc9a7f6108631c627e00ab92", "Url": "https://api.github.com/repos/bergerkiller/SpoutAPI", "Date": "2012-07-31T01:56:20Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<net.vvakame.util.jsonpullparser.util.Type>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (type == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7666/buggy-version/jsonpullparser-core.src.main.java.net.vvakame.util.jsonpullparser.util.JsonArray.java", "BodyUseAPI": [], "Fixed commit": "db833f37f21787a17c47b0230d7ccb6cbaf52d6b", "Url": "https://api.github.com/repos/vvakame/JsonPullParser", "Date": "2013-01-21T12:58:05Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<net.vvakame.util.jsonpullparser.util.Type>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (type == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7666/buggy-version/jsonpullparser-core.src.main.java.net.vvakame.util.jsonpullparser.util.JsonArray.java", "BodyUseAPI": [], "Fixed commit": "db833f37f21787a17c47b0230d7ccb6cbaf52d6b", "Url": "https://api.github.com/repos/vvakame/JsonPullParser", "Date": "2013-01-21T12:58:05Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<net.vvakame.util.jsonpullparser.util.Type>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (type == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7666/buggy-version/jsonpullparser-core.src.main.java.net.vvakame.util.jsonpullparser.util.JsonArray.java", "BodyUseAPI": [], "Fixed commit": "db833f37f21787a17c47b0230d7ccb6cbaf52d6b", "Url": "https://api.github.com/repos/vvakame/JsonPullParser", "Date": "2013-01-21T12:58:05Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<net.vvakame.util.jsonpullparser.util.Type>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (type == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7666/buggy-version/jsonpullparser-core.src.main.java.net.vvakame.util.jsonpullparser.util.JsonArray.java", "BodyUseAPI": [], "Fixed commit": "db833f37f21787a17c47b0230d7ccb6cbaf52d6b", "Url": "https://api.github.com/repos/vvakame/JsonPullParser", "Date": "2013-01-21T12:58:05Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<net.vvakame.util.jsonpullparser.util.Type>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (type == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7666/buggy-version/jsonpullparser-core.src.main.java.net.vvakame.util.jsonpullparser.util.JsonArray.java", "BodyUseAPI": [], "Fixed commit": "db833f37f21787a17c47b0230d7ccb6cbaf52d6b", "Url": "https://api.github.com/repos/vvakame/JsonPullParser", "Date": "2013-01-21T12:58:05Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<net.vvakame.util.jsonpullparser.util.Type>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (type == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7666/buggy-version/jsonpullparser-core.src.main.java.net.vvakame.util.jsonpullparser.util.JsonArray.java", "BodyUseAPI": [], "Fixed commit": "db833f37f21787a17c47b0230d7ccb6cbaf52d6b", "Url": "https://api.github.com/repos/vvakame/JsonPullParser", "Date": "2013-01-21T12:58:05Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mViewPager.getCurrentItem()) == 0) { initFirstViewPagerElement(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7603/buggy-version/src.com.flabs.reminder.activities.NewReminderActivity.java", "BodyUseAPI": [], "Fixed commit": "96f85708e8e729a3510813ede3c72d62b1619abb", "Url": "https://api.github.com/repos/Visitor15/reminder", "Date": "2013-02-08T02:50:19Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((input) != null) input.remove(s);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7815/buggy-version/src.ch.aiko.engine.graphics.Layer.java", "BodyUseAPI": [], "Fixed commit": "ffc166fbad2bab6a0e4073fd4ba38aee395fca90", "Url": "https://api.github.com/repos/AIKO-Aaron/AikoCore", "Date": "2016-08-03T10:57:56Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (date != null) { this.lastVersionDate = date.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1261/buggy-version/src.main.java.metricapp.dto.MetadataDTO.java", "BodyUseAPI": ["java.time.LocalDate.toString()"], "Fixed commit": "1258eabf4578da6d751abecaca50bd01cff425f1", "Url": "https://api.github.com/repos/metricAppTeam/metricapp-server", "Date": "2016-07-09T21:57:17Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (date != null) { this.creationDate = date.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1261/buggy-version/src.main.java.metricapp.dto.MetadataDTO.java", "BodyUseAPI": ["java.time.LocalDate.toString()"], "Fixed commit": "1258eabf4578da6d751abecaca50bd01cff425f1", "Url": "https://api.github.com/repos/metricAppTeam/metricapp-server", "Date": "2016-07-09T21:57:17Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isomorphicPair2.containsKey(t.charAt(i)))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5210/buggy-version/FunQuestions.src.IsomorphicStrings.java", "BodyUseAPI": [], "Fixed commit": "633b032e2806bb94157a2b6d2a96f887d89216f1", "Url": "https://api.github.com/repos/williamthing/ACodeADay", "Date": "2016-02-08T06:05:28Z"},
{"Line": "=>1339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (animator != null) { animator.removeListener(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6023/buggy-version/InCallUI.src.com.android.incallui.CallCardFragment.java", "BodyUseAPI": ["android.animation.Animator.removeListener(1)"], "Fixed commit": "d5e3de3253f46bdda4f714db76a83ec0adfbf586", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-packages-apps-Dialer", "Date": "2016-10-25T21:44:43Z"},
{"Line": "=>758", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.TreeMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (defaultPattern == null) { defaultPattern = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3436/buggy-version/src.org.opensourcephysics.cabrillo.tracker.NumberFormatSetter.java", "BodyUseAPI": [], "Fixed commit": "771d2b5e310aa2daf182a85fb03c328cfb893ad3", "Url": "https://api.github.com/repos/OpenSourcePhysics/tracker", "Date": "2016-05-28T21:09:16Z"},
{"Line": "=>506", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["rest.ActREST.getActiveActsUri(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (docId == \"\") docId = getActsUri(aktId);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/866/buggy-version/XMLproj.src.rest.ActREST.java", "BodyUseAPI": [], "Fixed commit": "fcda571fb06ab18e3e69fbd2b0c5d3b93416b540", "Url": "https://api.github.com/repos/alien93/xml", "Date": "2016-06-17T17:32:58Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.greenrobot.eventbus.EventBus.getDefault().hasSubscriberForEvent(com.example.android.wesport.GetAddressTask.class))) { org.greenrobot.eventbus.EventBus.getDefault().register(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5181/buggy-version/app.src.main.java.com.example.android.wesport.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "731fe1a54cc490176c333021a45415b08b83e17c", "Url": "https://api.github.com/repos/mnarasimhan02/WeSport", "Date": "2017-02-09T22:59:20Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(getMouseInWindow(i, j))) { int deltaWheel = com.remote.remote2d.engine.Remote2D.getDeltaWheel(); float scale = map.camera.scale; if ((deltaWheel > 0) && ((map.camera.scale) < 16)) scale *= 2; else if ((deltaWheel < 0) && ((map.camera.scale) > 0.25)) scale /= 2; map.setScaleAroundScreenPoint(new com.remote.remote2d.engine.logic.Vector2(i, j), scale); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5570/buggy-version/Remote2D.src.com.remote.remote2d.editor.GuiEditor.java", "BodyUseAPI": ["com.remote.remote2d.engine.world.Map.setScaleAroundScreenPoint(com.remote.remote2d.engine.logic.Vector2,float)"], "Fixed commit": "cc4a4844f90d4bebd0980a4b9c3c8ae9de5edbef", "Url": "https://api.github.com/repos/Flafla2/Remote2D-Engine", "Date": "2013-11-28T03:19:20Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (currentPathway.getPathwayComponent().contains(currentPathway)) { currentPathway.removePathwayComponent(currentPathway); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8795/buggy-version/cpath-impl.src.main.java.cpath.service.Merger.java", "BodyUseAPI": ["cpath.service.Pathway.removePathwayComponent(cpath.service.Pathway)"], "Fixed commit": "f970f787090798e3365f1d0d8f9fb74ed84b07fe", "Url": "https://api.github.com/repos/PathwayCommons/cpath2", "Date": "2017-03-07T23:58:59Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gattsMap) == null) { gattsMap = new java.util.HashMap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8579/buggy-version/grandroid-ble.src.main.java.com.grasea.grandroid.ble.BluetoothLeService.java", "BodyUseAPI": [], "Fixed commit": "925e000220e8bc2d85144fdb02dcd69d2949a914", "Url": "https://api.github.com/repos/Grasea/Grandroid2", "Date": "2017-06-05T10:02:02Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((player.vel.x) == 0) && (player.grounded)) { return new com.sideprojects.megamanxphantomblade.physics.player.movementstates.Idle(input, player, player.state, stateChangeHandler); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7365/buggy-version/core.src.com.sideprojects.megamanxphantomblade.physics.player.movementstates.Jump.java", "BodyUseAPI": [], "Fixed commit": "8d711b0d9e109650926c0524c8028db07e0d58d4", "Url": "https://api.github.com/repos/hoangbv15/PhantomBlade", "Date": "2017-04-24T20:36:37Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((progressDialog) != null) { progressDialog.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5920/buggy-version/MobilePay.app.src.main.java.co.in.mobilepay.view.activities.NotificationBaseActivity.java", "BodyUseAPI": [], "Fixed commit": "d5a44d3cbc1bcabc4250e10be41109fb60340f8a", "Url": "https://api.github.com/repos/snithishkumar/AndroidMobilePay", "Date": "2016-07-03T20:12:46Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (res == (java.lang.Double.POSITIVE_INFINITY)) { return JSNumber.POS_INFINITY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2997/buggy-version/javascriptic-runtime.src.com.semkagtn.javascriptic.runtime.JSObject.java", "BodyUseAPI": [], "Fixed commit": "5854d87c7edf7d2928e3e8ede1d104d645d40d57", "Url": "https://api.github.com/repos/semkagtn/Javascriptic", "Date": "2013-12-09T20:02:56Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (res == (java.lang.Double.NEGATIVE_INFINITY)) { return JSNumber.NEG_INFINITY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2997/buggy-version/javascriptic-runtime.src.com.semkagtn.javascriptic.runtime.JSObject.java", "BodyUseAPI": [], "Fixed commit": "5854d87c7edf7d2928e3e8ede1d104d645d40d57", "Url": "https://api.github.com/repos/semkagtn/Javascriptic", "Date": "2013-12-09T20:02:56Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (test != null) { starta.removeWindow(test); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7381/buggy-version/ModulManagementSystem.src.gui.HandbookManager_View.java", "BodyUseAPI": [], "Fixed commit": "e1d55ab74d3a0e01912961a019ddccd88bb7c19a", "Url": "https://api.github.com/repos/abca/MMS", "Date": "2013-07-08T13:37:34Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (next != null) notifyNextSolutionFound(next);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5031/buggy-version/src.main.java.org.jpc.query.ObservableQuery.java", "BodyUseAPI": ["org.jpc.query.ObservableQuery.notifyNextSolutionFound(java.util.Map<java.lang.String, org.jpc.term.Term>)"], "Fixed commit": "4a87c72e5405cc4b81a04753362e7a70cc60cc45", "Url": "https://api.github.com/repos/sergio-castro/jpc", "Date": "2013-05-16T14:35:41Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getStringExtra(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(ean.equals(\"\"))) { deleteBook(ean); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6060/buggy-version/alexandria.app.src.main.java.it.jaschke.alexandria.services.BookService.java", "BodyUseAPI": ["it.jaschke.alexandria.services.BookService.deleteBook(java.lang.String)"], "Fixed commit": "f98df95a6a08102601162fe5e383e707524deaf8", "Url": "https://api.github.com/repos/native1989/SuperDuo", "Date": "2015-10-13T15:43:10Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getStringExtra(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(ean.equals(\"\"))) { fetchBook(ean); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6060/buggy-version/alexandria.app.src.main.java.it.jaschke.alexandria.services.BookService.java", "BodyUseAPI": ["it.jaschke.alexandria.services.BookService.fetchBook(java.lang.String)"], "Fixed commit": "f98df95a6a08102601162fe5e383e707524deaf8", "Url": "https://api.github.com/repos/native1989/SuperDuo", "Date": "2015-10-13T15:43:10Z"},
{"Line": "=>1950", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((barcode.getType()) == (SmFptrConst.SMFPTR_BARCODE_EAN13)) { barcode.setPrintType(SmFptrConst.SMFPTR_PRINTTYPE_DEVICE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8084/buggy-version/Source.Core.src.com.shtrih.fiscalprinter.SMFiscalPrinterImpl.java", "BodyUseAPI": ["com.shtrih.fiscalprinter.PrinterBarcode.setPrintType(SmFptrConst.SMFPTR_PRINTTYPE_DEVICE)"], "Fixed commit": "4080fad004a13417fd1d672eea67460909560e2c", "Url": "https://api.github.com/repos/shtrih-m/javapos_shtrih", "Date": "2017-01-31T14:33:03Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((command.length) >= 1) cmd = command[0];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5849/buggy-version/src.main.java.org.kairosdb.core.telnet.TelnetServer.java", "BodyUseAPI": [], "Fixed commit": "4f3246a24515c8b6c7e2a1c3b44544ab326d918d", "Url": "https://api.github.com/repos/kairosdb/kairosdb", "Date": "2015-01-26T20:09:59Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 9) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7310/buggy-version/HGDArcadia.MyGame.src.Store.java", "BodyUseAPI": [], "Fixed commit": "8e421d2b3690582dbbff2152cde9aee0aeb71d20", "Url": "https://api.github.com/repos/ejmoore/Arcadia3", "Date": "2016-02-27T02:37:55Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.lucene.index.FieldInfos.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (j != N) { ret = java.util.Arrays.copyOf(ret, j); N = j; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4348/buggy-version/src.main.java.nl.bitmanager.elasticsearch.extensions.view.DocInverter.java", "BodyUseAPI": ["java.util.Arrays.copyOf(org.apache.lucene.index.FieldInfo[],int)"], "Fixed commit": "84519f6223fd31a58cf49d70cbe4d740a254ce93", "Url": "https://api.github.com/repos/pweerd/Elasticsearch-plugin", "Date": "2017-03-22T20:35:17Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ret[j]) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4348/buggy-version/src.main.java.nl.bitmanager.elasticsearch.extensions.view.DocInverter.java", "BodyUseAPI": [], "Fixed commit": "84519f6223fd31a58cf49d70cbe4d740a254ce93", "Url": "https://api.github.com/repos/pweerd/Elasticsearch-plugin", "Date": "2017-03-22T20:35:17Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i >= 1) { if (((s.charAt(i)) == '.') && ((s.charAt((i - 1))) == '.')) { throw new ru.ifmo.md.lesson4.CalculationException(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4134/buggy-version/app.src.main.java.ru.ifmo.md.lesson4.ExpressionParser.java", "BodyUseAPI": ["java.lang.String.charAt(int)", "java.lang.String.charAt(int)"], "Fixed commit": "24b3ff2d2f098639b27890388a99944658bf0d68", "Url": "https://api.github.com/repos/siziyman/lesson4", "Date": "2014-10-06T18:30:28Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((text.getText().length()) == 0) { }else { text.setText(text.getText().subSequence(0, ((text.getText().length()) - 1))); text.setSelection((pos - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4134/buggy-version/app.src.main.java.ru.ifmo.md.lesson4.CalculatorActivity.java", "BodyUseAPI": ["android.widget.EditText.getText()", "android.widget.EditText.setSelection(int)", "text.getText().subSequence(int,((text.getText().length()) - 1))", "android.widget.EditText.setText(text.getText().subSequence(0, ((text.getText().length()) - 1)))", "android.widget.EditText.getText()", "text.getText().length()"], "Fixed commit": "24b3ff2d2f098639b27890388a99944658bf0d68", "Url": "https://api.github.com/repos/siziyman/lesson4", "Date": "2014-10-06T18:30:28Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(blobEntry.getMimeType().startsWith(\"image/\"))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6113/buggy-version/src.main.java.com.pratilipi.data.util.PratilipiDocUtil.java", "BodyUseAPI": [], "Fixed commit": "c22d8900d9a01a3090dbb3d5f7b7c4e2e5ab7915", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-08-12T12:10:07Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getenv(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (strSDCardPath == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3480/buggy-version/utilities.src.main.java.org.md2k.utilities.FileManager.java", "BodyUseAPI": [], "Fixed commit": "47a41badc70a934ff7dfff0d3fb50e7b05ca1d87", "Url": "https://api.github.com/repos/MD2Korg/mCerebrum-Utilities", "Date": "2016-07-27T17:47:27Z"},
{"Line": "=>1801", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((result.get(i).getContentReportList()) != null) { flagType = result.get(i).getContentReportList().get(i); if (flagType.equals(\"not-loading\")) { getView().makeFlagButtonOrange(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3500/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.play.collection.CollectionPlayerPresenter.java", "BodyUseAPI": ["result.get(i).getContentReportList()", "java.util.ArrayList<org.ednovo.gooru.shared.model.content.ContentReportDo>.get(int)", "result.get(i).getContentReportList().get(int)"], "Fixed commit": "462100b22ffd3b473dff52b0dc9e6742a785a426", "Url": "https://api.github.com/repos/suryanarayanakb/Gooru-Web", "Date": "2014-11-12T10:02:35Z"},
{"Line": "=>692", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (expr instanceof compiler.phase.synan.Exprs) { for (int i = 0; i < (((compiler.phase.synan.Exprs) (expr)).numExprs()); i++) { list.add(((compiler.phase.synan.Exprs) (expr)).expr(i)); } }else list.add(expr);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/226/buggy-version/prg.src.compiler.phase.synan.SynAn.java", "BodyUseAPI": ["java.util.LinkedList<compiler.phase.synan.Expr>.add(compiler.phase.synan.Expr)"], "Fixed commit": "c41cbec32b5180489f3e4d9eb12f7921e826a21b", "Url": "https://api.github.com/repos/jbyte/fri-prev", "Date": "2016-03-27T15:32:28Z"},
{"Line": "=>1069", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((query.getSourceFilter()) != null) { com.github.vanroy.springdata.jest.SourceFilter sourceFilter = query.getSourceFilter(); searchSourceBuilder.fetchSource(sourceFilter.getIncludes(), sourceFilter.getExcludes()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5594/buggy-version/spring-data-jest.src.main.java.com.github.vanroy.springdata.jest.JestElasticsearchTemplate.java", "BodyUseAPI": ["com.github.vanroy.springdata.jest.Query.getSourceFilter()"], "Fixed commit": "47e7b6eb14e1c18930e19d0555c3976859300c0b", "Url": "https://api.github.com/repos/igelbox/spring-data-jest", "Date": "2016-11-21T23:25:45Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jdt.core.IType.getCompilationUnit()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (target == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3241/buggy-version/src.modularizator.NetworkReader.java", "BodyUseAPI": [], "Fixed commit": "d10abd28ab30bea6e46d3afc11ce6e08234cd44c", "Url": "https://api.github.com/repos/vahan/Modularizator", "Date": "2013-07-16T10:58:07Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentJob.getState()) != (State.WAITING)) { currentJob.changeStateTo(State.HALTED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3725/buggy-version/CPU.java", "BodyUseAPI": ["ProcessControlBlock.changeStateTo(State.HALTED)"], "Fixed commit": "bf730ad4cbc2d14c6bb72b29513474963b239505", "Url": "https://api.github.com/repos/EJEHardenberg/CPU-Schedule", "Date": "2012-12-03T06:46:27Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["webRequest.getCurrentRequest().getAttribute(GrailsApplicationAttributes.PAGE_SCOPE)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (currentBinding != null) { if (hasArgument) { originalIt = saveItVariable(currentBinding, args); } if ((args instanceof java.util.Map) && ((((java.util.Map) (args)).size()) > 0)) { savedVariablesMap = addAndSaveVariables(currentBinding, ((java.util.Map) (args))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5892/buggy-version/grails-web.src.main.groovy.org.codehaus.groovy.grails.web.taglib.GroovyPageTagBody.java", "BodyUseAPI": ["org.codehaus.groovy.grails.web.taglib.GroovyPageTagBody.saveItVariable(groovy.lang.Binding,java.lang.Object)", "org.codehaus.groovy.grails.web.taglib.GroovyPageTagBody.addAndSaveVariables(groovy.lang.Binding,java.lang.Object)"], "Fixed commit": "15b2fade2f2910603048dfdcb080b5821067b879", "Url": "https://api.github.com/repos/sarmbruster/grails-core", "Date": "2012-04-30T12:39:42Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["webRequest.getCurrentRequest().getAttribute(GrailsApplicationAttributes.PAGE_SCOPE)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (currentBinding != null) { restoreVariables(currentBinding, savedVariablesMap); if (hasArgument) { restoreItVariable(currentBinding, originalIt); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5892/buggy-version/grails-web.src.main.groovy.org.codehaus.groovy.grails.web.taglib.GroovyPageTagBody.java", "BodyUseAPI": ["org.codehaus.groovy.grails.web.taglib.GroovyPageTagBody.restoreItVariable(groovy.lang.Binding,java.lang.Object)", "org.codehaus.groovy.grails.web.taglib.GroovyPageTagBody.restoreVariables(groovy.lang.Binding,java.util.Map<java.lang.String, java.lang.Object>)"], "Fixed commit": "15b2fade2f2910603048dfdcb080b5821067b879", "Url": "https://api.github.com/repos/sarmbruster/grails-core", "Date": "2012-04-30T12:39:42Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(fileName.startsWith(\".\"))) { if (!(fileName.equals(((JFrost.srcName) + \".java\")))) { new FrostUtills().printFile(fileName, new FrostUtills().readFile(new java.io.File(filePath))); filesToBeCleaned.add(fileName); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2489/buggy-version/src.JFrost.java", "BodyUseAPI": ["FrostUtills.printFile(java.lang.String,new FrostUtills().readFile(new java.io.File(filePath)))", "java.util.ArrayList<java.lang.String>.add(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "b54b47b6ba4e094a084340be3c91ac384ae3d562", "Url": "https://api.github.com/repos/skellix/Frost", "Date": "2014-02-23T22:35:32Z"},
{"Line": "=>910", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((txEntry.type) == (com.orientechnologies.orient.core.db.record.ORecordOperation.CREATED)) || ((txEntry.type) == (com.orientechnologies.orient.core.db.record.ORecordOperation.UPDATED))) { final com.orientechnologies.orient.core.record.ORecord record = txEntry.getRecord(); if (record instanceof com.orientechnologies.orient.core.record.impl.ODocument) ((com.orientechnologies.orient.core.record.impl.ODocument) (record)).validate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2053/buggy-version/core.src.main.java.com.orientechnologies.orient.core.storage.impl.local.OAbstractPaginatedStorage.java", "BodyUseAPI": ["com.orientechnologies.orient.core.db.record.ORecordOperation.getRecord()"], "Fixed commit": "bc4a213d2c5250c8cebe260dd53beab7b9ad7b2f", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-03-11T02:40:20Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["soot.jimple.DefinitionStmt.getRightOp()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((ce.getOp()) == (source.getAccessPath().getPlainValue())) { if (!(getManager().getTypeUtils().checkCast(source.getAccessPath(), ce.getCastType()))) { killAll.value = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5320/buggy-version/src.soot.jimple.infoflow.problems.rules.TypingPropagationRule.java", "BodyUseAPI": ["soot.jimple.infoflow.data.Abstraction.getAccessPath()", "soot.jimple.CastExpr.getCastType()", "getManager().getTypeUtils().checkCast(source.getAccessPath(),ce.getCastType())"], "Fixed commit": "df140724f45feb987e70a5ef287af22f1bf5e2c6", "Url": "https://api.github.com/repos/secure-software-engineering/soot-infoflow", "Date": "2015-09-04T08:27:54Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sdkPackage.getStatus()) != null) { apiPackageToCreate.setStatus(new com.silanis.esl.sdk.internal.converter.PackageStatusConverter(sdkPackage.getStatus()).toAPIPackageStatus()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2109/buggy-version/sdk.src.main.java.com.silanis.esl.sdk.internal.converter.DocumentPackageConverter.java", "BodyUseAPI": ["com.silanis.esl.api.model.Package.setStatus(new com.silanis.esl.sdk.internal.converter.PackageStatusConverter(sdkPackage.getStatus()).toAPIPackageStatus())", "com.silanis.esl.sdk.internal.converter.DocumentPackage.getStatus()", "com.silanis.esl.sdk.internal.converter.PackageStatusConverter.toAPIPackageStatus()"], "Fixed commit": "a6824f149faf6ec4a4dcab2e6e199ffdc5cfc265", "Url": "https://api.github.com/repos/eSignLive/esl.sdk.java", "Date": "2015-06-17T20:01:59Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["view.getRoot().getRootRepositoryNode(curNode.getRepositoryObjectType())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (nodeFromType != null) { node = org.talend.repository.model.RepositoryNodeUtilities.getRepositoryNode(nodeFromType, curNode, view, expanded); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8745/buggy-version/main.plugins.org.talend.core.runtime.src.main.java.org.talend.repository.model.RepositoryNodeUtilities.java", "BodyUseAPI": ["org.talend.repository.model.RepositoryNodeUtilities.getRepositoryNode(org.talend.repository.model.IRepositoryNode,org.talend.core.model.repository.IRepositoryViewObject,org.talend.repository.ui.views.IRepositoryView,boolean)"], "Fixed commit": "7536956507760e6c89e31d26091d69b1e2f089c1", "Url": "https://api.github.com/repos/Talend/tcommon-studio-se", "Date": "2016-07-02T08:44:27Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (node == null) { node = org.talend.repository.model.RepositoryNodeUtilities.getRepositoryNode(((org.talend.repository.model.IRepositoryNode) (view.getRoot())), curNode, view, expanded); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8745/buggy-version/main.plugins.org.talend.core.runtime.src.main.java.org.talend.repository.model.RepositoryNodeUtilities.java", "BodyUseAPI": [], "Fixed commit": "7536956507760e6c89e31d26091d69b1e2f089c1", "Url": "https://api.github.com/repos/Talend/tcommon-studio-se", "Date": "2016-07-02T08:44:27Z"},
{"Line": "=>377", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Constants.ANDROID) { final java.lang.reflect.Method dbbFreeMethod = directByteBufferClass.getMethod(\"free\"); dbbFreeMethod.setAccessible(true); dbbFreeMethod.invoke(buffer); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2098/buggy-version/core.src.main.java.com.graphhopper.util.Helper.java", "BodyUseAPI": [], "Fixed commit": "24e14e3cfc2625c8145cfa246bce11b6908e3dde", "Url": "https://api.github.com/repos/devemux86/graphhopper", "Date": "2016-10-28T22:10:24Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Method.getReturnType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (java.lang.Runnable.class.isAssignableFrom(cleanerMethodReturnType)) { cleanMethod = cleanerMethodReturnType.getDeclaredMethod(\"run\"); }else { cleanMethod = cleanerMethodReturnType.getDeclaredMethod(\"clean\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2098/buggy-version/core.src.main.java.com.graphhopper.util.Helper.java", "BodyUseAPI": ["java.lang.Class<?>.getDeclaredMethod(java.lang.String)", "java.lang.Class<?>.getDeclaredMethod(java.lang.String)"], "Fixed commit": "24e14e3cfc2625c8145cfa246bce11b6908e3dde", "Url": "https://api.github.com/repos/devemux86/graphhopper", "Date": "2016-10-28T22:10:24Z"},
{"Line": "=>580", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.model.Jenkins.getInstance().getItemByFullName(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (job != null) { if (job.getClass().getName().equals(\"hudson.maven.MavenModule\")) continue; if ((r != null) && (!(r.matcher(job.getName()).find()))) continue; jobs.add(job); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7771/buggy-version/src.main.java.feup.pfaria.jenkins.plugins.filtereddashboardview.FilteredDashboardView.java", "BodyUseAPI": ["java.util.regex.Pattern.matcher(job.getName())", "java.util.regex.Matcher.find()", "job.getClass().getName().equals(java.lang.String)", "java.util.ArrayList<feup.pfaria.jenkins.plugins.filtereddashboardview.Job>.add(feup.pfaria.jenkins.plugins.filtereddashboardview.Job)", "feup.pfaria.jenkins.plugins.filtereddashboardview.Job.getClass()", "feup.pfaria.jenkins.plugins.filtereddashboardview.Job.getName()", "job.getClass().getName()"], "Fixed commit": "4f3fa9c44cf52835e926dab192a3788e81c09783", "Url": "https://api.github.com/repos/PedroDiasFaria/filtered-dashboard-view-plugin", "Date": "2017-01-23T13:10:56Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(wantedUser.anfragen.contains(((javafx.friendrequest.BugaBesucher) (jetzigerUser))))) { wantedUser.anfragen.add(((javafx.friendrequest.BugaBesucher) (jetzigerUser))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7002/buggy-version/src.javafx.friendrequest.FreundschaftsanfragenSendenController.java", "BodyUseAPI": ["wantedUser.anfragen.add(javafx.friendrequest.Benutzer)"], "Fixed commit": "f65e64552b4287505dd3411490535e0d86ee0f97", "Url": "https://api.github.com/repos/oludom/PMTSpiel", "Date": "2017-12-22T22:29:06Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (action.equals(\"getPackageName\")) { callbackContext.success(this.cordova.getActivity().getPackageName()); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2419/buggy-version/src.android.SignatureFingerprint.java", "BodyUseAPI": [], "Fixed commit": "1e2aca855ee36110d1a2838b7ea53492f66e0428", "Url": "https://api.github.com/repos/fontesoft/cordova-plugin-signature-fingerprint", "Date": "2017-08-02T01:46:16Z"},
{"Line": "=>617", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (gameWorld.sir.getInventoryArray().contains(gameWorld.spellbook)) { return \"You have already taken the spellbook!\"; }else { gameWorld.library.getArrayList().remove(gameWorld.spellbook); gameWorld.sir.addItem(gameWorld.spellbook); return \"You look into the book and you get this tingling feeling in your arms. You keep reading and in a split second your arms grows twice their normal size!\\n\" + \"You gain 3 Strength Points!\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/145/buggy-version/src.textadventure.TextArchive.java", "BodyUseAPI": ["gameWorld.sir.addItem(gameWorld.spellbook)", "gameWorld.library.getArrayList()", "gameWorld.library.getArrayList().remove(gameWorld.spellbook)"], "Fixed commit": "bbd2a19914a6b6bdb5e553c0ad7a75ac03c3e3a9", "Url": "https://api.github.com/repos/Melgaard/TextAdventure", "Date": "2014-12-02T12:48:01Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (el != null) { el = el.parent(); while ((el = el.nextElementSibling()) != null) { if (el.tagName().equals(\"p\")) { break; }else if (el.hasClass(\"mw-headline\")) { el = null; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3918/buggy-version/src.modules.Wikipedia.java", "BodyUseAPI": ["org.jsoup.nodes.Element.parent()"], "Fixed commit": "65a8a7db53eb418bbb0cf2e6970f30ef7ceac387", "Url": "https://api.github.com/repos/mrozekma/NoiseBot", "Date": "2016-06-22T07:27:10Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(isInEditMode())) { init(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1031/buggy-version/app.src.main.java.com.heroku.paulo10977.surface.VideoSurfaceView.java", "BodyUseAPI": [], "Fixed commit": "f51c00f74f9bf9b40dae81c09490baabef7412d6", "Url": "https://api.github.com/repos/paulo101977/MultimidiaCoursera", "Date": "2016-10-30T11:17:39Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(isInEditMode())) { init(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1031/buggy-version/app.src.main.java.com.heroku.paulo10977.surface.VideoSurfaceView.java", "BodyUseAPI": [], "Fixed commit": "f51c00f74f9bf9b40dae81c09490baabef7412d6", "Url": "https://api.github.com/repos/paulo101977/MultimidiaCoursera", "Date": "2016-10-30T11:17:39Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(isInEditMode())) { init(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1031/buggy-version/app.src.main.java.com.heroku.paulo10977.surface.VideoSurfaceView.java", "BodyUseAPI": [], "Fixed commit": "f51c00f74f9bf9b40dae81c09490baabef7412d6", "Url": "https://api.github.com/repos/paulo101977/MultimidiaCoursera", "Date": "2016-10-30T11:17:39Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(isInEditMode())) { init(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1031/buggy-version/app.src.main.java.com.heroku.paulo10977.surface.VideoSurfaceView.java", "BodyUseAPI": [], "Fixed commit": "f51c00f74f9bf9b40dae81c09490baabef7412d6", "Url": "https://api.github.com/repos/paulo101977/MultimidiaCoursera", "Date": "2016-10-30T11:17:39Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (filename == null) { throw new java.lang.IllegalArgumentException(\"Filename may not be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1196/buggy-version/Common.src.com.rgi.common.util.FileUtility.java", "BodyUseAPI": [], "Fixed commit": "673bdde9997112699a2efeb57666b0d6dbda40d3", "Url": "https://api.github.com/repos/GitHubRGI/swagd", "Date": "2015-03-18T12:44:08Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"default\".equals(values.get(\"type\"))) { data.add(key); }else { data.add(values.get(\"source\").toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5142/buggy-version/src.main.java.com.gfk.services.CSVAdapter.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.lang.Object.toString()"], "Fixed commit": "d75bb2163dfbe52a4e15009672f62df4c40f04ba", "Url": "https://api.github.com/repos/falsewasnottrue/madmapper-spring", "Date": "2017-01-25T11:00:42Z"},
{"Line": "=>801", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.BasicStroke.getDashArray()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (k != ((dash.length) - 1)) sb.append(' ');", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8460/buggy-version/neo-flying-saucer-pdfout.src.main.java.com.github.neoflyingsaucer.pdfout.PdfOutputDevice.java", "BodyUseAPI": [], "Fixed commit": "cdd6163eae13f50e608352463b2e5a1d6f7c7771", "Url": "https://api.github.com/repos/danfickle/neoflyingsaucer", "Date": "2014-11-03T05:48:09Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(textConfirm))) { confirmBtn.setText(textConfirm); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6341/buggy-version/library.src.main.java.com.bruce.pickerview.popwindow.DatePickerPopWin.java", "BodyUseAPI": ["android.widget.Button.setText(java.lang.String)"], "Fixed commit": "bb119cf5c6ca963c2b63af8996b3a594bd4cf531", "Url": "https://api.github.com/repos/brucetoo/PickView", "Date": "2016-09-03T01:57:13Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(textCancel))) { cancelBtn.setText(textCancel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6341/buggy-version/library.src.main.java.com.bruce.pickerview.popwindow.DatePickerPopWin.java", "BodyUseAPI": ["android.widget.Button.setText(java.lang.String)"], "Fixed commit": "bb119cf5c6ca963c2b63af8996b3a594bd4cf531", "Url": "https://api.github.com/repos/brucetoo/PickView", "Date": "2016-09-03T01:57:13Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (msg.getOrder().isSellOrder()) verifyUnfulfilledSellOrder();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6246/buggy-version/MiniTrader_US.src.main.java.mt.server.MicroServer_US.java", "BodyUseAPI": [], "Fixed commit": "b488af3e98b8ba7bdb423bfe89b6b877a4c5c449", "Url": "https://api.github.com/repos/mzioa-iscteiulpt/ES2-2017-METI-91-MiniTrader", "Date": "2017-05-17T16:06:25Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (msg.getOrder().isSellOrder()) verifyUnfulfilledSellOrder();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6246/buggy-version/MiniTrader_EU.src.main.java.mt.server.MicroServer_EU.java", "BodyUseAPI": [], "Fixed commit": "b488af3e98b8ba7bdb423bfe89b6b877a4c5c449", "Url": "https://api.github.com/repos/mzioa-iscteiulpt/ES2-2017-METI-91-MiniTrader", "Date": "2017-05-17T16:06:25Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numberOfGuessesLeft > 1) { message += \"es\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/125/buggy-version/src.com.waldm.mastermind.HumanPlayer.java", "BodyUseAPI": [], "Fixed commit": "f2fdfaf14cb60e77ad0c6568a9ec6ea46760efd7", "Url": "https://api.github.com/repos/dwally89/mastermind", "Date": "2013-08-31T23:02:51Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (amount < 0) { throw new java.lang.IllegalArgumentException((\"Amount must be > 0, currently is \" + amount)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3557/buggy-version/src.com.example.banking.SimpleBankingService.java", "BodyUseAPI": [], "Fixed commit": "afedf0a73c846ac765b2f07898c5d8434d7ae2c3", "Url": "https://api.github.com/repos/thenewcircle/class-3917", "Date": "2015-02-19T17:20:26Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["holder.getEntities().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((((t.getResolution()) != null) && (t.getResolution().isEmpty())) && (t.getStatus().equals(\"Fechado\"))) { isValid = false; m.setError(\"empty resolution\"); }else if (((t.getTitle()) != null) && (t.getTitle().isEmpty())) { isValid = false; m.setError(\"empty priority\"); }else if (((t.getType()) != null) && (t.getType().isEmpty())) { isValid = false; m.setError(\"empty type\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6537/buggy-version/src.java.br.com.hefesto.resources.impl.tickets.maintenance.rules.ValidateAndMergeTicketMaintenanceCommand.java", "BodyUseAPI": ["br.com.hefesto.domain.impl.Ticket.getTitle()", "br.com.hefesto.domain.impl.Ticket.getTitle()", "br.com.hefesto.domain.impl.Ticket.getType()", "t.getTitle().isEmpty()", "t.getType().isEmpty()", "br.com.hefesto.domain.impl.Ticket.getType()"], "Fixed commit": "3684883e4a265f7de3ce3f0b9ff7cc7bfb91a6d2", "Url": "https://api.github.com/repos/andtankian/wsbasestructure", "Date": "2017-06-27T10:55:34Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (journal.exists()) journal.delete();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4279/buggy-version/src.org.ankhzet.ergo.factories.ConnectionBuilder.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "98e650d3eb73bb39233c779d4a418b13850096a3", "Url": "https://api.github.com/repos/ankhzet/Ergo-java", "Date": "2015-08-17T03:30:32Z"},
{"Line": "=>514", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((audioRecord.getRecordingState()) == (android.media.AudioRecord.STATE_INITIALIZED)) { audioRecord.startRecording(); while (mIsRecording) { int audioDataBytes = audioRecord.read(audioData, 0, audioData.length); if (((android.media.AudioRecord.ERROR_INVALID_OPERATION) != audioDataBytes) && ((outputStreamAudio) != null)) { try { outputStreamAudio.write(audioData, 0, audioDataBytes); } catch (java.io.IOException e) { e.printStackTrace(); } } } audioRecord.stop(); audioRecord.release(); try { outputStreamAudio.flush(); outputStreamAudio.close(); } catch (java.io.IOException e) { e.printStackTrace(); } }else { android.util.Log.d(info.guardianproject.iocipher.camera.TAG, \"Failed to initialize AudioRecorder. Likely a device specific bug\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/952/buggy-version/src.info.guardianproject.iocipher.camera.VideoCameraActivity.java", "BodyUseAPI": ["android.media.AudioRecord.read(byte[],int,int)", "android.media.AudioRecord.release()", "android.media.AudioRecord.stop()", "android.media.AudioRecord.startRecording()"], "Fixed commit": "7921c2fbdd2ea4bda42674ca2f54db2f6dc9cee9", "Url": "https://api.github.com/repos/n8fr8/CameraCipher", "Date": "2015-04-05T08:40:09Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (idInput < 0) { java.lang.System.out.println(\"ID is less than 0\"); sample.ErrorWindow.createErrorWindow(\"Error: ID can't be less than 0\"); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1536/buggy-version/src.sample.Main.java", "BodyUseAPI": [], "Fixed commit": "743a1481fd1d3a596a9a8c3fe00a8fbb2fed61b4", "Url": "https://api.github.com/repos/Eros/StudnetGUI", "Date": "2017-05-13T14:01:58Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((notification.hasKey(\"errorMessage\")) && ((notification.getType(\"errorMessage\")) == (com.facebook.react.bridge.ReadableType.String))) { notificationConfig.setErrorMessage(notification.getString(\"errorMessage\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6470/buggy-version/android.src.main.java.com.vydia.UploaderModule.java", "BodyUseAPI": ["net.gotev.uploadservice.UploadNotificationConfig.setErrorMessage(notification.getString(\"errorMessage\"))", "com.facebook.react.bridge.WritableMap.getString(java.lang.String)"], "Fixed commit": "18d3205230760ca4a59125619aeedc43dca2578f", "Url": "https://api.github.com/repos/jpbarcia/react-native-background-upload", "Date": "2017-06-25T03:26:37Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((notification.hasKey(\"cancelledMessage\")) && ((notification.getType(\"cancelledMessage\")) == (com.facebook.react.bridge.ReadableType.String))) { notificationConfig.setCancelledMessage(notification.getString(\"cancelledMessage\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6470/buggy-version/android.src.main.java.com.vydia.UploaderModule.java", "BodyUseAPI": ["net.gotev.uploadservice.UploadNotificationConfig.setCancelledMessage(notification.getString(\"cancelledMessage\"))", "com.facebook.react.bridge.WritableMap.getString(java.lang.String)"], "Fixed commit": "18d3205230760ca4a59125619aeedc43dca2578f", "Url": "https://api.github.com/repos/jpbarcia/react-native-background-upload", "Date": "2017-06-25T03:26:37Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((notification.hasKey(\"inProgressMessage\")) && ((notification.getType(\"inProgressMessage\")) == (com.facebook.react.bridge.ReadableType.String))) { notificationConfig.setInProgressMessage(notification.getString(\"inProgressMessage\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6470/buggy-version/android.src.main.java.com.vydia.UploaderModule.java", "BodyUseAPI": ["net.gotev.uploadservice.UploadNotificationConfig.setInProgressMessage(notification.getString(\"inProgressMessage\"))", "com.facebook.react.bridge.WritableMap.getString(java.lang.String)"], "Fixed commit": "18d3205230760ca4a59125619aeedc43dca2578f", "Url": "https://api.github.com/repos/jpbarcia/react-native-background-upload", "Date": "2017-06-25T03:26:37Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((notification.hasKey(\"title\")) && ((notification.getType(\"title\")) == (com.facebook.react.bridge.ReadableType.String))) { notificationConfig.setTitle(notification.getString(\"title\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6470/buggy-version/android.src.main.java.com.vydia.UploaderModule.java", "BodyUseAPI": ["net.gotev.uploadservice.UploadNotificationConfig.setTitle(notification.getString(\"title\"))", "com.facebook.react.bridge.WritableMap.getString(java.lang.String)"], "Fixed commit": "18d3205230760ca4a59125619aeedc43dca2578f", "Url": "https://api.github.com/repos/jpbarcia/react-native-background-upload", "Date": "2017-06-25T03:26:37Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((notification.hasKey(\"completedMessage\")) && ((notification.getType(\"completedMessage\")) == (com.facebook.react.bridge.ReadableType.String))) { notificationConfig.setCompletedMessage(notification.getString(\"completedMessage\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6470/buggy-version/android.src.main.java.com.vydia.UploaderModule.java", "BodyUseAPI": ["net.gotev.uploadservice.UploadNotificationConfig.setCompletedMessage(notification.getString(\"completedMessage\"))", "com.facebook.react.bridge.WritableMap.getString(java.lang.String)"], "Fixed commit": "18d3205230760ca4a59125619aeedc43dca2578f", "Url": "https://api.github.com/repos/jpbarcia/react-native-background-upload", "Date": "2017-06-25T03:26:37Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((resources) != null) { resources.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7032/buggy-version/subprojects.core-impl.src.main.groovy.org.gradle.api.internal.artifacts.ivyservice.resolveengine.store.DefaultBinaryStore.java", "BodyUseAPI": [], "Fixed commit": "31e87c6435d17790e0df927862adb63ef51a7351", "Url": "https://api.github.com/repos/gradle/gradle", "Date": "2013-09-01T14:53:29Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((respData.getString(com.owncloud.android.lib.resources.users.GetRemoteUserInfoOperation.NODE_EMAIL)) != null) { userInfo.setEmail(respData.getString(com.owncloud.android.lib.resources.users.GetRemoteUserInfoOperation.NODE_EMAIL)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2290/buggy-version/src.com.owncloud.android.lib.resources.users.GetRemoteUserInfoOperation.java", "BodyUseAPI": ["com.owncloud.android.lib.common.UserInfo.setEmail(respData.getString(com.owncloud.android.lib.resources.users.GetRemoteUserInfoOperation.NODE_EMAIL))", "org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "2781df80cb774fe47df7a6f7078075078d8386f5", "Url": "https://api.github.com/repos/nextcloud/android-library", "Date": "2017-01-25T16:26:51Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.entity.Player.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((deathData.getString(playername)) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3044/buggy-version/src.me.kevinnovak.finddeathlocation.FindDeathLocation.java", "BodyUseAPI": [], "Fixed commit": "28bbe5d7e2d541af92ed91f9f7e0e0de8af54efc", "Url": "https://api.github.com/repos/KevinNovak/DeathFeathers", "Date": "2016-01-10T05:57:01Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.list(java.io.FilenameFilter)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (filePaths == null) filePaths = new java.lang.String[]{ };", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4723/buggy-version/src.main.me.ryanhamshire.ExtraHardMode.service.config.MultiWorldConfig.java", "BodyUseAPI": [], "Fixed commit": "79fa5f8341e64054f7aa65c2752024b48fc8a7f9", "Url": "https://api.github.com/repos/Di3mex/ExtraHardMode", "Date": "2013-04-28T14:20:54Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"mention\".equals(name)) { prefixes = new java.lang.String[]{ \"mention\", \"coref\" }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7403/buggy-version/src.edu.stanford.nlp.util.PropertiesUtils.java", "BodyUseAPI": [], "Fixed commit": "aaa59ca4a7eb9ee29f3947ab43ef524edc7c9889", "Url": "https://api.github.com/repos/stanfordnlp/CoreNLP", "Date": "2017-03-28T04:15:18Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.util.Calendar.getInstance().before(dateTime)) { android.content.Intent intent = new android.content.Intent(v.getContext(), com.team3.domore.AlarmReceiver.class); intent.putExtra(\"alarm_message\", \"This is an alarm!!!\"); android.app.PendingIntent sender = android.app.PendingIntent.getBroadcast(this, seed, intent, PendingIntent.FLAG_UPDATE_CURRENT); android.app.AlarmManager am = ((android.app.AlarmManager) (getSystemService(Context.ALARM_SERVICE))); am.set(AlarmManager.RTC_WAKEUP, dateTime.getTimeInMillis(), sender); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2101/buggy-version/src.com.team3.domore.AddAlarm.java", "BodyUseAPI": ["java.util.Calendar.getTimeInMillis()", "android.app.AlarmManager.set(AlarmManager.RTC_WAKEUP,long,android.app.PendingIntent)"], "Fixed commit": "88c9f0d3c42dcd6a7f249c61aa573e4f2d0ed311", "Url": "https://api.github.com/repos/h3ckman/DoMore", "Date": "2013-04-09T18:35:13Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (start < 0) { start = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1925/buggy-version/src.org.irc4j.server.ServerChannel.java", "BodyUseAPI": [], "Fixed commit": "4b3bb0fa27665b2c4fdf435f34b7534255165f48", "Url": "https://api.github.com/repos/ukiuni/irc4j", "Date": "2013-10-28T22:19:57Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((persistenceService.getCurrentNetwork().getMetadata()) != null) persistenceService.getCurrentNetwork().getMetadata().put(\"Format\", format);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/381/buggy-version/src.main.java.org.ndexbio.task.service.network.SIFNetworkService.java", "BodyUseAPI": ["org.ndexbio.task.service.network.SIFNetworkService.getCurrentNetwork()", "persistenceService.getCurrentNetwork().getMetadata().put(java.lang.String,java.lang.String)", "persistenceService.getCurrentNetwork().getMetadata()"], "Fixed commit": "5855f8f26b7cc8c3200af61e22c9168071ce0369", "Url": "https://api.github.com/repos/cytoscape/ndex-task", "Date": "2014-01-07T22:07:05Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.katzstudio.kreativity.ui.KrRectangles.rectangles(getGeometry()).shrink(getPadding()).value()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((innerViewport.getWidth()) > textWidth) { textOffset = 0; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1005/buggy-version/src.main.java.com.katzstudio.kreativity.ui.component.KrTextField.java", "BodyUseAPI": [], "Fixed commit": "9651dd2dbafcdc10b1fd49ae6c6f7d24c6783a4d", "Url": "https://api.github.com/repos/alexpana/kreativity-ui", "Date": "2016-02-28T08:20:30Z"},
{"Line": "=>1027", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(_manInit)) { java.lang.String text = _controller.helpRequest(); javax.swing.text.Document doc = _helpText.getDocument(); try { doc.insertString(doc.getLength(), text, null); _manInit = true; } catch (javax.swing.text.BadLocationException e) { } _helpText.setEditable(false); _helpText.setFont(new java.awt.Font(java.awt.Font.MONOSPACED, 1, 12)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4350/buggy-version/QvMeas_0.2.src.main.Window.java", "BodyUseAPI": [], "Fixed commit": "21e74875fac50fc72a280f848a0606970e6f05a6", "Url": "https://api.github.com/repos/samooja316/QvMeas_0.2", "Date": "2015-08-18T07:16:21Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tbrp.fileNamePattern.getPrimaryDateTokenConverter()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((dtc.getTimeZone()) != null) { rc = new ch.qos.logback.core.rolling.helper.RollingCalendar(dtc.getTimeZone(), java.util.Locale.getDefault()); }else { rc = new ch.qos.logback.core.rolling.helper.RollingCalendar(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4451/buggy-version/logback-core.src.main.java.ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicyBase.java", "BodyUseAPI": ["ch.qos.logback.core.rolling.helper.DateTokenConverter.getTimeZone()"], "Fixed commit": "077e45c8f71045d75519e9c059ecbd1faee5cd09", "Url": "https://api.github.com/repos/s4nk/logback", "Date": "2015-03-18T15:24:33Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentStep.isTest()) (testCounter)++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1509/buggy-version/src.main.java.de.codecentric.jbehave.junit.monitoring.JUnitScenarioReporter.java", "BodyUseAPI": [], "Fixed commit": "cd3c168e2304fc3decfcbed9f080183c6566ccbb", "Url": "https://api.github.com/repos/codecentric/jbehave-junit-runner", "Date": "2012-05-29T17:49:13Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentStoryDescription.isTest()) (testCounter)++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1509/buggy-version/src.main.java.de.codecentric.jbehave.junit.monitoring.JUnitScenarioReporter.java", "BodyUseAPI": [], "Fixed commit": "cd3c168e2304fc3decfcbed9f080183c6566ccbb", "Url": "https://api.github.com/repos/codecentric/jbehave-junit-runner", "Date": "2012-05-29T17:49:13Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["slib.sglib.model.graph.G.getV(SLIBVOC.THING_OWL)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (universalRoot == null) { org.openrdf.model.URI universalRootURI = factory.createURI(SLIBVOC.THING_OWL.stringValue()); universalRoot = graph.addV(new slib.sglib.model.impl.graph.elements.VertexTyped(graph, universalRootURI, slib.sglib.model.graph.elements.type.VType.CLASS)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/73/buggy-version/sglib.sglib-io.src.main.java.slib.sglib.io.loader.bio.mesh.GraphLoader_MESH_XML.java", "BodyUseAPI": [], "Fixed commit": "512fc783eb775871c652414b894b84c21b5ac4b4", "Url": "https://api.github.com/repos/sharispe/slib", "Date": "2013-03-08T18:56:09Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pack.isLocalOnly()) || ((pack.getInfo()) != null)) { label.setText(pack.getDisplayName()); label.setVisible(((!(pack instanceof net.technicpack.launchercore.install.AddPack)) && (!(pack.hasLogo())))); }else { label.setVisible(((((pack.getInfo()) == null) || (!(pack.hasLogo()))) && (!(pack instanceof net.technicpack.launchercore.install.AddPack)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4824/buggy-version/src.main.java.org.spoutcraft.launcher.skin.components.PackButton.java", "BodyUseAPI": ["net.technicpack.launchercore.install.InstalledPack.getDisplayName()", "javax.swing.JLabel.setVisible(((((pack.getInfo()) == null) || (!(pack.hasLogo()))) && (!(pack instanceof net.technicpack.launchercore.install.AddPack))))", "net.technicpack.launchercore.install.InstalledPack.hasLogo()", "javax.swing.JLabel.setText(pack.getDisplayName())", "net.technicpack.launchercore.install.InstalledPack.hasLogo()", "javax.swing.JLabel.setVisible(((!(pack instanceof net.technicpack.launchercore.install.AddPack)) && (!(pack.hasLogo()))))", "net.technicpack.launchercore.install.InstalledPack.getInfo()"], "Fixed commit": "1ea3037604beb0091dede76de4cd50f568208c3b", "Url": "https://api.github.com/repos/Energy0124/SpoutcraftLauncher", "Date": "2013-10-26T06:56:06Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.getTime()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((event.getDateEnd().getTime()) >= (atm.getTime())) { final android.os.Handler handler = new android.os.Handler(); handler.postDelayed(new java.lang.Runnable() { @java.lang.Override public void run() { ((fr.insapp.insapp.EventActivity) (getActivity())).getFloatingActionMenu().showMenu(true); } }, 500); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4230/buggy-version/app.src.main.java.fr.insapp.insapp.fragments.CommentsEventFragment.java", "BodyUseAPI": [], "Fixed commit": "b290ad4f4929c633da6aac99cb82e597abd671e2", "Url": "https://api.github.com/repos/thomas-bouvier/insapp-android", "Date": "2017-03-07T07:55:33Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((health) > 0) { (counter)++; if ((counter) == (tickDivider)) { counter = 0; roadToNotice.stepMe(this); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6651/buggy-version/src.model.enemies.EnemyUnit.java", "BodyUseAPI": [], "Fixed commit": "151428a90122dff61b22a8b6c2ae67b27e9ed617", "Url": "https://api.github.com/repos/m2kohand/Szoftlab4", "Date": "2014-05-11T21:56:43Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (fileInputStream != null) { byte[] imgByte = null; imgByte = org.apache.commons.io.IOUtils.toByteArray(fileInputStream); byte[] encodedImage = org.apache.commons.codec.binary.Base64.encodeBase64(imgByte); encodeImg = new java.lang.String(encodedImage); com.photon.phresco.service.admin.actions.Login.s_encodeImgMap.put(getCustomerId(), encodeImg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1424/buggy-version/phresco-service-web.src.main.java.com.photon.phresco.service.admin.actions.Login.java", "BodyUseAPI": ["org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)"], "Fixed commit": "601a185191ade4396277957324ccf3731a7455c7", "Url": "https://api.github.com/repos/phresco/service", "Date": "2013-04-29T15:17:21Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mongodb.gridfs.GridFS.findOne(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (imageForOutput != null) { inputStream = imageForOutput.getInputStream(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1424/buggy-version/phresco-service-impl.src.main.java.com.photon.phresco.service.impl.DbService.java", "BodyUseAPI": ["com.mongodb.gridfs.GridFSDBFile.getInputStream()"], "Fixed commit": "601a185191ade4396277957324ccf3731a7455c7", "Url": "https://api.github.com/repos/phresco/service", "Date": "2013-04-29T15:17:21Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.World.getTileEntity(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tileEntity instanceof mcjty.rftools.blocks.screens.ScreenTileEntity) { mcjty.rftools.blocks.screens.ScreenTileEntity screenTileEntity = ((mcjty.rftools.blocks.screens.ScreenTileEntity) (tileEntity)); if (screenTileEntity.isLarge()) { setInvisibleBlocks(world, x, y, z); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6/buggy-version/src.main.java.mcjty.rftools.blocks.screens.ScreenBlock.java", "BodyUseAPI": [], "Fixed commit": "5e8cfb51af935d10460a5244a09836d327a06077", "Url": "https://api.github.com/repos/McJtyMods/RFTools", "Date": "2015-06-02T06:47:34Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["EditTextZipcode.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tempStr.isEmpty()) { android.widget.Toast.makeText(getApplicationContext(), \"Please enter valid zipcode\", Toast.LENGTH_LONG).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7346/buggy-version/app.src.main.java.fishlinghu.sporttogether.CreateChatroomActivity.java", "BodyUseAPI": [], "Fixed commit": "f9ea0b9d4540ab493dc7a5ed380d906abb0aed52", "Url": "https://api.github.com/repos/fishlinghu/SportTogether", "Date": "2017-04-14T20:22:59Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(wrapped.equals(bridge))) { bridge.setTarget(wrapped); }else { bridge.setTarget(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3898/buggy-version/camel-core.src.main.java.org.apache.camel.processor.interceptor.DefaultChannel.java", "BodyUseAPI": ["org.apache.camel.processor.InterceptorToAsyncProcessorBridge.setTarget(<nulltype>)", "org.apache.camel.processor.InterceptorToAsyncProcessorBridge.setTarget(org.apache.camel.Processor)"], "Fixed commit": "8c3bcf4750560c97636e88085e459c96d8038a3b", "Url": "https://api.github.com/repos/sebi-hgdata/camel", "Date": "2015-05-21T03:20:13Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bucketListToRead) != null) { bucketListToRead.markEOF(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8569/buggy-version/flink-runtime.src.main.java.org.apache.flink.runtime.state.hybrid.MemFsListState.java", "BodyUseAPI": [], "Fixed commit": "4ccc9d7b8b6017566b9362b09a0ed5d53524c26a", "Url": "https://api.github.com/repos/sesteves/flink", "Date": "2017-01-08T01:11:15Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.currentTime) == (this.totoalTime)) { this.cx = (this.x) + (this.dx); this.cy = (this.y) + (this.dy); ++(this.currentTime); return true; }else { this.cx = interpolator(currentTime, x, dx, totoalTime); this.cy = interpolator(currentTime, y, dy, totoalTime); ++(this.currentTime); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6261/buggy-version/src.com.iteye.weimingtom.tween.SimpleTweener.java", "BodyUseAPI": [], "Fixed commit": "08efa3dc8c1b819ffd0a6fddbfd00a2bbbb8f0c5", "Url": "https://api.github.com/repos/weimingtom/FireTreeFrame", "Date": "2013-12-09T15:15:05Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.excilys.dao.ComputerDAO.getSizeTable()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (computersLong < (page * 15)) { slf4jLogger.info(\"Bad parameter for size\"); response.sendError(HttpServletResponse.SC_BAD_REQUEST); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1642/buggy-version/src.main.java.com.excilys.controller.Dashboard.java", "BodyUseAPI": [], "Fixed commit": "1bbfd7c596971d727f1e89322242724245dba4e7", "Url": "https://api.github.com/repos/Mealya/ComputerDatabase", "Date": "2016-04-28T12:21:36Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((curAction) == (com.mygdx.game.KittensGame.RIGHT)) && ((kat.getSideCurAction()) == (com.mygdx.game.KittensGame.RIGHT))) { x += speed; }else if (((curAction) == (com.mygdx.game.KittensGame.LEFT)) && ((kat.getSideCurAction()) == (com.mygdx.game.KittensGame.LEFT))) { x -= speed; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4708/buggy-version/Kittens.core.src.com.mygdx.game.KittensGame.java", "BodyUseAPI": ["com.mygdx.game.KittensGame.Kitten.getSideCurAction()"], "Fixed commit": "6f069ff2033037a6fc059a7e5a688a19bd6a087b", "Url": "https://api.github.com/repos/P-Saha/KittensGame", "Date": "2017-06-16T18:27:48Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gsm.currentState) != 0) { quitFont.drawWrapped(batch, \"Do you want to exit to the main menu?\", ((Gdx.graphics.getWidth()) / 12), ((9 * (Gdx.graphics.getHeight())) / 12), ((10 * (Gdx.graphics.getWidth())) / 12), BitmapFont.HAlignment.CENTER); }else { quitFont.drawWrapped(batch, \"Do you want to exit the game?\", ((Gdx.graphics.getWidth()) / 12), ((9 * (Gdx.graphics.getHeight())) / 12), ((10 * (Gdx.graphics.getWidth())) / 12), BitmapFont.HAlignment.CENTER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4701/buggy-version/core.src.com.collidge.MyGdxGame.java", "BodyUseAPI": [], "Fixed commit": "3a7779f6041c4a9e3c09c68f11745d200eb61cfb", "Url": "https://api.github.com/repos/vanhoutk/Collidge", "Date": "2015-03-28T16:35:30Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.azoft.carousellayoutmanager.CarouselLayoutManager.INVALID_POSITION) == (mPendingScrollPosition)) && (null == (mPendingCarouselSavedState))) { mPendingScrollPosition = mCenterItemPosition; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2586/buggy-version/CarouselLayoutManager.carousel.src.main.java.com.azoft.carousellayoutmanager.CarouselLayoutManager.java", "BodyUseAPI": [], "Fixed commit": "1dd7308d80317c5a8f14d29a63af4241f3d24062", "Url": "https://api.github.com/repos/Azoft/CarouselLayoutManager", "Date": "2016-06-10T08:57:05Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (specification == null) { specification = org.crosswire.common.util.Language.DEFAULT_LANG_CODE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5688/buggy-version/src.main.java.org.crosswire.common.util.Language.java", "BodyUseAPI": [], "Fixed commit": "be9add678ee8fc886df4458f45e140edc196f7df", "Url": "https://api.github.com/repos/tyndale/jsword", "Date": "2013-02-12T20:55:18Z"},
{"Line": "=>8", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (taskArguments.equals(\"\")) { return new java.lang.String[]{ \"\", \"\" }; }else if (taskArguments.contains(\"to\")) { int toIndex = taskArguments.indexOf(\"to\"); java.lang.String startDateTime = taskArguments.substring(0, toIndex).trim(); java.lang.String endDateTime = taskArguments.substring((toIndex + 2)).trim(); return new java.lang.String[]{ startDateTime, endDateTime }; }else { return new java.lang.String[]{ \"\", taskArguments.trim() }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4454/buggy-version/src.main.java.tars.commons.util.DateTimeUtil.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.contains(java.lang.String)", "java.lang.String.trim()", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.trim()", "java.lang.String.trim()"], "Fixed commit": "a0ab6ac796ba1b0f22d108e4628a50dd82a6679d", "Url": "https://api.github.com/repos/CS2103AUG2016-F10-C1/main", "Date": "2016-10-09T16:30:24Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(scopeManager.isEmpty())) { org.eclipse.imp.pdb.facts.ISourceLocation parent = getParent(); if (!(parent.isEqual(dependency))) { insert(typeDependency, parent, dependency); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3534/buggy-version/src.org.rascalmpl.library.lang.java.m3.internal.M3Converter.java", "BodyUseAPI": [], "Fixed commit": "a3386adf988e1553564fa5fc76f7a463e96eb52f", "Url": "https://api.github.com/repos/cwi-swat/rascal", "Date": "2013-09-10T21:21:47Z"},
{"Line": "=>1955", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jtextfieldCallsign.getText().isEmpty()) { pressedF1(); }else { pressedF5(); pressedF2(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3031/buggy-version/src.main.java.org.lz1aq.lzhfqrp.MainWindow.java", "BodyUseAPI": [], "Fixed commit": "8c0107ff6c41fc545af02a9a56730e8de1b7fe8d", "Url": "https://api.github.com/repos/potty-dzmeia/jatu", "Date": "2017-06-01T21:36:48Z"},
{"Line": "=>490", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["netapp.manage.NaElement.getChildContent(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((currentTransferError != null) && (!(currentTransferError.isEmpty()))) { snapMirrorResp.setCurrentTransferError(currentTransferError); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4318/buggy-version/vipr-portal.com.iwave.ext.netappc.src.java.com.iwave.ext.netappc.SnapMirror.java", "BodyUseAPI": ["com.iwave.ext.netappc.model.SnapmirrorInfoResp.setCurrentTransferError(java.lang.String)"], "Fixed commit": "c098ba8178c0f32557279da416fbcd772b4aa8dd", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-05-22T05:06:15Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((!(Screen.getText().toString().equals(\"0.0\"))) && (!(Screen.getText().toString().equals(\"0\")))) && (!(Screen.getText().toString().equals(\"\")))) { double number = java.lang.Double.parseDouble(Screen.getText().toString()); number = number * (-1); Screen.setText((number + \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8311/buggy-version/app.src.main.java.com.example.faisal.assignmnet2.MainActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)", "Screen.getText().toString()", "android.widget.TextView.getText()", "java.lang.Double.parseDouble(Screen.getText().toString())"], "Fixed commit": "42a4acb9c7e23941273a42de558abf93e8b680fb", "Url": "https://api.github.com/repos/FaisalShehada/Assignment2", "Date": "2016-03-24T16:27:44Z"},
{"Line": "=>429", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (token.isString()) { java.lang.String label = token.getStringValue(); if ((label != null) && (((label = label.trim()).length()) > 0)) { if (bio == (BuiltinOperator.ColRefOper)) { ref = getTable().getColumn(Access.ByLabel, label); refType = org.tms.api.derivables.TokenType.ColumnRef; }else if (bio == (BuiltinOperator.RowRefOper)) { ref = getTable().getRow(Access.ByLabel, label); refType = org.tms.api.derivables.TokenType.RowRef; } if ((ref != null) && (refType != null)) return new org.tms.api.derivables.Token(refType, ref); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1478/buggy-version/src.src.org.tms.teq.PostfixStackEvaluator.java", "BodyUseAPI": ["org.tms.api.derivables.Token.getStringValue()"], "Fixed commit": "1a56db4ffe37ca1bf7c05c38e8ea74c8e0c53c37", "Url": "https://api.github.com/repos/cdswindell/tms", "Date": "2015-04-06T02:41:34Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bitdubai.fermat_p2p_plugin.layer.communications.network.node.developer.bitdubai.version_1.structure.database.jpa.daos.JPADaoFactory.getActorCatalogDao().findById(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((actor.getSession()) != null) { clientDestination = clientsSessionMemoryCache.get(actor.getClient().getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3424/buggy-version/P2P.plugin.communication.fermat-p2p-plugin-communication-network-node-bitdubai.src.main.java.com.bitdubai.fermat_p2p_plugin.layer.communications.network.node.developer.bitdubai.version_1.structure.channels.processors.clients.MessageTransmitProcessor.java", "BodyUseAPI": ["com.bitdubai.fermat_p2p_plugin.layer.communications.network.node.developer.bitdubai.version_1.structure.channels.caches.ClientsSessionMemoryCache.get(actor.getClient().getId())", "actor.getClient().getId()", "com.bitdubai.fermat_p2p_plugin.layer.communications.network.node.developer.bitdubai.version_1.structure.database.jpa.entities.ActorCatalog.getClient()"], "Fixed commit": "892fa955a16dd6bd85c2808c404a2ff8e2854629", "Url": "https://api.github.com/repos/Rart3001/fermat", "Date": "2016-07-29T19:07:19Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fuserMonsterCard.equals(this)) { throw new java.lang.IllegalArgumentException(\"it is not possible to fuse with yourself\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/202/buggy-version/src.com.skiwi.tcg.model.cards.MonsterCard.java", "BodyUseAPI": [], "Fixed commit": "9c7fe9437e51c5e775f8e61b903bb9f0d2df292d", "Url": "https://api.github.com/repos/skiwi2/TCG", "Date": "2014-05-30T15:07:49Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.commcare.dalvik.BuildConfig.DEBUG) { android.util.Log.v(org.commcare.android.fragments.SetupEnterURLFragment.TAG, (((\"Selected prefix: \" + selectedPrefix) + \", selected item is: \") + (prefixURLSpinner.getSelectedItem()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/706/buggy-version/app.src.org.commcare.android.fragments.SetupEnterURLFragment.java", "BodyUseAPI": [], "Fixed commit": "d97225edfa42c8b59868a50a1e00c5307416c5dc", "Url": "https://api.github.com/repos/dimagi/commcare-android", "Date": "2015-07-08T19:59:14Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.commcare.dalvik.BuildConfig.DEBUG) { if (!(prefixURLSpinner.getSelectedItem().toString().equalsIgnoreCase(\"raw\"))) { throw new java.lang.AssertionError(\"Last choice should be 'Raw'\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/706/buggy-version/app.src.org.commcare.android.fragments.SetupEnterURLFragment.java", "BodyUseAPI": [], "Fixed commit": "d97225edfa42c8b59868a50a1e00c5307416c5dc", "Url": "https://api.github.com/repos/dimagi/commcare-android", "Date": "2015-07-08T19:59:14Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (pattern == null) pattern = term();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/552/buggy-version/src.loop.Parser.java", "BodyUseAPI": [], "Fixed commit": "f664ff448f3cd1ad20f2432181ed0c0edcadba12", "Url": "https://api.github.com/repos/dhanji/loop", "Date": "2011-10-24T10:15:54Z"},
{"Line": "=>479", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.teavm.eclipse.IWorkspaceRoot.findMember(entry.getOutputLocation())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (res != null) { collector.addPath(res.getLocation()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5496/buggy-version/teavm-eclipse.teavm-eclipse-plugin.src.main.java.org.teavm.eclipse.TeaVMProjectBuilder.java", "BodyUseAPI": ["org.teavm.eclipse.TeaVMProjectBuilder.PathCollector.addPath(res.getLocation())", "org.teavm.eclipse.IResource.getLocation()"], "Fixed commit": "5b59c7aa665af9c6aec950c1ea1aece15704c45d", "Url": "https://api.github.com/repos/konsoletyper/teavm", "Date": "2014-11-03T16:39:05Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((pos[0]) >= 0) && ((pos[1]) >= 0)) pos[2] = -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3117/buggy-version/src-plugins.Cell_Blob_Tracking.blobTracking.BlobPolicy.java", "BodyUseAPI": [], "Fixed commit": "b94eaf37a94d4caaae32838f82e06a4695e45515", "Url": "https://api.github.com/repos/alex-krull/fiji", "Date": "2012-04-26T07:32:34Z"},
{"Line": "=>631", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mostRecentOpenTime) == null) { if (optionBacktest) { java.util.Calendar result = dbio.BacktestQueryManager.backtestGetMostRecentFilledTime(); if (result != null) { mostRecentOpenTime = java.util.Calendar.getInstance(); mostRecentOpenTime.setTimeInMillis(result.getTimeInMillis()); } }else { java.util.Calendar result = dbio.IBQueryManager.getMostRecentFilledTime(); if (result != null) { mostRecentOpenTime = java.util.Calendar.getInstance(); mostRecentOpenTime.setTimeInMillis(result.getTimeInMillis()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8893/buggy-version/src.trading.engines.IBEngine1.java", "BodyUseAPI": [], "Fixed commit": "b7ee0e01cdb5209e1cfc452a853e92fc64a7f389", "Url": "https://api.github.com/repos/MatthewPDingle/CSCSPMonitor", "Date": "2016-07-23T02:22:57Z"},
{"Line": "=>468", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((att.getAttributeValues().size()) == 2) { abstractAttribute.setNonLatinScript(att.getAttributeValues().get(1).getDOM().getTextContent()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5227/buggy-version/src.main.java.eidassaml.starterkit.EidasResponse.java", "BodyUseAPI": ["att.getAttributeValues().get(1).getDOM().getTextContent()", "att.getAttributeValues().get(1).getDOM()", "org.opensaml.saml.saml2.core.Attribute.getAttributeValues()", "eidassaml.starterkit.person_attributes.AbstractNonLatinScriptAttribute.setNonLatinScript(att.getAttributeValues().get(1).getDOM().getTextContent())", "att.getAttributeValues().get(int)"], "Fixed commit": "5070774ef2fa5c09777fedc46712f1051fa27d0a", "Url": "https://api.github.com/repos/Dictu/eIDAS-Node-SDK-3", "Date": "2017-06-14T13:40:13Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mapA == null) && (mapB == null)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6797/buggy-version/corelib-storage.src.main.java.eu.europeana.corelib.edm.utils.MongoUtils.java", "BodyUseAPI": [], "Fixed commit": "44b1ef2d02f02d36b3ba0fe15dba93916d5a2b2a", "Url": "https://api.github.com/repos/europeana/corelib", "Date": "2015-06-03T12:48:55Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (valueObj instanceof de.metas.ui.web.window.datatypes.LookupValue.IntegerLookupValue) { return ((de.metas.ui.web.window.datatypes.LookupValue.IntegerLookupValue) (valueObj)).getIdAsInt(); }else { final java.lang.String valueStr = valueObj.toString().trim(); if (valueStr.isEmpty()) { return null; } return java.lang.Integer.parseInt(valueStr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6670/buggy-version/metasfresh-webui-api.src.main.java.de.metas.ui.web.window.model.DocumentEvaluatee.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.lang.String.trim()"], "Fixed commit": "d5e7dff13936a34e1129e3607d97a099363b9775", "Url": "https://api.github.com/repos/metasfresh/metasfresh-webui-api", "Date": "2016-09-21T13:49:58Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<org.bukkit.entity.Player, net.crunkle.barbar.api.tasks.UpdateTask>.get(org.bukkit.entity.Player)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (updateTask == null) { updateTask.cancel(); this.tasks.remove(player); com.comphenix.packetwrapper.WrapperPlayServerEntityDestroy entityDestroy = new com.comphenix.packetwrapper.WrapperPlayServerEntityDestroy(); entityDestroy.setEntities(new int[]{ -1 }); entityDestroy.sendPacket(player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8269/buggy-version/src.main.java.net.crunkle.barbar.api.BarBarAPI.java", "BodyUseAPI": ["net.crunkle.barbar.api.tasks.UpdateTask.cancel()"], "Fixed commit": "13341337a0d6bdab75ca8737b45c32fff6a65736", "Url": "https://api.github.com/repos/Crunkle/cBarBar", "Date": "2014-09-08T21:31:50Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (desktop.isSupported(java.awt.Desktop.Action.APP_SUDDEN_TERMINATION)) { desktop.disableSuddenTermination(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3120/buggy-version/src.LaserCut.java", "BodyUseAPI": [], "Fixed commit": "db077a75a82d940f746f2437a00c84e1bed438c6", "Url": "https://api.github.com/repos/wholder/LaserCut", "Date": "2017-10-13T00:46:49Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((config.getListenAddress()) != null) chf = b.bind(config.getListenAddress(), config.getListenPort()); else chf = b.bind(config.getListenPort());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3403/buggy-version/src.netty.com.syncobjects.as.netty.ServerImpl.java", "BodyUseAPI": ["io.netty.bootstrap.ServerBootstrap.bind(config.getListenPort())", "com.syncobjects.as.core.ServerConfig.getListenPort()", "com.syncobjects.as.core.ServerConfig.getListenPort()", "io.netty.bootstrap.ServerBootstrap.bind(config.getListenAddress(),config.getListenPort())", "com.syncobjects.as.core.ServerConfig.getListenAddress()"], "Fixed commit": "ab3eb291804ad433d89fe816ca54b2d13fd6d9e8", "Url": "https://api.github.com/repos/syncobjects/sync", "Date": "2016-03-13T15:10:46Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((target.getClass()) == (new my_game.models.game_components.ShipUnit().getClass())) { tempShip = ((my_game.models.game_components.ShipUnit) (target)).getShip(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1426/buggy-version/BattleshipsGame.src.my_game.models.ships_impl.TorpedoBoat.java", "BodyUseAPI": [], "Fixed commit": "d50eee1db7e801d4d70795ff1ea53a8ff70b9d4e", "Url": "https://api.github.com/repos/dWarf-In-thE-FlaSk/Proj_361", "Date": "2014-04-09T16:14:01Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((target.getClass()) == (new my_game.models.game_components.MidUnit().getClass())) { tempShip = ((my_game.models.game_components.MidUnit) (target)).getShip(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1426/buggy-version/BattleshipsGame.src.my_game.models.ships_impl.TorpedoBoat.java", "BodyUseAPI": [], "Fixed commit": "d50eee1db7e801d4d70795ff1ea53a8ff70b9d4e", "Url": "https://api.github.com/repos/dWarf-In-thE-FlaSk/Proj_361", "Date": "2014-04-09T16:14:01Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!flag) throw new java.lang.AssertionError();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7304/buggy-version/GtfTransform.java", "BodyUseAPI": [], "Fixed commit": "96e0ae1a21fcc791a383db53bccd7f2caeab68c0", "Url": "https://api.github.com/repos/ttgump/GtfTransform", "Date": "2015-08-14T19:34:01Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (request.hasSessionId()) { session = com.orange.game.traffic.model.manager.GameSessionAllocationManager.getInstance().allocSession(userId, ((int) (request.getSessionId()))); }else { java.util.Set<java.lang.Integer> excludeSessionSet = new java.util.HashSet<java.lang.Integer>(); if (request.getJoinGameRequest().hasSessionToBeChange()) { com.orange.game.traffic.model.dao.GameSession oldSession = com.orange.game.traffic.server.GameEventExecutor.getInstance().getSessionManager().findSessionById(((int) (request.getJoinGameRequest().getSessionToBeChange()))); com.orange.game.traffic.server.GameEventExecutor.getInstance().getSessionManager().userQuitSession(oldSession, userId, true, false); java.util.List<java.lang.Long> list = joinRequest.getExcludeSessionIdList(); if (list != null) { for (java.lang.Long i : list) { excludeSessionSet.add(i.intValue()); } } } session = com.orange.game.traffic.model.manager.GameSessionAllocationManager.getInstance().allocSession(userId, excludeSessionSet); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7859/buggy-version/src.com.orange.game.draw.messagehandler.DrawJoinGameRequestHandler.java", "BodyUseAPI": ["request.getJoinGameRequest().hasSessionToBeChange()", "com.orange.network.game.protocol.message.GameMessageProtos.GameMessage.getJoinGameRequest()", "com.orange.game.traffic.model.manager.GameSessionAllocationManager.getInstance().allocSession(java.lang.String,((int) (request.getSessionId())))", "com.orange.network.game.protocol.message.GameMessageProtos.GameMessage.getSessionId()", "com.orange.network.game.protocol.message.GameMessageProtos.GameMessage.getJoinGameRequest()", "com.orange.game.traffic.server.GameEventExecutor.getInstance().getSessionManager().findSessionById(((int) (request.getJoinGameRequest().getSessionToBeChange())))", "request.getJoinGameRequest().getSessionToBeChange()"], "Fixed commit": "575a27591ec57d7a9ccbbee1d87c67158d4e22db", "Url": "https://api.github.com/repos/gckjdev/DrawGameServer", "Date": "2013-01-23T08:38:46Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.watabou.pixeldungeon.items.scrolls.Scroll.createRandomScroll().collect())) { Dungeon.level.drop(scroll, Dungeon.hero.pos).sprite.drop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4854/buggy-version/src.com.watabou.pixeldungeon.items.Stylus.java", "BodyUseAPI": [], "Fixed commit": "329dfe84af46eeadcc1298bd2f6a7403b8eec0a5", "Url": "https://api.github.com/repos/NYRDS/pixel-dungeon-remix", "Date": "2015-03-09T18:03:23Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((appBarTop) == (java.lang.Integer.MAX_VALUE)) { appBarTop = dependency.getTop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/872/buggy-version/app.src.main.java.com.zfdang.zsmth_android.helpers.CustomScrollingViewBehavior.java", "BodyUseAPI": [], "Fixed commit": "99f31591cb66d6b6608de5f074d87770e17527d6", "Url": "https://api.github.com/repos/zfdang/zSMTH-Android", "Date": "2016-12-10T12:47:19Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.text.SimpleDateFormat.format(java.util.Date)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ret.equals(\"31/12/1969\")) { ret = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4054/buggy-version/desktop.src.restaurante.Utils.java", "BodyUseAPI": [], "Fixed commit": "60ca0609a89dc2cbe3cb6a904671f31854ed1882", "Url": "https://api.github.com/repos/theusindabike/restaurante", "Date": "2013-05-16T01:47:34Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(value.getClass().equals(model.data.value.TimeValue.class))) { table.getRow(0).setValue(table.getColumn(\"Difference date\"), new model.data.value.PeriodValue(0, 0, 0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5930/buggy-version/src.main.java.model.process.analysis.operations.comparisons.TimeBetween.java", "BodyUseAPI": [], "Fixed commit": "89029ee3bce3a843440ab0e85cd13351db734e61", "Url": "https://api.github.com/repos/clanghout/Health-Informatics-3", "Date": "2015-06-13T20:58:20Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(value.getClass().equals(model.data.value.DateValue.class))) { table.getRow(0).setValue(table.getColumn(\"Difference time\"), new model.data.value.TimeValue(0, 0, 0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5930/buggy-version/src.main.java.model.process.analysis.operations.comparisons.TimeBetween.java", "BodyUseAPI": [], "Fixed commit": "89029ee3bce3a843440ab0e85cd13351db734e61", "Url": "https://api.github.com/repos/clanghout/Health-Informatics-3", "Date": "2015-06-13T20:58:20Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gnu.trove.map.TIntObjectMap<java.util.Map<com.github.abrarsyed.secretroomsmod.common.BlockLocation, java.util.UUID>>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (map == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6606/buggy-version/src.main.java.com.github.abrarsyed.secretroomsmod.common.OwnershipManager.java", "BodyUseAPI": [], "Fixed commit": "0d635e4313d04c2a1b57e3c0d4dfddaa522adf9b", "Url": "https://api.github.com/repos/AbrarSyed/SecretRoomsMod-forge", "Date": "2015-02-17T03:36:27Z"},
{"Line": "=>514", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ptsPoly.size()) > 1) polylines2.add(ptsPoly);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3098/buggy-version/Renderer.src.main.java.armyc2.c2sd.JavaRendererServer.RenderMultipoints.clsUtilityGE.java", "BodyUseAPI": ["java.util.ArrayList<java.util.ArrayList<armyc2.c2sd.JavaRendererServer.RenderMultipoints.Point2D>>.add(java.util.ArrayList<armyc2.c2sd.JavaRendererServer.RenderMultipoints.Point2D>)"], "Fixed commit": "7e6246a1d09b42acf59c4afefbd6efb693d209de", "Url": "https://api.github.com/repos/missioncommand/mil-sym-android", "Date": "2016-08-11T17:47:20Z"},
{"Line": "=>961", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Character.getNumericValue(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((food < 1) || (food > 9)) throw new java.lang.IllegalArgumentException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/612/buggy-version/Antz.src.world.World.java", "BodyUseAPI": [], "Fixed commit": "7f777d004a94878c1252e93e7e3ef44c7c1b8157", "Url": "https://api.github.com/repos/jo215/Ants", "Date": "2012-06-10T22:37:33Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["macrobase.runtime.standalone.scoping.Unit.getDimensions()", "macrobase.runtime.standalone.scoping.Unit.getDimensions()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((dimensions1.size()) != (dimensions2.size())) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4351/buggy-version/src.main.java.macrobase.runtime.standalone.scoping.Unit.java", "BodyUseAPI": [], "Fixed commit": "321bfea351e29b2f6c9ab54a8514b736adaf549a", "Url": "https://api.github.com/repos/stanford-futuredata/macrobase", "Date": "2016-01-24T02:49:45Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pratilipi.data.type.Pratilipi.getKeywords()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (keywords == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6166/buggy-version/src.main.java.com.pratilipi.api.init.InitApi.java", "BodyUseAPI": [], "Fixed commit": "2e7b4bd088ba54e6656bc380c8e4c78b4c18be05", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2015-07-16T06:10:21Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fjg.android.zxing.utils.PreferenceUtils.getBoolean(PreferenceUtils.FLOATVIEW)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isOn) toggleFloatView();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6545/buggy-version/app.src.main.java.com.fjg.android.zxing.assistive.SpriteService.java", "BodyUseAPI": [], "Fixed commit": "bbfa49ed49c0f014dc8e89e45e7cb6a63fc2c248", "Url": "https://api.github.com/repos/damonfu/Qrcode", "Date": "2016-09-26T00:56:20Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controller.getTurnPlayer().getHand().get(request.getCardIndex())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(actualCard.getName().equals(request.getCard().getName()))) { ui.log(\"Hand is not the same on Client and Server\"); server.sendToAllTCP(controller.getGameData()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4393/buggy-version/core.src.com.mygdx.Dominion.Network.DominionServer.java", "BodyUseAPI": [], "Fixed commit": "8e879f97d978b7da89b65827cd808a4ed6ef1581", "Url": "https://api.github.com/repos/Nicrey/Dominion", "Date": "2015-06-08T13:30:30Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size()) == (data.length)) { java.lang.String[] newD = new java.lang.String[(size()) + 1]; for (int count = 0; count < (data.length); count++) { newD[count] = data[count]; } data = newD; data[this.size()] = element; (size)++; return true; }else data[this.size()] = element;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/124/buggy-version/06SuperArrayIterator.SuperArray.java", "BodyUseAPI": [], "Fixed commit": "5a194c433ce4d246b19971ff4c0aa3b80cbf393f", "Url": "https://api.github.com/repos/ryan-aday/MKS21X", "Date": "2017-12-01T07:38:32Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.wpi.cs.wpisuitetng.modules.planningpoker.models.Game.findEstimate(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((estimate.getFinalEstimate()) == 0) { finalEstimate.setText((\"\" + ((int) (estimate.getMean())))); }else { finalEstimate.setText((\"\" + (estimate.getFinalEstimate()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4162/buggy-version/PlanningPoker.src.edu.wpi.cs.wpisuitetng.modules.planningpoker.view.results.ResultsDisplayPanel.java", "BodyUseAPI": ["edu.wpi.cs.wpisuitetng.modules.planningpoker.models.Estimate.getFinalEstimate()", "edu.wpi.cs.wpisuitetng.modules.planningpoker.models.Estimate.getMean()", "javax.swing.JTextField.setText(java.lang.String)", "javax.swing.JTextField.setText((\"\" + (estimate.getFinalEstimate())))"], "Fixed commit": "33b970e1ba1fec1d9d94a61394c51ba903e3cabe", "Url": "https://api.github.com/repos/zoccihedron/wpi-suite", "Date": "2014-04-23T02:32:13Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((conn.getLoadedPosition()) != null) conPosition.setLocation(conn.getLoadedPosition()); else conPosition.setLocation(((java.awt.geom.Point2D) (element.getProperty(GraphElementProperties.POSITION))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8536/buggy-version/GraphEdit.src.graphedit.layout.adding.AddingLayouter.java", "BodyUseAPI": ["java.awt.geom.Point2D.setLocation(conn.getLoadedPosition())", "graphedit.model.components.Connector.getLoadedPosition()"], "Fixed commit": "db7266960c9660af088b2cb02a432318fa9b61df", "Url": "https://api.github.com/repos/KROKIteam/KROKI-mockup-tool", "Date": "2014-07-13T16:41:04Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((params.length) > 2) && ((params[2]) != null)) register_url = params[2].trim();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5681/buggy-version/app.src.main.java.org.gplvote.signdoc.RegisterSign.java", "BodyUseAPI": ["java.lang.String.trim()"], "Fixed commit": "66dd1d0e89d7a251ba8568fee1da4e6701d4ea10", "Url": "https://api.github.com/repos/UncleAndy/sign_doc", "Date": "2015-01-23T15:48:04Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getAction()) == (android.view.MotionEvent.ACTION_MOVE)) { getParent().requestDisallowInterceptTouchEvent(true); }else if ((event.getAction()) == (android.view.MotionEvent.ACTION_CANCEL)) { getParent().requestDisallowInterceptTouchEvent(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2050/buggy-version/library.src.main.java.com.github.sundeepk.compactcalendarview.CompactCalendarView.java", "BodyUseAPI": ["android.view.MotionEvent.getAction()"], "Fixed commit": "968f79d0446ff784964c52aacb5d6aff356f792f", "Url": "https://api.github.com/repos/nmoskalenko/CompactCalendarView", "Date": "2016-06-17T16:34:21Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((query.getScore()) != null) solrQueriesScore.add(query.getScore().toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8917/buggy-version/src.main.java.eu.socialsensor.framework.client.search.solr.SolrDysco.java", "BodyUseAPI": [], "Fixed commit": "5cf015375e733b5f030613d53a5f70dc8a8fc7ea", "Url": "https://api.github.com/repos/socialsensor/socialsensor-framework-client", "Date": "2014-06-06T10:49:24Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((heldBuilding) instanceof info.quadtree.ld39.Battery) nb = new info.quadtree.ld39.Battery();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/785/buggy-version/core.src.info.quadtree.ld39.GameState.java", "BodyUseAPI": [], "Fixed commit": "31a7cee9ee1199b9420be05d3910aae4418752aa", "Url": "https://api.github.com/repos/Quadtree/LD39", "Date": "2017-07-29T19:30:43Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numberOfOrderedLists > 0) { orderListElement = (stack.peek().getOrderingNumber()) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8071/buggy-version/src.main.java.be.quodlibet.boxable.Paragraph.java", "BodyUseAPI": [], "Fixed commit": "bba49e9ea517bb6449713322294946e0ef8e09e4", "Url": "https://api.github.com/repos/SZUE/boxable", "Date": "2016-10-28T12:00:44Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mFirstLine)) writer.newLine();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7285/buggy-version/SensorLogger.src.com.guseggert.sensorlogger.DataWriter.java", "BodyUseAPI": [], "Fixed commit": "254944500c070ebe57481b0dac610434cd5caca2", "Url": "https://api.github.com/repos/ceggert/AndroidSensorLogger", "Date": "2013-04-18T02:38:08Z"},
{"Line": "=>1175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((flag.getFlag()) != null) && (((flag.getDefaultFlag()) == null) || (!(flag.getDefaultFlag().equals(flag.getFlag()))))) flag.saveValue(name, cfg);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1709/buggy-version/Minigames.src.au.com.mineauz.minigames.minigame.Minigame.java", "BodyUseAPI": ["au.com.mineauz.minigames.config.Flag<?>.saveValue(java.lang.String,org.bukkit.configuration.file.FileConfiguration)"], "Fixed commit": "f1d51ca0b07596f446262db73fe189e631ecb25d", "Url": "https://api.github.com/repos/Razz0991/Minigames", "Date": "2014-08-04T02:34:09Z"},
{"Line": "=>1185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((flag.getFlag()) != null) && (((flag.getDefaultFlag()) == null) || (!(flag.getDefaultFlag().equals(flag.getFlag()))))) flag.saveValue(name, modsave.getConfig());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1709/buggy-version/Minigames.src.au.com.mineauz.minigames.minigame.Minigame.java", "BodyUseAPI": ["au.com.mineauz.minigames.config.Flag<?>.saveValue(java.lang.String,modsave.getConfig())"], "Fixed commit": "f1d51ca0b07596f446262db73fe189e631ecb25d", "Url": "https://api.github.com/repos/Razz0991/Minigames", "Date": "2014-08-04T02:34:09Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((idmUser == null) || (idmPass == null)) || (idmHost == null)) || (idmPort < 0)) throw new de.passau.uni.sec.compose.pdp.servioticy.exception.PDPServioticyException(500, \"Not enough parameters to talk to the IDM \", \"Not enough parameters to talk to IDM\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6713/buggy-version/src.main.java.de.passau.uni.sec.compose.pdp.servioticy.authz.AuthorizationServioticy.java", "BodyUseAPI": [], "Fixed commit": "44c6658668f09ba318a66a7276c1db063401901a", "Url": "https://api.github.com/repos/nopbyte/servioticy-pdp", "Date": "2014-07-22T15:31:28Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dialDevice.active) { ((net.minecraft.client.gui.GuiButton) (buttonList.get(0))).enabled = false; }else { if ((stackList.size()) == 0) { ((net.minecraft.client.gui.GuiButton) (buttonList.get(0))).enabled = false; }else { ((net.minecraft.client.gui.GuiButton) (buttonList.get(0))).enabled = !(dialDevice.active); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/287/buggy-version/common.enhancedportals.client.gui.GuiDialDeviceBasic.java", "BodyUseAPI": [], "Fixed commit": "7196658b602804e6ec8db5964351e13125cba5bd", "Url": "https://api.github.com/repos/ShadedDimension/enhanced-portals", "Date": "2013-06-12T22:33:58Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<org.apache.synapse.aspects.flow.statistics.data.raw.StatisticsLog>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (currentStatLog == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7514/buggy-version/modules.core.src.main.java.org.apache.synapse.aspects.flow.statistics.util.TracingDataCollectionHelper.java", "BodyUseAPI": [], "Fixed commit": "77d4c942d399004d596932f0055a963ee438d85d", "Url": "https://api.github.com/repos/lankavitharana/wso2-synapse", "Date": "2016-07-29T12:33:16Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (thisRoute) { mapPoints.add(splitAgain); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5821/buggy-version/app.src.main.java.com.example.mortuie.bathlaunchpad2017.RoutePage.java", "BodyUseAPI": [], "Fixed commit": "1a48029eacafc562a197c11ebcc1d8d927cac5a4", "Url": "https://api.github.com/repos/Mortuie/BathLaunchpad2017", "Date": "2017-03-26T00:27:54Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!bestandFehler) { ok = eShopVerwaltung.fuegeRechnungEin(kunde); kunde.resetWarenkorb(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5888/buggy-version/src.eshop.local.ui.cui.eshopClientCUI.java", "BodyUseAPI": [], "Fixed commit": "8633856c55b31ec8fc50fd7441266d7edfe96459", "Url": "https://api.github.com/repos/ggritzan/Webshop_Prog2", "Date": "2013-05-14T14:09:15Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lost) { java.lang.System.out.println(\"You lost n00b\"); }else { java.lang.System.out.println((\"Score :\" + (points))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1635/buggy-version/model.src.main.java.model.Level.java", "BodyUseAPI": [], "Fixed commit": "a0f7eb25499e6b79dcff218eae258d92984e9a06", "Url": "https://api.github.com/repos/Dysey/java", "Date": "2016-06-20T13:23:33Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (image != null) com.neuSep17.dao.PictureManager.cacheImage(image, com.neuSep17.dao.PictureManager.getFullName(photoURL.getFile()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3078/buggy-version/src.com.neuSep17.dao.PictureManager.java", "BodyUseAPI": ["com.neuSep17.dao.PictureManager.cacheImage(java.awt.image.BufferedImage,java.lang.String)"], "Fixed commit": "e540d21bb3d90eb54e9a02fd4ff4eab4a0ba7c18", "Url": "https://api.github.com/repos/iShiBin/inventory-management", "Date": "2017-12-05T22:49:13Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getContext().getXQueryVersion()) < 31) { throw new org.exist.xquery.XPathException(this, ErrorCodes.EXXQDY0003, (\"string constructors are not available before \" + \"XQuery 3.1\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5117/buggy-version/src.org.exist.xquery.StringConstructor.java", "BodyUseAPI": [], "Fixed commit": "de43dce4b8d1e4b128eb6ad40171afdefc9f5021", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-02-26T14:52:59Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (world.isChunkLoaded(unload.x, unload.z)) world.unloadChunk(unload.x, unload.z, false, false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7595/buggy-version/src.com.wimbli.WorldBorder.WorldTrimTask.java", "BodyUseAPI": ["org.bukkit.World.unloadChunk(unload.x,unload.z,boolean,boolean)"], "Fixed commit": "1f3f9ba521ddbd9b89f47cec7abb6ed61e0b4735", "Url": "https://api.github.com/repos/Brettflan/WorldBorder", "Date": "2011-10-18T16:44:12Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mDbInstance) == null) || (!(mDbInstance.isOpen()))) mDbInstance = openOrCreateDatabase(getDatabaseName(), 0, null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1008/buggy-version/src.com.roscopeco.ormdroid.ORMDroidApplication.java", "BodyUseAPI": [], "Fixed commit": "44d35d4193f76d33ba227ea9f2b4cac242252c5a", "Url": "https://api.github.com/repos/akshaydeo/ormdroid", "Date": "2013-05-10T06:28:17Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isModifyingFieldWithObject(f)) { if (com.artemis.weaver.packed.FieldToArrayMethodTransformer.LOG) java.lang.System.out.println((\">> SETTING-MODIFYING FIELD FROM OBJECT index=\" + i)); i = com.artemis.weaver.packed.InstructionMutator.on(instructions, f).insertAtOffset(6, new org.objectweb.asm.tree.FieldInsnNode(GETSTATIC, owner, \"$data\", (\"[\" + (fieldDesc)))).insertAtOffset(5, new org.objectweb.asm.tree.FieldInsnNode(GETFIELD, owner, \"$offset\", \"I\"), new org.objectweb.asm.tree.InsnNode(((ICONST_0) + (dataFieldNames.indexOf(f.name)))), new org.objectweb.asm.tree.InsnNode(IADD), new org.objectweb.asm.tree.InsnNode(DUP2), new org.objectweb.asm.tree.InsnNode(opcodes.tALOAD())).insertAtOffset(0, new org.objectweb.asm.tree.InsnNode(opcodes.tASTORE())).delete(5).delete(4).delete(0).transform(); }else if (isLoadingFromField(f)) { if (com.artemis.weaver.packed.FieldToArrayMethodTransformer.LOG) java.lang.System.out.println((\"<< LOAD FIELD index=\" + i)); i = com.artemis.weaver.packed.InstructionMutator.on(instructions, f).insertAtOffset(2, new org.objectweb.asm.tree.FieldInsnNode(GETSTATIC, owner, \"$data\", (\"[\" + (fieldDesc)))).insertAtOffset(0, new org.objectweb.asm.tree.FieldInsnNode(GETFIELD, owner, \"$offset\", \"I\"), new org.objectweb.asm.tree.InsnNode(((ICONST_0) + (dataFieldNames.indexOf(f.name)))), new org.objectweb.asm.tree.InsnNode(IADD), new org.objectweb.asm.tree.InsnNode(DUP2), new org.objectweb.asm.tree.InsnNode(opcodes.tALOAD())).delete(1).delete(0).transform(); shouldDoSetter = false; }else if (isGettingField(f)) { if (com.artemis.weaver.packed.FieldToArrayMethodTransformer.LOG) java.lang.System.out.println((\"<< GETTING FIELD index=\" + i)); i = com.artemis.weaver.packed.InstructionMutator.on(instructions, f).insertAtOffset(1, new org.objectweb.asm.tree.FieldInsnNode(GETSTATIC, owner, \"$data\", (\"[\" + (fieldDesc)))).insertAtOffset(0, new org.objectweb.asm.tree.FieldInsnNode(GETFIELD, owner, \"$offset\", \"I\"), new org.objectweb.asm.tree.InsnNode(((ICONST_0) + (dataFieldNames.indexOf(f.name)))), new org.objectweb.asm.tree.InsnNode(IADD), new org.objectweb.asm.tree.InsnNode(opcodes.tALOAD())).delete(0).transform(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4544/buggy-version/artemis-weaver.src.main.java.com.artemis.weaver.packed.FieldToArrayMethodTransformer.java", "BodyUseAPI": ["com.artemis.weaver.packed.InstructionMutator.on(instructions, f).insertAtOffset(2, new org.objectweb.asm.tree.FieldInsnNode(GETSTATIC, owner, \"$data\", (\"[\" + (fieldDesc)))).insertAtOffset(int,org.objectweb.asm.tree.FieldInsnNode,org.objectweb.asm.tree.InsnNode,org.objectweb.asm.tree.InsnNode,org.objectweb.asm.tree.InsnNode,org.objectweb.asm.tree.InsnNode)", "com.artemis.weaver.packed.InstructionMutator.on(instructions, f).insertAtOffset(6, new org.objectweb.asm.tree.FieldInsnNode(GETSTATIC, owner, \"$data\", (\"[\" + (fieldDesc)))).insertAtOffset(5, new org.objectweb.asm.tree.FieldInsnNode(GETFIELD, owner, \"$offset\", \"I\"), new org.objectweb.asm.tree.InsnNode(((ICONST_0) + (dataFieldNames.indexOf(f.name)))), new org.objectweb.asm.tree.InsnNode(IADD), new org.objectweb.asm.tree.InsnNode(DUP2), new org.objectweb.asm.tree.InsnNode(opcodes.tALOAD())).insertAtOffset(0, new org.objectweb.asm.tree.InsnNode(opcodes.tASTORE())).delete(5).delete(4).delete(int)", "com.artemis.weaver.packed.InstructionMutator.on(instructions, f).insertAtOffset(6, new org.objectweb.asm.tree.FieldInsnNode(GETSTATIC, owner, \"$data\", (\"[\" + (fieldDesc)))).insertAtOffset(5, new org.objectweb.asm.tree.FieldInsnNode(GETFIELD, owner, \"$offset\", \"I\"), new org.objectweb.asm.tree.InsnNode(((ICONST_0) + (dataFieldNames.indexOf(f.name)))), new org.objectweb.asm.tree.InsnNode(IADD), new org.objectweb.asm.tree.InsnNode(DUP2), new org.objectweb.asm.tree.InsnNode(opcodes.tALOAD())).insertAtOffset(0, new org.objectweb.asm.tree.InsnNode(opcodes.tASTORE())).delete(5).delete(int)", "com.artemis.weaver.packed.InstructionMutator.on(instructions, f).insertAtOffset(6, new org.objectweb.asm.tree.FieldInsnNode(GETSTATIC, owner, \"$data\", (\"[\" + (fieldDesc)))).insertAtOffset(5, new org.objectweb.asm.tree.FieldInsnNode(GETFIELD, owner, \"$offset\", \"I\"), new org.objectweb.asm.tree.InsnNode(((ICONST_0) + (dataFieldNames.indexOf(f.name)))), new org.objectweb.asm.tree.InsnNode(IADD), new org.objectweb.asm.tree.InsnNode(DUP2), new org.objectweb.asm.tree.InsnNode(opcodes.tALOAD())).insertAtOffset(int,org.objectweb.asm.tree.InsnNode)", "com.artemis.weaver.packed.InstructionMutator.on(instructions, f).insertAtOffset(int,org.objectweb.asm.tree.FieldInsnNode)", "com.artemis.weaver.packed.FieldToArrayMethodTransformer.isGettingField(org.objectweb.asm.tree.FieldInsnNode)", "com.artemis.weaver.packed.InstructionMutator.on(instructions, f).insertAtOffset(6, new org.objectweb.asm.tree.FieldInsnNode(GETSTATIC, owner, \"$data\", (\"[\" + (fieldDesc)))).insertAtOffset(int,org.objectweb.asm.tree.FieldInsnNode,org.objectweb.asm.tree.InsnNode,org.objectweb.asm.tree.InsnNode,org.objectweb.asm.tree.InsnNode,org.objectweb.asm.tree.InsnNode)", "com.artemis.weaver.packed.InstructionMutator.on(instructions, f).insertAtOffset(6, new org.objectweb.asm.tree.FieldInsnNode(GETSTATIC, owner, \"$data\", (\"[\" + (fieldDesc)))).insertAtOffset(5, new org.objectweb.asm.tree.FieldInsnNode(GETFIELD, owner, \"$offset\", \"I\"), new org.objectweb.asm.tree.InsnNode(((ICONST_0) + (dataFieldNames.indexOf(f.name)))), new org.objectweb.asm.tree.InsnNode(IADD), new org.objectweb.asm.tree.InsnNode(DUP2), new org.objectweb.asm.tree.InsnNode(opcodes.tALOAD())).insertAtOffset(0, new org.objectweb.asm.tree.InsnNode(opcodes.tASTORE())).delete(5).delete(4).delete(0).transform()", "com.artemis.weaver.packed.InstructionMutator.on(instructions, f).insertAtOffset(2, new org.objectweb.asm.tree.FieldInsnNode(GETSTATIC, owner, \"$data\", (\"[\" + (fieldDesc)))).insertAtOffset(0, new org.objectweb.asm.tree.FieldInsnNode(GETFIELD, owner, \"$offset\", \"I\"), new org.objectweb.asm.tree.InsnNode(((ICONST_0) + (dataFieldNames.indexOf(f.name)))), new org.objectweb.asm.tree.InsnNode(IADD), new org.objectweb.asm.tree.InsnNode(DUP2), new org.objectweb.asm.tree.InsnNode(opcodes.tALOAD())).delete(1).delete(int)", "com.artemis.weaver.packed.InstructionMutator.on(instructions, f).insertAtOffset(2, new org.objectweb.asm.tree.FieldInsnNode(GETSTATIC, owner, \"$data\", (\"[\" + (fieldDesc)))).insertAtOffset(0, new org.objectweb.asm.tree.FieldInsnNode(GETFIELD, owner, \"$offset\", \"I\"), new org.objectweb.asm.tree.InsnNode(((ICONST_0) + (dataFieldNames.indexOf(f.name)))), new org.objectweb.asm.tree.InsnNode(IADD), new org.objectweb.asm.tree.InsnNode(DUP2), new org.objectweb.asm.tree.InsnNode(opcodes.tALOAD())).delete(1).delete(0).transform()", "com.artemis.weaver.packed.InstructionMutator.on(instructions, f).insertAtOffset(int,org.objectweb.asm.tree.FieldInsnNode)", "com.artemis.weaver.packed.InstructionMutator.on(instructions, f).insertAtOffset(2, new org.objectweb.asm.tree.FieldInsnNode(GETSTATIC, owner, \"$data\", (\"[\" + (fieldDesc)))).insertAtOffset(0, new org.objectweb.asm.tree.FieldInsnNode(GETFIELD, owner, \"$offset\", \"I\"), new org.objectweb.asm.tree.InsnNode(((ICONST_0) + (dataFieldNames.indexOf(f.name)))), new org.objectweb.asm.tree.InsnNode(IADD), new org.objectweb.asm.tree.InsnNode(DUP2), new org.objectweb.asm.tree.InsnNode(opcodes.tALOAD())).delete(int)", "com.artemis.weaver.packed.InstructionMutator.on(instructions, f).insertAtOffset(1, new org.objectweb.asm.tree.FieldInsnNode(GETSTATIC, owner, \"$data\", (\"[\" + (fieldDesc)))).insertAtOffset(0, new org.objectweb.asm.tree.FieldInsnNode(GETFIELD, owner, \"$offset\", \"I\"), new org.objectweb.asm.tree.InsnNode(((ICONST_0) + (dataFieldNames.indexOf(f.name)))), new org.objectweb.asm.tree.InsnNode(IADD), new org.objectweb.asm.tree.InsnNode(opcodes.tALOAD())).delete(int)", "com.artemis.weaver.packed.InstructionMutator.on(org.objectweb.asm.tree.InsnList,org.objectweb.asm.tree.FieldInsnNode)", "java.util.List<java.lang.String>.indexOf(f.name)", "com.artemis.weaver.packed.InstructionMutator.on(org.objectweb.asm.tree.InsnList,org.objectweb.asm.tree.FieldInsnNode)", "com.artemis.weaver.packed.InstructionMutator.on(instructions, f).insertAtOffset(int,org.objectweb.asm.tree.FieldInsnNode)", "com.artemis.weaver.packed.InstructionMutator.on(instructions, f).insertAtOffset(1, new org.objectweb.asm.tree.FieldInsnNode(GETSTATIC, owner, \"$data\", (\"[\" + (fieldDesc)))).insertAtOffset(0, new org.objectweb.asm.tree.FieldInsnNode(GETFIELD, owner, \"$offset\", \"I\"), new org.objectweb.asm.tree.InsnNode(((ICONST_0) + (dataFieldNames.indexOf(f.name)))), new org.objectweb.asm.tree.InsnNode(IADD), new org.objectweb.asm.tree.InsnNode(opcodes.tALOAD())).delete(0).transform()", "java.util.List<java.lang.String>.indexOf(f.name)", "com.artemis.weaver.packed.InstructionMutator.on(instructions, f).insertAtOffset(1, new org.objectweb.asm.tree.FieldInsnNode(GETSTATIC, owner, \"$data\", (\"[\" + (fieldDesc)))).insertAtOffset(int,org.objectweb.asm.tree.FieldInsnNode,org.objectweb.asm.tree.InsnNode,org.objectweb.asm.tree.InsnNode,org.objectweb.asm.tree.InsnNode)", "com.artemis.weaver.packed.InstructionMutator.on(org.objectweb.asm.tree.InsnList,org.objectweb.asm.tree.FieldInsnNode)", "com.artemis.weaver.packed.FieldToArrayMethodTransformer.isLoadingFromField(org.objectweb.asm.tree.FieldInsnNode)", "com.artemis.weaver.packed.InstructionMutator.on(instructions, f).insertAtOffset(6, new org.objectweb.asm.tree.FieldInsnNode(GETSTATIC, owner, \"$data\", (\"[\" + (fieldDesc)))).insertAtOffset(5, new org.objectweb.asm.tree.FieldInsnNode(GETFIELD, owner, \"$offset\", \"I\"), new org.objectweb.asm.tree.InsnNode(((ICONST_0) + (dataFieldNames.indexOf(f.name)))), new org.objectweb.asm.tree.InsnNode(IADD), new org.objectweb.asm.tree.InsnNode(DUP2), new org.objectweb.asm.tree.InsnNode(opcodes.tALOAD())).insertAtOffset(0, new org.objectweb.asm.tree.InsnNode(opcodes.tASTORE())).delete(int)", "java.util.List<java.lang.String>.indexOf(f.name)"], "Fixed commit": "7da746de8370221a03eab78dbffb3db78eeeb40b", "Url": "https://api.github.com/repos/junkdog/artemis-odb", "Date": "2013-11-09T23:12:09Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4544/buggy-version/artemis-weaver.src.main.java.com.artemis.weaver.packed.FieldToArrayMethodTransformer.java", "BodyUseAPI": [], "Fixed commit": "7da746de8370221a03eab78dbffb3db78eeeb40b", "Url": "https://api.github.com/repos/junkdog/artemis-odb", "Date": "2013-11-09T23:12:09Z"},
{"Line": "=>635", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(userListe.contains(user))) { userBox.addItem(user.getEmail()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7249/buggy-version/Raumplaner.src.itprojekt.raumplaner.client.BelegungEditForm.java", "BodyUseAPI": ["com.google.gwt.user.client.ui.ListBox.addItem(user.getEmail())", "itprojekt.raumplaner.shared.bo.User.getEmail()"], "Fixed commit": "2c92722db118fb815ada95a67fde2f63c23e54fd", "Url": "https://api.github.com/repos/fabianroeber/Raumplaner2", "Date": "2015-02-13T02:40:49Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((token.length()) > 1) c.setContent(token);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1644/buggy-version/src.main.java.eu.learnpad.ca.analysis.AbstractAnalysisClass.java", "BodyUseAPI": ["eu.learnpad.ca.rest.data.Content.setContent(java.lang.String)"], "Fixed commit": "d12987a36ae41e3b8d021e09772f10eec16b3982", "Url": "https://api.github.com/repos/ISTI-FMT-LearnPAd/ContentAnalysisComponent", "Date": "2015-12-17T00:39:04Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (precedentposition.equals(3658)) { eu.learnpad.ca.analysis.AbstractAnalysisClass.log.trace(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1644/buggy-version/src.main.java.eu.learnpad.ca.analysis.AbstractAnalysisClass.java", "BodyUseAPI": [], "Fixed commit": "d12987a36ae41e3b8d021e09772f10eec16b3982", "Url": "https://api.github.com/repos/ISTI-FMT-LearnPAd/ContentAnalysisComponent", "Date": "2015-12-17T00:39:04Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["algorithms.imageProcessing.FeatureMatcher.findSimilarFeaturesAsStats(algorithms.imageProcessing.GreyscaleImage,algorithms.imageProcessing.CornerRegion[],algorithms.imageProcessing.GreyscaleImage,algorithms.imageProcessing.CornerRegion[],algorithms.imageProcessing.TransformationParameters,float,float,int,int,algorithms.compGeometry.RotatedOffsets)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (stats == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8483/buggy-version/src.algorithms.imageProcessing.FeatureMatcher.java", "BodyUseAPI": [], "Fixed commit": "ff0a996291b33dc341080df338779121a5836d94", "Url": "https://api.github.com/repos/nking/curvature-scale-space-corners-and-transformations", "Date": "2015-12-26T20:42:21Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.linagora.linshare.core.domain.entities.MimeType.getExtensions()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (extension.equals(\".jpg\")) { dto.addExtensions(\"jpeg\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7029/buggy-version/src.main.java.org.linagora.linshare.core.facade.webservice.uploadrequest.impl.UploadRequestUrlFacadeImpl.java", "BodyUseAPI": [], "Fixed commit": "aeb2a79f7523035d620552efd4bb7571391adbe6", "Url": "https://api.github.com/repos/linagora/linshare-core", "Date": "2015-08-27T12:56:15Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MenuItem.getItemId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == (R.id.action_readActuals)) { final android.os.Bundle data = new android.os.Bundle(); data.putString(\"message_type\", \"ReadActuals\"); new java.lang.Thread() { @java.lang.Override public void run() { sendToServer(data); } }.start(); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4629/buggy-version/app.src.main.java.org.duckdns.denis_st.tempmonitorclient.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e6a025a11d293cbfaf8efb4841bdffd6ede3bfbc", "Url": "https://api.github.com/repos/DenisStefanov/TempMonitorClient", "Date": "2017-01-08T14:37:14Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["iCommand.getContext().getVariable(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (servers == null) { servers = new java.util.ArrayList<java.lang.String>(); iCommand.getContext().setVariable(\"servers\", servers); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/965/buggy-version/server.src.main.java.com.orientechnologies.orient.server.distributed.ODistributedStorage.java", "BodyUseAPI": [], "Fixed commit": "ad0845295367c7a198ae6c75f3db0c2a38adfdb5", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-08-12T23:51:04Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((obj.getCorrelationName()) == null) { throw new java.lang.IllegalArgumentException(JDBCPlugin.Util.gs(JDBCPlugin.Event.TEIID11020, obj.getName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6294/buggy-version/connectors.translator-jdbc.src.main.java.org.teiid.translator.jdbc.SQLConversionVisitor.java", "BodyUseAPI": ["org.teiid.translator.jdbc.NamedTable.getName()", "JDBCPlugin.Util.gs(JDBCPlugin.Event.TEIID11020,obj.getName())"], "Fixed commit": "f343d056701313bb30cb28445bec9e293bac1523", "Url": "https://api.github.com/repos/teiid/teiid", "Date": "2012-10-31T18:27:50Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((this.usuarioObservable.getUsuarioCarrera().getHora()) != null) && (!(this.usuarioObservable.getUsuarioCarrera().getHora().isEmpty()))) { fecha.setText(((((sf.format(this.usuarioObservable.getUsuarioCarrera().getFechaInicio())) + \" \") + (this.usuarioObservable.getUsuarioCarrera().getHora())) + \" hs.\")); }else { fecha.setText(sf.format(this.usuarioObservable.getUsuarioCarrera().getFechaInicio())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8658/buggy-version/Android.AppRunning.mobile.src.main.java.studios.thinkup.com.apprunning.fragment.DetalleCarreraFragment.java", "BodyUseAPI": ["java.text.SimpleDateFormat.format(this.usuarioObservable.getUsuarioCarrera().getFechaInicio())", "this.usuarioObservable.getUsuarioCarrera().getFechaInicio()", "studios.thinkup.com.apprunning.fragment.IUsuarioCarreraObservable.getUsuarioCarrera()", "android.widget.TextView.setText(((((sf.format(this.usuarioObservable.getUsuarioCarrera().getFechaInicio())) + \"   \") + (this.usuarioObservable.getUsuarioCarrera().getHora())) + \" hs.\"))", "studios.thinkup.com.apprunning.fragment.IUsuarioCarreraObservable.getUsuarioCarrera()", "this.usuarioObservable.getUsuarioCarrera().getFechaInicio()", "java.text.SimpleDateFormat.format(this.usuarioObservable.getUsuarioCarrera().getFechaInicio())", "studios.thinkup.com.apprunning.fragment.IUsuarioCarreraObservable.getUsuarioCarrera()", "this.usuarioObservable.getUsuarioCarrera().getHora()", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "0a1eb80e8975c2b2b7025927bd4bc8086dbf79d8", "Url": "https://api.github.com/repos/fcostazini/AppRunning", "Date": "2015-07-02T20:18:07Z"},
{"Line": "=>733", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (interaction.getTo().matches(\"\\\".*@.*\\\" ?<.*@.*>\")) { mapObj.put(EmailMessageFields.ToAddress, interaction.getTo().replaceFirst(\"\\\".*@.*\\\" ?\", \"\")); }else { mapObj.put(EmailMessageFields.ToAddress, interaction.getTo()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5874/buggy-version/src.main.java.com.salesforce.scmt.utils.DeskJsonMapUtil.java", "BodyUseAPI": ["com.salesforce.scmt.utils.Interaction.getTo()", "java.util.Map<java.lang.String, java.lang.Object>.put(EmailMessageFields.ToAddress,interaction.getTo())", "com.salesforce.scmt.utils.Interaction.getTo()", "interaction.getTo().replaceFirst(java.lang.String,java.lang.String)", "java.util.Map<java.lang.String, java.lang.Object>.put(EmailMessageFields.ToAddress,interaction.getTo().replaceFirst(\"\\\".*@.*\\\" ?\", \"\"))"], "Fixed commit": "b3d02ec3a96119806197c36db0bf2689d50b94b7", "Url": "https://api.github.com/repos/forcedotcom/scmt-server", "Date": "2017-07-25T23:53:56Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(dGetter.isValid())) { throw new edu.caltech.ipac.firefly.server.query.DataAccessException((\"Invalid column or expression: \" + (columnExpression))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3053/buggy-version/src.firefly.java.edu.caltech.ipac.firefly.server.query.HistogramProcessor.java", "BodyUseAPI": [], "Fixed commit": "636608d30891283d24814051907c88f8a063f391", "Url": "https://api.github.com/repos/Caltech-IPAC/firefly", "Date": "2017-03-11T02:58:09Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ClassLoader.getResourceAsStream(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (input != null) { prop.load(input); input.close(); }else { br.com.riselabs.cotonet.util.Logger.logStackTrace(new java.io.FileNotFoundException(\"The file 'db.properties was not found.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4280/buggy-version/src.main.java.br.com.riselabs.cotonet.model.db.Database.java", "BodyUseAPI": ["java.util.Properties.load(java.io.InputStream)", "java.io.InputStream.close()"], "Fixed commit": "c1d498ce41de953fa8b5ac437f69799d87da7a72", "Url": "https://api.github.com/repos/riselabs-ufba/cotonet", "Date": "2016-05-26T12:03:42Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.hops.transaction.EntityManager.findList(Replica.Finder.ByBlockIdAndINodeId,lastBlock.getBlockId(),iNodeFile.getId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (replicas != null) { java.util.Collections.sort(replicas, new java.util.Comparator<io.hops.metadata.hdfs.entity.Replica>() { @java.lang.Override public int compare(io.hops.metadata.hdfs.entity.Replica o1, io.hops.metadata.hdfs.entity.Replica o2) { return new java.lang.Integer(o1.getBucketId()).compareTo(o2.getBucketId()); } }); for (io.hops.metadata.hdfs.entity.Replica replica : replicas) { io.hops.transaction.EntityManager.find(HashBucket.Finder.ByStorageIdAndBucketId, replica.getStorageId(), replica.getBucketId()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1461/buggy-version/hadoop-hdfs-project.hadoop-hdfs.src.main.java.io.hops.transaction.lock.LastBlockReplicasHashBucketLock.java", "BodyUseAPI": ["java.util.Collections.sort(java.util.List<io.hops.metadata.hdfs.entity.Replica>,java.util.Comparator<io.hops.metadata.hdfs.entity.Replica>)"], "Fixed commit": "c8980ba63da8ba0cfcbc74c769ad4c4f07431484", "Url": "https://api.github.com/repos/augustbonds/hops", "Date": "2017-08-09T08:23:56Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.tempus.EventFragment.events.size()) == 0) { com.tempus.EventFragment.setEvents(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2328/buggy-version/app.src.main.java.com.tempus.EventFragment.java", "BodyUseAPI": [], "Fixed commit": "9f025cfc221f81bd66f9978e4e113761392f6d0b", "Url": "https://api.github.com/repos/otaviotarelhodb/Tempus", "Date": "2016-08-14T23:12:07Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.tempus.AlarmFragment.alarms.size()) == 0) { com.tempus.AlarmFragment.setAlarms(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2328/buggy-version/app.src.main.java.com.tempus.AlarmFragment.java", "BodyUseAPI": [], "Fixed commit": "9f025cfc221f81bd66f9978e4e113761392f6d0b", "Url": "https://api.github.com/repos/otaviotarelhodb/Tempus", "Date": "2016-08-14T23:12:07Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (date == other) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2661/buggy-version/src.main.java.seedu.taskitty.model.task.TaskDate.java", "BodyUseAPI": [], "Fixed commit": "5a65e505a6b316a820bd54c83d1be524c94a2642", "Url": "https://api.github.com/repos/CS2103AUG2016-W14-C4/main", "Date": "2016-10-21T15:19:45Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (time == other) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2661/buggy-version/src.main.java.seedu.taskitty.model.task.TaskTime.java", "BodyUseAPI": [], "Fixed commit": "5a65e505a6b316a820bd54c83d1be524c94a2642", "Url": "https://api.github.com/repos/CS2103AUG2016-W14-C4/main", "Date": "2016-10-21T15:19:45Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pid == (org.fiware.kiara.ps.qos.parameter.ParameterId.PID_PROTOCOL_VERSION)) { org.fiware.kiara.ps.rtps.messages.elements.parameters.ParameterProtocolVersion param = ((org.fiware.kiara.ps.rtps.messages.elements.parameters.ParameterProtocolVersion) (org.fiware.kiara.ps.rtps.messages.elements.parameters.ParameterBuilder.createParameter(pid, ((short) (0))))); param.setProtocolVersion(protocolVersion); this.m_allQos.addParameter(param); this.m_allQos.setHasChanged(true); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7828/buggy-version/src.main.java.org.fiware.kiara.ps.qos.QosList.java", "BodyUseAPI": ["org.fiware.kiara.ps.rtps.messages.elements.parameters.ParameterBuilder.createParameter(org.fiware.kiara.ps.qos.parameter.ParameterId,int)"], "Fixed commit": "7a7ead948fe6446627c7bbefdc514068b2382509", "Url": "https://api.github.com/repos/FIWARE-Middleware/KIARA", "Date": "2015-07-09T09:50:59Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activeCategory) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6772/buggy-version/app.src.main.java.dat255.refugeemap.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "516f2b966d2ec748d959b48d21594a25fd67e0aa", "Url": "https://api.github.com/repos/drualsk/RefugeeMap", "Date": "2016-10-20T17:31:24Z"},
{"Line": "=>483", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((queryData.getMimShouldMatch()) != (-1)) { booleanQueryBuilder.minimumShouldMatch(queryData.getMimShouldMatch()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/544/buggy-version/src.main.java.com.weidian.bges.reader.ReadESClient.java", "BodyUseAPI": ["SearchQueryRequest.QueryData.getMimShouldMatch()", "org.elasticsearch.index.query.BoolQueryBuilder.minimumShouldMatch(queryData.getMimShouldMatch())"], "Fixed commit": "32be44e8298c2ff018cbda4a5d33bdbc568ab341", "Url": "https://api.github.com/repos/jiangfuqiang/bges", "Date": "2017-11-23T09:40:08Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1304/buggy-version/src.main.java.net.stormdev.MTA.SMPlugin.servers.Servers.java", "BodyUseAPI": [], "Fixed commit": "69b7e30acd30186728c9fe4d13a1a0eb3d43a956", "Url": "https://api.github.com/repos/storm345dev/ServerManagerPlugin", "Date": "2014-05-30T15:52:34Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gson) == null) gson = new com.google.gson.Gson();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2433/buggy-version/mobile.src.main.java.com.hkid.remotecamera.presenter.cameraPreview.CameraPreviewActivity.java", "BodyUseAPI": [], "Fixed commit": "9162bad577eb5d5dba718604c4f378a4274069eb", "Url": "https://api.github.com/repos/ntanduc2288/remoteCamera", "Date": "2017-02-09T12:16:40Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.evolveum.midpoint.web.page.admin.home.dto.MyPasswordsDto.getPassword()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (password != null) { password.setEncryptedData(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4067/buggy-version/gui.admin-gui.src.main.java.com.evolveum.midpoint.web.page.self.PageSelfCredentials.java", "BodyUseAPI": ["com.evolveum.prism.xml.ns._public.types_3.ProtectedStringType.setEncryptedData(<nulltype>)"], "Fixed commit": "e4244066459bcc3cd3c4becb6551497ccbf304e6", "Url": "https://api.github.com/repos/Evolveum/midpoint", "Date": "2015-10-28T10:08:16Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (points != null) { for (T element : nodeData) { if (boundingBox.containsData(element)) { points.add(element); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4625/buggy-version/library.src.io.nlopez.clusterer.QuadTreeNode.java", "BodyUseAPI": ["java.util.ArrayList<T>.add(T)"], "Fixed commit": "c28a2f0c6835f329bd18e52655483fe80e67b3ef", "Url": "https://api.github.com/repos/mrmans0n/clusterer", "Date": "2013-11-10T19:30:52Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operation instanceof com.owncloud.android.operations.GetSharesForFileOperation) { if ((result.getCode()) == (com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode.MAINTENANCE_MODE)) { message = res.getString(R.string.maintenance_mode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1009/buggy-version/src.com.owncloud.android.utils.ErrorMessageAdapter.java", "BodyUseAPI": [], "Fixed commit": "af25748207a1d4c8ae7eab3c01b144865abcc192", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2016-12-28T09:27:05Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["si.solarb.flowlayout.FlowLayout.getChildCount()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i == (childCount - 1)) { width = java.lang.Math.max(width, lineWidth); height += lineHeight; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8345/buggy-version/library.src.si.solarb.flowlayout.FlowLayout.java", "BodyUseAPI": [], "Fixed commit": "afe0a67bc1dcdabb05948512c9fe61fe618fc353", "Url": "https://api.github.com/repos/blazsolar/FlowLayout", "Date": "2013-08-05T19:07:11Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["toolset.Shingler.shingle(page.cleanSource,java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((shingles == null) || ((shingles.length) == 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7468/buggy-version/GridToolset.src.MultiTool.java", "BodyUseAPI": [], "Fixed commit": "703a85f1ad06e375e517670a8d733500e2f5130a", "Url": "https://api.github.com/repos/willisj/crawler-shingler-562", "Date": "2014-03-22T16:22:00Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["StringHandling.parse_args.exec(Target.UNKNOWN,<nulltype>,com.laytonsmith.core.constructs.CString)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((ca.size()) == 0) { map.put(\"prefix\", new com.laytonsmith.core.constructs.CString(\"\", com.laytonsmith.core.constructs.Target.UNKNOWN)); }else { map.put(\"prefix\", new com.laytonsmith.core.constructs.CString(ca.get(0).val(), com.laytonsmith.core.constructs.Target.UNKNOWN)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5356/buggy-version/src.main.java.com.laytonsmith.chadvanced.events.ServerCommand.java", "BodyUseAPI": ["java.util.Map<java.lang.String, com.laytonsmith.core.constructs.Construct>.put(java.lang.String,com.laytonsmith.core.constructs.CString)", "ca.get(0).val()", "com.laytonsmith.core.constructs.CArray.get(int)"], "Fixed commit": "3fbc685da794b84a7e81c8d8126938f0e31f93aa", "Url": "https://api.github.com/repos/LadyCailin/CHAdvanced", "Date": "2013-10-05T15:50:01Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hintTitlePattern) != null) result.addAll(hintTitlePattern.getRequiredParameterNames());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2721/buggy-version/reporting.api.src.main.java.org.jboss.windup.reporting.config.Hint.java", "BodyUseAPI": [], "Fixed commit": "77d21ba174c37f99322c82e401c745252596d481", "Url": "https://api.github.com/repos/mbriskar/windup", "Date": "2015-06-08T18:45:24Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hintTitlePattern) != null) hintTitlePattern.setParameterStore(store);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2721/buggy-version/reporting.api.src.main.java.org.jboss.windup.reporting.config.Hint.java", "BodyUseAPI": [], "Fixed commit": "77d21ba174c37f99322c82e401c745252596d481", "Url": "https://api.github.com/repos/mbriskar/windup", "Date": "2015-06-08T18:45:24Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (recombP < 1.0E-4) recombP = 1.0E-4;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3491/buggy-version/src.ngsep.hmm.RecombinationHMM.java", "BodyUseAPI": [], "Fixed commit": "ca40861f5e9ef0769117ee51591012aa93d8c93e", "Url": "https://api.github.com/repos/NGSEP/NGSEPcore", "Date": "2017-07-17T23:47:27Z"},
{"Line": "=>1441", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.microsoft.aad.adal.StringExtensions.IsNullOrBlank(result.getRefreshToken())) { com.microsoft.aad.adal.Logger.v(com.microsoft.aad.adal.AuthenticationContext.TAG, \"Refresh token is returned empty\"); result.setRefreshToken(refreshItem.mRefreshToken); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8313/buggy-version/src.src.com.microsoft.aad.adal.AuthenticationContext.java", "BodyUseAPI": ["com.microsoft.aad.adal.AuthenticationResult.setRefreshToken(java.lang.String)"], "Fixed commit": "cf9865d9a2351ef85892cff6c04089ef42d21bab", "Url": "https://api.github.com/repos/AzureAD/azure-activedirectory-library-for-android", "Date": "2014-09-05T22:12:32Z"},
{"Line": "=>1195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mViewPortHandler) == null) return 1.0F; else return mViewPortHandler.getScaleX();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2649/buggy-version/MPChartLib.src.com.github.mikephil.charting.charts.BarLineChartBase.java", "BodyUseAPI": [], "Fixed commit": "39a9d2ea2976a5fedcaf45ac822b79063baa7203", "Url": "https://api.github.com/repos/PhilJay/MPAndroidChart", "Date": "2015-05-04T15:06:24Z"},
{"Line": "=>1205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mViewPortHandler) == null) return 1.0F; else return mViewPortHandler.getScaleY();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2649/buggy-version/MPChartLib.src.com.github.mikephil.charting.charts.BarLineChartBase.java", "BodyUseAPI": [], "Fixed commit": "39a9d2ea2976a5fedcaf45ac822b79063baa7203", "Url": "https://api.github.com/repos/PhilJay/MPAndroidChart", "Date": "2015-05-04T15:06:24Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.gearvrf.immersivepedia.GazeController.highlightCursor.getParent()) != null) { org.gearvrf.immersivepedia.GazeController.disableGaze(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4468/buggy-version/gvr-immersivepedia.app.src.main.java.org.gearvrf.immersivepedia.GazeController.java", "BodyUseAPI": [], "Fixed commit": "e5ec2b37c5f4b0126519ef8da4d38776f3e1cf03", "Url": "https://api.github.com/repos/parthmehta209/GearVRf-Demos", "Date": "2016-06-27T21:10:57Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tw.edu.ncku.alphatraining.CaptureSessionFragment.timer) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7150/buggy-version/app.src.main.java.tw.edu.ncku.alphatraining.CaptureSessionFragment.java", "BodyUseAPI": [], "Fixed commit": "4457e07fab031be516e65eeda154baa99c9e604f", "Url": "https://api.github.com/repos/hirokiht/AlphaTraining", "Date": "2015-12-03T13:35:59Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.getEndPage().equals((-1))) { sEndPage = \"\"; }else { sEndPage = this.getEndPage().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5646/buggy-version/dspace-api.src.main.java.org.dspace.content.DCPagenumber.java", "BodyUseAPI": [], "Fixed commit": "a4af1a18916735ba95b9ce29a6d5aa9fa9084a6e", "Url": "https://api.github.com/repos/sandropinna/DSpace", "Date": "2013-01-27T10:28:11Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getStartPage().equals((-1))) && (this.getEndPage().equals((-1)))) { ret = \"\"; }else { ret = (sStartPage + \"-\") + sEndPage; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5646/buggy-version/dspace-api.src.main.java.org.dspace.content.DCPagenumber.java", "BodyUseAPI": [], "Fixed commit": "a4af1a18916735ba95b9ce29a6d5aa9fa9084a6e", "Url": "https://api.github.com/repos/sandropinna/DSpace", "Date": "2013-01-27T10:28:11Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.activemq.command.Message.getOriginalDestination()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (origDest != null) { org.apache.activemq.util.ByteSequence origDestBytes = marshaller.marshal(origDest); origDestBytes.compact(); coreMessage.putBytesProperty(org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.AMQ_MSG_ORIG_DESTINATION, origDestBytes.data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/9044/buggy-version/artemis-protocols.artemis-openwire-protocol.src.main.java.org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.java", "BodyUseAPI": ["org.apache.activemq.wireformat.WireFormat.marshal(org.apache.activemq.command.ActiveMQDestination)"], "Fixed commit": "2c36d93f5cbaa167f27ad39f2abf2b23ec255fab", "Url": "https://api.github.com/repos/apache/activemq-artemis", "Date": "2016-02-18T12:52:32Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(map.get(i).isEmpty())) { str = str + (new java.lang.Double(((map.get(i).get(classindex)) / (countMap.get(i).get(classindex)))).toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3200/buggy-version/de.tudarmstadt.ukp.dkpro.tc.weka-gpl.src.main.java.de.tudarmstadt.ukp.dkpro.tc.weka.report.FeatureValuesReport.java", "BodyUseAPI": ["java.lang.Double.toString()", "java.util.Map<java.lang.Integer, java.util.HashMap<java.lang.Integer, java.lang.Double>>.get(int)", "java.util.HashMap<java.lang.Integer, java.lang.Double>.get(int)", "java.util.Map<java.lang.Integer, java.util.HashMap<java.lang.Integer, java.lang.Integer>>.get(int)", "java.util.HashMap<java.lang.Integer, java.lang.Integer>.get(int)"], "Fixed commit": "ed64be1363c63034a4f704e3623b5e2c83c3d5b8", "Url": "https://api.github.com/repos/dkpro/dkpro-tc", "Date": "2013-08-01T12:52:12Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(str.isEmpty())) { props.setProperty(classValues[classindex], str); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3200/buggy-version/de.tudarmstadt.ukp.dkpro.tc.weka-gpl.src.main.java.de.tudarmstadt.ukp.dkpro.tc.weka.report.FeatureValuesReport.java", "BodyUseAPI": ["java.util.Properties.setProperty(java.lang.String,java.lang.String)"], "Fixed commit": "ed64be1363c63034a4f704e3623b5e2c83c3d5b8", "Url": "https://api.github.com/repos/dkpro/dkpro-tc", "Date": "2013-08-01T12:52:12Z"},
{"Line": "=>561", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Board.getVerticalDiff(Piece,Piece)", "Board.getHorizontalDiff(Piece,Piece)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((verticalDiff == (-2)) && ((source.y) == 6)) && (horizontalDiff == 0)) { if ((dest.isEmpty()) && (getPieceAt(source.x, ((source.y) - 1)).isEmpty())) return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/9169/buggy-version/src.Board.java", "BodyUseAPI": ["Board.getPieceAt(source.x,((source.y) - 1))", "Piece.isEmpty()"], "Fixed commit": "2ec5c1ab2b443f642dde49f8f2889cbe30d9d9d8", "Url": "https://api.github.com/repos/rbarman/ChessEngine", "Date": "2014-08-08T01:11:52Z"},
{"Line": "=>579", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Board.getHorizontalDiff(Piece,Piece)", "Board.getVerticalDiff(Piece,Piece)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((verticalDiff == 2) && ((source.y) == 1)) && (horizontalDiff == 0)) { if ((dest.isEmpty()) && (getPieceAt(source.x, ((source.y) + 1)).isEmpty())) return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/9169/buggy-version/src.Board.java", "BodyUseAPI": ["Piece.isEmpty()", "Board.getPieceAt(source.x,((source.y) + 1))"], "Fixed commit": "2ec5c1ab2b443f642dde49f8f2889cbe30d9d9d8", "Url": "https://api.github.com/repos/rbarman/ChessEngine", "Date": "2014-08-08T01:11:52Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((offset < 0) || (count < 0)) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7955/buggy-version/src.org.exist.dom.persistent.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "5d30925d228b984d8fe80d01fcbb97f98926ebb0", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:14:34Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((offset < 0) || (count < 0)) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7955/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "5d30925d228b984d8fe80d01fcbb97f98926ebb0", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:14:34Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isVaccinationRefused(resource)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8542/buggy-version/src.main.java.org.sharedhealth.datasense.handler.ImmunizationResourceHandler.java", "BodyUseAPI": [], "Fixed commit": "684426b52d4ad13a62582e3947f03ba8b850a8de", "Url": "https://api.github.com/repos/SharedHealth/SHR-Datasense", "Date": "2015-02-17T06:37:45Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n == 0) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2287/buggy-version/java.org.m2mp.db.src.main.java.org.m2mp.db.registry.file.DbFileInputStream.java", "BodyUseAPI": [], "Fixed commit": "8d84ac1f1e5473e92fac39b4ccc98db52d4f5272", "Url": "https://api.github.com/repos/fclairamb/m2mp", "Date": "2014-06-29T01:59:42Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.lang.ASTNode.getElementType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((elementType == (net.seesharpsoft.intellij.plugins.csv.psi.CsvTypes.COMMA)) || (elementType == (net.seesharpsoft.intellij.plugins.csv.psi.CsvTypes.CRLF))) { blocks.add(new net.seesharpsoft.intellij.plugins.csv.formatter.CsvBlockElement(node, formattingInfo, currentField)); }else if ((elementType != (com.intellij.psi.TokenType.WHITE_SPACE)) && ((node.getTextLength()) > 0)) { blocks.add(new net.seesharpsoft.intellij.plugins.csv.formatter.CsvDummyBlock(node, formattingInfo)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/391/buggy-version/src.main.java.net.seesharpsoft.intellij.plugins.csv.formatter.CsvBlock.java", "BodyUseAPI": [], "Fixed commit": "17da1bc36eb60732336c50b4869777b8240e8be5", "Url": "https://api.github.com/repos/SeeSharpSoft/intellij-csv-validator", "Date": "2017-09-29T20:44:18Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, com.ctrip.hermes.metaserver.commons.ActiveClientList.ClientContext>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((clientContext.getPort()) != port) { m_changed = true; clientContext.setPort(port); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8901/buggy-version/hermes-metaserver.src.main.java.com.ctrip.hermes.metaserver.commons.ActiveClientList.java", "BodyUseAPI": ["com.ctrip.hermes.metaserver.commons.ActiveClientList.ClientContext.setPort(int)"], "Fixed commit": "0c5343ff1203265e1252d0908847628e25e61f11", "Url": "https://api.github.com/repos/yiming187/hermes", "Date": "2015-06-04T03:33:59Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, com.ctrip.hermes.metaserver.commons.ActiveClientList.ClientContext>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(clientContext.getIp().equals(ip))) { m_changed = true; clientContext.setIp(ip); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8901/buggy-version/hermes-metaserver.src.main.java.com.ctrip.hermes.metaserver.commons.ActiveClientList.java", "BodyUseAPI": ["com.ctrip.hermes.metaserver.commons.ActiveClientList.ClientContext.setIp(java.lang.String)"], "Fixed commit": "0c5343ff1203265e1252d0908847628e25e61f11", "Url": "https://api.github.com/repos/yiming187/hermes", "Date": "2015-06-04T03:33:59Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.drew.metadata.Metadata.getDirectory(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((exifIFDOD.getString(ExifIFD0Directory.TAG_MAKE)) != null) { imageCameraBrand = exifIFDOD.getString(ExifIFD0Directory.TAG_MAKE); imageCameraModel = exifIFDOD.getString(ExifIFD0Directory.TAG_MODEL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5543/buggy-version/src.nss.Libs.java", "BodyUseAPI": ["com.drew.metadata.exif.ExifIFD0Directory.getString(ExifIFD0Directory.TAG_MODEL)", "com.drew.metadata.exif.ExifIFD0Directory.getString(ExifIFD0Directory.TAG_MAKE)"], "Fixed commit": "db8584751f3966185942735488d39de90a7837f8", "Url": "https://api.github.com/repos/PRES1DENT/PSMini", "Date": "2015-01-30T06:48:22Z"},
{"Line": "=>687", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (returnedParameter.equals(\"Corelogic\")) returnedParameter = \"Samsung\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5543/buggy-version/src.nss.Libs.java", "BodyUseAPI": [], "Fixed commit": "db8584751f3966185942735488d39de90a7837f8", "Url": "https://api.github.com/repos/PRES1DENT/PSMini", "Date": "2015-01-30T06:48:22Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (remainder != 0) { if (absUserAnswer > absCorrectAnswer) { for (int i = 0; i < (numberOfBoxesToAnimate - 1); ++i) { containedInEach.add(absUserAnswer); } containedInEach.add(remainder); }else { for (int i = 0; i < numberOfBoxesToAnimate; ++i) { containedInEach.add(absUserAnswer); } } }else { for (int i = 0; i < numberOfBoxesToAnimate; ++i) { containedInEach.add(absUserAnswer); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3419/buggy-version/app.src.main.java.com.freelance.jptalusan.linearops.Utilities.Utilities.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Integer>.add(int)"], "Fixed commit": "6b0aa404dd701fec34c374c2a82c389b96b02bc8", "Url": "https://api.github.com/repos/linusmotu/LinearOps", "Date": "2017-08-21T15:42:34Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (j >= (list.size())) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5696/buggy-version/src.main.java.seedu.address.ui.MeetingAlert.java", "BodyUseAPI": [], "Fixed commit": "ae9fdf80c9baa18782f3d7409f21dbcfe745ac20", "Url": "https://api.github.com/repos/CS2103AUG2017-T09-B2/main", "Date": "2017-11-02T01:48:40Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.JsonParser.parse(java.io.StringReader)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (element.isJsonObject()) { final com.google.gson.JsonObject json = element.getAsJsonObject(); final com.google.gson.JsonObject error = json.getAsJsonObject(\"error\"); if (null == error) { this.append(buffer, message); }else { final com.google.gson.JsonPrimitive tag = error.getAsJsonPrimitive(\".tag\"); if (null == tag) { this.append(buffer, message); }else { this.append(buffer, org.apache.commons.lang3.StringUtils.replace(tag.getAsString(), \"_\", \" \")); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3367/buggy-version/dropbox.src.main.java.ch.cyberduck.core.dropbox.DropboxExceptionMappingService.java", "BodyUseAPI": ["com.google.gson.JsonElement.getAsJsonObject()"], "Fixed commit": "71bbb30c63b11d68886588945774fef7e642a917", "Url": "https://api.github.com/repos/iterate-ch/cyberduck", "Date": "2017-07-11T16:12:19Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.JsonParser.parse(java.io.StringReader)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (element.isJsonPrimitive()) { this.append(buffer, element.getAsString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3367/buggy-version/dropbox.src.main.java.ch.cyberduck.core.dropbox.DropboxExceptionMappingService.java", "BodyUseAPI": ["ch.cyberduck.core.dropbox.DropboxExceptionMappingService.append(java.lang.StringBuilder,element.getAsString())", "com.google.gson.JsonElement.getAsString()"], "Fixed commit": "71bbb30c63b11d68886588945774fef7e642a917", "Url": "https://api.github.com/repos/iterate-ch/cyberduck", "Date": "2017-07-11T16:12:19Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(offline)) && ((userTeam) != (playerTurn))) { indexOfNoChange = history.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/9136/buggy-version/src.Engine.Engine.java", "BodyUseAPI": [], "Fixed commit": "7679ec677552da290169fc4b9c64ed9aa07257e4", "Url": "https://api.github.com/repos/DanORourke/Carrion3.0", "Date": "2017-09-19T21:47:24Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((element == null) || (subtractedString == null)) { return subtractedString; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/678/buggy-version/components.basic-transformers.src.main.java.org.datacleaner.beans.transform.RemoveSubstringTransformer.java", "BodyUseAPI": [], "Fixed commit": "e4da54f3c34acc67735793bee5c204a6a92daabd", "Url": "https://api.github.com/repos/datacleaner/DataCleaner", "Date": "2016-02-01T18:28:03Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (endPos != (-1)) { endPos = startPos + endPos; }else { endPos = project.length(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/210/buggy-version/src.main.java.com.tzg.plugin.module.support.ModuleSupport.java", "BodyUseAPI": [], "Fixed commit": "827437e94fe645f141305c20faf0208c66e948b8", "Url": "https://api.github.com/repos/1494445739/tzg-maven-plugin", "Date": "2017-07-19T10:18:54Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((game.getState()) == 1) { int moveResult = game.move(c); infoPane.displayMovesLeft(game.getMovesLeft()); canvas.repaint(); if ((moveResult == (cluedo.board.Board.SUCCESS)) && ((game.getRoom()) != (cluedo.board.Board.NOTHING))) { int guess = new cluedo.ui.SuggestDialog(game.getRoom()).getGuess(); if (game.suggest(guess)) { canvas.repaint(); } } }else if (((game.getState()) == 0) && ((game.getRoom(c)) == (cluedo.board.Board.MIDDLE))) { int guess = new cluedo.ui.SuggestDialog(0).getGuess(); int result = game.accuse(guess); if (result == (cluedo.board.Board.SUCCESS)) { if ((game.getState()) == 5) { javax.swing.JOptionPane.showMessageDialog(this, ((\"Game over, \" + (players.get(currentPlayer))) + \" won!\")); int playAgain = javax.swing.JOptionPane.showConfirmDialog(this, \"Play again?\", \"\", javax.swing.JOptionPane.YES_NO_OPTION); if (playAgain == (javax.swing.JOptionPane.YES_OPTION)) { try { this.restart(cluedo.Main.createBoardFromFile(\"board.txt\")); } catch (java.io.IOException err) { java.lang.System.out.println(e); } }else { java.lang.System.exit(0); } } }else if (result == (cluedo.board.Board.FAIL)) { javax.swing.JOptionPane.showMessageDialog(this, \"Incorrect guess, you lose!\"); javax.swing.JOptionPane.showMessageDialog(this, ((players.get(currentPlayer)) + \" has lost and may no longer play except to refute.\")); if ((game.getState()) == 5) { javax.swing.JOptionPane.showMessageDialog(this, \"Game over!\"); int playAgain = javax.swing.JOptionPane.showConfirmDialog(this, \"Play again?\", \"\", javax.swing.JOptionPane.YES_NO_OPTION); if (playAgain == (javax.swing.JOptionPane.YES_OPTION)) { try { this.restart(cluedo.Main.createBoardFromFile(\"board.txt\")); } catch (java.io.IOException err) { java.lang.System.out.println(e); } }else { java.lang.System.exit(0); } } }else { java.lang.System.out.println(\"guess should not have been made\"); } }else if (((game.getState()) == 0) && ((((((game.getRoom()) == (cluedo.board.Board.KITCHEN)) && ((game.getRoom(c)) == (cluedo.board.Board.STUDY))) || (((game.getRoom()) == (cluedo.board.Board.STUDY)) && ((game.getRoom(c)) == (cluedo.board.Board.KITCHEN)))) || (((game.getRoom()) == (cluedo.board.Board.CONSERVATORY)) && ((game.getRoom(c)) == (cluedo.board.Board.LOUNGE)))) || (((game.getRoom()) == (cluedo.board.Board.LOUNGE)) && ((game.getRoom(c)) == (cluedo.board.Board.CONSERVATORY))))) { game.takePassage(); canvas.repaint(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6588/buggy-version/src.cluedo.ui.CluedoUI.java", "BodyUseAPI": ["cluedo.board.Board.getRoom()", "cluedo.board.Board.getRoom(cluedo.Coordinate)", "cluedo.board.Board.getRoom(cluedo.Coordinate)", "cluedo.board.Board.suggest(int)", "cluedo.board.Board.getRoom()", "cluedo.board.Board.getRoom(cluedo.Coordinate)", "cluedo.board.Board.getState()", "cluedo.board.Board.getRoom(cluedo.Coordinate)", "cluedo.board.Board.getState()", "cluedo.board.Board.getState()", "cluedo.board.Board.getRoom()", "cluedo.board.Board.getRoom()", "cluedo.board.Board.getMovesLeft()", "cluedo.board.Board.getRoom()", "cluedo.board.Board.getRoom()", "cluedo.board.Board.takePassage()", "cluedo.board.Board.getRoom(cluedo.Coordinate)", "cluedo.ui.SuggestDialog.getGuess()", "cluedo.ui.InfoPane.displayMovesLeft(game.getMovesLeft())", "cluedo.board.Board.accuse(int)", "cluedo.board.Board.move(cluedo.Coordinate)", "cluedo.board.Board.getState()"], "Fixed commit": "0ea562df926efe216170dbf606d1d079e845b571", "Url": "https://api.github.com/repos/LizbethKim/Cluedo", "Date": "2014-08-16T03:40:31Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((baseJsonResponse.getInt(\"totalItems\")) == 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6614/buggy-version/app.src.main.java.com.example.android.bookapp.QueryUtils.java", "BodyUseAPI": [], "Fixed commit": "68cb976f571e166675e898393f4377008752b07a", "Url": "https://api.github.com/repos/wszeborowskimateusz/BookApp", "Date": "2017-09-20T12:50:27Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mFirebaseAuth.getCurrentUser().getPhotoUrl()) != null) com.squareup.picasso.Picasso.with(getBaseContext()).load(mFirebaseAuth.getCurrentUser().getPhotoUrl().toString()).into(profilePhoto);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4932/buggy-version/app.src.main.java.com.tvz.tomislav.qwaiter.MainActivity.java", "BodyUseAPI": ["mFirebaseAuth.getCurrentUser().getPhotoUrl().toString()", "com.squareup.picasso.Picasso.with(getBaseContext()).load(mFirebaseAuth.getCurrentUser().getPhotoUrl().toString()).into(android.widget.ImageView)", "mFirebaseAuth.getCurrentUser().getPhotoUrl()", "com.squareup.picasso.Picasso.with(getBaseContext()).load(mFirebaseAuth.getCurrentUser().getPhotoUrl().toString())", "com.google.firebase.auth.FirebaseAuth.getCurrentUser()"], "Fixed commit": "145d1e1366998e884632bcebe8022da56bcddf65", "Url": "https://api.github.com/repos/lipa4/QWaiter-client-app", "Date": "2017-08-27T12:52:14Z"},
{"Line": "=>506", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jdt.core.dom.ASTConverter.retrieveIdentifierEndPosition(int,methodDeclaration.sourceEnd)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (end < start) end = start + (methodDeclaration.selector.length);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2863/buggy-version/org.eclipse.jdt.core.dom.org.eclipse.jdt.core.dom.ASTConverter.java", "BodyUseAPI": [], "Fixed commit": "b9cdfd1bbd7e66ad79e8b7a254a5313e88e4f50c", "Url": "https://api.github.com/repos/Overruler/eclipse.jdt.core", "Date": "2014-04-08T08:40:34Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eTFee.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((strFee.length()) == 0) throw new java.lang.UnsupportedOperationException(\"Fee \u043d\u0435 \u0437\u0430\u0434\u0430\u043d\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3068/buggy-version/app.src.main.java.com.example.maxim.myinvesting.AddInputActivity.java", "BodyUseAPI": [], "Fixed commit": "695117a19efb7c7e748702b8c65d5430d205df1f", "Url": "https://api.github.com/repos/taikonavt/MyInvesting", "Date": "2017-10-23T14:26:00Z"},
{"Line": "=>502", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(java.lang.Integer,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((word.charAt(((word.length()) - 1))) == '\u2019') || ((word.charAt(((word.length()) - 1))) == '`')) { normWord = (word.substring(0, ((word.length()) - 1))) + \"'\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5353/buggy-version/tint-tokenizer.src.main.java.eu.fbk.dh.tint.tokenizer.ItalianTokenizer.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "5bb17fe6b32686de8d24f7ec9804dcd595047418", "Url": "https://api.github.com/repos/dhfbk/tint", "Date": "2016-11-08T12:47:43Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.dettaa.jupitersliderexample.MainActivity.isActive) android.widget.Toast.makeText(this, (\"slide changed, new position is: \" + slidePosition), Toast.LENGTH_SHORT).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8140/buggy-version/app.src.main.java.com.dettaa.jupitersliderexample.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "2bab5489a57d59d84e63e2f5ed327a30a701e11b", "Url": "https://api.github.com/repos/Studiomjt/JupiterSlider", "Date": "2017-11-24T14:01:39Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["book.getAssociatedKeywords().split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((kwrds.length) == 1) { if (book.getAssociatedKeywords().toLowerCase().equalsIgnoreCase(keyword.toLowerCase())) { deleteList.add(book); } }else if ((kwrds.length) > 1) { for (int i = 0; i < (kwrds.length); i++) { if (kwrds[i].toLowerCase().equalsIgnoreCase(keyword.toLowerCase())) { java.util.ArrayList<java.lang.String> temp = new java.util.ArrayList<>(java.util.Arrays.asList(kwrds)); temp.remove(kwrds[i]); book.setAssociatedKeywords(java.lang.String.join(\",\", temp)); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4372/buggy-version/src.main.java.com.uni.viss.HomeController.java", "BodyUseAPI": ["java.util.Arrays.asList(java.lang.String[])", "java.lang.String.toLowerCase()", "java.util.ArrayList<java.lang.String>.remove(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "b5e781dece830c8eef8376b8df4850afc4c2a97f", "Url": "https://api.github.com/repos/jagrutkosti/Text2Catalog", "Date": "2016-02-09T20:17:53Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.griddynamics.jagger.webclient.client.handler.DetailsNode.getSessionScopeNode()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (sessionScopeNode != null) { testScopePlotNames.addAll(sessionScopeNode.getMetrics()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8282/buggy-version/webclient.src.main.java.com.griddynamics.jagger.webclient.client.handler.DetailsNodeHandler.java", "BodyUseAPI": ["java.util.Set<com.griddynamics.jagger.webclient.client.handler.MetricNode>.addAll(sessionScopeNode.getMetrics())", "com.griddynamics.jagger.webclient.client.handler.MetricGroupNode<com.griddynamics.jagger.webclient.client.handler.PlotNode>.getMetrics()"], "Fixed commit": "330d9b95af69d0e61bd1b954295bd010820f6b3c", "Url": "https://api.github.com/repos/aovodov/jagger", "Date": "2014-06-25T08:34:38Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (newStack != null) { newStack = ((java.util.Stack<net.demilich.metastone.game.targeting.EntityReference>) (newStack.clone())); for (int i = 0; i < (newStack.size()); i++) { newStack.set(i, ((net.demilich.metastone.game.targeting.EntityReference) ((net.demilich.metastone.game.targeting.EntityReference) (newStack.get(i))))); } cloneMap.remove(Environment.EVENT_TARGET_REFERENCE_STACK); cloneMap.put(Environment.EVENT_TARGET_REFERENCE_STACK, newStack); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7574/buggy-version/src.java.behaviors.simulation.SimulationContext.java", "BodyUseAPI": ["java.util.Stack<net.demilich.metastone.game.targeting.EntityReference>.clone()"], "Fixed commit": "250dc90b8a04ae53b6fae07b1ac539f31cdcdff2", "Url": "https://api.github.com/repos/dfreelan/MCTSHearthstone", "Date": "2016-06-20T20:22:56Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getEnvironment().get(Environment.SUMMON_REFERENCE_STACK)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (newStack != null) { newStack = ((java.util.Stack<net.demilich.metastone.game.targeting.EntityReference>) (newStack.clone())); for (int i = 0; i < (newStack.size()); i++) { newStack.set(i, ((net.demilich.metastone.game.targeting.EntityReference) ((net.demilich.metastone.game.targeting.EntityReference) (newStack.get(i))))); } cloneMap.remove(Environment.SUMMON_REFERENCE_STACK); cloneMap.put(Environment.SUMMON_REFERENCE_STACK, newStack); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7574/buggy-version/src.java.behaviors.simulation.SimulationContext.java", "BodyUseAPI": ["java.util.Stack<net.demilich.metastone.game.targeting.EntityReference>.clone()"], "Fixed commit": "250dc90b8a04ae53b6fae07b1ac539f31cdcdff2", "Url": "https://api.github.com/repos/dfreelan/MCTSHearthstone", "Date": "2016-06-20T20:22:56Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getButton().getButtonID()) > 0) { view.setColor(e.getButton().getColor()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6124/buggy-version/src.control.GameControl.java", "BodyUseAPI": ["e.getButton().getColor()", "control.button.ButtonEvent.getButton()", "view.GameView.setColor(e.getButton().getColor())"], "Fixed commit": "27c04e2b2acfb45e849115ea5e5c7babe88dba76", "Url": "https://api.github.com/repos/ProjectGroepA2/Arcade-controls", "Date": "2015-05-21T19:20:47Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (a.isAnon()) throw new java.lang.IllegalArgumentException(\"Cannot resolve against a blank node\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8666/buggy-version/src.main.java.uk.ac.bristol.dundry.Util.java", "BodyUseAPI": [], "Fixed commit": "4736d937fca93a9b44a482fd9e4f05e00f879ab8", "Url": "https://api.github.com/repos/ilrt/dundry", "Date": "2012-04-30T14:27:37Z"},
{"Line": "=>575", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((spy.getBullets()) == 1) { return 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4905/buggy-version/src.edu.cpp.cs.cs141.finalProject.Engine.java", "BodyUseAPI": [], "Fixed commit": "35e9c9b1b4f3d582e9a1cd7ae7a963e7b602998a", "Url": "https://api.github.com/repos/HomegrownWookie/GRE4KA", "Date": "2015-11-23T18:59:47Z"},
{"Line": "=>665", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((spy.getBullets()) == 1) { return 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4905/buggy-version/src.edu.cpp.cs.cs141.finalProject.Engine.java", "BodyUseAPI": [], "Fixed commit": "35e9c9b1b4f3d582e9a1cd7ae7a963e7b602998a", "Url": "https://api.github.com/repos/HomegrownWookie/GRE4KA", "Date": "2015-11-23T18:59:47Z"},
{"Line": "=>719", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((spy.getBullets()) == 1) { return 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4905/buggy-version/src.edu.cpp.cs.cs141.finalProject.Engine.java", "BodyUseAPI": [], "Fixed commit": "35e9c9b1b4f3d582e9a1cd7ae7a963e7b602998a", "Url": "https://api.github.com/repos/HomegrownWookie/GRE4KA", "Date": "2015-11-23T18:59:47Z"},
{"Line": "=>620", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((spy.getBullets()) == 1) { return 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4905/buggy-version/src.edu.cpp.cs.cs141.finalProject.Engine.java", "BodyUseAPI": [], "Fixed commit": "35e9c9b1b4f3d582e9a1cd7ae7a963e7b602998a", "Url": "https://api.github.com/repos/HomegrownWookie/GRE4KA", "Date": "2015-11-23T18:59:47Z"},
{"Line": "=>424", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.pentaho.platform.repository2.unified.webservices.DefaultUnifiedRepositoryWebService.getLocalePropertiesForFileById(file.getId(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (propertiesWrapper != null) { java.util.Properties properties = propertiesWrapper.getProperties(); if ((properties != null) && (!(properties.isEmpty()))) { for (java.lang.String key : properties.stringPropertyNames()) { keyValueList.add(getStringKeyStringValueDto(key, properties.getProperty(key))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8627/buggy-version/extensions.src.org.pentaho.platform.web.http.api.resources.services.FileService.java", "BodyUseAPI": ["org.pentaho.platform.repository2.unified.webservices.PropertiesWrapper.getProperties()"], "Fixed commit": "c9d260cbe07bf4c86981e24417f3ca67a241aa94", "Url": "https://api.github.com/repos/pentaho/pentaho-platform", "Date": "2014-09-11T18:38:39Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(neuerTag.equals(\"\"))) { com.fhaachen.swe.freespace.main.Tag.addNeuerTag(neuerTag); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4737/buggy-version/Implementierung.FreeSpace-Server.src.main.java.com.fhaachen.swe.freespace.main.Konfiguration.java", "BodyUseAPI": ["com.fhaachen.swe.freespace.main.Tag.addNeuerTag(java.lang.String)"], "Fixed commit": "77efd00f2bf22125c7054d00fae9a1d2f57f7257", "Url": "https://api.github.com/repos/thomasgor/swe", "Date": "2017-01-08T17:11:53Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (freundschaft != null) { result = freundschaft.toJson(true); result = com.fhaachen.swe.freespace.main.Freundschaft.completeFreundschaft(result, benutzer1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4737/buggy-version/Implementierung.FreeSpace-Server.src.main.java.com.fhaachen.swe.freespace.main.Freundschaft.java", "BodyUseAPI": ["com.fhaachen.swe.freespace.main.Freundschaft.toJson(boolean)"], "Fixed commit": "77efd00f2bf22125c7054d00fae9a1d2f57f7257", "Url": "https://api.github.com/repos/thomasgor/swe", "Date": "2017-01-08T17:11:53Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.getGeneratedKeys()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (rs.next()) { int id = rs.getInt(1); bean.setId(id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6707/buggy-version/src.tmall.util.ProductDAO.java", "BodyUseAPI": ["java.sql.ResultSet.getInt(int)"], "Fixed commit": "2ac51638b666a3adb7cbdceb9b58d02cbdd30a7b", "Url": "https://api.github.com/repos/joychoinjapan/tmallProj_backend", "Date": "2017-07-02T13:43:03Z"},
{"Line": "=>515", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((internalConsumers) != null) && (!(internalConsumers.isEmpty()))) { for (oracle.ateam.sb.transports.kafka.KafkaEndpoint.InternalConsumer consumer : internalConsumers) { consumer.shutdown(); } internalConsumers.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/564/buggy-version/src.oracle.ateam.sb.transports.kafka.KafkaEndpoint.java", "BodyUseAPI": ["java.util.List<oracle.ateam.sb.transports.kafka.KafkaEndpoint.InternalConsumer>.clear()"], "Fixed commit": "1e3a1382fa06bc2aae66a84f402e8ef8d11018af", "Url": "https://api.github.com/repos/oracle/osb-kafka-transport", "Date": "2017-03-03T04:40:21Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jobExecutionContext.getRegistry()) == null) { registry = org.apache.airavata.persistance.registry.jpa.impl.RegistryFactory.getDefaultRegistry(); }else { registry = jobExecutionContext.getRegistry(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6386/buggy-version/modules.gfac.gfac-core.src.main.java.org.apache.airavata.gfac.core.provider.AbstractProvider.java", "BodyUseAPI": ["org.apache.airavata.gfac.core.context.JobExecutionContext.getRegistry()"], "Fixed commit": "c27266970bcab6b28ee3dd8f38a21736cae2a558", "Url": "https://api.github.com/repos/apache/airavata", "Date": "2014-05-21T15:28:19Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rev != null) || (rel != null)) currentObject = createBNode();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5243/buggy-version/src.main.java.net.rootdev.javardfa.Parser.java", "BodyUseAPI": [], "Fixed commit": "beab64196feed7bbf310739932dcc7f9b9efa2d4", "Url": "https://api.github.com/repos/shellac/java-rdfa", "Date": "2013-02-01T00:31:53Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.exent.flywithme.task.NoaaForecastTask.fetchMeteogram(android.location.Location)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (meteogram == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8594/buggy-version/android.flywithme.src.main.java.net.exent.flywithme.task.NoaaForecastTask.java", "BodyUseAPI": [], "Fixed commit": "4861fafdeb75afd55701d172398228765abee2d4", "Url": "https://api.github.com/repos/canidae/FlyWithMe", "Date": "2014-06-15T18:06:15Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.avro.Schema.getField(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (schemaField.getSchema().getType().equals(co.cask.cdap.api.data.schema.Schema.Type.BYTES)) { recordBuilder.set(fieldName, java.nio.ByteBuffer.wrap(((byte[]) (structuredRecord.get(fieldName))))); }else { recordBuilder.set(fieldName, convertField(structuredRecord.get(fieldName), schemaField.getSchema())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6413/buggy-version/core-plugins.src.main.java.co.cask.hydrator.plugin.common.StructuredToAvroTransformer.java", "BodyUseAPI": ["org.apache.avro.generic.GenericRecordBuilder.set(java.lang.String,convertField(structuredRecord.get(fieldName), schemaField.getSchema()))", "co.cask.hydrator.plugin.common.StructuredToAvroTransformer.convertField(structuredRecord.get(fieldName),schemaField.getSchema())", "co.cask.cdap.api.data.schema.Schema.Field.getSchema()"], "Fixed commit": "5d5769a58b95c7d2c5c68b6d04e9bf3e40ec97ee", "Url": "https://api.github.com/repos/shashankmoghe/hydrator-plugins", "Date": "2016-12-27T06:30:56Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mSharePreferences.contains(selection)) { results = new java.lang.Object[]{ \"true\" }; }else { results = new java.lang.Object[]{ \"false\" }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4980/buggy-version/safeshareperferences.src.main.java.com.longway.safeshareperferences.SharePreferencesProvider.java", "BodyUseAPI": [], "Fixed commit": "371b0a7b61be046f204ac7649ff9f4fa92069f2a", "Url": "https://api.github.com/repos/jacklongway/SafeSharedPreferences", "Date": "2016-11-29T03:21:11Z"},
{"Line": "=>1057", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (message != null) { message.setAddress(address); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4761/buggy-version/artemis-core-client.src.main.java.org.apache.activemq.artemis.core.client.impl.ClientSessionImpl.java", "BodyUseAPI": ["org.apache.activemq.artemis.api.core.Message.setAddress(org.apache.activemq.artemis.api.core.SimpleString)"], "Fixed commit": "97bfbeb67767366d9a08a6c7e11b977ccbc45c67", "Url": "https://api.github.com/repos/clebertsuconic/activemq-artemis", "Date": "2016-06-03T15:59:09Z"},
{"Line": "=>1061", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (message != null) { if (!(address.equals(defaultAddress))) { message.setAddress(address); }else { message.setAddress(null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4761/buggy-version/artemis-core-client.src.main.java.org.apache.activemq.artemis.core.client.impl.ClientSessionImpl.java", "BodyUseAPI": ["org.apache.activemq.artemis.api.core.Message.setAddress(<nulltype>)", "org.apache.activemq.artemis.api.core.Message.setAddress(org.apache.activemq.artemis.api.core.SimpleString)"], "Fixed commit": "97bfbeb67767366d9a08a6c7e11b977ccbc45c67", "Url": "https://api.github.com/repos/clebertsuconic/activemq-artemis", "Date": "2016-06-03T15:59:09Z"},
{"Line": "=>429", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((events.get(i).getStartDateTime()) != null) { if ((events.get(i).getStartDateTime().getTime().getDate()) == date) { if ((events.get(i).getStartDateTime().getTime().getMonth()) == month) { results.add(events.get(i)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3106/buggy-version/src.calendrier.gui.ViewController.java", "BodyUseAPI": ["java.util.List<utils.Event>.get(int)", "events.get(i).getStartDateTime().getTime().getMonth()", "java.util.List<utils.Event>.get(int)", "events.get(i).getStartDateTime().getTime()", "events.get(i).getStartDateTime().getTime()", "events.get(i).getStartDateTime().getTime().getDate()", "events.get(i).getStartDateTime()", "java.util.List<utils.Event>.get(int)", "events.get(i).getStartDateTime()", "java.util.List<utils.Event>.add(events.get(i))"], "Fixed commit": "ca0d059b1adfb1922ef49337c5c72a505ab228c5", "Url": "https://api.github.com/repos/cs2103aug2015-F11-4j/main", "Date": "2015-11-09T13:11:11Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.atlassian.jgitflow.core.util.Ref.getName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((simpleName.indexOf(JGitFlowConstants.R_REMOTE_ORIGIN)) >= 0) { simpleName = simpleName.substring(((ref.getName().indexOf(JGitFlowConstants.R_REMOTE_ORIGIN)) + (JGitFlowConstants.R_REMOTE_ORIGIN.length()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5334/buggy-version/jgit-flow-core.src.main.java.com.atlassian.jgitflow.core.util.GitHelper.java", "BodyUseAPI": ["java.lang.String.substring(((ref.getName().indexOf(JGitFlowConstants.R_REMOTE_ORIGIN)) + (JGitFlowConstants.R_REMOTE_ORIGIN.length())))"], "Fixed commit": "3be7acb12e298084433ca2b66b422685e75606c5", "Url": "https://api.github.com/repos/CenturylinkTechnology/jgit-flow", "Date": "2015-06-11T20:41:54Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.atlassian.jgitflow.core.util.Ref.getName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((simpleName.indexOf(Constants.R_HEADS)) >= 0) { simpleName = simpleName.substring(((ref.getName().indexOf(Constants.R_HEADS)) + (Constants.R_HEADS.length()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5334/buggy-version/jgit-flow-core.src.main.java.com.atlassian.jgitflow.core.util.GitHelper.java", "BodyUseAPI": ["java.lang.String.substring(((ref.getName().indexOf(Constants.R_HEADS)) + (Constants.R_HEADS.length())))"], "Fixed commit": "3be7acb12e298084433ca2b66b422685e75606c5", "Url": "https://api.github.com/repos/CenturylinkTechnology/jgit-flow", "Date": "2015-06-11T20:41:54Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (uncommitedAddQueries.containsKey(queryId)) return uncommitedAddQueries.get(queryId); else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2596/buggy-version/src.main.java.uk.co.flax.luwak.Monitor.java", "BodyUseAPI": ["java.util.Map<java.lang.String, uk.co.flax.luwak.MonitorQuery>.get(java.lang.String)"], "Fixed commit": "f3dd39744b60d89945d9f87eec2e039ffdb2624f", "Url": "https://api.github.com/repos/prog8/luwak", "Date": "2014-04-18T00:27:29Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.phicdy.mycuration.view.fragment.CurationListFragment.1.curationAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (curation != null) { mListener.onCurationListClicked(curation.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7416/buggy-version/mycuration.src.main.java.com.phicdy.mycuration.view.fragment.CurationListFragment.java", "BodyUseAPI": ["com.phicdy.mycuration.rss.Curation.getId()", "com.phicdy.mycuration.view.fragment.CurationListFragment.OnCurationListFragmentListener.onCurationListClicked(curation.getId())"], "Fixed commit": "7e9ea8bc2cdc1ed3a79e60058f4e010abf9e2543", "Url": "https://api.github.com/repos/phicdy/MyCuration", "Date": "2017-09-23T03:08:40Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getLayoutY()) % 10) < 5) { setLayoutY(((getLayoutY()) - ((getLayoutY()) % 10))); }else { setLayoutY((((getLayoutY()) + 10) - ((getLayoutY()) % 10))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1265/buggy-version/src.proj7BeckChanceRemondiSalerno.Views.NoteGroupablePane.java", "BodyUseAPI": [], "Fixed commit": "c2fe61c9f6f1df5e3eeec847cd9c2d256a19d081", "Url": "https://api.github.com/repos/mremondi/CS361", "Date": "2016-11-15T22:12:02Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((dy % 10) < 5) { this.dy = dy - (dy % 10); }else { this.dy = (dy - 10) - (dy % 10); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1265/buggy-version/src.proj7BeckChanceRemondiSalerno.CompositionActions.MoveAction.java", "BodyUseAPI": [], "Fixed commit": "c2fe61c9f6f1df5e3eeec847cd9c2d256a19d081", "Url": "https://api.github.com/repos/mremondi/CS361", "Date": "2016-11-15T22:12:02Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.toString()", "getResources().getStringArray(R.array.pref_movie_order_values)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((orders[0].equals(stringValue)) || (orders[1].equals(stringValue))) com.ynmiyou.popmovie.sync.POPMovieSyncAdapter.syncImmediately(getBaseContext());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7934/buggy-version/app.src.main.java.com.ynmiyou.popmovie.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "a46097975af5a248a362e33693f82312a37445c3", "Url": "https://api.github.com/repos/TNTest/POPMovie", "Date": "2016-09-29T08:10:34Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (condition.getReturnType().equals(java.lang.String.class.getName())) { if (enableCycles) { cycleButton.setSelection(true); stackLayout.topControl = editor.getParent(); }else { fixedDateButton.setSelection(true); stackLayout.topControl = calendarEditor; } }else if (condition.getReturnType().equals(java.lang.Long.class.getName())) { durationButton.setSelection(true); stackLayout.topControl = durationEditor; }else if (condition.getReturnType().equals(java.util.Date.class.getName())) { fixedDateButton.setSelection(true); stackLayout.topControl = calendarEditor; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5767/buggy-version/bundles.plugins.org.bonitasoft.studio.properties.src.org.bonitasoft.studio.properties.sections.timer.wizard.TimerConditionWizardPage.java", "BodyUseAPI": ["condition.getReturnType().equals(java.lang.String)", "org.bonitasoft.studio.model.expression.Expression.getReturnType()", "org.bonitasoft.studio.model.expression.Expression.getReturnType()", "condition.getReturnType().equals(java.lang.String)"], "Fixed commit": "727b9e37ebbe657b1cd9a44bf8656eb5afaa4890", "Url": "https://api.github.com/repos/bonitasoft/bonita-studio", "Date": "2014-01-08T08:56:04Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MenuItem.getItemId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == (android.R.id.home)) { finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3981/buggy-version/app.src.main.java.com.shawnhu.seagull.seagull.activities.ShowUserActivity.java", "BodyUseAPI": [], "Fixed commit": "fc48aa467092a392ab13ee66072f5ef1c2ada2ba", "Url": "https://api.github.com/repos/ShawnOceanHu/SeaGull", "Date": "2014-09-02T03:55:30Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActionBar()) != null) { getActionBar().setDisplayHomeAsUpEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3981/buggy-version/app.src.main.java.com.shawnhu.seagull.seagull.activities.ShowUserActivity.java", "BodyUseAPI": [], "Fixed commit": "fc48aa467092a392ab13ee66072f5ef1c2ada2ba", "Url": "https://api.github.com/repos/ShawnOceanHu/SeaGull", "Date": "2014-09-02T03:55:30Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sample.model.dao.MessageDao.findOne(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((opened.getReceiver()) != user) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2184/buggy-version/tutoris_bernae.src.main.java.org.sample.controller.service.MessageService.java", "BodyUseAPI": [], "Fixed commit": "aac1b4afb647cfa8784c6769c2f66a7b7c445c2c", "Url": "https://api.github.com/repos/unibe-ese/ese2015-team3", "Date": "2015-11-17T21:23:17Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URL.toExternalForm()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (u.replace(\"/\", \"\").endsWith(\".deviantart.com\")) { if (!(u.endsWith(\"/\"))) { u += \"/\"; } u += \"gallery/?\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/9048/buggy-version/src.main.java.com.rarchives.ripme.ripper.rippers.DeviantartRipper.java", "BodyUseAPI": ["java.lang.String.endsWith(java.lang.String)"], "Fixed commit": "c2a9d680b2073001ea0f35fc288cf22222143c19", "Url": "https://api.github.com/repos/4pr0n/ripme", "Date": "2015-01-26T05:12:30Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((strID != null) || (strID != \"\")) { rankID = java.lang.Integer.parseInt(strID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5746/buggy-version/src.com.env.qualitymetrics.controller.RankingController.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "93936312921965ad8a596460cfad4f6453210f03", "Url": "https://api.github.com/repos/zhangdinet/QualityMetrics", "Date": "2014-07-07T03:10:36Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_myEvent) { _attendButton.setVisibility(View.GONE); }else { _attendButton.setOnClickListener(new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View v) { } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/528/buggy-version/src.il.ac.huji.app4beer.EventManager.java", "BodyUseAPI": [], "Fixed commit": "00c99f7d9a2c43ca4a3a2923ac836d2c955510c1", "Url": "https://api.github.com/repos/kaufman-netanel/App4Beer", "Date": "2013-09-30T10:04:09Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.path.getReEncoded().getAsString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((path.trim().length()) < 1) { path = \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5858/buggy-version/src.main.java.ch.sentric.URL.java", "BodyUseAPI": [], "Fixed commit": "c6025159e8cb0a93915d74371f1f61b40be40587", "Url": "https://api.github.com/repos/JamesSullivan/url-normalization", "Date": "2014-05-20T10:45:50Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (varIntLen > 0) { writeUnsignedVarInt(page, (pos -= varIntLen), len); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4071/buggy-version/src.main.java.org.cojen.tupl.UndoLog.java", "BodyUseAPI": ["org.cojen.tupl.UndoLog.writeUnsignedVarInt(byte[],int,int)"], "Fixed commit": "ac138dfff2d13c2831ced0bd6f154fbac17f254e", "Url": "https://api.github.com/repos/cojen/Tupl", "Date": "2013-03-13T01:41:52Z"},
{"Line": "=>523", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.primitives.Ints.tryParse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (flagMask == null) { flagMask = com.zimbra.cs.mailbox.Flag.toBitmask(mFlags); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2374/buggy-version/store.src.java.com.zimbra.cs.service.mail.ItemActionHelper.java", "BodyUseAPI": [], "Fixed commit": "524bacc471a095263b09c1bb647c3b8e98b7a7b0", "Url": "https://api.github.com/repos/Zimbra/zm-mailbox", "Date": "2017-07-14T18:10:38Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sound.startsWith(\".\")) sound = sound.substring(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4404/buggy-version/src.sound.Sound.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "0a33f0da9f67bdd23fb5a3a751bdfc72b562d146", "Url": "https://api.github.com/repos/eternalStudent/100", "Date": "2014-11-06T14:31:33Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((org.jboss.forge.furnace.proxy.Proxies.isForgeProxy(this)) && (!(org.jboss.forge.furnace.util.Annotations.isAnnotationPresent(getClass(), org.jboss.windup.config.metadata.RuleMetadata.class)))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2947/buggy-version/config.api.src.main.java.org.jboss.windup.config.AbstractRuleProvider.java", "BodyUseAPI": [], "Fixed commit": "871ad3ed4c44299ac89f9db17e79687161e39acd", "Url": "https://api.github.com/repos/jsight/windup", "Date": "2016-08-24T19:05:58Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.Ben12345rocks.VotingPlugin.Config.Config.getInstance().getDebugEnabled()) { com.Ben12345rocks.VotingPlugin.Objects.Reward.plugin.getLogger().info((((\"Attempting to give \" + (user.getPlayerName())) + \" reward \") + (name))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8069/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Objects.Reward.java", "BodyUseAPI": [], "Fixed commit": "e3d9929e6d98baf776b3149dadc4525f0da95106", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2016-07-03T00:33:41Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.Ben12345rocks.VotingPlugin.Config.Config.getInstance().getDebugEnabled()) { com.Ben12345rocks.VotingPlugin.VoteReminding.VoteReminding.plugin.getLogger().info(((user.getPlayerName()) + \" was reminded!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8069/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.VoteReminding.VoteReminding.java", "BodyUseAPI": [], "Fixed commit": "e3d9929e6d98baf776b3149dadc4525f0da95106", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2016-07-03T00:33:41Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dom4j.Element.attribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (attribute != null) { return attribute.getValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6696/buggy-version/adaptors.c3po-adaptor.src.main.java.eu.scape_project.watch.adaptor.c3po.common.DummyReader.java", "BodyUseAPI": ["org.dom4j.Attribute.getValue()"], "Fixed commit": "53e00d8020e7bf19926bec5daf6242e0018bd97e", "Url": "https://api.github.com/repos/openplanets/scout", "Date": "2013-06-07T19:32:48Z"},
{"Line": "=>2250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasPermission(hci.gnomex.security.SecurityAdvisor.CAN_ADMINISTER_ALL_CORE_FACILITIES)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/9063/buggy-version/src.hci.gnomex.security.SecurityAdvisor.java", "BodyUseAPI": [], "Fixed commit": "9cbbc84fc3fb56922e32cb2be939ffd361b3bffd", "Url": "https://api.github.com/repos/hci-gnomex/gnomex", "Date": "2016-04-26T02:34:36Z"},
{"Line": "=>2391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasPermission(hci.gnomex.security.SecurityAdvisor.CAN_ADMINISTER_ALL_CORE_FACILITIES)) { return true; }else if (hasPermission(hci.gnomex.security.SecurityAdvisor.CAN_WRITE_ANY_OBJECT)) { java.util.List idCoreFacility = new java.util.ArrayList(); for (java.util.Iterator i = this.getCoreFacilitiesIManage().iterator(); i.hasNext();) { hci.gnomex.security.CoreFacility cf = ((hci.gnomex.security.CoreFacility) (i.next())); idCoreFacility.add(cf.getIdCoreFacility()); } try { java.util.List labList = hci.gnomex.controller.GetCoreFacilityLabList.getLabListForCore(this.getHibernateSession(this.getUsername()), idCoreFacility); for (java.util.Iterator i = labList.iterator(); i.hasNext();) { hci.gnomex.security.Lab lab = ((hci.gnomex.security.Lab) (i.next())); if (lab.getIdLab().equals(idLab)) { isMyLab = true; break; } } } catch (java.lang.Exception e) { for (java.util.Iterator i = filterLabSetByCoreFacility(this.getAppUser().getManagingLabs()).iterator(); i.hasNext();) { hci.gnomex.security.Lab lab = ((hci.gnomex.security.Lab) (i.next())); if (lab.getIdLab().equals(idLab)) { isMyLab = true; break; } } } }else if (hasPermission(hci.gnomex.security.SecurityAdvisor.CAN_PARTICIPATE_IN_GROUPS)) { for (java.util.Iterator i = filterLabSetByCoreFacility(this.getAppUser().getManagingLabs()).iterator(); i.hasNext();) { hci.gnomex.security.Lab lab = ((hci.gnomex.security.Lab) (i.next())); if (lab.getIdLab().equals(idLab)) { isMyLab = true; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/9063/buggy-version/src.hci.gnomex.security.SecurityAdvisor.java", "BodyUseAPI": [], "Fixed commit": "9cbbc84fc3fb56922e32cb2be939ffd361b3bffd", "Url": "https://api.github.com/repos/hci-gnomex/gnomex", "Date": "2016-04-26T02:34:36Z"},
{"Line": "=>1618", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((spawn) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1090/buggy-version/src.com.wasteofplastic.acidisland.GridManager.java", "BodyUseAPI": [], "Fixed commit": "087a693aeddecb248da4020a938901b33b8e8d9e", "Url": "https://api.github.com/repos/tastybento/acidisland", "Date": "2017-01-09T03:45:41Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jodd.util.StringUtil.isNotEmpty(parentId)) { mv.addObject(PARENT_ID, parentId); java.lang.Object parent = service.findParentById(parentId); java.lang.String parentFieldName = jodd.util.StringUtil.decapitalize(parent.getClass().getSimpleName()); BeanUtil.declaredForcedSilent.setProperty(t, parentFieldName, parent); log.info(\"## --> t ==> {}\", parent.getClass().getSimpleName().toLowerCase()); mv.addObject(\"parent\", parent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4203/buggy-version/crm.src.main.java.com.effectiv.crm.controller.AbstractBaseController.java", "BodyUseAPI": ["com.effectiv.crm.service.AbstractBaseService<T, ID>.findParentById(java.lang.String)", "org.springframework.web.servlet.ModelAndView.addObject(java.lang.String,java.lang.String)"], "Fixed commit": "6b330f7979974232e5bb7a2c7e2152859ab120a5", "Url": "https://api.github.com/repos/kdhrubo/hooghlycrm", "Date": "2017-02-02T17:31:11Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((zilla.libcore.file.PersistenceManager.cache.get(name)) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3264/buggy-version/libzilla.src.main.java.zilla.libcore.file.PersistenceManager.java", "BodyUseAPI": [], "Fixed commit": "06852cb947ab0928325adae30be07ba8d4b4cc9f", "Url": "https://api.github.com/repos/zillachan/LibZilla", "Date": "2016-05-29T12:55:56Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (connection.getTCPSocket().isClosed()) { connections.remove(connection); }else if (connection.hasWaitingPacket()) { try { net.bobmandude9889.api.Packet packet = connection.nextPacket(); java.lang.String name = packet.getName(); net.bobmandude9889.api.PacketListener listener; if (listeners.containsKey(name)) { listener = listeners.get(name); listener.packetReceived(packet, connection); }else java.lang.System.out.println((\"Received unhandled packet: \" + (packet.serialize()))); } catch (net.bobmandude9889.api.PacketException e) { java.lang.System.out.println((\"There was an error parsing the packet: \" + (e.getRawPacket()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6476/buggy-version/src.net.bobmandude9889.api.PacketHandler.java", "BodyUseAPI": ["java.util.List<net.bobmandude9889.api.Connection>.remove(net.bobmandude9889.api.Connection)", "net.bobmandude9889.api.Connection.hasWaitingPacket()", "net.bobmandude9889.api.Connection.nextPacket()", "net.bobmandude9889.api.PacketListener.packetReceived(net.bobmandude9889.api.Packet,net.bobmandude9889.api.Connection)"], "Fixed commit": "67af8d368c823ea5d323f15899463762dba1fbb1", "Url": "https://api.github.com/repos/bobmandude9889/bobs-network-api", "Date": "2015-12-03T00:22:20Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(preferences.getBoolean(\"has_seen_warning\", false))) { preferences.edit().putBoolean(\"has_seen_warning\", true).apply(); android.support.v7.app.AlertDialog dialog = new android.support.v7.app.AlertDialog.Builder(this).setTitle(\"Information\").setMessage((\"Hi everyone, I know the app does\\'t work because of the WCA website update (which is awesome!)\\n\\n\" + ((\"I\\'ve solved the records tab, however the history and competitions tabs are more complicated to fix.\\n\" + \"I\\'ll fix it as soon as I can but it will takes more time.\\n\") + \"Have a good day !\\n Herel Adrastel\"))).setPositiveButton(R.string.ok, null).create(); dialog.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6809/buggy-version/app.src.main.java.com.adrastel.niviel.activities.MainActivity.java", "BodyUseAPI": ["preferences.edit().putBoolean(java.lang.String,boolean)", "android.content.SharedPreferences.edit()", "preferences.edit().putBoolean(\"has_seen_warning\", true).apply()"], "Fixed commit": "bc1c85de500f4ec9f4149871f570e26aeeae5f87", "Url": "https://api.github.com/repos/HerelAdrastel/Niviel", "Date": "2017-05-22T14:54:16Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (intent == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7302/buggy-version/library.src.main.java.com.github.gmazzo.parallel.GenericParallelIntentService.java", "BodyUseAPI": [], "Fixed commit": "4ab73c775a05dc8e0c57445cd9389554ef470aa3", "Url": "https://api.github.com/repos/gmazzo/android-parallel-intent-service", "Date": "2017-06-24T15:53:23Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(nettyRequest.headers().contains(HttpHeaders.CONTENT_LENGTH))) { nettyRequest.headers().set(HttpHeaders.CONTENT_LENGTH, new io.netty.util.AsciiString(java.lang.String.valueOf(body.buffer().readableBytes()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7959/buggy-version/src.main.java.com.twinsco.microservices.startet.restclient.Netty5ClientHttpRequest.java", "BodyUseAPI": ["nettyRequest.headers().set(HttpHeaders.CONTENT_LENGTH,io.netty.util.AsciiString)", "io.netty.handler.codec.http.FullHttpRequest.headers()"], "Fixed commit": "fcb6b35057d87fd5f94ac48abe9f68756eff8ae9", "Url": "https://api.github.com/repos/alexanderkirichenko/spring-boot-microservice-starter", "Date": "2015-08-11T03:33:09Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((conn) != null) { conn.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2777/buggy-version/phoenix-core.src.main.java.org.apache.phoenix.mapreduce.FormatToKeyValueMapper.java", "BodyUseAPI": [], "Fixed commit": "5d99167c1c5f3af1a63e1830460e1329e257ee97", "Url": "https://api.github.com/repos/apache/phoenix", "Date": "2015-12-10T00:51:18Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((conn) == null) { throw new java.lang.RuntimeException(\"Connection not initialized.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2777/buggy-version/phoenix-core.src.main.java.org.apache.phoenix.mapreduce.FormatToKeyValueMapper.java", "BodyUseAPI": [], "Fixed commit": "5d99167c1c5f3af1a63e1830460e1329e257ee97", "Url": "https://api.github.com/repos/apache/phoenix", "Date": "2015-12-10T00:51:18Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((mSdlProxyALM) == null) { listener.onStatusChange(mApplicationConfig.getAppId(), com.smartdevicelink.api.SdlApplication.Status.DISCONNECTED); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3141/buggy-version/sdl_android_lib.src.com.smartdevicelink.api.SdlApplication.java", "BodyUseAPI": [], "Fixed commit": "e437b5022dbea87d5ffe903977fb2a70509674b2", "Url": "https://api.github.com/repos/FordDev/sdl_android", "Date": "2016-04-14T20:42:24Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.preview.PreviewTextFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (args.containsKey(FileDisplayActivity.EXTRA_SEARCH_QUERY)) { mSearchQuery = args.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1837/buggy-version/src.com.owncloud.android.ui.preview.PreviewTextFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY)"], "Fixed commit": "1d23a6136e880b5a73e35a598165c27fabe84c74", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-24T01:01:49Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["olimpiadas.sena.com.olimpiadasmath.control.AppControl.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (appControl.soundBackground.isPlaying()) { appControl.soundBackground.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5460/buggy-version/app.src.main.java.olimpiadas.sena.com.olimpiadasmath.util.DialogHelper.java", "BodyUseAPI": ["appControl.soundBackground.stop()"], "Fixed commit": "c33a0ecd7521ae070c5bb93081eb87f6c8d0a401", "Url": "https://api.github.com/repos/rich4rdruizgit/OliMath", "Date": "2017-10-08T16:58:23Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fallback) != null) { fallback.resetState(postOptimization); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4902/buggy-version/extensions.indexes.range.src.org.exist.xquery.modules.range.FieldLookup.java", "BodyUseAPI": [], "Fixed commit": "fd41ba59389e6c62651bdff6cbdf943ae4e0afda", "Url": "https://api.github.com/repos/dizzzz/exist", "Date": "2013-11-10T14:51:36Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fallback) != null) { fallback.resetState(postOptimization); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4902/buggy-version/extensions.indexes.range.src.org.exist.xquery.modules.range.Lookup.java", "BodyUseAPI": [], "Fixed commit": "fd41ba59389e6c62651bdff6cbdf943ae4e0afda", "Url": "https://api.github.com/repos/dizzzz/exist", "Date": "2013-11-10T14:51:36Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((spimData.getSequenceDescription().getViewDescription(id).getViewSetup().getChannel().getId()) == (c.getChannel().getId())) spimData.getViewInterestPoints().getViewInterestPointLists(id).getInterestPointList(c.getLabel()).getCorrespondingInterestPoints().clear();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7214/buggy-version/src.main.java.spim.process.interestpointregistration.optimizationtypes.GlobalOptimizationType.java", "BodyUseAPI": ["spim.fiji.spimdata.SpimData2.getViewInterestPoints()", "spim.process.interestpointregistration.ChannelProcess.getLabel()", "spimData.getViewInterestPoints().getViewInterestPointLists(id).getInterestPointList(c.getLabel()).getCorrespondingInterestPoints()", "spimData.getViewInterestPoints().getViewInterestPointLists(id).getInterestPointList(c.getLabel())", "spimData.getViewInterestPoints().getViewInterestPointLists(mpicbg.spim.data.sequence.ViewId)", "spimData.getViewInterestPoints().getViewInterestPointLists(id).getInterestPointList(c.getLabel()).getCorrespondingInterestPoints().clear()"], "Fixed commit": "73acbd048c1be5a899e9ee458acf9207174e6270", "Url": "https://api.github.com/repos/fiji/SPIM_Registration", "Date": "2014-08-19T15:18:26Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((spimData.getSequenceDescription().getViewDescription(id).getViewSetup().getChannel().getId()) == (c.getChannel().getId())) spimData.getViewInterestPoints().getViewInterestPointLists(id).getInterestPointList(c.getLabel()).saveCorrespondingInterestPoints();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7214/buggy-version/src.main.java.spim.process.interestpointregistration.optimizationtypes.GlobalOptimizationType.java", "BodyUseAPI": ["spimData.getViewInterestPoints().getViewInterestPointLists(id).getInterestPointList(c.getLabel()).saveCorrespondingInterestPoints()", "spimData.getViewInterestPoints().getViewInterestPointLists(id).getInterestPointList(c.getLabel())", "spimData.getViewInterestPoints().getViewInterestPointLists(mpicbg.spim.data.sequence.ViewId)", "spim.process.interestpointregistration.ChannelProcess.getLabel()", "spim.fiji.spimdata.SpimData2.getViewInterestPoints()"], "Fixed commit": "73acbd048c1be5a899e9ee458acf9207174e6270", "Url": "https://api.github.com/repos/fiji/SPIM_Registration", "Date": "2014-08-19T15:18:26Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controllers.AssertionController.createBadgeAssertionAPI(java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (ba == null) { return badRequest(\"Error with BadgeAssertion\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3152/buggy-version/app.controllers.APIController.java", "BodyUseAPI": [], "Fixed commit": "94f9ebcddab96497fa9e793430e7d8e0c2b957cd", "Url": "https://api.github.com/repos/wookoouk/Merit", "Date": "2013-12-18T16:08:23Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["routes.PublicController.getAssertion(ba.uid).absoluteURL(request(),boolean)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (assertionURL == null) { return badRequest(\"Error with assertionURL\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3152/buggy-version/app.controllers.APIController.java", "BodyUseAPI": [], "Fixed commit": "94f9ebcddab96497fa9e793430e7d8e0c2b957cd", "Url": "https://api.github.com/repos/wookoouk/Merit", "Date": "2013-12-18T16:08:23Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shrinkFactor) < 0) { shrinkFactor = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6422/buggy-version/src.main.java.org.collectiveone.model.Decision.java", "BodyUseAPI": [], "Fixed commit": "1a8ff14c245c4bca4b131213f71f9676983c3e7e", "Url": "https://api.github.com/repos/CollectiveOne/CollectiveOneWebapp", "Date": "2017-04-12T07:27:48Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (primary) { tokenRanges = java.lang.String.join(\",\", ((java.util.List<java.lang.String>) (data.get(\"token_ranges\")))).replaceAll(\"\\\\]\", \"\\\\)\"); }else { tokenRanges = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4181/buggy-version/mr.src.main.java.org.elasticsearch.hadoop.serialization.dto.Shard.java", "BodyUseAPI": [], "Fixed commit": "98204e9b9f2c8776144c73386a9db38b2b78836e", "Url": "https://api.github.com/repos/strapdata/elasticsearch-hadoop", "Date": "2017-06-08T14:48:41Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sb.length()) > 0) { return sb.deleteCharAt(((sb.length()) - 1)).toString(); }else { return sb.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6459/buggy-version/src.main.java.com.atilika.kuromoji.dict.TokenInfoDictionary.java", "BodyUseAPI": ["java.lang.StringBuilder.toString()", "java.lang.StringBuilder.deleteCharAt(int)", "java.lang.StringBuilder.toString()", "java.lang.StringBuilder.length()"], "Fixed commit": "8511e75dfb977164dcfa4ae2a91a307912cca7b8", "Url": "https://api.github.com/repos/makigumo/kuromoji", "Date": "2013-09-17T06:26:37Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((responseCount) == (expectedResponses)) { this.finished = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3224/buggy-version/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.ONewDistributedResponseManager.java", "BodyUseAPI": [], "Fixed commit": "eef5c656a25ec418bc06201ee19181afcc180133", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2017-12-12T15:37:14Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(quorumReached)) { this.quorumReached = true; this.finalResult = results; this.notifyAll(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3224/buggy-version/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.ONewDistributedResponseManager.java", "BodyUseAPI": [], "Fixed commit": "eef5c656a25ec418bc06201ee19181afcc180133", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2017-12-12T15:37:14Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((correlationParent) == null) { throw new java.lang.IllegalStateException(java.lang.String.format(\"Criteria query From node [%s] is not part of a subquery correlation\", getPathIdentifier())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2273/buggy-version/hibernate-entitymanager.src.main.java.org.hibernate.jpa.criteria.path.AbstractFromImpl.java", "BodyUseAPI": [], "Fixed commit": "7bdcdca4398121ea91554ed01d983285297805da", "Url": "https://api.github.com/repos/javaprog/hibernate-orm", "Date": "2013-08-16T16:54:31Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSuccess) { sendMessage((\"showRoomPage;\" + (elements[1]))); }else { sendMessage(((\"showRoomManagerPage;\" + (elements[1])) + \";joinRoom\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6049/buggy-version/src.ClientThread.java", "BodyUseAPI": [], "Fixed commit": "10f070648eabdf6e4720ea3ad0f0aa50e764fc91", "Url": "https://api.github.com/repos/czuczi/alhambra_szerver", "Date": "2014-12-11T11:00:59Z"},
{"Line": "=>1423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mvi.getGroupbycols().size()) > 0) { int index = 0; for (org.voltdb.catalog.ColumnRef cref : org.voltdb.utils.CatalogUtil.getSortedCatalogItems(mvi.getGroupbycols(), \"index\")) { org.voltdb.catalog.Column srcCol = cref.getColumn(); if (srcCol.getName().equals(partitionColName)) { org.voltdb.catalog.Column destCol = destColumnArray.get(index); destTable.setPartitioncolumn(destCol); return; } ++index; } }else { java.lang.String complexGroupbyJson = mvi.getGroupbyexpressionsjson(); assert (complexGroupbyJson != null) && ((complexGroupbyJson.length()) > 0); if ((complexGroupbyJson.length()) > 0) { int partitionColIndex = partitionColumn.getIndex(); java.util.List<org.voltdb.expressions.AbstractExpression> mvComplexGroupbyCols = null; try { mvComplexGroupbyCols = org.voltdb.expressions.AbstractExpression.fromJSONArrayString(complexGroupbyJson, null); } catch (org.json_voltpatches.JSONException e) { e.printStackTrace(); } int index = 0; for (org.voltdb.expressions.AbstractExpression expr : mvComplexGroupbyCols) { if (expr instanceof org.voltdb.expressions.TupleValueExpression) { org.voltdb.expressions.TupleValueExpression tve = ((org.voltdb.expressions.TupleValueExpression) (expr)); if ((tve.getColumnIndex()) == partitionColIndex) { org.voltdb.catalog.Column destCol = destColumnArray.get(index); destTable.setPartitioncolumn(destCol); return; } } ++index; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7578/buggy-version/src.frontend.org.voltdb.compiler.VoltCompiler.java", "BodyUseAPI": ["org.voltdb.catalog.MaterializedViewInfo.getGroupbycols()", "org.voltdb.utils.CatalogUtil.getSortedCatalogItems(mvi.getGroupbycols(),java.lang.String)", "org.voltdb.catalog.MaterializedViewInfo.getGroupbyexpressionsjson()"], "Fixed commit": "b48e99ce02030b2170ebe6b48d4dba7cf391aad7", "Url": "https://api.github.com/repos/VoltDB/voltdb", "Date": "2015-02-19T19:27:40Z"},
{"Line": "=>464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getIncludeInputAsOutput()) { for (org.pentaho.di.core.row.RowMetaInterface r : info) { if (r != null) { for (org.pentaho.di.core.row.ValueMetaInterface vm : r.getValueMetaList()) { int outIndex = m_outputFields.indexOfValue(vm.getName()); if (outIndex >= 0) { m_outputFields.setValueMeta(outIndex, vm); } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1441/buggy-version/src.org.pentaho.di.trans.steps.cpythonscriptexecutor.CPythonScriptExecutorMeta.java", "BodyUseAPI": [], "Fixed commit": "dae14826af1a3001af585d4c35b7a5fc1911b689", "Url": "https://api.github.com/repos/pentaho-labs/pentaho-cpython-plugin", "Date": "2017-03-07T21:38:54Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((podcastDataFactory) != null) podcastDataFactory.destroy();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/9/buggy-version/MyApplication.app.src.main.java.com.readyo.app.fragments.navigation.FragmentShowDetails.java", "BodyUseAPI": [], "Fixed commit": "b991e28fc674128e777954d6b567423953389e10", "Url": "https://api.github.com/repos/ilansas/Ready-O", "Date": "2015-01-21T17:26:18Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((showDataFactory) != null) showDataFactory.destroy();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/9/buggy-version/MyApplication.app.src.main.java.com.readyo.app.fragments.navigation.FragmentShowDetails.java", "BodyUseAPI": [], "Fixed commit": "b991e28fc674128e777954d6b567423953389e10", "Url": "https://api.github.com/repos/ilansas/Ready-O", "Date": "2015-01-21T17:26:18Z"},
{"Line": "=>677", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((s.length()) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8557/buggy-version/app.src.main.java.org.eyeseetea.malariacare.layout.Layout.java", "BodyUseAPI": [], "Fixed commit": "0eede1755301ba5b1551c3894e0ec89b96535b6f", "Url": "https://api.github.com/repos/EyeSeeTea/malariapp", "Date": "2015-03-10T15:58:42Z"},
{"Line": "=>466", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.camel.Exchange.getProperty(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isXalanTransformer) { javax.xml.stream.XMLStreamReader reader = exchange.getContext().getTypeConverter().tryConvertTo(javax.xml.stream.XMLStreamReader.class, exchange, body); if (reader != null) { source = new org.apache.camel.converter.jaxp.StaxSource(reader); } }else { if (isAllowStAX()) { source = exchange.getContext().getTypeConverter().tryConvertTo(javax.xml.transform.stax.StAXSource.class, exchange, body); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7827/buggy-version/camel-core.src.main.java.org.apache.camel.builder.xml.XsltBuilder.java", "BodyUseAPI": [], "Fixed commit": "b234d3367f804147242e385c1b04cad0aeb4a4d8", "Url": "https://api.github.com/repos/gzurowski/camel", "Date": "2014-01-24T02:27:54Z"},
{"Line": "=>704", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.deidentifier.arx.DataType.DataTypeWithRatioScale<T>.subtract(T,T)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((type.compare(shifted, index.max)) == 0) { offset = type.multiply(type.subtract(index.max, index.min), (shift + 1)); shifted = index.min; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2042/buggy-version/src.main.org.deidentifier.arx.aggregates.HierarchyBuilderIntervalBased.java", "BodyUseAPI": ["org.deidentifier.arx.DataType.DataTypeWithRatioScale<T>.subtract(T,T)", "org.deidentifier.arx.DataType.DataTypeWithRatioScale<T>.multiply(type.subtract(index.max, index.min),int)"], "Fixed commit": "466f9dbb274bfe648c443c754e976de4bcdbe2e2", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2017-06-01T14:50:26Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((seek) < 3) seek = 3;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/983/buggy-version/Gestures.android_apps.Puf_Enrollment.app.src.main.java.puf.iastate.edu.puf_enrollment.PinPatternGen.java", "BodyUseAPI": [], "Fixed commit": "b701ce2efed286fb136686273c001fc2916edb88", "Url": "https://api.github.com/repos/akhileshtyagi/PUF", "Date": "2016-05-05T18:06:05Z"},
{"Line": "=>2942", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAdapter) == null) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5632/buggy-version/library.src.main.java.rainbow.library.GalleryViewPager.java", "BodyUseAPI": [], "Fixed commit": "0896a658671c064ec75945ef3c14ae7e750a8b58", "Url": "https://api.github.com/repos/RainbleNi/GalleryViewPager", "Date": "2016-11-25T11:28:36Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((deltaY) < 0) { deltaY = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/908/buggy-version/HGDArcadia.MyGame.src.MyGame.java", "BodyUseAPI": [], "Fixed commit": "a4075dd8b5cb0eeb2456b146145102ed8fb7235e", "Url": "https://api.github.com/repos/ejmoore/Arcadia3", "Date": "2016-02-14T19:37:53Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.beans.PropertyDescriptor>.get(lombok.val)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (pd == null) pd = this.mappedProperties.get(noneUnderstore);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2714/buggy-version/src.main.java.org.n3r.eql.map.EqlBaseBeanMapper.java", "BodyUseAPI": [], "Fixed commit": "d3603a7f5e9c5cf6b39ae5237ea74588e8d0ddbf", "Url": "https://api.github.com/repos/bingoohuang/eql", "Date": "2017-03-23T03:07:33Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.reflect.Field>.get(lombok.val)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (field == null) field = this.mappedFields.get(noneUnderstore);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2714/buggy-version/src.main.java.org.n3r.eql.map.EqlBaseBeanMapper.java", "BodyUseAPI": [], "Fixed commit": "d3603a7f5e9c5cf6b39ae5237ea74588e8d0ddbf", "Url": "https://api.github.com/repos/bingoohuang/eql", "Date": "2017-03-23T03:07:33Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((upTime - downTime) > (android.view.ViewConfiguration.getTapTimeout())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3851/buggy-version/cidrawing.src.main.java.com.mocircle.cidrawing.utils.DrawUtils.java", "BodyUseAPI": [], "Fixed commit": "f82f8a6d87af2ddb4ad419e3087f3261fd134381", "Url": "https://api.github.com/repos/mocircle/cidrawing", "Date": "2016-05-26T02:06:25Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((containsBadChars(paramName)) || (containsBadChars(paramValue))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7610/buggy-version/taskserver-lib.src.main.java.no.hials.taskserver.impl.MessageImpl.java", "BodyUseAPI": [], "Fixed commit": "105732f870a24df950d77f9c392e86766be20c53", "Url": "https://api.github.com/repos/strazdinsg/hials-taskserver-lib", "Date": "2015-11-08T00:58:34Z"},
{"Line": "=>423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isActive()) { if (active) { mIsHaver = true; mDesireDetailFragBinding.desireHaverStatus.setText(getString(R.string.haver_status_waiting)); }else { mIsHaver = false; mDesireDetailFragBinding.desireHaverStatus.setText(getString(R.string.haver_status_open)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7548/buggy-version/app.src.main.java.wanthavers.mad.cs.fau.de.wanthavers_android.desiredetail.DesireDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "fef7443c9cf772d36acec18c0e7f480f14636b06", "Url": "https://api.github.com/repos/FAU-Inf2/wanthavers-android", "Date": "2016-07-05T22:14:48Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ioopm.Creature.getCourse()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (name.searchFinishedCourses(courseToBeAdded.toString())) { java.lang.System.out.println(\"You have already finished this course!\"); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7341/buggy-version/src.com.ioopm.Main.java", "BodyUseAPI": [], "Fixed commit": "55496e0b06901e7e227b1eb0e10e00c60ec8f55b", "Url": "https://api.github.com/repos/MartinJohaa/MUD", "Date": "2014-11-26T11:38:25Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((enrollment(enrollmentRequest)) != null) { fulfilCurrentMilestone(enrollmentRequest.getExternalId(), enrollmentRequest.getScheduleName(), fulfillmentDate, fulfillmentTime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5394/buggy-version/ghana-national-core.src.main.java.org.motechproject.ghana.national.repository.AllCareSchedules.java", "BodyUseAPI": ["org.motechproject.scheduletracking.api.service.EnrollmentRequest.getExternalId()", "org.motechproject.scheduletracking.api.service.EnrollmentRequest.getScheduleName()", "org.motechproject.ghana.national.repository.AllCareSchedules.fulfilCurrentMilestone(enrollmentRequest.getExternalId(),enrollmentRequest.getScheduleName(),org.joda.time.LocalDate,org.motechproject.model.Time)"], "Fixed commit": "1ca04b65946fdcd2c5630b9156f5bad53af6b959", "Url": "https://api.github.com/repos/motech/GHANA-National", "Date": "2012-08-07T12:21:44Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((enrollment(enrollmentRequest)) != null) { fulfilCurrentMilestone(enrollmentRequest.getExternalId(), enrollmentRequest.getScheduleName(), fulfillmentDate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5394/buggy-version/ghana-national-core.src.main.java.org.motechproject.ghana.national.repository.AllCareSchedules.java", "BodyUseAPI": ["org.motechproject.ghana.national.repository.AllCareSchedules.fulfilCurrentMilestone(enrollmentRequest.getExternalId(),enrollmentRequest.getScheduleName(),org.joda.time.LocalDate)", "org.motechproject.scheduletracking.api.service.EnrollmentRequest.getScheduleName()", "org.motechproject.scheduletracking.api.service.EnrollmentRequest.getExternalId()"], "Fixed commit": "1ca04b65946fdcd2c5630b9156f5bad53af6b959", "Url": "https://api.github.com/repos/motech/GHANA-National", "Date": "2012-08-07T12:21:44Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(argDict.get(\"SaveToFile\").equals(\"index.html\"))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5852/buggy-version/src.downloadmanager.Configuration.java", "BodyUseAPI": [], "Fixed commit": "c1c416924e581408811f2ccd82128fdff7493e0a", "Url": "https://api.github.com/repos/xapharius/wget-java", "Date": "2013-12-10T21:56:34Z"},
{"Line": "=>513", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firefox) { temp_string.append(\"}, 10);\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3624/buggy-version/merchant.src.org.webpki.saturn.merchant.HTML.java", "BodyUseAPI": [], "Fixed commit": "d1c7819c60e604486266381852d4e800afedeaad", "Url": "https://api.github.com/repos/cyberphone/saturn", "Date": "2017-04-08T09:01:02Z"},
{"Line": "=>410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firefox) { temp_string.append(\" setTimeout(function() {\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3624/buggy-version/merchant.src.org.webpki.saturn.merchant.HTML.java", "BodyUseAPI": [], "Fixed commit": "d1c7819c60e604486266381852d4e800afedeaad", "Url": "https://api.github.com/repos/cyberphone/saturn", "Date": "2017-04-08T09:01:02Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState != null) { dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/409/buggy-version/app.src.main.java.com.door43.translationstudio.dialogs.CustomAlertDialog.java", "BodyUseAPI": [], "Fixed commit": "aed5ef742c0ce17784ae0d4a02c51093cd3960f2", "Url": "https://api.github.com/repos/jshuma/ts-android", "Date": "2016-01-05T19:38:09Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((logFile != null) && (logFile.exists())) { try { log = org.apache.commons.io.FileUtils.readFileToString(logFile); } catch (java.io.IOException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/409/buggy-version/com.door43.tools.reporting.src.main.java.com.door43.tools.reporting.GithubReporter.java", "BodyUseAPI": ["org.apache.commons.io.FileUtils.readFileToString(java.io.File)"], "Fixed commit": "aed5ef742c0ce17784ae0d4a02c51093cd3960f2", "Url": "https://api.github.com/repos/jshuma/ts-android", "Date": "2016-01-05T19:38:09Z"},
{"Line": "=>703", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((product.getSed()) == null) || ((product.getSed().getTestTasks()) == null)) || ((product.getSed().getTestTasks().size()) == 0)) { product.getErrorMessages().add(((\"Certification \" + (certCriteria.getNumber())) + \" requires at least one test task.\")); }else { boolean foundCriteria = false; for (gov.healthit.chpl.domain.TestTask tt : product.getSed().getTestTasks()) { for (gov.healthit.chpl.domain.CertificationCriterion criteria : tt.getCriteria()) { if (criteria.getNumber().equalsIgnoreCase(certCriteria.getNumber())) { foundCriteria = true; } } } if (!foundCriteria) { product.getErrorMessages().add(((\"Certification \" + (certCriteria.getNumber())) + \" requires at least one test task.\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/836/buggy-version/chpl.chpl-service.src.main.java.gov.healthit.chpl.validation.certifiedProduct.CertifiedProduct2015Validator.java", "BodyUseAPI": ["gov.healthit.chpl.domain.CertifiedProductSearchDetails.getErrorMessages()", "product.getErrorMessages().add(((\"Certification \" + (certCriteria.getNumber())) + \" requires at least one test task.\"))", "product.getErrorMessages().add(((\"Certification \" + (certCriteria.getNumber())) + \" requires at least one test task.\"))", "gov.healthit.chpl.domain.CertifiedProductSearchDetails.getErrorMessages()", "product.getSed().getTestTasks()", "gov.healthit.chpl.domain.CertifiedProductSearchDetails.getSed()"], "Fixed commit": "3be000bc8a389cc968fba509469ba86015d34ef9", "Url": "https://api.github.com/repos/kekey1/chpl-api", "Date": "2017-08-25T13:51:29Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((certCriteria.getTestTasks()) == null) || ((certCriteria.getTestTasks().size()) == 0)) { product.getErrorMessages().add(((\"Certification \" + (certCriteria.getNumber())) + \" requires at least one test task.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/836/buggy-version/chpl.chpl-service.src.main.java.gov.healthit.chpl.validation.certifiedProduct.CertifiedProduct2015Validator.java", "BodyUseAPI": ["product.getErrorMessages().add(((\"Certification \" + (certCriteria.getNumber())) + \" requires at least one test task.\"))", "gov.healthit.chpl.dto.PendingCertificationResultDTO.getNumber()"], "Fixed commit": "3be000bc8a389cc968fba509469ba86015d34ef9", "Url": "https://api.github.com/repos/kekey1/chpl-api", "Date": "2017-08-25T13:51:29Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lap + 1) <= (p1lapsStartNumberArrayNode.size())) { p1lapsStartNumberArrayNode.remove(lap); }else { while ((p1lapsStartNumberArrayNode.size()) < lap) { p1lapsStartNumberArrayNode.add((-1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7662/buggy-version/src.com.p1software.p1lapchart.P1LapchartController.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.node.ArrayNode.add(int)", "com.fasterxml.jackson.databind.node.ArrayNode.remove(int)", "com.fasterxml.jackson.databind.node.ArrayNode.size()"], "Fixed commit": "89fd53278dc5f6bbf7f058958507237970491e0b", "Url": "https://api.github.com/repos/kenklin/p1lapchartj", "Date": "2013-09-28T19:31:38Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isOnline) { weatherOracle.notification.NotificationStore.notifications.add(weatherOracle.notification.Notification.makeNoConnection()); }else { weatherOracle.notification.NotificationStore.notifications.add(weatherOracle.notification.Notification.makeNoData()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5422/buggy-version/EclipseProject.src.weatherOracle.notification.NotificationStore.java", "BodyUseAPI": [], "Fixed commit": "e08256aacf9b8b0f3bb7071b5273952e06d04866", "Url": "https://api.github.com/repos/Tim727/WeatherOracle", "Date": "2012-05-29T22:32:55Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (commands == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/9159/buggy-version/ugs-core.src.com.willwinder.universalgcodesender.gcode.processors.ArcExpander.java", "BodyUseAPI": [], "Fixed commit": "fd8566ff6958ad8a61535587b5dfe990b08e4eba", "Url": "https://api.github.com/repos/winder/Universal-G-Code-Sender", "Date": "2016-06-27T12:46:33Z"},
{"Line": "=>492", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((in.getValues()) instanceof java.util.List) { parameters.put(parName, in.getValues()); }else { java.util.List temp = new java.util.ArrayList(in.getValues()); parameters.put(parName, temp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1069/buggy-version/dynamo-spring.src.main.java.com.ocs.dynamo.dao.query.JpaQueryBuilder.java", "BodyUseAPI": ["com.ocs.dynamo.filter.In.getValues()", "java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,in.getValues())", "com.ocs.dynamo.filter.In.getValues()"], "Fixed commit": "21318f95c72f8840034b85c8b0cf76cc8494e10b", "Url": "https://api.github.com/repos/opencirclesolutions/dynamo", "Date": "2017-07-31T14:41:47Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((portalEvent.getOperationResult()) == (PortalEvent.OperationResult.ACCEPTED)) { values.put(PortalEventDbInfo.COLUMN_NAME_ADDRESS, portalEvent.getPortalAddress()); values.put(PortalEventDbInfo.COLUMN_NAME_ADDRESS_URL, portalEvent.getPortalAddressUrl()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/458/buggy-version/app.src.main.java.com.ghostflying.portalwaitinglist.dao.datahelper.PortalEventHelper.java", "BodyUseAPI": ["android.content.ContentValues.put(PortalEventDbInfo.COLUMN_NAME_ADDRESS,portalEvent.getPortalAddress())", "com.ghostflying.portalwaitinglist.model.PortalEvent.getPortalAddress()", "com.ghostflying.portalwaitinglist.model.PortalEvent.getPortalAddressUrl()", "android.content.ContentValues.put(PortalEventDbInfo.COLUMN_NAME_ADDRESS_URL,portalEvent.getPortalAddressUrl())"], "Fixed commit": "c6eb696610cbc6a0fb137dd5c1af3445d2dc6efc", "Url": "https://api.github.com/repos/GhostFlying/PortalWaitingList", "Date": "2015-05-14T08:56:52Z"},
{"Line": "=>1190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (network.reconnect()) { return com.android.internal.telephony.PhoneConstants.APN_REQUEST_STARTED; }else { return com.android.internal.telephony.PhoneConstants.APN_REQUEST_FAILED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1379/buggy-version/services.java.com.android.server.ConnectivityService.java", "BodyUseAPI": [], "Fixed commit": "242b3143cf7f65db7305b594ce05ebb0d5c32688", "Url": "https://api.github.com/repos/TeamSourcery/frameworks_base", "Date": "2013-01-18T09:01:26Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isPrimitiveNarrowing(arg0)) { createHavocLocal(arg0.getCastType()); }else { arg0.getOp().apply(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7135/buggy-version/soottocfg.src.main.java.soottocfg.soot.visitors.SootValueSwitch.java", "BodyUseAPI": ["soot.jimple.CastExpr.getOp()", "soottocfg.soot.visitors.SootValueSwitch.createHavocLocal(arg0.getCastType())", "arg0.getOp().apply(soottocfg.soot.visitors.SootValueSwitch)", "soot.jimple.CastExpr.getCastType()"], "Fixed commit": "6b17908d3cfe4ff15172c50bda496ce492d5e1cf", "Url": "https://api.github.com/repos/jayhorn/jayhorn", "Date": "2016-09-01T21:19:01Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((imgBaseImage.getType()) != (java.awt.image.BufferedImage.TYPE_INT_RGB)) { java.awt.image.BufferedImage tempImage = new java.awt.image.BufferedImage(imgBaseImage.getWidth(), imgBaseImage.getHeight(), java.awt.image.BufferedImage.TYPE_INT_RGB); tempImage.createGraphics().drawImage(imgBaseImage, 0, 0, java.awt.Color.black, null); imgBaseImage = tempImage; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3660/buggy-version/src.com.subnetroot.mosaicmaker.MosaicMaker.java", "BodyUseAPI": ["java.awt.image.BufferedImage.getWidth()", "java.awt.image.BufferedImage.getHeight()", "java.awt.Graphics2D.drawImage(java.awt.image.BufferedImage,int,int,java.awt.Color,<nulltype>)"], "Fixed commit": "7edbf981a847cd469c5dceec3c5d47dc40423d88", "Url": "https://api.github.com/repos/blakeoxx/MosaicMaker", "Date": "2017-04-18T20:06:12Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fredboat.orchestrator.Allocator.getLowestAvailableChunk()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (chunk == (-1)) { throw new java.lang.IllegalStateException(\"Can't allocate new shards! All shards are already taken.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5145/buggy-version/Orchestrator.src.main.java.fredboat.orchestrator.Allocator.java", "BodyUseAPI": [], "Fixed commit": "d478789d88b3170955e0b821be0d9a9cd02f1e1e", "Url": "https://api.github.com/repos/napstr/FredBoat", "Date": "2017-04-28T19:49:26Z"},
{"Line": "=>438", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listKeywordFive.getValue().toString().length()) > 0) { setPathToDestination(5); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5415/buggy-version/src.application.controller.ManualWindowController.java", "BodyUseAPI": [], "Fixed commit": "d85175c2dc404fef44e9ad137cd6322d1c9e1ce4", "Url": "https://api.github.com/repos/telenair/KHHCArchiv", "Date": "2017-03-20T21:53:06Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i == id) { train.setCustomerLeaving(id, 0); }else { train.setCustomerLeaving(id, ((train.getCustomerLeaving(id)) + numLeaving)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2175/buggy-version/src.simModel.UDPs.java", "BodyUseAPI": ["simModel.Trains.setCustomerLeaving(int,int)", "simModel.Trains.getCustomerLeaving(int)", "simModel.Trains.setCustomerLeaving(int,((train.getCustomerLeaving(id)) + numLeaving))"], "Fixed commit": "6ebce3584382500d64b81a11f319808e5d4b885e", "Url": "https://api.github.com/repos/jules2689/CSI4124", "Date": "2014-11-19T14:02:24Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((prepareGC) == 300) { prepareGC = 0; java.lang.System.gc(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5351/buggy-version/app.src.main.java.com.arrg.android.app.geoda.FlipperViewDemoActivity.java", "BodyUseAPI": [], "Fixed commit": "de5a3fe3769f25e963a1de1bdeee9eb7a3cfa829", "Url": "https://api.github.com/repos/AlandEr2612/Geoda", "Date": "2015-07-14T05:13:06Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((prepareGC) == 300) { prepareGC = 0; java.lang.System.gc(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5351/buggy-version/app.src.main.java.com.arrg.android.app.geoda.FlipperViewActivity.java", "BodyUseAPI": [], "Fixed commit": "de5a3fe3769f25e963a1de1bdeee9eb7a3cfa829", "Url": "https://api.github.com/repos/AlandEr2612/Geoda", "Date": "2015-07-14T05:13:06Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(moduleFile)) && (that.getPackageDescriptors().isEmpty())) { that.addError(\"missing package descriptor\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8379/buggy-version/typechecker.src.com.redhat.ceylon.compiler.typechecker.analyzer.ModuleVisitor.java", "BodyUseAPI": ["Tree.CompilationUnit.addError(java.lang.String)"], "Fixed commit": "36d32682b32920c8ad4185df50ee8cd32d40381f", "Url": "https://api.github.com/repos/eclipse/ceylon", "Date": "2016-10-14T12:16:15Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((moduleFile) && (that.getModuleDescriptors().isEmpty())) { that.addError(\"missing module descriptor\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8379/buggy-version/typechecker.src.com.redhat.ceylon.compiler.typechecker.analyzer.ModuleVisitor.java", "BodyUseAPI": ["Tree.CompilationUnit.addError(java.lang.String)"], "Fixed commit": "36d32682b32920c8ad4185df50ee8cd32d40381f", "Url": "https://api.github.com/repos/eclipse/ceylon", "Date": "2016-10-14T12:16:15Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(username.equalsIgnoreCase(mParent.mLoginModel.getId()))) addMessage(username, message);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6488/buggy-version/app.src.main.java.com.sparity.webchat.fragments.MessageFragment.java", "BodyUseAPI": ["1.addMessage(java.lang.String,java.lang.String)"], "Fixed commit": "b63a5540d770fe1d79dc5fd7a113f76f0f5d9e3a", "Url": "https://api.github.com/repos/shankarpilli/SocketIoDemo", "Date": "2017-09-16T10:21:30Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dir == (net.minecraftforge.common.util.ForgeDirection.DOWN)) { if ((world.getTileEntity(tile.xCoord, ((tile.yCoord) - i), tile.zCoord)) instanceof com.isocraft.api.eridiumnet.IEridiumNetMajorNode) { return i; }else if (((world.getBlock(tile.xCoord, ((tile.yCoord) - i), tile.zCoord).getMaterial()) != (net.minecraft.block.material.Material.glass)) && (!(world.isAirBlock(tile.xCoord, ((tile.yCoord) - i), tile.zCoord)))) { return 0; } }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2667/buggy-version/src.main.java.com.isocraft.api.eridiumnet.EridiumNetwork.java", "BodyUseAPI": [], "Fixed commit": "4e7c68de14f9715e3188f18008caefda4b7c14f7", "Url": "https://api.github.com/repos/Turnermator13/ISOCraft", "Date": "2014-02-19T08:46:25Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((world.getTileEntity(tile.xCoord, ((tile.yCoord) + i), tile.zCoord)) instanceof com.isocraft.api.eridiumnet.IEridiumNetMajorNode) { return i; }else if (((world.getBlock(tile.xCoord, ((tile.yCoord) + i), tile.zCoord).getMaterial()) != (net.minecraft.block.material.Material.glass)) && (!(world.isAirBlock(tile.xCoord, ((tile.yCoord) + i), tile.zCoord)))) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2667/buggy-version/src.main.java.com.isocraft.api.eridiumnet.EridiumNetwork.java", "BodyUseAPI": ["net.minecraft.world.World.isAirBlock(tile.xCoord,((tile.yCoord) + i),tile.zCoord)", "world.getBlock(tile.xCoord, ((tile.yCoord) + i), tile.zCoord).getMaterial()", "net.minecraft.world.World.getBlock(tile.xCoord,((tile.yCoord) + i),tile.zCoord)"], "Fixed commit": "4e7c68de14f9715e3188f18008caefda4b7c14f7", "Url": "https://api.github.com/repos/Turnermator13/ISOCraft", "Date": "2014-02-19T08:46:25Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((world.getTileEntity(((tile.xCoord) - i), tile.yCoord, tile.zCoord)) instanceof com.isocraft.api.eridiumnet.IEridiumNetMajorNode) { return i; }else if (((world.getBlock(((tile.xCoord) - i), tile.yCoord, tile.zCoord).getMaterial()) != (net.minecraft.block.material.Material.glass)) && (!(world.isAirBlock(((tile.xCoord) - i), tile.yCoord, tile.zCoord)))) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2667/buggy-version/src.main.java.com.isocraft.api.eridiumnet.EridiumNetwork.java", "BodyUseAPI": ["net.minecraft.world.World.isAirBlock(((tile.xCoord) - i),tile.yCoord,tile.zCoord)", "world.getBlock(((tile.xCoord) - i), tile.yCoord, tile.zCoord).getMaterial()", "net.minecraft.world.World.getBlock(((tile.xCoord) - i),tile.yCoord,tile.zCoord)"], "Fixed commit": "4e7c68de14f9715e3188f18008caefda4b7c14f7", "Url": "https://api.github.com/repos/Turnermator13/ISOCraft", "Date": "2014-02-19T08:46:25Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((world.getTileEntity(((tile.xCoord) + i), tile.yCoord, tile.zCoord)) instanceof com.isocraft.api.eridiumnet.IEridiumNetMajorNode) { return i; }else if (((world.getBlock(((tile.xCoord) + i), tile.yCoord, tile.zCoord).getMaterial()) != (net.minecraft.block.material.Material.glass)) && (!(world.isAirBlock(((tile.xCoord) + i), tile.yCoord, tile.zCoord)))) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2667/buggy-version/src.main.java.com.isocraft.api.eridiumnet.EridiumNetwork.java", "BodyUseAPI": ["net.minecraft.world.World.isAirBlock(((tile.xCoord) + i),tile.yCoord,tile.zCoord)", "world.getBlock(((tile.xCoord) + i), tile.yCoord, tile.zCoord).getMaterial()", "net.minecraft.world.World.getBlock(((tile.xCoord) + i),tile.yCoord,tile.zCoord)"], "Fixed commit": "4e7c68de14f9715e3188f18008caefda4b7c14f7", "Url": "https://api.github.com/repos/Turnermator13/ISOCraft", "Date": "2014-02-19T08:46:25Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((world.getTileEntity(tile.xCoord, tile.yCoord, ((tile.zCoord) + i))) instanceof com.isocraft.api.eridiumnet.IEridiumNetMajorNode) { return i; }else if (((world.getBlock(tile.xCoord, tile.yCoord, ((tile.zCoord) + i)).getMaterial()) != (net.minecraft.block.material.Material.glass)) && (!(world.isAirBlock(tile.xCoord, tile.yCoord, ((tile.zCoord) + i))))) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2667/buggy-version/src.main.java.com.isocraft.api.eridiumnet.EridiumNetwork.java", "BodyUseAPI": ["net.minecraft.world.World.getBlock(tile.xCoord,tile.yCoord,((tile.zCoord) + i))", "world.getBlock(tile.xCoord, tile.yCoord, ((tile.zCoord) + i)).getMaterial()", "net.minecraft.world.World.isAirBlock(tile.xCoord,tile.yCoord,((tile.zCoord) + i))"], "Fixed commit": "4e7c68de14f9715e3188f18008caefda4b7c14f7", "Url": "https://api.github.com/repos/Turnermator13/ISOCraft", "Date": "2014-02-19T08:46:25Z"},
{"Line": "=>460", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (same) { return tab_e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3612/buggy-version/Source.Core.src.ca.uqac.lif.mtnp.table.HardTable.java", "BodyUseAPI": [], "Fixed commit": "f52efb56d58ccf6cd4f44750788bffd31abc42e1", "Url": "https://api.github.com/repos/liflab/mtnp", "Date": "2017-04-10T18:44:51Z"},
{"Line": "=>498", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!flushed) { com.alibaba.fastjson.serializer.SerializeWriter.getChars(propertyValueInt, newcount, out.buf); out.count = newcount; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8944/buggy-version/src.main.java.com.alibaba.fastjson.serializer.JavaBeanSerializer.java", "BodyUseAPI": [], "Fixed commit": "5fecf4e164f034358a8da4a644855462991b7a28", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-04-22T01:02:13Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.res.TypedArray.getDimensionPixelSize(R.styleable.QMUIRoundButton_qmui_radius,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (mRadius > 0) { isRadiusAdjustBounds = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5748/buggy-version/qmui.src.main.java.com.qmuiteam.qmui.widget.roundwidget.QMUIRoundButtonDrawable.java", "BodyUseAPI": [], "Fixed commit": "aace616e033e3033da2f7e45954987429d2c57de", "Url": "https://api.github.com/repos/QMUI/QMUI_Android", "Date": "2017-12-22T11:02:49Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (table.isNameOfClass(n.getClassId().getName())) { errors.add(((\"A class with name \" + (n.getClassId().getName())) + \" is already defined\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6893/buggy-version/src.se.helino.mjc.symbol.SymbolTableChecker.java", "BodyUseAPI": ["se.helino.mjc.symbol.MJMainClass.getClassId()", "java.util.ArrayList<java.lang.String>.add(((\"A class with name \" + (n.getClassId().getName())) + \" is already defined\"))", "n.getClassId().getName()"], "Fixed commit": "1878a2860f6553aef3382e7ac04d425b91865ca9", "Url": "https://api.github.com/repos/edvbld/mjc", "Date": "2011-05-17T19:44:42Z"},
{"Line": "=>643", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<tools.Vector2d>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(cake_positions.contains(next))) { controllers.aimodule.KillSubject.Agent.VectorKeys next_keys = new controllers.aimodule.KillSubject.Agent.VectorKeys(((int) (next.x)), ((int) (next.y))); double next_cost = (cost_so_far.get(currentNode_keys)) + 1; if ((!(cost_so_far.containsKey(next_keys))) || (next_cost < (cost_so_far.get(next_keys)))) { controllers.aimodule.KillSubject.Agent.NodePosition next_node_pos = new controllers.aimodule.KillSubject.Agent.NodePosition(next, (next_cost + (aStarHeuristic(next, goal)))); frontier.add(next_node_pos); visited_from.put(next_keys, currentNode.position); cost_so_far.put(next_keys, next_cost); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/9195/buggy-version/src.controllers.aimodule.KillSubject.Agent.java", "BodyUseAPI": ["controllers.aimodule.KillSubject.Agent.aStarHeuristic(tools.Vector2d,tools.Vector2d)"], "Fixed commit": "d9508a7b5e0d0224478422d5270fb7a264c58912", "Url": "https://api.github.com/repos/kisenshi/gvgai-gameAI-project", "Date": "2017-02-24T01:15:01Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ups) == 25) { upsColor = java.awt.Color.GREEN; }else if ((ups) >= 20) { upsColor = java.awt.Color.YELLOW; }else if ((ups) >= 15) { upsColor = com.valentine.game.utils.ColorExt.ORANGE; }else { upsColor = java.awt.Color.RED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3614/buggy-version/src.com.valentine.game.entity.creatures.FpsUpsCounter.java", "BodyUseAPI": [], "Fixed commit": "560835508dc60e2c35ef357adf97783aeaca8658", "Url": "https://api.github.com/repos/ValentineStone/Game", "Date": "2016-01-09T11:52:37Z"},
{"Line": "=>844", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["editMERestInput.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rest.equals(\"\")) { rest = \"\" + (measure.rest); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8739/buggy-version/src.main.java.zemfi.de.vertaktoid.FacsimileView.java", "BodyUseAPI": [], "Fixed commit": "0884a32b777a8006d3ba48a4f7b1449718cb4cf1", "Url": "https://api.github.com/repos/cemfi/vertaktoid", "Date": "2017-03-20T15:19:27Z"},
{"Line": "=>488", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dk.itu.mario.scene.LevelScene.recorder) != null) { dk.itu.mario.scene.LevelScene.recorder.detailedLog = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1663/buggy-version/src.dk.itu.mario.scene.LevelScene.java", "BodyUseAPI": [], "Fixed commit": "d2021ed693df4101667b99a80e5e851a3956c98d", "Url": "https://api.github.com/repos/Califax/MavenMarioAI", "Date": "2013-02-28T21:12:23Z"},
{"Line": "=>746", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((null != (constraint.getConstraintTarget())) && ((constraint.getConstraintTarget().length()) > (\"[\".length()))) { elmConstraint.addAttribute(new nu.xom.Attribute(\"Location\", constraint.getConstraintTarget().substring(0, constraint.getConstraintTarget().indexOf('[')))); }else { elmConstraint.addAttribute(new nu.xom.Attribute(\"Location\", \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5114/buggy-version/igamt-lite-service.src.main.java.gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.Serialization4ExportImpl.java", "BodyUseAPI": ["constraint.getConstraintTarget().substring(int,constraint.getConstraintTarget().indexOf('['))", "gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.constraints.Constraint.getConstraintTarget()", "gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.constraints.Constraint.getConstraintTarget()", "constraint.getConstraintTarget().indexOf(char)", "nu.xom.Element.addAttribute(nu.xom.Attribute)"], "Fixed commit": "c4961f31f5529dbb2e2860e72fce42a11a25773e", "Url": "https://api.github.com/repos/haffonist/igamt", "Date": "2016-11-30T21:50:16Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.event.KeyEvent.getKeyCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (keyCode == (java.awt.event.KeyEvent.VK_DOWN)) { com.company.KeyInput.isMovingD = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1283/buggy-version/src.com.company.KeyInput.java", "BodyUseAPI": [], "Fixed commit": "92a48809b4d08df1a84148bc22bab259a5194bee", "Url": "https://api.github.com/repos/NiagaraFalls/DeepSpace", "Date": "2015-11-10T07:26:15Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((section.length()) > 2) section = section.substring(0, 3);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2200/buggy-version/Project361.src.edu.uwm.cs361.Section.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "be9bc6c9ae01790659678eb67c59ef7b2676cf97", "Url": "https://api.github.com/repos/ovid-nis/Project361", "Date": "2014-11-24T08:17:41Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.startsWith(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isEmailAddress) { return new android.content.Intent(android.content.Intent.ACTION_SENDTO, uri); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5884/buggy-version/app.src.main.java.com.czbix.v2ex.util.MiscUtils.java", "BodyUseAPI": [], "Fixed commit": "cb9c0eb8c568c87d0afcbd18d0bf0a959b2d862b", "Url": "https://api.github.com/repos/CzBiX/v2ex-android", "Date": "2015-07-12T03:40:11Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((common.equals(\"\")) && (family.equals(\"\"))) && (genus.equals(\"\"))) && (species.equals(\"\"))) { return null; }else { return models.Fish.find().where().ilike(\"commonName\", ((\"%\" + common) + \"%\")).ilike(\"family\", ((\"%\" + family) + \"%\")).ilike(\"genus\", ((\"%\" + genus) + \"%\")).ilike(\"species\", ((\"%\" + species) + \"%\")).findList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6529/buggy-version/app.models.Fish.java", "BodyUseAPI": ["models.Fish.find().where().ilike(\"commonName\", ((\"%\" + common) + \"%\")).ilike(\"family\", ((\"%\" + family) + \"%\")).ilike(java.lang.String,java.lang.String)", "models.Fish.find().where().ilike(java.lang.String,java.lang.String)", "models.Fish.find().where().ilike(\"commonName\", ((\"%\" + common) + \"%\")).ilike(\"family\", ((\"%\" + family) + \"%\")).ilike(\"genus\", ((\"%\" + genus) + \"%\")).ilike(\"species\", ((\"%\" + species) + \"%\")).findList()", "models.Fish.find().where().ilike(\"commonName\", ((\"%\" + common) + \"%\")).ilike(java.lang.String,java.lang.String)", "models.Fish.find().where().ilike(\"commonName\", ((\"%\" + common) + \"%\")).ilike(\"family\", ((\"%\" + family) + \"%\")).ilike(\"genus\", ((\"%\" + genus) + \"%\")).ilike(java.lang.String,java.lang.String)"], "Fixed commit": "18fe71d23452d976df21dbd2d8484844038630d9", "Url": "https://api.github.com/repos/ReefNexus/reefnexus", "Date": "2015-05-14T04:30:15Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkObstacleCollision()) { float x = player.x; float y = player.y; synchronized(com.mygdx.game.objects.Player.class) { mapSynchronizer.syncTele(tracker, player, true); } if (checkObstacleCollision()) { player.x = x; player.y = y; synchronized(com.mygdx.game.objects.Player.class) { mapSynchronizer.syncTele(tracker, player, false); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7363/buggy-version/core.src.com.mygdx.game.states.PlayState.java", "BodyUseAPI": [], "Fixed commit": "ff9adc37fe3df632b29785172f6dd2960ef6b587", "Url": "https://api.github.com/repos/Dansyuqri/MacroHardv2", "Date": "2016-04-20T11:55:45Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (posPanel.isPresentElectronicScales()) buttonElectronicScales.setEnabled(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3866/buggy-version/org.adempiere.pos.src.main.java.ui.swing.org.adempiere.pos.POSQuantityPanel.java", "BodyUseAPI": [], "Fixed commit": "fcd26edecb68cb872d6f17745c6b9c0408ae9ac1", "Url": "https://api.github.com/repos/adempiere/adempierePOS", "Date": "2016-02-02T17:28:50Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clientAddress) != null) { pl.asie.computronics.util.sound.SoundBoard.SyncHandler.getHandler().setProcess(clientAddress, process); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3414/buggy-version/src.main.java.pl.asie.computronics.util.sound.SoundBoard.java", "BodyUseAPI": [], "Fixed commit": "ea1ff62f3662232c453577455f6d62674c0a7a39", "Url": "https://api.github.com/repos/Vexatos/Computronics", "Date": "2017-08-28T17:09:30Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nFileHandler.Download.file.exists()) { nFileHandler.Download.file.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8991/buggy-version/src.main.java.nFileHandler.Download.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "cd61fead56435f6859c3bf03b8ba4342fe6971d7", "Url": "https://api.github.com/repos/wenjiechew/FreshdriveServer", "Date": "2016-11-16T14:22:02Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(editText.getText().toString().equals(\"\"))) { inputData.add(editText.getText().toString()); }else { inputData.add(\"0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3844/buggy-version/app.src.main.java.pointscalculator.ttr_pc.MainActivity.java", "BodyUseAPI": ["android.widget.EditText.getText()", "java.util.List<java.lang.String>.add(editText.getText().toString())", "editText.getText().toString()"], "Fixed commit": "8d30741afca958be32f0eab4cf1fefa074686cc3", "Url": "https://api.github.com/repos/stasyasin/TTC_PC", "Date": "2016-08-23T19:45:17Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (debugOn) { java.lang.System.out.println(java.lang.String.format(\"Debug Server: Secret key hash code is %d.\", this.sec_key_spec.hashCode())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1802/buggy-version/src.ServerThread.java", "BodyUseAPI": [], "Fixed commit": "4689bcec7516579394a4129c67562fb8567bbcb7", "Url": "https://api.github.com/repos/anna-tran/Cryptography", "Date": "2017-10-27T04:09:22Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!exists) { courseMap.get(courseName).add(new examSchedule.course.Lecture(courseName, lectureName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/525/buggy-version/src.examSchedule.course.CourseMap.java", "BodyUseAPI": [], "Fixed commit": "47d0f7ed4751212fa2874e4b219f6fa896d02522", "Url": "https://api.github.com/repos/albchu/CPSC-433-Project", "Date": "2014-11-26T20:36:04Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (item.isPresent(school_lmi_eligible.name())) { school.setLmiEligible(getIntField(item, school_lmi_eligible)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7869/buggy-version/src.main.java.com.tcts.database.DynamoDBDatabase.java", "BodyUseAPI": ["com.tcts.datamodel.School.setLmiEligible(int)", "com.tcts.database.DynamoDBDatabase.getIntField(com.amazonaws.services.dynamodbv2.document.Item,com.tcts.database.DynamoDBDatabase)"], "Fixed commit": "d054bb2da9a92e5c9a51772f21b42f5431f9f1bb", "Url": "https://api.github.com/repos/mcherm/TeachChildrenToSave", "Date": "2016-12-04T16:26:53Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((holder.source) != null) holder.source.setTextSize((prefFontSizeSp - 3));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4090/buggy-version/src.org.qii.weiciyuan.ui.adapter.AbstractAppListAdapter.java", "BodyUseAPI": ["org.qii.weiciyuan.ui.adapter.TextView.setTextSize(int)"], "Fixed commit": "9e78d4be7c81da745a90d2c6e2a9ee91430ce020", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2013-03-08T13:59:52Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.String, resources.objects.Buff>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (buff == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6460/buggy-version/src.services.BuffService.java", "BodyUseAPI": [], "Fixed commit": "b0a4204a495fbe89f22f7e1d47627d39e19d6ea9", "Url": "https://api.github.com/repos/ProjectSWGCore/NGECore2", "Date": "2014-04-16T17:27:12Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getContext()) == null) { setState(State.DONE); }else { if ((getContext().getContextType()) == (BSONContextType.JAVASCRIPT_WITH_SCOPE)) { backpatchSize(); setContext(getContext().getParentContext()); } setState(getNextState()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6474/buggy-version/bson.src.main.org.bson.BSONBinaryWriter.java", "BodyUseAPI": [], "Fixed commit": "f08292733d70b5b5eb9c1f0ffcf2210161ee76e5", "Url": "https://api.github.com/repos/jyemin/mongo-java-driver", "Date": "2014-05-29T18:47:13Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (beanManager.getBeans(io.fabric8.kubernetes.client.KubernetesClient.class).isEmpty()) { event.addBean(new io.fabric8.cdi.bean.KubernetesClientBean()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/9021/buggy-version/components.fabric8-cdi.src.main.java.io.fabric8.cdi.Fabric8Extension.java", "BodyUseAPI": [], "Fixed commit": "b828c41ad88c7556ca6472533941338cb6245627", "Url": "https://api.github.com/repos/oscerd/fabric8", "Date": "2015-08-25T11:09:26Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentState) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5608/buggy-version/src.main.java.net.offbeatpioneer.retroengine.view.TouchListener.java", "BodyUseAPI": [], "Fixed commit": "de990e712b81ee3f4c83d1386c6bd1f00cfcdf8a", "Url": "https://api.github.com/repos/PioBeat/RetroGraphicsEngine", "Date": "2017-06-08T06:48:03Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.brewery.services.auth.token.jwt.JwtTokenService.parseToken(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (user != null) { userDetailService.invalidateToken(token); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6419/buggy-version/src.main.java.com.brewery.web.servlets.AdminAuthController.java", "BodyUseAPI": [], "Fixed commit": "d0768e5f30e534868d427dbdd304745ebe6679bf", "Url": "https://api.github.com/repos/ovasilenkovc/brewery", "Date": "2017-08-04T15:50:29Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((cmd.length) == 0) && ((cmd.text.length()) == 1)) && (isLineEnding(doc, cmd.text))) { smartIndentAfterNewline(doc, cmd); }else if (((cmd.text.length()) == 1) || ((com.redhat.ceylon.eclipse.imp.editor.CeylonAutoEditStrategy.getIndentWithSpaces()) && (isIndent(cmd.text)))) { smartIndentOnKeypress(doc, cmd); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7070/buggy-version/plugins.com.redhat.ceylon.eclipse.ui.src.com.redhat.ceylon.eclipse.imp.editor.CeylonAutoEditStrategy.java", "BodyUseAPI": ["com.redhat.ceylon.eclipse.imp.editor.CeylonAutoEditStrategy.smartIndentOnKeypress(org.eclipse.jface.text.IDocument,org.eclipse.jface.text.DocumentCommand)", "com.redhat.ceylon.eclipse.imp.editor.CeylonAutoEditStrategy.isIndent(cmd.text)", "cmd.text.length()", "com.redhat.ceylon.eclipse.imp.editor.CeylonAutoEditStrategy.smartIndentAfterNewline(org.eclipse.jface.text.IDocument,org.eclipse.jface.text.DocumentCommand)"], "Fixed commit": "6b7c36645749bfa9f3713fdc498c4b1b1350c00e", "Url": "https://api.github.com/repos/eclipse/ceylon-ide-eclipse", "Date": "2011-12-27T04:12:58Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (net.minecraft.src.buildcraft.krapht.gui.APIProxy.isRemote()) { net.minecraft.src.buildcraft.core.CoreProxy.sendToServer(new net.minecraft.src.buildcraft.krapht.network.PacketCoordinates(net.minecraft.src.buildcraft.krapht.network.NetworkConstants.PROVIDER_PIPE_NEXT_MODE, logic.xCoord, logic.yCoord, logic.zCoord).getPacket()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8390/buggy-version/client.net.minecraft.src.buildcraft.krapht.gui.GuiProviderPipe.java", "BodyUseAPI": [], "Fixed commit": "075553092dc316e0596ce446b028342a14be163b", "Url": "https://api.github.com/repos/RS485/LogisticsPipes", "Date": "2012-07-10T15:55:21Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (net.minecraft.src.buildcraft.krapht.gui.APIProxy.isRemote()) { net.minecraft.src.buildcraft.core.CoreProxy.sendToServer(new net.minecraft.src.buildcraft.krapht.network.PacketCoordinates(net.minecraft.src.buildcraft.krapht.network.NetworkConstants.PROVIDER_PIPE_CHANGE_INCLUDE, logic.xCoord, logic.yCoord, logic.zCoord).getPacket()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8390/buggy-version/client.net.minecraft.src.buildcraft.krapht.gui.GuiProviderPipe.java", "BodyUseAPI": [], "Fixed commit": "075553092dc316e0596ce446b028342a14be163b", "Url": "https://api.github.com/repos/RS485/LogisticsPipes", "Date": "2012-07-10T15:55:21Z"},
{"Line": "=>591", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (playerId.equals(getPlayerInTurn().getId())) { if ((getPossibleMoves().size()) > 0) { return true; }else return false; }else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1303/buggy-version/app.src.main.java.se.kth.sda.othello.imp.OthelloImp.java", "BodyUseAPI": [], "Fixed commit": "834ec81d20732bb5a66140984ee6c09c339204eb", "Url": "https://api.github.com/repos/petrych/othello-cleancode", "Date": "2017-12-05T10:18:07Z"},
{"Line": "=>607", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasValidMove(getPlayerInTurn().getId())) { return true; }else { swapPlayer(); if (hasValidMove(getPlayerInTurn().getId())) { swapPlayer(); return true; }else return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1303/buggy-version/app.src.main.java.se.kth.sda.othello.imp.OthelloImp.java", "BodyUseAPI": [], "Fixed commit": "834ec81d20732bb5a66140984ee6c09c339204eb", "Url": "https://api.github.com/repos/petrych/othello-cleancode", "Date": "2017-12-05T10:18:07Z"},
{"Line": "=>628", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasValidMove(playerId)) { for (se.kth.sda.othello.board.Node node : possibleMoves) { if (node.getId().equals(nodeId)) { isValid = true; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1303/buggy-version/app.src.main.java.se.kth.sda.othello.imp.OthelloImp.java", "BodyUseAPI": [], "Fixed commit": "834ec81d20732bb5a66140984ee6c09c339204eb", "Url": "https://api.github.com/repos/petrych/othello-cleancode", "Date": "2017-12-05T10:18:07Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(s.equals(\"\"))) arrayList.add(java.lang.Float.parseFloat(s));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5943/buggy-version/src.components.FileFlow.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Float>.add(float)", "java.lang.Float.parseFloat(java.lang.String)"], "Fixed commit": "0e9a49553ac79f3ead640ff8fc936a97132c5cb0", "Url": "https://api.github.com/repos/OrangeGuo/SoftwareValibilityTest", "Date": "2017-10-28T02:31:49Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(connected.get())) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4211/buggy-version/src.main.java.com.moilioncircle.redis.replicator.RedisSocketReplicator.java", "BodyUseAPI": [], "Fixed commit": "7ff4c6feddb56bcb6a14cf44b42db575310dcd5f", "Url": "https://api.github.com/repos/leonchen83/redis-replicator", "Date": "2016-08-24T14:27:53Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(data.getColumnIndex(AlexandriaContract.AuthorEntry.AUTHOR))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (authors == null) { authors = \"No Author Declared\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2196/buggy-version/app.src.main.java.it.jaschke.alexandria.BookDetail.java", "BodyUseAPI": [], "Fixed commit": "11083322fe6ebbd5f886e29f85820bb93aaf9351", "Url": "https://api.github.com/repos/pdrogfer/alexandria", "Date": "2016-01-26T10:55:24Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(data.getColumnIndex(AlexandriaContract.AuthorEntry.AUTHOR))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (authors == null) { authors = \"No Author Declared\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2196/buggy-version/app.src.main.java.it.jaschke.alexandria.AddBook.java", "BodyUseAPI": [], "Fixed commit": "11083322fe6ebbd5f886e29f85820bb93aaf9351", "Url": "https://api.github.com/repos/pdrogfer/alexandria", "Date": "2016-01-26T10:55:24Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((landedBlocks[((currentBlock.getY()) + y)][((currentBlock.getX()) + x)]) != 1) { landedBlocks[((currentBlock.getY()) + y)][((currentBlock.getX()) + x)] = blockShape[y][x]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6486/buggy-version/src.main.java.BlockWorld.java", "BodyUseAPI": ["AbstractBlock.getX()", "AbstractBlock.getY()"], "Fixed commit": "8376627638bb68562b24fe9f30be1ea6baf2c6e1", "Url": "https://api.github.com/repos/juliha/tetris", "Date": "2014-05-18T07:41:34Z"},
{"Line": "=>668", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (foundSequenced) { p.addError(\"parameter list may have at most one sequenced parameter\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8479/buggy-version/src.com.redhat.ceylon.compiler.typechecker.analyzer.DeclarationVisitor.java", "BodyUseAPI": [], "Fixed commit": "9ae6315248c55201735e28634d7cb0b3031af69f", "Url": "https://api.github.com/repos/ceylon/ceylon-spec", "Date": "2012-11-06T21:06:17Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mat) == null) && ((mat.length) <= 0)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3559/buggy-version/RotateMatrix.src.MatrixRotation.java", "BodyUseAPI": [], "Fixed commit": "1e21d07057233e801031e90995533f74d03040c5", "Url": "https://api.github.com/repos/brianhillsley/RotateMatrix", "Date": "2016-10-18T20:24:34Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.example.joel.popularmovies.MainActivityFragment.mGridView.getAdapter()) != null) { com.example.joel.popularmovies.MainActivityFragment.mGridView.performItemClick(com.example.joel.popularmovies.MainActivityFragment.mGridView, 0, com.example.joel.popularmovies.MainActivityFragment.mGridView.getAdapter().getItemId(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3465/buggy-version/app.src.main.java.com.example.joel.popularmovies.MainActivityFragment.java", "BodyUseAPI": ["android.widget.GridView.performItemClick(android.widget.GridView,int,com.example.joel.popularmovies.MainActivityFragment.mGridView.getAdapter().getItemId(0))", "android.widget.GridView.getAdapter()", "com.example.joel.popularmovies.MainActivityFragment.mGridView.getAdapter().getItemId(int)"], "Fixed commit": "7a151cfa0786eb066d0e3a015d7dad417107de0d", "Url": "https://api.github.com/repos/jfranc01/PopularMovies", "Date": "2017-01-16T14:34:23Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (banReason.isEmpty()) { banReason = configuration.getDefaultAsshatReason(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8598/buggy-version/src.main.java.com.thevoxelbox.voxelguest.modules.asshat.command.BanCommandExecutor.java", "BodyUseAPI": [], "Fixed commit": "c05debc45df0aab7af8e0779e6830c0a0bba9a4d", "Url": "https://api.github.com/repos/TVPT/VoxelGuest", "Date": "2013-02-04T01:42:41Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (kickReason.isEmpty()) { kickReason = configuration.getDefaultAsshatReason(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8598/buggy-version/src.main.java.com.thevoxelbox.voxelguest.modules.asshat.command.KickCommandExecutor.java", "BodyUseAPI": [], "Fixed commit": "c05debc45df0aab7af8e0779e6830c0a0bba9a4d", "Url": "https://api.github.com/repos/TVPT/VoxelGuest", "Date": "2013-02-04T01:42:41Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (muteReason.isEmpty()) { muteReason = configuration.getDefaultAsshatReason(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8598/buggy-version/src.main.java.com.thevoxelbox.voxelguest.modules.asshat.command.MuteCommandExecutor.java", "BodyUseAPI": [], "Fixed commit": "c05debc45df0aab7af8e0779e6830c0a0bba9a4d", "Url": "https://api.github.com/repos/TVPT/VoxelGuest", "Date": "2013-02-04T01:42:41Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((event.getArena()) != null) && (event.getArena().equals(arena))) { final net.slipcor.pvparena.arena.ArenaPlayer aPlayer = net.slipcor.pvparena.arena.ArenaPlayer.parsePlayer(event.getPlayer().getName()); if (((arena) != null) && (arena.getEveryone().contains(aPlayer))) { removePermissions(event.getPlayer()); setPermissions(arena, aPlayer, getTempPerms(arena, \"default\"), getTempPerms(arena, aPlayer.getArenaTeam().getName())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4015/buggy-version/m_TempPerms.src.net.slipcor.pvparena.modules.tempperms.TempPerms.java", "BodyUseAPI": ["net.slipcor.pvparena.modules.tempperms.TempPerms.getEveryone()", "net.slipcor.pvparena.arena.ArenaPlayer.parsePlayer(event.getPlayer().getName())", "net.slipcor.pvparena.modules.tempperms.TempPerms.getTempPerms(net.slipcor.pvparena.modules.tempperms.TempPerms,java.lang.String)", "net.slipcor.pvparena.modules.tempperms.TempPerms.setPermissions(net.slipcor.pvparena.modules.tempperms.TempPerms,net.slipcor.pvparena.arena.ArenaPlayer,java.util.Map<java.lang.String, java.lang.Boolean>,java.util.Map<java.lang.String, java.lang.Boolean>)", "event.getPlayer().getName()", "net.slipcor.pvparena.modules.tempperms.TempPerms.removePermissions(event.getPlayer())", "net.slipcor.pvparena.modules.tempperms.TempPerms.getTempPerms(net.slipcor.pvparena.modules.tempperms.TempPerms,aPlayer.getArenaTeam().getName())", "net.slipcor.pvparena.events.PAPlayerClassChangeEvent.getPlayer()", "arena.getEveryone().contains(net.slipcor.pvparena.arena.ArenaPlayer)", "net.slipcor.pvparena.events.PAPlayerClassChangeEvent.getPlayer()"], "Fixed commit": "b794b2aa4330e4618e6ae2654ec4d8b14b0d7a68", "Url": "https://api.github.com/repos/ChrisLane/pvparena_modules", "Date": "2016-06-03T15:12:19Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((company.getCustomAttributes()) != null) { updatableCompany.getCustomAttributes().putAll(company.getCustomAttributes()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7784/buggy-version/src.main.java.io.intercom.api.CompanyUpdateBuilder.java", "BodyUseAPI": ["io.intercom.api.Company.getCustomAttributes()", "updatableCompany.getCustomAttributes().putAll(company.getCustomAttributes())"], "Fixed commit": "f77fab53985e94c5f11afe53274f9e2059dceac1", "Url": "https://api.github.com/repos/davidesner/keboola-intercom-wr", "Date": "2017-05-25T14:42:09Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.honeybadger.reporter.config.MapConfigContext.normalizeEmptyAndNullAndDefaultToStringValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (env == null) { return normalizeEmptyAndNullAndDefaultToStringValue(io.honeybadger.reporter.config.MapConfigContext.READ_API_KEY_PROP_KEY); }else { return env; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/546/buggy-version/src.main.java.io.honeybadger.reporter.config.MapConfigContext.java", "BodyUseAPI": [], "Fixed commit": "708a99394437678f25b9abcbf1f5825add801fbc", "Url": "https://api.github.com/repos/honeybadger-io/honeybadger-java", "Date": "2015-09-21T05:09:42Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.nedap.retail.messages.AuthorizationClientFilter.LOGIN_PATH.equals(requestContext.getUri().getPath())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/503/buggy-version/java.messages.src.main.java.com.nedap.retail.messages.AuthorizationClientFilter.java", "BodyUseAPI": [], "Fixed commit": "00059a0a63b7ab76537e8db7c6aa1bfbca8199c8", "Url": "https://api.github.com/repos/nedap/retail-services-API", "Date": "2015-10-13T11:02:00Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (receiveTo == null) { java.lang.System.out.println(\"\\nReceived a null error. Below is receivedStr, printed out\"); java.lang.System.out.println(receivedStr); for (int x = 0; x < (lines.length); x++) { java.lang.System.out.printf(\"Line %d: %s\\n\", x, lines[x]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3770/buggy-version/Server.java", "BodyUseAPI": [], "Fixed commit": "e9513321577b4b739df471eccbc1e73e37a2078d", "Url": "https://api.github.com/repos/asiudhgfiuashgiuashg/server", "Date": "2015-12-16T05:01:17Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (idx == null) { idx = m_where.getPlaceholderIndex(placeholderName); if (idx == null) throw new java.lang.IllegalArgumentException(\"Placeholder doesn't exist\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1237/buggy-version/src.com.github.danfickle.javasqlquerybuilder.generic.QbUpdateImp.java", "BodyUseAPI": [], "Fixed commit": "97fc71822e59ff5c842e4f7b2cb008f75b9a6c62", "Url": "https://api.github.com/repos/danfickle/java-sql-query-builder", "Date": "2012-06-04T07:03:14Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.becelot.spacerace.team.TeamManager.getInstance().getTeamByPlayerName(entityPlayer.getDisplayName())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (tea != null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8802/buggy-version/src.com.becelot.spacerace.setup.state.TeamMemberSelectionState.java", "BodyUseAPI": [], "Fixed commit": "32fdd8076041095ef5fa3e4bf69a7181b5db352f", "Url": "https://api.github.com/repos/becelot/SpaceraceMod", "Date": "2014-03-13T20:45:23Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(text.equals(\"\"))) { if (ok) { javax.swing.ImageIcon icon = new javax.swing.ImageIcon(\"../img/check.png\"); javax.swing.JOptionPane.showMessageDialog(null, text, \"Result\", javax.swing.JOptionPane.PLAIN_MESSAGE, icon); }else javax.swing.JOptionPane.showMessageDialog(null, text, \"Result\", javax.swing.JOptionPane.ERROR_MESSAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2604/buggy-version/src.com.teamrainbow.ReflectorPC.settingsScreen.java", "BodyUseAPI": ["javax.swing.JOptionPane.showMessageDialog(<nulltype>,java.lang.String,java.lang.String,int,javax.swing.ImageIcon)", "javax.swing.JOptionPane.showMessageDialog(<nulltype>,java.lang.String,java.lang.String,int)"], "Fixed commit": "163151363ba36f818285ed41bbace71c32fa1df1", "Url": "https://api.github.com/repos/TeamRainbow/Reflector-JavaClient", "Date": "2014-07-19T18:27:12Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (method == null) { m_method = \"\"; }else { m_method = method; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4719/buggy-version/cat-home.src.main.java.com.dianping.cat.report.page.cross.CrossMethodVisitor.java", "BodyUseAPI": [], "Fixed commit": "de3d7adf8d7b526218aed77fcbe07d16641a4304", "Url": "https://api.github.com/repos/gaocogn/cat", "Date": "2013-08-14T08:10:37Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dianping.cat.report.page.model.Payload.getReport()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"logview\".equals(report)) { request = new com.dianping.cat.service.ModelRequest(domain, com.dianping.cat.message.internal.MessageId.parse(payload.getMessageId()).getTimestamp()); }else { request = new com.dianping.cat.service.ModelRequest(domain, period.getStartTime()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4719/buggy-version/cat-home.src.main.java.com.dianping.cat.report.page.model.Handler.java", "BodyUseAPI": [], "Fixed commit": "de3d7adf8d7b526218aed77fcbe07d16641a4304", "Url": "https://api.github.com/repos/gaocogn/cat", "Date": "2013-08-14T08:10:37Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(query.getText().isEmpty())) { setPageComplete(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1174/buggy-version/de.opalproject.vespucci.ui.src.de.opalproject.vespucci.ui.wizards.NewEnsembleWizardQueryPage.java", "BodyUseAPI": [], "Fixed commit": "d5bfb919a7d97bb52f5c4a09dadb3d6853d71795", "Url": "https://api.github.com/repos/Delors/Vespucci2", "Date": "2012-12-19T15:14:04Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getCheckedFactors().isEmpty()) { android.widget.Toast.makeText(this, R.string.choose_multipliers, Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2723/buggy-version/app.src.main.java.ru.yandex.subbota_job.multiplicationtable.StartActivity.java", "BodyUseAPI": [], "Fixed commit": "694d23f5761308405b6eb8b520d2ec972887f5cc", "Url": "https://api.github.com/repos/subbota-a/MultiplicationTable", "Date": "2016-10-12T21:40:39Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.travel.enjoyindanang.utils.Utils.hasSessionLogin())) { start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5076/buggy-version/app.src.main.java.com.travel.enjoyindanang.ui.activity.splash.ScreenSplashActivity.java", "BodyUseAPI": [], "Fixed commit": "77150e06e140769a3cd08ec2fe4268cf8e984b8f", "Url": "https://api.github.com/repos/Noobknight/EnjoyDaNangVN", "Date": "2017-12-14T10:08:53Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<? extends org.n52.io.response.ext.LicenseExtension>.getResource(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (configResource == null) { org.n52.io.response.ext.LicenseExtension.LOGGER.info(\"No license config found at '{}'. Using empty license.\", org.n52.io.response.ext.LicenseExtension.CONFIG_FILE); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5136/buggy-version/timeseries-io.src.main.java.org.n52.io.response.ext.LicenseExtension.java", "BodyUseAPI": [], "Fixed commit": "84ea4eb729df71e82fbbf9f9e009fd4fba21895c", "Url": "https://api.github.com/repos/ridoo/series-rest-api", "Date": "2015-12-29T14:25:28Z"},
{"Line": "=>988", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((landArea(i)) < 5) { civs[i].mil = 10 * (landArea(i)); civs[i].gold = 100 * (landArea(i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1699/buggy-version/src.conq.Game.java", "BodyUseAPI": ["conq.Game.landArea(int)", "conq.Game.landArea(int)"], "Fixed commit": "cbc75f260567025f7eeb3126142b6b1a3270eaf7", "Url": "https://api.github.com/repos/jmcavalli/Conq", "Date": "2017-07-18T17:20:39Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.googlemediaframeworkdemo.demo.MainActivity.getActionBar()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (actionBar != null) { actionBar.hide(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6365/buggy-version/demo.src.main.java.com.google.googlemediaframeworkdemo.demo.MainActivity.java", "BodyUseAPI": ["android.app.ActionBar.hide()"], "Fixed commit": "983034a0bb5f03889c53c704449da10535d0987b", "Url": "https://api.github.com/repos/tensafefrogs/google-media-framework-android", "Date": "2014-11-10T22:50:29Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(initialize)) { for (seedu.jobs.model.task.Task t : internalList) { stackList.add(t); } undoStack.push(stackList); }else { initialize = !(initialize); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8126/buggy-version/src.main.java.seedu.jobs.model.task.UniqueTaskList.java", "BodyUseAPI": [], "Fixed commit": "119e5bdf748dbf88ed0b188a60359c17c73ae74e", "Url": "https://api.github.com/repos/CS2103JAN2017-F11-B1/main", "Date": "2017-04-07T13:40:12Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (part.isSelected()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7353/buggy-version/src.nl.peterbjornx.openlogiceda.model.draw.Drawing.java", "BodyUseAPI": [], "Fixed commit": "4cc46b04e575a21dcfb5fc53d5982c95defc689c", "Url": "https://api.github.com/repos/peterbjornx/openlogiceda", "Date": "2017-01-12T17:00:15Z"},
{"Line": "=>377", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.amazonaws.services.kinesis.leases.impl.LeaseManager<T>.getLease(lease.getLeaseKey())", "T.getLeaseOwner()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((updatedLease == null) || (!(expectedOwner.equals(updatedLease.getLeaseOwner())))) || (!(expectedCounter.equals(updatedLease.getLeaseCounter())))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/212/buggy-version/src.main.java.com.amazonaws.services.kinesis.leases.impl.LeaseManager.java", "BodyUseAPI": [], "Fixed commit": "fafdb524bbb80cb2c8df97a9df608fd76ee6f0ec", "Url": "https://api.github.com/repos/atlassian/amazon-kinesis-client", "Date": "2016-03-02T20:44:56Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!done) { railo.commons.io.res.util.ResourceUtil.checkMoveToOK(this, dest); railo.commons.io.IOUtil.copy(getInputStream(), dest, true); if (!(this.delete())) { throw new java.io.IOException((\"can't delete resource \" + (this.getAbsolutePath()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/168/buggy-version/railo-java.railo-core.src.railo.commons.io.res.type.file.FileResource.java", "BodyUseAPI": [], "Fixed commit": "1cba39cda008feea6196dd34282a71640645e088", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2013-11-28T07:52:54Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (length > 0) stringBuilder.append(buf, offset, length);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2333/buggy-version/formatter.src.com.bookofbrilliantthings.mustache4j.util.StringWriter.java", "BodyUseAPI": ["java.lang.StringBuilder.append(char[],int,int)"], "Fixed commit": "16701a4b2069c3fe0fd5383888789edf7c97f7e6", "Url": "https://api.github.com/repos/cwestin/mustache4j", "Date": "2012-10-04T17:55:57Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (length > 0) stringBuilder.append(s, offset, (offset + length));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2333/buggy-version/formatter.src.com.bookofbrilliantthings.mustache4j.util.StringWriter.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String,int,int)"], "Fixed commit": "16701a4b2069c3fe0fd5383888789edf7c97f7e6", "Url": "https://api.github.com/repos/cwestin/mustache4j", "Date": "2012-10-04T17:55:57Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (c != null) { mTextColor.setText(c.color); mTextYear.setText(c.year); mTextMake.setText(c.make); mTextModel.setText(c.model); mTextLicensePlate.setText(c.plate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1541/buggy-version/app.src.main.java.com.fishfillet.shoal.DriverActivity.java", "BodyUseAPI": ["android.widget.EditText.setText(c.year)", "android.widget.EditText.setText(c.model)", "android.widget.EditText.setText(c.make)", "android.widget.EditText.setText(c.color)", "android.widget.EditText.setText(c.plate)"], "Fixed commit": "f7de29a17971fa438db118e44e9a453bc1934cdc", "Url": "https://api.github.com/repos/weblue/Shoal", "Date": "2016-12-05T04:00:09Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ref.WeakReference<android.view.View>.get()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (view != null) { com.aimbrain.sdk.collectors.SensorEventCollector.getInstance().startCollectingData(500); com.aimbrain.sdk.collectors.TextEventCollector.getInstance().textChanged(s.toString(), java.lang.System.currentTimeMillis(), view); com.aimbrain.sdk.util.Logger.v(com.aimbrain.sdk.textEvent.TextEventListener.TAG, s.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/9265/buggy-version/aimbrain.src.main.java.com.aimbrain.sdk.textEvent.TextEventListener.java", "BodyUseAPI": ["com.aimbrain.sdk.collectors.TextEventCollector.getInstance().textChanged(s.toString(),long,android.view.View)"], "Fixed commit": "42234c4b3e955173696a69a51cdef8a211643c54", "Url": "https://api.github.com/repos/aimbrain/aimbrain-android-sdk", "Date": "2017-03-08T19:01:18Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.emc.storageos.security.ipsec.IpUtils.LOCAL_IP) != null) { return com.emc.storageos.security.ipsec.IpUtils.LOCAL_IP; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2729/buggy-version/internalLibraries.security.src.main.java.com.emc.storageos.security.ipsec.IpUtils.java", "BodyUseAPI": [], "Fixed commit": "e9d1a16807718ddc3ca3ff8be9846ca07b3b5410", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-01-25T17:42:24Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((radonsoft.mireaassistant.helpers.Global.loginID) != 0) { saveValues(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/338/buggy-version/app.src.main.java.radonsoft.mireaassistant.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "0492e66dd9d4a30660cd38793ce27750d0b19750", "Url": "https://api.github.com/repos/RuslanBarcho/MIREAAssistant", "Date": "2017-10-10T20:31:24Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((radonsoft.mireaassistant.helpers.Global.loginID) != 0) { saveValues(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/338/buggy-version/app.src.main.java.radonsoft.mireaassistant.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "0492e66dd9d4a30660cd38793ce27750d0b19750", "Url": "https://api.github.com/repos/RuslanBarcho/MIREAAssistant", "Date": "2017-10-10T20:31:24Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((scalar) != null) && (index == 0)) { return this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1504/buggy-version/src.main.java.com.github.gimmi.any.Any.java", "BodyUseAPI": [], "Fixed commit": "656669c7d25f1f554b14326c27dd819b47ad198e", "Url": "https://api.github.com/repos/gimmi/java-any", "Date": "2016-01-08T21:50:03Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (type.equals(WandType.MagicMissile)) { images.put(type, com.watabou.pixeldungeon.items.wands.WandInfo.magicMissileImage); }else { int index = random.nextInt(labelsLeft.size()); labels.put(type, labelsLeft.get(index)); labelsLeft.remove(index); images.put(type, imagesLeft.get(index)); imagesLeft.remove(index); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8607/buggy-version/src.com.watabou.pixeldungeon.items.wands.WandInfo.java", "BodyUseAPI": ["java.util.Map<com.watabou.pixeldungeon.items.wands.WandType, java.lang.Integer>.put(com.watabou.pixeldungeon.items.wands.WandType,java.lang.Integer)", "java.util.Map<com.watabou.pixeldungeon.items.wands.WandType, java.lang.String>.put(com.watabou.pixeldungeon.items.wands.WandType,java.lang.String)", "java.util.Map<com.watabou.pixeldungeon.items.wands.WandType, java.lang.Integer>.put(com.watabou.pixeldungeon.items.wands.WandType,java.lang.Integer)"], "Fixed commit": "f841b70aa23fb2a14e2c10f5a121dc091bd3c155", "Url": "https://api.github.com/repos/sforney/pixel-dungeon", "Date": "2015-03-03T16:10:13Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((builder.getUpdate()) != null) { this.update = java.util.Calendar.getInstance(); this.update.setTime(builder.getUpdate()); }else { this.update = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5341/buggy-version/src.pl.net.newton.Makler.db.quote.Quote.java", "BodyUseAPI": [], "Fixed commit": "2b36003cb0a087b26c21d5058ca1a99e125c3333", "Url": "https://api.github.com/repos/trekawek/makler", "Date": "2014-01-13T15:16:18Z"},
{"Line": "=>2030", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getRGBChannelCount()) == 1) || ((getRGBChannelCount()) == (getSizeC()))) { if (((getSizeC()) > 1) && ((getSizeT()) > 1)) { ms.dimensionOrder += \"C\"; } for (java.lang.Long nBytes : bytes) { java.lang.String axis = bytesPerAxis.get(nBytes); if ((ms.dimensionOrder.indexOf(axis)) == (-1)) { ms.dimensionOrder += axis; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2198/buggy-version/components.formats-gpl.src.loci.formats.in.LIFReader.java", "BodyUseAPI": [], "Fixed commit": "22a05a345359d5623de8fe994fc327ef50107813", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-04-06T06:43:27Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vsct.hackathon.services.AutoCompleteService.getSearchParameters(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(searchParameters.getOrigin().toLowerCase().contains(\"lyon\"))) { if (!(searchParameters.getOrigin().contains(\">\"))) { proposals.add(((((\"\\\"\" + (searchParameters.getOrigin())) + \" > Lyon \") + (com.vsct.hackathon.services.AutoCompleteService.dateFormat.format(new java.util.Date()))) + \"\\\"\")); }else { proposals.add(((((\"\\\"\" + (searchParameters.getOrigin())) + \" Lyon \") + (com.vsct.hackathon.services.AutoCompleteService.dateFormat.format(new java.util.Date()))) + \"\\\"\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/9194/buggy-version/src.main.java.com.vsct.hackathon.services.AutoCompleteService.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(((((\"\\\"\" + (searchParameters.getOrigin())) + \" Lyon \") + (com.vsct.hackathon.services.AutoCompleteService.dateFormat.format(new java.util.Date()))) + \"\\\"\"))", "java.util.List<java.lang.String>.add(((((\"\\\"\" + (searchParameters.getOrigin())) + \" > Lyon \") + (com.vsct.hackathon.services.AutoCompleteService.dateFormat.format(new java.util.Date()))) + \"\\\"\"))", "com.vsct.hackathon.model.SearchParameters.getOrigin()", "searchParameters.getOrigin().contains(java.lang.String)", "com.vsct.hackathon.model.SearchParameters.getOrigin()", "com.vsct.hackathon.model.SearchParameters.getOrigin()"], "Fixed commit": "3c28f31110fbdb45a0b105880de56f82d75ae00f", "Url": "https://api.github.com/repos/lmivsct/hackathon2", "Date": "2014-12-10T09:04:39Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vsct.hackathon.services.AutoCompleteService.getSearchParameters(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(searchParameters.getOrigin().toLowerCase().contains(\"rennes\"))) { if (!(searchParameters.getOrigin().contains(\">\"))) { proposals.add(((((\"\\\"\" + (searchParameters.getOrigin())) + \" > Rennes \") + (com.vsct.hackathon.services.AutoCompleteService.dateFormat.format(new java.util.Date()))) + \"\\\"\")); }else { proposals.add(((((\"\\\"\" + (searchParameters.getOrigin())) + \" Rennes \") + (com.vsct.hackathon.services.AutoCompleteService.dateFormat.format(new java.util.Date()))) + \"\\\"\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/9194/buggy-version/src.main.java.com.vsct.hackathon.services.AutoCompleteService.java", "BodyUseAPI": ["searchParameters.getOrigin().contains(java.lang.String)", "java.util.List<java.lang.String>.add(((((\"\\\"\" + (searchParameters.getOrigin())) + \" > Rennes \") + (com.vsct.hackathon.services.AutoCompleteService.dateFormat.format(new java.util.Date()))) + \"\\\"\"))", "java.util.List<java.lang.String>.add(((((\"\\\"\" + (searchParameters.getOrigin())) + \" Rennes \") + (com.vsct.hackathon.services.AutoCompleteService.dateFormat.format(new java.util.Date()))) + \"\\\"\"))", "com.vsct.hackathon.model.SearchParameters.getOrigin()", "com.vsct.hackathon.model.SearchParameters.getOrigin()", "com.vsct.hackathon.model.SearchParameters.getOrigin()"], "Fixed commit": "3c28f31110fbdb45a0b105880de56f82d75ae00f", "Url": "https://api.github.com/repos/lmivsct/hackathon2", "Date": "2014-12-10T09:04:39Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vsct.hackathon.services.AutoCompleteService.getSearchParameters(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(searchParameters.getOrigin().toLowerCase().contains(\"lille\"))) { if (!(searchParameters.getOrigin().contains(\">\"))) { proposals.add(((((\"\\\"\" + (searchParameters.getOrigin())) + \" > Lille \") + (com.vsct.hackathon.services.AutoCompleteService.dateFormat.format(new java.util.Date()))) + \"\\\"\")); }else { proposals.add(((((\"\\\"\" + (searchParameters.getOrigin())) + \" Lille \") + (com.vsct.hackathon.services.AutoCompleteService.dateFormat.format(new java.util.Date()))) + \"\\\"\")); } }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/9194/buggy-version/src.main.java.com.vsct.hackathon.services.AutoCompleteService.java", "BodyUseAPI": ["com.vsct.hackathon.model.SearchParameters.getOrigin()", "searchParameters.getOrigin().contains(java.lang.String)", "java.util.List<java.lang.String>.add(((((\"\\\"\" + (searchParameters.getOrigin())) + \" > Lille \") + (com.vsct.hackathon.services.AutoCompleteService.dateFormat.format(new java.util.Date()))) + \"\\\"\"))", "com.vsct.hackathon.model.SearchParameters.getOrigin()", "com.vsct.hackathon.model.SearchParameters.getOrigin()", "java.util.List<java.lang.String>.add(((((\"\\\"\" + (searchParameters.getOrigin())) + \" Lille \") + (com.vsct.hackathon.services.AutoCompleteService.dateFormat.format(new java.util.Date()))) + \"\\\"\"))"], "Fixed commit": "3c28f31110fbdb45a0b105880de56f82d75ae00f", "Url": "https://api.github.com/repos/lmivsct/hackathon2", "Date": "2014-12-10T09:04:39Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vsct.hackathon.services.AutoCompleteService.getSearchParameters(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(searchParameters.getOrigin().toLowerCase().contains(\"paris\"))) { if (!(searchParameters.getOrigin().contains(\">\"))) { proposals.add(((((\"\\\"\" + (searchParameters.getOrigin())) + \" > Paris \") + (com.vsct.hackathon.services.AutoCompleteService.dateFormat.format(new java.util.Date()))) + \"\\\"\")); }else { proposals.add(((((\"\\\"\" + (searchParameters.getOrigin())) + \" Paris \") + (com.vsct.hackathon.services.AutoCompleteService.dateFormat.format(new java.util.Date()))) + \"\\\"\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/9194/buggy-version/src.main.java.com.vsct.hackathon.services.AutoCompleteService.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(((((\"\\\"\" + (searchParameters.getOrigin())) + \" Paris \") + (com.vsct.hackathon.services.AutoCompleteService.dateFormat.format(new java.util.Date()))) + \"\\\"\"))", "com.vsct.hackathon.model.SearchParameters.getOrigin()", "com.vsct.hackathon.model.SearchParameters.getOrigin()", "java.util.List<java.lang.String>.add(((((\"\\\"\" + (searchParameters.getOrigin())) + \" > Paris \") + (com.vsct.hackathon.services.AutoCompleteService.dateFormat.format(new java.util.Date()))) + \"\\\"\"))", "searchParameters.getOrigin().contains(java.lang.String)", "com.vsct.hackathon.model.SearchParameters.getOrigin()"], "Fixed commit": "3c28f31110fbdb45a0b105880de56f82d75ae00f", "Url": "https://api.github.com/repos/lmivsct/hackathon2", "Date": "2014-12-10T09:04:39Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vsct.hackathon.services.AutoCompleteService.getSearchParameters(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(searchParameters.getOrigin().toLowerCase().contains(\"nantes\"))) { if (!(searchParameters.getOrigin().contains(\">\"))) { proposals.add(((((\"\\\"\" + (searchParameters.getOrigin())) + \" > Nantes \") + (com.vsct.hackathon.services.AutoCompleteService.dateFormat.format(new java.util.Date()))) + \"\\\"\")); }else { proposals.add(((((\"\\\"\" + (searchParameters.getOrigin())) + \" Nantes \") + (com.vsct.hackathon.services.AutoCompleteService.dateFormat.format(new java.util.Date()))) + \"\\\"\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/9194/buggy-version/src.main.java.com.vsct.hackathon.services.AutoCompleteService.java", "BodyUseAPI": ["searchParameters.getOrigin().contains(java.lang.String)", "com.vsct.hackathon.model.SearchParameters.getOrigin()", "com.vsct.hackathon.model.SearchParameters.getOrigin()", "com.vsct.hackathon.model.SearchParameters.getOrigin()", "java.util.List<java.lang.String>.add(((((\"\\\"\" + (searchParameters.getOrigin())) + \" > Nantes \") + (com.vsct.hackathon.services.AutoCompleteService.dateFormat.format(new java.util.Date()))) + \"\\\"\"))", "java.util.List<java.lang.String>.add(((((\"\\\"\" + (searchParameters.getOrigin())) + \" Nantes \") + (com.vsct.hackathon.services.AutoCompleteService.dateFormat.format(new java.util.Date()))) + \"\\\"\"))"], "Fixed commit": "3c28f31110fbdb45a0b105880de56f82d75ae00f", "Url": "https://api.github.com/repos/lmivsct/hackathon2", "Date": "2014-12-10T09:04:39Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(g.jam.checkMaster())) { g.jam.loadJamFromJSON(jam); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8758/buggy-version/src.com.stanford.tutti.JoinJamThread.java", "BodyUseAPI": ["g.jam.loadJamFromJSON(org.json.JSONObject)"], "Fixed commit": "cb46c48d0b395b8f891723f827ba09f849f46184", "Url": "https://api.github.com/repos/JayThomason/Tutti", "Date": "2014-05-01T07:38:29Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(word.isEmpty())) incrementWordCount(statistic, word.toLowerCase());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4966/buggy-version/src.main.java.com.coderskitchen.macdi.statistic.control.WordStatisticProcessor.java", "BodyUseAPI": ["java.lang.String.toLowerCase()", "com.coderskitchen.macdi.statistic.control.WordStatisticProcessor.incrementWordCount(java.util.HashMap<java.lang.String, java.lang.Integer>,java.lang.String)"], "Fixed commit": "ba9c4ca9081dfaebb818e760f0fcb01d8606c0d2", "Url": "https://api.github.com/repos/coders-kitchen/MoskitoAndCDI-Example", "Date": "2013-03-29T23:38:19Z"},
{"Line": "=>697", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((imageData) == null) { for (int i = 0; i <= (maxZoomLevel); i++) { imageData = ((org.mrgeo.image.MrsImagePyramidMetadata.ImageMetadata[]) (org.apache.commons.lang.ArrayUtils.add(imageData, new org.mrgeo.image.MrsImagePyramidMetadata.ImageMetadata()))); } }else if ((maxZoomLevel) < (imageData.length)) { imageData = ((org.mrgeo.image.MrsImagePyramidMetadata.ImageMetadata[]) (org.apache.commons.lang.ArrayUtils.subarray(imageData, 0, ((maxZoomLevel) + 1)))); }else if ((maxZoomLevel) > (imageData.length)) { for (int i = imageData.length; i <= (maxZoomLevel); i++) { imageData = ((org.mrgeo.image.MrsImagePyramidMetadata.ImageMetadata[]) (org.apache.commons.lang.ArrayUtils.add(imageData, new org.mrgeo.image.MrsImagePyramidMetadata.ImageMetadata()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2452/buggy-version/mrgeo-core.src.main.java.org.mrgeo.image.MrsImagePyramidMetadata.java", "BodyUseAPI": [], "Fixed commit": "6611652b2360fddbaa8440d6d2f0fbcb396c656c", "Url": "https://api.github.com/repos/ngageoint/mrgeo", "Date": "2015-01-26T14:13:05Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hmac) != null) { hmac.update(buf, 0, read); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6143/buggy-version/java-manta-client.src.main.java.com.joyent.manta.client.crypto.MantaEncryptedObjectInputStream.java", "BodyUseAPI": [], "Fixed commit": "bb9574106d77e1ecac3668db86a297d38fedbfcc", "Url": "https://api.github.com/repos/joyent/java-manta", "Date": "2017-01-17T22:13:25Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((!isNew) && (userData.hasEmail())) && ((userData.getEmail()) != null)) { com.pratilipi.data.type.User user = com.pratilipi.data.DataAccessorFactory.getDataAccessor().getUserByEmail(userData.getEmail()); if ((user != null) && (!(user.getId().equals(userData.getId())))) errorMessages.addProperty(\"email\", GenericRequest.ERR_EMAIL_REGISTERED_ALREADY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1998/buggy-version/src.main.java.com.pratilipi.data.util.UserDataUtil.java", "BodyUseAPI": ["com.pratilipi.data.client.UserData.getEmail()", "com.pratilipi.data.DataAccessorFactory.getDataAccessor().getUserByEmail(userData.getEmail())", "user.getId().equals(userData.getId())", "com.pratilipi.data.client.UserData.getId()"], "Fixed commit": "44c2732abbb062f282f098317c89f39e75e17039", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-04-09T12:08:30Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((statisticsCriteriaPanel.colCharWidth()) < 10) { currWidth = (fm.stringWidth(spreadsheetCell.toString())) + bufferWidth; }else { currWidth = colPreferredWidthData; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8210/buggy-version/beam-visat-rcp.src.main.java.org.esa.beam.visat.toolviews.stat.StatisticsSpreadsheetPagePanel.java", "BodyUseAPI": [], "Fixed commit": "6ae035de8a479bbd51e48077f41088e727779411", "Url": "https://api.github.com/repos/seadas/beam", "Date": "2017-08-15T16:40:20Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!exit) java.util.Collections.reverse(path);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6191/buggy-version/OpenStreetMap.src.process.OSMRouting.java", "BodyUseAPI": [], "Fixed commit": "1234ed9583b2d6c46a660144c7e46bf8ba02fe32", "Url": "https://api.github.com/repos/usunyu/CleanPath", "Date": "2013-10-21T21:57:40Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.Long, process.HighwayEntrance>.get(long)", "java.util.HashMap<java.lang.Long, process.HighwayEntrance>.get(long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((entrance != null) && (exit != null)) { java.lang.System.out.println(\"find the path successful!\"); }else { java.lang.System.err.println(\"cannot find the entrance, program exit!\"); java.lang.System.exit((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6191/buggy-version/OpenStreetMap.src.process.OSMRouting.java", "BodyUseAPI": [], "Fixed commit": "1234ed9583b2d6c46a660144c7e46bf8ba02fe32", "Url": "https://api.github.com/repos/usunyu/CleanPath", "Date": "2013-10-21T21:57:40Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((trustedPlayer.uuid) == null) || (isPlayerOwner(player, ((omtteam.omlib.tileentity.TileEntityOwnedBlock) (this))))) { if ((trustedPlayer.uuid) != null) { omtteam.omlib.util.DebugHandler.getInstance().sendMessageToDebugChat(\"You cannot add an owner!\"); }else { omtteam.omlib.util.DebugHandler.getInstance().sendMessageToDebugChat(((\"Did not find player named \" + name) + \"in the username cache.\")); } return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/688/buggy-version/src.main.java.omtteam.omlib.tileentity.ITrustedPlayersManager.java", "BodyUseAPI": [], "Fixed commit": "5b969126de65a18080b68496a9564a752e76a44e", "Url": "https://api.github.com/repos/OpenModularTurretsTeam/OMLib", "Date": "2017-05-25T16:27:28Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((funDescriptor.getExtensionReceiverParameter()) != null) arity++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/360/buggy-version/compiler.backend.src.org.jetbrains.kotlin.codegen.ClosureCodegen.java", "BodyUseAPI": [], "Fixed commit": "596d3789629eb5301c0fc950a75c14de737ccb7f", "Url": "https://api.github.com/repos/dzharkov/kotlin", "Date": "2015-06-01T09:28:41Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((funDescriptor.getDispatchReceiverParameter()) != null) arity++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/360/buggy-version/compiler.backend.src.org.jetbrains.kotlin.codegen.ClosureCodegen.java", "BodyUseAPI": [], "Fixed commit": "596d3789629eb5301c0fc950a75c14de737ccb7f", "Url": "https://api.github.com/repos/dzharkov/kotlin", "Date": "2015-06-01T09:28:41Z"},
{"Line": "=>870", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.openbravo.pos.util.PropertyUtil.getProperty(com.openbravo.pos.forms.AppView,java.lang.String,java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (v1 != null) widths.put(\"label.item\", java.lang.Integer.parseInt(v1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5085/buggy-version/src-pos.com.openbravo.pos.util.PropertyUtil.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String,int)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "78fdafce666622c31b4968a70474be4e09491de4", "Url": "https://api.github.com/repos/rhinterndorfer/w4cash", "Date": "2016-01-18T15:29:26Z"},
{"Line": "=>877", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.openbravo.pos.util.PropertyUtil.getProperty(com.openbravo.pos.forms.AppView,java.lang.String,java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (v3 != null) widths.put(\"label.value\", java.lang.Integer.parseInt(v3));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5085/buggy-version/src-pos.com.openbravo.pos.util.PropertyUtil.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String,int)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "78fdafce666622c31b4968a70474be4e09491de4", "Url": "https://api.github.com/repos/rhinterndorfer/w4cash", "Date": "2016-01-18T15:29:26Z"},
{"Line": "=>874", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.openbravo.pos.util.PropertyUtil.getProperty(com.openbravo.pos.forms.AppView,java.lang.String,java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (v2 != null) widths.put(\"label.units\", java.lang.Integer.parseInt(v2));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5085/buggy-version/src-pos.com.openbravo.pos.util.PropertyUtil.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String,int)"], "Fixed commit": "78fdafce666622c31b4968a70474be4e09491de4", "Url": "https://api.github.com/repos/rhinterndorfer/w4cash", "Date": "2016-01-18T15:29:26Z"},
{"Line": "=>1134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (output == null) { return \"xterm\"; }else if (output.contains(\"gnome-session\")) { return \"gnome-terminal\"; }else if (output.contains(\"ksmserver\")) { return \"konsole\"; }else if (output.contains(\"mate-session\")) { return \"mate-terminal\"; }else if (output.contains(\"xfce-mcs-manage\")) { return \"xfce4-terminal\"; }else { return \"xterm\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3352/buggy-version/src.main.java.org.jboss.pressgang.ccms.contentspec.client.utils.ClientUtilities.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "f3d15cb38907e599fde33cc4350c3e347e75f652", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSCSPClient", "Date": "2014-02-12T02:01:36Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (arg.endsWith(\"\\\"\")) { commandArgs.add(arg.substring(1, ((arg.length()) - 1))); }else { quotes = true; quotesString = new java.lang.StringBuilder(arg.substring(1)).append(\" \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3352/buggy-version/src.main.java.org.jboss.pressgang.ccms.contentspec.client.utils.ClientUtilities.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "f3d15cb38907e599fde33cc4350c3e347e75f652", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSCSPClient", "Date": "2014-02-12T02:01:36Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.ignite.internal.util.typedef.X.hasCause(e, org.apache.ignite.internal.NodeStoppingException.class)) onComplete(); else finish(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7457/buggy-version/modules.core.src.main.java.org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxFinishFuture.java", "BodyUseAPI": [], "Fixed commit": "3c99f9099518854ad997963ae8efd2fc6a2b2c3c", "Url": "https://api.github.com/repos/apache/ignite", "Date": "2017-01-10T10:37:26Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["AdminServiceAPI.NamespaceAPI.loadNamespace(java.lang.String,com.ctrip.framework.apollo.core.enums.Env,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (namespace == null) { throw new com.ctrip.framework.apollo.core.exception.BadRequestException((((((\"namespace:\" + namespaceName) + \" not exist in env:\") + env) + \", cluster:\") + clusterName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1850/buggy-version/apollo-portal.src.main.java.com.ctrip.framework.apollo.portal.service.PortalConfigService.java", "BodyUseAPI": [], "Fixed commit": "a37c72e4c2b65a08cb3f1dbc3fc3b4ecc1bbcd02", "Url": "https://api.github.com/repos/nobodyiam/apollo", "Date": "2016-05-24T07:39:32Z"},
{"Line": "=>712", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isUpdate) { if (!(org.xmlbeam.util.intern.ReflectionHelper.hasParameters(method))) { throw new java.lang.IllegalArgumentException(((((\"Method \" + method) + \" has @\") + (org.xmlbeam.tests.TestUpdatetInvoker.Update.class.getSimpleName())) + \" annotaion, but has no paramerter\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1079/buggy-version/src.main.java.org.xmlbeam.XBProjector.java", "BodyUseAPI": [], "Fixed commit": "f1bfb01abfb3d4291f5040c09ab91ce07149bfe4", "Url": "https://api.github.com/repos/SvenEwald/xmlbeam", "Date": "2014-05-05T20:53:47Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(s.isEmpty())) { scriptsList.add(s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/9043/buggy-version/src.main.java.main.controllers.individualStagesControllers.CreateNewNodeController.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "0809fd692b19029a50f8dea8eaded2ae2667ba8b", "Url": "https://api.github.com/repos/fnk0/GameEngineSceneBuilder", "Date": "2014-12-06T20:12:06Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (maxThreads < 1) { maxThreads = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5548/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.mysql.MySQL.java", "BodyUseAPI": [], "Fixed commit": "f2f89cbf4102b139b98604abc28f7d64089be5e8", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2017-11-19T19:15:10Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (debug && (com.michael.e.liquislots.config.ConfigHandler.debugMode)) list.add(((stack.getTagCompound()) != null ? stack.getTagCompound().toString() : \"Null\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8343/buggy-version/src.main.java.com.michael.e.liquislots.item.ItemHandPump.java", "BodyUseAPI": [], "Fixed commit": "a7f48cfa48fbd7cba785bed77b6ecd2870d0badc", "Url": "https://api.github.com/repos/michael-3-141/LiquiPacks", "Date": "2015-04-19T19:43:08Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shutdownTime) == null) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6752/buggy-version/appenders.src.main.java.com.kdgregory.log4j.aws.internal.cloudwatch.CloudWatchLogWriter.java", "BodyUseAPI": [], "Fixed commit": "545dc5d11aeff84c2df4565502579b3c6aa21783", "Url": "https://api.github.com/repos/kdgregory/log4j-aws-appenders", "Date": "2017-07-20T10:41:22Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mGoogleApiClient) != null) { mGoogleApiClient.connect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5577/buggy-version/auth.src.main.java.com.firebase.ui.auth.util.smartlock.SaveSmartLock.java", "BodyUseAPI": [], "Fixed commit": "a0355b584756eb69995df6ecbc03fe94402b339a", "Url": "https://api.github.com/repos/SUPERCILEX/FirebaseUI-Android", "Date": "2016-10-22T05:13:11Z"},
{"Line": "=>2028", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isContainsInTypeAnnotation(localDeclaration.type.resolvedType, a)) { a.traverse(this, scope); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8489/buggy-version/src.main.java.spoon.support.compiler.jdt.JDTTreeBuilder.java", "BodyUseAPI": ["org.eclipse.jdt.internal.compiler.ast.Annotation.traverse(spoon.support.compiler.jdt.JDTTreeBuilder,org.eclipse.jdt.internal.compiler.lookup.BlockScope)"], "Fixed commit": "6c9cba042cc33a5a921d5415251f330579acc100", "Url": "https://api.github.com/repos/GerardPaligot/spoon", "Date": "2015-02-17T14:42:39Z"},
{"Line": "=>2152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isContainsInTypeAnnotation(methodDeclaration.returnType.resolvedType, a)) { a.traverse(this, methodDeclaration.scope); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8489/buggy-version/src.main.java.spoon.support.compiler.jdt.JDTTreeBuilder.java", "BodyUseAPI": ["org.eclipse.jdt.internal.compiler.ast.Annotation.traverse(spoon.support.compiler.jdt.JDTTreeBuilder,methodDeclaration.scope)"], "Fixed commit": "6c9cba042cc33a5a921d5415251f330579acc100", "Url": "https://api.github.com/repos/GerardPaligot/spoon", "Date": "2015-02-17T14:42:39Z"},
{"Line": "=>1552", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isContainsInTypeAnnotation(argument.type.resolvedType, a)) { a.traverse(this, scope); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8489/buggy-version/src.main.java.spoon.support.compiler.jdt.JDTTreeBuilder.java", "BodyUseAPI": ["org.eclipse.jdt.internal.compiler.ast.Annotation.traverse(spoon.support.compiler.jdt.JDTTreeBuilder,org.eclipse.jdt.internal.compiler.lookup.BlockScope)"], "Fixed commit": "6c9cba042cc33a5a921d5415251f330579acc100", "Url": "https://api.github.com/repos/GerardPaligot/spoon", "Date": "2015-02-17T14:42:39Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.beust.jcommander.JCommander.getParsedCommand()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (InitCommand.CMD.equals(parsedCmd)) { configureProject(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5686/buggy-version/src.main.java.it.unitn.disi.diversicon.cli.DiverCli.java", "BodyUseAPI": [], "Fixed commit": "7fa09438632d7db9038a66ab18f0a17358fd6d8e", "Url": "https://api.github.com/repos/diversicon-kb/divercli", "Date": "2016-09-27T15:09:30Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((condprobs.size()) <= 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/50/buggy-version/src.module6.DocumentStore.java", "BodyUseAPI": [], "Fixed commit": "c7ebbd085d82a50c7f93c8b6f428db889482282f", "Url": "https://api.github.com/repos/Watsbear/Classifier", "Date": "2016-01-06T23:33:05Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.max(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((z % sampleReduction) == 0) { noiseValue += (noise.noise(((terrainNoiseMultiplier) * x), ((terrainNoiseMultiplier) * z))) / (noiseScale); divider++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6916/buggy-version/src.main.java.org.terasology.anotherWorld.generation.PerlinSurfaceHeightProvider.java", "BodyUseAPI": ["org.terasology.utilities.procedural.Noise2D.noise(float,float)"], "Fixed commit": "040e2e23f6a36cd8e2344bb4a62a7d409a2b64c6", "Url": "https://api.github.com/repos/Terasology/AnotherWorld", "Date": "2014-10-21T06:30:40Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lib.ValidateUser.lastLogin) != null) { lib.ValidateUser.lastLoginTime = new java.text.SimpleDateFormat(\"dd.MM.yyyy - HH:mm\").format(lib.ValidateUser.lastLogin); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8878/buggy-version/slit.src.java.lib.ValidateUser.java", "BodyUseAPI": [], "Fixed commit": "3d05ac21714aa95d8139437952458a0da1c20d34", "Url": "https://api.github.com/repos/TheCooperative/SLIT", "Date": "2017-10-17T13:39:45Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((vertex.getValue().getGraphs()) == null) { vertex.getValue().setGraphs(new java.util.HashSet<java.lang.Long>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1671/buggy-version/gradoop-flink.src.main.java.org.gradoop.model.impl.operators.SplitBy.java", "BodyUseAPI": ["org.apache.flink.graph.Vertex<java.lang.Long, VD>.getValue()", "vertex.getValue().setGraphs(java.util.HashSet<java.lang.Long>)"], "Fixed commit": "257ad88b11ec0a54650f886a7336bb4fc907e91f", "Url": "https://api.github.com/repos/dbs-leipzig/gradoop", "Date": "2015-09-01T21:50:10Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (true) java.lang.System.out.println(\"asdf\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4535/buggy-version/sample.src.main.java.com.pedrogomez.renderers.ui.renderers.LikeVideoRenderer.java", "BodyUseAPI": [], "Fixed commit": "bedcf8324e719351d122cfa42d4d9f044795f303", "Url": "https://api.github.com/repos/pedrovgs/Renderers", "Date": "2014-08-09T14:53:48Z"},
{"Line": "=>921", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lastCurrentDirectionIndex != (currentDirectionIndex)) { updateBottomViews(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1305/buggy-version/library.src.main.java.com.daimajia.swipe.SwipeLayout.java", "BodyUseAPI": [], "Fixed commit": "c5d3e6743e068a129ac06ff6b57493c4afa1a04c", "Url": "https://api.github.com/repos/jekinleeph/AndroidSwipeLayout", "Date": "2014-12-23T04:49:01Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((widget.getParameter()) != null) { if (logger.isDebugEnabled()) { logger.debug((((((\"Adding listener on \" + (strategyUI.getStrategy().getName())) + \" \") + (widget.getParameter().getName())) + \" widget \") + widget)); } swingWidgetListeners.put(widget.getParameter().getName(), new org.atdl4j.ui.swing.impl.SwingStrategiesUI.SwingWidgetListener(((org.atdl4j.ui.swing.SwingWidget) (widget)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5662/buggy-version/src.main.java.org.atdl4j.ui.swing.impl.SwingStrategiesUI.java", "BodyUseAPI": ["widget.getParameter().getName()", "widget.getParameter().getName()", "org.atdl4j.ui.swing.impl.SwingStrategiesUI.debug((((((\"Adding listener on \" + (strategyUI.getStrategy().getName())) + \" \") + (widget.getParameter().getName())) + \" widget \") + widget))", "org.atdl4j.ui.Atdl4jWidget<?>.getParameter()", "org.atdl4j.ui.Atdl4jWidget<?>.getParameter()", "java.util.Map<java.lang.String, org.atdl4j.ui.swing.impl.SwingStrategiesUI.SwingWidgetListener>.put(widget.getParameter().getName(),org.atdl4j.ui.swing.impl.SwingStrategiesUI.SwingWidgetListener)"], "Fixed commit": "4cb50b6dbd01c5a16ebed267d04c9925116f0ce1", "Url": "https://api.github.com/repos/rob3rtb/atdl4j", "Date": "2015-01-23T10:45:39Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["frame.getIFrame().getContentDocument()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (doc.getURL().equals(ViewerPane.ABOUT_BLANK)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4010/buggy-version/src.gwt.src.org.rstudio.core.client.ScrollUtil.java", "BodyUseAPI": [], "Fixed commit": "291d8d07026da2e8c76f62b6bb7cc4849bcc2c7d", "Url": "https://api.github.com/repos/rstudio/rstudio", "Date": "2014-07-08T21:31:50Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mMemoryCache.get(data)) == null) mMemoryCache.put(data, value);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4028/buggy-version/src.cn.way.wandroid.imageloader.ImageCache.java", "BodyUseAPI": ["android.support.v4.util.LruCache<java.lang.String, android.graphics.drawable.BitmapDrawable>.put(java.lang.String,android.graphics.drawable.BitmapDrawable)"], "Fixed commit": "edf9d71cf575f99678e802bdcef4d789492ca57c", "Url": "https://api.github.com/repos/wayhap/WAndroid", "Date": "2014-09-03T02:51:01Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cookpad.puree.outputs.PureeBufferedOutput.2.applyFilters(com.google.gson.JsonObject)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (filteredLog != null) { storage.insert(type(), filteredLog); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2641/buggy-version/puree.src.main.java.com.cookpad.puree.outputs.PureeBufferedOutput.java", "BodyUseAPI": ["com.cookpad.puree.outputs.PureeBufferedOutput.2.insert(type(),com.google.gson.JsonObject)"], "Fixed commit": "dacd61929ca8cb4c775a7796f4b4be6e4fba0101", "Url": "https://api.github.com/repos/cookpad/puree-android", "Date": "2015-06-17T13:53:28Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rawSQL.indexOf(\";\")) < 0) { end = rawSQL.length(); }else { end = (rawSQL.indexOf(\";\")) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4153/buggy-version/src.sqlchecker.io.impl.SubmissionReader.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.length()"], "Fixed commit": "491801cccb4c50c65d00f0743504cbbd6631d206", "Url": "https://api.github.com/repos/mxhdev/SQLChecker", "Date": "2016-01-26T14:32:32Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sqlOut.indexOf(\";\")) < 0) { end = sqlOut.length(); }else { end = (sqlOut.indexOf(\";\")) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4153/buggy-version/src.sqlchecker.io.impl.SubmissionReader.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.length()"], "Fixed commit": "491801cccb4c50c65d00f0743504cbbd6631d206", "Url": "https://api.github.com/repos/mxhdev/SQLChecker", "Date": "2016-01-26T14:32:32Z"},
{"Line": "=>461", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opensourcephysics.cabrillo.tracker.deploy.TrackerStarter.findPreferences()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (prefsXMLControl == null) { org.opensourcephysics.cabrillo.tracker.deploy.TrackerStarter.logMessage(\"no preferences file found\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4918/buggy-version/src.org.opensourcephysics.cabrillo.tracker.deploy.TrackerStarter.java", "BodyUseAPI": [], "Fixed commit": "219394a5ae644685b2c20995def15f999fd3ca97", "Url": "https://api.github.com/repos/fschuett/tracker", "Date": "2015-06-27T22:26:37Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data.isEmpty()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4141/buggy-version/app.src.main.java.com.udacity.gradle.builditbigger.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ba02b2f3d4e4db027e198964cddd1ab29080c81e", "Url": "https://api.github.com/repos/ramkrishna757575/BuildItBigger", "Date": "2016-12-27T14:48:35Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pchmn.materialchips.views.FilterableListView.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (parent != null) { parent.removeView(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/9213/buggy-version/library.src.main.java.com.pchmn.materialchips.views.FilterableListView.java", "BodyUseAPI": ["android.view.ViewGroup.removeView(com.pchmn.materialchips.views.FilterableListView)"], "Fixed commit": "613ff560c9df26a0859c15e6d2fe4423c22f0f7e", "Url": "https://api.github.com/repos/k-nar/MaterialChipsInput", "Date": "2017-07-29T16:32:55Z"},
{"Line": "=>848", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.traccar.web.server.utils.StopsDetector.detectStops(java.util.List<pl.datamatica.traccar.model.Position>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (deviceTrack.isEmpty()) return new java.util.ArrayList(positions);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2373/buggy-version/src.main.java.org.traccar.web.server.model.DataServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "0d1a8f784e12d7d0ed7d08ccde0bdc8f45df56aa", "Url": "https://api.github.com/repos/datamatica-pl/traccar-web", "Date": "2017-07-20T09:23:55Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (enterCount > (com.forum.repository.QuestionValidation.ENTER_KEY_LIMIT)) { refactoredQuestion.append(question.charAt(i)); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1330/buggy-version/src.main.java.com.forum.repository.QuestionValidation.java", "BodyUseAPI": [], "Fixed commit": "934c754d4b25b9eb77c7f62b3c5af17a382b1a5a", "Url": "https://api.github.com/repos/step2012-chennai/forum", "Date": "2013-04-04T05:16:35Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!hasComponents) && (!hasPackages)) { throw new java.lang.IllegalStateException(\"At least one resource package name or component must be specified\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/748/buggy-version/vertx-jersey.src.main.java.com.englishtown.vertx.jersey.impl.DefaultVertxContainer.java", "BodyUseAPI": [], "Fixed commit": "a5cc27aca0e2bad67e222e539c8481c31306ccf0", "Url": "https://api.github.com/repos/ef-labs/vertx-jersey", "Date": "2016-01-15T22:18:03Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasComponents) { rc.registerClasses(components); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/748/buggy-version/vertx-jersey.src.main.java.com.englishtown.vertx.jersey.impl.DefaultVertxContainer.java", "BodyUseAPI": [], "Fixed commit": "a5cc27aca0e2bad67e222e539c8481c31306ccf0", "Url": "https://api.github.com/repos/ef-labs/vertx-jersey", "Date": "2016-01-15T22:18:03Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (mode == null) mode = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2251/buggy-version/src.other.Signout.java", "BodyUseAPI": [], "Fixed commit": "f8cb6b1168c2fbd93888e22bfb3cbc60ace2d486", "Url": "https://api.github.com/repos/PlanetNull/bithealth", "Date": "2017-07-03T13:58:28Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(MenuConstants.CMD_EXIT.equals(command))) controller.MainController.pw.println(\"Unknown command. Type \\\"help\\\" to see commands list.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3364/buggy-version/src.controller.MainController.java", "BodyUseAPI": [], "Fixed commit": "1aca0693f77389365a184bce0e0ea5da8473cb0c", "Url": "https://api.github.com/repos/Serwerty/RSSFeedParser", "Date": "2017-06-25T17:05:08Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isFinishing())) { android.app.AlertDialog ad = new android.app.AlertDialog.Builder(this).create(); ad.setCancelable(false); ad.setButton(\"OK\", new android.content.DialogInterface.OnClickListener() { public void onClick(android.content.DialogInterface dialog, int which) { dialog.dismiss(); } }); ad.setMessage(\"No response from video lookup services\"); ad.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7961/buggy-version/video-collector-mobile.src.edu.txstate.cs4398.vc.mobile.ScanActivity.java", "BodyUseAPI": [], "Fixed commit": "76c07deb6d0e03b25e81a6eb23b127d063318a6f", "Url": "https://api.github.com/repos/edthorne/video-collector", "Date": "2012-08-05T05:53:22Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isFinishing())) { android.app.AlertDialog ad = new android.app.AlertDialog.Builder(this).create(); ad.setCancelable(false); ad.setButton(\"OK\", new android.content.DialogInterface.OnClickListener() { public void onClick(android.content.DialogInterface dialog, int which) { dialog.dismiss(); } }); ad.setMessage(\"No results found\"); ad.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7961/buggy-version/video-collector-mobile.src.edu.txstate.cs4398.vc.mobile.ScanActivity.java", "BodyUseAPI": [], "Fixed commit": "76c07deb6d0e03b25e81a6eb23b127d063318a6f", "Url": "https://api.github.com/repos/edthorne/video-collector", "Date": "2012-08-05T05:53:22Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isFinishing())) { android.app.AlertDialog ad = new android.app.AlertDialog.Builder(this).create(); ad.setCancelable(false); ad.setButton(\"OK\", new android.content.DialogInterface.OnClickListener() { public void onClick(android.content.DialogInterface dialog, int which) { dialog.dismiss(); } }); ad.setMessage(response); ad.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7961/buggy-version/video-collector-mobile.src.edu.txstate.cs4398.vc.mobile.ScanActivity.java", "BodyUseAPI": [], "Fixed commit": "76c07deb6d0e03b25e81a6eb23b127d063318a6f", "Url": "https://api.github.com/repos/edthorne/video-collector", "Date": "2012-08-05T05:53:22Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isFinishing())) { android.app.AlertDialog ad = new android.app.AlertDialog.Builder(this).create(); ad.setCancelable(false); ad.setButton(\"OK\", new android.content.DialogInterface.OnClickListener() { public void onClick(android.content.DialogInterface dialog, int which) { dialog.dismiss(); } }); ad.setMessage(\"Error sending video to server\"); ad.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7961/buggy-version/video-collector-mobile.src.edu.txstate.cs4398.vc.mobile.ScanActivity.java", "BodyUseAPI": [], "Fixed commit": "76c07deb6d0e03b25e81a6eb23b127d063318a6f", "Url": "https://api.github.com/repos/edthorne/video-collector", "Date": "2012-08-05T05:53:22Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (thrown != null) throw thrown;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3697/buggy-version/src.main.java.com.coderskitchen.junitrules.em.EntityManagerStatement.java", "BodyUseAPI": [], "Fixed commit": "fb9654bc7ca6bc4aa14bb7005367508157d0b577", "Url": "https://api.github.com/repos/coders-kitchen/JUnitRules", "Date": "2013-05-11T17:23:03Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.eveningoutpost.dexdrip.Models.BgReading.last(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((bgReading == null) || ((com.eveningoutpost.dexdrip.Models.JoH.msSince(bgReading.timestamp)) >= (com.eveningoutpost.dexdrip.Services.CustomComplicationProviderService.STALE_MS))) { com.activeandroid.ActiveAndroid.clearCache(); bgReading = com.eveningoutpost.dexdrip.Models.BgReading.last(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2817/buggy-version/wear.src.main.java.com.eveningoutpost.dexdrip.Services.CustomComplicationProviderService.java", "BodyUseAPI": [], "Fixed commit": "47b980082609d11854d45aa5be4239cc5ea832fe", "Url": "https://api.github.com/repos/jstevensog/xDrip-plus", "Date": "2017-09-19T10:40:36Z"},
{"Line": "=>1329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (JavaCore.SPACE.equals(settings.get(DefaultCodeFormatterConstants.FORMATTER_TAB_CHAR))) this.tab_size = indentationSize;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6179/buggy-version/org.eclipse.jdt.core.formatter.org.eclipse.jdt.internal.formatter.DefaultCodeFormatterOptions.java", "BodyUseAPI": [], "Fixed commit": "3a54e1075910dfdcd0ae404611dd26506404e6e7", "Url": "https://api.github.com/repos/eclipse/eclipse.jdt.core", "Date": "2015-07-25T13:38:31Z"},
{"Line": "=>2101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(JavaCore.SPACE.equals(settings.get(DefaultCodeFormatterConstants.FORMATTER_TAB_CHAR)))) this.tab_size = tabSize;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6179/buggy-version/org.eclipse.jdt.core.formatter.org.eclipse.jdt.internal.formatter.DefaultCodeFormatterOptions.java", "BodyUseAPI": [], "Fixed commit": "3a54e1075910dfdcd0ae404611dd26506404e6e7", "Url": "https://api.github.com/repos/eclipse/eclipse.jdt.core", "Date": "2015-07-25T13:38:31Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmrs.module.muzimaforms.api.MuzimaFormService.findByUniqueId(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (muzimaForm != null) { return muzimaForm.getName(); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1191/buggy-version/api.src.main.java.org.openmrs.module.muzima.task.QueueDataProcessor.java", "BodyUseAPI": ["org.openmrs.module.muzimaforms.MuzimaForm.getName()"], "Fixed commit": "139af79e873610d8e696d5b060161bf161892276", "Url": "https://api.github.com/repos/sthaiya/openmrs-module-muzima", "Date": "2016-02-19T11:53:18Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (\"composerName\".equals(name)) { java.lang.Object ctrlnm = comp.getAttribute(name); if (ctrlnm instanceof java.lang.String) { java.lang.Object controller = comp.removeAttribute(\"_$composer$_\"); if ((controller != null) && ((comp.getAttribute(((java.lang.String) (ctrlnm)))) == null)) { comp.setAttribute(((java.lang.String) (ctrlnm)), controller); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6257/buggy-version/zk.src.org.zkoss.zk.ui.metainfo.AttributesInfo.java", "BodyUseAPI": ["org.zkoss.zk.ui.Component.getAttribute(java.lang.String)"], "Fixed commit": "07c81bc53e8733c1d5a56b58a830c00fd89f7fa6", "Url": "https://api.github.com/repos/VincentJian/zk", "Date": "2012-08-16T11:05:41Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (namePos == 0) { for (int i = 0; i < (rawAttrs.length); i++) { if ((rawAttrs[i].mName) == (doc.getStringBlock().getStringIndex(\"debuggable\"))) { namePos = i; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/9115/buggy-version/src.main.java.com.umeng.editor.ApplicationEditor.java", "BodyUseAPI": [], "Fixed commit": "c09cd14c612564598139249b61871063cde4bbce", "Url": "https://api.github.com/repos/lpcdma/axmleditor", "Date": "2017-10-26T09:57:45Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mNoFavsSearchLayout) != null) br.com.adley.myseriesproject.library.Utils.setLayoutInvisible(mNoFavsSearchLayout);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3437/buggy-version/app.src.main.java.br.com.adley.myseriesproject.activities.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "24e392406e862fec44e7432bf1e01d74f05c5540", "Url": "https://api.github.com/repos/adleywd/WhatsNextSeries", "Date": "2016-05-17T00:47:55Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ops.length) == 1) { return ops[0].compute(input, output); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/148/buggy-version/imglib2.ops.src.main.java.net.imglib2.ops.operation.Operations.java", "BodyUseAPI": ["ops[0].compute(B,B)"], "Fixed commit": "507cb3a2e393bf48114d5b95b65d3c88ab46fc76", "Url": "https://api.github.com/repos/imagej/imglib", "Date": "2012-11-19T16:55:43Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((existingDoors.size) < (doorRects.size)) { newDoors.add(doorRects.get(existingDoors.size)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8972/buggy-version/core.src.com.mygdx.game.entities.Player.java", "BodyUseAPI": ["com.badlogic.gdx.utils.Array<com.badlogic.gdx.math.Rectangle>.add(doorRects.get(existingDoors.size))", "com.badlogic.gdx.utils.Array<com.badlogic.gdx.math.Rectangle>.get(existingDoors.size)"], "Fixed commit": "607fb72a5a98edb9f1cfdfd506c6994aa47a5e12", "Url": "https://api.github.com/repos/QishengLi/game_gdx", "Date": "2017-03-26T18:50:25Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (submittedTime != null) { this.syncedDate = org.openlmis.core.utils.DateUtil.formatDate(submittedTime); }else { this.syncedDate = org.apache.commons.lang3.StringUtils.EMPTY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/693/buggy-version/app.src.main.java.org.openlmis.core.view.viewmodel.RnRFormViewModel.java", "BodyUseAPI": [], "Fixed commit": "ad859e3a2ef55af0901c68a52a19f19092a5b29c", "Url": "https://api.github.com/repos/SIGLUS/lmis-moz-mobile", "Date": "2016-01-15T02:30:03Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (session.isHaveBatch()) { for (int i = 0; i < (session.getFields().size()); i++) { fieldValues.add((i + 1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7340/buggy-version/src.client.component.ListModel.java", "BodyUseAPI": [], "Fixed commit": "bc6b6bcc35af7e74803ba20d50454803b3e70099", "Url": "https://api.github.com/repos/zaphinath/record-indexer", "Date": "2013-08-06T15:46:08Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (session.isHaveBatch()) { for (int i = 0; i < (session.getFields().size()); i++) { fieldValues.add((i + 1)); } }else { fieldValues.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7340/buggy-version/src.client.component.ListModel.java", "BodyUseAPI": ["session.getFields().size()", "client.Session.getFields()"], "Fixed commit": "bc6b6bcc35af7e74803ba20d50454803b3e70099", "Url": "https://api.github.com/repos/zaphinath/record-indexer", "Date": "2013-08-06T15:46:08Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (SapphireTsp.CoreTsp.cellcontroller) { if (!(com.TSPComListener.startButton)) { java.lang.String msg = \"TSP is waiting for STARTTEST from OTA in CC MODE, please check OTA status\\n\" + \"If failed OTA MMS/PPID validation, please check Test Program and LoadBoard, exit TSP and reload correct Test Program\"; SapphireTsp.CoreTsp.out(msg); SapphireTsp.TSPIOTool io = SapphireTsp.TSPIOTool.instance(); io.sendWarningMessage(msg); return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5630/buggy-version/2.1.1.2.CPGTSP.src.com.TSPComListener.java", "BodyUseAPI": [], "Fixed commit": "a6862cfcb9c1ff54cb7ecdc31250ae67980e8ba1", "Url": "https://api.github.com/repos/guanghaofan/MyTSP", "Date": "2016-10-14T06:54:47Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (uid != null) { tk.talcharnes.unborify.Utilities.FirebaseConstants.getRef().child(FirebaseConstants.USERS).child(uid).child(FirebaseConstants.USERNAME).addListenerForSingleValueEvent(new com.google.firebase.database.ValueEventListener() { @java.lang.Override public void onDataChange(com.google.firebase.database.DataSnapshot dataSnapshot) { if ((dataSnapshot.getValue()) != null) { java.lang.String userName = dataSnapshot.getValue().toString(); usernameTextView.setText(userName); if (mCommenterID.equals(photoUploader)) { usernameTextView.setTextColor(Color.BLUE); } } } @java.lang.Override public void onCancelled(com.google.firebase.database.DatabaseError databaseError) { usernameTextView.setText(R.string.anonymous_user); } }); }else { usernameTextView.setText(R.string.anonymous_user); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2622/buggy-version/app.src.main.java.tk.talcharnes.unborify.CommentsData.FirebaseCommentViewHolder.java", "BodyUseAPI": ["tk.talcharnes.unborify.Utilities.FirebaseConstants.getRef().child(FirebaseConstants.USERS).child(uid).child(FirebaseConstants.USERNAME)", "tk.talcharnes.unborify.Utilities.FirebaseConstants.getRef().child(FirebaseConstants.USERS).child(uid).child(FirebaseConstants.USERNAME).addListenerForSingleValueEvent(com.google.firebase.database.ValueEventListener)", "tk.talcharnes.unborify.Utilities.FirebaseConstants.getRef().child(FirebaseConstants.USERS).child(java.lang.String)"], "Fixed commit": "c8fd053df8f38bb84b5c37b2091e0784d9e09a32", "Url": "https://api.github.com/repos/marzinx3/Fitting-Room", "Date": "2017-09-26T17:44:16Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mCommenterID) != null) && ((mCurrentUser) != null)) { if ((!(mCommenterID.isEmpty())) && (!(mCurrentUser.isEmpty()))) { mOriginalCommenter = mCommenterID.equals(currentUser); } }else { mOriginalCommenter = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2622/buggy-version/app.src.main.java.tk.talcharnes.unborify.CommentsData.FirebaseCommentViewHolder.java", "BodyUseAPI": [], "Fixed commit": "c8fd053df8f38bb84b5c37b2091e0784d9e09a32", "Url": "https://api.github.com/repos/marzinx3/Fitting-Room", "Date": "2017-09-26T17:44:16Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasNext()) { return parts[((i)++)]; }else { throw new java.util.NoSuchElementException(\"Sum's iterator does not have next!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4266/buggy-version/hadoop-mapreduce-project.hadoop-mapreduce-examples.src.main.java.org.apache.hadoop.examples.pi.math.Bellard.java", "BodyUseAPI": [], "Fixed commit": "d3d95b4a6886c1aaa270b4f67c19a89ad74350ab", "Url": "https://api.github.com/repos/apache/hadoop", "Date": "2014-12-09T18:48:35Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mp.isLooping())) { if ((nf) != null) { nf.closeNotification(); nf = new group10.tcss450.uw.edu.cantusfirmus.audio_player.notification(this); } mp.stop(); mp.reset(); playButton.setImageResource(android.R.drawable.ic_media_play); handler.removeCallbacks(updatePositionRunnable); isMusicPlaying = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1969/buggy-version/app.src.main.java.group10.tcss450.uw.edu.cantusfirmus.audio_player.java", "BodyUseAPI": ["android.media.MediaPlayer.stop()", "android.media.MediaPlayer.reset()"], "Fixed commit": "4145f58ed02aab3f5d6b0e227b01e98f0d314689", "Url": "https://api.github.com/repos/jabojohnigan/Ca-Fi", "Date": "2017-03-09T19:11:01Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(method.getReturnType().equals(java.lang.Void.TYPE))) { returnType = method.getReturnType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6915/buggy-version/jcoon.src.main.java.com.art4ul.jcoon.bean.RestClientInterfaceInvocationHandler.java", "BodyUseAPI": ["java.lang.reflect.Method.getReturnType()"], "Fixed commit": "594267791fc849ff84e8b7f019ab7f6f1b73a5f4", "Url": "https://api.github.com/repos/art4ul/jcoon", "Date": "2014-11-11T20:48:44Z"},
{"Line": "=>452", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Bundle.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (imageFilePath != null) { this.imageFile = new java.io.File(imageFilePath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3963/buggy-version/app.src.main.java.com.gcw.sapienza.places.ShareActivity.java", "BodyUseAPI": [], "Fixed commit": "da9a39866a29f4d1708144e8603a139ca66a6677", "Url": "https://api.github.com/repos/Natio/Places", "Date": "2015-02-17T10:23:59Z"},
{"Line": "=>443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.imageFile) != null) { outState.putString(com.gcw.sapienza.places.ShareActivity.BUNDLED_IMG_PATH, this.imageFile.getAbsolutePath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3963/buggy-version/app.src.main.java.com.gcw.sapienza.places.ShareActivity.java", "BodyUseAPI": [], "Fixed commit": "da9a39866a29f4d1708144e8603a139ca66a6677", "Url": "https://api.github.com/repos/Natio/Places", "Date": "2015-02-17T10:23:59Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.util.List<ixa.kaflib.KAFDocument.LinguisticProcessor>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (layerLPs == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3687/buggy-version/src.main.java.ixa.kaflib.KAFDocument.java", "BodyUseAPI": [], "Fixed commit": "01fe78900ee5dbde5060e46e56f15828b3a1f7e3", "Url": "https://api.github.com/repos/ixa-ehu/kaflib", "Date": "2013-06-21T13:31:33Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(info.nextState.playerName.equals(info.nextState.playerMorph))) { Morph.proxy.tickHandlerServer.playerMorphInfo.put(info.playerName, info); morph.common.morph.MorphHandler.addOrGetMorphState(list, info.nextState); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/388/buggy-version/morph.common.core.ConnectionHandler.java", "BodyUseAPI": ["morph.common.morph.MorphHandler.addOrGetMorphState(java.util.ArrayList,info.nextState)", "Morph.proxy.tickHandlerServer.playerMorphInfo.put(info.playerName,morph.common.morph.MorphInfo)"], "Fixed commit": "69646d2623fa546649db8ff33b750239f927e43d", "Url": "https://api.github.com/repos/iChun/Morph", "Date": "2013-08-09T16:18:24Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.activemq.command.Message.getOriginalDestination()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (origDest != null) { org.apache.activemq.util.ByteSequence origDestBytes = marshaller.marshal(origDest); origDestBytes.compact(); coreMessage.putBytesProperty(org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.AMQ_MSG_ORIG_DESTINATION, origDestBytes.data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/157/buggy-version/artemis-protocols.artemis-openwire-protocol.src.main.java.org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.java", "BodyUseAPI": ["org.apache.activemq.wireformat.WireFormat.marshal(org.apache.activemq.command.ActiveMQDestination)"], "Fixed commit": "5bd77613ba44a69e58e6afa3a522d42333bc95a4", "Url": "https://api.github.com/repos/apache/activemq-artemis", "Date": "2016-02-18T12:52:32Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((patient.getRenalUnit()) != null) { newPatient.setUnitcode(patient.getRenalUnit().getUnitCode()); }else { newPatient.setUnitcode(patient.getUnitcode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1078/buggy-version/patientview-parent.radar.src.main.java.org.patientview.radar.service.impl.UserManagerImpl.java", "BodyUseAPI": ["org.patientview.model.Patient.getUnitcode()", "patient.getRenalUnit().getUnitCode()", "org.patientview.model.Patient.setUnitcode(patient.getUnitcode())", "org.patientview.model.Patient.getRenalUnit()", "org.patientview.model.Patient.setUnitcode(patient.getRenalUnit().getUnitCode())"], "Fixed commit": "86bc60c6beca199fbc89fb45e500c7cf61a0aaf4", "Url": "https://api.github.com/repos/robworth/patientview", "Date": "2013-12-10T15:14:09Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class.getModifiers()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(j.util.Modifiers.isPublic(mods))) throw new java.lang.Exception(((\"class \" + (cls.getName())) + \" must be public\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5218/buggy-version/src.j.util.OptionParser.java", "BodyUseAPI": [], "Fixed commit": "bbd9f82ee26f0c2b7d559c193d50be4d40201efd", "Url": "https://api.github.com/repos/lucastan/java-utils", "Date": "2012-12-23T06:14:48Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nivel) != 1) { reproducirMusica(efectoGanar); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2800/buggy-version/core.src.mx.itesm.donchito.FlevorioSays.java", "BodyUseAPI": [], "Fixed commit": "1ff07f14da08597addad75c258cd55622238cd98", "Url": "https://api.github.com/repos/SegFaultACM/DonChito", "Date": "2016-04-28T18:30:33Z"},
{"Line": "=>925", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (beforeLocks) { if (!(state.validate())) { if (errors == null) { errors = new java.util.ArrayList<com.psddev.dari.db.State>(); } errors.add(state); } }else { state.clearAllErrors(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1356/buggy-version/db.src.main.java.com.psddev.dari.db.AbstractDatabase.java", "BodyUseAPI": [], "Fixed commit": "26641ed40539ac3d318f4ebe16e10f57ae645f04", "Url": "https://api.github.com/repos/perfectsense/dari", "Date": "2013-04-30T21:24:03Z"},
{"Line": "=>867", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.t_oster.visicut.VisicutModel.loadGraphicFile(this.selectedPart.getSourceFile(),java.util.LinkedList<java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((p instanceof com.t_oster.visicut.model.graphicelements.psvgsupport.ParametricPlfPart) && ((this.selectedPart) instanceof com.t_oster.visicut.model.graphicelements.psvgsupport.ParametricPlfPart)) { ((com.t_oster.visicut.model.graphicelements.psvgsupport.ParametricPlfPart) (this.selectedPart)).setParameters(((com.t_oster.visicut.model.graphicelements.psvgsupport.ParametricPlfPart) (p)).getParameters()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2638/buggy-version/src.com.t_oster.visicut.VisicutModel.java", "BodyUseAPI": [], "Fixed commit": "d2eaea4c266a35acca7514e91b770076c5933fcf", "Url": "https://api.github.com/repos/t-oster/VisiCut", "Date": "2013-05-18T06:12:51Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((newPoint) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5714/buggy-version/app.src.main.java.com.solutions.law.universityrouteplanner.Model.Model.java", "BodyUseAPI": [], "Fixed commit": "4894f3d35ea5713c06279499e86cfaf7e97c708a", "Url": "https://api.github.com/repos/greglaw95/UniversityRoutePlanner", "Date": "2016-02-25T10:33:05Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((com.phantom.onetapvideodownload.IpcService.notificationCancelRunnables.size()) > id) && ((com.phantom.onetapvideodownload.IpcService.notificationCancelRunnables.get(id)) != null)) { mHandler.removeCallbacks(com.phantom.onetapvideodownload.IpcService.notificationCancelRunnables.get(id)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4013/buggy-version/app.src.main.java.com.phantom.onetapvideodownload.IpcService.java", "BodyUseAPI": ["java.util.List<java.lang.Runnable>.get(int)", "android.os.Handler.removeCallbacks(java.lang.Runnable)"], "Fixed commit": "1a17f57590c90312047cd51f913ee4f7667320a5", "Url": "https://api.github.com/repos/Ashish-Bansal/OneTapVideoDownload", "Date": "2016-04-14T08:18:10Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((((x < 0) || (x >= (dimX))) || (y < 0)) || (y >= (dimY))) || (z < 0)) || (z >= (dimZ))) { return new volume.VoxelGradient(0, 0, 0); }else { return data[(x + ((dimX) * (y + ((dimY) * z))))]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3144/buggy-version/src.volume.GradientVolume.java", "BodyUseAPI": [], "Fixed commit": "9fcef35cf4cc7f6f74cd39a5591d5482fca2e9aa", "Url": "https://api.github.com/repos/lorenzoengelen/VolVis", "Date": "2016-12-11T19:18:37Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == headers) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/899/buggy-version/app.src.main.java.com.github.yeriomin.yalpstore.DebugHttpClientAdapter.java", "BodyUseAPI": [], "Fixed commit": "23adb99fd8b7c0210d32263f44a2c7bd2473519e", "Url": "https://api.github.com/repos/undeadfox/YalpStore", "Date": "2017-11-04T00:58:49Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((background) != null) { spriteRenderer.draw(background, 0.0F, 0.0F, bgWidth, bgHeight); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/889/buggy-version/core.src.com.sweatyreptile.losergame.screens.LevelScreen.java", "BodyUseAPI": [], "Fixed commit": "b95984394a36bcf810e7d93ef83b2630f1453718", "Url": "https://api.github.com/repos/SweatyReptile/loser", "Date": "2014-07-04T05:16:28Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((background) != null) { renderer.draw(background, 0, originY, viewportWidth, viewportHeight); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/889/buggy-version/core.src.com.sweatyreptile.losergame.LevelChunk.java", "BodyUseAPI": [], "Fixed commit": "b95984394a36bcf810e7d93ef83b2630f1453718", "Url": "https://api.github.com/repos/SweatyReptile/loser", "Date": "2014-07-04T05:16:28Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((actionIds.size()) > (java.lang.Long.SIZE)) || (((actionIds.size()) == (java.lang.Long.SIZE)) && (!(actionIds.contains(ActionKeys.VIEW))))) { throw new com.liferay.portal.kernel.exception.SystemException((\"There are too many actions for resource \" + name)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/547/buggy-version/portal-impl.src.com.liferay.portal.service.impl.ResourceActionLocalServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "83820d26353e8dd3f2428dbef46d244b691c4c35", "Url": "https://api.github.com/repos/mbowerman/liferay-portal", "Date": "2016-06-21T00:13:21Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lexer.isBlankInput()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/9244/buggy-version/src.main.java.com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.java", "BodyUseAPI": [], "Fixed commit": "66adf8a615f585898da0159d784250a9a8b59383", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-04-11T17:13:09Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { java.lang.Class<?> fieldClass = fieldInfo.fieldClass; if ((((((((fieldClass == (byte.class)) || (fieldClass == (short.class))) || (fieldClass == (int.class))) || (fieldClass == (long.class))) || (fieldClass == (float.class))) || (fieldClass == (double.class))) || (fieldClass == (boolean.class))) || (fieldClass == (char.class))) { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/9244/buggy-version/src.main.java.com.alibaba.fastjson.parser.deserializer.FieldDeserializer.java", "BodyUseAPI": [], "Fixed commit": "66adf8a615f585898da0159d784250a9a8b59383", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-04-11T17:13:09Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ans.get(\"Profit\")) > 60000000) { java.lang.System.out.println(\"too high\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8384/buggy-version/src.main.java.tactics.Plan.java", "BodyUseAPI": [], "Fixed commit": "b7bbbb70ec7d315de85f6b933f1dc01d8e288911", "Url": "https://api.github.com/repos/ZackC/AdaptiveSystemsGeneticProgrammingPlanner", "Date": "2017-09-20T19:38:41Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((player.boundingBox.minY) - blockYmax) > 0.0) { player.posY -= (player.boundingBox.minY) - blockYmax; player.boundingBox.offset(0, (blockYmax - (player.boundingBox.minY)), 0); }else if (b.canCollideCheck(player.worldObj.getBlockMetadata(xx, playerFeetOnY, zz), false)) { net.minecraft.util.AxisAlignedBB collisionBox = b.getCollisionBoundingBoxFromPool(player.worldObj, xx, playerFeetOnY, zz); if ((collisionBox != null) && (collisionBox.intersectsWith(player.boundingBox))) { player.posY -= (player.boundingBox.minY) - blockYmax; player.boundingBox.offset(0, (blockYmax - (player.boundingBox.minY)), 0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2921/buggy-version/src.main.java.micdoodle8.mods.galacticraft.core.entities.player.FreefallHandler.java", "BodyUseAPI": ["net.minecraft.block.Block.getCollisionBoundingBoxFromPool(player.worldObj,int,int,int)", "net.minecraft.block.Block.canCollideCheck(player.worldObj.getBlockMetadata(xx, playerFeetOnY, zz),boolean)", "net.minecraft.util.AxisAlignedBB.intersectsWith(player.boundingBox)", "player.boundingBox.offset(int,(blockYmax - (player.boundingBox.minY)),int)", "player.boundingBox.offset(int,(blockYmax - (player.boundingBox.minY)),int)", "player.worldObj.getBlockMetadata(int,int,int)"], "Fixed commit": "2eb466e7d7b7379f91190fef2adb45efd78527b1", "Url": "https://api.github.com/repos/katzenpapst/Galacticraft", "Date": "2016-02-04T02:04:48Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (micdoodle8.mods.galacticraft.core.entities.player.FreefallHandler.testFreefall(this)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2921/buggy-version/src.main.java.micdoodle8.mods.galacticraft.core.entities.player.GCEntityClientPlayerMP.java", "BodyUseAPI": [], "Fixed commit": "2eb466e7d7b7379f91190fef2adb45efd78527b1", "Url": "https://api.github.com/repos/katzenpapst/Galacticraft", "Date": "2016-02-04T02:04:48Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((order.getSide()) == (org.marketcetera.trade.Side.SellShort)) ibOrder.m_action = \"SSHORT\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/219/buggy-version/src.com.fhx.service.ib.order.IBOrderSenderHelper.java", "BodyUseAPI": [], "Fixed commit": "6c284a53b8019eea402b89189d0ee8835b948e1e", "Url": "https://api.github.com/repos/fhxalgo/fhx_java", "Date": "2012-06-26T02:44:05Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCameraID) != null) { mCameraManager.setTorchMode(mCameraID, enable); return true; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3634/buggy-version/app.src.main.java.com.secuso.torchlight2.camera.CameraMarshmallow.java", "BodyUseAPI": [], "Fixed commit": "12e28c462f1f114499d6a615020fccdaa84ecd14", "Url": "https://api.github.com/repos/SecUSo/privacy-friendly-torchlight", "Date": "2017-09-25T08:36:39Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (direction == (br.ufrn.musica.calendala.mandala.Ring.Direction.CW)) { for (br.ufrn.musica.calendala.mandala.Slice s : slices) { start = s.getStart(); s.setStart(((start + 1) % (subdivisions))); } java.util.Collections.rotate(slices, 1); br.ufrn.musica.calendala.mandala.Mandala.getInstance().changeSelectionStart(1); }else { for (br.ufrn.musica.calendala.mandala.Slice s : slices) { start = s.getStart(); if ((start - 1) < 0) { s.setStart(((start - 1) + (subdivisions))); }else { s.setStart((start - 1)); } } java.util.Collections.rotate(slices, (-1)); br.ufrn.musica.calendala.mandala.Mandala.getInstance().changeSelectionStart((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5326/buggy-version/src.br.ufrn.musica.calendala.mandala.Ring.java", "BodyUseAPI": [], "Fixed commit": "a45dde39231a05d288c6d27d3c8a679afe3cb56a", "Url": "https://api.github.com/repos/CFelipe/Calendala", "Date": "2013-12-28T16:23:47Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((metadata.containsTagId(com.easyinnova.tiff.model.TiffTags.getTagId(\"ImageWidth\"))) && (metadata.containsTagId(com.easyinnova.tiff.model.TiffTags.getTagId(\"ImageLength\")))) if (((metadata.get(com.easyinnova.tiff.model.TiffTags.getTagId(\"ImageWidth\")).getCardinality()) > 0) && ((metadata.get(com.easyinnova.tiff.model.TiffTags.getTagId(\"ImageLength\")).getCardinality()) > 0)) if ((tileWidth > 0) && (tileLength > 0)) tilesPerImage = ((((metadata.get(com.easyinnova.tiff.model.TiffTags.getTagId(\"ImageWidth\")).getFirstNumericValue()) + tileWidth) - 1) / tileWidth) * ((((metadata.get(com.easyinnova.tiff.model.TiffTags.getTagId(\"ImageLength\")).getFirstNumericValue()) + tileLength) - 1) / tileLength);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7489/buggy-version/src.main.java.com.easyinnova.implementation_checker.TiffImplementationChecker.java", "BodyUseAPI": ["com.easyinnova.tiff.model.IfdTags.get(com.easyinnova.tiff.model.TiffTags.getTagId(\"ImageLength\"))", "metadata.get(com.easyinnova.tiff.model.TiffTags.getTagId(\"ImageLength\")).getFirstNumericValue()", "metadata.get(com.easyinnova.tiff.model.TiffTags.getTagId(\"ImageLength\")).getCardinality()", "com.easyinnova.tiff.model.IfdTags.get(com.easyinnova.tiff.model.TiffTags.getTagId(\"ImageWidth\"))", "com.easyinnova.tiff.model.IfdTags.get(com.easyinnova.tiff.model.TiffTags.getTagId(\"ImageWidth\"))", "metadata.get(com.easyinnova.tiff.model.TiffTags.getTagId(\"ImageWidth\")).getFirstNumericValue()", "metadata.get(com.easyinnova.tiff.model.TiffTags.getTagId(\"ImageWidth\")).getCardinality()", "com.easyinnova.tiff.model.IfdTags.get(com.easyinnova.tiff.model.TiffTags.getTagId(\"ImageLength\"))"], "Fixed commit": "350b5e7d66b9ed3fbcefae624df6f5b52bc77407", "Url": "https://api.github.com/repos/EasyinnovaSL/TIFF-Implementation-Checker", "Date": "2017-07-21T08:31:28Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getSender()) instanceof org.bukkit.command.ConsoleCommandSender) { player = new com.laytonsmith.abstraction.bukkit.BukkitMCConsoleCommandSender(((org.bukkit.command.ConsoleCommandSender) (event.getSender()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1180/buggy-version/src.main.java.com.laytonsmith.commandhelper.CommandHelperServerListener.java", "BodyUseAPI": ["org.bukkit.event.server.ServerCommandEvent.getSender()"], "Fixed commit": "d46db51a957333569985512bfdbcf8a5f2624803", "Url": "https://api.github.com/repos/sk89q/commandhelper", "Date": "2012-04-26T05:18:31Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.co.shadeddimensions.ep3.tileentity.frame.TilePortalController.getBlockTileEntity(c.posX,c.posY,c.posZ)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tile instanceof uk.co.shadeddimensions.ep3.tileentity.frame.TileDiallingDevice) { blockManager.setDialDevice(c); }else if (tile instanceof uk.co.shadeddimensions.ep3.tileentity.frame.TileModuleManipulator) { blockManager.setModuleManipulator(c); }else if (tile instanceof uk.co.shadeddimensions.ep3.tileentity.frame.TileBiometricIdentifier) { blockManager.setBiometricIdentifier(c); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/781/buggy-version/common.uk.co.shadeddimensions.ep3.tileentity.frame.TilePortalController.java", "BodyUseAPI": [], "Fixed commit": "501e3272805afaea9e8ef498ad6b261114f43162", "Url": "https://api.github.com/repos/ShadedDimension/enhanced-portals", "Date": "2014-01-18T18:26:25Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((user.photo) != null) && (!(user.photo.isEmpty()))) { image.setImageBitmap(id.prihantoro.sayurongo.EditProfileActivity.decodeBase64(user.photo)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5560/buggy-version/app.src.main.java.id.prihantoro.sayurongo.EditProfileActivity.java", "BodyUseAPI": ["android.widget.ImageView.setImageBitmap(android.graphics.Bitmap)", "id.prihantoro.sayurongo.EditProfileActivity.decodeBase64(user.photo)"], "Fixed commit": "a52a1c1e005d3e754d90dd5c119d45b97c89727f", "Url": "https://api.github.com/repos/wahyuprihantoro/sayurongo", "Date": "2016-10-18T07:31:49Z"},
{"Line": "=>460", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.photon.phresco.api.ConfigManager.getEnvironments()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.apache.commons.collections.CollectionUtils.isNotEmpty(environments)) { environments.add(env); configManager.addEnvironments(environments); }else { configManager.addEnvironments(java.util.Arrays.asList(env)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7997/buggy-version/phresco-framework-web.src.main.java.com.photon.phresco.framework.rest.api.ConfigurationService.java", "BodyUseAPI": ["com.photon.phresco.api.ConfigManager.addEnvironments(java.util.List<com.photon.phresco.configuration.Environment>)", "java.util.List<com.photon.phresco.configuration.Environment>.add(com.photon.phresco.configuration.Environment)"], "Fixed commit": "ae98e1eb53343d7fa8d6b8edde481b296327b3b5", "Url": "https://api.github.com/repos/photon-infotech/framework", "Date": "2013-09-26T10:54:43Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (value == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/548/buggy-version/src.main.java.org.influxdb.dto.Point.java", "BodyUseAPI": [], "Fixed commit": "adab333b5850386b424af2966969498970a475d9", "Url": "https://api.github.com/repos/andrewdodd/influxdb-java", "Date": "2015-12-05T20:24:28Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (label.getModel().isMarked()) { label.setIconMarked(); }else { label.setIconUnselected(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5016/buggy-version/GroupProject.src.sixesWildControllers.TileLabelController.java", "BodyUseAPI": ["sixesWildBoundary.TileLabel.setIconMarked()", "sixesWildBoundary.TileLabel.setIconUnselected()"], "Fixed commit": "0f593588736cd4d6b467575a34c38ad5a05e439e", "Url": "https://api.github.com/repos/jalomi/SiarnaqGroupProject", "Date": "2015-05-03T18:12:04Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (selectedLabels.get(i).getModel().isMarked()) { selectedLabels.get(i).setIconMarked(); }else { selectedLabels.get(i).setIconUnselected(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5016/buggy-version/GroupProject.src.sixesWildControllers.TileLabelController.java", "BodyUseAPI": ["selectedLabels.get(i).setIconMarked()", "java.util.ArrayList<sixesWildBoundary.TileLabel>.get(int)", "selectedLabels.get(i).setIconUnselected()", "java.util.ArrayList<sixesWildBoundary.TileLabel>.get(int)"], "Fixed commit": "0f593588736cd4d6b467575a34c38ad5a05e439e", "Url": "https://api.github.com/repos/jalomi/SiarnaqGroupProject", "Date": "2015-05-03T18:12:04Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (label.getModel().isMarked()) { label.setIconMarked(); }else { label.setIconUnselected(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5016/buggy-version/GroupProject.src.sixesWildControllers.TileLabelController.java", "BodyUseAPI": ["sixesWildBoundary.TileLabel.setIconMarked()", "sixesWildBoundary.TileLabel.setIconUnselected()"], "Fixed commit": "0f593588736cd4d6b467575a34c38ad5a05e439e", "Url": "https://api.github.com/repos/jalomi/SiarnaqGroupProject", "Date": "2015-05-03T18:12:04Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (label.getModel().isMarked()) { label.setIconMarked(); }else { label.setIconUnselected(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5016/buggy-version/GroupProject.src.sixesWildControllers.TileLabelController.java", "BodyUseAPI": ["sixesWildBoundary.TileLabel.setIconUnselected()", "sixesWildBoundary.TileLabel.setIconMarked()"], "Fixed commit": "0f593588736cd4d6b467575a34c38ad5a05e439e", "Url": "https://api.github.com/repos/jalomi/SiarnaqGroupProject", "Date": "2015-05-03T18:12:04Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.wso2.carbon.gateway.httploadbalancer.algorithm.simple.StrictClientIPHashing.log.isDebugEnabled()) { org.wso2.carbon.gateway.httploadbalancer.algorithm.simple.StrictClientIPHashing.log.debug((\"Host and port : \" + hostAndPort)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1300/buggy-version/carbon-gw-lb.components.org.wso2.carbon.gateway.httploadbalancer.src.main.java.org.wso2.carbon.gateway.httploadbalancer.algorithm.simple.StrictClientIPHashing.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String)"], "Fixed commit": "3222a5010353640665399eede58d7234159c7414", "Url": "https://api.github.com/repos/Venkat2811/product-http-load-balancer", "Date": "2016-06-22T07:58:46Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((event.getX()) + ((slidingButton.getWidth()) / 2)) > (getWidth())) && (((slidingButton.getX()) + ((slidingButton.getWidth()) / 2)) < (getWidth()))) { slidingButton.setX(((getWidth()) - (slidingButton.getWidth()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6308/buggy-version/swipe-button.src.main.java.com.ebanx.swipebtn.SwipeButton.java", "BodyUseAPI": ["android.widget.ImageView.setX(((getWidth()) - (slidingButton.getWidth())))", "android.widget.ImageView.getWidth()"], "Fixed commit": "fab4dc47ebaf2591989f8a66ab2ae07e12cdace0", "Url": "https://api.github.com/repos/ebanx/swipe-button", "Date": "2017-06-06T15:04:11Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((event.getX()) < ((slidingButton.getWidth()) / 2)) && ((slidingButton.getX()) > 0)) { slidingButton.setX(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6308/buggy-version/swipe-button.src.main.java.com.ebanx.swipebtn.SwipeButton.java", "BodyUseAPI": ["android.widget.ImageView.setX(int)"], "Fixed commit": "fab4dc47ebaf2591989f8a66ab2ae07e12cdace0", "Url": "https://api.github.com/repos/ebanx/swipe-button", "Date": "2017-06-06T15:04:11Z"},
{"Line": "=>554", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.ac.imperial.lsds.seep.manet.Query.getLogicalNodeId(getOperator().getOperatorId())", "getOperator().getOpContext().getMeanderQuery()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(meanderQuery.isSink(logicalId))) { int downLogicalId = meanderQuery.getNextHopLogicalNodeId(logicalId); if ((meanderQuery.isSink(downLogicalId)) && ((meanderQuery.getPhysicalNodeIds(downLogicalId).size()) > 1)) { owner.writeDownstreamFailureCtrls(getOperator().getOpContext().getListOfDownstreamIndexes(), nodeFctrl); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3282/buggy-version/seep-system.src.main.java.uk.ac.imperial.lsds.seep.processingunit.StatelessProcessingUnit.java", "BodyUseAPI": ["uk.ac.imperial.lsds.seep.manet.Query.isSink(int)", "meanderQuery.getPhysicalNodeIds(downLogicalId).size()", "uk.ac.imperial.lsds.seep.manet.Query.getNextHopLogicalNodeId(int)", "uk.ac.imperial.lsds.seep.manet.Query.getPhysicalNodeIds(int)"], "Fixed commit": "1ffe375610854131bdae90ecb1511d21f9bcfaf6", "Url": "https://api.github.com/repos/lsds/SEEP", "Date": "2015-07-16T15:48:00Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.gameModel.isGame()) { this.updatePlayers(this); this.gameModel.update(this); if (!(this.gameModel.isGame())) { this.phase = App.Phase.END; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/147/buggy-version/src.App.java", "BodyUseAPI": ["GameModel.isGame()", "GameModel.update(App)"], "Fixed commit": "5b6e47c28cd1e9e99aa0bc565c51ed2bf3c78014", "Url": "https://api.github.com/repos/pyryk/3dpong", "Date": "2012-03-26T11:52:33Z"},
{"Line": "=>424", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((OperationFailedException.ILLEGAL_ARGUMENT) != (exc.getErrorCode())) { bridgeSelector.updateBridgeOperationalStatus(jvb, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/805/buggy-version/src.main.java.org.jitsi.jicofo.ChannelAllocator.java", "BodyUseAPI": [], "Fixed commit": "fdac8f33110cf198e276c43397aab836f0601a64", "Url": "https://api.github.com/repos/jitsi/jicofo", "Date": "2016-09-02T19:38:31Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jitsi.impl.protocol.xmpp.colibri.ColibriConferenceImpl.sendAllocRequest(java.lang.String,org.jitsi.impl.protocol.xmpp.colibri.ColibriConferenceIQ)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((response.getError()) != null) { org.jitsi.impl.protocol.xmpp.colibri.XMPPError error = response.getError(); if (XMPPError.Condition.bad_request.toString().equals(error.getCondition())) { throw new org.jitsi.impl.protocol.xmpp.colibri.OperationFailedException((\"Failed to allocate colibri channels - bad request: \" + (response.toXML())), OperationFailedException.ILLEGAL_ARGUMENT); }else { throw new org.jitsi.impl.protocol.xmpp.colibri.OperationFailedException((\"Failed to allocate colibri channels: \" + (response.toXML())), OperationFailedException.GENERAL_ERROR); } }else if (!(response instanceof org.jitsi.impl.protocol.xmpp.colibri.ColibriConferenceIQ)) { throw new org.jitsi.impl.protocol.xmpp.colibri.OperationFailedException((\"Failed to allocate colibri channels: response is not a\" + \" colibri conference\"), OperationFailedException.GENERAL_ERROR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/805/buggy-version/src.main.java.org.jitsi.impl.protocol.xmpp.colibri.ColibriConferenceImpl.java", "BodyUseAPI": ["org.jitsi.impl.protocol.xmpp.colibri.Packet.toXML()", "org.jitsi.impl.protocol.xmpp.colibri.Packet.getError()", "org.jitsi.impl.protocol.xmpp.colibri.Packet.toXML()"], "Fixed commit": "fdac8f33110cf198e276c43397aab836f0601a64", "Url": "https://api.github.com/repos/jitsi/jicofo", "Date": "2016-09-02T19:38:31Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.wicket.markup.html.form.TextField<java.lang.String>.getModelObject()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((dishCount == null) || (dishCount.equals(\"\"))) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3525/buggy-version/src.main.java.ar.edu.itba.it.paw.web.restaurant.DishPanel.java", "BodyUseAPI": [], "Fixed commit": "7c32b010c623c3d2600980d5e39406eaad9488b9", "Url": "https://api.github.com/repos/gnardini/paw-itba", "Date": "2016-07-07T04:51:34Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((edu.nd.darts.cimon.PhysicianReceiver.runningMetrics) != null) { i.putStringArrayListExtra(edu.nd.darts.cimon.PhysicianReceiver.EXTRA_NAME, new java.util.ArrayList(edu.nd.darts.cimon.PhysicianReceiver.runningMetrics)); context.startService(i); if (DebugLog.DEBUG) android.util.Log.d(edu.nd.darts.cimon.PhysicianReceiver.TAG, \"+ start PhysicianService +\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7089/buggy-version/app.src.main.java.edu.nd.darts.cimon.PhysicianReceiver.java", "BodyUseAPI": [], "Fixed commit": "916590e4f4bca1de4bdd9315abc18bfab8d76289", "Url": "https://api.github.com/repos/ningPATH/NDroidAdmin", "Date": "2015-03-31T00:29:20Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((searchViews) == 0) { (searchViews)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6659/buggy-version/app.src.main.java.com.seg2.kcl2d.NavigationDrawerFragment.java", "BodyUseAPI": [], "Fixed commit": "223df827bdeca6365fa1b11dfb16e0be95d3b2d6", "Url": "https://api.github.com/repos/Gilbert09/kcl2d", "Date": "2014-12-03T19:33:51Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!alreadyCounted) { sirenAnalyzerResult.incrementUniqueCount(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1505/buggy-version/java-sorted.src.main.java.fr.imj.siren.SirenSortedAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "6cca327f09bf8d6ee1eed95b006b49c3b94a0a18", "Url": "https://api.github.com/repos/alarive/siren", "Date": "2015-10-30T07:17:45Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(lastEquip.containsKey(id))) { lastEquip.put(id, new java.util.HashMap<ca.thederpygolems.armorequip.ArmorEquipEvent.ArmorType, java.lang.Long>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8628/buggy-version/src.ca.thederpygolems.armorequip.Main.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.util.HashMap<ArmorEquipEvent.ArmorType, java.lang.Long>>.put(java.lang.String,java.util.HashMap<ca.thederpygolems.armorequip.ArmorEquipEvent.ArmorType, java.lang.Long>)"], "Fixed commit": "7cfc8cf59cc9f898481a3838b382a10ac5da406c", "Url": "https://api.github.com/repos/Arnuh/ArmorEquipEvent", "Date": "2015-04-03T06:14:21Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (arg == null) { throw new grisu.gricli.GricliSetValueException(getName(), \"null\", \"memory cannot be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1792/buggy-version/src.main.java.grisu.gricli.environment.MemoryVar.java", "BodyUseAPI": [], "Fixed commit": "2e0da342dc8fef2d9c7efd1a161add24c70b3934", "Url": "https://api.github.com/repos/sina-masoud-ansari/gricli", "Date": "2011-08-29T23:05:55Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((productViewController) != null) { productViewController.refresh(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4511/buggy-version/src.iMat.Main.java", "BodyUseAPI": [], "Fixed commit": "92f4b214d8b16dfcc02de49b9e4b6e4401f63792", "Url": "https://api.github.com/repos/konglobemeralt/Project16", "Date": "2017-03-08T13:13:42Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (storeContains(name, type)) loadIfExists(name, type);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4867/buggy-version/core.src.main.java.de.bananaco.bpermissions.api.World.java", "BodyUseAPI": ["de.bananaco.bpermissions.api.World.loadIfExists(java.lang.String,de.bananaco.bpermissions.api.CalculableType)"], "Fixed commit": "a750550a0900f5b2f9be76dac37ca5a02e4b90ef", "Url": "https://api.github.com/repos/rymate1234/bPermissions", "Date": "2016-02-18T15:10:04Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.Statement.executeQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (rs.getString(2).equals(\"world\")) { rd = worldRegion; }else { rd = or.getRegionData(rs.getString(2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/26/buggy-version/OsmAndMapCreator.src.net.osmand.data.changeset.CalculateCountryForChangesets.java", "BodyUseAPI": ["net.osmand.map.OsmandRegions.getRegionData(java.lang.String)", "java.sql.ResultSet.getString(int)"], "Fixed commit": "d05ae1670c85665fa03d1d979ccc0a233ffd9810", "Url": "https://api.github.com/repos/osmandapp/OsmAnd-tools", "Date": "2016-01-13T12:42:02Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.equals(caf.getCurrentClockAction(), TkConstants.LUNCH_IN)) { lastLog = org.kuali.kpme.tklm.time.service.TkServiceLocator.getClockLogService().getLastClockLog(pId, TkConstants.LUNCH_OUT); }else if (org.apache.commons.lang.StringUtils.equals(caf.getCurrentClockAction(), TkConstants.CLOCK_IN)) { lastLog = org.kuali.kpme.tklm.time.service.TkServiceLocator.getClockLogService().getLastClockLog(pId); }else if (org.apache.commons.lang.StringUtils.equals(caf.getCurrentClockAction(), TkConstants.LUNCH_OUT)) { lastLog = org.kuali.kpme.tklm.time.service.TkServiceLocator.getClockLogService().getLastClockLog(pId, TkConstants.LUNCH_IN); }else if (org.apache.commons.lang.StringUtils.equals(caf.getCurrentClockAction(), TkConstants.CLOCK_OUT)) { lastLog = org.kuali.kpme.tklm.time.service.TkServiceLocator.getClockLogService().getLastClockLog(pId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7776/buggy-version/tk-lm.impl.src.main.java.org.kuali.kpme.tklm.time.clock.web.ClockAction.java", "BodyUseAPI": ["org.kuali.kpme.tklm.time.clock.web.ClockActionForm.getCurrentClockAction()", "org.apache.commons.lang.StringUtils.equals(caf.getCurrentClockAction(),TkConstants.LUNCH_OUT)", "org.apache.commons.lang.StringUtils.equals(caf.getCurrentClockAction(),TkConstants.CLOCK_IN)", "org.kuali.kpme.tklm.time.clock.web.ClockActionForm.getCurrentClockAction()", "org.kuali.kpme.tklm.time.clock.web.ClockActionForm.getCurrentClockAction()", "org.apache.commons.lang.StringUtils.equals(caf.getCurrentClockAction(),TkConstants.CLOCK_OUT)"], "Fixed commit": "6ca6edf778fc5459b7de2f38cbdf6b4a15fa69cc", "Url": "https://api.github.com/repos/kuali/kpme", "Date": "2014-07-29T09:29:06Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.apiman.gateway.engine.policies.config.basicauth.LDAPIdentitySource.getUrl()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (url.startsWith(\"ldaps\")) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3198/buggy-version/gateway.engine.policies.src.main.java.io.apiman.gateway.engine.policies.auth.LDAPIdentityValidator.java", "BodyUseAPI": [], "Fixed commit": "1ee7b0b29f4899efad730c4af182da40435813b2", "Url": "https://api.github.com/repos/msavy/apiman", "Date": "2015-05-05T14:57:41Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(updateRecordTxt.getText().isEmpty())) { if (event.getSource().equals(updateRecordBtn)) { if ((java.lang.Integer.parseInt(updateRecordTxt.getText())) > 0) { controller.updateRecord(updateRecordTxt.getText()); } }else if (event.getSource().equals(deleteRecordBtn)) { if ((java.lang.Integer.parseInt(updateRecordTxt.getText())) > 0) { controller.deleteRecord(updateRecordTxt.getText()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2370/buggy-version/src.gui.RecordTableView.java", "BodyUseAPI": ["javax.swing.JTextField.getText()", "javax.swing.JTextField.getText()", "java.lang.Integer.parseInt(java.lang.String)", "javax.swing.JTextField.getText()", "javax.swing.JTextField.getText()", "java.lang.Integer.parseInt(java.lang.String)", "gui.RecordController.updateRecord(java.lang.String)", "gui.RecordController.deleteRecord(java.lang.String)"], "Fixed commit": "876b54f1485884e9116b1c3e0ed002c2369e0ad3", "Url": "https://api.github.com/repos/odessy/simple_java_app", "Date": "2015-03-14T17:00:29Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (id != null) { edgeDraft = container.factory().newEdgeDraft(id); }else { edgeDraft = container.factory().newEdgeDraft(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6133/buggy-version/modules.ImportPlugin.src.main.java.org.gephi.io.importer.plugin.file.ImporterGML.java", "BodyUseAPI": ["container.factory().newEdgeDraft(java.lang.String)"], "Fixed commit": "5362d7c159470d89f3262fca7e5f71ab883a2535", "Url": "https://api.github.com/repos/gephi/gephi", "Date": "2015-11-25T22:30:53Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["etPassword.getText().toString()", "etUserName.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((userName.equalsIgnoreCase(\"a\")) && (password.equalsIgnoreCase(\"a\"))) { android.content.Intent in = new android.content.Intent(this, location.track.my.spotme.MainActivity.class); startActivity(in); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8093/buggy-version/app.src.main.java.location.track.my.spotme.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "accd7ccade515eb965fa64c0a4116994740d9fb1", "Url": "https://api.github.com/repos/tiwari9773/SpotMe", "Date": "2015-09-28T00:37:36Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wasblue) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5049/buggy-version/src.com.comze_instancelabs.conquer.CheckPoint.java", "BodyUseAPI": [], "Fixed commit": "fdf024af4579e2809341e26ff379dbb960005989", "Url": "https://api.github.com/repos/MC-Minigames/Conquer", "Date": "2014-08-10T11:40:34Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wasred) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5049/buggy-version/src.com.comze_instancelabs.conquer.CheckPoint.java", "BodyUseAPI": [], "Fixed commit": "fdf024af4579e2809341e26ff379dbb960005989", "Url": "https://api.github.com/repos/MC-Minigames/Conquer", "Date": "2014-08-10T11:40:34Z"},
{"Line": "=>514", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((h.getRoomsList().size()) - roomCount) == 1) { edu.iastate.cs362.Hotel.Room r = h.getRoomsList().get(((h.getRoomsList().size()) - 1)); int occupied = ((r.getStatus()) == true) ? 1 : 0; stmtRoomWrite.executeUpdate(((((((((((((((\"insert into Rooms values ('\" + (r.getRoomID())) + \"','\") + (h.getID())) + \"','\") + (r.getOccupancy())) + \"','\") + (r.getBeds().size())) + \"','\") + (r.getDescription())) + \"','\") + (r.getBeds().toString())) + \"', '\") + occupied) + \"')\")); }else if (((h.getRoomsList().size()) - roomCount) == 0) { edu.iastate.cs362.Hotel.Room r = h.getRoomsList().get(((h.getRoomsList().size()) - 1)); int occupied = ((r.getStatus()) == true) ? 1 : 0; stmtRoomWrite.executeUpdate(((((((((((((((\"update Rooms set HotelID='\" + (h.getID())) + \"', Occupancy='\") + (r.getOccupancy())) + \"', NumBeds='\") + (r.getBeds().size())) + \"', Description='\") + (r.getDescription())) + \"', BedTypes='\") + (r.getBeds().toString().replace(\"[\", \"\").replace(\"]\", \"\"))) + \"', Occupied='\") + occupied) + \"' where RoomID='\") + (r.getRoomID())) + \"'\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3748/buggy-version/ResortManagement.src.edu.iastate.cs362.Resort.ResortDBSupport.java", "BodyUseAPI": ["h.getRoomsList().size()", "edu.iastate.cs362.Hotel.Hotel.getRoomsList()", "edu.iastate.cs362.Hotel.Hotel.getID()", "java.sql.Statement.executeUpdate(((((((((((((((\"insert into Rooms values ('\" + (r.getRoomID())) + \"','\") + (h.getID())) + \"','\") + (r.getOccupancy())) + \"','\") + (r.getBeds().size())) + \"','\") + (r.getDescription())) + \"','\") + (r.getBeds().toString())) + \"', '\") + occupied) + \"')\"))", "h.getRoomsList().get(((h.getRoomsList().size()) - 1))", "h.getRoomsList().size()", "h.getRoomsList().size()", "edu.iastate.cs362.Hotel.Hotel.getRoomsList()", "edu.iastate.cs362.Hotel.Hotel.getRoomsList()", "edu.iastate.cs362.Hotel.Hotel.getID()", "edu.iastate.cs362.Hotel.Hotel.getRoomsList()", "h.getRoomsList().get(((h.getRoomsList().size()) - 1))", "edu.iastate.cs362.Hotel.Hotel.getRoomsList()", "java.sql.Statement.executeUpdate(((((((((((((((\"update Rooms set HotelID='\" + (h.getID())) + \"', Occupancy='\") + (r.getOccupancy())) + \"', NumBeds='\") + (r.getBeds().size())) + \"', Description='\") + (r.getDescription())) + \"', BedTypes='\") + (r.getBeds().toString().replace(\"[\", \"\").replace(\"]\", \"\"))) + \"', Occupied='\") + occupied) + \"' where RoomID='\") + (r.getRoomID())) + \"'\"))"], "Fixed commit": "18895fb29d06b1a389ab8d22dbd6d7563a5b0394", "Url": "https://api.github.com/repos/bpassini/coms362s14", "Date": "2014-05-01T04:13:43Z"},
{"Line": "=>1467", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(_window.isVisible())) { _window.pack(); _window.setVisible(true); java.awt.Window owner = _window.getOwner(); if ((owner == null) || (owner.getClass().getName().contains(\"LightweightFrame\"))) { _window.setAlwaysOnTop(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8678/buggy-version/src.com.jidesoft.popup.JidePopup.java", "BodyUseAPI": ["com.jidesoft.popup.ResizableWindow.setAlwaysOnTop(boolean)", "com.jidesoft.popup.ResizableWindow.getOwner()", "com.jidesoft.popup.ResizableWindow.pack()", "com.jidesoft.popup.ResizableWindow.setVisible(boolean)"], "Fixed commit": "4a33360d0312af596adf2db2a176c97e479c9259", "Url": "https://api.github.com/repos/jidesoft/jide-oss", "Date": "2014-09-16T16:39:58Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (modelFiles == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2070/buggy-version/src.main.java.org.clairvaux.jobs.PredictionPipelineJob.java", "BodyUseAPI": [], "Fixed commit": "0955a898df74ee9dcb66fa484c2b424948ca2898", "Url": "https://api.github.com/repos/datjandra/Clairvaux", "Date": "2015-10-25T06:09:04Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (uploadFiles == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2070/buggy-version/src.main.java.org.clairvaux.jobs.PredictionPipelineJob.java", "BodyUseAPI": [], "Fixed commit": "0955a898df74ee9dcb66fa484c2b424948ca2898", "Url": "https://api.github.com/repos/datjandra/Clairvaux", "Date": "2015-10-25T06:09:04Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((penduduk.getKode()) == null) { java.lang.Integer kode = java.lang.Math.abs(penduduk.hashCode()); penduduk.setKode(kode.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4951/buggy-version/src.com.dbsys.rs.patient.service.impl.PendudukServiceImpl.java", "BodyUseAPI": ["com.dbsys.rs.lib.entity.Penduduk.setKode(java.lang.String)", "java.lang.Math.abs(penduduk.hashCode())", "com.dbsys.rs.lib.entity.Penduduk.hashCode()"], "Fixed commit": "086180a2e71da4e99d0198ec47ae6a494b63c023", "Url": "https://api.github.com/repos/uvsystem/rumkit-patient-service", "Date": "2015-10-13T11:12:41Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((org.apache.brooklyn.util.text.Strings.isBlank(propCollection)) && (org.apache.brooklyn.util.text.Strings.isBlank(propName))) { throw new java.lang.IllegalStateException(((((((\"Relationship for Requirement \" + (relationshipTemplate.getRequirementName())) + \" on NodeTemplate \") + (nodeTemplate.getName())) + \". Collection Name or Property Name should\") + \" be defined for RelationsType \") + (relationshipTemplate.getType()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5475/buggy-version/brooklyn-tosca-transformer.src.main.java.org.apache.brooklyn.tosca.a4c.brooklyn.ToscaNodeToEntityConverter.java", "BodyUseAPI": [], "Fixed commit": "0cffdbacce45ac87ff66c97e766110bb44f3df06", "Url": "https://api.github.com/repos/tbouron/brooklyn-tosca", "Date": "2015-11-11T10:41:42Z"},
{"Line": "=>1791", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.datdo.mobilib.util.MblUtils.getCurrentContext().getContentResolver().query(android.net.Uri,java.lang.String[],<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((cursor != null) && (cursor.moveToFirst())) { int colIndex = cursor.getColumnIndex(Images.Media.DATA); if (colIndex >= 0) { filePath = cursor.getString(colIndex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1203/buggy-version/Mobilib.src.com.datdo.mobilib.util.MblUtils.java", "BodyUseAPI": ["android.database.Cursor.getString(int)", "android.database.Cursor.getColumnIndex(Images.Media.DATA)"], "Fixed commit": "604ff0d80b47e8c4531dfac5fcb331a276bd24a7", "Url": "https://api.github.com/repos/datdojp/mobilib", "Date": "2015-04-06T05:44:46Z"},
{"Line": "=>1799", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.datdo.mobilib.util.MblUtils.isEmpty(filePath))) { return new java.io.File(filePath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1203/buggy-version/Mobilib.src.com.datdo.mobilib.util.MblUtils.java", "BodyUseAPI": [], "Fixed commit": "604ff0d80b47e8c4531dfac5fcb331a276bd24a7", "Url": "https://api.github.com/repos/datdojp/mobilib", "Date": "2015-04-06T05:44:46Z"},
{"Line": "=>1805", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.net.Uri.getEncodedPath()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(com.datdo.mobilib.util.MblUtils.isEmpty(encodedPath))) { java.lang.String[] splitted = encodedPath.split(\"/\"); for (java.lang.String token : splitted) { if (com.datdo.mobilib.util.MblUtils.isEmpty(token)) { continue; } java.lang.String url; try { url = java.net.URLDecoder.decode(token, com.datdo.mobilib.util.MblUtils.UTF8); } catch (java.io.UnsupportedEncodingException e1) { continue; } if (com.datdo.mobilib.util.MblUtils.isLink(url)) { try { return new java.net.URL(url); } catch (java.net.MalformedURLException e) { } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1203/buggy-version/Mobilib.src.com.datdo.mobilib.util.MblUtils.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "604ff0d80b47e8c4531dfac5fcb331a276bd24a7", "Url": "https://api.github.com/repos/datdojp/mobilib", "Date": "2015-04-06T05:44:46Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (orders.get(position).isOrderDone()) { holder.orders_before.setText(\"Done\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7594/buggy-version/app.src.main.java.in.placeitnow.placeitnow.RecyclerAdapterOrderDashboard.java", "BodyUseAPI": [], "Fixed commit": "b615890965aa674234285b11894bcff4a6be19d9", "Url": "https://api.github.com/repos/pranavgupta1234/placeItNow", "Date": "2017-02-23T20:19:46Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((detailRequireingStatuses.contains(decodedStatus.getStatusCode())) && ((output.get(XmlRpcParameters.LS_DETAILS_KEY)) == null)) { throw new it.grid.storm.xmlrpc.decoders.DecodingException((\"Unable to decode the output. Missing mandatory arguments: output=\" + output)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/987/buggy-version/src.main.java.it.grid.storm.xmlrpc.decoders.LsDecoder.java", "BodyUseAPI": [], "Fixed commit": "3f344f77a42b1248d57ea09bb1fe2a68f2cde8dd", "Url": "https://api.github.com/repos/micheledibenedetto/storm-xmlrpc-api", "Date": "2013-02-04T12:00:18Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stations.size()) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8366/buggy-version/src.main.java.forestry.mail.gui.ContainerCatalogue.java", "BodyUseAPI": [], "Fixed commit": "5802178bbd2dd30cda5dcc3f02f8cb7464256bf1", "Url": "https://api.github.com/repos/Nirek-K/ForestryMC", "Date": "2015-03-03T06:53:22Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stations.size()) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8366/buggy-version/src.main.java.forestry.mail.gui.ContainerCatalogue.java", "BodyUseAPI": [], "Fixed commit": "5802178bbd2dd30cda5dcc3f02f8cb7464256bf1", "Url": "https://api.github.com/repos/Nirek-K/ForestryMC", "Date": "2015-03-03T06:53:22Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mini != (java.lang.Integer.MAX_VALUE)) j += mini;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/160/buggy-version/src.com.bestchoice.optimization.MckpExactlyOne.java", "BodyUseAPI": [], "Fixed commit": "e1e53970ad8a928c4138e05b10a006bedc796b4d", "Url": "https://api.github.com/repos/PRIBAN91/GiftBasket", "Date": "2016-10-04T17:21:27Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (worked == false) { plugin.logSevere(\"That arena does not exist!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/9068/buggy-version/GentlemensDispute.src.us.twoguys.gentsdispute.arena.ArenaMaster.java", "BodyUseAPI": [], "Fixed commit": "b886d5c63199c700ec14fb5a6b504a0e3ad02272", "Url": "https://api.github.com/repos/Malikk/GentlemensDispute", "Date": "2012-03-30T03:15:23Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(messages.isEmpty())) { messages.get(0).setState(MessageState.READ); messageDao.save(messages.get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2220/buggy-version/baseProject.src.main.java.ch.unibe.ese.team4.controller.service.MessageService.java", "BodyUseAPI": ["messages.get(0).setState(MessageState.READ)", "java.util.List<ch.unibe.ese.team4.model.Message>.get(int)", "java.util.List<ch.unibe.ese.team4.model.Message>.get(int)", "ch.unibe.ese.team4.model.dao.MessageDao.save(messages.get(0))"], "Fixed commit": "4e6d53d10fbe8156ad5ede75292449ece1736950", "Url": "https://api.github.com/repos/scg-unibe-ch/ese2016-team4", "Date": "2016-12-10T08:53:24Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.getspout.spoutapi.gui.TextField.getText()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((text.length()) > 0) text = text.substring(0, ((text.length()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1133/buggy-version/src.main.java.de.Lathanael.SimpleCalc.Window.CalcWindow.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "1041650667208cac5dd7cc6b1ff3b64aa0f94276", "Url": "https://api.github.com/repos/Lathanael/SimpleCalc", "Date": "2011-11-11T21:36:46Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((request == null) || (session == null)) { java.lang.System.err.println(\"Unusual situation: received object lacks reference chain:\"); if (container == null) { java.lang.System.err.println(\"Container null.\"); } if (request == null) { java.lang.System.err.println(\"Request null.\"); } if (session == null) { java.lang.System.err.println(\"Session null.\"); } java.lang.Thread.dumpStack(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6613/buggy-version/nio-http.com.codeandstrings.niohttp.Engine.java", "BodyUseAPI": [], "Fixed commit": "2f55a55335510c25a80676b0761c6ca242b0583b", "Url": "https://api.github.com/repos/simplepanda/nio-http", "Date": "2014-08-29T01:28:11Z"},
{"Line": "=>1034", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((views.EditEmployee.user.getTimeIn()) == null) { txtTimeIn.setText(\"1-1-2017\"); }else { txtTimeIn.setText(views.EditEmployee.user.getTimeIn()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7389/buggy-version/src.views.EditEmployee.java", "BodyUseAPI": ["models.User.getTimeIn()", "com.github.lgooddatepicker.components.TimePicker.setText(views.EditEmployee.user.getTimeIn())"], "Fixed commit": "c8ef859f528850f5d0f0f4a44183107f4f9758c6", "Url": "https://api.github.com/repos/bervynco/DSLPayroll", "Date": "2017-06-20T16:45:46Z"},
{"Line": "=>1040", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((views.EditEmployee.user.getTimeOut()) == null) { txtTimeOut.setText(\"1-1-2017\"); }else { txtTimeOut.setText(views.EditEmployee.user.getTimeOut()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7389/buggy-version/src.views.EditEmployee.java", "BodyUseAPI": ["com.github.lgooddatepicker.components.TimePicker.setText(views.EditEmployee.user.getTimeOut())", "models.User.getTimeOut()"], "Fixed commit": "c8ef859f528850f5d0f0f4a44183107f4f9758c6", "Url": "https://api.github.com/repos/bervynco/DSLPayroll", "Date": "2017-06-20T16:45:46Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<T, java.util.Set<T>>.get(T)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (edges == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5464/buggy-version/src.main.java.de.topobyte.adt.graph.Graph.java", "BodyUseAPI": [], "Fixed commit": "42b9425a39417b51c1779b4815e9e4a0f0b0c6b2", "Url": "https://api.github.com/repos/topobyte/adt-graph", "Date": "2017-05-06T06:52:48Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<T, java.util.Set<T>>.get(T)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (edges == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5464/buggy-version/src.main.java.de.topobyte.adt.graph.Graph.java", "BodyUseAPI": [], "Fixed commit": "42b9425a39417b51c1779b4815e9e4a0f0b0c6b2", "Url": "https://api.github.com/repos/topobyte/adt-graph", "Date": "2017-05-06T06:52:48Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.World.getBlock(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (block == (net.minecraft.init.Blocks.snow)) { world.setBlock(x, y, z, Blocks.water); flag = true; }else if (block == (net.minecraft.init.Blocks.snow_layer)) { world.setBlockToAir(x, y, z); flag = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4273/buggy-version/src.main.java.sobiohazardous.mods.ec.util.ECUtil.java", "BodyUseAPI": [], "Fixed commit": "64e174e5c31de9067138522f60032f94edfdf916", "Url": "https://api.github.com/repos/SoBiohazardous/Modjam4", "Date": "2014-05-18T15:04:58Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(docs.isEmpty())) md.getPlaylistColection().insertMany(docs);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2624/buggy-version/runtime.src.main.java.net.thenumenorean.essence.pl.InsertOrderPlaylist.java", "BodyUseAPI": ["md.getPlaylistColection().insertMany(java.util.List<org.bson.Document>)"], "Fixed commit": "3063e4ecc55282dc1093ddc1c2eb9012707df8dd", "Url": "https://api.github.com/repos/TheNumenorean/Essence", "Date": "2017-05-05T22:05:03Z"},
{"Line": "=>518", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((list.length) > 0) { result.append(list[((list.length) - 1)]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/619/buggy-version/src.com.ichi2.libanki.Utils.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "8d7265b828d6f76532d1948bb5c8b3c53dcf82d7", "Url": "https://api.github.com/repos/marek-jasovsky/Anki-Android", "Date": "2012-05-06T20:56:21Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mShowProgressText) { getProgressTextView().setVisibility(View.VISIBLE); }else { getProgressTextView().setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5031/buggy-version/lib.src.main.java.com.github.omadahealth.slidepager.lib.views.ProgressView.java", "BodyUseAPI": [], "Fixed commit": "516b98b0bc60904a59ac94cdd9e5f2ed39c75a5b", "Url": "https://api.github.com/repos/omadahealth/SlidePager", "Date": "2015-08-13T23:43:52Z"},
{"Line": "=>598", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mAttributes) != null) && ((mProgressAttr) != null)) { loadStyledAttributes(mAttributes, mProgressAttr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5031/buggy-version/lib.src.main.java.com.github.omadahealth.slidepager.lib.views.ProgressView.java", "BodyUseAPI": [], "Fixed commit": "516b98b0bc60904a59ac94cdd9e5f2ed39c75a5b", "Url": "https://api.github.com/repos/omadahealth/SlidePager", "Date": "2015-08-13T23:43:52Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_eventNamespace) == null) { _eventNamespace = new blackberry.ui.event.EventNamespace(_browserField); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7547/buggy-version/api.ui.event.src.blackberry.ui.event.EventExtension.java", "BodyUseAPI": [], "Fixed commit": "61c269ca81a7e8166505697611bd5db78686b53a", "Url": "https://api.github.com/repos/jamespaulmuir/WebWorks", "Date": "2010-12-02T15:54:03Z"},
{"Line": "=>921", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.syzton.sunread.service.user.UserRepositoryService.findByUserId(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (user != null) { schoolSuperAdmin = this.findByAdminId(user.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/376/buggy-version/SunReadSource.src.main.java.com.syzton.sunread.service.user.UserRepositoryService.java", "BodyUseAPI": ["com.syzton.sunread.model.user.User.getId()", "com.syzton.sunread.service.user.UserRepositoryService.findByAdminId(user.getId())"], "Fixed commit": "90c7400842972d376929211219e047379b844eba", "Url": "https://api.github.com/repos/xxing1982/EDU_SYZT", "Date": "2015-07-20T07:50:11Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.length()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((pos + 1) == length) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/85/buggy-version/apktool-lib.src.main.java.brut.androlib.res.xml.ResXmlEncoders.java", "BodyUseAPI": [], "Fixed commit": "269870bad6996b6cc14aaadc1187a6bd4a065e39", "Url": "https://api.github.com/repos/brutall/brut.apktool", "Date": "2011-05-17T08:28:49Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((u.getPagination()) != null) { pageNum = u.getPagination().getCurrentPage(); pageSize = u.getPagination().getPageSize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3295/buggy-version/src.main.java.com.fate.restful.et.web.controller.IdcUserController.java", "BodyUseAPI": ["u.getPagination().getCurrentPage()", "com.fate.restful.et.domain.IdcUser.getPagination()", "com.fate.restful.et.domain.IdcUser.getPagination()", "u.getPagination().getPageSize()"], "Fixed commit": "cca56ba1717b13d21a1d9f2d4b576b228041239f", "Url": "https://api.github.com/repos/fix777/iForum", "Date": "2016-06-07T18:06:06Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gwt.query.client.plugins.effects.REGEX_SYMBOL_NUMBER_UNIT.exec(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (sparts != null) { st = java.lang.Double.parseDouble(sparts.getGroup(2)); unit = (sparts.getGroup(3).isEmpty()) ? unit : sparts.getGroup(3); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7945/buggy-version/gwtquery-core.src.main.java.com.google.gwt.query.client.plugins.effects.TransitionsAnimation.java", "BodyUseAPI": ["java.lang.Double.parseDouble(sparts.getGroup(2))", "com.google.gwt.regexp.shared.MatchResult.getGroup(int)", "com.google.gwt.regexp.shared.MatchResult.getGroup(int)", "com.google.gwt.regexp.shared.MatchResult.getGroup(int)", "sparts.getGroup(3).isEmpty()"], "Fixed commit": "e7e08ff29493f5e9762b52484d7b234c14f05ad2", "Url": "https://api.github.com/repos/gwtquery/gwtquery", "Date": "2014-03-10T07:32:14Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((timeEdit) != null) && (!(timeEdit.equals(\"\")))) { timePerRound = java.lang.Integer.parseInt(timeEdit.getText().toString()); editor.putInt(\"timePerRound\", timePerRound); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3675/buggy-version/app.src.main.java.com.example.philipp.timesup.CreateActivity.java", "BodyUseAPI": ["android.widget.EditText.getText()", "timeEdit.getText().toString()", "java.lang.Integer.parseInt(timeEdit.getText().toString())"], "Fixed commit": "843e664aaeca0a346b0c0cc63398f1739f7b1c73", "Url": "https://api.github.com/repos/Hadjimina/TimesUp", "Date": "2017-11-23T09:59:23Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.osmand.osm.MapRenderingTypes.getRelationalTagValue(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((rule.targetTagValue) != null) { rule = rule.targetTagValue; if ((rule.getValue()) != null) { value = rule.getValue(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2737/buggy-version/OsmAnd-java.src.net.osmand.osm.MapRenderingTypes.java", "BodyUseAPI": [], "Fixed commit": "88d0af99cb4252995c5bcb56c07d6066552e0037", "Url": "https://api.github.com/repos/osmandapp/OsmAnd-core", "Date": "2013-02-17T17:32:18Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((personalLeave < 1) && (sickAndpersonalLeave < 1)) && (late < 1)) && (absent < 1)) { return \"A\"; }else if ((((personalLeave <= 2) && (sickAndpersonalLeave <= 5)) && (late <= 5)) && (absent < 1)) { return \"B\"; }else if ((((personalLeave <= 4) && (sickAndpersonalLeave <= 10)) && (late <= 5)) && (absent < 1)) { return \"C\"; }else if ((((personalLeave <= 8) && (sickAndpersonalLeave <= 12)) && (late <= 10)) && (absent < 1)) { return \"D\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6447/buggy-version/src.main.java.com.wangzhixuan.service.impl.PeopleTimesheetServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "39bcab83ed72e018f5b0928e0abe866e4439fe2f", "Url": "https://api.github.com/repos/puppylsy/spring-shiro-training", "Date": "2017-04-05T04:02:52Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (resultLimit != null) { if (us.mn.state.health.lims.common.services.ResultLimitService.NUMERIC_RESULT_TYPE_ID.equals(resultLimit.getResultTypeId())) { range = us.mn.state.health.lims.common.services.ResultLimitService.getDisplayNormalRange(resultLimit.getLowNormal(), resultLimit.getHighNormal(), significantDigits, separator); }else if ((us.mn.state.health.lims.common.services.ResultLimitService.SELECT_LIST_RESULT_TYPE_IDS.contains(resultLimit.getResultTypeId())) && (!(org.apache.commons.validator.GenericValidator.isBlankOrNull(resultLimit.getDictionaryNormalId())))) { return us.mn.state.health.lims.common.services.ResultLimitService.dictionaryDAO.getDataForId(resultLimit.getDictionaryNormalId()).getLocalizedName(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1327/buggy-version/app.src.us.mn.state.health.lims.common.services.ResultLimitService.java", "BodyUseAPI": ["us.mn.state.health.lims.resultlimits.valueholder.ResultLimit.getDictionaryNormalId()", "org.apache.commons.validator.GenericValidator.isBlankOrNull(resultLimit.getDictionaryNormalId())", "us.mn.state.health.lims.dictionary.dao.DictionaryDAO.getDataForId(resultLimit.getDictionaryNormalId())", "us.mn.state.health.lims.resultlimits.valueholder.ResultLimit.getHighNormal()", "us.mn.state.health.lims.common.services.ResultLimitService.dictionaryDAO.getDataForId(resultLimit.getDictionaryNormalId()).getLocalizedName()", "us.mn.state.health.lims.resultlimits.valueholder.ResultLimit.getResultTypeId()", "us.mn.state.health.lims.resultlimits.valueholder.ResultLimit.getResultTypeId()", "java.lang.String.equals(resultLimit.getResultTypeId())", "us.mn.state.health.lims.resultlimits.valueholder.ResultLimit.getLowNormal()", "us.mn.state.health.lims.common.services.ResultLimitService.getDisplayNormalRange(resultLimit.getLowNormal(),resultLimit.getHighNormal(),java.lang.String,java.lang.String)", "java.lang.String.contains(resultLimit.getResultTypeId())", "us.mn.state.health.lims.resultlimits.valueholder.ResultLimit.getDictionaryNormalId()"], "Fixed commit": "5e936ded15fa619c40838317392bbde5b863bb3b", "Url": "https://api.github.com/repos/openelisglobal/openelisglobal-core", "Date": "2014-04-09T17:44:22Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((request) != null) { rpc.getHandler().post(new java.lang.Runnable() { @java.lang.Override public void run() { rpc.stopRequest(request); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1225/buggy-version/base.src.main.java.com.github.kubatatami.judonetworking.internals.AsyncResultSender.java", "BodyUseAPI": [], "Fixed commit": "cbf7c32d6a5693e95e469e7b4b79030c1d441c0c", "Url": "https://api.github.com/repos/kubatatami/JudoNetworking", "Date": "2016-12-19T13:04:14Z"},
{"Line": "=>1250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (definitive) { deleteComponentData(componentId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2354/buggy-version/lib-core.src.main.java.com.stratelia.webactiv.beans.admin.Admin.java", "BodyUseAPI": [], "Fixed commit": "cb4957d16e28c074e8824e8debd67194f506e06b", "Url": "https://api.github.com/repos/SilverTeamWork/Silverpeas-Core", "Date": "2014-11-25T08:46:59Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.text.TextUtils.equals(registrationType, LoginRestClient.LOGIN_FLOW_TYPE_MSISDN)) && ((mEmail) != null)) { mShowThreePidWarning = true; mEmail = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5594/buggy-version/vector.src.main.java.im.vector.RegistrationManager.java", "BodyUseAPI": [], "Fixed commit": "bfc4cc85ca79b4b248527b429ed525fdcaa6d5ec", "Url": "https://api.github.com/repos/vector-im/riot-android", "Date": "2017-03-09T14:46:15Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.dcxp.tone.fragments.PlaylistsFragment.loaded)) { com.dcxp.tone.playlist.PlaylistManager.load(getActivity()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4093/buggy-version/app.src.main.java.com.dcxp.tone.fragments.PlaylistsFragment.java", "BodyUseAPI": [], "Fixed commit": "240fabc8cb07ef28c0a1a56ae0acecf5504439ce", "Url": "https://api.github.com/repos/dcxp2015/FinalRep-android", "Date": "2015-07-20T04:41:30Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value instanceof java.lang.String) { if ((((java.lang.String) (value)).length()) > 0) { executeSegs(tmpl, ctx, out); } }else if (value.getClass().isArray()) { for (int ii = 0, ll = java.lang.reflect.Array.getLength(value); ii < ll; ii++) { com.samskivert.mustache.Template.Mode mode = (ii == 0) ? Template.Mode.FIRST : ii == (ll - 1) ? Template.Mode.LAST : Template.Mode.OTHER; executeSegs(tmpl, ctx.nest(java.lang.reflect.Array.get(value, ii), (ii + 1), mode), out); } }else { executeSegs(tmpl, ctx.nest(value, 0, Template.Mode.OTHER), out); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4216/buggy-version/src.com.samskivert.mustache.Mustache.java", "BodyUseAPI": ["java.lang.reflect.Array.get(java.lang.Object,int)", "java.lang.Class<? extends java.lang.Object>.isArray()", "com.samskivert.mustache.Mustache.SectionSegment.executeSegs(com.samskivert.mustache.Template,ctx.nest(java.lang.reflect.Array.get(value, ii), (ii + 1), mode),java.io.Writer)", "Template.Context.nest(java.lang.Object,int,Template.Mode)", "Template.Context.nest(java.lang.Object,int,Template.Mode.OTHER)", "java.lang.reflect.Array.getLength(java.lang.Object)", "com.samskivert.mustache.Mustache.SectionSegment.executeSegs(com.samskivert.mustache.Template,ctx.nest(value, 0, Template.Mode.OTHER),java.io.Writer)", "java.lang.Object.getClass()"], "Fixed commit": "2f507fdaecd69ed5e97f1af23500490923a595c8", "Url": "https://api.github.com/repos/kieranclancy/Anki-Android", "Date": "2011-12-29T15:18:36Z"},
{"Line": "=>468", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.samskivert.mustache.Template.getValue(Template.Context,java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (value instanceof java.lang.String) { if ((((java.lang.String) (value)).length()) == 0) { executeSegs(tmpl, ctx, out); } }else if (value.getClass().isArray()) { if ((java.lang.reflect.Array.getLength(value)) == 0) { executeSegs(tmpl, ctx, out); } }else if (value instanceof java.util.Iterator<?>) { java.util.Iterator<?> iter = ((java.util.Iterator<?>) (value)); if (!(iter.hasNext())) { executeSegs(tmpl, ctx, out); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4216/buggy-version/src.com.samskivert.mustache.Mustache.java", "BodyUseAPI": ["java.lang.Object.getClass()", "java.lang.reflect.Array.getLength(java.lang.Object)", "java.lang.Class<? extends java.lang.Object>.isArray()"], "Fixed commit": "2f507fdaecd69ed5e97f1af23500490923a595c8", "Url": "https://api.github.com/repos/kieranclancy/Anki-Android", "Date": "2011-12-29T15:18:36Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((col.getValue()) instanceof oracle.sql.TIMESTAMP)) { values[(i++)] = col.getValue(); }else { java.util.Date date = null; try { date = new java.util.Date(((oracle.sql.TIMESTAMP) (col.getValue())).timestampValue().getTime()); values[(i++)] = date; } catch (java.sql.SQLException e) { values[(i++)] = col.getValue(); e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5390/buggy-version/software.DynamicExtentions.src.java.edu.common.dynamicextensions.query.WideRowGenerator.java", "BodyUseAPI": ["edu.common.dynamicextensions.query.ResultColumn.getValue()", "edu.common.dynamicextensions.query.ResultColumn.getValue()", "edu.common.dynamicextensions.query.ResultColumn.getValue()", "((oracle.sql.TIMESTAMP) (col.getValue())).timestampValue().getTime()", "((oracle.sql.TIMESTAMP) (col.getValue())).timestampValue()"], "Fixed commit": "23b8ef54445a9750aaeaf227e956aa16595dbf3f", "Url": "https://api.github.com/repos/NCIP/catissue-dynamic-extensions", "Date": "2015-01-12T23:20:56Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasAnimateImages) button.bounceDrawable(((animateImagesScale) + 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4313/buggy-version/library.src.main.java.co.ceryle.radiorealbutton.library.RadioRealButtonGroup.java", "BodyUseAPI": [], "Fixed commit": "9d4f654bd1218a98eca9060bd90dced480452b10", "Url": "https://api.github.com/repos/ceryle/RadioRealButton", "Date": "2017-03-03T08:39:43Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasAnimateTexts) button.bounceText(((animateTextsScale) + 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4313/buggy-version/library.src.main.java.co.ceryle.radiorealbutton.library.RadioRealButtonGroup.java", "BodyUseAPI": [], "Fixed commit": "9d4f654bd1218a98eca9060bd90dced480452b10", "Url": "https://api.github.com/repos/ceryle/RadioRealButton", "Date": "2017-03-03T08:39:43Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["thebetweenlands.manager.TextureManager.getPlayerSkin(net.minecraft.client.entity.AbstractClientPlayer)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (skin == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1142/buggy-version/java.thebetweenlands.proxy.ClientProxy.java", "BodyUseAPI": [], "Fixed commit": "3bab9a4f62471a243dc35d3334594a44c1916339", "Url": "https://api.github.com/repos/Angry-Pixel/The-Betweenlands", "Date": "2015-03-15T11:30:03Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mChatMutex)) { mChatMutex = true; if (sharedPreferences.getBoolean(\"pref_watch_chat\", false)) watchChat(event); mChatMutex = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6641/buggy-version/app.src.main.java.xyz.monkeytong.hongbao.services.HongbaoService.java", "BodyUseAPI": [], "Fixed commit": "0d3ad9cc458c3c56e03c5f2b6dc42d06090546eb", "Url": "https://api.github.com/repos/geeeeeeeeek/WeChatLuckyMoney", "Date": "2016-05-31T13:06:30Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<android.view.accessibility.AccessibilityNodeInfo>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (nodeToClick == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6641/buggy-version/app.src.main.java.xyz.monkeytong.hongbao.services.HongbaoService.java", "BodyUseAPI": [], "Fixed commit": "0d3ad9cc458c3c56e03c5f2b6dc42d06090546eb", "Url": "https://api.github.com/repos/geeeeeeeeek/WeChatLuckyMoney", "Date": "2016-05-31T13:06:30Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((notificationId) == (-1)) { notificationId = mReminder.getNotificationId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/798/buggy-version/src.main.java.org.tndata.android.compass.activity.SnoozeActivity.java", "BodyUseAPI": [], "Fixed commit": "458966d387c1daf06313190742d5e2a6d49e7ec5", "Url": "https://api.github.com/repos/izzyalonso/android-app", "Date": "2015-10-16T16:29:21Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((de.domisum.lib.animulus.AnimulusLib.instance) == null) throw new java.lang.IllegalArgumentException(((de.domisum.lib.animulus.AnimulusLib.class.getSimpleName()) + \" has to be initialized before usage\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6045/buggy-version/src.main.java.de.domisum.lib.animulus.AnimulusLib.java", "BodyUseAPI": [], "Fixed commit": "ca1b021c38dd3f1c8b38110e234e0b7c7bcc20dd", "Url": "https://api.github.com/repos/domisum/AnimulusLib", "Date": "2017-12-03T17:03:38Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stayMax) owner.setHealth(owner.getMaxHealth());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/9053/buggy-version/src.entity.mobs.MobHealthScaling.java", "BodyUseAPI": [], "Fixed commit": "fee7e37e8edf636a7d2b4a578a5fe316ebf14f98", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2016-12-15T11:48:31Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["scala.concurrent.Await.result(scala.concurrent.Future<java.lang.Object>,timeout.duration())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (possibleDirections.contains(move.getDirection())) { pl.edu.agh.game.player.action.MoveMessage moveMessage = new pl.edu.agh.game.player.action.MoveMessage(player.getLocationId(), move.getDirection()); scala.concurrent.Future<java.lang.Object> moveFuture = akka.pattern.Patterns.ask(environmentAgent, moveMessage, timeout); pl.edu.agh.game.model.map.Location moveResult = ((pl.edu.agh.game.model.map.Location) (scala.concurrent.Await.result(moveFuture, timeout.duration()))); player.setLocationId(moveResult.getId()); log.info((\"after MOVE: position = \" + (player.getLocationId()))); }else { log.info(\"move in a given direction is impossible\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5320/buggy-version/src.main.java.pl.edu.agh.game.player.action.PlayerActionAgent.java", "BodyUseAPI": ["pl.edu.agh.game.player.action.Move.getDirection()"], "Fixed commit": "05bb4a3b9c75bb971e346c8fa84741d9bcb5c72e", "Url": "https://api.github.com/repos/piotrek722/Akka-SOA", "Date": "2017-05-31T18:10:29Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((vgParentLayout) != null) bringChildToFront(vgParentLayout);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1754/buggy-version/library.src.main.java.com.abdallaadelessa.android.dataplaceholder.DataPlaceHolder.java", "BodyUseAPI": [], "Fixed commit": "57915957cc6a05be04b79d207abf0b9ea361aa42", "Url": "https://api.github.com/repos/abdallaadelessa/DataPlaceHolder", "Date": "2016-08-23T17:08:54Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(\"\".equals(sb.toString()))) { session.execute(sb.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4103/buggy-version/engine.src.main.java.com.stratio.streaming.service.CassandraTableOperationsService.java", "BodyUseAPI": ["com.datastax.driver.core.Session.execute(java.lang.String)", "java.lang.StringBuilder.toString()"], "Fixed commit": "dbcb4640c133a50c00b6624a6eea573ac64c6eea", "Url": "https://api.github.com/repos/Stratio/stratio-streaming", "Date": "2014-08-07T08:52:58Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((targetColor) != (replacementColor)) FloodFill(bmp, pt, targetColor, replacementColor);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8493/buggy-version/app.src.main.java.com.rpg.southparkavatars.newcloth.AsyncPainting.java", "BodyUseAPI": [], "Fixed commit": "612ac438215719687f1998636f34e22881f6e7e4", "Url": "https://api.github.com/repos/grobee/South-Park-Avatars", "Date": "2016-11-18T23:39:31Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((level_number) < 10) { game.batch.draw(numbers_chiller[((level_number) % 10)], 578, 1088, 80, 80); }else { game.batch.draw(numbers_chiller[((level_number) / 10)], 545, 1088, 80, 80); game.batch.draw(numbers_chiller[((level_number) % 10)], 595, 1088, 80, 80); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3073/buggy-version/VERILOG_TOWN.verilogTown.src.com.me.myverilogTown.ScoreScreen.java", "BodyUseAPI": ["game.batch.draw(numbers_chiller[((level_number) % 10)],int,int,int,int)", "game.batch.draw(numbers_chiller[((level_number) / 10)],int,int,int,int)", "game.batch.draw(numbers_chiller[((level_number) % 10)],int,int,int,int)"], "Fixed commit": "cf4d41ba2c1f2c68a7a12e72479980470fcd7076", "Url": "https://api.github.com/repos/NigoroJr/verilogTown", "Date": "2014-07-15T16:56:46Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (object instanceof java.lang.String) { return this.stringToMessageConverter.convert(((java.lang.String) (object))); }else if (object instanceof java.io.Serializable) { return this.serializableToMessageConverter.convert(((java.io.Serializable) (object))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3664/buggy-version/ikasaneip.component.endpoint.jms-client.src.main.java.org.ikasan.component.endpoint.jms.producer.GenericJmsProducer.java", "BodyUseAPI": [], "Fixed commit": "b5a35d11a58c5d7f7574ddd44e5bbce79eb5c20a", "Url": "https://api.github.com/repos/ikasanEIP/ikasan", "Date": "2014-08-07T15:51:55Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((cates.length) > 0) { return cates[0]; }else { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8427/buggy-version/src.com.github.diaosi.BDAM.mapreduce.TagCloud.java", "BodyUseAPI": [], "Fixed commit": "15e21fe9a8ba2053c03b1d971b2e5b824ebd6eee", "Url": "https://api.github.com/repos/Diaosi/BDAM_Diaosi", "Date": "2012-12-10T10:56:31Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((cates.length) > 0) { return cates[0]; }else { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8427/buggy-version/src.com.github.diaosi.BDAM.mapreduce.CategoryPage.java", "BodyUseAPI": [], "Fixed commit": "15e21fe9a8ba2053c03b1d971b2e5b824ebd6eee", "Url": "https://api.github.com/repos/Diaosi/BDAM_Diaosi", "Date": "2012-12-10T10:56:31Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.boincDir.exists()) { if (keepWrapper) { for (java.io.File f : org.apache.commons.io.FileUtils.listFiles(this.boincDir, new com.github.jkutner.BoincApp.WrapperFilter(), TrueFileFilter.INSTANCE)) { if (!(f.isDirectory())) { org.apache.commons.io.FileUtils.forceDelete(f); } } }else { org.apache.commons.io.FileUtils.deleteDirectory(this.boincDir); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8443/buggy-version/src.main.java.com.github.jkutner.BoincApp.java", "BodyUseAPI": ["org.apache.commons.io.FileUtils.listFiles(java.io.File,com.github.jkutner.BoincApp.WrapperFilter,TrueFileFilter.INSTANCE)", "org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)"], "Fixed commit": "3b44f4fdf61811b6e579a7b9d001a28700dbb661", "Url": "https://api.github.com/repos/jkutner/boinc-maven-plugin", "Date": "2015-12-23T15:56:23Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jetbrains.jet.lang.diagnostics.rendering.ConstraintSystemImpl.getStatus()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((typeParameterDescriptor == null) && (status.hasConflictingConstraints())) { return org.jetbrains.jet.lang.diagnostics.rendering.Renderers.renderConflictingSubstitutionsInferenceError(inferenceErrorData, result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1625/buggy-version/compiler.frontend.src.org.jetbrains.jet.lang.diagnostics.rendering.Renderers.java", "BodyUseAPI": [], "Fixed commit": "4657a4b271b059a969eb5b3885a74f0d15129b2e", "Url": "https://api.github.com/repos/JetBrains/kotlin", "Date": "2013-12-24T10:52:58Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(savingAndLoading.loadBoolean(this, \"hasCreatedEvents\"))) { savingAndLoading.saveBoolean(this, \"hasCreatedEvents\", false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4529/buggy-version/app.src.main.java.com.bettehem.skijudgingsteno.MainMenu.java", "BodyUseAPI": ["com.bettehem.skijudgingsteno.SharedPreferencesSavingAndLoading.saveBoolean(com.bettehem.skijudgingsteno.MainMenu,java.lang.String,boolean)"], "Fixed commit": "98572732b22c7532946a19cafa5bdfce7c45f27f", "Url": "https://api.github.com/repos/Bettehem/SkiJudgingSteno", "Date": "2015-05-08T14:45:21Z"},
{"Line": "=>1858", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (naturalIdCacheKey.equals(previousCacheKey)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7152/buggy-version/hibernate-core.src.main.java.org.hibernate.engine.internal.StatefulPersistenceContext.java", "BodyUseAPI": [], "Fixed commit": "b0e50265007bbe9fac4cbd948d88a9c978996c5b", "Url": "https://api.github.com/repos/pb00068/hibernate-orm", "Date": "2012-05-09T09:46:49Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.grarak.kerneladiutor.utils.kernel.cpu.Temperature.CPU_NODE) != null) && ((com.grarak.kerneladiutor.utils.Utils.readFile(com.grarak.kerneladiutor.utils.kernel.cpu.Temperature.CPU_NODE).length()) == 2)) { com.grarak.kerneladiutor.utils.kernel.cpu.Temperature.CPU_OFFSET = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8719/buggy-version/app.src.main.java.com.grarak.kerneladiutor.utils.kernel.cpu.Temperature.java", "BodyUseAPI": [], "Fixed commit": "095d5df234723f1dddb71a52c39c3dfc4ede24fb", "Url": "https://api.github.com/repos/AyushR1/KernelAdiutor-Mod", "Date": "2017-07-11T09:37:17Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.grarak.kerneladiutor.utils.kernel.cpu.Temperature.CPU_NODE) != null) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8719/buggy-version/app.src.main.java.com.grarak.kerneladiutor.utils.kernel.cpu.Temperature.java", "BodyUseAPI": [], "Fixed commit": "095d5df234723f1dddb71a52c39c3dfc4ede24fb", "Url": "https://api.github.com/repos/AyushR1/KernelAdiutor-Mod", "Date": "2017-07-11T09:37:17Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((node.state.pokemonsSoFar) <= 0) && ((cleaned) == 1)) emptyVisitedStates();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3080/buggy-version/GottaCatchThemAll.src.GottaCatchThemAll.java", "BodyUseAPI": [], "Fixed commit": "3d8a5f75f506a95e0a810c3f39abf312b9460e26", "Url": "https://api.github.com/repos/maggie-moheb/GottaCatchThemAll", "Date": "2016-10-13T19:13:22Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["line.value.indexOf(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (end < 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5923/buggy-version/markdown.src.main.java.net.dgardiner.markdown.flavours.github.blocks.GithubTaskListBlock.java", "BodyUseAPI": [], "Fixed commit": "39f4385a2bb440b67709ee1b59673ef47013b4f0", "Url": "https://api.github.com/repos/fuzeman/markdown-java", "Date": "2016-05-23T01:47:47Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getAction()) == (org.bukkit.event.block.Action.RIGHT_CLICK_BLOCK)) { if ((phase == 11) || (phase == 12)) player.sendMessage(\"\u00a7bBad click! We expected a \u00a7bleft click\u00a7c ;)\"); if (phase == 15) { e.setCancelled(true); if ((e.getAction()) != (org.bukkit.event.block.Action.RIGHT_CLICK_BLOCK)) return; fr.dariusmtn.minetrain.object.Station station = pe.getStation(); org.bukkit.Location clickedLoc = e.getClickedBlock().getLocation(); org.bukkit.block.BlockFace clickedFace = e.getBlockFace(); org.bukkit.block.Block button = clickedLoc.getBlock().getRelative(clickedFace); int count = 0; for (org.bukkit.Location starts : station.getStartLocations()) { if ((starts.distance(button.getLocation())) <= 10) { count++; } } if (count == 0) { player.sendMessage(\"\u00a74\u00a7l!\u00a7c There aren't nearby minecart starts \u00a7o(< 10m)\u00a7c at this location.\"); return; } button.setType(Material.WOOD_BUTTON); org.bukkit.material.Button but = new org.bukkit.material.Button(button.getType(), button.getData()); but.setFacingDirection(clickedFace); button.setData(but.getData()); station.addButton(button.getLocation()); clickedLoc.getWorld().spawnParticle(Particle.FLAME, button.getLocation().add(0.5, 0.5, 0.5), 20, 0.1, 0.1, 0.1, 0.05); pe.setPhase(16); player.sendMessage(\" \"); player.sendMessage(((((((\"\u00a7aAdded departure button: \u00a7f(\u00a77\u00a7o\" + (clickedLoc.getX())) + \"\u00a7f, \u00a77\u00a7o\") + (clickedLoc.getY())) + \"\u00a7f, \u00a77\u00a7o\") + (clickedLoc.getZ())) + \"\u00a7f)\")); player.sendMessage(\"\u00a77\u00a7l\u00a7m-----\"); plugin.getEditorMessages().sendEditorMessage(player, 16); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8150/buggy-version/MineTrain.src.fr.dariusmtn.minetrain.listeners.PlayerInteractListener.java", "BodyUseAPI": ["org.bukkit.event.player.PlayerInteractEvent.setCancelled(boolean)", "org.bukkit.event.player.PlayerInteractEvent.getClickedBlock()", "org.bukkit.event.player.PlayerInteractEvent.getBlockFace()", "e.getClickedBlock().getLocation()", "org.bukkit.event.player.PlayerInteractEvent.getAction()"], "Fixed commit": "a3bf08fe9b82a284e7b39e96c807fca82b2fd2e1", "Url": "https://api.github.com/repos/Slaymd/MineTrain", "Date": "2017-09-11T17:44:51Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.rockwellcollins.atc.agree.linking.AgreeLinkingService.findClassifier(org.eclipse.emf.ecore.EObject,org.eclipse.emf.ecore.EReference,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (e instanceof org.osate.aadl2.DataType) { e = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5142/buggy-version/fm-workbench.agree.com.rockwellcollins.atc.agree.src.com.rockwellcollins.atc.agree.linking.AgreeLinkingService.java", "BodyUseAPI": [], "Fixed commit": "c68d810d156fd1513b7a3ba16f632e24cd3567a4", "Url": "https://api.github.com/repos/smaccm/smaccm", "Date": "2014-04-28T14:29:27Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (current == null) { directoryDisplays.add(comicDir.getName()); }else { directoryDisplays.add(android.text.TextUtils.join(\" | \", intermediateDirs)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5442/buggy-version/app.src.main.java.com.nkanaev.comics.managers.DirectoryListingManager.java", "BodyUseAPI": [], "Fixed commit": "6a97f028f28f50c1eb70a44339b01bc105c474ce", "Url": "https://api.github.com/repos/nkanaev/bubble", "Date": "2016-07-20T06:07:57Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nioSSLChannel) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2743/buggy-version/jestful-client-aio.src.main.java.org.qfox.jestful.client.aio.connection.HttpsAioConnection.java", "BodyUseAPI": [], "Fixed commit": "e2b4972cfebd869c46e74651155af3a752871be0", "Url": "https://api.github.com/repos/core-lib/jestful", "Date": "2017-11-30T10:13:39Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nioSSLChannel) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2743/buggy-version/jestful-client-nio.src.main.java.org.qfox.jestful.client.nio.connection.HttpsNioConnection.java", "BodyUseAPI": [], "Fixed commit": "e2b4972cfebd869c46e74651155af3a752871be0", "Url": "https://api.github.com/repos/core-lib/jestful", "Date": "2017-11-30T10:13:39Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.soapboxrace.core.bo.TokenSessionBO.getActiveLobbyId(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((activeLobbyId != null) && (!(activeLobbyId.equals(0L)))) { lobbyBO.deleteLobbyEntrant(activePersonaId, activeLobbyId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/299/buggy-version/src.main.java.com.soapboxrace.core.api.MatchMaking.java", "BodyUseAPI": ["com.soapboxrace.core.bo.LobbyBO.deleteLobbyEntrant(java.lang.Long,java.lang.Long)"], "Fixed commit": "7c91f67764f476fe16c989f6e5ad3f236f63939d", "Url": "https://api.github.com/repos/SoapboxRaceWorld/soapbox-race-core", "Date": "2017-05-27T02:10:44Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((finalMerger) != null) { finalMerger.setStopProcess(true); mergerQueue.offer(finalMerger); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/661/buggy-version/processing.src.main.java.org.apache.carbondata.processing.newflow.sort.impl.UnsafeBatchParallelReadMergeSorterImpl.java", "BodyUseAPI": [], "Fixed commit": "5703d884fef20ddcda6159a2e1dd87d6ccdfc977", "Url": "https://api.github.com/repos/dhatchayani/carbondata", "Date": "2017-06-15T11:02:09Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null != (indicatorSource.getHostName())) { return indicatorSource.getHostName().toLowerCase(); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5494/buggy-version/threatconnect-parser.src.main.java.com.threatconnect.sdk.parser.service.writer.HostWriter.java", "BodyUseAPI": ["com.threatconnect.sdk.parser.service.writer.HostWriter.getHostName()", "indicatorSource.getHostName().toLowerCase()"], "Fixed commit": "1233dd387b0bb2c540b66b9ee23d46b35d4a7ad8", "Url": "https://api.github.com/repos/ThreatConnect-Inc/threatconnect-java", "Date": "2016-02-11T16:51:11Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null != (indicatorSource.getAddress())) { return indicatorSource.getAddress().toLowerCase(); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5494/buggy-version/threatconnect-parser.src.main.java.com.threatconnect.sdk.parser.service.writer.EmailAddressWriter.java", "BodyUseAPI": ["com.threatconnect.sdk.parser.service.writer.EmailAddressWriter.getAddress()", "indicatorSource.getAddress().toLowerCase()"], "Fixed commit": "1233dd387b0bb2c540b66b9ee23d46b35d4a7ad8", "Url": "https://api.github.com/repos/ThreatConnect-Inc/threatconnect-java", "Date": "2016-02-11T16:51:11Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (remainingInBuffer < (java.lang.Integer.BYTES)) { if ((fillBuffer(this.buffer)) < 0) { return null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3016/buggy-version/src.main.java.org.neverfear.util.messaging.LengthPrefixedMessageReader.java", "BodyUseAPI": [], "Fixed commit": "dfccddb54e77a1049037c4cf45b011815be6d79c", "Url": "https://api.github.com/repos/kay/neverfear-util", "Date": "2015-01-28T23:43:08Z"},
{"Line": "=>1689", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"udf\".equalsIgnoreCase(resDef.getName())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4788/buggy-version/security-admin.src.main.java.org.apache.ranger.biz.ServiceDBStore.java", "BodyUseAPI": [], "Fixed commit": "b12e761dbfb63d765bcfa8b1265f0a5b8955d2a4", "Url": "https://api.github.com/repos/apache/ranger", "Date": "2015-06-05T06:49:47Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTokenTracker) != null) mTokenTracker.stopTracking();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4289/buggy-version/app.src.main.java.com.android.memeinn.user.FacebookLoginActivity.java", "BodyUseAPI": [], "Fixed commit": "b48779f5c7e85b571639044870b18d6a093e8fad", "Url": "https://api.github.com/repos/chriszhou1992/Me-Me-Inn", "Date": "2015-04-25T12:52:47Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mProfileTracker) != null) mProfileTracker.stopTracking();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4289/buggy-version/app.src.main.java.com.android.memeinn.user.FacebookLoginActivity.java", "BodyUseAPI": [], "Fixed commit": "b48779f5c7e85b571639044870b18d6a093e8fad", "Url": "https://api.github.com/repos/chriszhou1992/Me-Me-Inn", "Date": "2015-04-25T12:52:47Z"},
{"Line": "=>3060", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((macros.size()) > 0) { edit_macro = macros.get(contents.getLineIdx()); if ((contents.getColumnIdx()) == 1) { nextScreen(ScreenMode.SET_MACRO_PROG); }else if ((contents.getColumnIdx()) == 2) { nextScreen(ScreenMode.SET_MACRO_TYPE); }else if ((contents.getColumnIdx()) == 3) { if (!(macros.get(contents.getLineIdx()).isManual())) nextScreen(ScreenMode.SET_MACRO_BINDING); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6065/buggy-version/RobotRun.src.core.RobotRun.java", "BodyUseAPI": ["macros.get(contents.getLineIdx()).isManual()", "java.util.ArrayList<programming.Macro>.get(contents.getLineIdx())", "java.util.ArrayList<programming.Macro>.get(contents.getLineIdx())"], "Fixed commit": "e1f07a4ab058882657cdd309061bdb90cf86cc94", "Url": "https://api.github.com/repos/skuhl/RobotRun", "Date": "2017-06-13T21:58:48Z"},
{"Line": "=>3067", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((contents.getColumnIdx()) == 3) { if (!(macros.get(contents.getLineIdx()).isManual())) nextScreen(ScreenMode.SET_MACRO_BINDING); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6065/buggy-version/RobotRun.src.core.RobotRun.java", "BodyUseAPI": ["screen.MenuScroll.getLineIdx()", "java.util.ArrayList<programming.Macro>.get(contents.getLineIdx())", "macros.get(contents.getLineIdx()).isManual()"], "Fixed commit": "e1f07a4ab058882657cdd309061bdb90cf86cc94", "Url": "https://api.github.com/repos/skuhl/RobotRun", "Date": "2017-06-13T21:58:48Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tracker) != null) tracker.showOutput(); else new main.java.tddt.TDDTDialog(\"alert\", \"Please first load an exercise\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6726/buggy-version/src.main.java.tddt.Controller.java", "BodyUseAPI": [], "Fixed commit": "a1850ba35655384aee751c186749bb71a78ffce0", "Url": "https://api.github.com/repos/ProPra16/programmierpraktikum-abschlussprojekt-nimmdochirgendeinennamen", "Date": "2016-07-11T19:30:14Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (types != null) { java.util.List<java.lang.String> typeStrList = new java.util.ArrayList(types.length); for (kalang.core.Type t : types) { typeStrList.add(t.getName()); } typeStr = java.lang.String.join(\",\", typeStrList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7366/buggy-version/src.main.java.kalang.util.AstUtil.java", "BodyUseAPI": [], "Fixed commit": "375297b686c504a6f7eb70d2e96e0d10626e6bd5", "Url": "https://api.github.com/repos/kasonyang/kalang", "Date": "2016-04-02T04:41:47Z"},
{"Line": "=>2030", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getRGBChannelCount()) == 1) || ((getRGBChannelCount()) == (getSizeC()))) { if (((getSizeC()) > 1) && ((getSizeT()) > 1)) { ms.dimensionOrder += \"C\"; } for (java.lang.Long nBytes : bytes) { java.lang.String axis = bytesPerAxis.get(nBytes); if ((ms.dimensionOrder.indexOf(axis)) == (-1)) { ms.dimensionOrder += axis; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8024/buggy-version/components.formats-gpl.src.loci.formats.in.LIFReader.java", "BodyUseAPI": [], "Fixed commit": "4a4902caa95a56388a774428db4350b915d75803", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-04-01T09:39:07Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((topics) != null) topics.unregisterAll();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8633/buggy-version/fr.inria.soctrace.tools.ocelotl.statistics.src.fr.inria.soctrace.tools.ocelotl.statistics.view.StatTableView.java", "BodyUseAPI": [], "Fixed commit": "ce333170b30041019625623205529bad8b975880", "Url": "https://api.github.com/repos/soctrace-inria/ocelotl", "Date": "2014-12-19T13:59:55Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMediaPlayer) != null) { play(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4451/buggy-version/app.src.main.java.com.n8.spotifystreamer.playback.PlaybackService.java", "BodyUseAPI": [], "Fixed commit": "5a546b92e1e579bcac5fffabcc2a5eb5ea0be7b0", "Url": "https://api.github.com/repos/n8ebel/android_spotify_streamer", "Date": "2015-08-01T03:28:57Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((geo.getNumGeometries()) > 1) || ((ogs.geo.getNumGeometries()) > 1)) { return gcIntersects(geo, ogs.geo); }else { return geo.intersects(ogs.getGeometry()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1007/buggy-version/src.no.uio.ifi.qure.space.GeometrySpace.java", "BodyUseAPI": ["com.vividsolutions.jts.geom.Geometry.intersects(com.vividsolutions.jts.geom.Geometry)", "no.uio.ifi.qure.space.GeometrySpace.getGeometry()", "no.uio.ifi.qure.space.GeometrySpace.gcIntersects(com.vividsolutions.jts.geom.Geometry,com.vividsolutions.jts.geom.Geometry)"], "Fixed commit": "126475c3781c4b15d86b92e6c319063513ae74bd", "Url": "https://api.github.com/repos/leifhka/Qure", "Date": "2017-10-03T08:34:40Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((geo.getNumGeometries()) > 1) || ((ogs.geo.getNumGeometries()) > 1)) { return gcCoveredBy(geo, ogs.geo); }else { return geo.coveredBy(ogs.getGeometry()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1007/buggy-version/src.no.uio.ifi.qure.space.GeometrySpace.java", "BodyUseAPI": ["no.uio.ifi.qure.space.GeometrySpace.getGeometry()", "com.vividsolutions.jts.geom.Geometry.coveredBy(com.vividsolutions.jts.geom.Geometry)", "no.uio.ifi.qure.space.GeometrySpace.gcCoveredBy(com.vividsolutions.jts.geom.Geometry,com.vividsolutions.jts.geom.Geometry)"], "Fixed commit": "126475c3781c4b15d86b92e6c319063513ae74bd", "Url": "https://api.github.com/repos/leifhka/Qure", "Date": "2017-10-03T08:34:40Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["daxum.temporalconvergence.item.ItemTimeFreezer.isActive(entity.getItem())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((isActive(entity.getItem())) != active) { entity.setItem(entity.getItem()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7806/buggy-version/src.main.java.daxum.temporalconvergence.item.ItemTimeFreezer.java", "BodyUseAPI": ["net.minecraft.entity.item.EntityItem.getItem()", "net.minecraft.entity.item.EntityItem.setItem(entity.getItem())"], "Fixed commit": "e905c66203a3601270bd11ef6f253a05275b8d29", "Url": "https://api.github.com/repos/daxum/TemporalConvergence", "Date": "2017-07-09T01:56:33Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.identity.workflow.mgt.dao.WorkflowDAO.getWorkflow(workflow.getWorkflowId())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(org.apache.commons.lang.StringUtils.equals(oldWorkflow.getWorkflowName(), workflow.getWorkflowName()))) { org.wso2.carbon.identity.workflow.mgt.util.WorkflowManagementUtil.deleteWorkflowRole(org.apache.commons.lang.StringUtils.deleteWhitespace(oldWorkflow.getWorkflowName())); org.wso2.carbon.identity.workflow.mgt.util.WorkflowManagementUtil.createAppRole(org.apache.commons.lang.StringUtils.deleteWhitespace(workflow.getWorkflowName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4824/buggy-version/components.workflow-mgt.org.wso2.carbon.identity.workflow.mgt.src.main.java.org.wso2.carbon.identity.workflow.mgt.WorkflowManagementServiceImpl.java", "BodyUseAPI": ["org.wso2.carbon.identity.workflow.mgt.util.WorkflowManagementUtil.deleteWorkflowRole(org.apache.commons.lang.StringUtils.deleteWhitespace(oldWorkflow.getWorkflowName()))", "org.apache.commons.lang.StringUtils.deleteWhitespace(workflow.getWorkflowName())", "org.wso2.carbon.identity.workflow.mgt.bean.Workflow.getWorkflowName()", "org.wso2.carbon.identity.workflow.mgt.bean.Workflow.getWorkflowName()", "org.apache.commons.lang.StringUtils.deleteWhitespace(oldWorkflow.getWorkflowName())", "org.wso2.carbon.identity.workflow.mgt.util.WorkflowManagementUtil.createAppRole(org.apache.commons.lang.StringUtils.deleteWhitespace(workflow.getWorkflowName()))"], "Fixed commit": "4abe5854c33e07c951ebb352745d5335b8f0847c", "Url": "https://api.github.com/repos/Pushpalanka/carbon-identity", "Date": "2015-12-10T05:00:11Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!annotationFound) { annotationList.add(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8476/buggy-version/src.util.ExperimentData.java", "BodyUseAPI": [], "Fixed commit": "aafb4989226f95483381abbe7d9913a8e56efdaa", "Url": "https://api.github.com/repos/genomizer/genomizer-desktop", "Date": "2014-05-12T12:24:34Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tkomiya.models.VocabList.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((editedVocab.getTranslation(language)) == null) { editedVocab.addLanguage(language, ((java.lang.String) (aValue))); }else { editedVocab.editTranslation(language, ((java.lang.String) (aValue))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7543/buggy-version/src.com.tkomiya.infrastructure.VocabListTableModel.java", "BodyUseAPI": ["com.tkomiya.models.Vocab.addLanguage(int,java.lang.Object)", "com.tkomiya.models.Vocab.editTranslation(int,java.lang.Object)"], "Fixed commit": "25372fcf8900db5b0f7b0463fea2e2a0b471a931", "Url": "https://api.github.com/repos/tkomiya24/VocabGenerator", "Date": "2015-04-13T03:07:17Z"},
{"Line": "=>475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.dfki.vsm.runtime.activity.AbstractActivity.getActor()", "de.dfki.vsm.runtime.activity.AbstractActivity.getName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((activity_name.equalsIgnoreCase(\"FocalLength\")) && (activity_actor.equalsIgnoreCase(\"player\"))) { triCatWorldAct = mActionLoader.loadTWorldAnimation(activity_name, activity.get(\"value\"), activity.get(\"time\")); if (activity_actor.equalsIgnoreCase(\"player\")) { triCatWorldAct.resetActionCmd(((activity_actor + \"_\") + (triCatWorldAct.getActionCmd()))); } }else if ((activity_name.equalsIgnoreCase(\"FieldOfView\")) && (activity_actor.equalsIgnoreCase(\"player\"))) { triCatWorldAct = mActionLoader.loadTWorldAnimation(activity_name, activity.get(\"value\"), activity.get(\"time\")); if (activity_actor.equalsIgnoreCase(\"player\")) { triCatWorldAct.resetActionCmd(((activity_actor + \"_\") + (triCatWorldAct.getActionCmd()))); } }else if ((activity_name.equalsIgnoreCase(\"ResetFieldOfView\")) && (activity_actor.equalsIgnoreCase(\"player\"))) { triCatWorldAct = mActionLoader.loadTWorldAnimation(activity_name, activity.get(\"value\"), activity.get(\"time\")); if (activity_actor.equalsIgnoreCase(\"player\")) { triCatWorldAct.resetActionCmd(((activity_actor + \"_\") + (triCatWorldAct.getActionCmd()))); } }else if ((activity_name.equalsIgnoreCase(\"DefaultFocalLength\")) && (activity_actor.equalsIgnoreCase(\"player\"))) { triCatWorldAct = mActionLoader.loadTWorldAnimation(activity_name, activity.get(\"viewtarget\")); if (activity_actor.equalsIgnoreCase(\"player\")) { triCatWorldAct.resetActionCmd(((activity_actor + \"_\") + (triCatWorldAct.getActionCmd()))); } }else if ((activity_name.equalsIgnoreCase(\"CameraOffset\")) && (activity_actor.equalsIgnoreCase(\"player\"))) { triCatWorldAct = mActionLoader.loadTWorldAnimation(activity_name, activity.get(\"x\"), activity.get(\"y\"), activity.get(\"z\")); if (activity_actor.equalsIgnoreCase(\"player\")) { triCatWorldAct.resetActionCmd(((activity_actor + \"_\") + (triCatWorldAct.getActionCmd()))); } }else if ((activity_name.equalsIgnoreCase(\"Scale\")) && (activity_actor.equalsIgnoreCase(\"player\"))) { triCatWorldAct = mActionLoader.loadTWorldAnimation(activity_name, activity.get(\"value\")); if (activity_actor.equalsIgnoreCase(\"player\")) { triCatWorldAct.resetActionCmd(((activity_actor + \"_\") + (triCatWorldAct.getActionCmd()))); } }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5640/buggy-version/src.de.dfki.vsm.xtension.tricatworld.TriCatWorldExecutor.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "de.dfki.vsm.xtension.tricatworld.xml.util.ActionLoader.loadTWorldAnimation(java.lang.String,activity.get(\"viewtarget\"))", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "de.dfki.vsm.xtension.tricatworld.xml.command.object.action.TriCatWorldActObject.resetActionCmd(((activity_actor + \"_\") + (triCatWorldAct.getActionCmd())))", "de.dfki.vsm.xtension.tricatworld.xml.command.object.action.TriCatWorldActObject.resetActionCmd(((activity_actor + \"_\") + (triCatWorldAct.getActionCmd())))", "java.lang.String.equalsIgnoreCase(java.lang.String)", "de.dfki.vsm.xtension.tricatworld.xml.util.ActionLoader.loadTWorldAnimation(java.lang.String,activity.get(\"value\"))", "de.dfki.vsm.xtension.tricatworld.xml.util.ActionLoader.loadTWorldAnimation(java.lang.String,activity.get(\"value\"),activity.get(\"time\"))", "java.lang.String.equalsIgnoreCase(java.lang.String)", "de.dfki.vsm.xtension.tricatworld.xml.command.object.action.TriCatWorldActObject.resetActionCmd(((activity_actor + \"_\") + (triCatWorldAct.getActionCmd())))", "de.dfki.vsm.xtension.tricatworld.xml.util.ActionLoader.loadTWorldAnimation(java.lang.String,activity.get(\"x\"),activity.get(\"y\"),activity.get(\"z\"))", "de.dfki.vsm.xtension.tricatworld.xml.command.object.action.TriCatWorldActObject.resetActionCmd(((activity_actor + \"_\") + (triCatWorldAct.getActionCmd())))", "de.dfki.vsm.xtension.tricatworld.xml.util.ActionLoader.loadTWorldAnimation(java.lang.String,activity.get(\"value\"),activity.get(\"time\"))", "java.lang.String.equalsIgnoreCase(java.lang.String)", "de.dfki.vsm.xtension.tricatworld.xml.util.ActionLoader.loadTWorldAnimation(java.lang.String,activity.get(\"value\"),activity.get(\"time\"))", "de.dfki.vsm.xtension.tricatworld.xml.command.object.action.TriCatWorldActObject.resetActionCmd(((activity_actor + \"_\") + (triCatWorldAct.getActionCmd())))", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "de.dfki.vsm.xtension.tricatworld.xml.command.object.action.TriCatWorldActObject.resetActionCmd(((activity_actor + \"_\") + (triCatWorldAct.getActionCmd())))", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "85b528e2c2f04de4b670e31bb9850e5116a8d2a8", "Url": "https://api.github.com/repos/SceneMaker/VisualSceneMaker", "Date": "2017-06-13T13:35:04Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(knxprojfile.exists())) { throw new java.lang.IllegalArgumentException(((\"Given file '\" + (knxprojfile.getAbsolutePath())) + \"' does not exist\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7943/buggy-version/src.main.java.de.root1.ets4reader.KnxProjReader.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()"], "Fixed commit": "a45fc80174657cd2a5669ed2fe7ab67714a0dfb2", "Url": "https://api.github.com/repos/tuxedo0801/ETS4Reader", "Date": "2015-10-26T11:57:04Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (projects.isEmpty()) { log.warn(\"No project found. Skipping userconfiguration.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7943/buggy-version/src.main.java.de.root1.ets4reader.KnxProjReader.java", "BodyUseAPI": [], "Fixed commit": "a45fc80174657cd2a5669ed2fe7ab67714a0dfb2", "Url": "https://api.github.com/repos/tuxedo0801/ETS4Reader", "Date": "2015-10-26T11:57:04Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tum.cms.sim.momentum.visualization.utility.AnimationCalculations.createConcurrentAnimation()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((concurrentMovements.getTotalDuration().equals(Duration.ZERO)) && (coreController.getInteractionViewController().getTimeLineModel().getPlaying())) { double animationDurationInSecond = tum.cms.sim.momentum.visualization.utility.AnimationCalculations.calculateAnimationDuration(coreController); javafx.animation.PauseTransition waitTransition = new javafx.animation.PauseTransition(javafx.util.Duration.seconds(animationDurationInSecond)); concurrentMovements.getChildren().add(waitTransition); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/9078/buggy-version/momentum-visualization.momentum-visualization-2D.src.main.java.tum.cms.sim.momentum.visualization.utility.AnimationCalculations.java", "BodyUseAPI": ["concurrentMovements.getChildren().add(javafx.animation.PauseTransition)", "tum.cms.sim.momentum.visualization.utility.AnimationCalculations.calculateAnimationDuration(tum.cms.sim.momentum.visualization.controller.CoreController)", "javafx.animation.ParallelTransition.getChildren()"], "Fixed commit": "effc660241850f2b828a5738a86d31997a506ef0", "Url": "https://api.github.com/repos/tumcms/MomenTUM", "Date": "2017-11-30T13:58:51Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bestFeasible[1]) == null) java.lang.System.err.println(\"Error! No feasible solution found.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/367/buggy-version/VRPTW.src.com.GMGroup.Genetic.SearchProgram.java", "BodyUseAPI": [], "Fixed commit": "6315ee1f08d74bbcfffd082207be92bbfbc366c9", "Url": "https://api.github.com/repos/FrenkT/VRPTW_GMGroup", "Date": "2015-01-02T16:29:53Z"},
{"Line": "=>697", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (search_data) android.widget.Toast.makeText(this, getString(R.string.search_no_responce), Toast.LENGTH_SHORT).show(); else { if ((android.os.Build.VERSION.SDK_INT) >= (android.os.Build.VERSION_CODES.HONEYCOMB)) { lvMain.addHeaderView(lvHeaderEmptyCategory); }else { android.widget.Toast.makeText(this, getString(R.string.kategory_no_responce), Toast.LENGTH_SHORT).show(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1464/buggy-version/app.src.main.java.com.example.dimonn445.museum.ExhibitsListActivity.java", "BodyUseAPI": [], "Fixed commit": "980606ce2edd58e52a7d8704089aa54f245a767b", "Url": "https://api.github.com/repos/Dimonn445/Museum", "Date": "2016-05-24T10:00:54Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_group) != null) { jsonForm.add(\"group\", new com.google.gson.JsonPrimitive(m_group)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6970/buggy-version/src.Task.java", "BodyUseAPI": [], "Fixed commit": "1c9550277e859c933c6d7190cdc425c51b381c13", "Url": "https://api.github.com/repos/programster/Job-Scheduler", "Date": "2014-12-05T11:42:02Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Maps.mapNum) > 2) { teapot_saga_iv.Window.setText(\"Game Over\"); break; }else { teapot_saga_iv.Render.rend(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2254/buggy-version/src.teapot_saga_iv.Main.java", "BodyUseAPI": [], "Fixed commit": "c853fb30b2ea1efc04c453d582def8d380655049", "Url": "https://api.github.com/repos/NathanJMichlo/Teapot-Saga-IV", "Date": "2013-09-11T20:00:45Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (st == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1558/buggy-version/src.main.java.de.nak.iaa.web.view.action.PruefungsleistungenEintragenAction.java", "BodyUseAPI": [], "Fixed commit": "de15a2fab3f5b36e848d78049baaaa8f4201f527", "Url": "https://api.github.com/repos/flrnb/iaa_hausarbeit", "Date": "2012-11-05T16:00:32Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((glDrawable) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/650/buggy-version/CG-N3.src.main.view.Render.java", "BodyUseAPI": [], "Fixed commit": "4be7a4a507746d4391dc279c6fe876a72b33ebf5", "Url": "https://api.github.com/repos/GabrielBiz/cg-n3", "Date": "2016-04-10T22:26:15Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.compscicenter.jetbrains.octave.parser.OctaveExpressionParsing.getTokenType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (OctaveTokenTypes.SET_END_STATEMENT.contains(firstToken)) { myPsiBuilder.advanceLexer(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4701/buggy-version/src.ru.compscicenter.jetbrains.octave.parser.OctaveExpressionParsing.java", "BodyUseAPI": [], "Fixed commit": "86f4e60f07391a5be555d83395f3b7bf6f1d0970", "Url": "https://api.github.com/repos/markina/Octave4IntelliJ", "Date": "2014-11-10T11:34:22Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input == null) { debug(\"Received null string, removing client ...\"); remove(ID); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1439/buggy-version/src.edu.cmu.cs.in.network.INSocketServerBase.java", "BodyUseAPI": [], "Fixed commit": "e62fdc35e0d45863d155a219df278c45a264ca5f", "Url": "https://api.github.com/repos/Mindtoeye/Hoop", "Date": "2012-05-13T16:29:39Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((root.getNodeName().equals(\"ack\")) == true) { debug(\"Processing acknowledge messsage ...\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1439/buggy-version/src.edu.cmu.cs.in.INHoopMessageHandler.java", "BodyUseAPI": [], "Fixed commit": "e62fdc35e0d45863d155a219df278c45a264ca5f", "Url": "https://api.github.com/repos/Mindtoeye/Hoop", "Date": "2012-05-13T16:29:39Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((issue.line()) == null) { commitDate = getLastCommitDate(issue.componentKey()); org.sonar.plugins.issueassign.Blame.LOG.debug(\"Commit date for issue {} (file {}) is {}\", issue.key(), issue.componentKey(), commitDate.toString()); }else { commitDate = getMeasuresForResource(issue.componentKey()).getLastCommitsByLine().get(issue.line()); org.sonar.plugins.issueassign.Blame.LOG.debug(\"Commit date for issue {} (file {} line {}) is {}\", issue.key(), issue.componentKey(), issue.line(), commitDate.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6324/buggy-version/src.main.java.org.sonar.plugins.issueassign.Blame.java", "BodyUseAPI": ["org.sonar.api.issue.Issue.line()", "org.sonar.api.issue.Issue.line()", "org.sonar.plugins.issueassign.Blame.getMeasuresForResource(issue.componentKey())", "org.sonar.api.issue.Issue.componentKey()", "org.sonar.api.issue.Issue.componentKey()", "org.sonar.api.issue.Issue.key()", "getMeasuresForResource(issue.componentKey()).getLastCommitsByLine().get(issue.line())", "org.sonar.api.issue.Issue.componentKey()", "org.sonar.api.issue.Issue.key()", "org.sonar.api.issue.Issue.componentKey()", "org.slf4j.Logger.debug(java.lang.String,issue.key(),issue.componentKey(),java.lang.String)", "org.slf4j.Logger.debug(java.lang.String,issue.key(),issue.componentKey(),issue.line(),java.lang.String)", "org.sonar.plugins.issueassign.Blame.getLastCommitDate(issue.componentKey())", "org.sonar.plugins.issueassign.measures.ScmMeasures.getLastCommitsByLine()"], "Fixed commit": "970485f70e5e60eb50b0cf645e1a93b3add861a9", "Url": "https://api.github.com/repos/SonarCommunity/sonar-issue-assign", "Date": "2014-08-21T11:37:49Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (width_tmp > height_tmp) { width_tmp = o.outHeight; height_tmp = o.outWidth; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2015/buggy-version/wochacha.src.com.example.wochacha.fragment.HomeFragment.java", "BodyUseAPI": [], "Fixed commit": "3cdd2dc6d1631e5936db11910993ab6a4451e70e", "Url": "https://api.github.com/repos/PagePinner/wochacha", "Date": "2015-01-21T01:27:25Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((check.getColor()) == (com.checkers.client.Cheek.whiteColor)) { return com.checkers.client.Cheek.CellStatus.MyCheck; }else { return com.checkers.client.Cheek.CellStatus.Enemy; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6888/buggy-version/src.main.java.com.checkers.client.Cheek.java", "BodyUseAPI": [], "Fixed commit": "dee01536bdaec78e977d98661031f6e3e5e40986", "Url": "https://api.github.com/repos/webslesar/CheckersClient", "Date": "2015-11-28T17:14:36Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sender) != null) sender.send(\"DIS:\", outStream);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3896/buggy-version/src.info.geared.corki.client.ChatSession.java", "BodyUseAPI": [], "Fixed commit": "e3ae0e5cf619cd5e2c5c559f988ce22103efddc4", "Url": "https://api.github.com/repos/ThinksInBits/Project-Corki", "Date": "2013-10-14T06:45:50Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((socket) != null) socket.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3896/buggy-version/src.info.geared.corki.client.ChatSession.java", "BodyUseAPI": [], "Fixed commit": "e3ae0e5cf619cd5e2c5c559f988ce22103efddc4", "Url": "https://api.github.com/repos/ThinksInBits/Project-Corki", "Date": "2013-10-14T06:45:50Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sender) != null) sender.stop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3896/buggy-version/src.info.geared.corki.client.ChatSession.java", "BodyUseAPI": [], "Fixed commit": "e3ae0e5cf619cd5e2c5c559f988ce22103efddc4", "Url": "https://api.github.com/repos/ThinksInBits/Project-Corki", "Date": "2013-10-14T06:45:50Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (countOfEmptyPlace == 0) { application.TicTacToeApp.neadNewGame = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2548/buggy-version/Tic-Tac-Toe.src.application.TicTacToeApp.java", "BodyUseAPI": [], "Fixed commit": "7beb56dd52d5a359a4a1a61f75ab220e37833727", "Url": "https://api.github.com/repos/asen1995/Tic-Tac-Toe", "Date": "2017-02-26T15:01:18Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (game_type.equals(\"FREEPLAY\")) { replayIntent.putExtra(\"LEVEL\", 0); replayIntent.putExtra(\"LIFE\", 0); replayIntent.putExtra(\"HINTS\", 1); }else if (game_type.equals(\"REGULAR\")) { replayIntent.putExtra(\"LEVEL\", 1); replayIntent.putExtra(\"LIFE\", 3); replayIntent.putExtra(\"HINTS\", 3); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2512/buggy-version/app.src.main.java.csci3320.thegallows.Endgame.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "dd80f92949be68777b045ba8e6a9e76a8f2c2a6f", "Url": "https://api.github.com/repos/csci3320-android/thegallows", "Date": "2016-04-22T22:13:15Z"},
{"Line": "=>473", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["NameResolver.Factory.newNameResolver(java.net.URI,io.grpc.Attributes)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (resolver == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1491/buggy-version/core.src.main.java.io.grpc.internal.AbstractManagedChannelImplBuilder.java", "BodyUseAPI": [], "Fixed commit": "afc43fd291cf9b2cbb6906f80a127352adf90742", "Url": "https://api.github.com/repos/zpencer/grpc-java", "Date": "2017-04-27T17:22:16Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nowsci.odm.CommonUtilities.getVAR(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((su.length()) > 5) s = su.substring(0, ((su.length()) - 4)); else s = su;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4588/buggy-version/odm.src.com.nowsci.odm.RegisterActivity.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "e37a8f7657bcf54ebee37cd86025f91f55cbf411", "Url": "https://api.github.com/repos/Fmstrat/odm", "Date": "2014-01-10T17:54:36Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((filters.length()) > 0) { filters = \"WHERE \" + filters; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2276/buggy-version/src.main.java.eu.hbp.mip.utils.DataUtil.java", "BodyUseAPI": [], "Fixed commit": "e75bf018c5b2c2afdeaab5029938861db041bb96", "Url": "https://api.github.com/repos/HBPMedical/portal-backend", "Date": "2017-06-26T15:49:08Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (left && right) { field.setAllFlippersEngaged(true); }else { field.setLeftFlippersEngaged(left); field.setRightFlippersEngaged(right); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2510/buggy-version/src.com.dozingcatsoftware.bouncy.FieldViewManager.java", "BodyUseAPI": ["com.dozingcatsoftware.bouncy.Field.setLeftFlippersEngaged(boolean)", "com.dozingcatsoftware.bouncy.Field.setRightFlippersEngaged(boolean)"], "Fixed commit": "84c121b411497cbd1179308dab294b35dccab708", "Url": "https://api.github.com/repos/dozingcat/Vector-Pinball", "Date": "2016-01-26T04:12:34Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((toolFlag != (IBurpExtenderCallbacks.TOOL_SCANNER)) || (!messageIsRequest)) { processHttpMessage(logEntry, toolFlag, requestResponse); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8116/buggy-version/src.main.java.loggerplusplus.LogManager.java", "BodyUseAPI": ["loggerplusplus.LogManager.processHttpMessage(loggerplusplus.LogEntry,int,loggerplusplus.IHttpRequestResponse)"], "Fixed commit": "a0f4bb24c0590d575ec61a204e654c1985819436", "Url": "https://api.github.com/repos/nccgroup/BurpSuiteLoggerPlusPlus", "Date": "2017-11-08T15:54:37Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.blade.kit.FileKit.exist(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (existInstall) { if (\"1\".equals(TaleConst.OPTIONS.get(\"allow_install\", \"0\"))) { request.attribute(\"is_install\", false); }else { request.attribute(\"is_install\", true); } }else { request.attribute(\"is_install\", false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5683/buggy-version/src.main.java.com.tale.controller.InstallController.java", "BodyUseAPI": [], "Fixed commit": "e72ae9e2bba2caa146c8c008c0bb9cfd12ca4645", "Url": "https://api.github.com/repos/hykes/tale", "Date": "2017-02-27T14:45:56Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["models.GameState.getTopCard(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((temp.getValue()) == 14) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3619/buggy-version/src.main.java.models.RuleBook.java", "BodyUseAPI": [], "Fixed commit": "1de45a962618e28d615c0fd259246d104965a681", "Url": "https://api.github.com/repos/cs361fall2017/team5", "Date": "2017-12-03T22:59:57Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((CPAParameters.metaheuristicParameters.get(\"Candidate Population Size:\")) != null) { CPAParameters.candidatePopulationSize = CPAParameters.metaheuristicParameters.get(\"Candidate Population Size:\").intValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8323/buggy-version/uk.ac.ed.inf.pepa.eclipse.ui.src.uk.ac.ed.inf.pepa.eclipse.ui.wizards.capacityplanning.MetaHeuristicPopulation.java", "BodyUseAPI": [], "Fixed commit": "2958372d2d38b788f3d6d8c4df0ef3f2015345fe", "Url": "https://api.github.com/repos/wokemx/pepa", "Date": "2013-03-19T18:27:56Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.plugin.gcm.NotificationService.getInstance(context).isForeground()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!isPushPluginInForeground) { if (((extras.getString(com.plugin.gcm.GCMIntentService.MESSAGE)) != null) && ((extras.getString(com.plugin.gcm.GCMIntentService.MESSAGE).length()) != 0)) { createNotification(context, extras); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7011/buggy-version/src.android.com.plugin.gcm.GCMIntentService.java", "BodyUseAPI": [], "Fixed commit": "a955cc7e3fa876ce7184bf94de87ed4c82f147be", "Url": "https://api.github.com/repos/AppGyver/PushNotifications", "Date": "2015-02-18T12:19:48Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(super.getLastOutputTaskList().isEmpty())) { return super.getLastOutputTaskList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5046/buggy-version/src.logic.search.Search.java", "BodyUseAPI": ["logic.display.Display.getLastOutputTaskList()"], "Fixed commit": "3600737d385e88b4948d2ed863b4cd38dd6276d8", "Url": "https://api.github.com/repos/cs2103jan2016-t11-3j/main", "Date": "2016-03-29T04:32:41Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Task2_1.Main.getIntFromScanner(java.util.Scanner,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((index < (arrayList.size())) && (index >= 0)) { arrayList.remove(index); }else java.lang.System.out.println(\"Incorrect input! Try again!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3265/buggy-version/src.Task2_1.Main.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Integer>.remove(int)"], "Fixed commit": "5f80ce18c9af65879b7b83d51586054713f22dad", "Url": "https://api.github.com/repos/demandred91/JavaCore_1", "Date": "2017-05-19T21:54:09Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (curEpisodeName != null) { if (!(curEpisodeName.equals(\"\"))) { mListDataChild.get((\"Season \" + curSeasonNum)).add((((\"e\" + curEpisodeNum) + \" - \") + curEpisodeName)); }else { mListDataChild.get((\"Season \" + curSeasonNum)).add((\"e\" + curEpisodeNum)); } }else { mListDataChild.get((\"Season \" + curSeasonNum)).add((\"e\" + curEpisodeNum)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1060/buggy-version/app.src.main.java.com.android.rotem.showme.ExpandableListAdapter.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "cfc662615341486bdf370062d2a35ade6378f3fd", "Url": "https://api.github.com/repos/RotemShaanan/SHOWme", "Date": "2016-04-30T10:04:25Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mPresentation.getCompletionPercentage()) == 1) { mOutline = com.thespeakers_studio.thespeakersstudioapp.model.Outline.fromPresentation(this, mPresentation); render(); }else { returnActivityResult(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5476/buggy-version/app.src.main.java.com.thespeakers_studio.thespeakersstudioapp.activity.OutlineActivity.java", "BodyUseAPI": ["com.thespeakers_studio.thespeakersstudioapp.model.Outline.fromPresentation(com.thespeakers_studio.thespeakersstudioapp.activity.OutlineActivity,com.thespeakers_studio.thespeakersstudioapp.model.PresentationData)"], "Fixed commit": "8f2436eb4ea19ac732e110e72bd76f26792ec7cb", "Url": "https://api.github.com/repos/ShauvonM/speakersstudio", "Date": "2016-09-14T23:02:37Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.fs.Path.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((pathName.split(\"=\").length) != 2) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6989/buggy-version/indexing-hadoop.src.main.java.io.druid.indexer.path.PartitionPathSpec.java", "BodyUseAPI": [], "Fixed commit": "3df709ed8f543ab7625b9eed9977cca05a9a443f", "Url": "https://api.github.com/repos/sirpkt/druid", "Date": "2016-05-10T07:10:58Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.getGameScreen().isAdventure()) { g.setFont(new java.awt.Font(\"Minecraftia\", java.awt.Font.PLAIN, 18)); g.drawString((((\"Level \" + (this.getGameScreen().getLevel())) + \"/\") + (this.getGameScreen().getLevelMax())), 80, 38); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3445/buggy-version/Fabula.src.eu.theunitry.fabula.UNGameEngine.graphics.UNGraphicsView.java", "BodyUseAPI": [], "Fixed commit": "15ad010d634e910a9b0f3a45c19090e0d5d928fc", "Url": "https://api.github.com/repos/The-Unitry/fabula", "Date": "2015-12-10T09:22:45Z"},
{"Line": "=>452", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.kivSW.bluetoothreports.BluetoothReports.isBluetoothOn()) { com.kivSW.phonerecorderui.BlueToothDeviceSelect dlg2 = com.kivSW.phonerecorderui.BlueToothDeviceSelect.newInstance(this); dlg2.show(getFragmentManager(), \"receiveBlue\"); }else { com.kivSW.dialog.MessageDialog.newInstance(getText(R.string.Error).toString(), getText(R.string.bluetooth_is_turned_off).toString()).show(getFragmentManager(), \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6151/buggy-version/PhoneRecorder.converseRecorder.src.main.java.com.kivSW.phonerecorderui.PlayListScreenFragment.java", "BodyUseAPI": [], "Fixed commit": "c4e48c5c18a6bc47a14b23bc0aab1a6617253741", "Url": "https://api.github.com/repos/IvanKovalchuk/PhoneRecorder", "Date": "2015-01-20T15:22:01Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cur < 10) result = (result + \"00\") + cur; else if (cur < 100) result = (result + \"0\") + cur; else result = result + cur;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5665/buggy-version/burp.BurpExtender.java", "BodyUseAPI": [], "Fixed commit": "f9cecb6d09b19de7f4960bfac2457522ea2f5456", "Url": "https://api.github.com/repos/haxom/autoEdit", "Date": "2013-05-30T15:23:23Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (exportProfiles != null) { com.lightcrafts.jai.JAIContext.systemProfiles.addAll(exportProfiles); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8640/buggy-version/lightcrafts.src.com.lightcrafts.jai.JAIContext.java", "BodyUseAPI": [], "Fixed commit": "f7119c2ffadf658c4d850cbf8c45f050d860c1c3", "Url": "https://api.github.com/repos/Aries85/LightZone", "Date": "2016-04-14T14:27:38Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["LSH.computeSignatureMatrix(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((i + k) < (signatureMatrix.length)) vector.add(signatureMatrix[(i + k)][j]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5775/buggy-version/LSH.src.LSH.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Integer>.add(int)"], "Fixed commit": "f3e7ccd5de0f399eee254f71f3b440c76906d509", "Url": "https://api.github.com/repos/tdquang/LSH", "Date": "2015-01-22T02:22:58Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentGameState) != (net.ldvsoft.warofviruses.GameLogic.GameState.RUNNING)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8970/buggy-version/app.src.main.java.net.ldvsoft.warofviruses.GameLogic.java", "BodyUseAPI": [], "Fixed commit": "2c0537170e41cc5861014a1a9a8502ca1d6c586c", "Url": "https://api.github.com/repos/LDVSOFT/War-Of-Viruses", "Date": "2015-10-21T20:31:10Z"},
{"Line": "=>563", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["scene.getMaterials().get(((hit.getSurface().getMaterialIndex()) - 1))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (((hit != null) && ((allIntersectionOnRay.size()) == 0)) && ((material.getTrans()) == 0)) { allIntersectionOnRay.add(hit); stopCondition = false; }else if ((hit == null) || ((material.getTrans()) == 0)) { stopCondition = false; }else { allSurfaces.remove(hit.getSurface()); allIntersectionOnRay.add(hit); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/542/buggy-version/src.RayTracer.java", "BodyUseAPI": ["java.util.List<Surface>.remove(hit.getSurface())", "java.util.List<Intersection>.add(Intersection)", "java.util.List<Intersection>.add(Intersection)", "Intersection.getSurface()", "Material.getTrans()"], "Fixed commit": "f0bfb2164bc23378a0f33304ddce76710b05f435", "Url": "https://api.github.com/repos/itaiyifrach/RayCasting", "Date": "2017-06-04T16:34:50Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (SDK_INT > 8) { android.os.StrictMode.ThreadPolicy policy = new android.os.StrictMode.ThreadPolicy.Builder().permitAll().build(); android.os.StrictMode.setThreadPolicy(policy); java.lang.String type = \"NewArticle\"; com.woodamax.stm32kb.BackgroundWorker backgroundWorker = new com.woodamax.stm32kb.BackgroundWorker(parent.getContext()); backgroundWorker.onPreExecute(); backgroundWorker.doInBackground(type, title.getText().toString(), description.getText().toString(), articletext.getText().toString()); android.util.Log.d(\"EA\", \"Aricle written to DB\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4900/buggy-version/STM32KB.app.src.main.java.com.woodamax.stm32kb.ArticleScreen.java", "BodyUseAPI": [], "Fixed commit": "3b64253df8fc1a13c4426193786a4d37bb7ef923", "Url": "https://api.github.com/repos/m4xwe11o/STM32KB", "Date": "2017-06-27T22:22:39Z"},
{"Line": "=>515", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (pid != null) { if (rootStreams.containsKey(pid)) { logger.log((((((\"SQLiteDBHelper: adding childStream: id=\" + (childStream.getId())) + \", name=\") + (childStream.getName())) + \" to \") + pid)); rootStreams.get(pid).addChildStream(childStream); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6805/buggy-version/src.main.java.com.pryv.api.database.SQLiteDBHelper.java", "BodyUseAPI": ["rootStreams.get(pid).addChildStream(com.pryv.api.model.Stream)", "com.pryv.utils.Logger.log((((((\"SQLiteDBHelper: adding childStream: id=\" + (childStream.getId())) + \", name=\") + (childStream.getName())) + \" to \") + pid))", "java.util.Map<java.lang.String, com.pryv.api.model.Stream>.get(java.lang.String)", "java.util.Map<java.lang.String, com.pryv.api.model.Stream>.containsKey(java.lang.String)"], "Fixed commit": "2110f3df10b8efeac1761c7d118007a30faf7e26", "Url": "https://api.github.com/repos/pryv/lib-java", "Date": "2014-12-18T13:18:43Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.processes) == null) { this.processes = processes; }else { this.processes.clear(); this.processes.addAll(processes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1611/buggy-version/Kitodo-DataManagement.src.main.java.org.kitodo.data.database.beans.Batch.java", "BodyUseAPI": [], "Fixed commit": "cbdc9e190e15454edc17b1d24fccd2b7744f4158", "Url": "https://api.github.com/repos/Beacze/kitodo-production", "Date": "2017-05-11T09:27:14Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.batches) == null) { this.batches = batches; }else { this.batches.clear(); this.batches.addAll(batches); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1611/buggy-version/Kitodo-DataManagement.src.main.java.org.kitodo.data.database.beans.Process.java", "BodyUseAPI": [], "Fixed commit": "cbdc9e190e15454edc17b1d24fccd2b7744f4158", "Url": "https://api.github.com/repos/Beacze/kitodo-production", "Date": "2017-05-11T09:27:14Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mNavigationDrawerFragment) == null) { setupNavigationDrawer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/197/buggy-version/HexTCGDeckBuilder.src.com.ozawa.hextcgdeckbuilder.CustomDeckFragment.java", "BodyUseAPI": [], "Fixed commit": "4f87728f6e97d0b18491401ca66a9587e001a8be", "Url": "https://api.github.com/repos/havocx42/ozawa", "Date": "2014-01-29T18:08:53Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mNavigationDrawerFragment) == null) { setupNavigationDrawer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/197/buggy-version/HexTCGDeckBuilder.src.com.ozawa.hextcgdeckbuilder.CustomDeckFragment.java", "BodyUseAPI": [], "Fixed commit": "4f87728f6e97d0b18491401ca66a9587e001a8be", "Url": "https://api.github.com/repos/havocx42/ozawa", "Date": "2014-01-29T18:08:53Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (upc == null) { java.lang.System.err.println(\"ERROR: UPC cannot be null.\"); return new com.marketflip.shared.products.MF_Product(); }else if (!(EAN13CheckDigit.EAN13_CHECK_DIGIT.isValid(upc))) { java.lang.System.err.println(\"ERROR: UPC cannot be resolved as EAN/ISBN-13/UPC compliant.\"); return new com.marketflip.shared.products.MF_Product(); }else if (!(productSet.contains(upc))) { java.lang.System.err.println(\"ERROR: Product does not exist in database\"); return new com.marketflip.shared.products.MF_Product(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3998/buggy-version/src.com.marketflip.shared.data.MF_DatabaseAccessObject.java", "BodyUseAPI": ["java.util.HashSet<java.lang.String>.contains(java.lang.String)", "EAN13CheckDigit.EAN13_CHECK_DIGIT.isValid(java.lang.String)"], "Fixed commit": "6caeb79b70badb4cfa357f29bb6f2be6a1a2c03c", "Url": "https://api.github.com/repos/jasonmrimer/Market-Flip-Shared-Assets", "Date": "2015-11-01T20:55:28Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(uri.getScheme().equals(\"file\"))) { uri = file.getLocation().toFile().toURI(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3054/buggy-version/bndtools.jareditor.src.bndtools.jareditor.internal.JARContentTreePart.java", "BodyUseAPI": [], "Fixed commit": "fe0482f9ee9b6c5d022322341c3c1b32ad7a7e4f", "Url": "https://api.github.com/repos/bndtools/bndtools", "Date": "2013-10-31T10:45:54Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (TTTCore.config.RETURN_SERVER.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5426/buggy-version/src.main.java.net.caseif.ttt.util.helper.platform.BungeeHelper.java", "BodyUseAPI": [], "Fixed commit": "f8348822fb35d266508fb2f45caa7cc7808e197a", "Url": "https://api.github.com/repos/caseif/TTT", "Date": "2016-04-10T16:58:55Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(event.getRound().getMetadata().has(Constants.MetadataTag.ROUND_RESTARTING))) { net.caseif.ttt.util.helper.gamemode.RoundHelper.broadcast(event.getRound(), TTTCore.locale.getLocalizable(\"info.global.arena.event.join\").withPrefix(Constants.Color.INFO).withReplacements(((event.getChallenger().getName()) + (TTTCore.clh.getContributorString(pl))))); if (((TTTCore.config.OPERATING_MODE) != (net.caseif.ttt.util.config.OperatingMode.DEDICATED)) || (net.caseif.ttt.util.helper.platform.BungeeHelper.hasSupport())) { TTTCore.locale.getLocalizable(\"info.personal.arena.join.leave-tip\").withPrefix(Constants.Color.INFO).withReplacements(((Constants.Color.FLAIR) + \"/ttt leave\")).sendTo(pl); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5426/buggy-version/src.main.java.net.caseif.ttt.listeners.minigame.ChallengerListener.java", "BodyUseAPI": ["TTTCore.locale.getLocalizable(\"info.global.arena.event.join\").withPrefix(Constants.Color.INFO).withReplacements(((event.getChallenger().getName()) + (TTTCore.clh.getContributorString(pl))))", "net.caseif.flint.event.round.challenger.ChallengerJoinRoundEvent.getRound()", "event.getChallenger().getName()", "net.caseif.ttt.util.helper.gamemode.RoundHelper.broadcast(event.getRound(),TTTCore.locale.getLocalizable(\"info.global.arena.event.join\").withPrefix(Constants.Color.INFO).withReplacements(((event.getChallenger().getName()) + (TTTCore.clh.getContributorString(pl)))))", "net.caseif.flint.event.round.challenger.ChallengerJoinRoundEvent.getChallenger()"], "Fixed commit": "f8348822fb35d266508fb2f45caa7cc7808e197a", "Url": "https://api.github.com/repos/caseif/TTT", "Date": "2016-04-10T16:58:55Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isKeywordToken(lookAhead())) { if (allowMultipleKeywords) { return parseKeywords(qualifierName); }else { return new filter.expression.Qualifier(qualifierName, consume().getValue()); } }else { throw new filter.ParseException(java.lang.String.format(\"Invalid content for qualifier %s: %s\", qualifierName, lookAhead())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2496/buggy-version/src.filter.Parser.java", "BodyUseAPI": [], "Fixed commit": "33399118bd15ee9b3f2a6a0547eb057fa190de68", "Url": "https://api.github.com/repos/HubTurbo/HubTurbo", "Date": "2015-01-04T09:42:24Z"},
{"Line": "=>602", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_imputeMissing) { int c = getCategoricalId(i, _catModes[i]); if (c >= 0) row.binIds[(nbins++)] = c; }else row.binIds[(nbins++)] = (_catOffsets[(i + 1)]) - 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4526/buggy-version/h2o-algos.src.main.java.hex.DataInfo.java", "BodyUseAPI": [], "Fixed commit": "f5766cc315cb8579307c26c12dfaa26afc5e012b", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2015-11-13T02:38:11Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.model.Jenkins.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((jenkins == null) || (scm == null)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5791/buggy-version/src.main.java.io.relution.jenkins.scmsqs.model.EventTriggerMatcherImpl.java", "BodyUseAPI": [], "Fixed commit": "179660fd1d5d0d135136b8e247486bd655a5b172", "Url": "https://api.github.com/repos/jenkinsci/scm-sqs-plugin", "Date": "2016-04-28T08:13:49Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.model.Jenkins.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((jenkins == null) || (scm == null)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5791/buggy-version/src.main.java.io.relution.jenkins.scmsqs.model.EventTriggerMatcherImpl.java", "BodyUseAPI": [], "Fixed commit": "179660fd1d5d0d135136b8e247486bd655a5b172", "Url": "https://api.github.com/repos/jenkinsci/scm-sqs-plugin", "Date": "2016-04-28T08:13:49Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.ibuildthecloud.gdapi.context.ApiContext.getContext().getPolicy()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (policy == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6996/buggy-version/code.iaas.auth-logic.src.main.java.io.cattle.platform.iaas.api.auth.dao.impl.AuthDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "dbfa7deffb719471b3574dd1036e64c487f56cb7", "Url": "https://api.github.com/repos/hibooboo2/cattle", "Date": "2015-04-07T01:32:49Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(kms.getPackages().contains(kms.getPackage(jKMS.LogicHelper.IntToPackage(i))))) kms.getConfiguration().newPackage(jKMS.LogicHelper.IntToPackage(i));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1116/buggy-version/src.main.java.jKMS.states.Preparation.java", "BodyUseAPI": ["jKMS.LogicHelper.IntToPackage(int)", "kms.getConfiguration().newPackage(jKMS.LogicHelper.IntToPackage(i))", "jKMS.states.Preparation.getConfiguration()"], "Fixed commit": "9b08b52a7c8e48b5a8068401aef2426a96c720d5", "Url": "https://api.github.com/repos/freeDom-/jKMS", "Date": "2015-01-26T22:08:21Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (argClass == (java.lang.Long.class)) argClass = long.class;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6616/buggy-version/src.main.java.org.jtrfp.jfdt.Parser.java", "BodyUseAPI": [], "Fixed commit": "040cb7e14c587e47c019efdfa1aa46137b53eb15", "Url": "https://api.github.com/repos/jtrfp/terminal-recall", "Date": "2015-06-21T06:43:42Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.windnow.MainActivity.objects.size()) == 0) { try { com.windnow.MainActivity.objects.addAll(com.windnow.LoadSaveOps.loadStations()); } catch (java.lang.Exception e) { com.windnow.LoadSaveOps.printErrorToLog(e); android.widget.Toast.makeText(this, getString(R.string.error_loading_stations_file), Toast.LENGTH_SHORT).show(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7285/buggy-version/src.com.windnow.MainActivity.java", "BodyUseAPI": ["java.util.ArrayList<com.windnow.Station>.addAll(com.windnow.LoadSaveOps.loadStations())"], "Fixed commit": "a9009e0f3cdc017ab1b898649bb5a3008c838d39", "Url": "https://api.github.com/repos/pulce/WindNow", "Date": "2015-02-16T17:30:36Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (hasContent(mimeTypes)) { for (java.lang.String mimeType : mimeTypes.toLowerCase().split(\",\")) { if (hasContent(mimeType)) { for (org.baswell.routes.MediaType mediaType : org.baswell.routes.MediaType.values()) { for (java.lang.String mediaTypeMimeType : mediaType.mimeTypes) { if (mediaTypeMimeType.equals(mimeType)) { return mediaType; } } } } } if (mimeTypes.contains(\"html\")) { return org.baswell.routes.MediaType.HTML; }else if (mimeTypes.contains(\"xml\")) { return org.baswell.routes.MediaType.XML; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1138/buggy-version/src.main.java.org.baswell.routes.MediaType.java", "BodyUseAPI": ["java.lang.String.toLowerCase()", "java.lang.String.contains(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "3f9049fa2a5383286f74f9ef3af619e1fdc8e2f7", "Url": "https://api.github.com/repos/baswerc/routes", "Date": "2015-05-25T17:15:13Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mFinished)) this.wait();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3956/buggy-version/SensorSimulatorClientLibrary.src.org.openintents.sensorsimulator.hardware.SequenceDispatcher.java", "BodyUseAPI": [], "Fixed commit": "6b6911b213401be08ef2aedcaae1b20cb83e9b8b", "Url": "https://api.github.com/repos/donat3llo/sensorsimulator", "Date": "2012-11-20T11:56:34Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (NodeValue.TRUE.equals(expr)) { result = new java.util.HashSet(); }else { java.util.List<org.apache.jena.sparql.expr.ExprList> clauses = org.aksw.jena_sparql_api.utils.CnfUtils.toClauses(expr); result = org.aksw.jena_sparql_api.utils.FilterUtils.toSets(clauses); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6188/buggy-version/jena-sparql-api-utils.src.main.java.org.aksw.jena_sparql_api.utils.CnfUtils.java", "BodyUseAPI": ["org.aksw.jena_sparql_api.utils.CnfUtils.toClauses(org.apache.jena.sparql.expr.Expr)"], "Fixed commit": "9f5d68754402a309941ca02ab28f88ee831471b8", "Url": "https://api.github.com/repos/SmartDataAnalytics/jena-sparql-api", "Date": "2016-04-22T11:03:42Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state) == 3) { this.reset(); }else if ((state) != 1) { state = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8673/buggy-version/src.ch.zhaw.mcag.view.Menu.java", "BodyUseAPI": [], "Fixed commit": "dfaa0b27a99d1b90a1c4858699d2c9e6515499be", "Url": "https://api.github.com/repos/BenjaminBrossi/SEPS13-Gruppe5", "Date": "2013-12-09T09:57:23Z"},
{"Line": "=>472", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!parentIsArray) { this.setContext(context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5963/buggy-version/src.main.java.com.alibaba.fastjson.parser.DefaultJSONParser.java", "BodyUseAPI": [], "Fixed commit": "fa5484cf4b6c1d1294ea1332660f3adc8a047598", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-10-20T01:23:20Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.text.Document.getText(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (inputValue.trim().isEmpty()) { numbers.clear(); repaint(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8761/buggy-version/src.main.java.com.djd.fun.tachchapter.demo014swing.canvas.CirculatorPanel.java", "BodyUseAPI": [], "Fixed commit": "cb86d5372c9dc46efe4febf0e8e99bbf79d2a25f", "Url": "https://api.github.com/repos/simongreene02/techchapter", "Date": "2017-09-23T15:45:45Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCurrentItemImageUri) != null) { values.put(InventoryContract.InventoryEntry.COLUMN_NAME_IMAGE, mCurrentItemImageUri.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/21/buggy-version/app.src.main.java.com.example.android.inventoryapp.EditorActivity.java", "BodyUseAPI": [], "Fixed commit": "7d256f9b208b78fa4bda6e38d86cab0f41835e0d", "Url": "https://api.github.com/repos/zarkwelder/inventory-app-project", "Date": "2017-02-15T05:56:03Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mOriginalPosition) != (-1)) for (int i1 = 0, cnt1 = newtimers.getCount(); i1 < cnt1; i1++) { newtimers.moveToPosition(i1); if ((newtimers.getInt(4)) == (mIDtimer)) { mOriginalPosition = i1; mCurrentPosition = i1; break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2298/buggy-version/src.maximsblog.blogspot.com.timestatistic.SplitRecordDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "83bf8f1263e8bab6879d51090abce99e42ac8573", "Url": "https://api.github.com/repos/mksmbrtsh/timestatistic", "Date": "2013-12-20T07:11:26Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sqLiteDatabase.isOpen())) { sqLiteDatabase = dbHelper.getWritableDatabase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/883/buggy-version/app.src.main.java.com.aut.yuPATHng.lbs_middleware.lbs_mechanism_manager.GPSMechanism.java", "BodyUseAPI": [], "Fixed commit": "65d563ef7c64bc319c591716ea1071bff9a9aeb5", "Url": "https://api.github.com/repos/yuPATHng8931/LBS-middleware", "Date": "2016-12-20T21:51:55Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (prefixToUnregister != null) { prefix2NamespaceMap.remove(\":\"); java.util.Iterator<java.util.Map.Entry<java.lang.String, java.lang.String>> it = reverseprefix2NamespaceMap.entrySet().iterator(); while (it.hasNext()) { java.util.Map.Entry<java.lang.String, java.lang.String> e = it.next(); if ((e.getKey().equals(prefixToUnregister)) && (e.getValue().equals(\":\"))) { it.remove(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6335/buggy-version/api.src.main.java.org.semanticweb.owlapi.util.DefaultPrefixManager.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "7d994f3d3effb1f01364f9a7248d80e0046614b8", "Url": "https://api.github.com/repos/sesuncedu/owlapi", "Date": "2016-09-10T14:03:50Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ke.getExtendedKeyCode()) == 0) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4649/buggy-version/CS245_Projectv10.src.cs245_projectv10.sudoku.SudokuPane.java", "BodyUseAPI": [], "Fixed commit": "e3ee0b2df97a5b65d91a3696f4de6b88c5adde5b", "Url": "https://api.github.com/repos/btvanhooser/Project1_1CS245", "Date": "2016-10-25T22:07:05Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(key.isEmpty())) { java.lang.String wholeKey = (eu.delving.core.util.LocalizedFieldNames.METADATA_KEY_PREFIX) + key; java.lang.String value = messageSource.getMessage(wholeKey, null, locale); if (wholeKey.equals(value)) { throw new java.lang.RuntimeException(java.lang.String.format(\"No translation found for %s\", wholeKey)); } map.put(wholeKey, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7142/buggy-version/core.src.main.java.eu.delving.core.util.LocalizedFieldNames.java", "BodyUseAPI": [], "Fixed commit": "bcd0b4755c87202a2e78f83f9a0d2fbbf2a73965", "Url": "https://api.github.com/repos/delving/delving", "Date": "2012-04-19T07:39:57Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["src.main.java.StratosHttpClient.sendGetRequest(java.lang.String,(((tenant.getAdmin()) + \"@\") + (tenant.getTenantDomain())))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((serverResponse.getStatusCode()) != 200) { src.main.java.Agent.log.info((((\"Error occurred while retrieving subscription domains for \" + tenant) + \" response \") + response)); return domains; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3208/buggy-version/DomainMappingMigration.src.main.java.Agent.java", "BodyUseAPI": [], "Fixed commit": "ba3747e70651cd266c6f954d986f2c0bd66f697d", "Url": "https://api.github.com/repos/punnadih/my_personal_repo", "Date": "2015-09-23T09:02:41Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ODatabaseRecordThreadLocal.INSTANCE.getIfDefined()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((threadDb != null) && (threadDb.getStorage().getName().equals(iDatabaseName))) database = threadDb; else database = com.orientechnologies.orient.server.OServerMain.server().openDatabase(\"document\", iDatabaseName, replicatorUser.name, replicatorUser.password);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1322/buggy-version/server.src.main.java.com.orientechnologies.orient.server.distributed.conflict.ODefaultReplicationConflictResolver.java", "BodyUseAPI": ["com.orientechnologies.orient.server.OServerMain.server().openDatabase(java.lang.String,java.lang.String,replicatorUser.name,replicatorUser.password)"], "Fixed commit": "daaf9f98509c70d862ac9aeded168aba68158b51", "Url": "https://api.github.com/repos/nuvolabase/orientdb", "Date": "2013-06-26T21:24:35Z"},
{"Line": "=>1812", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (negative) { chLocal = charAt(((bp) + (offset++))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1609/buggy-version/src.main.java.com.alibaba.fastjson.parser.JSONLexerBase.java", "BodyUseAPI": [], "Fixed commit": "fc6ab8890b96c5651e4c3fc8a0127970a6246b5b", "Url": "https://api.github.com/repos/VictorZeng/fastjson", "Date": "2016-04-28T04:05:34Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (event.getWorld().isRemote) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6905/buggy-version/src.main.java.net.darkhax.tb.ThirstyBottles.java", "BodyUseAPI": [], "Fixed commit": "389c5593566b0a3dfd59340f640842f22970e92a", "Url": "https://api.github.com/repos/Darkhax-Minecraft/Thirsty-Bottles", "Date": "2017-05-07T01:19:37Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["won.protocol.util.WonRdfUtils.NeedUtils.getNeedURI(dataset.getDefaultModel())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (newURI != null) needURIs.add(newURI);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5086/buggy-version/webofneeds.won-core.src.main.java.won.protocol.util.WonRdfUtils.java", "BodyUseAPI": ["java.util.List<java.net.URI>.add(java.net.URI)"], "Fixed commit": "a58b09873c5a4e401ccca02018ce2808b42faca7", "Url": "https://api.github.com/repos/researchstudio-sat/webofneeds", "Date": "2014-09-10T15:05:17Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["won.protocol.util.WonRdfUtils.NeedUtils.getNeedURI(dataset.getNamedModel(i.next()))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (newURI != null) needURIs.add(newURI);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5086/buggy-version/webofneeds.won-core.src.main.java.won.protocol.util.WonRdfUtils.java", "BodyUseAPI": ["java.util.List<java.net.URI>.add(java.net.URI)"], "Fixed commit": "a58b09873c5a4e401ccca02018ce2808b42faca7", "Url": "https://api.github.com/repos/researchstudio-sat/webofneeds", "Date": "2014-09-10T15:05:17Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sb.length()) > 0) sb.deleteCharAt(((sb.length()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7481/buggy-version/src.U.java", "BodyUseAPI": ["java.lang.StringBuilder.length()", "java.lang.StringBuilder.deleteCharAt(int)"], "Fixed commit": "c6684ff7ffb8b0ae81ee6f17cdf9f92a360c7aaf", "Url": "https://api.github.com/repos/fengzishiren/tinylang", "Date": "2014-09-18T06:55:29Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.onelio.connectu.Containers.NotaData>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((int) (grade.getNota())) == (grade.getNota())) { nota = java.lang.String.valueOf(((int) (grade.getNota()))); }else { nota = java.lang.String.valueOf(grade.getNota()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3116/buggy-version/app.src.main.java.com.onelio.connectu.Adapters.NotasAdapter.java", "BodyUseAPI": ["java.lang.String.valueOf(((int) (grade.getNota())))", "java.lang.String.valueOf(grade.getNota())", "com.onelio.connectu.Containers.NotaData.getNota()", "com.onelio.connectu.Containers.NotaData.getNota()"], "Fixed commit": "b3e198f756baddd875ebb3dde9f7b240f5328d3f", "Url": "https://api.github.com/repos/Onelio/ConnectU", "Date": "2017-12-16T17:56:33Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((execution) == null) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3116/buggy-version/app.src.main.java.com.onelio.connectu.Containers.AccountData.java", "BodyUseAPI": [], "Fixed commit": "b3e198f756baddd875ebb3dde9f7b240f5328d3f", "Url": "https://api.github.com/repos/Onelio/ConnectU", "Date": "2017-12-16T17:56:33Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (currentNode.hasProperty(PropertyNames.PARAMETERS)) parameterTypeNames = ((java.lang.String[]) (currentNode.getProperty(PropertyNames.PARAMETERS)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3730/buggy-version/src.lapd.databases.neo4j.TypeDeducer.java", "BodyUseAPI": ["org.neo4j.graphdb.Node.getProperty(PropertyNames.PARAMETERS)"], "Fixed commit": "035edefc357d53b681ff677860b6d998723b412d", "Url": "https://api.github.com/repos/wouterkwakernaak/lapd", "Date": "2013-12-26T14:01:08Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((game.status) != (Game.Status.LOBBY)) throw new com.gianlu.pyxreborn.Exceptions.GeneralException(com.gianlu.pyxreborn.Exceptions.ErrorCodes.GAME_ALREADY_STARTED);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4385/buggy-version/server.src.com.gianlu.pyxreborn.server.Lists.Games.java", "BodyUseAPI": [], "Fixed commit": "5a7da820eed84f50130d51d4c2bc361342fa1e98", "Url": "https://api.github.com/repos/devgianlu/PretendYoureXyzzyReborn", "Date": "2017-08-18T12:31:36Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.apache.eagle.alert.engine.publisher.dedup.DedupEventsStoreFactory.customizedStore) != null) { return org.apache.eagle.alert.engine.publisher.dedup.DedupEventsStoreFactory.customizedStore; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6607/buggy-version/eagle-core.eagle-alert-parent.eagle-alert.alert-engine.src.main.java.org.apache.eagle.alert.engine.publisher.dedup.DedupEventsStoreFactory.java", "BodyUseAPI": [], "Fixed commit": "606888db5195c50eb6da38ca1ff2a3ba5f6091fc", "Url": "https://api.github.com/repos/garrettlish/incubator-eagle", "Date": "2016-09-09T02:11:57Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (CommandHelperPlugin.self.interpreterListener.isInInterpreterMode(new com.laytonsmith.abstraction.bukkit.BukkitMCPlayer(event.getPlayer()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/610/buggy-version/src.main.java.com.laytonsmith.commandhelper.CommandHelperListener.java", "BodyUseAPI": [], "Fixed commit": "6cc84bf6d40d442917a711a61f65aef5b9d78072", "Url": "https://api.github.com/repos/sk89q/commandhelper", "Date": "2012-04-05T01:54:58Z"},
{"Line": "=>886", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (tdsentry != null) { egRemitGldtl.setRecovery(tdsentry); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4578/buggy-version/egov.egov-egf.src.main.java.com.exilant.GLEngine.ChartOfAccounts.java", "BodyUseAPI": ["org.egov.deduction.model.EgRemittanceGldtl.setRecovery(org.egov.model.recoveries.Recovery)"], "Fixed commit": "3aa3a1199a643afd39b2bb53d3b53c43ce9942a9", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2016-03-28T07:53:51Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!added) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8404/buggy-version/FinderCompass.src.main.java.atomicstryker.findercompass.common.DefaultConfigFilePrinter.java", "BodyUseAPI": [], "Fixed commit": "e50be191601e1d3aab468f5b025781cd59c86bb8", "Url": "https://api.github.com/repos/zetti68/atomicstrykers-minecraft-mods", "Date": "2017-05-01T18:26:39Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lastException == null) lastException = new java.lang.InterruptedException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6582/buggy-version/server-webapp.src.main.java.org.taverna.server.master.localworker.ForkRunFactory.java", "BodyUseAPI": [], "Fixed commit": "5c6d70350d44643def219f6f0a07f884e53c4c01", "Url": "https://api.github.com/repos/myGrid/taverna-server", "Date": "2014-01-22T10:17:26Z"},
{"Line": "=>904", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((aString.length()) == 0) { text = new java.lang.StringBuffer(text).replace(cursorPosition, ((cursorPosition) + (length)), \"\").toString(); length = 0; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5241/buggy-version/src.main.java.net.minecraft.client.gui.GuiTextField.java", "BodyUseAPI": [], "Fixed commit": "82bd0f81be1397b5f9dc1a34aca5a46f379e6428", "Url": "https://api.github.com/repos/Axeryok/CocoaInput", "Date": "2016-03-27T15:15:46Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.erozabesu.yplkart.data.CircuitConfig.getCircuitData(racer.getCircuitName())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (circuitData == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3954/buggy-version/src.com.github.erozabesu.yplkart.listener.DataListener.java", "BodyUseAPI": [], "Fixed commit": "128ff7c9d078440dfd3ba9f9f32272b8ef9921de", "Url": "https://api.github.com/repos/qpwakaba/YPLKart", "Date": "2015-08-27T16:16:49Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(uk.ac.rdg.resc.edal.dataset.cdm.NetcdfDatasetAggregator.isRemote(location))) { location = \"file://\" + location; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8077/buggy-version/cdm.src.main.java.uk.ac.rdg.resc.edal.dataset.cdm.NetcdfDatasetAggregator.java", "BodyUseAPI": [], "Fixed commit": "b457024509c104434a0808f1fbefdd38094eb245", "Url": "https://api.github.com/repos/Reading-eScience-Centre/edal-java", "Date": "2016-07-06T11:29:38Z"},
{"Line": "=>631", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (level == (org.kevoree.log.Log.LEVEL_ERROR)) { printErr(builder.toString()); }else { print(builder.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6668/buggy-version/org.kevoree.log.src.main.java.org.kevoree.log.Log.java", "BodyUseAPI": [], "Fixed commit": "5e31afd0f8dceddbce8d01ff768dde2f21d97b2b", "Url": "https://api.github.com/repos/dukeboard/kevoree-log", "Date": "2016-03-17T07:42:14Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dto.getLastModifiedUser()) == null) { entity.setLastModifiedUser(gov.healthit.chpl.auth.Util.getCurrentUser().getId()); }else { entity.setLastModifiedUser(dto.getLastModifiedUser()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2289/buggy-version/chpl.chpl-service.src.main.java.gov.healthit.chpl.dao.impl.ActivityDAOImpl.java", "BodyUseAPI": ["gov.healthit.chpl.dto.ActivityDTO.getLastModifiedUser()", "gov.healthit.chpl.entity.ActivityEntity.setLastModifiedUser(dto.getLastModifiedUser())"], "Fixed commit": "4d27dbc679b09bb8004af5c76e6040f72927f3c0", "Url": "https://api.github.com/repos/chris-watson/chpl-api", "Date": "2015-11-13T19:05:25Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dto.getLastModifiedUser()) == null) { entity.setLastModifiedUser(gov.healthit.chpl.auth.Util.getCurrentUser().getId()); }else { entity.setLastModifiedUser(dto.getLastModifiedUser()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2289/buggy-version/chpl.chpl-service.src.main.java.gov.healthit.chpl.dao.impl.ActivityDAOImpl.java", "BodyUseAPI": ["gov.healthit.chpl.dto.ActivityDTO.getLastModifiedUser()", "gov.healthit.chpl.entity.ActivityEntity.setLastModifiedUser(dto.getLastModifiedUser())"], "Fixed commit": "4d27dbc679b09bb8004af5c76e6040f72927f3c0", "Url": "https://api.github.com/repos/chris-watson/chpl-api", "Date": "2015-11-13T19:05:25Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((endingText) == null) { endingText = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3053/buggy-version/OsmAnd.src.net.osmand.plus.activities.search.SearchByNameAbstractActivity.java", "BodyUseAPI": [], "Fixed commit": "5b485594b6ae7ab6ca844b755436b4ab0ba3a808", "Url": "https://api.github.com/repos/poretsky/Osmand", "Date": "2014-04-03T23:10:05Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["table.getName().toUpperCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((tableNameUpper.startsWith(\"BIN$\")) || (tableNameUpper.startsWith(\"DR$\"))) || (tableNameUpper.startsWith(\"RUPD$\"))) || (tableNameUpper.startsWith(\"MLOG$\"))) { log.warn(((\" Table \" + (table.getName())) + \" found but is a special table, skipping\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8926/buggy-version/celerio-engine.src.main.java.com.jaxio.celerio.configuration.database.support.MetadataExtractor.java", "BodyUseAPI": [], "Fixed commit": "8d349a89bcd78b555001cb656d0276924ae1c8b2", "Url": "https://api.github.com/repos/jaxio/celerio", "Date": "2016-01-25T08:20:37Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hps.nyu.fa14.solve.EvolutionarySolver.1.getDensity(hps.nyu.fa14.Matrix)", "hps.nyu.fa14.solve.EvolutionarySolver.1.getDensity(hps.nyu.fa14.Matrix)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (density1 > density2) { return -1; }else if (density1 < density2) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6258/buggy-version/src.hps.nyu.fa14.solve.EvolutionarySolver.java", "BodyUseAPI": [], "Fixed commit": "418db5b5b85878785ec14bbb367af759f187e5d2", "Url": "https://api.github.com/repos/ck1456/DensestSubgraphProblem", "Date": "2014-12-08T02:23:57Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["spacecraft.gridMap.getTile(fullPath2d.getX(step),fullPath2d.getY(step))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tileType == (com.stewsters.shipwright.internals.TileType.WALL)) || (tileType == (com.stewsters.shipwright.internals.TileType.REINFORCED_WALL))) { spacecraft.gridMap.writeToBothSides(fullPath2d.getX(step), fullPath2d.getY(step), TileType.DOOR); }else if (tileType != (com.stewsters.shipwright.internals.TileType.DOOR)) { spacecraft.gridMap.writeToBothSides(fullPath2d.getX(step), fullPath2d.getY(step), TileType.FLOOR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2282/buggy-version/src.main.java.com.stewsters.shipwright.ShipWright.java", "BodyUseAPI": [], "Fixed commit": "75e30f4cb195d9c90d9f921e9d55b5394edebb0b", "Url": "https://api.github.com/repos/stewsters/shipwright", "Date": "2014-11-17T03:03:35Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"usethis-image\".equals(useThis)) { nl.surfnet.coin.selfservice.domain.FieldImage fieldImage = fieldImageDao.findById(fieldId); fieldImage.setSource(source); fieldImageDao.saveOrUpdate(((nl.surfnet.coin.selfservice.domain.FieldImage) (fieldImage))); }else { nl.surfnet.coin.selfservice.domain.FieldString field = fieldStringDao.findById(fieldId); field.setValue(value); if (org.springframework.util.StringUtils.hasText(useThis)) { field.setSource(source); } fieldStringDao.saveOrUpdate(((nl.surfnet.coin.selfservice.domain.FieldString) (field))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/22/buggy-version/coin-selfservice-war.src.main.java.nl.surfnet.coin.selfservice.control.shopadmin.SpLmngDataBindingController.java", "BodyUseAPI": ["org.springframework.util.StringUtils.hasText(java.lang.String)"], "Fixed commit": "fc9a79bb6eb649c1e9bd7f822933cc3d48f38f8e", "Url": "https://api.github.com/repos/OpenConext/OpenConext-selfservice", "Date": "2012-10-15T19:29:44Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((curPage) == 1) { mJokeAdapter.removeAll(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1787/buggy-version/app.src.main.java.com.taobao.jokecollector.ui.fragment.JokeFragment.java", "BodyUseAPI": [], "Fixed commit": "121001b5d9ad69234c50825a60f93900e6add2f6", "Url": "https://api.github.com/repos/Rowandjj/jokeCollector", "Date": "2015-05-10T10:22:37Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tempLen < (MIN_STR_LEN)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/896/buggy-version/src.knowledge.sources.LegalStringKnowledgeSource.java", "BodyUseAPI": [], "Fixed commit": "4d71522e524bf056ef6ff433f0bf4178359ec305", "Url": "https://api.github.com/repos/sfalexw/coen275proj", "Date": "2016-02-27T16:29:10Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((format.equals(\"jpg\")) || (format.equals(\"jpeg\"))) { filteredImage = new java.awt.image.BufferedImage(((int) (imageCraft.drawingArea.getPreferredSize().getWidth())), ((int) (imageCraft.drawingArea.getPreferredSize().getHeight())), java.awt.image.BufferedImage.TYPE_INT_RGB); filteredImage.getGraphics().drawImage(screenShot, 0, 0, null); }else { filteredImage = imageCraft.newBlankImage(); filteredImage.getGraphics().drawImage(screenShot, 0, 0, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3924/buggy-version/tzk.imagecraft.src.tzk.image.ui.IO.java", "BodyUseAPI": [], "Fixed commit": "c76db161450b58d4d7904e2f0f8d70b7684b1899", "Url": "https://api.github.com/repos/thomasjbarry/Image-Craft", "Date": "2014-04-22T03:32:51Z"},
{"Line": "=>5019", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jwildfire.create.tina.swing.TinaController.getCurrXForm()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (xForm != null) { if (pIdx < (xForm.getVariationCount())) { org.jwildfire.create.tina.variation.Variation var = xForm.getVariation(pIdx); java.lang.String varStr = data.TinaNonlinearControlsRows[pIdx].getNonlinearVarREd().getText(); if ((varStr == null) || ((varStr.length()) == 0)) { varStr = \"0\"; } var.setAmount(org.jwildfire.base.Tools.stringToDouble(varStr)); refreshFlameImage(false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1281/buggy-version/src.org.jwildfire.create.tina.swing.TinaController.java", "BodyUseAPI": ["org.jwildfire.create.tina.base.XForm.getVariation(int)", "org.jwildfire.create.tina.base.XForm.getVariationCount()"], "Fixed commit": "cdf5abae0250a10f965c6c76561ca45c5c1de9d0", "Url": "https://api.github.com/repos/thargor6/JWildfire", "Date": "2014-04-23T19:56:35Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(attrName.equals(Office365Connector.LICENSE_ATTR))) { if (value == null) { if (!(attr.getName().equals(OperationalAttributes.PASSWORD_NAME))) { jsonModify.put(attrName, JSONObject.NULL); } }else if (value instanceof java.lang.String) { jsonModify.put(attrName, value.toString()); }else if (value instanceof java.util.List) { jsonModify.put(attrName, value); }else { org.identityconnectors.office365.Office365UserOps.log.error(\"Attribute {0} of non recognised type {1}\", attrName, value.getClass()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5745/buggy-version/src.main.java.org.identityconnectors.office365.Office365UserOps.java", "BodyUseAPI": ["org.json.JSONObject.put(java.lang.String,java.lang.String)", "org.identityconnectors.common.logging.Log.error(java.lang.String,java.lang.String,java.lang.Class<? extends java.lang.Object>)", "org.json.JSONObject.put(java.lang.String,JSONObject.NULL)", "org.json.JSONObject.put(java.lang.String,java.lang.Object)"], "Fixed commit": "b402235ca94f5a9420b9855a387363ff34d780d6", "Url": "https://api.github.com/repos/Evolveum/connector-office365", "Date": "2016-10-14T19:08:49Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ahp.goals) == null) { ahp.goals = eu.riscoss.client.rma.RMAModule.createComparisonList(selection); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7468/buggy-version/riscoss-webapp.src.main.java.eu.riscoss.client.rma.RMAModule.java", "BodyUseAPI": [], "Fixed commit": "763bc44eb5b6861b85fdb5b1c77741c08f4a312e", "Url": "https://api.github.com/repos/RISCOSS/riscoss-corporate", "Date": "2015-12-10T16:28:23Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (j > high) toBeSorted[k] = copyArray[(i++)]; else if (mergeSort.MergeSort.less(null, copyArray[j], copyArray[i])) toBeSorted[k] = copyArray[(j++)]; else toBeSorted[k] = copyArray[(j++)];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1590/buggy-version/Algorithms.Sorts.mergeSort.MergeSort.java", "BodyUseAPI": ["mergeSort.MergeSort.less(<nulltype>,java.lang.Comparable,java.lang.Comparable)"], "Fixed commit": "fcdf519db857680ebe6f8d2539c602b242b7da9a", "Url": "https://api.github.com/repos/ShishirSK/Craft", "Date": "2014-03-21T06:42:12Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (part.startsWith(\"MPos:\")) { MPos = com.willwinder.universalgcodesender.GrblUtils.getPositionFromStatusString(status, com.willwinder.universalgcodesender.GrblUtils.machinePattern, reportingUnits); }else if (part.startsWith(\"WCO:\")) { WCO = com.willwinder.universalgcodesender.GrblUtils.getPositionFromStatusString(status, com.willwinder.universalgcodesender.GrblUtils.wcoPattern, reportingUnits); }else if (part.startsWith(\"Ov:\")) { java.lang.String[] overrideParts = part.substring(3).split(\",\"); if ((overrideParts.length) == 3) { overrides = new javax.vecmath.Point3i(java.lang.Integer.parseInt(overrideParts[0]), java.lang.Integer.parseInt(overrideParts[1]), java.lang.Integer.parseInt(overrideParts[2])); } }else if (part.startsWith(\"F:\")) { feed = java.lang.Double.parseDouble(part.substring(2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1571/buggy-version/ugs-core.src.com.willwinder.universalgcodesender.GrblUtils.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.substring(int)", "java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "78e2cfd2a6d80a157cc2cc42fd03e1dd4e7abcc0", "Url": "https://api.github.com/repos/winder/Universal-G-Code-Sender", "Date": "2016-09-24T03:30:34Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v4.app.FragmentManager.findFragmentByTag(((\"android:switcher:\" + (R.id.viewpager)) + \":1\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((f != null) && (f instanceof com.sebbelebben.smartpower.UserFragment)) { ((com.sebbelebben.smartpower.UserFragment) (f)).FavoriteChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5436/buggy-version/src.com.sebbelebben.smartpower.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "76d44fefcac523b2846bb51889b0aabdaadac833", "Url": "https://api.github.com/repos/Soetnowzen/SmartPower", "Date": "2013-05-28T19:34:42Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.inventory.ItemStack.getItemMeta()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (metaD instanceof org.bukkit.inventory.meta.SkullMeta) { org.bukkit.inventory.meta.SkullMeta itemMeta = ((org.bukkit.inventory.meta.SkullMeta) (metaD)); itemMeta.setDisplayName((((org.bukkit.ChatColor.RESET) + typeName) + \" Head\")); itemMeta.setOwner(mobName); toDrop.setItemMeta(itemMeta); }else com.sk89q.craftbook.bukkit.CraftBookPlugin.logger().warning(\"Bukkit has failed to set a HeadDrop item to a head!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1567/buggy-version/src.main.java.com.sk89q.craftbook.mech.HeadDrops.java", "BodyUseAPI": [], "Fixed commit": "fa4a9c9df6f4d4b5381f8d8312191b1670c3a8db", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2013-10-18T23:58:13Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (debug) logger.println(((\"Local repository path: [\" + localRepoPath) + \"]\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8313/buggy-version/src.main.java.org.jenkinsci.plugins.artifactpromotion.ArtifactPromotionBuilder.java", "BodyUseAPI": [], "Fixed commit": "5bf62cae660643d1ebf2bdf09307c6bd05b80202", "Url": "https://api.github.com/repos/jenkinsci/artifact-promotion-plugin", "Date": "2014-06-18T08:34:47Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i1 < (remove)) strTemp[i1] = StrDatas[i1]; else strTemp[i1] = StrDatas[(i1 + 1)];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3092/buggy-version/app.src.main.java.com.example.khy_j.a410321171_exercise2.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "2b97987846ace8e2ad18d29731a392694b95f1d6", "Url": "https://api.github.com/repos/khyjb1995/106-1-Smart-Mobile-Application-Design-Exercise2", "Date": "2017-11-12T17:54:55Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((position >= (getCount())) || (position < 0)) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5439/buggy-version/src.com.matburt.mobileorg.Gui.Outline.OutlineAdapter.java", "BodyUseAPI": [], "Fixed commit": "fe842b016947f6bbdee22ab284623dec972b2de1", "Url": "https://api.github.com/repos/matburt/mobileorg-android", "Date": "2012-09-22T19:50:00Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_leNewFlight) == null) { android.util.Log.e(MFBConstants.LOG_TAG, \"logbookentry is NULL in FSLandingDetected\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/878/buggy-version/app.src.main.java.Model.MFBFlightListener.java", "BodyUseAPI": [], "Fixed commit": "dacf0d8a3918b48ba9dc45e12c214730d625a77c", "Url": "https://api.github.com/repos/ericberman/MyFlightbookAndroid", "Date": "2017-05-10T21:12:38Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.ucla.cs.utils.SAT.normalize(java.lang.String)", "edu.ucla.cs.utils.SAT.normalize(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((p1_norm.contains(\"?\")) || (p2_norm.contains(\"?\"))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2497/buggy-version/src.edu.ucla.cs.utils.SAT.java", "BodyUseAPI": [], "Fixed commit": "8cc3801b14cbbd3c42b207def8276b83531cf10c", "Url": "https://api.github.com/repos/husttroy/Maple", "Date": "2017-03-20T06:30:28Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.ucla.cs.utils.SAT.normalize(java.lang.String)", "edu.ucla.cs.utils.SAT.normalize(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((p1_norm.contains(\"?\")) || (p2_norm.contains(\"?\"))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2497/buggy-version/src.edu.ucla.cs.utils.SAT.java", "BodyUseAPI": [], "Fixed commit": "8cc3801b14cbbd3c42b207def8276b83531cf10c", "Url": "https://api.github.com/repos/husttroy/Maple", "Date": "2017-03-20T06:30:28Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.uci.ics.crawler4j.frontier.DocIDServer.getNewUnseenDocID(page.redirectedToUrl)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (docid >= 0) { webURL.setDocid(docid); frontier.schedule(webURL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4775/buggy-version/src.main.java.edu.uci.ics.crawler4j.crawler.WebCrawler.java", "BodyUseAPI": ["edu.uci.ics.crawler4j.url.WebURL.setDocid(int)"], "Fixed commit": "f2c9fed534a59edf3c3e313976cfcf5a3388031a", "Url": "https://api.github.com/repos/EgbertW/crawler4j", "Date": "2015-07-14T12:55:54Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (p_config.getInfiniband()) { m_messageDirectory = new de.hhu.bsinfo.dxnet.core.MessageDirectory(((int) (m_ibConfig.getRequestTimeOut().getMs()))); }else { m_messageDirectory = new de.hhu.bsinfo.dxnet.core.MessageDirectory(((int) (m_nioConfig.getRequestTimeOut().getMs()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2725/buggy-version/src.de.hhu.bsinfo.dxnet.DXNet.java", "BodyUseAPI": [], "Fixed commit": "d5069a4bdb5959ad614cc318fa3fa274ee00f941", "Url": "https://api.github.com/repos/hhu-bsinfo/dxram", "Date": "2017-09-19T06:44:18Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inputStream == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6364/buggy-version/src.mobi.hsz.idea.gitignore.util.Resources.java", "BodyUseAPI": [], "Fixed commit": "8c07ff469d75c5851ffc80b76d2cb02314ccb664", "Url": "https://api.github.com/repos/hsz/idea-gitignore", "Date": "2015-07-02T09:54:22Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mobi.hsz.idea.gitignore.util.Resources.getResourceContent(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (list == null) { return templates; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6364/buggy-version/src.mobi.hsz.idea.gitignore.util.Resources.java", "BodyUseAPI": [], "Fixed commit": "8c07ff469d75c5851ffc80b76d2cb02314ccb664", "Url": "https://api.github.com/repos/hsz/idea-gitignore", "Date": "2015-07-02T09:54:22Z"}]}
