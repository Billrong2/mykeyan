{"UNKNOWN to Try":[{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { dig1 = java.lang.Long.parseLong(chr0.substring(range0[0], range0[1])); dig2 = java.lang.Long.parseLong(chr1.substring(range1[0], range1[1])); } catch (java.lang.NumberFormatException e) { return chr0.compareTo(chr1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/524/buggy-version/src.org.broad.igv.feature.genome.ChromosomeNameComparator.java", "BodyUseAPI": ["java.lang.Long.parseLong(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.Long.parseLong(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "4883b5ab61f505b4acd2ec3169dad18b495aab9d", "Url": "https://api.github.com/repos/broadinstitute/IGV", "Date": "2013-02-13T19:34:57Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { innode = innode.getSingleRelationship(RelTypes.TAXCHILDOF, Direction.OUTGOING).getEndNode(); } catch (java.lang.Exception e) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2145/buggy-version/src.main.java.opentree.LicaUtil.java", "BodyUseAPI": ["innode.getSingleRelationship(RelTypes.TAXCHILDOF, Direction.OUTGOING).getEndNode()", "org.neo4j.graphdb.Node.getSingleRelationship(RelTypes.TAXCHILDOF,Direction.OUTGOING)"], "Fixed commit": "7327a755b2eefb108eabe9a7ba24cc89985b95fc", "Url": "https://api.github.com/repos/OpenTreeOfLife/treemachine", "Date": "2013-05-03T08:49:04Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.nio.file.Files.deleteIfExists(toBeDeleted.toPath()); } catch (java.nio.file.DirectoryNotEmptyException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4512/buggy-version/src.main.java.replacer.PackageName.java", "BodyUseAPI": ["java.io.File.toPath()", "java.nio.file.Files.deleteIfExists(java.nio.file.Path)"], "Fixed commit": "ecc9b1c3c08f05bf71cc6ea59ff7ca4d0bcd45dc", "Url": "https://api.github.com/repos/making/replacer", "Date": "2013-08-07T05:34:40Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { new java.net.URL(releaseNote); result.append(\"|| Release Note |\").append(parseUrlLabel(\"Release Note\", releaseNote)).append(\"| \\n\"); } catch (java.net.MalformedURLException e) { result.append(\"|| Release Note |{warning}\").append(releaseNote).append(\" is not valid URL{warning}\").append(\"| \\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6696/buggy-version/src.main.java.com.atex.confluence.plugin.nexus.MavenInfoMacro.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "com.atex.confluence.plugin.nexus.MavenInfoMacro.parseUrlLabel(java.lang.String,java.lang.String)"], "Fixed commit": "53bb2388f9adeb5fbb094babc4597ad7fc12e41b", "Url": "https://api.github.com/repos/wkuo/confluence-nexus-plugin", "Date": "2012-02-10T07:39:44Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { Teste t = this.testes.get(testeId); java.lang.System.out.println((testeId + \" - Pedido Presen\u00e7a\")); if ((t == null) || (t.isADecorrer())) { java.lang.System.out.println((testeId + \" - Pedido Presen\u00e7a - Teste j\u00e1 estava a decorrer, ou n\u00e3o existe\")); return false; } t.presenca(); java.lang.System.out.println((testeId + \" - Pedido Presen\u00e7a - Presen\u00e7a Registada\")); } finally { this.lock.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8732/buggy-version/src.ControladorCP2.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.util.Map<java.lang.Integer, Teste>.get(int)", "Teste.isADecorrer()", "java.io.PrintStream.println(java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "Teste.presenca()"], "Fixed commit": "ccb7713a69b225cba35ad24c98b8ff345d9f79c7", "Url": "https://api.github.com/repos/prsousa/ResolucaoTesteSD2015", "Date": "2016-02-01T00:40:09Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { v2av.VideoCaptureDevInfo.VideoCaptureDevice newDevice = new v2av.VideoCaptureDevInfo.VideoCaptureDevice(); if (((this.mDefaultDevName) == null) || (this.mDefaultDevName.isEmpty())) { this.mDefaultDevName = newDevice.deviceUniqueName; } android.hardware.Camera.CameraInfo info = new android.hardware.Camera.CameraInfo(); android.hardware.Camera.getCameraInfo(i, info); newDevice.index = i; newDevice.orientation = info.orientation; if ((info.facing) == (Camera.CameraInfo.CAMERA_FACING_BACK)) { newDevice.deviceUniqueName = v2av.VideoCaptureDevInfo.CAMERA_FACE_BACK; newDevice.frontCameraType = v2av.VideoCaptureDevInfo.FrontFacingCameraType.None; android.util.Log.d(v2av.VideoCaptureDevInfo.TAG, (((\"Camera \" + i) + \", Camera Facing back, Orientation \") + (info.orientation))); }else { newDevice.deviceUniqueName = v2av.VideoCaptureDevInfo.CAMERA_FACE_FRONT; newDevice.frontCameraType = v2av.VideoCaptureDevInfo.FrontFacingCameraType.Android23; android.util.Log.d(v2av.VideoCaptureDevInfo.TAG, (((\"Camera \" + i) + \", Camera Facing front, Orientation \") + (info.orientation))); this.mDefaultDevName = newDevice.deviceUniqueName; } camera = android.hardware.Camera.open(i); android.hardware.Camera.Parameters parameters = camera.getParameters(); AddDeviceInfo(newDevice, parameters); camera.release(); camera = null; deviceList.add(newDevice); } catch (java.lang.Exception ex) { android.util.Log.e(v2av.VideoCaptureDevInfo.TAG, (\"Failed to init VideoCaptureDeviceInfo ex\" + (ex.getLocalizedMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5120/buggy-version/source.src.v2av.VideoCaptureDevInfo.java", "BodyUseAPI": ["android.hardware.Camera.release()", "java.util.List<v2av.VideoCaptureDevInfo.VideoCaptureDevice>.add(v2av.VideoCaptureDevInfo.VideoCaptureDevice)", "android.hardware.Camera.getParameters()", "v2av.VideoCaptureDevInfo.AddDeviceInfo(v2av.VideoCaptureDevInfo.VideoCaptureDevice,Camera.Parameters)", "java.lang.String.isEmpty()", "android.util.Log.d(java.lang.String,(((\"Camera \" + i) + \", Camera Facing front, Orientation \") + (info.orientation)))", "android.util.Log.d(java.lang.String,(((\"Camera \" + i) + \", Camera Facing back, Orientation \") + (info.orientation)))", "android.hardware.Camera.open(int)", "android.hardware.Camera.getCameraInfo(int,Camera.CameraInfo)"], "Fixed commit": "6c5df7cf34f8b365c8b5cb8949ca9ade2857548a", "Url": "https://api.github.com/repos/jiangzhen1984/V2TechConferenceClient", "Date": "2015-01-31T02:42:40Z"},
{"Line": "=>590", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.springframework.security.core.userdetails.UserDetails userDetails = ((org.springframework.security.core.userdetails.UserDetails) (org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication().getPrincipal())); model.addAttribute(\"username\", userDetails.getUsername()); java.lang.System.out.println((\"appuserid=\" + (getAppuser(userDetails.getUsername()).getId()))); model.addAttribute(\"appuser\", getAppuser(userDetails.getUsername())); java.lang.String url = \"\"; java.util.List<org.backpacker4.bean.Appuser> allAppUsers = appuserService.findAll(); for (org.backpacker4.bean.Appuser appuser : allAppUsers) { if (appuser.getUsername().equals(userDetails.getUsername())) { url = ((servletContext.getRealPath(\"/\")) + (appuser.getIdPhoto())) + \"_THUMB.jpg\"; } } model.addAttribute(\"thumburl\", url); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5717/buggy-version/backpacker4.src.main.java.org.backpacker4.web.controller.UserRegistrationController.java", "BodyUseAPI": ["org.springframework.security.core.userdetails.UserDetails.getUsername()", "org.springframework.security.core.userdetails.UserDetails.getUsername()", "org.springframework.security.core.userdetails.UserDetails.getUsername()", "org.springframework.ui.Model.addAttribute(java.lang.String,java.lang.String)", "org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication().getPrincipal()", "org.springframework.ui.Model.addAttribute(java.lang.String,org.backpacker4.bean.Appuser)", "java.io.PrintStream.println((\"appuserid=\" + (getAppuser(userDetails.getUsername()).getId())))", "org.springframework.security.core.context.SecurityContextHolder.getContext()", "org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication()", "org.backpacker4.business.service.AppuserService.findAll()", "javax.servlet.ServletContext.getRealPath(java.lang.String)", "org.springframework.ui.Model.addAttribute(java.lang.String,userDetails.getUsername())", "org.springframework.security.core.userdetails.UserDetails.getUsername()", "org.backpacker4.web.controller.UserRegistrationController.getAppuser(userDetails.getUsername())", "org.backpacker4.web.controller.UserRegistrationController.getAppuser(userDetails.getUsername())", "appuser.getUsername().equals(userDetails.getUsername())", "org.backpacker4.bean.Appuser.getUsername()", "org.backpacker4.bean.Appuser.getId()", "org.backpacker4.bean.Appuser.getIdPhoto()"], "Fixed commit": "c2f8da0fe58b3057719bafb70f481963866ae0c1", "Url": "https://api.github.com/repos/scalli/Backpacker4", "Date": "2015-12-06T20:09:44Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { activity.deviceBloodPressure.register(); } catch (org.md2k.datakitapi.exception.DataKitException ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6104/buggy-version/omron.src.main.java.org.md2k.omron.Fragment_2_Connect_BP.java", "BodyUseAPI": ["activity.deviceBloodPressure.register()"], "Fixed commit": "a0c06886cd16d41964557b563f5cf8ac438b26b4", "Url": "https://api.github.com/repos/MD2Korg/mCerebrum-Omron", "Date": "2016-09-19T17:14:50Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { activity.deviceWeightScale.register(); } catch (org.md2k.datakitapi.exception.DataKitException ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6104/buggy-version/omron.src.main.java.org.md2k.omron.Fragment_2_Connect_WS.java", "BodyUseAPI": ["activity.deviceWeightScale.register()"], "Fixed commit": "a0c06886cd16d41964557b563f5cf8ac438b26b4", "Url": "https://api.github.com/repos/MD2Korg/mCerebrum-Omron", "Date": "2016-09-19T17:14:50Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { queryBuilder.where().and().not().addStringCondition(\"status\", projectConfig.getOwnDoneStateNames()); } catch (java.lang.RuntimeException e) { e.printStackTrace(); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6930/buggy-version/src.main.java.org.jirban.jira.impl.board.BoardProject.java", "BodyUseAPI": ["queryBuilder.where().and()", "org.jirban.jira.impl.config.BoardProjectConfig.getOwnDoneStateNames()", "com.atlassian.jira.jql.builder.JqlQueryBuilder.where()", "queryBuilder.where().and().not()", "queryBuilder.where().and().not().addStringCondition(java.lang.String,projectConfig.getOwnDoneStateNames())"], "Fixed commit": "32cdd5451b0af2c3057f04c6c14c66c53f2dd059", "Url": "https://api.github.com/repos/kabir/jirban-jira", "Date": "2016-04-07T20:08:56Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.database.Cursor previousSimilarWorkout = myDB.getPreviousSimilarWorkout(s); previousSimilarWorkout.moveToFirst(); if ((previousSimilarWorkout.getCount()) != 0) { compare = true; } } catch (java.lang.Exception nul) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2680/buggy-version/app.src.main.java.com.androidJpec.jpec.able.EndOfWorkoutBis.java", "BodyUseAPI": ["android.database.Cursor.moveToFirst()", "com.androidJpec.jpec.able.Workout_DbHelper.getPreviousSimilarWorkout(java.lang.String)", "android.database.Cursor.getCount()"], "Fixed commit": "bbf2bbadad3ec57e4676d457f58bd28f3fc19660", "Url": "https://api.github.com/repos/Jpec57/Jpec", "Date": "2017-05-24T17:52:10Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { zos.close(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4702/buggy-version/editor.exporter.src.main.java.es.eucm.ead.editor.utils.ZipUtils.java", "BodyUseAPI": ["java.util.zip.ZipOutputStream.close()"], "Fixed commit": "e485ac77faa19c5853198ec9d1ae0e0c960cf24d", "Url": "https://api.github.com/repos/jtorrente/ead", "Date": "2014-11-19T13:46:34Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { targetClass.accept(new org.spongepowered.asm.lib.util.CheckClassAdapter(new org.spongepowered.asm.mixin.transformer.MixinClassWriter(org.spongepowered.asm.lib.ClassWriter.COMPUTE_FRAMES))); } catch (java.lang.RuntimeException ex) { java.lang.System.err.printf(\"%s\\n\", ex.getMessage()); throw ex; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1451/buggy-version/src.main.java.org.spongepowered.asm.mixin.transformer.MixinTransformerModuleCheckClass.java", "BodyUseAPI": ["org.spongepowered.asm.lib.tree.ClassNode.accept(org.spongepowered.asm.lib.util.CheckClassAdapter)"], "Fixed commit": "b134940a19078d26eace3bce0b435123dfe3e8d1", "Url": "https://api.github.com/repos/SpongePowered/Mixin", "Date": "2015-12-19T00:03:57Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mailManagement.sendMail(message); } catch (com.communote.server.core.mail.MailingException e) { com.communote.server.core.messaging.NotificationManagementImpl.LOGGER.error(\"Error sending note notification to user {}: {}\", user.getId(), e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6787/buggy-version/communote.core.src.main.java.com.communote.server.core.messaging.NotificationManagementImpl.java", "BodyUseAPI": ["com.communote.server.core.mail.MailManagement.sendMail(com.communote.server.core.mail.messages.user.NotifyAboutNoteMailMessage)"], "Fixed commit": "4005e7422a0902c58faecb16c880dc5001ae3636", "Url": "https://api.github.com/repos/Communote/communote-server", "Date": "2016-09-21T10:06:44Z"},
{"Line": "=>1573", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return com.twelvemonkeys.imageio.color.ColorSpaces.validateProfile(profile); } catch (java.awt.color.CMMException ignore) { processWarningOccurred((\"Ignoring broken/incompatible ICC profile: \" + (ignore.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8083/buggy-version/imageio.imageio-tiff.src.main.java.com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.java", "BodyUseAPI": ["com.twelvemonkeys.imageio.color.ColorSpaces.validateProfile(java.awt.color.ICC_Profile)"], "Fixed commit": "d4e34d610993c11556a4e54ecf6fdf7ff8b07d70", "Url": "https://api.github.com/repos/Schmidor/TwelveMonkeys", "Date": "2015-08-25T12:13:35Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return repository.findByUsername(username); } catch (org.springframework.dao.EmptyResultDataAccessException x) { throw new org.springframework.security.core.userdetails.UsernameNotFoundException(\"Unable to find user\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8739/buggy-version/src.main.java.org.energyos.espi.datacustodian.service.impl.RetailCustomerServiceImpl.java", "BodyUseAPI": ["org.energyos.espi.datacustodian.repositories.RetailCustomerRepository.findByUsername(java.lang.String)"], "Fixed commit": "969a7d2aa4d37543d2b819a95636f02ff9a5178c", "Url": "https://api.github.com/repos/energyos/OpenESPI-DataCustodian-java", "Date": "2013-11-05T20:44:19Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mFmReceiver.unregisterEventHandler(); mFmReceiver.finish(); } catch (java.lang.IllegalArgumentException ei) { } catch (java.lang.Exception e) { } finally { mFmReceiver = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3465/buggy-version/src.com.android.fmradio.FmNativeBroadcom.java", "BodyUseAPI": ["com.broadcom.fm.fmreceiver.FmProxy.unregisterEventHandler()", "com.broadcom.fm.fmreceiver.FmProxy.finish()"], "Fixed commit": "902baef9bb93cbeb16be0956763d40799ed78cc0", "Url": "https://api.github.com/repos/mickybart/android_packages_apps_FMRadio", "Date": "2016-02-07T20:58:37Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return config.getValue(quoteKey(key)).unwrapped().toString(); } catch (com.typesafe.config.ConfigException ex) { throw new java.util.NoSuchElementException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2566/buggy-version/archaius2-typesafe.src.main.java.com.netflix.archaius.typesafe.TypesafeConfig.java", "BodyUseAPI": ["config.getValue(quoteKey(key)).unwrapped()", "com.typesafe.config.Config.getValue(java.lang.String)", "com.netflix.archaius.typesafe.TypesafeConfig.quoteKey(java.lang.String)", "config.getValue(quoteKey(key)).unwrapped().toString()"], "Fixed commit": "700b8576e5c85916fe5435fa81cfdca8b645643d", "Url": "https://api.github.com/repos/Netflix/archaius", "Date": "2016-09-23T15:43:43Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { nodeL = new org.appdynamics.licensecount.data.NodeLicenseCount(node); (nodeCount)++; nodeLicenseCount.add(nodeL); } catch (java.lang.Exception e) { java.lang.StringBuilder bud = new java.lang.StringBuilder(); bud.append(\"Exception occurred while attempting to get node information for \").append(node.toString()).append(\"\\n\\t\\tNode will not be counted.\"); org.appdynamics.licensecount.data.TierLicenseCount.logger.log(java.util.logging.Level.SEVERE, bud.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3571/buggy-version/src.org.appdynamics.licensecount.data.TierLicenseCount.java", "BodyUseAPI": ["java.util.ArrayList<org.appdynamics.licensecount.data.NodeLicenseCount>.add(org.appdynamics.licensecount.data.NodeLicenseCount)"], "Fixed commit": "7e11b4cf21d8038f5137a1a2d7ee63041574702d", "Url": "https://api.github.com/repos/Appdynamics/AppDLicenseCount", "Date": "2014-09-25T15:22:56Z"},
{"Line": "=>386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { synonyms = synonyms.concat(alias[1]).concat(\"$\"); } catch (java.lang.ArrayIndexOutOfBoundsException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8573/buggy-version/src.main.java.org.reactome.server.interactors.IntactParser.java", "BodyUseAPI": ["java.lang.String.concat(java.lang.String)", "java.lang.String.concat(java.lang.String)"], "Fixed commit": "007a1f7c3e786becbbfbabd0bed049b5ba8bb646", "Url": "https://api.github.com/repos/reactome-pwp/interactors-core", "Date": "2017-04-11T21:26:22Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { java.io.File s = new java.io.File(\"a\"); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1211/buggy-version/src.main.java.com.github.jetqin.check.App.java", "BodyUseAPI": [], "Fixed commit": "2ce7ff43042d95bdb35a906e4a4363a4a219fcab", "Url": "https://api.github.com/repos/JetQin/check", "Date": "2016-03-03T10:18:47Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.text.SimpleDateFormat format = new java.text.SimpleDateFormat(\"EEE MMM dd HH:mm:ss zzz yyyy\"); lastUpdate = format.parse(lu); } catch (java.lang.Exception e) { throw new java.lang.IllegalArgumentException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1891/buggy-version/src.com.gnychis.PhoneActivity.ActivityService.java", "BodyUseAPI": ["java.text.SimpleDateFormat.parse(java.lang.String)"], "Fixed commit": "165b4b53fe6cdb37e3c1d7ef8ae7b2a65008fff9", "Url": "https://api.github.com/repos/gnychis/phone-activity", "Date": "2012-07-09T05:05:13Z"},
{"Line": "=>543", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { depdate = depdate.substring(0, 10); convdate = df.format(initialdf.parse(depdate)); } catch (java.text.ParseException e) { java.lang.System.out.println(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1994/buggy-version/src.SampleUI.java", "BodyUseAPI": ["java.text.DateFormat.format(java.util.Date)", "java.text.DateFormat.parse(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "1702265c7828189ecadd7bde531e40aec134ad40", "Url": "https://api.github.com/repos/anson-li/FlightBooker", "Date": "2015-10-26T20:11:22Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { response = esClient.prepareSearch(index).setTypes(docType).setSearchType(SearchType.DFS_QUERY_THEN_FETCH).setQuery(qb).setFrom(from).setSize(size).addSort(sb).get(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5697/buggy-version/src.main.java.org.weaver.alr.front.common.service.ElasticSearchService.java", "BodyUseAPI": ["esClient.prepareSearch(index).setTypes(docType).setSearchType(SearchType.DFS_QUERY_THEN_FETCH).setQuery(org.elasticsearch.index.query.QueryBuilder)", "esClient.prepareSearch(index).setTypes(docType).setSearchType(SearchType.DFS_QUERY_THEN_FETCH).setQuery(qb).setFrom(from).setSize(java.lang.Integer)", "esClient.prepareSearch(index).setTypes(java.lang.String)", "esClient.prepareSearch(index).setTypes(docType).setSearchType(SearchType.DFS_QUERY_THEN_FETCH).setQuery(qb).setFrom(from).setSize(size).addSort(sb).get()", "esClient.prepareSearch(index).setTypes(docType).setSearchType(SearchType.DFS_QUERY_THEN_FETCH).setQuery(qb).setFrom(java.lang.Integer)", "org.elasticsearch.client.Client.prepareSearch(java.lang.String)", "esClient.prepareSearch(index).setTypes(docType).setSearchType(SearchType.DFS_QUERY_THEN_FETCH)", "esClient.prepareSearch(index).setTypes(docType).setSearchType(SearchType.DFS_QUERY_THEN_FETCH).setQuery(qb).setFrom(from).setSize(size).addSort(org.elasticsearch.search.sort.SortBuilder)"], "Fixed commit": "092411c2035f23ac8f0daad2c19d30680fd080d2", "Url": "https://api.github.com/repos/align-leftright/alr-front", "Date": "2016-06-28T08:56:28Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { left = (throttlePower + rotatePower) / (throttlePower + rotatePower); right = (throttlePower - rotatePower) / (throttlePower + rotatePower); } catch (java.lang.ArithmeticException e) { left = 0; right = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/806/buggy-version/src.org.usfirst.frc.team6829.robot.subsystems.DriveTrain.java", "BodyUseAPI": [], "Fixed commit": "b60193f4d36bf7bb95a0efbfb8885471355d2293", "Url": "https://api.github.com/repos/IgniteRobotics/GRITS_2017", "Date": "2017-10-14T22:39:58Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return java.lang.Integer.parseInt(this.expectedDuration); } catch (java.lang.Exception e) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6796/buggy-version/src.main.java.uk.ac.cam.sup.form.QuestionForm.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "1104596583521962d485b12ee82b655f2b1e7821", "Url": "https://api.github.com/repos/ucam-cl-dtg/urop-2013-questions", "Date": "2013-07-25T13:16:21Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { while (attributesToBeRemoved.hasMore()) { try { this.operationManager.removeAttribute(entryDn, attributesToBeRemoved.next()); } catch (javax.naming.NamingException e) { if (org.keycloak.federation.ldap.idm.store.ldap.LDAPIdentityStore.logger.isDebugEnabled()) { org.keycloak.federation.ldap.idm.store.ldap.LDAPIdentityStore.logger.debugf(((\"Could not remove attribute on entry from DN [\" + entryDn) + \"]\")); } } catch (org.keycloak.models.ModelException e) { if (org.keycloak.federation.ldap.idm.store.ldap.LDAPIdentityStore.logger.isDebugEnabled()) { org.keycloak.federation.ldap.idm.store.ldap.LDAPIdentityStore.logger.debugf(((\"Could not remove attribute on entry from DN [\" + entryDn) + \"]\")); } } } } catch (javax.naming.NamingException e) { if (org.keycloak.federation.ldap.idm.store.ldap.LDAPIdentityStore.logger.isDebugEnabled()) { org.keycloak.federation.ldap.idm.store.ldap.LDAPIdentityStore.logger.debugf(((\"Could not remove attribute on entry from DN [\" + entryDn) + \"]\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2380/buggy-version/federation.ldap.src.main.java.org.keycloak.federation.ldap.idm.store.ldap.LDAPIdentityStore.java", "BodyUseAPI": ["org.jboss.logging.Logger.debugf(java.lang.String)", "org.jboss.logging.Logger.isDebugEnabled()", "org.jboss.logging.Logger.debugf(java.lang.String)", "org.jboss.logging.Logger.isDebugEnabled()", "javax.naming.NamingEnumeration<javax.naming.directory.Attribute>.next()", "javax.naming.NamingEnumeration<javax.naming.directory.Attribute>.hasMore()", "org.keycloak.federation.ldap.idm.store.ldap.LDAPOperationManager.removeAttribute(java.lang.String,javax.naming.directory.Attribute)"], "Fixed commit": "a8c099c5527fd81cd8b4b93a89647a6fd2543a96", "Url": "https://api.github.com/repos/NYU-Chicago-data-facility/keycloak", "Date": "2017-10-11T00:01:01Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { port = java.lang.Integer.valueOf(entry.getValue()); } catch (java.lang.NumberFormatException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8007/buggy-version/rcloud-gist-service.src.main.java.com.mangosolutions.rcloud.gists.filters.ZuulRequestUrlResolver.java", "BodyUseAPI": ["java.lang.Integer.valueOf(java.lang.String)", "java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()"], "Fixed commit": "9fb3c063e2837af558da813a63f41df168dad30a", "Url": "https://api.github.com/repos/MangoTheCat/rcloud-gist-services", "Date": "2017-02-16T17:33:04Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.prefetchThread.start(); } catch (java.lang.Exception e) { this.prefetchThread = new java.lang.Thread(new PrefetchThread<T>(futureQueue)); this.prefetchThread.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7963/buggy-version/src.main.java.com.tinkerpop.pipes.AsyncPipe.java", "BodyUseAPI": ["java.lang.Thread.start()"], "Fixed commit": "ca73bd5dfab61e33c3df2f3d0200c86f3e2b6fa7", "Url": "https://api.github.com/repos/whshev/pipes", "Date": "2015-01-20T12:07:37Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { aponWriter.close(); } catch (java.io.IOException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/384/buggy-version/src.main.java.com.aspectran.core.context.builder.importer.HybridImportHandler.java", "BodyUseAPI": ["com.aspectran.core.util.apon.AponWriter.close()"], "Fixed commit": "8d30ae63e029306ed9121b1829d199973a9fdf5b", "Url": "https://api.github.com/repos/aspectran/aspectran", "Date": "2016-04-10T17:09:20Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { queueMessage.put(messageInfo); } catch (java.lang.Exception e) { org.exoplatform.services.injection.commons.NotificationInjector.LOG.error(((\"Cannot add message \" + (messageInfo.getId())) + \" in queue\"), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4427/buggy-version/services.src.main.java.org.exoplatform.services.injection.commons.NotificationInjector.java", "BodyUseAPI": ["org.exoplatform.commons.api.notification.service.QueueMessage.put(org.exoplatform.commons.api.notification.model.MessageInfo)"], "Fixed commit": "7209925608d5505f7cda89025628d04a80072fe2", "Url": "https://api.github.com/repos/exo-addons/data-injectors", "Date": "2017-10-26T10:06:09Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { queueMessage.send(); } catch (java.lang.Exception e) { org.exoplatform.services.injection.commons.NotificationInjector.LOG.error(\"Cannot send message from queue\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4427/buggy-version/services.src.main.java.org.exoplatform.services.injection.commons.NotificationInjector.java", "BodyUseAPI": ["org.exoplatform.commons.api.notification.service.QueueMessage.send()"], "Fixed commit": "7209925608d5505f7cda89025628d04a80072fe2", "Url": "https://api.github.com/repos/exo-addons/data-injectors", "Date": "2017-10-26T10:06:09Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Boolean check = new com.github.cmput301w13t04.food.controller.Database.PublishRecipeTask().execute(recipe).get(); return check; } catch (java.lang.InterruptedException e) { e.printStackTrace(); } catch (java.util.concurrent.ExecutionException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4410/buggy-version/src.com.github.cmput301w13t04.food.controller.Database.java", "BodyUseAPI": ["new com.github.cmput301w13t04.food.controller.Database.PublishRecipeTask().execute(recipe).get()", "com.github.cmput301w13t04.food.controller.Database.PublishRecipeTask.execute(com.github.cmput301w13t04.food.model.Recipe)"], "Fixed commit": "417dd426cfd5556820d0637be91a1aeedff8568c", "Url": "https://api.github.com/repos/CMPUT301W13T04/Food", "Date": "2013-04-02T00:51:58Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { saleOrderService.finalizeSaleOrder(saleOrder); } catch (com.axelor.exception.AxelorException e) { response.setFlash(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2737/buggy-version/axelor-sale.src.main.java.com.axelor.apps.sale.web.SaleOrderController.java", "BodyUseAPI": ["com.axelor.apps.sale.service.SaleOrderService.finalizeSaleOrder(com.axelor.apps.sale.db.SaleOrder)"], "Fixed commit": "74fc000f66102b62dcbbb0c4c026f1637fc3353e", "Url": "https://api.github.com/repos/axelor/axelor-business-suite", "Date": "2017-07-03T12:15:47Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.kohsuke.github.GitHub gitHub; if ((hudson.Util.fixEmpty(apiUrl)) != null) { gitHub = org.kohsuke.github.GitHub.connectToEnterprise(apiUrl, oauthAccessToken); }else { gitHub = org.kohsuke.github.GitHub.connect(username, oauthAccessToken); } if (gitHub.isCredentialValid()) return hudson.util.FormValidation.ok(\"Verified\"); else return hudson.util.FormValidation.error(\"Failed to validate the account\"); } catch (java.io.IOException e) { return hudson.util.FormValidation.error(e, \"Failed to validate the account\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3270/buggy-version/src.main.java.com.cloudbees.jenkins.Credential.java", "BodyUseAPI": ["hudson.Util.fixEmpty(java.lang.String)", "hudson.util.FormValidation.error(java.lang.String)", "hudson.util.FormValidation.ok(java.lang.String)", "org.kohsuke.github.GitHub.connect(java.lang.String,java.lang.String)", "org.kohsuke.github.GitHub.isCredentialValid()", "org.kohsuke.github.GitHub.connectToEnterprise(java.lang.String,java.lang.String)"], "Fixed commit": "d07c2677fc514ba20cf376aed0d11a4b455b7088", "Url": "https://api.github.com/repos/vladimir-poleh/github-plugin", "Date": "2014-11-18T02:01:07Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.world = com.sk89q.worldedit.WorldEdit.getInstance().getServer().getWorlds().get(0); } catch (com.sk89q.worldedit.extension.platform.NoCapablePlatformException e) { this.world = com.sk89q.worldedit.world.NullWorld.getInstance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/70/buggy-version/core.src.main.java.com.boydti.fawe.wrappers.FakePlayer.java", "BodyUseAPI": ["com.sk89q.worldedit.WorldEdit.getInstance().getServer().getWorlds()", "com.sk89q.worldedit.WorldEdit.getInstance().getServer()", "com.sk89q.worldedit.WorldEdit.getInstance().getServer().getWorlds().get(int)", "com.sk89q.worldedit.WorldEdit.getInstance()"], "Fixed commit": "1f83319c8f1f41d96936faa22b3ea5cb09835f50", "Url": "https://api.github.com/repos/boy0001/FastAsyncWorldedit", "Date": "2017-01-08T12:52:44Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mUser.getToken(true).addOnCompleteListener(new com.google.android.gms.tasks.OnCompleteListener<com.google.firebase.auth.GetTokenResult>() { public void onComplete(@android.support.annotation.NonNull com.google.android.gms.tasks.Task<com.google.firebase.auth.GetTokenResult> task) { if (task.isSuccessful()) { userToken = task.getResult().getToken(); android.util.Log.d(\"userToken\", userToken); }else { userToken = \"\"; } } }); } catch (java.lang.Exception e) { userToken = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3567/buggy-version/RunamicGhent.mobile.src.main.java.com.dp16.runamicghent.Persistence.ServerStorage.java", "BodyUseAPI": ["com.google.firebase.auth.FirebaseUser.getToken(boolean)", "com.google.android.gms.tasks.Task<com.google.firebase.auth.GetTokenResult>.isSuccessful()", "com.google.android.gms.tasks.Task<com.google.firebase.auth.GetTokenResult>.getResult()", "task.getResult().getToken()", "android.util.Log.d(java.lang.String,java.lang.String)", "mUser.getToken(true).addOnCompleteListener(com.google.android.gms.tasks.OnCompleteListener<com.google.firebase.auth.GetTokenResult>)"], "Fixed commit": "40eee2558136204420f6864bf2464736f8dd667e", "Url": "https://api.github.com/repos/oSoc17/lopeningent_android", "Date": "2017-07-26T13:08:13Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { graph.getOperations().translateNode(node.getName(), movementX, movementY); } catch (uk.ac.cam.echo2016.multinarrative.gui.IllegalOperationException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3573/buggy-version/src.main.java.uk.ac.cam.echo2016.multinarrative.gui.tool.SelectionTool.java", "BodyUseAPI": ["uk.ac.cam.echo2016.multinarrative.gui.graph.GraphNode.getName()", "uk.ac.cam.echo2016.multinarrative.gui.graph.Graph.getOperations()", "graph.getOperations().translateNode(node.getName(),double,double)"], "Fixed commit": "78006abc7b703f79261fbef393f5754f58a0651c", "Url": "https://api.github.com/repos/rjmcf/DynamicNarrative", "Date": "2016-02-08T02:16:07Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { countStmt.close(); } catch (java.sql.SQLException e) { org.buzheng.commons.mybatis.MybatisPageableInterceptor.logger.error(\"exception happens when doing: PreparedStatement.close()\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4780/buggy-version/src.main.java.org.buzheng.commons.mybatis.MybatisPageableInterceptor.java", "BodyUseAPI": ["java.sql.PreparedStatement.close()"], "Fixed commit": "149c3a31b2fe364d46c8cbfedfdfaac843fa7f77", "Url": "https://api.github.com/repos/buzheng/mybatis-pageable", "Date": "2014-02-13T05:38:06Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { double[] loads = sigar.getLoadAverage(); for (int i = 0; i < (loads.length); i++) { loads[i] = java.lang.Math.min(loads[i], 1); } return (((2 * (loads[0])) + (3 * (loads[1]))) + (loads[2])) / 6; } catch (SigarException e) { return 0.5; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6797/buggy-version/Protocol.java", "BodyUseAPI": ["java.lang.Math.min(double,int)", "org.hyperic.sigar.Sigar.getLoadAverage()"], "Fixed commit": "19ee0a0bc336e9e849b172ea2c27848381afff1f", "Url": "https://api.github.com/repos/juliasets/Hist-Eq", "Date": "2014-02-24T18:07:26Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { stmt = conn.createStatement(); if (validationQueryTimeout > 0) { stmt.setQueryTimeout(validationQueryTimeout); } rs = stmt.executeQuery(query); return true; } finally { com.alibaba.druid.util.JdbcUtils.close(rs); com.alibaba.druid.util.JdbcUtils.close(stmt); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8897/buggy-version/src.main.java.com.alibaba.druid.pool.ValidConnectionCheckerAdapter.java", "BodyUseAPI": ["java.sql.Statement.setQueryTimeout(int)", "java.sql.Statement.executeQuery(java.lang.String)", "java.sql.Connection.createStatement()"], "Fixed commit": "5544c60801baa04355032eec2425489c54368903", "Url": "https://api.github.com/repos/mosoft521/druid", "Date": "2016-06-11T13:44:43Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { account.setUsername(jsonObject.getString(\"email \")); } catch (org.json.JSONException e) { android.util.Log.e(\"LoginAct\", e.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1945/buggy-version/app.src.main.java.org.fossasia.phimpme.accounts.AccountActivity.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)", "org.fossasia.phimpme.data.local.AccountDatabase.setUsername(jsonObject.getString(\"email   \"))"], "Fixed commit": "52b84ec7de7a16210a5293612857a33597687674", "Url": "https://api.github.com/repos/pa1pal/phimpme-android", "Date": "2017-07-07T13:55:14Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return getDAO().read(id); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8761/buggy-version/src.main.java.com.rhcloud.raymondstanley.rest.BusinessRest.java", "BodyUseAPI": ["com.rhcloud.raymondstanley.model.dao.impl.BusinessDAO.read(java.lang.Integer)", "com.rhcloud.raymondstanley.rest.BusinessRest.getDAO()"], "Fixed commit": "fb9112597d55a2ed8e59047bdb972426dc0a328b", "Url": "https://api.github.com/repos/RaymondStanleyC/Veterinapprd_backend", "Date": "2016-06-27T22:00:35Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.database.Cursor c = getContentResolver().query(ContactsContract.Profile.CONTENT_URI, null, null, null, null); c.moveToFirst(); java.lang.String nameString = c.getString(c.getColumnIndex(ContactsContract.Profile.DISPLAY_NAME)); android.widget.TextView tvTextView = ((android.widget.TextView) (findViewById(R.id.recipeAuthor))); tvTextView.setText(nameString); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4861/buggy-version/NewRecipeBook.src.ca.dreamteam.newrecipebook.CreateRecipeActivity.java", "BodyUseAPI": ["android.database.Cursor.getString(c.getColumnIndex(ContactsContract.Profile.DISPLAY_NAME))", "ca.dreamteam.newrecipebook.CreateRecipeActivity.getContentResolver()", "ca.dreamteam.newrecipebook.CreateRecipeActivity.findViewById(R.id.recipeAuthor)", "android.database.Cursor.moveToFirst()", "android.database.Cursor.getColumnIndex(ContactsContract.Profile.DISPLAY_NAME)", "android.widget.TextView.setText(java.lang.String)", "getContentResolver().query(ContactsContract.Profile.CONTENT_URI,<nulltype>,<nulltype>,<nulltype>,<nulltype>)"], "Fixed commit": "0a4054e3b8b787d31a1fa15d289d8c16788c111b", "Url": "https://api.github.com/repos/se-SteveThePirate/CMPUT301W13T01", "Date": "2013-03-30T21:19:52Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(((NetworkConstants.HEARTBEAT_DELAY) * 2)); startClient(inetAddress, clientService, true); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/21/buggy-version/Source.Cypher.app.src.main.java.com.semaphore_soft.apps.cypher.networking.Client.java", "BodyUseAPI": ["com.semaphore_soft.apps.cypher.networking.Client.ClientThread.startClient(java.net.InetAddress,com.semaphore_soft.apps.cypher.networking.ClientService,boolean)", "java.lang.Thread.sleep(((NetworkConstants.HEARTBEAT_DELAY) * 2))"], "Fixed commit": "c4be12c34f827937f7c78f4f5dc854417cbad2bc", "Url": "https://api.github.com/repos/semaphore-soft/Cypher", "Date": "2017-02-18T23:52:44Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.load(file); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5214/buggy-version/org.parts.redcastlemedia.multitallented.models.YMLProxy.java", "BodyUseAPI": ["org.parts.redcastlemedia.multitallented.models.YMLProxy.load(java.io.File)"], "Fixed commit": "86a9160cf408d5b4819049032990666cab074192", "Url": "https://api.github.com/repos/Multitallented/HeroMatchMaking", "Date": "2012-05-08T20:15:35Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.verifier = getVerifier(); } catch (java.lang.Throwable throwable) { log.warn(\"create verifier error\", throwable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5452/buggy-version/security.oauth2.src.main.java.leap.oauth2.TokenVerifierFactory.java", "BodyUseAPI": ["leap.oauth2.TokenVerifierFactory.PublicKeyGetterRSAJwtVerifier.getVerifier()"], "Fixed commit": "5199b1a2e8ebacf6e6eeb68075c35c0eabc1bb76", "Url": "https://api.github.com/repos/leapframework/framework", "Date": "2017-01-12T08:52:24Z"},
{"Line": "=>597", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { prepareSecondaryPlayers(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8011/buggy-version/lib.src.main.java.scal.io.liger.av.ClipCardsPlayer.java", "BodyUseAPI": ["scal.io.liger.av.ClipCardsPlayer.prepareSecondaryPlayers()"], "Fixed commit": "2caddae1d853e5f5a6663e9ef96616fe10547805", "Url": "https://api.github.com/repos/StoryMaker/storypath", "Date": "2015-02-16T18:54:51Z"},
{"Line": "=>501", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { prepareSecondaryPlayers(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8011/buggy-version/lib.src.main.java.scal.io.liger.av.ClipCardsPlayer.java", "BodyUseAPI": ["scal.io.liger.av.ClipCardsPlayer.prepareSecondaryPlayers()"], "Fixed commit": "2caddae1d853e5f5a6663e9ef96616fe10547805", "Url": "https://api.github.com/repos/StoryMaker/storypath", "Date": "2015-02-16T18:54:51Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return this.positionRepository.saveAndFlush(positionEntity).getId(); } catch (java.lang.NullPointerException e) { return -1L; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3320/buggy-version/service.src.main.java.com.epam.rft.atsy.service.impl.PositionServiceImpl.java", "BodyUseAPI": ["com.epam.rft.atsy.persistence.repositories.PositionRepository.saveAndFlush(com.epam.rft.atsy.persistence.entities.PositionEntity)", "this.positionRepository.saveAndFlush(positionEntity).getId()"], "Fixed commit": "a4953ed8094a326f4f01f215ed5cb63cb1ee5f43", "Url": "https://api.github.com/repos/epam-debrecen-rft-2015/atsy", "Date": "2016-09-26T12:47:05Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { in = new java.io.BufferedReader(new java.io.InputStreamReader(jmemorize.gui.Localization.class.getResourceAsStream(\"/resource/text/dropbox.txt\"))); java.lang.String line; while ((line = in.readLine()) != null) { lines.add(line); } } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7150/buggy-version/src.jmemorize.gui.swing.dialogs.DropboxPushDialog.java", "BodyUseAPI": ["java.io.BufferedReader.readLine()", "java.lang.Class.getResourceAsStream(java.lang.String)", "java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "0b998399e8ffdc103464471375fbf57bdb692e5e", "Url": "https://api.github.com/repos/mabdi/jMemorize-Plus-1", "Date": "2015-11-11T11:38:42Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { userInfo = java.net.URLDecoder.decode(userInfo, \"UTF-8\"); } catch (java.io.UnsupportedEncodingException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/551/buggy-version/shared.src.main.java.org.tiqr.service.authentication.AuthenticationService.java", "BodyUseAPI": ["java.net.URLDecoder.decode(java.lang.String,java.lang.String)"], "Fixed commit": "2062e136c43b6134a65544c7808b82a5fca3f378", "Url": "https://api.github.com/repos/andrei-egeniq/tiqr-client-android", "Date": "2016-05-20T09:25:24Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { discoveredExceptions = com.intellij.openapi.progress.ProgressManager.getInstance().runProcessWithProgressSynchronously(exceptionFinder, \"Searching For Unchecked Exceptions\", true, project); } catch (java.lang.StackOverflowError | java.lang.OutOfMemoryError er) { showInformationHint(editor, (\"Too many statements too process, consider disabling the overriding method search option \" + \"and/or removing some java sources from the whitelist\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7554/buggy-version/CheckMate.src.com.thomas.checkMate.FindAction.java", "BodyUseAPI": ["com.intellij.openapi.progress.ProgressManager.getInstance().runProcessWithProgressSynchronously(com.thomas.checkMate.discovery.ComputableExceptionFinder,java.lang.String,boolean,com.intellij.openapi.project.Project)", "com.intellij.openapi.progress.ProgressManager.getInstance()"], "Fixed commit": "dbfd22665b475ef61445dec5152c4e1a06518134", "Url": "https://api.github.com/repos/Thogor/CheckMate", "Date": "2016-01-15T12:37:26Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((com.android.internal.app.ResolverActivity.mForceDefaultHome) && (isLauncher(intent))) { setDefaultLauncher(intent); }else { mPackageMonitor.unregister(); mRegistered = false; } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4394/buggy-version/core.java.com.android.internal.app.ResolverActivity.java", "BodyUseAPI": ["com.android.internal.app.ResolverActivity.setDefaultLauncher(android.content.Intent)", "com.android.internal.content.PackageMonitor.unregister()", "com.android.internal.app.ResolverActivity.isLauncher(android.content.Intent)"], "Fixed commit": "82b34fb18c8153b478f12257b5e412a81ed6dfef", "Url": "https://api.github.com/repos/cphelps76/frameworks_base", "Date": "2016-03-14T21:21:55Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.graphics.Bitmap subscriptionThumbnail = android.graphics.BitmapFactory.decodeFile(podcast.getThumbnailFilename()); metadataEditor.putBitmap(METADATA_KEY_ARTWORK, subscriptionThumbnail); } catch (java.lang.OutOfMemoryError ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4849/buggy-version/src.com.axelby.podax.LockscreenManager.java", "BodyUseAPI": ["android.graphics.BitmapFactory.decodeFile(podcast.getThumbnailFilename())", "com.axelby.podax.PodcastCursor.getThumbnailFilename()", "android.media.RemoteControlClient.MetadataEditor.putBitmap(int,android.graphics.Bitmap)"], "Fixed commit": "a5449d42f02b96d744f0b5fdbc41f86e5d4a747a", "Url": "https://api.github.com/repos/thasmin/Podax", "Date": "2012-08-19T15:08:38Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { dateTextField.setText(showFormat.format(databaseFormat.parse(date))); } catch (java.text.ParseException ex) { java.util.logging.Logger.getLogger(com.dr.challan.PrintChallan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6435/buggy-version/src.com.dr.challan.PrintChallan.java", "BodyUseAPI": ["javax.swing.JLabel.setText(java.lang.String)", "java.text.DateFormat.format(java.util.Date)", "java.text.DateFormat.parse(java.lang.String)"], "Fixed commit": "6dfa282e7604784e4a3dd99d27ee67ba012afa89", "Url": "https://api.github.com/repos/ram2doc2/Dinesh_Ribbon", "Date": "2016-02-06T12:28:20Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { operation = new lisong_mechlab.model.loadout.AutoAddItemOperation(loadoutFrame.getLoadout(), xBar, itemToPlace); } catch (java.lang.Throwable e) { operation = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5048/buggy-version/src.lisong_mechlab.view.mechlab.ItemLabel.java", "BodyUseAPI": ["lisong_mechlab.view.mechlab.LoadoutFrame.getLoadout()"], "Fixed commit": "94935f2aaf33b881a7676c2543a401794f4e3a55", "Url": "https://api.github.com/repos/EmilyBjoerk/lsml", "Date": "2014-03-29T19:52:49Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { topics.createSemanticTag(\"Topic\", topicEditText.getText().toString()); interest = new net.sharkfw.knowledgeBase.inmemory.InMemoInterest(topics, null, null, null, null, null, null, net.sharkfw.asip.ASIPSpace.DIRECTION_IN); } catch (net.sharkfw.knowledgeBase.SharkKBException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8271/buggy-version/app.src.main.java.net.sharksystem.sharknet.profile.EntryProfileActivity.java", "BodyUseAPI": ["net.sharkfw.knowledgeBase.STSet.createSemanticTag(java.lang.String,topicEditText.getText().toString())", "android.widget.EditText.getText()", "topicEditText.getText().toString()"], "Fixed commit": "cec9bd5baadf7f449f59ac7a9c1dd90e25d188e9", "Url": "https://api.github.com/repos/SharedKnowledge/SharkNet", "Date": "2017-10-24T22:38:18Z"},
{"Line": "=>627", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.io.File unsetRequestsFile = new java.io.File(context.getFilesDir(), com.joshdholtz.sentry.Sentry.InternalStorage.FILE_NAME); if (!(unsetRequestsFile.exists())) { writeObject(context, new java.util.ArrayList<com.joshdholtz.sentry.Sentry.SentryEventRequest>()); } } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5875/buggy-version/src.com.joshdholtz.sentry.Sentry.java", "BodyUseAPI": ["android.content.Context.getFilesDir()", "com.joshdholtz.sentry.Sentry.InternalStorage.writeObject(android.content.Context,java.util.ArrayList<com.joshdholtz.sentry.Sentry.SentryEventRequest>)", "java.io.File.exists()"], "Fixed commit": "49e77263a933b8ac521b2a7ed51b32cf6293706b", "Url": "https://api.github.com/repos/corcoran/Sentry-Android", "Date": "2016-05-02T19:23:50Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (((query.getSearchField()) instanceof de.geeksfactory.opacclient.searchfields.TextSearchField) && ((doc.select((\"#\" + (query.getKey()))).size()) > 0)) { doc.select((\"#\" + (query.getKey()))).val(query.getValue()); continue; } } catch (org.jsoup.select.Selector e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/9095/buggy-version/opacclient.libopac.src.main.java.de.geeksfactory.opacclient.apis.Adis.java", "BodyUseAPI": ["doc.select((\"#\" + (query.getKey()))).val(query.getValue())", "org.jsoup.nodes.Document.select((\"#\" + (query.getKey())))", "de.geeksfactory.opacclient.searchfields.SearchQuery.getKey()", "de.geeksfactory.opacclient.searchfields.SearchQuery.getKey()", "de.geeksfactory.opacclient.searchfields.SearchQuery.getSearchField()", "doc.select((\"#\" + (query.getKey()))).size()", "de.geeksfactory.opacclient.searchfields.SearchQuery.getValue()", "org.jsoup.nodes.Document.select((\"#\" + (query.getKey())))"], "Fixed commit": "ced84cfa67b8c9b987cf5ec48c4535e61881366a", "Url": "https://api.github.com/repos/opacapp/opacclient", "Date": "2015-10-15T13:48:07Z"},
{"Line": "=>834", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { loadPrefs(false); } catch (java.lang.Throwable e) { java.lang.String s = bspkrs.mmv.gui.MappingGui.getStackTraceMessage(\"An error has occurred - give bspkrs this stack trace (which has been copied to the clipboard) if the error continues to occur on launch.\\n\", e); java.lang.System.err.println(s); final java.lang.String errMsg = s; javax.swing.SwingUtilities.invokeLater(new java.lang.Runnable() { @java.lang.Override public void run() { progressBar.setString(\" \"); progressBar.setValue(0); java.awt.Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new java.awt.datatransfer.StringSelection(errMsg), null); javax.swing.JOptionPane.showMessageDialog(bspkrs.mmv.gui.MappingGui.this, errMsg, \"MMV - Error\", javax.swing.JOptionPane.ERROR_MESSAGE); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1651/buggy-version/src.bspkrs.mmv.gui.MappingGui.java", "BodyUseAPI": ["bspkrs.mmv.gui.MappingGui.loadPrefs(boolean)"], "Fixed commit": "ef775ead1579aefd7d8b0547293ed680c00b9418", "Url": "https://api.github.com/repos/bspkrs/MCPMappingViewer", "Date": "2014-10-25T05:59:41Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { javax.faces.context.FacesContext.getCurrentInstance().getExternalContext().redirect(\"http://localhost:8080/CriticalJobApplicationHR/\"); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5074/buggy-version/recruitment-hr-presentation.src.main.java.pt.uc.dei.aor.g8.jobapp.hrPresentation.UserBean.java", "BodyUseAPI": ["javax.faces.context.FacesContext.getCurrentInstance()", "javax.faces.context.FacesContext.getCurrentInstance().getExternalContext()", "javax.faces.context.FacesContext.getCurrentInstance().getExternalContext().redirect(java.lang.String)"], "Fixed commit": "4b6df40e8eeba411191d2ad7f79deb9da4a7a452", "Url": "https://api.github.com/repos/joaopedromartins/ProjetoFinal-Grupo8", "Date": "2015-09-08T23:04:39Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((pageNum) != null) page = java.lang.Integer.parseInt(pageNum); } catch (java.lang.Exception e) { page = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3994/buggy-version/src.main.java.sitecreators.managedbeans.bootshop.ProductsBean.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "a62e2b0c5cb44d5dfc84c57981530e21f6f8dfcf", "Url": "https://api.github.com/repos/IvViktor/shoptemplate", "Date": "2016-06-20T15:05:20Z"},
{"Line": "=>500", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (accountManager != null) accountManager.systemReady(); } catch (java.lang.Throwable e) { reportWtf(\"making Account Manager Service ready\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7104/buggy-version/services.java.com.android.server.SystemServer.java", "BodyUseAPI": ["android.accounts.AccountManagerService.systemReady()"], "Fixed commit": "47c6cf8fe471796a95688995494d88449a8de93e", "Url": "https://api.github.com/repos/codefireX/android_frameworks_base", "Date": "2012-10-10T01:20:28Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { printBaseHref(); } catch (java.io.IOException e) { org.jboss.dashboard.ui.taglib.EnvelopeHeadTag.log.error(\"Error: \", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6683/buggy-version/modules.dashboard-ui.dashboard-ui-core.src.main.java.org.jboss.dashboard.ui.taglib.EnvelopeHeadTag.java", "BodyUseAPI": ["org.jboss.dashboard.ui.taglib.EnvelopeHeadTag.1.printBaseHref()"], "Fixed commit": "277883266af7715b269a340b9dcb9d71fdd7fcd6", "Url": "https://api.github.com/repos/droolsjbpm/dashboard-builder", "Date": "2013-03-20T12:12:30Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((pd.getOrderId().getOrderID()) == orderId) return pd; } catch (java.lang.NullPointerException npe) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8592/buggy-version/src.main.java.com.netbuilder.entity_managers.arraylist.PaymentDetailsManagerAL.java", "BodyUseAPI": ["pd.getOrderId().getOrderID()", "com.netbuilder.entities.PaymentDetails.getOrderId()"], "Fixed commit": "cfb17770ac46c6c4c8d8e0aeff22824f91be9798", "Url": "https://api.github.com/repos/NickGBT/Orange-Gardens", "Date": "2015-07-10T08:46:26Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { readWriteLock.writeLock().lock(); if ((indexAttribute) != null) { operator.overwriteOrAdd(overwritingOrAddingEventChunk, eventsMap, mappingPosition); }else { operator.overwriteOrAdd(overwritingOrAddingEventChunk, eventsList, mappingPosition); } } finally { readWriteLock.writeLock().unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8488/buggy-version/modules.siddhi-core.src.main.java.org.wso2.siddhi.core.table.InMemoryEventTable.java", "BodyUseAPI": ["org.wso2.siddhi.core.util.collection.operator.Operator.overwriteOrAdd(org.wso2.siddhi.core.event.ComplexEventChunk,java.util.Queue<org.wso2.siddhi.core.event.stream.StreamEvent>,int[])", "java.util.concurrent.locks.ReadWriteLock.writeLock()", "org.wso2.siddhi.core.util.collection.operator.Operator.overwriteOrAdd(org.wso2.siddhi.core.event.ComplexEventChunk,java.util.SortedMap<java.lang.Object, org.wso2.siddhi.core.event.stream.StreamEvent>,int[])", "java.util.concurrent.locks.Lock.lock()"], "Fixed commit": "78a1aa18a0ea96fec5db3b51c76afc47fd1334c7", "Url": "https://api.github.com/repos/ChariniNana/siddhi", "Date": "2016-06-17T10:11:38Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { replaceBy = olsClient.getReplacedBy(semanticTag.toString()); } catch (org.springframework.web.client.RestClientException e) { getLog().debug((semanticTag + \" something went wrong when we tried to find a replacement in OLS!\")); replaceBy = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1803/buggy-version/zooma-ols-service.src.main.java.uk.ac.ebi.fgpt.zooma.service.OLSSearchService.java", "BodyUseAPI": ["uk.ac.ebi.pride.utilities.ols.web.service.client.OLSClient.getReplacedBy(java.lang.String)", "java.net.URI.toString()"], "Fixed commit": "866b4efacdd00d87c8ed790c04fea856a92add66", "Url": "https://api.github.com/repos/EBISPOT/zooma", "Date": "2017-06-14T09:48:25Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { sess = com.h4313.deephouse.util.HibernateUtil.sessionFactory.getCurrentSession(); } catch (com.h4313.deephouse.util.org.hibernate he) { sess = com.h4313.deephouse.util.HibernateUtil.sessionFactory.openSession(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7196/buggy-version/utils.src.com.h4313.deephouse.util.HibernateUtil.java", "BodyUseAPI": ["org.hibernate.SessionFactory.getCurrentSession()"], "Fixed commit": "41aa1f68656776902d68d490d7549d3820cdefb1", "Url": "https://api.github.com/repos/H4313/util", "Date": "2014-02-24T18:33:35Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { dimID = net.minecraft.command.CommandBase.parseInt(icommandsender, astring[0]); } catch (java.lang.Exception e) { throw new net.minecraft.command.WrongUsageException((\"Needs a dimension number! Usage: \" + (this.getCommandUsage(icommandsender))), new java.lang.Object[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6678/buggy-version/src.main.java.micdoodle8.mods.galacticraft.core.command.CommandKeepDim.java", "BodyUseAPI": ["net.minecraft.command.CommandBase.parseInt(net.minecraft.command.ICommandSender,java.lang.String)"], "Fixed commit": "8f09e0be65e93d7f8074e37ee2d26bf09d19f1f2", "Url": "https://api.github.com/repos/ChatFawkes/Galacticraft", "Date": "2014-11-30T13:10:31Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(1); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/605/buggy-version/simulator.de.upb.simulator.opengl.OpenGlMain.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "cd3a6f71cde828d07bf0734be0979f941f01ed33", "Url": "https://api.github.com/repos/Krakomat/Simulator", "Date": "2015-08-12T14:36:33Z"},
{"Line": "=>925", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { r.run(); } finally { currentRunningJob = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5922/buggy-version/OsmAnd.src.net.osmand.plus.routing.RoutingHelper.java", "BodyUseAPI": ["java.lang.Runnable.run()"], "Fixed commit": "04ebe2ecf89f564eea55fbd05a3e503e52095e86", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2016-03-17T08:44:23Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { super.doInclude(request, response, chain); } finally { if (response instanceof com.psddev.cms.db.LazyWriterResponse) { ((com.psddev.cms.db.LazyWriterResponse) (response)).getLazyWriter().writePending(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7427/buggy-version/db.src.main.java.com.psddev.cms.db.PageFilter.java", "BodyUseAPI": ["com.psddev.dari.util.AbstractFilter.doInclude(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)"], "Fixed commit": "b2e6c4c7870c2bd90c53332ffaae7d67d327c3cb", "Url": "https://api.github.com/repos/perfectsense/brightspot-cms", "Date": "2015-05-13T13:25:00Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { switch (com.t_oster.visicut.model.graphicelements.svgsupport.SVGObject.Attribute.valueOf(name.replace(\" \", \"_\"))) { case Group : { for (com.kitfox.svg.SVGElement e : this.getPath(this.getDecoratee())) { if (e instanceof com.kitfox.svg.Group) { java.lang.String id = ((com.kitfox.svg.Group) (e)).getId(); if (id != null) { result.add(id); } } } break; } } } catch (java.lang.IllegalArgumentException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8442/buggy-version/src.com.t_oster.visicut.model.graphicelements.svgsupport.SVGObject.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "java.util.List<java.lang.Object>.add(java.lang.String)", "com.t_oster.visicut.model.graphicelements.svgsupport.SVGObject.getDecoratee()", "com.kitfox.svg.SVGElement.getId()", "com.t_oster.visicut.model.graphicelements.svgsupport.SVGObject.Attribute.valueOf(java.lang.String)", "com.t_oster.visicut.model.graphicelements.svgsupport.SVGObject.getPath(com.kitfox.svg.RenderableElement)"], "Fixed commit": "e61cf6e27d0855fb626b82cc23039d72d3ca17c6", "Url": "https://api.github.com/repos/t-oster/VisiCut", "Date": "2011-09-20T20:05:37Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return android.support.v4.content.FileProvider.getUriForFile(context, ((com.mauriciotogneri.fileexplorer.BuildConfig.APPLICATION_ID) + \".provider\"), file); } catch (java.lang.Exception e) { return uriNormal(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3492/buggy-version/app.src.main.java.com.mauriciotogneri.fileexplorer.models.FileInfo.java", "BodyUseAPI": ["android.support.v4.content.FileProvider.getUriForFile(android.content.Context,((com.mauriciotogneri.fileexplorer.BuildConfig.APPLICATION_ID) + \".provider\"),java.io.File)"], "Fixed commit": "8f8fddcbbf8e58e20902365ce577d5c6ddbcf65d", "Url": "https://api.github.com/repos/mauriciotogneri/fileexplorer", "Date": "2017-04-28T17:50:09Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { models.Identity result = em.createQuery(cq).getSingleResult(); return wrap(result); } catch (dao.javax.persistence e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8242/buggy-version/modules.models.app.dao.IdentityDAO.java", "BodyUseAPI": ["em.createQuery(cq).getSingleResult()", "dao.IdentityDAO.createQuery(javax.persistence.criteria.CriteriaQuery<models.Identity>)", "dao.IdentityDAO.wrap(models.Identity)"], "Fixed commit": "def4a7f211cc1d8381822c3420b40541fd73f440", "Url": "https://api.github.com/repos/frgomes/ssdemojpa", "Date": "2014-04-16T04:29:46Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { models.Identity result = em.createQuery(cq).getSingleResult(); return wrap(result); } catch (dao.javax.persistence e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8242/buggy-version/modules.models.app.dao.IdentityDAO.java", "BodyUseAPI": ["dao.IdentityDAO.createQuery(javax.persistence.criteria.CriteriaQuery<models.Identity>)", "dao.IdentityDAO.wrap(models.Identity)", "em.createQuery(cq).getSingleResult()"], "Fixed commit": "def4a7f211cc1d8381822c3420b40541fd73f440", "Url": "https://api.github.com/repos/frgomes/ssdemojpa", "Date": "2014-04-16T04:29:46Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { if (force || ((availableVersions) == null)) { availableVersions = com.facebook.internal.NativeProtocol.fetchAllAvailableProtocolVersionsForAppInfo(this); } } finally { if (force) { com.facebook.internal.NativeProtocol.protocolVersionsAsyncUpdating.set(false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5881/buggy-version/facebook.src.main.java.com.facebook.internal.NativeProtocol.java", "BodyUseAPI": ["com.facebook.internal.NativeProtocol.fetchAllAvailableProtocolVersionsForAppInfo(com.facebook.internal.NativeProtocol.NativeAppInfo)"], "Fixed commit": "1c58bb0020b277f1b0a8eb8da33b88d4aa1d1f3c", "Url": "https://api.github.com/repos/subeeshb/facebook-android-sdk", "Date": "2017-03-30T04:17:54Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { writeText(document, dummy); } catch (final org.apache.pdfbox.contentstream.PdfTimeoutException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6595/buggy-version/debugger.src.main.java.org.apache.pdfbox.debugger.pagepane.DebugTextOverlay.java", "BodyUseAPI": ["org.apache.pdfbox.debugger.pagepane.DebugTextOverlay.DebugTextStripper.writeText(org.apache.pdfbox.pdmodel.PDDocument,java.io.Writer)"], "Fixed commit": "c58144d6bfa58d4369bf8742f53489aeff24b5dc", "Url": "https://api.github.com/repos/zhangkungmail/pdfbox", "Date": "2017-12-08T01:05:23Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String[] parts = host.split(\"\\\\.\"); if ((parts.length) > 1) { return ((parts[((parts.length) - 2)]) + \".\") + (parts[((parts.length) - 1)]); }else { return host; } } catch (java.lang.Exception e) { return host; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3521/buggy-version/src.com.tobykurien.webapps.webviewclient.WebClient.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "ea60f3ce950992de41878a278dcd35a728af2ee9", "Url": "https://api.github.com/repos/tobykurien/WebApps", "Date": "2013-10-28T11:30:56Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mediaPlayer.getTrackInfo(); } catch (java.lang.IllegalStateException e) { stopPlaying(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2911/buggy-version/Mamula.BLESignalMeter.src.com.blesignalmeter.PlayVideo.java", "BodyUseAPI": ["android.media.MediaPlayer.getTrackInfo()"], "Fixed commit": "603897526513eaa8420fe561857f29fd9ecbb993", "Url": "https://api.github.com/repos/mleykin/mera_buma_training", "Date": "2014-11-21T12:40:26Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.app.Instrumentation instrumentation = new android.app.Instrumentation(); instrumentation.sendKeyDownUpSync(KeyEvent.KEYCODE_BACKSLASH); } catch (java.lang.SecurityException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3965/buggy-version/native-example.src.main.java.com.h6ah4i.android.example.nativeopenslmediaplayer.MainNativeActivity.java", "BodyUseAPI": ["android.app.Instrumentation.sendKeyDownUpSync(KeyEvent.KEYCODE_BACKSLASH)"], "Fixed commit": "1108cd5f3832914733b1f184f4a9b08c46974fe2", "Url": "https://api.github.com/repos/h6ah4i/android-openslmediaplayer", "Date": "2016-07-31T05:48:05Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return session.get(mappedField.getType(), id); } catch (org.om.core.api.exception.PathNotFoundException e) { switch (mappedField.getMissingStrategy()) { case ReturnNull : return null; case DefaultValue : case ThrowException : default : throw new org.om.core.api.exception.MissingException((((\"Cannot find \" + id) + \" while retrieving \") + mappedField), e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1703/buggy-version/core.impl.src.main.java.org.om.core.impl.persistence.interceptor.handler.ReferenceHandler.java", "BodyUseAPI": ["org.om.core.api.session.Session.get(mappedField.getType(),java.lang.Object)", "org.om.core.api.mapping.MappedField.getType()"], "Fixed commit": "f992ea272b04debcc6a344433ad0866cfad3bf9d", "Url": "https://api.github.com/repos/ilikeorangutans/omf", "Date": "2012-07-25T02:02:17Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { driver.findElement(org.openqa.selenium.By.className(\"logout\")).click(); } catch (org.openqa.selenium.WebDriverException e) { wait5seconds.until(elementToBeClickable(org.openqa.selenium.By.className(\"logout\"))); driver.findElement(org.openqa.selenium.By.className(\"logout\")).click(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7462/buggy-version/src.main.java.org.openmrs.module.mirebalais.smoke.pageobjects.HeaderPage.java", "BodyUseAPI": ["org.openqa.selenium.By.className(java.lang.String)", "driver.findElement(org.openqa.selenium.By.className(\"logout\")).click()", "org.openmrs.module.mirebalais.smoke.pageobjects.HeaderPage.findElement(org.openqa.selenium.By.className(\"logout\"))"], "Fixed commit": "2bb619aa3eaee320b1bc63d6d5439c7a01b62287", "Url": "https://api.github.com/repos/PIH/mirebalais-smoke-tests", "Date": "2015-09-24T17:36:03Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { camera = android.hardware.Camera.open(); } catch (java.lang.Exception e) { camera = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2887/buggy-version/src.com.tatuas.android.cameraview.CameraView.java", "BodyUseAPI": ["android.hardware.Camera.open()"], "Fixed commit": "69d5654bc90a0b6fe691e48194ac3341157daed0", "Url": "https://api.github.com/repos/tatuas/AndroidCameraView", "Date": "2014-02-27T08:42:03Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { end.setText(to.get(0).getLocality()); } catch (java.lang.RuntimeException e) { end.setText(\"Unable to parse the location\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5206/buggy-version/app.src.main.java.ca.ualberta.cs.linkai.beep.RequestDetailActivity_OPEN.java", "BodyUseAPI": ["android.widget.TextView.setText(to.get(0).getLocality())", "java.util.List<android.location.Address>.get(int)", "to.get(0).getLocality()"], "Fixed commit": "9d3586da981ba5dd5532d635d7b3f8335139612e", "Url": "https://api.github.com/repos/CMPUT301F16T14/Project", "Date": "2016-11-28T06:24:50Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mDefaultProgressColor = typedArray.getColor(0, com.gu.swiperefresh.LoadViewController.CIRCLE_BG_LIGHT); } catch (java.lang.Exception e) { mDefaultProgressColor = com.gu.swiperefresh.LoadViewController.CIRCLE_BG_LIGHT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8424/buggy-version/swiperefresh.src.main.java.com.gu.swiperefresh.LoadViewController.java", "BodyUseAPI": ["android.content.res.TypedArray.getColor(int,int)"], "Fixed commit": "8944d6a0b02e050d03427f950495145dedeae5a1", "Url": "https://api.github.com/repos/guhongya/SwipeRefreshPlus", "Date": "2017-05-05T06:55:33Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { java.lang.Thread.currentThread().setContextClassLoader(getClass().getClassLoader()); org.apache.poi.sl.usermodel.SlideShow<?, ?> ss = org.apache.poi.sl.usermodel.SlideShowFactory.create(input); if (ss instanceof org.apache.poi.xslf.usermodel.XMLSlideShow) { org.apache.poi.xslf.usermodel.XMLSlideShow slideShow = ((org.apache.poi.xslf.usermodel.XMLSlideShow) (ss)); byte[] thumbnail = generatePptxThumbnail(slideShow); if (thumbnail != null) { metacard.setAttribute(new ddf.catalog.data.impl.AttributeImpl(ddf.catalog.data.Metacard.THUMBNAIL, thumbnail)); } }else { ddf.catalog.transformer.input.pptx.PptxInputTransformer.LOGGER.debug(\"Cannot transform old style (OLE2) ppt : id = {}\", metacard.getId()); } } finally { java.lang.Thread.currentThread().setContextClassLoader(tccl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1957/buggy-version/catalog.transformer.catalog-transformer-pptx.src.main.java.ddf.catalog.transformer.input.pptx.PptxInputTransformer.java", "BodyUseAPI": ["java.lang.Thread.setContextClassLoader(java.lang.ClassLoader)", "java.lang.Thread.currentThread()", "ddf.catalog.data.Metacard.setAttribute(ddf.catalog.data.impl.AttributeImpl)", "ddf.catalog.transformer.input.pptx.PptxInputTransformer.getClass()", "org.apache.poi.sl.usermodel.SlideShowFactory.create(java.io.InputStream)", "org.slf4j.Logger.debug(java.lang.String,metacard.getId())", "java.lang.Class<? extends ddf.catalog.transformer.input.pptx.PptxInputTransformer>.getClassLoader()", "ddf.catalog.transformer.input.pptx.PptxInputTransformer.generatePptxThumbnail(org.apache.poi.xslf.usermodel.XMLSlideShow)", "ddf.catalog.data.Metacard.getId()"], "Fixed commit": "1348c179e81d491d1ad16cf0085e9dff59d1db8b", "Url": "https://api.github.com/repos/glenhein/ddf", "Date": "2016-03-24T17:13:08Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { con.close(); } catch (java.sql.SQLException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7547/buggy-version/rentaride.src.edu.uga.cs.rentaride.presentation.login_servlet.java", "BodyUseAPI": ["java.sql.Connection.close()"], "Fixed commit": "53f642df559b4b9dd87fec4a7b66970f4dfc7bf5", "Url": "https://api.github.com/repos/systemwide/team_12_rentaride_part_7", "Date": "2017-11-12T23:48:55Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return fingerprintManager.isHardwareDetected(); } catch (java.lang.SecurityException ignored) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/182/buggy-version/core.src.main.java.com.github.ajalt.reprint.module.marshmallow.MarshmallowReprintModule.java", "BodyUseAPI": ["android.support.v4.hardware.fingerprint.FingerprintManagerCompat.isHardwareDetected()"], "Fixed commit": "9546e5abfca78191faa50f8f520351a17ae3e569", "Url": "https://api.github.com/repos/ajalt/reprint", "Date": "2016-01-25T17:11:56Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { documentService.updateIndices(documentReference); response.setStatus(ch.silviowangler.dox.web.rest.SC_OK); } catch (ch.silviowangler.dox.api.DocumentNotFoundException e) { logger.error(\"Document {} not found \", documentReference.getId(), e); response.setStatus(ch.silviowangler.dox.web.rest.SC_BAD_REQUEST); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5030/buggy-version/web.src.main.java.ch.silviowangler.dox.web.rest.DocumentController.java", "BodyUseAPI": ["javax.servlet.http.HttpServletResponse.setStatus(ch.silviowangler.dox.web.rest.SC_OK)", "ch.silviowangler.dox.api.DocumentService.updateIndices(ch.silviowangler.dox.api.DocumentReference)"], "Fixed commit": "a13a2670497ef001c4e820f61d24218664943ca7", "Url": "https://api.github.com/repos/saw303/dox", "Date": "2014-07-04T09:09:21Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.content.pm.PackageInfo packageInfo = context.getPackageManager().getPackageInfo(context.getPackageName(), 0); mailText = mailText.concat(((\"App version: \" + (packageInfo.versionName)) + \"\\n\")); } catch (android.content.pm.PackageManager.NameNotFoundException e) { mailText = mailText.concat(\"App version: unknown\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5431/buggy-version/src.net.muteheadlight.docksoundredir.dockRedirCentral.java", "BodyUseAPI": ["context.getPackageManager().getPackageInfo(context.getPackageName(),int)", "android.content.Context.getPackageManager()", "android.content.Context.getPackageName()", "java.lang.String.concat(((\"App version: \" + (packageInfo.versionName)) + \"\\n\"))"], "Fixed commit": "4b7017ef0244dc362df3dab054f98a36cb71e95d", "Url": "https://api.github.com/repos/xcaliburinhand/DockSoundRedirector", "Date": "2012-08-05T02:00:28Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { redis.clients.jedis.Jedis jedis = jedisPool.getResource(); com.github.wens.mq.RedisMessageQueue.TopicListener topicListener = new com.github.wens.mq.RedisMessageQueue.TopicListener(); try { jedis.subscribe(topicListener, \"_queue_\"); } finally { if (jedis != null) { jedis.close(); } } } catch (java.lang.Exception e) { com.github.wens.mq.RedisMessageQueue.log.error(\"Redis has some error : \\n {}\", e); try { java.lang.Thread.sleep(500); } catch (java.lang.InterruptedException e1) { java.lang.Thread.currentThread().interrupt(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6715/buggy-version/src.main.java.com.github.wens.mq.RedisMessageQueue.java", "BodyUseAPI": ["redis.clients.jedis.JedisPool.getResource()", "redis.clients.jedis.Jedis.subscribe(com.github.wens.mq.RedisMessageQueue.TopicListener,java.lang.String)", "redis.clients.jedis.Jedis.close()"], "Fixed commit": "5663dc7814862e8e870100416d34557e9fbdf49f", "Url": "https://api.github.com/repos/wenzuojing/redis-mq", "Date": "2017-03-27T02:45:25Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { item = com.pelmers.recall.NotesLoader.getInstance(this).loadNotes().get(position); } catch (java.lang.IndexOutOfBoundsException ex) { finish(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8372/buggy-version/app.src.main.java.com.pelmers.recall.ViewActivity.java", "BodyUseAPI": ["com.pelmers.recall.NotesLoader.getInstance(this).loadNotes().get(int)", "com.pelmers.recall.NotesLoader.getInstance(this).loadNotes()", "com.pelmers.recall.NotesLoader.getInstance(com.pelmers.recall.ViewActivity)"], "Fixed commit": "02338ced5ce51663ea573da5c495dfa188adac52", "Url": "https://api.github.com/repos/pelmers/recall-android", "Date": "2015-12-22T22:17:31Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { int subtraction = (java.lang.Integer.parseInt(num1)) - (java.lang.Integer.parseInt(num2)); tvResult.setText(java.lang.String.valueOf(subtraction)); } catch (java.lang.Exception e) { tvResult.setText(\"Cannot SUBTRACT!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7785/buggy-version/MybasicCalculator.app.src.main.java.com.basiccalc.mybasiccalculator.MainActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.valueOf(int)"], "Fixed commit": "3d664341076f8ddb0483b13abe8ca0b08bed3a51", "Url": "https://api.github.com/repos/Gerrant17/Android-Basic-Calculator-App", "Date": "2016-03-17T15:04:19Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { int addition = (java.lang.Integer.parseInt(num1)) + (java.lang.Integer.parseInt(num2)); tvResult.setText(java.lang.String.valueOf(addition)); } catch (java.lang.Exception e) { tvResult.setText(\"Cannot ADD!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7785/buggy-version/MybasicCalculator.app.src.main.java.com.basiccalc.mybasiccalculator.MainActivity.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "android.widget.TextView.setText(java.lang.String)", "java.lang.String.valueOf(int)"], "Fixed commit": "3d664341076f8ddb0483b13abe8ca0b08bed3a51", "Url": "https://api.github.com/repos/Gerrant17/Android-Basic-Calculator-App", "Date": "2016-03-17T15:04:19Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { int multiply = (java.lang.Integer.parseInt(num1)) * (java.lang.Integer.parseInt(num2)); tvResult.setText(java.lang.String.valueOf(multiply)); } catch (java.lang.Exception e) { tvResult.setText(\"Cannot MULTIPLY!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7785/buggy-version/MybasicCalculator.app.src.main.java.com.basiccalc.mybasiccalculator.MainActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.valueOf(int)"], "Fixed commit": "3d664341076f8ddb0483b13abe8ca0b08bed3a51", "Url": "https://api.github.com/repos/Gerrant17/Android-Basic-Calculator-App", "Date": "2016-03-17T15:04:19Z"},
{"Line": "=>2552", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { net.toload.main.hd.limedb.LimeDB.db.execSQL((\"drop table \" + backupTableName)); } catch (java.lang.Exception e) { android.util.Log.i(net.toload.main.hd.limedb.LimeDB.TAG, (\"Remove the table \" + backupTableName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5936/buggy-version/LimeStudio.app.src.main.java.net.toload.main.hd.limedb.LimeDB.java", "BodyUseAPI": ["android.database.sqlite.SQLiteDatabase.execSQL(java.lang.String)"], "Fixed commit": "5d437ea04c660d4ad4f7820730457c96fa345c9a", "Url": "https://api.github.com/repos/lime-ime/limeime", "Date": "2015-06-10T13:05:08Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { int result = o1.item.resname().compareTo(o2.item.resname()); if (result == 0) { result = haven.Inventory.cmp_desc.compare(o1, o2); } return result; } catch (haven.Loading l) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6396/buggy-version/src.haven.Inventory.java", "BodyUseAPI": ["o1.item.resname().compareTo(o2.item.resname())", "o2.item.resname()", "o1.item.resname()", "java.util.Comparator<haven.WItem>.compare(haven.WItem,haven.WItem)"], "Fixed commit": "b38c6e78614a91332428590062ace3d31c49d262", "Url": "https://api.github.com/repos/DonnEssime/Custom-Salem", "Date": "2015-03-03T16:19:28Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { frmMain.cmbSettingsCategories.setSelectedIndex(0); } catch (java.lang.IllegalArgumentException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/53/buggy-version/MyBudget.src.de.hanneseilers.gui.PageSettings.java", "BodyUseAPI": ["frmMain.cmbSettingsCategories.setSelectedIndex(int)"], "Fixed commit": "7ae70620791ec6682396ec8d346a045deac87c77", "Url": "https://api.github.com/repos/hanneseilers/MyBudget", "Date": "2014-11-28T11:36:20Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { handler.handle(this); } catch (java.lang.NullPointerException ex) { java.lang.System.out.println((\"No handler yet for this type of request: \" + (request.method))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4429/buggy-version/src.Response.java", "BodyUseAPI": ["RequestHandler.handle(Response)"], "Fixed commit": "54b3c042888338d429d627da901511bb1d3d9b73", "Url": "https://api.github.com/repos/alexreedhill/JoeServer", "Date": "2014-03-19T17:15:16Z"},
{"Line": "=>5012", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.awt.Component c = super.prepareRenderer(renderer, rowIndex, vColIndex); if (c instanceof javax.swing.JComponent) { javax.swing.JComponent jc = ((javax.swing.JComponent) (c)); java.lang.String tooltip = getTooltipCell(rowIndex, vColIndex); jc.setToolTipText(tooltip); } return c; } catch (java.lang.Exception e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2934/buggy-version/FWCommon.src.ar.com.fwcommon.componentes.FWJTable.java", "BodyUseAPI": ["javax.swing.JComponent.setToolTipText(java.lang.String)", "ar.com.fwcommon.componentes.FWJTable.getTooltipCell(int,int)", "javax.swing.JTable.prepareRenderer(javax.swing.table.TableCellRenderer,int,int)"], "Fixed commit": "f3d513f7d6d997eb5cc589c0ffff595a16e11050", "Url": "https://api.github.com/repos/nacho270/GTL", "Date": "2016-02-13T13:45:45Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.bukkit.Bukkit.getScheduler().runTaskLater(PVPArena.instance, new RunLater(), 5L); } catch (java.lang.Exception e) { for (final org.bukkit.potion.PotionEffect pe : player.getActivePotionEffects()) { player.removePotionEffect(pe.getType()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3223/buggy-version/src.net.slipcor.pvparena.arena.PlayerState.java", "BodyUseAPI": ["org.bukkit.Bukkit.getScheduler()", "org.bukkit.Bukkit.getScheduler().runTaskLater(PVPArena.instance,RunLater,long)"], "Fixed commit": "e5690d85699d5a4189659471e14ec1e2b1550a8d", "Url": "https://api.github.com/repos/slipcor/pvparena", "Date": "2017-12-20T01:14:25Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((com.dreamlink.communication.ui.file.FileBrowserFragment.APK) == type) { java.util.Collections.sort(mAllLists); }else { java.util.Collections.sort(mAllLists, com.dreamlink.communication.ui.file.FileBrowserFragment.DATE_COMPARATOR); } } catch (java.lang.Exception e) { com.dreamlink.communication.util.Log.e(com.dreamlink.communication.ui.file.FileBrowserFragment.TAG, (\"handlerMessage.exception:\" + (e.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1093/buggy-version/src.com.dreamlink.communication.ui.file.FileBrowserFragment.java", "BodyUseAPI": ["java.util.Collections.sort(java.util.List<com.dreamlink.communication.ui.file.FileInfo>,java.util.Comparator<com.dreamlink.communication.ui.file.FileInfo>)", "java.util.Collections.sort(java.util.List<com.dreamlink.communication.ui.file.FileInfo>)"], "Fixed commit": "0dea67797eca8b357e849dc1eb23e7cfa3b794d5", "Url": "https://api.github.com/repos/liangPATHofei1100/AndroidCommunication", "Date": "2013-11-11T09:04:49Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.sbolstandard.core2.SBOLWriter.write(finalDoc, \"Final_TASBE.xml\"); } catch (org.sbolstandard.core2.SBOLConversionException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3386/buggy-version/src.SBOL_TASBE_Connector.GUI.ConnectorController.java", "BodyUseAPI": ["org.sbolstandard.core2.SBOLWriter.write(org.sbolstandard.core2.SBOLDocument,java.lang.String)"], "Fixed commit": "20564dbfd10e5715004c6664ab155e3b15432620", "Url": "https://api.github.com/repos/mehersam/TASBE_SBOL_Connector", "Date": "2017-12-28T22:39:48Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.util.Iterator<java.lang.String> iter = imageNames.iterator(); while (iter.hasNext()) { java.lang.String temp = iter.next(); if (!(storage.imageExists(temp))) { iter.remove(); } } } catch (java.util.ConcurrentModificationException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2443/buggy-version/app.src.main.java.com.andrew749.flickrwallpaper.WallpaperService.java", "BodyUseAPI": ["java.util.Iterator<java.lang.String>.next()", "java.util.Iterator<java.lang.String>.remove()", "java.util.Iterator<java.lang.String>.hasNext()", "java.util.ArrayList<java.lang.String>.iterator()", "com.andrew749.flickrwallpaper.DataHelper.LocalStorage.imageExists(java.lang.String)"], "Fixed commit": "493a39e60875a73bd2026f5b312ebcec4ea0cf53", "Url": "https://api.github.com/repos/andrew749/Drizio", "Date": "2015-06-10T03:22:40Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { me.FrejNielsen.EasyBan.EasyBan.banHandler = new me.FrejNielsen.EasyBan.Files.BanFile(this, \"bannedPlayers.txt\"); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6048/buggy-version/src.main.java.me.FrejNielsen.EasyBan.EasyBan.java", "BodyUseAPI": [], "Fixed commit": "c9b3fb9def4cfeda0da22056895edeadb871d990", "Url": "https://api.github.com/repos/CountedReturns/EasyBan", "Date": "2016-10-08T12:35:18Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { me.FrejNielsen.EasyBan.EasyBan.amountHandler = new me.FrejNielsen.EasyBan.Files.AmountFile(this, \"banAmounts.txt\"); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6048/buggy-version/src.main.java.me.FrejNielsen.EasyBan.EasyBan.java", "BodyUseAPI": [], "Fixed commit": "c9b3fb9def4cfeda0da22056895edeadb871d990", "Url": "https://api.github.com/repos/CountedReturns/EasyBan", "Date": "2016-10-08T12:35:18Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String source = \"constructor(...args) { super.constructor(...args); }\"; DefaultConstructorSource = com.github.anba.es6draft.runtime.internal.SourceCompressor.compress(source).call(); } catch (java.lang.Exception e) { throw new java.lang.IllegalStateException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4771/buggy-version/src.main.java.com.github.anba.es6draft.runtime.internal.ScriptRuntime.java", "BodyUseAPI": ["com.github.anba.es6draft.runtime.internal.SourceCompressor.compress(source).call()", "com.github.anba.es6draft.runtime.internal.SourceCompressor.compress(java.lang.String)"], "Fixed commit": "9f59905c9e8a3fcb708eb9ee19d9152d84aef51f", "Url": "https://api.github.com/repos/anba/es6draft", "Date": "2013-02-04T13:53:55Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { projectFile.delete(IFile.FORCE, npm); } catch (org.eclipse.core.runtime.CoreException ce) { org.eclipse.core.runtime.IPath projectFileLocation = projectFile.getLocation(); projectFileLocation.toFile().delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1927/buggy-version/tools.plugins.com.liferay.ide.upgrade.core.src.com.liferay.blade.eclipse.provider.WorkspaceHelper.java", "BodyUseAPI": ["org.eclipse.core.resources.IFile.delete(IFile.FORCE,org.eclipse.core.runtime.IProgressMonitor)"], "Fixed commit": "a42b317d762e20322f22e23c0592d43edff0ade9", "Url": "https://api.github.com/repos/rui123wang/liferay-ide", "Date": "2017-11-20T10:33:16Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { jsonJavaRootObject = new com.google.gson.Gson().fromJson(json, java.util.Map.class); } catch (com.google.gson.JsonSyntaxException e) { java.lang.System.out.println(\"bad json\"); java.lang.System.out.println((\"\\t\" + json)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4186/buggy-version/edXLogAnalyzer.src.EdXLogAnalyzer.java", "BodyUseAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Fixed commit": "394e62b1c0c32986be26a5b7562348ca612b27dc", "Url": "https://api.github.com/repos/briantwhite/JavaCodeFromSVN", "Date": "2013-11-15T14:14:13Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { result = com.alibaba.fastjson.JSON.parseObject(content, clazz); } catch (java.lang.Throwable e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/270/buggy-version/dao-gen-core.src.main.java.com.ctrip.platform.dal.daogen.utils.HttpUtil.java", "BodyUseAPI": ["com.alibaba.fastjson.JSON.parseObject(java.lang.String,java.lang.Class<T>)"], "Fixed commit": "db4127e2b93ed19b01fd06572a33712cda443ba7", "Url": "https://api.github.com/repos/ctripcorp/dal", "Date": "2017-06-09T07:18:42Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.widget.Toast.makeText(activity, message, Toast.LENGTH_SHORT).show(); } catch (java.lang.RuntimeException e) { android.util.Log.e(\"showToast\", (\"message:\" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1816/buggy-version/uikit.src.main.java.com.midtrans.sdk.uikit.utilities.SdkUIFlowUtil.java", "BodyUseAPI": ["android.widget.Toast.makeText(activity, message, Toast.LENGTH_SHORT).show()", "android.widget.Toast.makeText(android.app.Activity,java.lang.String,Toast.LENGTH_SHORT)"], "Fixed commit": "ec3dc8a8fee8582d9c22caff77d0bea50c3b4248", "Url": "https://api.github.com/repos/veritrans/veritrans-android", "Date": "2017-12-19T05:51:48Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.json.JSONObject profile = new org.json.JSONObject(prefs.getString(\"profile\", null)); name = profile.getString(\"name\"); email = profile.getString(\"email\"); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4821/buggy-version/app.src.main.java.globalclass.GlobalClass.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)", "android.content.SharedPreferences.getString(java.lang.String,<nulltype>)", "org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "c00f24a8d07f3918ea1a0d57495b01748f817ba4", "Url": "https://api.github.com/repos/abhishekramkrishna002/aptamitraUser", "Date": "2015-07-31T08:37:10Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { UpdaterDialog.show(); } catch (android.view.WindowManager Bt) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3865/buggy-version/app.src.main.java.io.github.otaupdater.otaupdater.activity.DialogActivity.java", "BodyUseAPI": ["com.eminayar.panter.PanterDialog.show()"], "Fixed commit": "0f65c7c9607b2b4b591a57d5d59902d5f2137f96", "Url": "https://api.github.com/repos/androidlover5842/OtaUpdater", "Date": "2017-01-12T10:48:57Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (!(MultitenantConstants.SUPER_TENANT_DOMAIN_NAME.equals(tenantDomain))) { org.wso2.carbon.core.multitenancy.utils.TenantAxisUtils.getTenantConfigurationContext(tenantDomain, org.wso2.carbon.core.services.internal.CarbonServicesServiceComponent.getConfigurationContextService().getServerConfigContext()); } } catch (java.lang.Exception e) { org.wso2.carbon.core.services.util.CarbonAuthenticationUtil.log.error(\"Error trying load tenant after successful login\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4458/buggy-version/core.org.wso2.carbon.core.services.src.main.java.org.wso2.carbon.core.services.util.CarbonAuthenticationUtil.java", "BodyUseAPI": ["MultitenantConstants.SUPER_TENANT_DOMAIN_NAME.equals(java.lang.String)", "org.wso2.carbon.core.multitenancy.utils.TenantAxisUtils.getTenantConfigurationContext(java.lang.String,org.wso2.carbon.core.services.internal.CarbonServicesServiceComponent.getConfigurationContextService().getServerConfigContext())", "org.wso2.carbon.core.services.internal.CarbonServicesServiceComponent.getConfigurationContextService()", "org.wso2.carbon.core.services.internal.CarbonServicesServiceComponent.getConfigurationContextService().getServerConfigContext()"], "Fixed commit": "f32eee1ec206b0995d4e3592359736e5ebd7f5ea", "Url": "https://api.github.com/repos/wso2/carbon-kernel", "Date": "2016-10-25T18:32:59Z"},
{"Line": "=>490", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return new java.lang.Integer(value).intValue(); } catch (java.lang.NumberFormatException ex) { return new java.math.BigDecimal(value).intValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/9254/buggy-version/src.main.java.net.segoia.util.data.reflection.ReflectionUtility.java", "BodyUseAPI": ["java.lang.Integer.intValue()"], "Fixed commit": "13dee4a02ef9c85cfe067f0503d80779561104b2", "Url": "https://api.github.com/repos/acionescu/commons", "Date": "2016-06-24T15:53:49Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { byte[] content = org.apache.commons.io.IOUtils.toByteArray(hashDataInputStream); if ((excludedByteRange) != null) { int from = excludedByteRange.getFrom().intValue(); int to = excludedByteRange.getTo().intValue(); byte[] signedContent = org.apache.commons.lang.ArrayUtils.addAll(org.apache.commons.lang.ArrayUtils.subarray(content, 0, from), org.apache.commons.lang.ArrayUtils.subarray(content, to, content.length)); return new java.io.ByteArrayInputStream(signedContent); }else { return new java.io.ByteArrayInputStream(content); } } finally { hashDataInputStream.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3271/buggy-version/bkucommon.src.main.java.at.gv.egiz.bku.slcommands.impl.cms.ReferencedHashDataInput.java", "BodyUseAPI": ["excludedByteRange.getFrom().intValue()", "org.apache.commons.lang.ArrayUtils.subarray(byte[],int,int)", "excludedByteRange.getTo().intValue()", "org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)", "at.buergerkarte.namespaces.securitylayer._1_2_3.ExcludedByteRangeType.getFrom()", "org.apache.commons.lang.ArrayUtils.addAll(org.apache.commons.lang.ArrayUtils.subarray(content, 0, from),org.apache.commons.lang.ArrayUtils.subarray(content, to, content.length))", "org.apache.commons.lang.ArrayUtils.subarray(byte[],int,int)", "at.buergerkarte.namespaces.securitylayer._1_2_3.ExcludedByteRangeType.getTo()"], "Fixed commit": "33e6f69817e962f475fedc48962ac54bdde6e59c", "Url": "https://api.github.com/repos/primesign/mocca", "Date": "2015-10-30T10:13:55Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { description = reader.generateImage(imageStream, i, formatOption); } catch (java.lang.Exception e) { throw new org.plantuml.idea.rendering.RenderingCancelledException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6995/buggy-version/src.org.plantuml.idea.rendering.PlantUmlRenderer.java", "BodyUseAPI": ["org.plantuml.idea.rendering.SourceStringReader.generateImage(java.io.ByteArrayOutputStream,int,org.plantuml.idea.rendering.FileFormatOption)"], "Fixed commit": "1af8148a4aa164d822eeffdc1cabcea168ae047a", "Url": "https://api.github.com/repos/esteinberg/plantuml4idea", "Date": "2016-06-09T16:32:22Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { promise.addListener(new org.jupiter.transport.netty.handler.ChannelFutureListener() { @java.lang.Override public void operationComplete(org.jupiter.transport.netty.handler.ChannelFuture future) throws java.lang.Exception { firstWriterIdleEvent = firstAllIdleEvent = true; lastWriteTime = org.jupiter.common.util.SystemClock.millisClock().now(); } }); } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3518/buggy-version/jupiter-transport-netty.src.main.java.org.jupiter.transport.netty.handler.IdleStateChecker.java", "BodyUseAPI": ["org.jupiter.transport.netty.handler.ChannelPromise.addListener(org.jupiter.transport.netty.handler.ChannelFutureListener)", "org.jupiter.common.util.SystemClock.millisClock().now()", "org.jupiter.common.util.SystemClock.millisClock()"], "Fixed commit": "b8492f5844b7a9da28eb7ffcdb562a4c60ba68bd", "Url": "https://api.github.com/repos/fengjiachun/Jupiter", "Date": "2016-03-04T02:36:34Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { id = java.lang.Integer.valueOf(mMeasurePoints.get(i).getPntType()); id--; } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3948/buggy-version/CRTBTunnelMonitor.src.com.crtb.tunnelmonitor.task.SubsidenceMeasureData.java", "BodyUseAPI": ["java.lang.Integer.valueOf(mMeasurePoints.get(i).getPntType())", "mMeasurePoints.get(i).getPntType()", "java.util.List<com.crtb.tunnelmonitor.entity.SubsidenceTotalData>.get(int)"], "Fixed commit": "c29c0d90a809d36fa7bfd1143b846950a8ea1e19", "Url": "https://api.github.com/repos/2014-2/001", "Date": "2014-07-15T13:14:24Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ((net.alliknow.podcatcher.adapters.PodcastListAdapter) (fragment.getListAdapter())).setCheckedPositions(fragment.getListView().getCheckedItemPositions()); final int checkedItemCount = fragment.getListView().getCheckedItemCount(); mode.setTitle(fragment.getResources().getQuantityString(R.plurals.podcasts, checkedItemCount, checkedItemCount)); editAuthMenuItem.setVisible((checkedItemCount == 1)); sendSuggestionMenuItem.setVisible((checkedItemCount == 1)); } catch (java.lang.NullPointerException npe) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7133/buggy-version/src.net.alliknow.podcatcher.listeners.PodcastListContextListener.java", "BodyUseAPI": ["android.view.MenuItem.setVisible(boolean)", "net.alliknow.podcatcher.view.fragments.PodcastListFragment.getListView()", "android.view.MenuItem.setVisible(boolean)", "((net.alliknow.podcatcher.adapters.PodcastListAdapter) (fragment.getListAdapter())).setCheckedPositions(fragment.getListView().getCheckedItemPositions())", "net.alliknow.podcatcher.view.fragments.PodcastListFragment.getListAdapter()", "fragment.getListView().getCheckedItemPositions()", "android.view.ActionMode.setTitle(fragment.getResources().getQuantityString(R.plurals.podcasts, checkedItemCount, checkedItemCount))", "net.alliknow.podcatcher.view.fragments.PodcastListFragment.getResources()", "fragment.getListView().getCheckedItemCount()", "fragment.getResources().getQuantityString(R.plurals.podcasts,int,int)", "net.alliknow.podcatcher.view.fragments.PodcastListFragment.getListView()"], "Fixed commit": "cae61638b1d3979ccf08e2f3d637d657d68dd633", "Url": "https://api.github.com/repos/salema/PodCatcher-Deluxe-Android", "Date": "2014-04-14T18:38:29Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { newString += newString.replace(\"%group\", user.getGroupsNames()[0]); } catch (java.lang.IndexOutOfBoundsException e) { newString += newString.replace(\"%group\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6655/buggy-version/src.main.java.ru.tehkode.chatmanager.bukkit.ChatListener.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,user.getGroupsNames()[0])", "ru.tehkode.permissions.PermissionUser.getGroupsNames()"], "Fixed commit": "7268e92398aa3e6f1ee99c1f402cd6eca6b6be7d", "Url": "https://api.github.com/repos/LordRalex/ChatManager", "Date": "2012-03-16T11:56:11Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { maxSimultaneosUploads = java.lang.Integer.parseInt(Server.PROPERTIES.getProperty(\"max.sim.uploads\")); } catch (java.lang.NumberFormatException e) { maxSimultaneosUploads = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7652/buggy-version/src.messagehandling.messagehandler.UploadRequestMessageHandler.java", "BodyUseAPI": ["Server.PROPERTIES.getProperty(java.lang.String)", "java.lang.Integer.parseInt(Server.PROPERTIES.getProperty(\"max.sim.uploads\"))"], "Fixed commit": "4c763ecf71fb8d0ed5ea85347d9ced409cc9f000", "Url": "https://api.github.com/repos/jens7841/ChatServer", "Date": "2016-01-15T13:25:39Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Integer.valueOf(idDocumentNumber); } catch (java.lang.NumberFormatException ex) { throw new org.fenixedu.ulisboa.specifications.domain.exceptions.ULisboaSpecificationsDomainException(\"error.IdentityCardUtils.invalid.document.number\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2074/buggy-version/src.main.java.org.fenixedu.ulisboa.specifications.util.IdentityCardUtils.java", "BodyUseAPI": ["java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "e182fac7c9fd510e571a358eb32a2e66b471aad8", "Url": "https://api.github.com/repos/qub-it/fenixedu-ulisboa-specifications", "Date": "2016-02-27T02:34:02Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { tileEntity.writeToNBT(tag); java.lang.StringBuffer buffer = new java.lang.StringBuffer(); mcjty.rftools.blocks.RFToolsTools.convertNBTtoJson(buffer, tag, 0); mcjty.rftools.RFTools.log(buffer.toString()); } catch (java.lang.Exception e) { mcjty.rftools.RFTools.log(\"Catched a crash during dumping of NBT\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2259/buggy-version/src.main.java.mcjty.rftools.items.devdelight.DevelopersDelightItem.java", "BodyUseAPI": ["mcjty.rftools.blocks.RFToolsTools.convertNBTtoJson(java.lang.StringBuffer,net.minecraft.nbt.NBTTagCompound,int)", "java.lang.StringBuffer.toString()", "net.minecraft.tileentity.TileEntity.writeToNBT(net.minecraft.nbt.NBTTagCompound)", "mcjty.rftools.RFTools.log(java.lang.String)"], "Fixed commit": "2c2a437e96d6c1f9eb269a5db3a3d3ae0d6b4bbc", "Url": "https://api.github.com/repos/McJtyMods/RFTools", "Date": "2015-06-10T17:28:22Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { r = super.getResource(uri, loadOnDemand); } catch (java.io.FileNotFoundException fnfe) { java.lang.System.out.println((\"could not find following resource : \" + uri)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4362/buggy-version/plugins.org.eclipse.ziggurat.configuration.src.org.eclipse.ziggurat.configuration.impl.RestrictedResourceSet.java", "BodyUseAPI": ["org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.getResource(org.eclipse.emf.common.util.URI,boolean)"], "Fixed commit": "a80e486fa909d2ad76f376fa201a11e1b3ded12c", "Url": "https://api.github.com/repos/raphaelfaudou/ReqCycle", "Date": "2014-01-28T21:19:44Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (int i = 0; i < (stories.length); ++i) { list.add(stories[i].getName()); } } catch (java.lang.NullPointerException ex) { android.widget.Toast.makeText(getApplicationContext(), \"Wait until point are loaded from Database\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1137/buggy-version/app.src.main.java.de.ifgi.igiapp.igi_app.StoryListActivity.java", "BodyUseAPI": ["stories[i].getName()", "java.util.ArrayList<java.lang.String>.add(stories[i].getName())"], "Fixed commit": "b64857ed4ff4ba03e4dcf99ef11332c2da30bdd8", "Url": "https://api.github.com/repos/froehr/IGI-app", "Date": "2015-01-29T16:49:53Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { seekBar.setProgress(java.lang.Integer.parseInt(mValue)); } catch (java.lang.Exception e) { seekBar.setProgress(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8430/buggy-version/src.github.daneren2005.dsub.view.SeekBarPreference.java", "BodyUseAPI": ["android.widget.SeekBar.setProgress(int)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "2565520ef21b58ff773fe94825d4456df64c6103", "Url": "https://api.github.com/repos/daneren2005/Subsonic", "Date": "2014-11-01T18:27:37Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { contactList.add(new com.example.eduard.myapplication.Contact(name.split(\" \")[1], name.split(\" \")[0], email, phone)); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1653/buggy-version/src.main.java.com.example.eduard.myapplication.AddItem.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.util.List<com.example.eduard.myapplication.Contact>.add(com.example.eduard.myapplication.Contact)"], "Fixed commit": "4f4ba396c37f6b9434a695ab9e3c35dbc435db67", "Url": "https://api.github.com/repos/Zoatuan/app", "Date": "2017-07-08T17:49:58Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { contactList.add(new com.example.eduard.myapplication.Contact(name.split(\" \")[1], name.split(\" \")[0], email, phone)); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1653/buggy-version/src.main.java.com.example.eduard.myapplication.detailitem.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.util.List<com.example.eduard.myapplication.Contact>.add(com.example.eduard.myapplication.Contact)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "4f4ba396c37f6b9434a695ab9e3c35dbc435db67", "Url": "https://api.github.com/repos/Zoatuan/app", "Date": "2017-07-08T17:49:58Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return rst.getObject(columnIndex); } catch (java.sql.SQLException e) { try { return rst.getString(columnIndex); } catch (java.sql.SQLException e2) { throw e; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3388/buggy-version/railo-java.railo-core.src.railo.runtime.query.caster.OtherCast.java", "BodyUseAPI": ["java.sql.ResultSet.getObject(int)"], "Fixed commit": "4c43213e608ca31893e4e41e6ef3ca2ced98501a", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2013-04-04T11:32:37Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { submitForm.setAnswer(\"muc#roomconfig_whois\", \"anyone\"); } catch (java.lang.Exception ex) { com.googlecode.gtalksms.tools.Log.w(\"Unable to configure setting whois\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2107/buggy-version/src.com.googlecode.gtalksms.xmpp.XmppMuc.java", "BodyUseAPI": ["org.jivesoftware.smackx.xdata.Form.setAnswer(java.lang.String,java.lang.String)"], "Fixed commit": "6769e2835bfc5d960391b2f849c2f65a6d36ee04", "Url": "https://api.github.com/repos/Yakoo63/gtalksms", "Date": "2015-03-07T00:06:33Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.cbitcodeclub.vsnick.cbitcodeclub.Adapter.AppDevTutorialsRecycler.context.startActivity(browserIntent); } catch (java.lang.Exception e) { com.google.firebase.crash.FirebaseCrash.log(\"Intent not found\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3158/buggy-version/app.src.main.java.com.cbitcodeclub.vsnick.cbitcodeclub.Adapter.AppDevTutorialsRecycler.java", "BodyUseAPI": ["android.content.Context.startActivity(android.content.Intent)"], "Fixed commit": "9b6ddb746767f7f9862f8590adcd405ecbc36319", "Url": "https://api.github.com/repos/vsncipher/Cbit-Code-Club-Android-App", "Date": "2016-12-30T08:43:54Z"},
{"Line": "=>557", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return submitLoanWithBackdatedPaymentsApplication(applicationState.getPartialApplicationId(), formBean, loanAccountQuestionGroupFormBean, loanAccountCashFlow, cashFlowSummaryFormBean, loanScheduleFormBean); } catch (org.mifos.service.BusinessRuleException e) { org.springframework.binding.message.MessageBuilder builder = new org.springframework.binding.message.MessageBuilder().error().codes(java.util.Arrays.asList(e.getMessageKey()).toArray(new java.lang.String[1])).defaultText(e.getMessage()).args(e.getMessageValues()); messageContext.addMessage(builder.build()); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6780/buggy-version/userInterface.src.main.java.org.mifos.clientportfolio.loan.ui.LoanAccountController.java", "BodyUseAPI": ["org.mifos.clientportfolio.loan.ui.LoanAccountController.submitLoanWithBackdatedPaymentsApplication(applicationState.getPartialApplicationId(),org.mifos.clientportfolio.loan.ui.LoanAccountFormBean,org.mifos.clientportfolio.loan.ui.LoanAccountQuestionGroupFormBean,org.mifos.clientportfolio.newloan.applicationservice.LoanAccountCashFlow,org.mifos.clientportfolio.loan.ui.CashFlowSummaryFormBean,org.mifos.clientportfolio.loan.ui.LoanScheduleFormBean)", "org.mifos.clientportfolio.newloan.applicationservice.LoanApplicationStateDto.getPartialApplicationId()"], "Fixed commit": "a535cdd37c7052a72c8e603303c17c893140e346", "Url": "https://api.github.com/repos/mifos/head", "Date": "2012-03-09T13:48:20Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { frontEnd = new toniarts.openkeeper.tools.convert.wad.WadFile(new java.io.File(toniarts.openkeeper.tools.convert.Utils.getRealFileName(dungeonKeeperFolder, \"Data\".concat(java.io.File.separator).concat(\"FrontEnd.WAD\")))); engineTextures = new toniarts.openkeeper.tools.convert.wad.WadFile(new java.io.File(toniarts.openkeeper.tools.convert.Utils.getRealFileName(dungeonKeeperFolder, \"Data\".concat(java.io.File.separator).concat(\"EngineTextures.WAD\")))); } catch (java.io.IOException e) { throw new java.lang.RuntimeException(\"Failed to open a WAD file!\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5470/buggy-version/src.toniarts.openkeeper.tools.convert.AssetsConverter.java", "BodyUseAPI": ["java.lang.String.concat(java.lang.String)", "toniarts.openkeeper.tools.convert.Utils.getRealFileName(java.lang.String,java.lang.String)", "java.lang.String.concat(java.lang.String)", "java.lang.String.concat(java.lang.String)", "java.lang.String.concat(java.lang.String)", "toniarts.openkeeper.tools.convert.Utils.getRealFileName(java.lang.String,java.lang.String)"], "Fixed commit": "3a3e068b75a7f27ccaac04d44fb929c010abd62e", "Url": "https://api.github.com/repos/tonihele/OpenKeeper", "Date": "2015-07-20T18:41:15Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { d1 = new java.util.Date(Datum1.getText()); } catch (java.lang.Exception e) { vozniPark.Controller.PregledVozilaController.logger.info(e); javax.swing.JOptionPane.showMessageDialog(null, \"Unesite datum(od) u ispravnom formatu!\"); d1 = new java.util.Date((1994 - 1900), 2, 2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4142/buggy-version/vozniPark.src.main.java.vozniPark.Controller.PregledVozilaController.java", "BodyUseAPI": ["javax.swing.JTextField.getText()"], "Fixed commit": "bfc83b533331db496af75902fbc1541ab5b1cb05", "Url": "https://api.github.com/repos/SoftverInzenjeringETFSA/SI2015Tim7", "Date": "2016-05-21T10:03:11Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { d2 = new java.util.Date(Datum2.getText()); } catch (java.lang.Exception e) { vozniPark.Controller.PregledVozilaController.logger.info(e); d2 = new java.util.Date((2090 - 1900), 2, 2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4142/buggy-version/vozniPark.src.main.java.vozniPark.Controller.PregledVozilaController.java", "BodyUseAPI": ["javax.swing.JTextField.getText()"], "Fixed commit": "bfc83b533331db496af75902fbc1541ab5b1cb05", "Url": "https://api.github.com/repos/SoftverInzenjeringETFSA/SI2015Tim7", "Date": "2016-05-21T10:03:11Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { d2 = new java.util.Date(Datum2.getText()); } catch (java.lang.Exception e) { vozniPark.Controller.PregledVozilaController.logger.info(e); javax.swing.JOptionPane.showMessageDialog(null, \"Unesite datum(do) u ispravnom formatu!\"); d2 = new java.util.Date((2090 - 1900), 2, 2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4142/buggy-version/vozniPark.src.main.java.vozniPark.Controller.PregledVozilaController.java", "BodyUseAPI": ["javax.swing.JTextField.getText()"], "Fixed commit": "bfc83b533331db496af75902fbc1541ab5b1cb05", "Url": "https://api.github.com/repos/SoftverInzenjeringETFSA/SI2015Tim7", "Date": "2016-05-21T10:03:11Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { d1 = new java.util.Date(Datum1.getText()); } catch (java.lang.Exception e) { vozniPark.Controller.PregledVozilaController.logger.info(e); d1 = new java.util.Date((1994 - 1900), 2, 2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4142/buggy-version/vozniPark.src.main.java.vozniPark.Controller.PregledVozilaController.java", "BodyUseAPI": ["javax.swing.JTextField.getText()"], "Fixed commit": "bfc83b533331db496af75902fbc1541ab5b1cb05", "Url": "https://api.github.com/repos/SoftverInzenjeringETFSA/SI2015Tim7", "Date": "2016-05-21T10:03:11Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { retVal = dir.getCanonicalFile().getName(); } catch (java.lang.Exception e) { retVal = lang; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7694/buggy-version/src.infinity.resource.ResourceFactory.java", "BodyUseAPI": ["java.io.File.getName()", "java.io.File.getCanonicalFile()"], "Fixed commit": "2cefaa23cab167f00146a288d8ad6b27c19da66b", "Url": "https://api.github.com/repos/Argent77/NearInfinity", "Date": "2015-03-28T14:56:29Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { responseBodyString += new java.lang.String(responseBody, getCharset()); } catch (java.io.UnsupportedEncodingException e) { responseBodyString += new java.lang.String(responseBody); } catch (java.lang.Exception e) { responseBodyString = \"UNKNOWN EXCEPTION: \" + (e.getMessage()); } catch (java.lang.Throwable t) { responseBodyString = \"UNKNOWN EXCEPTION: \" + (t.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5406/buggy-version/src.main.java.com.strongloop.android.remoting.adapters.RestAdapter.java", "BodyUseAPI": ["com.strongloop.android.remoting.adapters.RestAdapter.CallbackHandler.getCharset()"], "Fixed commit": "704011abff0b44225175edd8aa570dfa203b461e", "Url": "https://api.github.com/repos/chaitanya0bhagvan/loopback-sdk-android", "Date": "2015-09-20T10:26:12Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { responseBodyString += new java.lang.String(responseBody, getCharset()); } catch (java.io.UnsupportedEncodingException e) { responseBodyString += new java.lang.String(responseBody); } catch (java.lang.Exception e) { responseBodyString = \"UNKNOWN EXCEPTION: \" + (e.getMessage()); } catch (java.lang.Throwable t) { responseBodyString = \"UNKNOWN EXCEPTION: \" + (t.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5406/buggy-version/src.main.java.com.strongloop.android.remoting.adapters.RestAdapter.java", "BodyUseAPI": ["com.strongloop.android.remoting.adapters.RestAdapter.BinaryHandler.getCharset()"], "Fixed commit": "704011abff0b44225175edd8aa570dfa203b461e", "Url": "https://api.github.com/repos/chaitanya0bhagvan/loopback-sdk-android", "Date": "2015-09-20T10:26:12Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { UpdatePathway(); } catch (java.rmi.RemoteException e1) { e1.printStackTrace(); } catch (java.net.MalformedURLException e1) { e1.printStackTrace(); } catch (javax.xml.rpc.ServiceException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3462/buggy-version/src.org.pathvisio.wpclient.panels.UpdatePathwayPanel.java", "BodyUseAPI": ["org.pathvisio.wpclient.panels.UpdatePathwayPanel.UpdatePathway()"], "Fixed commit": "02fc5c5f8e28f0574580fc6ba9cd52f09b03d143", "Url": "https://api.github.com/repos/SravanthiSinha/org.pathvisio.wpclient", "Date": "2013-09-16T14:15:12Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { writer.close(); } catch (java.io.IOException e) { throw new org.wikapidia.core.dao.DaoException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5420/buggy-version/wikapidia-core.src.main.java.org.wikapidia.core.dao.sql.FastLoader.java", "BodyUseAPI": ["org.supercsv.io.CsvListWriter.close()"], "Fixed commit": "0d3f0b9e5f062c9381023342cf5789fd4cf7837b", "Url": "https://api.github.com/repos/shilad/wikAPIdia", "Date": "2013-07-09T02:04:13Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (com.amazonaws.mturk.requester.HIT hit : system.mturk.ResponseManager.service.getAllReviewableHITs(hittypeid)) if (hit.getHITId().equals(hitid)) return true; } catch (com.amazonaws.mturk.service.exception.InternalServiceException se) { system.mturk.ResponseManager.LOGGER.info(se); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8801/buggy-version/src.main.java.system.mturk.ResponseManager.java", "BodyUseAPI": ["com.amazonaws.mturk.requester.HIT.getHITId()", "hit.getHITId().equals(java.lang.String)", "com.amazonaws.mturk.service.axis.RequesterService.getAllReviewableHITs(java.lang.String)"], "Fixed commit": "6515262b0c7033b8ff8f04253831163bf6d63b80", "Url": "https://api.github.com/repos/etosch/SurveyMan", "Date": "2013-09-09T23:46:02Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { recorder.stop(); } catch (java.lang.RuntimeException e) { android.util.Log.d(org.catrobat.catroid.soundrecorder.SoundRecorder.TAG, (\"Note that a RuntimeException is intentionally \" + (((((\"thrown to the application, if no valid audio/video data \" + \"has been received when stop() is called. This happens if stop() \") + \"is called immediately after start(). The failure lets the application \") + \"take action accordingly to clean up the output file \") + \"(delete the output file, for instance), since the output file \") + \"is not properly constructed when this happens.\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1818/buggy-version/catroid.src.org.catrobat.catroid.soundrecorder.SoundRecorder.java", "BodyUseAPI": ["android.media.MediaRecorder.stop()"], "Fixed commit": "fba88c9aa7fb39157140e2eaafd00ca55cfb1196", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2015-01-19T15:38:23Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { final java.lang.String result = httpClient.simpleRequest(\"https://www.hotslogs.com/API/Data/Heroes\"); final com.metacodestudio.hotsuploader.models.Hero[] heroes = new com.fasterxml.jackson.databind.ObjectMapper().readValue(result, com.metacodestudio.hotsuploader.models.Hero[].class); return java.util.Arrays.asList(heroes); } catch (java.io.IOException e) { java.lang.Thread.sleep(10000); return call(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/859/buggy-version/src.main.java.com.metacodestudio.hotsuploader.concurrent.tasks.HeroListTask.java", "BodyUseAPI": ["java.util.Arrays.asList(com.metacodestudio.hotsuploader.models.Hero[])", "com.metacodestudio.hotsuploader.utils.SimpleHttpClient.simpleRequest(java.lang.String)", "com.fasterxml.jackson.databind.ObjectMapper.readValue(java.lang.String,java.lang.Class)"], "Fixed commit": "c3c1101e6e365670009675c47c5622a927f071d1", "Url": "https://api.github.com/repos/eivindveg/HotSUploader", "Date": "2015-09-08T00:22:15Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { toUserId = java.lang.Integer.parseInt(this.getUtility().findParamInHtml(this.getSessionState().getLastResponse(), \"to\")); } catch (java.lang.NumberFormatException nfe) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6809/buggy-version/src.radlab.rain.workload.rubis.PutCommentAuthOperation.java", "BodyUseAPI": ["this.getSessionState().getLastResponse()", "this.getUtility().findParamInHtml(this.getSessionState().getLastResponse(),java.lang.String)", "java.lang.Integer.parseInt(this.getUtility().findParamInHtml(this.getSessionState().getLastResponse(), \"to\"))", "radlab.rain.workload.rubis.PutCommentAuthOperation.getSessionState()", "radlab.rain.workload.rubis.PutCommentAuthOperation.getUtility()"], "Fixed commit": "3e94b8f68ad4e825cbb8fc11c4d432e5313f318f", "Url": "https://api.github.com/repos/sguazt/rain-workload-toolkit", "Date": "2013-07-09T15:26:09Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { toUserId = java.lang.Integer.parseInt(this.getUtility().findParamInHtml(this.getSessionState().getLastResponse(), \"to\")); } catch (java.lang.NumberFormatException nfe) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6809/buggy-version/src.radlab.rain.workload.rubis.PutCommentOperation.java", "BodyUseAPI": ["this.getUtility().findParamInHtml(this.getSessionState().getLastResponse(),java.lang.String)", "radlab.rain.workload.rubis.PutCommentOperation.getUtility()", "radlab.rain.workload.rubis.PutCommentOperation.getSessionState()", "java.lang.Integer.parseInt(this.getUtility().findParamInHtml(this.getSessionState().getLastResponse(), \"to\"))", "this.getSessionState().getLastResponse()"], "Fixed commit": "3e94b8f68ad4e825cbb8fc11c4d432e5313f318f", "Url": "https://api.github.com/repos/sguazt/rain-workload-toolkit", "Date": "2013-07-09T15:26:09Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { toUserId = java.lang.Integer.parseInt(this.getUtility().findParamInHtml(this.getSessionState().getLastResponse(), \"to\")); } catch (java.lang.NumberFormatException nfe) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6809/buggy-version/src.radlab.rain.workload.rubis.StoreCommentOperation.java", "BodyUseAPI": ["radlab.rain.workload.rubis.StoreCommentOperation.getUtility()", "this.getUtility().findParamInHtml(this.getSessionState().getLastResponse(),java.lang.String)", "java.lang.Integer.parseInt(this.getUtility().findParamInHtml(this.getSessionState().getLastResponse(), \"to\"))", "this.getSessionState().getLastResponse()", "radlab.rain.workload.rubis.StoreCommentOperation.getSessionState()"], "Fixed commit": "3e94b8f68ad4e825cbb8fc11c4d432e5313f318f", "Url": "https://api.github.com/repos/sguazt/rain-workload-toolkit", "Date": "2013-07-09T15:26:09Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { setEncoding(\"UTF-8\"); } catch (java.io.UnsupportedEncodingException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7191/buggy-version/src.TwitterBot.java", "BodyUseAPI": ["TwitterBot.setEncoding(java.lang.String)"], "Fixed commit": "57b2dba5df94964dd24ea9d7feb44514893833ce", "Url": "https://api.github.com/repos/Miicroo/Twitter2IRC", "Date": "2015-12-10T23:08:03Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { amountTop = java.lang.Double.parseDouble(amountTopString); } catch (java.lang.NumberFormatException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/787/buggy-version/src.fr.zlandorf.currencyconverter.MainActivity.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "6fe8c083724cc932554711b106a6970d838fd8b1", "Url": "https://api.github.com/repos/zlandorf/BitCoinCurrencyConverter", "Date": "2014-11-02T18:24:35Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { dataMap = com.baidu.disconf.client.core.filetype.FileTypeProcessorUtils.getKvMap(filePath); } catch (java.lang.Exception e) { com.baidu.disconf.client.core.processor.impl.DisconfFileCoreProcessorImpl.LOGGER.error(\"cannot get kv data\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8176/buggy-version/disconf-client.src.main.java.com.baidu.disconf.client.core.processor.impl.DisconfFileCoreProcessorImpl.java", "BodyUseAPI": ["com.baidu.disconf.client.core.filetype.FileTypeProcessorUtils.getKvMap(java.lang.String)"], "Fixed commit": "7ad9f14ecd3cd93248978a3285647ace913f36ff", "Url": "https://api.github.com/repos/knightliao/disconf", "Date": "2015-01-28T06:41:09Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { final org.bukkit.block.Biome biome = org.bukkit.block.Biome.valueOf(biomeStr.toUpperCase()); if (biome == null) { return -1; } return java.util.Arrays.asList(org.bukkit.block.Biome.values()).indexOf(biome); } catch (java.lang.IllegalArgumentException e) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7960/buggy-version/PlotSquared.src.main.java.com.intellectualcrafters.plot.util.bukkit.BukkitUtil.java", "BodyUseAPI": ["java.util.List.indexOf(org.bukkit.block.Biome)", "org.bukkit.block.Biome.valueOf(java.lang.String)", "java.lang.String.toUpperCase()", "org.bukkit.block.Biome.values()", "java.util.Arrays.asList(org.bukkit.block.Biome.values())"], "Fixed commit": "5d917933953547357288085908916aae1ac99d11", "Url": "https://api.github.com/repos/IntellectualSites/PlotSquared", "Date": "2015-03-20T14:01:35Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { com.example.aburgess11.foodmood.EatOutActivity.adapter = new com.example.aburgess11.foodmood.MatchesAdapter(com.example.aburgess11.foodmood.EatOutActivity.matches); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6867/buggy-version/app.src.main.java.com.example.aburgess11.foodmood.EatOutActivity.java", "BodyUseAPI": [], "Fixed commit": "f65a4619c9a35b0d2d8363a64d49f0a0d24a85f8", "Url": "https://api.github.com/repos/AndrianaBurgess/FoodMood", "Date": "2017-07-31T20:18:22Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { stringResult = resultObject.getString(\"error\"); } catch (org.json.JSONException errorNotFound) { android.util.Log.e(com.keysersoze.sonyandroidlib.SonyCameraControllerUtil.TAG, (\"Error not found: \" + errorNotFound)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/111/buggy-version/sonyandroidlib.src.main.java.com.keysersoze.sonyandroidlib.SonyCameraControllerUtil.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "f2095e65891f4272bcbc04cfa96c895ca258b9c2", "Url": "https://api.github.com/repos/keyserSoze42/SonySDK", "Date": "2017-11-26T04:16:06Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (edu.wpi.cs.wpisuitetng.modules.defecttracker.models.DefectEvent event : model.getEvents()) { if (event instanceof edu.wpi.cs.wpisuitetng.modules.defecttracker.models.DefectChangeset) { defectEventPanels.add(new edu.wpi.cs.wpisuitetng.modules.defecttracker.defect.DefectChangesetPanel(((edu.wpi.cs.wpisuitetng.modules.defecttracker.models.DefectChangeset) (event)))); }else if (event instanceof edu.wpi.cs.wpisuitetng.modules.defecttracker.models.Comment) { defectEventPanels.add(new edu.wpi.cs.wpisuitetng.modules.defecttracker.defect.CommentPanel(((edu.wpi.cs.wpisuitetng.modules.defecttracker.models.Comment) (event)))); } } for (edu.wpi.cs.wpisuitetng.modules.defecttracker.defect.DefectEventPanel panel : defectEventPanels) { this.add(panel); } } catch (java.lang.Exception e) { javax.swing.JOptionPane.showMessageDialog(this, \"An error occurred displaying the change history of this defect.\", \"Error Displaying Changes\", javax.swing.JOptionPane.ERROR_MESSAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7866/buggy-version/DefectTracker.src.edu.wpi.cs.wpisuitetng.modules.defecttracker.defect.DefectEventView.java", "BodyUseAPI": ["java.util.List<edu.wpi.cs.wpisuitetng.modules.defecttracker.defect.DefectEventPanel>.add(edu.wpi.cs.wpisuitetng.modules.defecttracker.defect.CommentPanel)", "edu.wpi.cs.wpisuitetng.modules.defecttracker.defect.DefectEventView.add(edu.wpi.cs.wpisuitetng.modules.defecttracker.defect.DefectEventPanel)", "java.util.List<edu.wpi.cs.wpisuitetng.modules.defecttracker.defect.DefectEventPanel>.add(edu.wpi.cs.wpisuitetng.modules.defecttracker.defect.DefectChangesetPanel)", "edu.wpi.cs.wpisuitetng.modules.defecttracker.models.Defect.getEvents()"], "Fixed commit": "c71af02ed022e8a2a6329e578e599649dc2074bc", "Url": "https://api.github.com/repos/fracture91/wpi-suite-tng", "Date": "2013-01-23T01:32:29Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (org.eclipse.debug.ui.actions.IWatchExpressionFactoryAdapter2.class.equals(adapter)) { return actualObject2.getAdapter(adapter); } } catch (java.lang.Throwable e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4269/buggy-version/plugins.org.python.pydev.src_navigator.org.python.pydev.navigator.elements.WrappedResource.java", "BodyUseAPI": ["java.lang.Class.equals(java.lang.Class)", "org.eclipse.core.resources.IResource.getAdapter(java.lang.Class)"], "Fixed commit": "9e6c04754258b4e05e5188ddf6001f5979675ff9", "Url": "https://api.github.com/repos/aptana/Pydev", "Date": "2011-06-01T14:20:34Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { svdRecommender = ffbrFactory.getRecommender(conf, factorizationbasedConf, persitentDatas.get(label), label, name); } catch (java.lang.Exception e) { if (org.plista.kornakapi.web.servlets.BigBangServletContextListener.log.isInfoEnabled()) { org.plista.kornakapi.web.servlets.BigBangServletContextListener.log.info(e.toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6419/buggy-version/src.main.java.org.plista.kornakapi.web.servlets.BigBangServletContextListener.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, org.apache.mahout.cf.taste.model.DataModel>.get(java.lang.String)", "org.plista.kornakapi.core.recommender.factory.FFBRFactory.getRecommender(org.plista.kornakapi.web.servlets.Configuration,org.plista.kornakapi.web.servlets.FactorizationbasedRecommenderConfig,persitentDatas.get(label),java.lang.String,java.lang.String)"], "Fixed commit": "e7147de16928228d4068707770fe5ff49de3a6b9", "Url": "https://api.github.com/repos/KukumavMozolo/kornakapi", "Date": "2015-06-11T11:39:14Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return exchangeList.get(index); } catch (java.lang.IndexOutOfBoundsException indexOutOfBoundsException) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1560/buggy-version/stress.api.src.main.java.com.codeasylum.stress.api.visualization.ExchangeListModel.java", "BodyUseAPI": ["java.util.LinkedList<com.codeasylum.stress.api.visualization.ExchangeWrapper>.get(int)"], "Fixed commit": "ad4fda8811cb531330b5b84926b3480b5709742e", "Url": "https://api.github.com/repos/zenbones/CodeAsylum", "Date": "2012-08-13T21:27:24Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.json.JSONArray jsonTagIds = storyElement.getJSONArray(\"tag_id\"); tags = new java.lang.String[jsonTagIds.length()]; for (int j = 0; j < (jsonTagIds.length()); j++) { tags[j] = jsonTagIds.getString(j); } } catch (org.json.JSONException e) { tags = new java.lang.String[1]; tags[1] = storyElement.getString(\"tag_id\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8570/buggy-version/app.src.main.java.de.ifgi.igiapp.igi_app.MongoDB.DatabaseHandler.java", "BodyUseAPI": ["org.json.JSONArray.length()", "org.json.JSONArray.getString(int)", "org.json.JSONObject.getJSONArray(java.lang.String)", "org.json.JSONArray.length()"], "Fixed commit": "4461029278cbe63a8740f93348a8766c97945f69", "Url": "https://api.github.com/repos/froehr/IGI-app", "Date": "2014-12-02T21:34:47Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.net.InetAddress inet = java.net.InetAddress.getByName(ip); this.ip = (inet != null) ? inet.getHostAddress() : null; } catch (java.io.IOException e) { uk.ac.bbsrc.tgac.miso.core.data.AbstractSequencerReference.log.error((\"Error getting InetAddress from given ip \" + ip), e); this.ip = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8764/buggy-version/core.src.main.java.uk.ac.bbsrc.tgac.miso.core.data.AbstractSequencerReference.java", "BodyUseAPI": ["java.net.InetAddress.getHostAddress()", "java.net.InetAddress.getByName(java.lang.String)"], "Fixed commit": "a119a2f5a90c0db9f9947728c9b3cd0052503839", "Url": "https://api.github.com/repos/oicr-gsi/miso-lims", "Date": "2016-12-16T17:26:09Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { fileSystemTasks.deleteFile(path); } catch (java.lang.IllegalStateException e) { java.lang.System.out.println((\"\\t\" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6011/buggy-version/src.main.java.textools.commands.Clean.java", "BodyUseAPI": ["textools.tasks.FileSystemTasks.deleteFile(java.nio.file.Path)"], "Fixed commit": "1b2a47a419b75178e9eb4038993dc56b52842824", "Url": "https://api.github.com/repos/simonharrer/textools", "Date": "2014-09-11T08:11:33Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(50); } catch (java.lang.InterruptedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/644/buggy-version/src.WorkflowTimer.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "9f3ba9e7899019eff80f1ecefd9dca942e162987", "Url": "https://api.github.com/repos/kftang/WorkflowTimer", "Date": "2017-02-02T20:47:10Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { int halfComplexity = (species.getComplexity()) / 2; return halfComplexity >= 1 ? halfComplexity : 1; } catch (java.lang.NoSuchMethodError error) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2475/buggy-version/src.main.java.magicbees.main.utils.compat.botania.SubTileBeegonia.java", "BodyUseAPI": ["forestry.api.apiculture.IAlleleBeeSpecies.getComplexity()"], "Fixed commit": "eacb9f26092c9b1e08cbba7cd64509aa18c3c749", "Url": "https://api.github.com/repos/MagicBees/MagicBees", "Date": "2015-10-03T05:40:43Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return (((Tile.tiles[Main.world.world[((int) (this.pos.X))][((int) (this.pos.Y))].getWorld()].climbable) && (Tile.tiles[Main.world.world[((int) (this.pos.X))][(((int) (this.pos.Y)) + 1)].getWorld()].climbable)) && (Tile.tiles[Main.world.world[(((int) (this.pos.X)) + 1)][((int) (this.pos.Y))].getWorld()].climbable)) && (Tile.tiles[Main.world.world[(((int) (this.pos.X)) + 1)][(((int) (this.pos.Y)) + 1)].getWorld()].climbable); } catch (java.lang.Exception e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5450/buggy-version/Pangeo.src.pangeo.main.EntityLiving.java", "BodyUseAPI": ["Main.world.world[(((int) (this.pos.X)) + 1)][((int) (this.pos.Y))].getWorld()", "Main.world.world[(((int) (this.pos.X)) + 1)][(((int) (this.pos.Y)) + 1)].getWorld()", "Main.world.world[((int) (this.pos.X))][((int) (this.pos.Y))].getWorld()", "Main.world.world[((int) (this.pos.X))][(((int) (this.pos.Y)) + 1)].getWorld()"], "Fixed commit": "4a7f12c7314fb39930175bfd119cdf99e0d806d7", "Url": "https://api.github.com/repos/rangerofthewest/pangeo-code-java", "Date": "2014-12-12T05:39:37Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.unfoldingword.door43client.LegacyTools.processChunks(library, listener); } catch (java.lang.Exception e) { library.endTransaction(false); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6175/buggy-version/door43-client.src.main.java.org.unfoldingword.door43client.API.java", "BodyUseAPI": ["org.unfoldingword.door43client.LegacyTools.processChunks(org.unfoldingword.door43client.Library,org.unfoldingword.door43client.OnProgressListener)"], "Fixed commit": "bb49e2864b8fded535928193889ce87c9e40ded8", "Url": "https://api.github.com/repos/neutrinog/android-door43-client", "Date": "2016-10-11T00:45:06Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { updateItemQuantity(namedOrder.getId(), orderItemRequestDTO, false); } catch (org.broadleafcommerce.core.inventory.exception.InventoryUnavailableException e) { throw new org.broadleafcommerce.core.order.service.exception.UpdateCartException(\"Could not update cart quantity\", e.getCause()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1552/buggy-version/core.broadleaf-framework.src.main.java.org.broadleafcommerce.core.order.service.OrderServiceImpl.java", "BodyUseAPI": ["org.broadleafcommerce.core.order.domain.Order.getId()", "org.broadleafcommerce.core.order.service.OrderServiceImpl.updateItemQuantity(namedOrder.getId(),org.broadleafcommerce.core.order.service.call.OrderItemRequestDTO,boolean)"], "Fixed commit": "ae4ce3f7c8ee4c5521b833a043b2503ba0158653", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2012-10-22T16:43:33Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { validationBean.getValidation().setFile(validationBean.getFileName(), validationBean.getFileName(), validationBean.readStream()); } catch (org.fenixedu.academic.domain.exceptions.DomainException e) { pt.ist.fenixWebFramework.renderers.utils.RenderUtils.invalidateViewState(); addActionMessageLiteral(request, e.getLocalizedMessage()); return forwardToInputValidationCode(mapping, actionForm, request, response, physicalAddressBean.getContact()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7068/buggy-version/src.main.java.org.fenixedu.academic.ui.struts.action.person.PartyContactsManagementDispatchAction.java", "BodyUseAPI": ["validationBean.getValidation().setFile(validationBean.getFileName(),validationBean.getFileName(),validationBean.readStream())", "org.fenixedu.academic.dto.contacts.PhysicalAddressValidationBean.getFileName()", "org.fenixedu.academic.dto.contacts.PhysicalAddressValidationBean.getValidation()", "org.fenixedu.academic.dto.contacts.PhysicalAddressValidationBean.getFileName()", "org.fenixedu.academic.dto.contacts.PhysicalAddressValidationBean.readStream()"], "Fixed commit": "38fb19d4acf2b71f3ead01d1b88b448f414b2a93", "Url": "https://api.github.com/repos/Luis-Cruz/fenixedu-academic", "Date": "2017-08-28T10:25:26Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.app.Notification notification = new android.app.Notification(); if ((Build.VERSION.SDK_INT) < 18) { startForeground(com.tencent.tinker.lib.service.TinkerPatchService.notificationId, notification); }else { startForeground(com.tencent.tinker.lib.service.TinkerPatchService.notificationId, notification); startService(new android.content.Intent(this, com.tencent.tinker.lib.service.TinkerPatchService.InnerService.class)); } } catch (java.lang.Throwable e) { com.tencent.tinker.lib.util.TinkerLog.i(com.tencent.tinker.lib.service.TinkerPatchService.TAG, (\"try to increase patch process priority error:\" + e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1592/buggy-version/tinker-android.tinker-android-lib.src.main.java.com.tencent.tinker.lib.service.TinkerPatchService.java", "BodyUseAPI": ["com.tencent.tinker.lib.service.TinkerPatchService.startForeground(int,android.app.Notification)", "com.tencent.tinker.lib.service.TinkerPatchService.startService(android.content.Intent)", "com.tencent.tinker.lib.service.TinkerPatchService.startForeground(int,android.app.Notification)"], "Fixed commit": "798798607efb628a8c158c5b191474f1c12ccb3e", "Url": "https://api.github.com/repos/yunair/tinker", "Date": "2016-11-01T09:56:15Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { userDetails = this.userService.loadUserByUsername(userName); } catch (org.springframework.security.core.userdetails.UsernameNotFoundException e) { chain.doFilter(request, response); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8610/buggy-version/src.main.java.com.nemesis.api.filter.AuthenticationTokenProcessingFilter.java", "BodyUseAPI": ["org.springframework.security.core.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)"], "Fixed commit": "5af04f0122d421adaab1dc19620ba2de248d453a", "Url": "https://api.github.com/repos/ronkorland/nemesis-api", "Date": "2014-03-29T21:52:56Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.example.smartphone.DAN.SessionThread.self.join(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4575/buggy-version/src.com.example.smartphone.DAN.java", "BodyUseAPI": ["com.example.smartphone.DAN.SessionThread.join()"], "Fixed commit": "4389453393786266e508bae25bd645c62846de7f", "Url": "https://api.github.com/repos/IoTtalk/Smartphone", "Date": "2016-03-27T13:17:45Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { bankRMIObj.getAccount(customerHash.get(customerId).getName()).withdraw(((float) (item.getPrice()))); } catch (rmistore.commons.exceptions.Rejected r) { this.getClientObj(customerId).receiveMessage((\"Exception: \" + r)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7911/buggy-version/RMIStoreServer.src.rmistoreserver.implementations.ServerRemoteImpl.java", "BodyUseAPI": ["rmistore.commons.interfaces.Item.getPrice()", "bankRMIObj.getAccount(customerHash.get(customerId).getName()).withdraw(((float) (item.getPrice())))", "rmistore.commons.interfaces.Bank.getAccount(customerHash.get(customerId).getName())", "customerHash.get(customerId).getName()", "java.util.HashMap<java.lang.Integer, rmistoreserver.CustomerWrap>.get(int)"], "Fixed commit": "40217e641e6d5feb6ed2adc2a8ce7fe5638ea280", "Url": "https://api.github.com/repos/rohitgoyal2112/ID2212DSRG_HW2", "Date": "2014-11-26T21:42:19Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { bankRMIObj.getAccount(customerHash.get(item.getCustomerId()).getName()).deposit(((float) (item.getPrice()))); } catch (rmistore.commons.exceptions.Rejected r) { this.getClientObj(item.getCustomerId()).receiveMessage((\"Exception: \" + r)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7911/buggy-version/RMIStoreServer.src.rmistoreserver.implementations.ServerRemoteImpl.java", "BodyUseAPI": ["rmistore.commons.interfaces.Bank.getAccount(customerHash.get(item.getCustomerId()).getName())", "java.util.HashMap<java.lang.Integer, rmistoreserver.CustomerWrap>.get(item.getCustomerId())", "customerHash.get(item.getCustomerId()).getName()", "bankRMIObj.getAccount(customerHash.get(item.getCustomerId()).getName()).deposit(((float) (item.getPrice())))", "rmistore.commons.interfaces.Item.getPrice()", "rmistore.commons.interfaces.Item.getCustomerId()"], "Fixed commit": "40217e641e6d5feb6ed2adc2a8ce7fe5638ea280", "Url": "https://api.github.com/repos/rohitgoyal2112/ID2212DSRG_HW2", "Date": "2014-11-26T21:42:19Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { data = client.getData().forPath(lockPath); } catch (org.apache.zookeeper.KeeperException.NoNodeException e) { data = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8853/buggy-version/src.main.java.com.weirdbob.alphadog.AlphaDog.java", "BodyUseAPI": ["client.getData().forPath(java.lang.String)", "org.apache.curator.framework.CuratorFramework.getData()"], "Fixed commit": "f2d5dc8c23ff56b78a9ff66c1a03f7abe400299e", "Url": "https://api.github.com/repos/oodrive/alphadog", "Date": "2016-05-25T13:50:33Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return dao.findById(); } catch (java.lang.Exception e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4776/buggy-version/src.edu.asu.scrapbook.digital.rest.UserResource.java", "BodyUseAPI": ["edu.asu.scrapbook.digital.dao.UserDAO.findById()"], "Fixed commit": "412d2ec4237048c687bb147f5c1a6a9ff6db25fa", "Url": "https://api.github.com/repos/mcmathews/CSE-360-Digital-Scrapbook", "Date": "2014-10-22T20:37:11Z"},
{"Line": "=>954", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { condition.setSharing_policy(settingsHandler.getShareLevel()); sendCbCurrentCondition(condition); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8504/buggy-version/src.ca.cumulonimbus.pressurenetsdk.CbService.java", "BodyUseAPI": ["ca.cumulonimbus.pressurenetsdk.CbSettingsHandler.getShareLevel()", "ca.cumulonimbus.pressurenetsdk.CbService.IncomingHandler.sendCbCurrentCondition(ca.cumulonimbus.pressurenetsdk.CbCurrentCondition)", "ca.cumulonimbus.pressurenetsdk.CbCurrentCondition.setSharing_policy(settingsHandler.getShareLevel())"], "Fixed commit": "b1cc2f9170e7361b64aa807b426ed96d93a7f96f", "Url": "https://api.github.com/repos/Cbsoftware/pressureNET-SDK", "Date": "2013-08-18T20:49:44Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { facts = new java.lang.String[result.getCatFacts().size()]; for (int i = 0; i < (result.getCatFacts().size()); i++) { facts[i] = result.getCatFacts().get(i); } factsList.setAdapter(new android.widget.ArrayAdapter(getApplicationContext(), R.layout.cat_fact, facts)); } catch (java.lang.NullPointerException exception) { android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder(this); builder.setMessage(\"You don't have internet connection\"); builder.setPositiveButton(\"Accept\", null); builder.create().show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3397/buggy-version/CatFacts.app.src.main.java.com.example.mauricioarce.catfacts.FactsActivity.java", "BodyUseAPI": ["com.example.mauricioarce.catfacts.Facts.getCatFacts()", "result.getCatFacts().get(int)", "com.example.mauricioarce.catfacts.Facts.getCatFacts()", "android.widget.ListView.setAdapter(android.widget.ArrayAdapter)", "com.example.mauricioarce.catfacts.Facts.getCatFacts()", "result.getCatFacts().size()", "com.example.mauricioarce.catfacts.FactsActivity.HttpGetFacts.getApplicationContext()", "result.getCatFacts().size()"], "Fixed commit": "63739687511dd62cd733862f4b7da9f524078d7b", "Url": "https://api.github.com/repos/mauricioarce/android_basic", "Date": "2015-08-13T23:30:24Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mIterator.remove(); } catch (java.lang.IllegalStateException e) { android.util.Log.w(com.android.mms.transaction.Observable.TAG, (\"failed to detach \" + e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5654/buggy-version/src.com.android.mms.transaction.Observable.java", "BodyUseAPI": ["java.util.Iterator<com.android.mms.transaction.Observer>.remove()"], "Fixed commit": "2d6e17d6aef47a7e238e575e3ed9021d6bbaf6d7", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-packages-apps-Mms", "Date": "2016-03-23T08:04:29Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (!(fragmentManager.findFragmentByTag(\"customerInsertTag\").isResumed())) mjkarbasian.moshtarimadar.Helpers.Utility.activityOnBackExit(this); else super.onBackPressed(); } catch (java.lang.Exception e) { mjkarbasian.moshtarimadar.Helpers.Utility.activityOnBackExit(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6806/buggy-version/app.src.main.java.mjkarbasian.moshtarimadar.Customers.Customers.java", "BodyUseAPI": ["mjkarbasian.moshtarimadar.Helpers.Utility.activityOnBackExit(mjkarbasian.moshtarimadar.Customers.Customers)", "fragmentManager.findFragmentByTag(\"customerInsertTag\").isResumed()", "mjkarbasian.moshtarimadar.Others.DrawerActivity.onBackPressed()", "android.support.v4.app.FragmentManager.findFragmentByTag(java.lang.String)"], "Fixed commit": "0a5a9dcbf4ceafea0b5b8e56e3a4d7a8c1b3c351", "Url": "https://api.github.com/repos/javadKarbasian/Kaseb-1", "Date": "2017-01-25T14:05:28Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (ASRS.Bestelling b : bestellingen) { try { model6.addRow(new java.lang.String[]{ \"\" + (b.getOrderNr()) }); } catch (java.lang.Exception z) { } } } catch (java.lang.Exception e3) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/375/buggy-version/Scherm.java", "BodyUseAPI": ["ASRS.Bestelling.getOrderNr()", "javax.swing.table.DefaultTableModel.addRow(java.lang.String[])"], "Fixed commit": "54bbd607363fef6e07168e45bc7e9ab6e37c8975", "Url": "https://api.github.com/repos/frank52/ASRS", "Date": "2015-04-30T12:51:24Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { bestellingen.get(0).generatePakbonnen(); } catch (java.lang.Exception e2) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/375/buggy-version/Scherm.java", "BodyUseAPI": ["bestellingen.get(0).generatePakbonnen()", "java.util.ArrayList<ASRS.Bestelling>.get(int)"], "Fixed commit": "54bbd607363fef6e07168e45bc7e9ab6e37c8975", "Url": "https://api.github.com/repos/frank52/ASRS", "Date": "2015-04-30T12:51:24Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.io.InputStream imageStream = com.komamitsu.android.naver.topic.Utils.getInputStreamViaHttp(client, urlOfImage); if (imageStream != null) { b = android.graphics.BitmapFactory.decodeStream(imageStream); com.komamitsu.android.naver.topic.MyLog.d(com.komamitsu.android.naver.topic.Widget.TAG, (\"Downloaded the news image: \" + urlOfImage)); com.komamitsu.android.naver.topic.Widget.imageCache.put(urlOfImage, b); } news.setImage(b); } catch (java.lang.Exception e) { android.util.Log.e(com.komamitsu.android.naver.topic.Widget.TAG, (\"Getting an image error, url=\" + urlOfImage), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2015/buggy-version/src.com.komamitsu.android.naver.topic.Widget.java", "BodyUseAPI": ["com.komamitsu.android.naver.topic.Topic.setImage(android.graphics.Bitmap)", "android.graphics.BitmapFactory.decodeStream(java.io.InputStream)", "com.komamitsu.android.naver.topic.MyLog.d(java.lang.String,java.lang.String)", "java.util.WeakHashMap<java.lang.String, android.graphics.Bitmap>.put(java.lang.String,android.graphics.Bitmap)", "com.komamitsu.android.naver.topic.Utils.getInputStreamViaHttp(org.apache.http.impl.client.DefaultHttpClient,java.lang.String)"], "Fixed commit": "951f6da2f76e37cfc6503257203ee58dcfb7659e", "Url": "https://api.github.com/repos/komamitsu/android-naver-topic-widget", "Date": "2012-04-05T07:43:41Z"},
{"Line": "=>710", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { setLoggerDefFilePath(availableLoggerDefFiles.values().iterator().next().getAbsolutePath()); } catch (java.lang.Exception e) { loggerDefExists = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3896/buggy-version/src.main.java.com.romraider.Settings.java", "BodyUseAPI": ["com.romraider.Settings.setLoggerDefFilePath(java.lang.String)", "java.util.Map<java.lang.String, java.io.File>.values()", "java.io.File.getAbsolutePath()", "java.util.Iterator<java.io.File>.next()", "java.util.Collection<java.io.File>.iterator()"], "Fixed commit": "4cc25a047185013d97a9d4a10cffd413c53edfac", "Url": "https://api.github.com/repos/Merp/RomRaider", "Date": "2013-03-09T01:11:51Z"},
{"Line": "=>609", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { deleteItem(playerChar.itemsHeld[i], out); } catch (java.lang.Exception e) { error = \"failed to delete item from player's inventory.\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6861/buggy-version/Tarsus.src.java.GameInstance.java", "BodyUseAPI": ["GameInstance.deleteItem(playerChar.itemsHeld[i],java.io.PrintWriter)"], "Fixed commit": "c09ce86b025dbcdeb5add653caf9d9c35436b543", "Url": "https://api.github.com/repos/bgrayd/Tarsus", "Date": "2013-11-15T19:03:37Z"},
{"Line": "=>588", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { newItem(storeItems[i], out); storeItems[i] = null; } catch (java.lang.Exception e) { error = \"An error occured while trying to buy the item.\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6861/buggy-version/Tarsus.src.java.GameInstance.java", "BodyUseAPI": ["GameInstance.newItem(storeItems[i],java.io.PrintWriter)"], "Fixed commit": "c09ce86b025dbcdeb5add653caf9d9c35436b543", "Url": "https://api.github.com/repos/bgrayd/Tarsus", "Date": "2013-11-15T19:03:37Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { index = seedu.address.logic.parser.ParserUtil.parseIndex(argMultimap.getPreamble().get()); } catch (seedu.address.commons.exceptions.IllegalValueException ive) { throw new seedu.address.logic.parser.exceptions.ParseException(java.lang.String.format(seedu.address.logic.parser.MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3164/buggy-version/src.main.java.seedu.address.logic.parser.EditCommandParser.java", "BodyUseAPI": ["seedu.address.logic.parser.ArgumentMultimap.getPreamble()", "seedu.address.logic.parser.ParserUtil.parseIndex(argMultimap.getPreamble().get())", "argMultimap.getPreamble().get()"], "Fixed commit": "a8b5dab77cc4ae45dbb594d8674cd0768a8699fc", "Url": "https://api.github.com/repos/CS2103JUN2017-T2/main", "Date": "2017-07-04T13:40:10Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { initiated.signal(); } finally { lock.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1087/buggy-version/src.main.java.com.actiontech.dble.backend.mysql.nio.handler.NewConnectionRespHandler.java", "BodyUseAPI": ["java.util.concurrent.locks.Condition.signal()"], "Fixed commit": "47e2a22bd5a4c9453fc45a3626641311b1d54ab3", "Url": "https://api.github.com/repos/actiontech/dble", "Date": "2017-10-20T03:44:03Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.content.pm.PackageInfo info = getActivity().getPackageManager().getPackageInfo(\"com.example.admin.aqm\", PackageManager.GET_SIGNATURES); for (android.content.pm.Signature signature : info.signatures) { java.security.MessageDigest md = java.security.MessageDigest.getInstance(\"SHA\"); md.update(signature.toByteArray()); android.util.Log.d(\"KeyHash:\", android.util.Base64.encodeToString(md.digest(), Base64.DEFAULT)); } } catch (android.content.pm.PackageManager e) { } catch (java.security.NoSuchAlgorithmException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6905/buggy-version/app.src.main.java.com.example.admin.aqm.SignInFragment.java", "BodyUseAPI": ["com.example.admin.aqm.SignInFragment.getActivity()", "java.security.MessageDigest.getInstance(java.lang.String)", "android.util.Log.d(java.lang.String,android.util.Base64.encodeToString(md.digest(), Base64.DEFAULT))", "android.util.Base64.encodeToString(byte[],Base64.DEFAULT)", "getActivity().getPackageManager()", "java.security.MessageDigest.update(signature.toByteArray())", "android.content.pm.Signature.toByteArray()", "getActivity().getPackageManager().getPackageInfo(java.lang.String,PackageManager.GET_SIGNATURES)", "java.security.MessageDigest.digest()"], "Fixed commit": "0b6ddbd8996d4b9c49a07ecfce7ac68d69fbb757", "Url": "https://api.github.com/repos/vartika1403/AQM", "Date": "2017-11-18T18:31:45Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { nk = driver.asNodeKey(s); } catch (pt.floraon.driver.FloraOnException e1) { java.lang.System.out.println((\"Citation error: \" + (e.getKey()))); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/9012/buggy-version/webadmin.src.main.java.pt.floraon.bibliography.BibliographyCompiler.java", "BodyUseAPI": ["pt.floraon.driver.interfaces.IFloraOn.asNodeKey(java.lang.String)"], "Fixed commit": "854e5b7bb441f0381626e73358884bee42ddf5de", "Url": "https://api.github.com/repos/miguel-porto/flora-on-server", "Date": "2017-09-28T22:02:52Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.salt = java.lang.Integer.parseInt(txt.substring(((txt.length()) - 2), txt.length())); } catch (java.lang.Exception e) { this.salt = java.lang.Integer.parseInt(txt.substring(((txt.length()) - 1), txt.length())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4384/buggy-version/Java.CifrarioSimmetrico.Decoder.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.length()", "java.lang.String.length()"], "Fixed commit": "ec6452e6eac28a9293c5f8421b5bc64ff92de6ea", "Url": "https://api.github.com/repos/d0ge01/random-stuff", "Date": "2014-04-08T20:39:01Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.net.HttpURLConnection connection = ((java.net.HttpURLConnection) (url.openConnection())); return io.rockscript.action.ActionResponse.endFunction(new io.rockscript.action.http.Response()); } catch (java.io.IOException e) { return io.rockscript.action.ActionResponse.endFunction(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6461/buggy-version/src.main.java.io.rockscript.action.http.HttpAction.java", "BodyUseAPI": ["java.net.URL.openConnection()", "io.rockscript.action.ActionResponse.endFunction(io.rockscript.action.http.Response)"], "Fixed commit": "b8a06d0305348c8ba551e8eb50e830dfcef9cc22", "Url": "https://api.github.com/repos/rockscript/rockscript", "Date": "2017-07-20T10:11:27Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { buffSend.write(\"Hello\"); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7253/buggy-version/ONSClientApp.src.kr.ac.kaist.gan.SimpleSocketThread.java", "BodyUseAPI": ["java.io.BufferedWriter.write(java.lang.String)"], "Fixed commit": "df9af458f301c504c27a58fee4570bcda3438b37", "Url": "https://api.github.com/repos/ryuch91/ONSClientApp", "Date": "2015-12-04T18:20:24Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { startActivity(new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse((\"market://details?id=\" + appPackageName)))); } catch (no.tagstory.android anfe) { startActivity(new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse((\"https://play.google.com/store/apps/details?id=\" + appPackageName)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/417/buggy-version/tagstory.src.main.java.no.tagstory.StoryDetailActivity.java", "BodyUseAPI": ["android.net.Uri.parse(java.lang.String)", "no.tagstory.StoryDetailActivity.1.startActivity(android.content.Intent)"], "Fixed commit": "f904423acddd5147fa9fe17b3cfcdf3353dcb4db", "Url": "https://api.github.com/repos/Kyrremann/TagStory", "Date": "2015-01-29T22:57:13Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { coll.dropIndex(index); } catch (com.mongodb.MongoCommandException ex) { vn.com.solution.ntq.glastool.utils.DailyLogger.error(ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1881/buggy-version/src.main.java.vn.com.solution.ntq.glastool.dao.chatlogdbs.ChatLogColl.java", "BodyUseAPI": ["com.mongodb.client.MongoCollection<org.bson.Document>.dropIndex(org.bson.Document)"], "Fixed commit": "67acf0902b4187eae7a96e62422e3e45bbf7eef7", "Url": "https://api.github.com/repos/angel41/glastool", "Date": "2017-02-21T03:55:14Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { deleteAttachmentFromDisk(id); AttachmentDAO.INSTANCE.delete(id); } catch (java.lang.Exception e) { LOGGER.error(\"error while deleting attachment\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8206/buggy-version/src.main.java.com.itechart.app.controller.helpers.AttachmentHelper.java", "BodyUseAPI": ["AttachmentDAO.INSTANCE.delete(java.lang.Integer)", "com.itechart.app.controller.helpers.AttachmentHelper.deleteAttachmentFromDisk(java.lang.Integer)"], "Fixed commit": "11dd92c89178c88d07acea06d9cb2384101da37b", "Url": "https://api.github.com/repos/maxventu/ContactBook", "Date": "2015-12-30T08:48:57Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { httpServletResponse.sendError(404); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1658/buggy-version/src.main.java.com.thunder.web.ThunderDispatcher.java", "BodyUseAPI": ["javax.servlet.http.HttpServletResponse.sendError(int)"], "Fixed commit": "9343c74cbb0d5db1bde992185fb9ccc46f366418", "Url": "https://api.github.com/repos/100cm/thunder", "Date": "2016-03-20T05:05:16Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.net.URI uri = new java.net.URI(ret.toString()); uri = uri.normalize(); ret = uri.toURL(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2883/buggy-version/src.hot.fuzzer.Fuzzer.java", "BodyUseAPI": ["java.net.URI.toURL()", "java.net.URI.normalize()", "java.net.URL.toString()"], "Fixed commit": "fcbfa269f2b6096cb76a475f68accec4b2bb2267", "Url": "https://api.github.com/repos/JBassett/SE331-Web-Application-Fuzzer", "Date": "2013-05-08T15:45:49Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.selectedImage = javax.imageio.ImageIO.read(new java.io.File(\"images/select-special-move.png\")); } catch (java.io.IOException e) { java.lang.System.out.println((\"Error: \" + e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6754/buggy-version/src.hackstreet.sixeswild.gui.game.ActiveGameScreen.java", "BodyUseAPI": ["javax.imageio.ImageIO.read(java.io.File)"], "Fixed commit": "8e25732cdfc72f39ec8c0d4e4e3d13cc6c6af6c0", "Url": "https://api.github.com/repos/HackStreetBoys/SixesWild", "Date": "2015-05-05T06:43:16Z"},
{"Line": "=>925", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { r.run(); } finally { currentRunningJob = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4269/buggy-version/OsmAnd.src.net.osmand.plus.routing.RoutingHelper.java", "BodyUseAPI": ["java.lang.Runnable.run()"], "Fixed commit": "1de0bba01aee0c8f4ad75efc1ab7431995980ffa", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2016-03-17T08:44:23Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.io.File file = properties.getFile(); if (file.exists()) { is = new java.io.FileInputStream(file); } } catch (java.io.IOException e) { is = properties.getInputStream(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6610/buggy-version/rayo-server.src.main.java.com.rayo.server.lookup.RegexpJIDLookupService.java", "BodyUseAPI": ["java.io.File.exists()", "org.springframework.core.io.Resource.getFile()"], "Fixed commit": "5d812401c990ed0a50218906b6be6d8fa1b3d288", "Url": "https://api.github.com/repos/rayo/rayo-server", "Date": "2011-12-02T13:18:55Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { nodes = get(); } catch (java.lang.InterruptedException | java.util.concurrent.ExecutionException ex) { org.sleuthkit.autopsy.directorytree.ViewContextAction.logger.log(java.util.logging.Level.WARNING, \"Failed to get nodes in selection worker.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7427/buggy-version/Core.src.org.sleuthkit.autopsy.directorytree.ViewContextAction.java", "BodyUseAPI": ["org.sleuthkit.autopsy.directorytree.ViewContextAction.SelectionWorker.get()"], "Fixed commit": "f15301ed5e5b0c6e33958510835d9808f37a094d", "Url": "https://api.github.com/repos/raman-bt/autopsy", "Date": "2013-11-21T21:02:43Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Integer.parseInt(dataSourceClient.getDataSource().getDataDescriptors().get(0).get(METADATA.MIN_VALUE)); } catch (java.lang.Exception e) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7542/buggy-version/plotter.src.main.java.org.md2k.plotter.PrefsFragmentDataSources.java", "BodyUseAPI": ["dataSourceClient.getDataSource().getDataDescriptors().get(0).get(METADATA.MIN_VALUE)", "java.lang.Integer.parseInt(dataSourceClient.getDataSource().getDataDescriptors().get(0).get(METADATA.MIN_VALUE))", "dataSourceClient.getDataSource().getDataDescriptors().get(int)", "org.md2k.datakitapi.source.datasource.DataSourceClient.getDataSource()", "dataSourceClient.getDataSource().getDataDescriptors()"], "Fixed commit": "b41fb06db830da00788cd76a5c896a4c6503c732", "Url": "https://api.github.com/repos/MD2Korg/mCerebrum-Plotter", "Date": "2016-08-01T05:14:20Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { coefficientMatrix = new org.jblas.DoubleMatrix(model.sv_coef); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3859/buggy-version/app.svmlib.src.main.java.libsvm.core.Model.java", "BodyUseAPI": [], "Fixed commit": "433ed8338219f3c13a463c872bd45ed72ee3daa5", "Url": "https://api.github.com/repos/sunjun-group/Ziyuan", "Date": "2017-02-23T12:47:12Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { topicHelper.asVideoObersable().subscribe(videosAdapter); } catch (java.lang.NullPointerException e) { android.util.Log.i(au.com.wsit.project10.ui.TopicVideosActivity.TAG, (\"Error observing \" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2189/buggy-version/app.src.main.java.au.com.wsit.project10.ui.TopicVideosActivity.java", "BodyUseAPI": ["topicHelper.asVideoObersable().subscribe(au.com.wsit.project10.adapters.VideosAdapter)", "au.com.wsit.project10.api.TopicHelper.asVideoObersable()"], "Fixed commit": "89b95bcb47bdbdaa4f711f850fdbf35d48740aca", "Url": "https://api.github.com/repos/guybridge/Project10", "Date": "2017-02-06T08:30:40Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { supplier = new org.soluvas.commons.OnDemandXmiLoader(org.soluvas.data.DataPackage.eINSTANCE, org.soluvas.data.config.TenantDataConfig.class, \"/id/co/bippo/common/base.MixinCatalog.xmi\"); } catch (java.lang.Exception e) { org.soluvas.data.config.TenantDataConfig.log.info((\"App MixinCatalog not found: \" + tenantMixinCatalogFile), e); supplier = com.google.common.base.Suppliers.ofInstance(DataFactory.eINSTANCE.createMixinCatalog()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2671/buggy-version/data.src.main.java.org.soluvas.data.config.TenantDataConfig.java", "BodyUseAPI": [], "Fixed commit": "73c361725010253bc7b699d42bca42dd50a14928", "Url": "https://api.github.com/repos/soluvas/soluvas-framework", "Date": "2014-05-08T05:28:59Z"},
{"Line": "=>432", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { root = root.getCanonicalFile(); } catch (java.io.IOException e) { throw new java.lang.IllegalStateException((\"Cannot get canonical file for \" + root), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1886/buggy-version/spring-boot.src.main.java.org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.java", "BodyUseAPI": ["java.io.File.getCanonicalFile()"], "Fixed commit": "dd51bdf2daa8a40a4ca630f929487a6345b14f80", "Url": "https://api.github.com/repos/mbenson/spring-boot", "Date": "2015-12-11T22:04:13Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { object = new org.json.JSONObject(request.getResponseText()); java.lang.System.out.println(((object.toString()) + \"working\")); if (object.getString(\"detail\").equals(\"User deactivated by admin.\")) { com.byteshaft.doctor.utils.AppGlobals.alertDialog(getActivity(), getString(R.string.login_faild), \"After admins approval you can use your Account !\"); }else { com.byteshaft.doctor.utils.Helpers.showSnackBar(getView(), R.string.activate_your_account); com.byteshaft.doctor.accountfragments.AccountManagerActivity.getInstance().loadFragment(new com.byteshaft.doctor.accountfragments.AccountActivationCode()); } } catch (org.json.JSONException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3245/buggy-version/app.src.main.java.com.byteshaft.doctor.accountfragments.Login.java", "BodyUseAPI": ["com.byteshaft.doctor.utils.AppGlobals.alertDialog(getActivity(),getString(R.string.login_faild),java.lang.String)", "com.byteshaft.doctor.utils.Helpers.showSnackBar(getView(),R.string.activate_your_account)", "org.json.JSONObject.getString(java.lang.String)", "org.json.JSONObject.toString()", "object.getString(\"detail\").equals(java.lang.String)", "com.byteshaft.requests.HttpRequest.getResponseText()", "com.byteshaft.doctor.accountfragments.AccountManagerActivity.getInstance()", "com.byteshaft.doctor.accountfragments.AccountManagerActivity.getInstance().loadFragment(com.byteshaft.doctor.accountfragments.AccountActivationCode)", "com.byteshaft.doctor.accountfragments.Login.getView()", "java.io.PrintStream.println(((object.toString()) + \"working\"))", "com.byteshaft.doctor.accountfragments.Login.getString(R.string.login_faild)", "com.byteshaft.doctor.accountfragments.Login.getActivity()"], "Fixed commit": "b4c3f28968b42376cd1468bda92dd10e8e6bd26b", "Url": "https://api.github.com/repos/husnain446/projectDoctor", "Date": "2017-03-23T19:07:42Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { datagramChannel.socket().bind(new java.net.InetSocketAddress(us.codecraft.blackhole.forward.MultiUDPReceiver.PORT_RECEIVE)); } catch (java.io.IOException e) { java.lang.System.err.println(\"Startup fail, maybe another process is running.\"); logger.error(\"Startup fail, maybe another process is running.\", e); java.lang.System.exit((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7373/buggy-version/server.src.main.java.us.codecraft.blackhole.forward.MultiUDPReceiver.java", "BodyUseAPI": ["java.net.DatagramSocket.bind(java.net.InetSocketAddress)", "java.nio.channels.DatagramChannel.socket()"], "Fixed commit": "9a3e159264a95a1a12937f3291e63e9ffad48143", "Url": "https://api.github.com/repos/code4craft/blackhole", "Date": "2013-05-07T12:41:55Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.concurrent.TimeUnit.MILLISECONDS.sleep(1000); } catch (java.lang.InterruptedException ex) { log.error(\"failed sleep interrupted, error{}\", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3479/buggy-version/cicada-collector.src.main.java.com.yirendai.infra.cicada.service.LogCollectService.java", "BodyUseAPI": ["java.util.concurrent.TimeUnit.sleep(int)"], "Fixed commit": "a99ea3c7e7c85180b149af7d97a2005c16569627", "Url": "https://api.github.com/repos/Yirendai/cicada", "Date": "2016-11-29T12:43:24Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.hardware.Camera.Parameters parameters = camera.getParameters(); parameters.setFlashMode(Camera.Parameters.FLASH_MODE_TORCH); camera.setParameters(parameters); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6666/buggy-version/camera-card-crop.src.main.java.me.zhouzhuo810.cameracardcrop.CropActivity.java", "BodyUseAPI": ["android.hardware.Camera.setParameters(Camera.Parameters)", "Camera.Parameters.setFlashMode(Camera.Parameters.FLASH_MODE_TORCH)", "android.hardware.Camera.getParameters()"], "Fixed commit": "3fe17b8a963440f7f4616982e4acb4cc7f3fce75", "Url": "https://api.github.com/repos/zhouzhuo810/CameraCardCropDemo", "Date": "2017-06-23T01:08:28Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.hardware.Camera.Parameters parameters = camera.getParameters(); parameters.setFlashMode(Camera.Parameters.FLASH_MODE_OFF); camera.setParameters(parameters); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6666/buggy-version/camera-card-crop.src.main.java.me.zhouzhuo810.cameracardcrop.CropActivity.java", "BodyUseAPI": ["android.hardware.Camera.setParameters(Camera.Parameters)", "Camera.Parameters.setFlashMode(Camera.Parameters.FLASH_MODE_OFF)", "android.hardware.Camera.getParameters()"], "Fixed commit": "3fe17b8a963440f7f4616982e4acb4cc7f3fce75", "Url": "https://api.github.com/repos/zhouzhuo810/CameraCardCropDemo", "Date": "2017-06-23T01:08:28Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.System.setOut(new java.io.PrintStream(java.lang.System.out, true, \"cp850\")); } catch (java.io.UnsupportedEncodingException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4202/buggy-version/src.Main.java", "BodyUseAPI": ["java.lang.System.setOut(java.io.PrintStream)"], "Fixed commit": "4f53d497906f68b65238e38bb839ff5fd9ab0516", "Url": "https://api.github.com/repos/haithun/allen-resolver", "Date": "2014-05-12T07:28:14Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.example.zzw.watchpkgwithoutglass.MessageSender.serverAddress = java.net.InetAddress.getByName(com.example.zzw.watchpkgwithoutglass.MessageSender.Server_IP); } catch (java.net.UnknownHostException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8998/buggy-version/app.src.main.java.com.example.zzw.watchpkgwithoutglass.MessageSender.java", "BodyUseAPI": ["java.net.InetAddress.getByName(java.lang.String)"], "Fixed commit": "5b602f8fcba129b3d4736a536cb6c54d16368343", "Url": "https://api.github.com/repos/jianwuesp/watch_software_jian", "Date": "2016-10-19T23:19:04Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { recordNameFolder = com.liferay.portlet.documentlibrary.service.DLAppLocalServiceUtil.addFolder(user.getUserId(), edu.jhu.cvrg.waveform.utility.ResourceUtility.getCurrentGroupId(), folderId, metaData.getRecordName(), \"\", service); } catch (com.liferay.portlet.documentlibrary.DuplicateFolderNameException e) { recordNameFolder = com.liferay.portlet.documentlibrary.service.DLAppLocalServiceUtil.getFolder(folder.getRepositoryId(), folder.getFolderId(), metaData.getRecordName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3944/buggy-version/docroot.WEB-INF.src.edu.jhu.cvrg.waveform.main.UploadManager.java", "BodyUseAPI": ["com.liferay.portlet.documentlibrary.service.DLAppLocalServiceUtil.addFolder(user.getUserId(),edu.jhu.cvrg.waveform.utility.ResourceUtility.getCurrentGroupId(),long,metaData.getRecordName(),java.lang.String,com.liferay.portal.service.ServiceContext)", "com.liferay.portal.model.User.getUserId()", "edu.jhu.cvrg.waveform.utility.ResourceUtility.getCurrentGroupId()", "edu.jhu.cvrg.dbapi.factory.exists.model.MetaContainer.getRecordName()"], "Fixed commit": "a814e3e0ed7ffa81483dc6126f23bb837f445c3a", "Url": "https://api.github.com/repos/CardioVascular-Research-Group/upload-portlet", "Date": "2013-12-19T22:51:23Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { value = current[index].trim(); } catch (java.lang.ArrayIndexOutOfBoundsException e) { value = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8296/buggy-version/src.me.daniel.csv2json.Main.java", "BodyUseAPI": ["java.lang.String.trim()"], "Fixed commit": "efc3a963b2ef98c746d813addf6e4ee49125fc3e", "Url": "https://api.github.com/repos/dashaw92/csv2json", "Date": "2016-06-27T19:51:39Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { container.addView(v); } catch (java.lang.Exception e) { container.removeView(v); container.addView(v); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8174/buggy-version/library.src.main.java.net.cpacm.library.infinite.BaseSliderAdapter.java", "BodyUseAPI": ["android.view.ViewGroup.addView(android.view.View)"], "Fixed commit": "4694d758e9545769be2d228ac3b2e6e6b370f3fc", "Url": "https://api.github.com/repos/cpacm/SimpleSlider", "Date": "2016-08-02T01:52:48Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.sql.Driver d = new org.apache.derby.jdbc.ClientDriver(); java.lang.String url = \"jdbc:derby://localhost:1674/taskdb;create=false\"; conn = d.connect(url, null); stmt = conn.createStatement(); } catch (java.sql.SQLException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4700/buggy-version/DatabaseInterface.java", "BodyUseAPI": ["java.sql.Connection.createStatement()", "java.sql.Driver.connect(java.lang.String,<nulltype>)"], "Fixed commit": "78586666ac523f99c30ab7879847c564702f6349", "Url": "https://api.github.com/repos/megaPHAIL/cs665-project", "Date": "2016-05-13T03:03:03Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return pullRule == null ? findByConnObjectKeyItem(uid, provision, anyUtils) : findByCorrelationRule(connObj, pullRule, anyUtils.getAnyTypeKind()); } catch (java.lang.RuntimeException e) { return java.util.Collections.<java.lang.Long>emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7730/buggy-version/core.provisioning-java.src.main.java.org.apache.syncope.core.provisioning.java.pushpull.PullUtils.java", "BodyUseAPI": ["org.apache.syncope.core.persistence.api.entity.AnyUtils.getAnyTypeKind()", "org.apache.syncope.core.provisioning.java.pushpull.PullUtils.findByConnObjectKeyItem(java.lang.String,org.apache.syncope.core.persistence.api.entity.resource.Provision,org.apache.syncope.core.persistence.api.entity.AnyUtils)", "org.apache.syncope.core.provisioning.java.pushpull.PullUtils.findByCorrelationRule(org.identityconnectors.framework.common.objects.ConnectorObject,org.apache.syncope.core.provisioning.api.pushpull.PullCorrelationRule,anyUtils.getAnyTypeKind())"], "Fixed commit": "5c4181fcbe77ca2e57654b415ef5777f66f32fcd", "Url": "https://api.github.com/repos/apache/syncope", "Date": "2016-03-29T09:45:44Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { context.startActivity(intent); } catch (java.lang.Exception e) { com.zhaoyan.common.util.Log.e(com.zhaoyan.common.util.IntentBuilder.TAG, (\"viewFile&&&&:\" + (e.toString()))); android.widget.Toast.makeText(context, R.string.open_file_fail, Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2143/buggy-version/src.com.zhaoyan.common.util.IntentBuilder.java", "BodyUseAPI": ["android.content.Context.startActivity(android.content.Intent)"], "Fixed commit": "a8341203290610d7cd018815d4d4b94ed4690b97", "Url": "https://api.github.com/repos/liangPATHofei1100/ZhaoYanJuYou", "Date": "2013-12-05T00:42:37Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { md5 = getMD5(inputStream); } finally { inputStream.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2866/buggy-version/src.main.java.hudson.plugins.s3.callable.S3DownloadCallable.java", "BodyUseAPI": ["hudson.plugins.s3.callable.S3DownloadCallable.getMD5(java.io.InputStream)"], "Fixed commit": "660d8f211ced4080d71cdaf73d06b0e382602744", "Url": "https://api.github.com/repos/Jimilian/s3-plugin", "Date": "2016-02-15T18:20:47Z"},
{"Line": "=>468", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { UserInterface.instance().process(); } catch (java.text.ParseException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1959/buggy-version/src.UserInterface.java", "BodyUseAPI": ["UserInterface.process()", "UserInterface.instance()"], "Fixed commit": "fea2c4af3661698b944df5c3f6c721b39ea748b8", "Url": "https://api.github.com/repos/Ilovitt19/Project-1-Iteration-1", "Date": "2015-03-15T19:45:22Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { getContext().unregisterReceiver(wifiReceiver); } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2283/buggy-version/privacystreams-core.src.main.java.com.github.privacystreams.device.WifiApListProvider.java", "BodyUseAPI": ["getContext().unregisterReceiver(com.github.privacystreams.device.WifiApListProvider.WifiReceiver)", "com.github.privacystreams.device.WifiApListProvider.getContext()"], "Fixed commit": "bf38722e2916de938dd1e54a62f4a2b5166c1ae0", "Url": "https://api.github.com/repos/PrivacyStreams/PrivacyStreams", "Date": "2017-03-21T00:28:27Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { getContext().unregisterReceiver(mReceiver); } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2283/buggy-version/privacystreams-core.src.main.java.com.github.privacystreams.device.BluetoothDeviceListProvider.java", "BodyUseAPI": ["getContext().unregisterReceiver(android.content.BroadcastReceiver)", "com.github.privacystreams.device.BluetoothDeviceListProvider.getContext()"], "Fixed commit": "bf38722e2916de938dd1e54a62f4a2b5166c1ae0", "Url": "https://api.github.com/repos/PrivacyStreams/PrivacyStreams", "Date": "2017-03-21T00:28:27Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { gridData.setAppointmentDate(sdfDateTime.format(so.getAppointmentDate())); } catch (java.lang.NullPointerException npe) { gridData.setAppointmentDate(\"-\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3938/buggy-version/src.main.java.com.twobytes.repair.controller.ServiceOrderController.java", "BodyUseAPI": ["java.text.SimpleDateFormat.format(so.getAppointmentDate())", "com.twobytes.model.ServiceOrder.getAppointmentDate()", "com.twobytes.repair.form.ServiceOrderGridData.setAppointmentDate(java.lang.String)"], "Fixed commit": "bd551d182af7c2fd6cc67f2d90990266d7346c09", "Url": "https://api.github.com/repos/zeazon/Computer-service-center", "Date": "2011-10-26T03:04:04Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(200); } catch (java.lang.InterruptedException ie) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/253/buggy-version/ChatServer.ClientApplication.src.chatclient.ChatClient.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "88e263fba22dd26131bc11ece807d19165b01f79", "Url": "https://api.github.com/repos/jmaxfield21/chat_server", "Date": "2013-12-02T17:20:45Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.xuPATHn.xximdemo.util.XXConnectionHelper.startService(this); } catch (com.xuPATHn.xximdemo.util.ConnectionRegisterException _e) { _e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4398/buggy-version/MyApplication.app.src.main.java.com.xuPATHn.xximdemo.ui.ChatActivity.java", "BodyUseAPI": ["com.xuPATHn.xximdemo.util.XXConnectionHelper.startService(com.xuPATHn.xximdemo.ui.ChatActivity)"], "Fixed commit": "794d3f1efa3ca2fff78e9b2f06108b1b2d94780f", "Url": "https://api.github.com/repos/foreverxiongtao/XXIMDEMO", "Date": "2016-08-08T06:25:43Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { token = com.intellij.openapi.application.ApplicationManager.getApplication().acquireReadActionLock(); closeOldSessionAndDebug(project, configuration.getRunnerParameters()); } finally { token.finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8915/buggy-version/src.com.atsebak.raspberrypi.commandline.AppCommandLineState.java", "BodyUseAPI": ["com.atsebak.raspberrypi.commandline.AppCommandLineState.3.closeOldSessionAndDebug(com.intellij.openapi.project.Project,configuration.getRunnerParameters())", "com.intellij.openapi.application.ApplicationManager.getApplication()", "com.atsebak.raspberrypi.runner.conf.RaspberryPIRunConfiguration.getRunnerParameters()", "com.intellij.openapi.application.ApplicationManager.getApplication().acquireReadActionLock()"], "Fixed commit": "bb705928e4c34f4b93cfe6000ffb30ca06248108", "Url": "https://api.github.com/repos/araad/raspberrypi-intellij", "Date": "2015-05-21T05:14:41Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { hashCode = (37 * hashCode) + (((net.minecraft.item.ItemStack) (wrappedStack)).getUnlocalizedName().hashCode()); } catch (java.lang.ArrayIndexOutOfBoundsException error) { net.multiplemonomials.eer.util.LogHelper.info((\"Bad item metadata: \" + (((net.minecraft.item.ItemStack) (wrappedStack)).getItemDamage()))); error.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5609/buggy-version/src.main.java.net.multiplemonomials.eer.exchange.WrappedStack.java", "BodyUseAPI": ["((net.minecraft.item.ItemStack) (wrappedStack)).getUnlocalizedName().hashCode()", "java.lang.Object.getUnlocalizedName()"], "Fixed commit": "c0872d1756704874f989d3d3f334da27eb06574d", "Url": "https://api.github.com/repos/multiplemonomials/Equivalent-Exchange-Reborn", "Date": "2015-01-25T16:08:36Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mNetworkService.setCallback(null); } catch (android.os.RemoteException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8470/buggy-version/app.src.main.java.com.android1.homework3.ui.MainActivity.java", "BodyUseAPI": ["android1.homework3.INetworkService.setCallback(<nulltype>)"], "Fixed commit": "865072cf511eefc2c85d356a6e9f5e8c3779bb74", "Url": "https://api.github.com/repos/acbelter/track_android1_homework3", "Date": "2016-05-27T20:21:45Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { properties.load(org.tommy.stationery.ink.core.config.ConfigProperties.class.getResourceAsStream(configFilePath)); } catch (java.lang.Exception ex) { java.io.InputStream in = null; try { in = new java.io.FileInputStream(configFilePath); } catch (java.io.FileNotFoundException e1) { throw new java.io.IOException(e1.getMessage()); } properties.load(in); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5802/buggy-version/stationery-ink.stationery-ink-core.src.main.java.org.tommy.stationery.ink.core.config.ConfigProperties.java", "BodyUseAPI": ["java.lang.Class.getResourceAsStream(java.lang.String)", "java.util.Properties.load(java.io.InputStream)"], "Fixed commit": "68bab2eafe3bbae785597a74f6b28788e9ff69a9", "Url": "https://api.github.com/repos/dk-stationery/stationery-ink", "Date": "2015-03-25T05:04:13Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return client.submit(mAppContext); } catch (cn.net.yto.common.NetworkUnavailableException e) { cn.net.yto.utils.LogUtils.e(cn.net.yto.biz.ReceiveInfoManager.TAG, e); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6232/buggy-version/src.cn.net.yto.biz.ReceiveInfoManager.java", "BodyUseAPI": ["cn.net.yto.net.ZltdHttpClient.submit(cn.net.yto.application.AppContext)"], "Fixed commit": "61c97a69203a918859bbbcaef76900f170e68ae1", "Url": "https://api.github.com/repos/kit-team/xuebao", "Date": "2013-01-08T12:39:29Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { key = keySelector.call(t); } catch (java.lang.Throwable e) { rx.exceptions.Exceptions.throwOrReport(e, child, t); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8154/buggy-version/src.main.java.rx.internal.operators.OperatorDistinctUntilChanged.java", "BodyUseAPI": ["rx.functions.Func1<? super T, ? extends U>.call(T)"], "Fixed commit": "300ab1ea198f1a5f7734063dda7acdf4efc8d450", "Url": "https://api.github.com/repos/ReactiveX/RxJava", "Date": "2016-01-23T07:10:28Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { redrawer.finish(); } catch (java.lang.Exception e) { android.util.Log.e(\"GRAph\", \"onDestroy crash\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1686/buggy-version/app.src.main.java.com.masiuk.vova.rate.GrafFragment.java", "BodyUseAPI": ["com.androidplot.util.Redrawer.finish()"], "Fixed commit": "fec0a121ee6fd56f22c0cbef10332ac80b8816a3", "Url": "https://api.github.com/repos/masuikvova/Rate", "Date": "2016-11-24T08:35:41Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { redrawer.pause(); timer.cancel(); } catch (java.lang.Exception e) { android.util.Log.e(\"GRAph\", \"onPause crash\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1686/buggy-version/app.src.main.java.com.masiuk.vova.rate.GrafFragment.java", "BodyUseAPI": ["java.util.Timer.cancel()", "com.androidplot.util.Redrawer.pause()"], "Fixed commit": "fec0a121ee6fd56f22c0cbef10332ac80b8816a3", "Url": "https://api.github.com/repos/masuikvova/Rate", "Date": "2016-11-24T08:35:41Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { int healthInInt = java.lang.Integer.parseInt(health); if (healthInInt > 50) { return com.citrus.sdk.classes.PGHealth.GOOD; }else { return com.citrus.sdk.classes.PGHealth.BAD; } } catch (java.lang.NumberFormatException e) { e.printStackTrace(); return com.citrus.sdk.classes.PGHealth.UNKNOWN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3861/buggy-version/citruslibrary.src.com.citrus.sdk.classes.PGHealth.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "6989a7da791893841b579d64fde541da5b89c25d", "Url": "https://api.github.com/repos/Flutterbee/open-android-v3", "Date": "2015-07-14T05:30:25Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.timetable = seedu.address.logic.parser.TimetableParser.parseUrl(trimmedUrl); } catch (seedu.address.logic.parser.exceptions.ParseException e) { throw new seedu.address.commons.exceptions.IllegalValueException(seedu.address.model.person.timetable.Timetable.MESSAGE_INVALID_TIMETABLE_URL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6734/buggy-version/src.main.java.seedu.address.model.person.timetable.Timetable.java", "BodyUseAPI": ["seedu.address.logic.parser.TimetableParser.parseUrl(java.lang.String)"], "Fixed commit": "c07d79d8e1f4de24d337038edc54a552bf487e8e", "Url": "https://api.github.com/repos/April0616/addressbook-level4", "Date": "2017-10-13T09:27:38Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { unregisterReceiver(mReceiver); } catch (java.lang.Exception e) { android.util.Log.e(\"Receiver Exception\", \"Exception.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7/buggy-version/app.src.main.java.com.favex.Activities.MessagesActivity.java", "BodyUseAPI": ["com.favex.Activities.MessagesActivity.unregisterReceiver(com.favex.Activities.MessagesActivity.Receiver)"], "Fixed commit": "271385750a424b05e4248998fece258f0a4993f5", "Url": "https://api.github.com/repos/favor-exchange/FavEx", "Date": "2017-02-08T07:11:14Z"},
{"Line": "=>438", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { populateZoneStatus(iterator, null); } finally { provider.release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7225/buggy-version/src.main.java.org.dasein.cloud.aws.network.Route53.java", "BodyUseAPI": ["org.dasein.cloud.aws.network.Route53.2.populateZoneStatus(org.dasein.util.Jiterator<org.dasein.cloud.ResourceStatus>,<nulltype>)"], "Fixed commit": "d0bc52140700902744f38acfad7e332cfb44e8bb", "Url": "https://api.github.com/repos/greese/dasein-cloud-aws", "Date": "2013-02-23T18:14:07Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { vol = java.lang.Integer.parseInt(cmdData.getVolume()); } catch (java.lang.NumberFormatException e) { java.lang.System.out.println(\"Failed to parse volume.\"); java.lang.System.exit(5); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2639/buggy-version/src.com.Check.java", "BodyUseAPI": ["java.lang.Integer.parseInt(cmdData.getVolume())", "com.CmdUser.getVolume()"], "Fixed commit": "fe4d75ff68661be32dc29e052eee032597d91d06", "Url": "https://api.github.com/repos/RuiFoxx/ProgramEngineering", "Date": "2016-10-09T13:03:47Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.javalite.activejdbc.Base.open(org.gooru.nucleus.search.indexers.app.components.DataSourceRegistry.getInstance().getDefaultDataSource()); taxMetaList = org.javalite.activejdbc.Base.findAll(query, codeId); if ((taxMetaList.size()) < 1) { org.gooru.nucleus.search.indexers.app.repositories.activejdbc.TaxonomyRepositoryImpl.LOGGER.warn(\"Taxonomy info for {} level for id : {} not present in DB\", level, codeId); } } catch (java.lang.Exception ex) { org.gooru.nucleus.search.indexers.app.repositories.activejdbc.TaxonomyRepositoryImpl.LOGGER.error(\"Failed to fetch taxonomy details \", ex); } finally { org.javalite.activejdbc.Base.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2052/buggy-version/src.main.java.org.gooru.nucleus.search.indexers.app.repositories.activejdbc.TaxonomyRepositoryImpl.java", "BodyUseAPI": ["org.gooru.nucleus.search.indexers.app.components.DataSourceRegistry.getInstance()", "org.slf4j.Logger.warn(java.lang.String,java.lang.String,java.lang.String)", "org.javalite.activejdbc.Base.open(org.gooru.nucleus.search.indexers.app.components.DataSourceRegistry.getInstance().getDefaultDataSource())", "org.javalite.activejdbc.Base.findAll(java.lang.String,java.lang.String)", "org.gooru.nucleus.search.indexers.app.components.DataSourceRegistry.getInstance().getDefaultDataSource()", "java.util.List<java.util.Map>.size()"], "Fixed commit": "5259d7d35f27b086d8802ce6fce009659c68eded", "Url": "https://api.github.com/repos/RenukaGurumurthy/nucleus-search-indexer", "Date": "2016-05-24T11:02:44Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.io.BufferedReader reader = request.getReader(); while ((line = reader.readLine()) != null) sb.append(line); todo.connection.query.Query query = new com.google.gson.Gson().fromJson(sb.toString(), todo.connection.query.Query.class); if (query == null) throw new java.lang.Exception((\"[ERROR] Query is null, data=\" + (sb.toString()))); if ((query.getUser()) == null) throw new java.lang.Exception((\"[ERROR] User from query is null, data=\" + (sb.toString()))); java.io.PrintWriter out = response.getWriter(); out.print(new com.google.gson.Gson().toJson(createResponseForQuery(out, query))); out.flush(); } catch (java.lang.Exception e) { todo.utils.Trace.print((((((\"Servlet \" + (this.getServletName())) + \" >> @\") + where) + \"= \") + (e.getMessage()))); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/211/buggy-version/src.main.java.todo.servlet.ToDoListServlet.java", "BodyUseAPI": ["java.io.PrintWriter.print(new com.google.gson.Gson().toJson(createResponseForQuery(out, query)))", "com.google.gson.Gson.toJson(todo.connection.response.Response)", "java.io.BufferedReader.readLine()", "java.lang.StringBuffer.append(java.lang.String)", "java.lang.StringBuffer.toString()", "javax.servlet.http.HttpServletResponse.getWriter()", "todo.servlet.ToDoListServlet.createResponseForQuery(java.io.PrintWriter,todo.connection.query.Query)", "java.lang.StringBuffer.toString()", "java.io.PrintWriter.flush()", "com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)", "todo.connection.query.Query.getUser()", "javax.servlet.http.HttpServletRequest.getReader()", "java.lang.StringBuffer.toString()"], "Fixed commit": "387d95fba2f9912bb4c7b55ea8edf0bbbd561d83", "Url": "https://api.github.com/repos/drlocke/GetThingsDone_Servlet", "Date": "2017-10-08T20:19:52Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { domainUser = com.hws.Services.security.CustomUserDetailsService._userDAO.GetUserByLogin(login); } catch (java.lang.Exception e) { e.getMessage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5242/buggy-version/src.main.java.com.hws.Services.security.CustomUserDetailsService.java", "BodyUseAPI": ["com.hws.DAO.UserDAO.GetUserByLogin(java.lang.String)"], "Fixed commit": "c743ea780518bca494b786d7bc47bbba5f2be573", "Url": "https://api.github.com/repos/IhorHolovatsky/HotelWebService", "Date": "2017-05-06T11:03:55Z"},
{"Line": "=>1749", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { c = loc.getChunk(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5916/buggy-version/src.main.java.net.sacredlabyrinth.Phaed.PreciousStones.managers.ForceFieldManager.java", "BodyUseAPI": ["net.sacredlabyrinth.Phaed.PreciousStones.managers.Location.getChunk()"], "Fixed commit": "31e2fef8e4456f392ce6ed6438aa0aa9c6daafe8", "Url": "https://api.github.com/repos/Nekocraft/PreciousStones", "Date": "2013-04-16T06:10:19Z"},
{"Line": "=>426", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { s = org.technikradio.JayCorp.server.Data.meta.get(target.getID()); } catch (java.lang.IndexOutOfBoundsException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3029/buggy-version/Server.src.org.technikradio.JayCorp.server.Data.java", "BodyUseAPI": ["org.technikradio.jay_corp.user.User.getID()", "java.util.ArrayList<org.technikradio.JayCorp.server.MetaSheet>.get(target.getID())"], "Fixed commit": "62bb6f799e850571d9500b91071372426dcc0e0b", "Url": "https://api.github.com/repos/Doralitze/Repo-JayCorp", "Date": "2016-11-11T13:57:41Z"},
{"Line": "=>410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { s = org.technikradio.JayCorp.server.Data.meta.get(target.getID()); } catch (java.lang.IndexOutOfBoundsException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3029/buggy-version/Server.src.org.technikradio.JayCorp.server.Data.java", "BodyUseAPI": ["java.util.ArrayList<org.technikradio.JayCorp.server.MetaSheet>.get(target.getID())", "org.technikradio.jay_corp.user.User.getID()"], "Fixed commit": "62bb6f799e850571d9500b91071372426dcc0e0b", "Url": "https://api.github.com/repos/Doralitze/Repo-JayCorp", "Date": "2016-11-11T13:57:41Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.parse.ParseQuery<com.codesmore.codesmore.integration.backend.pojo.ParseIssue> query = com.parse.ParseQuery.getQuery(com.codesmore.codesmore.integration.backend.WebService.TABLE_ISSUE); com.codesmore.codesmore.integration.backend.pojo.ParseIssue parseIssue = query.get(issue.getParseId()); parseIssue.setFixedIndicator(true); parseIssue.save(); } catch (com.parse.ParseException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8784/buggy-version/app.src.main.java.com.codesmore.codesmore.integration.backend.WebService.java", "BodyUseAPI": ["com.parse.ParseQuery.getQuery(java.lang.String)", "com.parse.ParseQuery<com.codesmore.codesmore.integration.backend.pojo.ParseIssue>.get(issue.getParseId())", "com.codesmore.codesmore.integration.backend.pojo.ParseIssue.setFixedIndicator(boolean)", "com.codesmore.codesmore.model.pojo.Issue.getParseId()", "com.codesmore.codesmore.integration.backend.pojo.ParseIssue.save()"], "Fixed commit": "e3a748f049218a9b3fe06c331dd65951aab469eb", "Url": "https://api.github.com/repos/gabrielmarcos2001/googlehackathon", "Date": "2015-11-11T00:56:54Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.net.URL.setURLStreamHandlerFactory(factory); } catch (java.lang.Error e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3489/buggy-version/strongbox-commons.src.main.java.org.carlspring.strongbox.xml.parsers.GenericParser.java", "BodyUseAPI": ["java.net.URL.setURLStreamHandlerFactory(org.carlspring.strongbox.url.ClasspathURLStreamHandlerFactory)"], "Fixed commit": "7d82d5cec996f7807bf77280395a7c3b62ee4857", "Url": "https://api.github.com/repos/strongbox/strongbox", "Date": "2014-11-18T17:54:42Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { de.fau.cs.mad.kwikshop.android.view.Item item = viewModel.getItems().get(position); command.execute(item.getId()); } catch (java.lang.IndexOutOfBoundsException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/744/buggy-version/app.src.main.java.de.fau.cs.mad.kwikshop.android.view.ShoppingListFragment.java", "BodyUseAPI": ["viewModel.getItems().get(int)", "de.fau.cs.mad.kwikshop.android.viewmodel.ShoppingListViewModel.getItems()", "de.fau.cs.mad.kwikshop.android.view.Command<java.lang.Integer>.execute(item.getId())", "de.fau.cs.mad.kwikshop.android.view.Item.getId()"], "Fixed commit": "908ba284c7d301be57cf207adadb32c9b86727e1", "Url": "https://api.github.com/repos/FAU-Inf2/kwikshop-android", "Date": "2015-06-24T08:54:30Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { result = phase.getDuration().addToDateTime(result); } catch (final org.killbill.billing.catalog.api.CatalogApiException ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8362/buggy-version/catalog.src.main.java.org.killbill.billing.catalog.DefaultPlan.java", "BodyUseAPI": ["phase.getDuration().addToDateTime(org.joda.time.DateTime)", "org.killbill.billing.catalog.api.PlanPhase.getDuration()"], "Fixed commit": "6ea71d71e0bebbc7e20da5b063b819bc5bf5d4ab", "Url": "https://api.github.com/repos/killbill/killbill", "Date": "2016-03-15T21:29:35Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.google.android.gms.tasks.Tasks.await(temp.pushToDatabase()); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5780/buggy-version/app.src.main.java.com.example.aegis.budgpal.StatUtils.java", "BodyUseAPI": ["com.example.aegis.budgpal.FireBudget.pushToDatabase()", "com.google.android.gms.tasks.Tasks.await(temp.pushToDatabase())"], "Fixed commit": "f4166f2aaaa6ac16a95147fd60a62be16b9f0005", "Url": "https://api.github.com/repos/Aegen/BudgetPal", "Date": "2017-04-19T22:54:08Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { riverType = active.getRiverType(); rotation = active.getRotationNumber(); } catch (java.lang.Exception exe) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2481/buggy-version/src.Gameplay.Controller.CameraController.java", "BodyUseAPI": ["Gameplay.Model.Tile.GameTile.getRotationNumber()", "Gameplay.Model.Tile.GameTile.getRiverType()"], "Fixed commit": "26f581683c61acaaa71017a46502ff894a8c1944", "Url": "https://api.github.com/repos/zrolston/OOPTeam14", "Date": "2017-04-16T20:00:56Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return create(resource); } catch (ca.uhn.fhir.rest.server.exceptions.UnprocessableEntityException e) { java.lang.System.out.println((\"UnprocessableEntityException : \" + (e.getMessage()))); return update(resource); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/783/buggy-version/library.src.main.java.com.dtc.fhir.repository.hapi.AbstractBaseHapiFhirRepo.java", "BodyUseAPI": ["com.dtc.fhir.repository.hapi.AbstractBaseHapiFhirRepo<T>.create(T)"], "Fixed commit": "670cb3da8308a1f83b3ac429956b07078242dd28", "Url": "https://api.github.com/repos/MontyPan/dtc-fhir", "Date": "2016-09-13T10:15:59Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.io.FileInputStream fileIn = autoClose(new java.io.FileInputStream(dataFile)); java.io.ObjectInputStream in = autoClose(new java.io.ObjectInputStream(fileIn)); map = com.vitco.util.file.FileTools.castHash(((java.util.HashMap) (in.readObject())), java.lang.String.class, java.lang.Object.class); } catch (java.io.InvalidClassException e) { errorHandler.handle(e); } catch (java.io.EOFException e) { errorHandler.handle(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2012/buggy-version/PS4k.src.com.vitco.manager.pref.Preferences.java", "BodyUseAPI": ["com.vitco.manager.pref.Preferences.2.autoClose(java.io.FileInputStream)", "java.io.ObjectInputStream.readObject()", "com.vitco.manager.pref.Preferences.2.autoClose(java.io.ObjectInputStream)", "com.vitco.util.file.FileTools.castHash(java.lang.Object,java.lang.Class,java.lang.Class)"], "Fixed commit": "15f2265efccb6fa749bc7244634e8e420966c3a2", "Url": "https://api.github.com/repos/simlu/voxelshop", "Date": "2015-09-11T03:31:30Z"},
{"Line": "=>1072", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (caverunner.Sprite troll : Trolls) ProcessTroll(troll); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3481/buggy-version/src.caverunner.Cavern.java", "BodyUseAPI": ["caverunner.Cavern.ProcessTroll(caverunner.Sprite)"], "Fixed commit": "b6e88afea6d30391b2d1290e0f1425c6af08c211", "Url": "https://api.github.com/repos/bswe/CaveRunner", "Date": "2017-02-11T22:14:47Z"},
{"Line": "=>674", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { saveItem.doClick(); } catch (java.lang.Exception e2) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6072/buggy-version/bf.ui.MainFrame.java", "BodyUseAPI": ["javax.swing.JMenuItem.doClick()"], "Fixed commit": "ba8078eec959cc1388973b26b01f16f06f44a6d6", "Url": "https://api.github.com/repos/Starzrz/bigWork", "Date": "2016-07-16T01:23:41Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.json.JSONObject jsonObject = new org.json.JSONObject(json.get(i).toString()); for (java.lang.String field : fields) { jsonObject.remove(field); } result.put(jsonObject); } catch (org.json.JSONException je) { return json; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3617/buggy-version/src.main.java.com.mbi.Cutter.java", "BodyUseAPI": ["org.json.JSONArray.put(org.json.JSONObject)", "json.get(i).toString()", "org.json.JSONArray.get(int)", "org.json.JSONObject.remove(java.lang.String)"], "Fixed commit": "6c11a72723abde661f9a2b600a10e0dcd6d7f477", "Url": "https://api.github.com/repos/mbi88/json-assert", "Date": "2017-03-14T16:29:26Z"},
{"Line": "=>903", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { stmt = tazo.Application.conn.prepareStatement(sql); stmt.setInt(1, cid); rs = stmt.executeQuery(); while (rs.next()) { ccount++; } } catch (java.sql.SQLException e) { e.printStackTrace(); } finally { if (rs != null) { try { rs.close(); } catch (java.sql.SQLException ee) { ee.printStackTrace(); } } if (stmt != null) { try { stmt.close(); } catch (java.sql.SQLException ee) { ee.printStackTrace(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8494/buggy-version/src.tazo.Application.java", "BodyUseAPI": ["java.sql.PreparedStatement.setInt(int,int)", "java.sql.Connection.prepareStatement(java.lang.String)", "java.sql.ResultSet.next()", "java.sql.PreparedStatement.executeQuery()"], "Fixed commit": "4e2130544456594f0e5acb4b5ae6958699e72fa9", "Url": "https://api.github.com/repos/crazymi/SimpleTicketDatabase", "Date": "2017-12-20T12:23:09Z"},
{"Line": "=>821", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { stmt = tazo.Application.conn.prepareStatement(sql); stmt.setInt(1, sid); rs = stmt.executeQuery(); while (rs.next()) { scount++; } } catch (java.sql.SQLException e) { e.printStackTrace(); } finally { if (rs != null) { try { rs.close(); } catch (java.sql.SQLException ee) { ee.printStackTrace(); } } if (stmt != null) { try { stmt.close(); } catch (java.sql.SQLException ee) { ee.printStackTrace(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8494/buggy-version/src.tazo.Application.java", "BodyUseAPI": ["java.sql.Connection.prepareStatement(java.lang.String)", "java.sql.PreparedStatement.executeQuery()", "java.sql.ResultSet.next()", "java.sql.PreparedStatement.setInt(int,int)"], "Fixed commit": "4e2130544456594f0e5acb4b5ae6958699e72fa9", "Url": "https://api.github.com/repos/crazymi/SimpleTicketDatabase", "Date": "2017-12-20T12:23:09Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { writer.writeFactories(root.getRoots()); } catch (java.lang.Throwable e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7749/buggy-version/processor.src.main.java.wrm.hardwire.processor.AnnotationProcessor.java", "BodyUseAPI": ["wrm.hardwire.processor.model.GenModelRoot.getRoots()", "wrm.hardwire.processor.ModuleBaseWriter.writeFactories(root.getRoots())"], "Fixed commit": "fb682a0993483d021aaa6154f1f8dc1446d000c7", "Url": "https://api.github.com/repos/warmuuh/hardwire", "Date": "2015-07-28T11:33:03Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { numberOfSs = java.lang.Integer.parseInt(newTrack.getText().toString()); } catch (java.lang.NumberFormatException e) { se.gsc.stenmark.gscenduro.PopupMessage dialog = new se.gsc.stenmark.gscenduro.PopupMessage(\"Invalid number entered\"); dialog.show(getFragmentManager(), \"popUp\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8899/buggy-version/src.se.gsc.stenmark.gscenduro.StartScreenFragment.java", "BodyUseAPI": ["android.widget.EditText.getText()", "java.lang.Integer.parseInt(newTrack.getText().toString())", "newTrack.getText().toString()"], "Fixed commit": "999f6b9f37413f063fb41445ea9745def7646b38", "Url": "https://api.github.com/repos/stenmark/GSCSportIdentEnduro", "Date": "2015-02-25T19:52:52Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { clazz = java.lang.Thread.currentThread().getContextClassLoader().loadClass(jobClass); } catch (java.lang.Exception ex) { clazz = java.lang.Class.forName(jobClass); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7333/buggy-version/winder-core.src.main.java.org.ebayopensource.winder.quartz.QuartzJobSummary.java", "BodyUseAPI": ["java.lang.ClassLoader.loadClass(java.lang.String)", "java.lang.Thread.getContextClassLoader()", "java.lang.Thread.currentThread()"], "Fixed commit": "39432f672c35b41f8bc0b83fe9823624206daf6c", "Url": "https://api.github.com/repos/eBay/Winder", "Date": "2017-04-01T04:25:15Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { clazz = java.lang.Thread.currentThread().getContextClassLoader().loadClass(className); } catch (java.lang.Exception ex) { clazz = java.lang.Class.forName(className); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7333/buggy-version/winder-core.src.main.java.org.ebayopensource.winder.quartz.QuartzJob.java", "BodyUseAPI": ["java.lang.ClassLoader.loadClass(java.lang.String)", "java.lang.Thread.getContextClassLoader()", "java.lang.Thread.currentThread()"], "Fixed commit": "39432f672c35b41f8bc0b83fe9823624206daf6c", "Url": "https://api.github.com/repos/eBay/Winder", "Date": "2017-04-01T04:25:15Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { items = gson.fromJson(response.body().string(), collectionType); } catch (java.lang.Exception e) { handlers.onError(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/255/buggy-version/app.src.main.java.agersant.polaris.api.remote.ServerAPI.java", "BodyUseAPI": ["com.google.gson.Gson.fromJson(response.body().string(),java.lang.reflect.Type)", "response.body().string()", "okhttp3.Response.body()"], "Fixed commit": "359ece946ea0708a397c1d9620824d2eb7b342fb", "Url": "https://api.github.com/repos/agersant/polaris-android", "Date": "2017-06-16T05:50:07Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { items = gson.fromJson(response.body().string(), collectionType); } catch (java.lang.Exception e) { handlers.onError(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/255/buggy-version/app.src.main.java.agersant.polaris.api.remote.ServerAPI.java", "BodyUseAPI": ["okhttp3.Response.body()", "com.google.gson.Gson.fromJson(response.body().string(),java.lang.reflect.Type)", "response.body().string()"], "Fixed commit": "359ece946ea0708a397c1d9620824d2eb7b342fb", "Url": "https://api.github.com/repos/agersant/polaris-android", "Date": "2017-06-16T05:50:07Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { items = gson.fromJson(response.body().string(), collectionType); } catch (java.lang.Exception e) { handlers.onError(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/255/buggy-version/app.src.main.java.agersant.polaris.api.remote.ServerAPI.java", "BodyUseAPI": ["response.body().string()", "okhttp3.Response.body()", "com.google.gson.Gson.fromJson(response.body().string(),java.lang.reflect.Type)"], "Fixed commit": "359ece946ea0708a397c1d9620824d2eb7b342fb", "Url": "https://api.github.com/repos/agersant/polaris-android", "Date": "2017-06-16T05:50:07Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { session.useDefaultFolder(); } catch (java.lang.IllegalStateException e) { java.lang.System.err.println(\"Error retrieving messages. Please try again later.\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2070/buggy-version/src.com.sms.pop3.POP3Client.java", "BodyUseAPI": ["jodd.mail.ReceiveMailSession.useDefaultFolder()"], "Fixed commit": "d2775f9dbd12fdbeb6c741ec8798639f88082487", "Url": "https://api.github.com/repos/LucasBaizer/JText", "Date": "2016-09-03T15:42:28Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { T eVal = ((T) (org.gbif.api.util.VocabularyUtils.lookupEnum(val, clazz))); return eVal == null ? defaultValue : eVal; } catch (java.lang.IllegalArgumentException e) { return defaultValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2171/buggy-version/registry-metadata.src.main.java.org.gbif.registry.metadata.parse.converter.EnumTypeConverter.java", "BodyUseAPI": ["org.gbif.api.util.VocabularyUtils.lookupEnum(java.lang.String,java.lang.Class<T>)"], "Fixed commit": "890e5315ec11dce7726e7e0546e91f37c51745cc", "Url": "https://api.github.com/repos/gbif/registry", "Date": "2014-07-11T09:40:23Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.bugsense.trace.BugSenseHandler.closeSession(this); } catch (java.lang.Exception e) { android.util.Log.e(es.ugr.swad.swadroid.SWADMain.TAG, \"Error initializing BugSense\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8294/buggy-version/SWADroid.src.es.ugr.swad.swadroid.SWADMain.java", "BodyUseAPI": ["com.bugsense.trace.BugSenseHandler.closeSession(es.ugr.swad.swadroid.SWADMain)"], "Fixed commit": "600784bc4a662e68604f797232b8bbc396cfe72e", "Url": "https://api.github.com/repos/Amab/SWADroid", "Date": "2013-10-16T20:42:54Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.bugsense.trace.BugSenseHandler.initAndStartSession(this, Constants.BUGSENSE_API_KEY); } catch (java.lang.Exception e) { android.util.Log.e(es.ugr.swad.swadroid.SWADMain.TAG, \"Error initializing BugSense\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8294/buggy-version/SWADroid.src.es.ugr.swad.swadroid.SWADMain.java", "BodyUseAPI": ["com.bugsense.trace.BugSenseHandler.initAndStartSession(es.ugr.swad.swadroid.SWADMain,Constants.BUGSENSE_API_KEY)"], "Fixed commit": "600784bc4a662e68604f797232b8bbc396cfe72e", "Url": "https://api.github.com/repos/Amab/SWADroid", "Date": "2013-10-16T20:42:54Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mediaId = gson.fromJson(mediaObjectResponseJson, yellr.net.yellr_android.intent_services.publish_post.MediaObjectResponse.class).media_id; } catch (java.lang.Exception e) { android.util.Log.d(\"PublishPostIntentService.handleActionGetPublishedPost\", \"GSON puked\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/305/buggy-version/app.src.main.java.yellr.net.yellr_android.intent_services.publish_post.PublishPostIntentService.java", "BodyUseAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Fixed commit": "b8dfc37611078841f4ef1009f9e9d18d292de9a2", "Url": "https://api.github.com/repos/hhroc/yellr-android", "Date": "2015-02-18T18:48:39Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { response = gson.fromJson(assignmentsJson, yellr.net.yellr_android.intent_services.assignments.AssignmentsResponse.class); } catch (java.lang.Exception e) { android.util.Log.d(\"CheckHttpAssignmentsReceiver.onReceive\", \"GSON puked\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/305/buggy-version/app.src.main.java.yellr.net.yellr_android.receivers.CheckHttpAssignmentsReceiver.java", "BodyUseAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Fixed commit": "b8dfc37611078841f4ef1009f9e9d18d292de9a2", "Url": "https://api.github.com/repos/hhroc/yellr-android", "Date": "2015-02-18T18:48:39Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { response = gson.fromJson(storiesJson, yellr.net.yellr_android.intent_services.stories.StoriesResponse.class); } catch (java.lang.Exception e) { android.util.Log.d(\"CheckHttpStoriesReceiver.onReceive\", \"GSON puked\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/305/buggy-version/app.src.main.java.yellr.net.yellr_android.receivers.CheckHttpStoriesReceiver.java", "BodyUseAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Fixed commit": "b8dfc37611078841f4ef1009f9e9d18d292de9a2", "Url": "https://api.github.com/repos/hhroc/yellr-android", "Date": "2015-02-18T18:48:39Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(10); } catch (java.lang.InterruptedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1142/buggy-version/src.core.server.InputPoller.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "5112edb86f47f0f5b21b83ecfc3edb24cc71018d", "Url": "https://api.github.com/repos/aioc/phais", "Date": "2013-11-20T11:14:06Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { ssocket = new java.net.ServerSocket(5050); } catch (java.io.IOException e) { android.util.Log.e(\"CommandPoller\", null, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3452/buggy-version/FindMyPhone.src.csci498.ccard.findmyphone.CommandPoller.java", "BodyUseAPI": [], "Fixed commit": "90b2bbd25846744e10400b7fe16ec6aeb00fe9e2", "Url": "https://api.github.com/repos/ccard/csci498TermProject", "Date": "2012-11-27T03:24:25Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { orderService.save(orderDB); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/199/buggy-version/src.main.java.com.order.www.controller.OrderTypeControl.java", "BodyUseAPI": ["com.order.www.service.OrderService.save(com.order.www.controller.OrderDB)"], "Fixed commit": "d60e0169acce671653887903dffb8fbbaac4c3cd", "Url": "https://api.github.com/repos/kongtrio/seller_order", "Date": "2017-09-21T02:55:15Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.sql.PreparedStatement ps = connection.prepareStatement(query); res = ps.executeQuery(); while (res.next()) { obsMessage.add(new CentralPoint.Message(res.getString(\"Titel\"), res.getString(\"Bericht\"), res.getInt(\"MissieID\"))); } return obsMessage; } catch (java.sql.SQLException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6901/buggy-version/src.Database.DaoMessage.java", "BodyUseAPI": ["java.sql.ResultSet.getString(java.lang.String)", "java.sql.PreparedStatement.executeQuery()", "java.sql.ResultSet.next()", "Database.DaoMessage.prepareStatement(java.lang.String)", "java.sql.ResultSet.getInt(java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)", "javafx.collections.ObservableList<CentralPoint.Message>.add(CentralPoint.Message)"], "Fixed commit": "c9b5b9afae0c481a609aed38c48f649a4ec19a3c", "Url": "https://api.github.com/repos/Full-House-Fontys/Full-House-Main", "Date": "2016-06-22T10:29:26Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { cb = initializeNative(); initialized = true; } catch (com.google.gwt.core.client.JavaScriptException e) { throw new java.lang.IllegalStateException(\"could not initialize Childbrowser plugin\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3723/buggy-version/gwt-phonegap.src.main.java.com.googlecode.gwtphonegap.client.plugins.childbrowser.ChildBrowserPhoneGapImpl.java", "BodyUseAPI": ["com.googlecode.gwtphonegap.client.plugins.childbrowser.ChildBrowserPhoneGapImpl.initializeNative()"], "Fixed commit": "7ffe70d8d0366db2ec521c7efde64b2cdfab4db6", "Url": "https://api.github.com/repos/dankurka/gwtphonegap", "Date": "2011-10-10T12:37:05Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((user.getUsername().equals(newUser.getUsername())) || (user.getEmail().equals(newUser.getEmail()))) { authenticationResult.isSuccessful = false; } } catch (java.lang.NullPointerException e) { e.printStackTrace(); log.error(((\"User \" + (user.getUsername())) + \" has null email\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4020/buggy-version/src.main.java.business.UserBusiness.java", "BodyUseAPI": ["entity.User.getEmail()", "user.getEmail().equals(newUser.getEmail())", "entity.User.getEmail()", "entity.User.getUsername()", "entity.User.getUsername()", "user.getUsername().equals(newUser.getUsername())"], "Fixed commit": "bcc00f4895269fe9166cb99c9437d7d244300d98", "Url": "https://api.github.com/repos/ericmassip/PokEETAC", "Date": "2016-12-17T18:42:43Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { indexInCollection = this.rows.indexOf(trzpoc.structure.CellsRow.getEmptyInstance().setyPos(rowIndex)); if (indexInCollection >= 0) { retValue = this.rows.get(indexInCollection); this.calculatePixelYPos(); } } catch (java.lang.Exception ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1194/buggy-version/src.main.java.trzpoc.structure.DataDisplayManager.java", "BodyUseAPI": ["trzpoc.structure.CellsRow.getEmptyInstance()", "trzpoc.structure.CellsRow.getEmptyInstance().setyPos(int)", "trzpoc.structure.DataDisplayManager.calculatePixelYPos()", "java.util.ArrayList<trzpoc.structure.CellsRow>.indexOf(trzpoc.structure.CellsRow.getEmptyInstance().setyPos(rowIndex))", "java.util.ArrayList<trzpoc.structure.CellsRow>.get(int)"], "Fixed commit": "150c0dce55668f3f5a9a26c2c6c51a753adccc7e", "Url": "https://api.github.com/repos/TRZ-EI/serial", "Date": "2017-08-01T14:01:54Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String[] parts = url.substring(url.indexOf(pt.ist.fenix.filters.FileDownloadLegacyRedirectFilter.SERVLET_PATH)).replace(pt.ist.fenix.filters.FileDownloadLegacyRedirectFilter.SERVLET_PATH, \"\").split(\"\\\\/\"); if ((parts.length) == 0) { return null; } return parts[0]; } catch (java.lang.Exception e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7599/buggy-version/src.main.java.pt.ist.fenix.filters.FileDownloadLegacyRedirectFilter.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "44c64088e1b046138f11542d3b14e211dc85d6db", "Url": "https://api.github.com/repos/jcarvalho/fenix-ist", "Date": "2014-10-14T10:54:50Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { tvValue.setText(activity.getVisa().getPassport_Issue_Country__r().getName()); nocDetails.addView(view); } catch (java.lang.NullPointerException e) { nocDetails.addView(view); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7463/buggy-version/DubaiSouth.src.fragment.Visa.Cancel.PayAndSubmitCancelVisa.java", "BodyUseAPI": ["android.widget.LinearLayout.addView(android.view.View)", "android.widget.TextView.setText(activity.getVisa().getPassport_Issue_Country__r().getName())", "fragmentActivity.VisaActivity.getVisa()", "activity.getVisa().getPassport_Issue_Country__r()", "activity.getVisa().getPassport_Issue_Country__r().getName()"], "Fixed commit": "e2c5959f627fc169907f4e1931acc0a50d26b26a", "Url": "https://api.github.com/repos/Cloud-Concept/dwc-DubaiSouth-Android", "Date": "2015-10-07T08:06:19Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(1500); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/58/buggy-version/src.com.yogee.widgets.CurrentLocationWidget.utils.AddressFinder.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "d59776869c9efb27b0e6c459d4be35e0fda48509", "Url": "https://api.github.com/repos/yogendra1/currentLocationWidget", "Date": "2014-06-15T14:27:15Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { java.lang.Thread.currentThread().setName(((((threadName) + \"[\") + ctName) + \"]\")); org.apache.log4j.NDC.push(threadNDC); return doPipeWithTimeoutGuarded(input, session); } finally { java.lang.Thread.currentThread().setName(ctName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/74/buggy-version/core.src.main.java.nl.nn.adapterframework.pipes.TimeoutGuardPipe.java", "BodyUseAPI": ["java.lang.Thread.currentThread()", "nl.nn.adapterframework.pipes.TimeoutGuardPipe.DoPipe.doPipeWithTimeoutGuarded(java.lang.Object,nl.nn.adapterframework.core.IPipeLineSession)", "org.apache.log4j.NDC.push(java.lang.String)", "java.lang.Thread.setName(java.lang.String)"], "Fixed commit": "2c43285af1a45c2ccc14374146f956bb1f2dd28f", "Url": "https://api.github.com/repos/ibissource/iaf", "Date": "2016-04-01T14:31:05Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { java.lang.Thread.currentThread().setName(((((threadName) + \"[\") + ctName) + \"]\")); org.apache.log4j.NDC.push(threadNDC); return sendMessageWithTimeoutGuarded(correlationID, message, prc); } finally { java.lang.Thread.currentThread().setName(ctName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/74/buggy-version/core.src.main.java.nl.nn.adapterframework.core.TimeoutGuardSenderWithParametersBase.java", "BodyUseAPI": ["nl.nn.adapterframework.core.TimeoutGuardSenderWithParametersBase.SendMessage.sendMessageWithTimeoutGuarded(java.lang.String,java.lang.String,nl.nn.adapterframework.parameters.ParameterResolutionContext)", "org.apache.log4j.NDC.push(java.lang.String)", "java.lang.Thread.setName(java.lang.String)", "java.lang.Thread.currentThread()"], "Fixed commit": "2c43285af1a45c2ccc14374146f956bb1f2dd28f", "Url": "https://api.github.com/repos/ibissource/iaf", "Date": "2016-04-01T14:31:05Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String srcFieldName = srcField.getName(); java.lang.reflect.Field destField = destMapperFields.get(srcFieldName); srcField.setAccessible(true); if (destField != null) { destField.setAccessible(true); if (destField.getClass().equals(srcField.getClass())) { destField.set(dest, srcField.get(src)); } } } catch (java.lang.Exception e) { com.frio.tools.reflect.ReflectionUtil.LOG.error(\"copyBeanProperty have met an exception\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3508/buggy-version/src.main.java.com.frio.tools.reflect.ReflectionUtil.java", "BodyUseAPI": ["java.lang.reflect.Field.setAccessible(boolean)", "java.lang.reflect.Field.get(java.lang.Object)", "java.lang.reflect.Field.setAccessible(boolean)", "java.lang.reflect.Field.set(java.lang.Object,java.lang.Object)", "java.lang.reflect.Field.getName()", "java.util.Map<java.lang.String, java.lang.reflect.Field>.get(java.lang.String)", "java.lang.reflect.Field.getClass()", "java.lang.reflect.Field.getClass()", "java.lang.Class<? extends java.lang.reflect.Field>.equals(java.lang.Class<? extends java.lang.reflect.Field>)"], "Fixed commit": "e6188c3692b49fa79217905e0af6ed9b0abb4f95", "Url": "https://api.github.com/repos/fantasycool/javatools", "Date": "2017-04-21T02:44:39Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return ad.mde515.proj1.storedProcedures.SharedProcedures.getDegreeOfSeparation(this.id, actor.getId()); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8636/buggy-version/src.main.java.ad.mde515.proj1.daos.movies.Actor.java", "BodyUseAPI": ["ad.mde515.proj1.storedProcedures.SharedProcedures.getDegreeOfSeparation(int,int)", "ad.mde515.proj1.daos.movies.Actor.getId()"], "Fixed commit": "44c8a28bd7c04ea3018c4a8e72f108ecd34449b2", "Url": "https://api.github.com/repos/ikavvour/ad_MDE515_proj1", "Date": "2014-02-27T14:00:36Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ((android.widget.RadioButton) (getView().findViewById(StatisticsActivity.sp.getInt(\"stats_selectedfoodrange\", R.id.statistics_range_all)))).setChecked(true); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/410/buggy-version/app.src.main.java.com.oligon.bienentracker.ui.fragments.StatisticsFoodFragment.java", "BodyUseAPI": ["getView().findViewById(StatisticsActivity.sp.getInt(\"stats_selectedfoodrange\", R.id.statistics_range_all))", "StatisticsActivity.sp.getInt(java.lang.String,R.id.statistics_range_all)", "com.oligon.bienentracker.ui.fragments.StatisticsFoodFragment.getView()", "((android.widget.RadioButton) (getView().findViewById(StatisticsActivity.sp.getInt(\"stats_selectedfoodrange\", R.id.statistics_range_all)))).setChecked(boolean)"], "Fixed commit": "d9b3f35727558b016e8a85e928e8ae30c99a3c31", "Url": "https://api.github.com/repos/OliGonCreations/BienenTracker", "Date": "2016-05-19T20:08:51Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ((android.widget.RadioButton) (getView().findViewById(StatisticsActivity.sp.getInt(\"stats_selectedrange\", R.id.statistics_range_all)))).setChecked(true); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/410/buggy-version/app.src.main.java.com.oligon.bienentracker.ui.fragments.StatisticsEarningsFragment.java", "BodyUseAPI": ["StatisticsActivity.sp.getInt(java.lang.String,R.id.statistics_range_all)", "com.oligon.bienentracker.ui.fragments.StatisticsEarningsFragment.getView()", "getView().findViewById(StatisticsActivity.sp.getInt(\"stats_selectedrange\", R.id.statistics_range_all))", "((android.widget.RadioButton) (getView().findViewById(StatisticsActivity.sp.getInt(\"stats_selectedrange\", R.id.statistics_range_all)))).setChecked(boolean)"], "Fixed commit": "d9b3f35727558b016e8a85e928e8ae30c99a3c31", "Url": "https://api.github.com/repos/OliGonCreations/BienenTracker", "Date": "2016-05-19T20:08:51Z"},
{"Line": "=>435", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { tcId = tcId.substring(0, tcId.indexOf(\"/\")); } catch (java.lang.StringIndexOutOfBoundsException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6323/buggy-version/openinfra_core.src.main.java.de.btu.openinfra.backend.db.rbac.OpenInfraRbac.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "65393df79969fdeb959e5941415e1c3bd593b6af", "Url": "https://api.github.com/repos/OpenInfRA/core", "Date": "2015-10-08T08:13:57Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((this.model) == null) model = net.minecraftforge.client.model.AdvancedModelLoader.loadModel(((icbm.Reference.MODEL_DIRECTORY) + (this.modelName))); } catch (net.minecraftforge.client.model.ModelFormatException e) { java.lang.System.out.println((\"Crash ModelName: \" + (this.modelName))); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7681/buggy-version/explosion.src.main.java.icbm.explosion.missile.types.Missile.java", "BodyUseAPI": ["net.minecraftforge.client.model.AdvancedModelLoader.loadModel(((icbm.Reference.MODEL_DIRECTORY) + (this.modelName)))"], "Fixed commit": "9125b018fbc318c7a356328a887aafaee7ecb02e", "Url": "https://api.github.com/repos/wildex999/ICBM", "Date": "2014-04-03T19:22:52Z"},
{"Line": "=>494", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { session.resetCurrentProcessInstance(processId); } catch (com.silverpeas.processManager.servlets.ProcessManagerException e) { return \"/admin/jsp/documentNotFound.jsp\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3929/buggy-version/process-manager.process-manager-war.src.main.java.com.silverpeas.processManager.servlets.ProcessManagerRequestRouter.java", "BodyUseAPI": ["com.silverpeas.processManager.servlets.ProcessManagerSessionController.resetCurrentProcessInstance(java.lang.String)"], "Fixed commit": "22cbf0b85e54babb0d6863ac47bb66a9f901fd64", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Components", "Date": "2015-10-22T22:08:25Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { tunnelPersisting.writeTunnels(tunnels); } catch (java.io.IOException e) { android.util.Log.wtf(de.flyingsnail.ipv6droid.android.MainActivity.TAG, \"Could not write empty tunnel list to persistent configuration\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3883/buggy-version/IPv6Droid.src.main.java.de.flyingsnail.ipv6droid.android.MainActivity.java", "BodyUseAPI": ["de.flyingsnail.ipv6droid.android.TunnelPersisting.writeTunnels(de.flyingsnail.ipv6droid.android.Tunnels)"], "Fixed commit": "b00e7cf0df69ee102ffb2a4c965b19067ea3da7f", "Url": "https://api.github.com/repos/pelzvieh/IPv6Droid", "Date": "2016-03-24T22:24:17Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { bitmap = android.graphics.BitmapFactory.decodeStream(getContentResolver().openInputStream(uriFromPath)); } catch (java.io.FileNotFoundException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4353/buggy-version/app.src.main.java.com.kcdev.android.localfileshare.MainActivity.java", "BodyUseAPI": ["android.graphics.BitmapFactory.decodeStream(getContentResolver().openInputStream(uriFromPath))", "com.kcdev.android.localfileshare.MainActivity.getContentResolver()", "getContentResolver().openInputStream(android.net.Uri)"], "Fixed commit": "18673ea8f6b7be6df8a13be3945398b20d86ebf3", "Url": "https://api.github.com/repos/anthony-zhu/LocalFileShare", "Date": "2014-12-06T20:41:58Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { exif = new android.media.ExifInterface(currPhotoPathAbsolute); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4353/buggy-version/app.src.main.java.com.kcdev.android.localfileshare.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "18673ea8f6b7be6df8a13be3945398b20d86ebf3", "Url": "https://api.github.com/repos/anthony-zhu/LocalFileShare", "Date": "2014-12-06T20:41:58Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { listCopy.add(((E) (element))); } catch (java.lang.ClassCastException cex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2040/buggy-version/src.edu.rochester.nbook.monopdroid.monopd.MonoProtocolHandler.java", "BodyUseAPI": ["java.util.ArrayList<E>.add(java.lang.Object)"], "Fixed commit": "0c3c8d64999ad20c3fabcc1bd7ff3514379e22c9", "Url": "https://api.github.com/repos/nmbook/monopdroid", "Date": "2014-05-19T00:40:51Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { lock.lock(); java.lang.String memberId = this.getMemberIdFromTaskName(taskName, true); this.setServerLocationOfTask(taskName, memberId); this.scheduleTask(memberId, taskName); } finally { lock.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6816/buggy-version/components.ntask.org.wso2.carbon.ntask.core.src.main.java.org.wso2.carbon.ntask.core.impl.clustered.ClusteredTaskManager.java", "BodyUseAPI": ["org.wso2.carbon.ntask.core.impl.clustered.ClusteredTaskManager.getMemberIdFromTaskName(java.lang.String,boolean)", "java.util.concurrent.locks.Lock.lock()", "org.wso2.carbon.ntask.core.impl.clustered.ClusteredTaskManager.scheduleTask(java.lang.String,java.lang.String)", "org.wso2.carbon.ntask.core.impl.clustered.ClusteredTaskManager.setServerLocationOfTask(java.lang.String,java.lang.String)"], "Fixed commit": "ddd06d9dd872be2ff840211fa0556e28cac93ba5", "Url": "https://api.github.com/repos/wso2/carbon-commons", "Date": "2015-08-05T04:30:20Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { log.info(((((oName + \" is already registered. Adding it with \") + alternativeOName) + \", but you should revise your setup in \") + \"order to either use a qualifier or ensure, that only a single agent gets registered (otherwise history functionality might not work)\")); org.jolokia.mbean.Config config = new org.jolokia.mbean.Config(pHistoryStore, pDebugStore, alternativeOName); mBeanServerHandler.registerMBean(config, alternativeOName); } catch (javax.management.InstanceAlreadyExistsException e) { log.error(((\"Cannot even register fallback MBean with name \" + alternativeOName) + \". Should never happen. Really.\"), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3414/buggy-version/agent.core.src.main.java.org.jolokia.backend.LocalRequestDispatcher.java", "BodyUseAPI": ["org.jolokia.util.LogHandler.info(java.lang.String)", "org.jolokia.backend.MBeanServerHandler.registerMBean(org.jolokia.mbean.Config,java.lang.String)"], "Fixed commit": "8258db28f24ee64be677add52d851fbbd2792f4c", "Url": "https://api.github.com/repos/rhuss/jolokia", "Date": "2012-04-30T06:31:12Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return polygon.contains(polygon.getFactory().createPoint(new com.vividsolutions.jts.geom.Coordinate(point.getX(), point.getY()))); } catch (com.vividsolutions.jts.geom.TopologyException e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8985/buggy-version/de.bund.bfr.knime.gis.src.de.bund.bfr.knime.gis.views.canvas.element.RegionNode.java", "BodyUseAPI": ["com.vividsolutions.jts.geom.MultiPolygon.contains(polygon.getFactory().createPoint(new com.vividsolutions.jts.geom.Coordinate(point.getX(), point.getY())))", "com.vividsolutions.jts.geom.MultiPolygon.getFactory()", "java.awt.geom.Point2D.getY()", "polygon.getFactory().createPoint(com.vividsolutions.jts.geom.Coordinate)", "java.awt.geom.Point2D.getX()"], "Fixed commit": "fa950d13cd9e278c0143b9c3c4dbad15ed5a1228", "Url": "https://api.github.com/repos/SiLeBAT/BfROpenLab", "Date": "2016-07-07T11:25:10Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { headers.setLocation(ucBuilder.path(((\"/\" + (jaxRSPath)) + \"/\")).path(\"usersettings/filter/id/{id}\").buildAndExpand(setting.getId()).toUri()); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1577/buggy-version/src.main.java.org.openbox.sf5.json.endpoints.SettingsService.java", "BodyUseAPI": ["org.springframework.http.HttpHeaders.setLocation(ucBuilder.path(((\"/\" + (jaxRSPath)) + \"/\")).path(\"usersettings/filter/id/{id}\").buildAndExpand(setting.getId()).toUri())", "ucBuilder.path(((\"/\" + (jaxRSPath)) + \"/\")).path(\"usersettings/filter/id/{id}\").buildAndExpand(setting.getId()).toUri()", "org.springframework.web.util.UriComponentsBuilder.path(java.lang.String)", "ucBuilder.path(((\"/\" + (jaxRSPath)) + \"/\")).path(java.lang.String)", "ucBuilder.path(((\"/\" + (jaxRSPath)) + \"/\")).path(\"usersettings/filter/id/{id}\").buildAndExpand(setting.getId())", "org.openbox.sf5.model.Settings.getId()"], "Fixed commit": "1f92a19d9deccf80c7fb0bd7386c79d4cb82099a", "Url": "https://api.github.com/repos/detec/SF5Spring", "Date": "2016-01-23T10:40:52Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.docdoku.android.plm.client.parts.Part part = parts.get(position); if ((part == null) || ((part.getAuthor()) == null)) { return false; }else { return true; } } catch (java.lang.IndexOutOfBoundsException e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2635/buggy-version/docdoku-cli-android.src.com.docdoku.android.plm.client.parts.PartListActivity.java", "BodyUseAPI": ["com.docdoku.android.plm.client.parts.Part.getAuthor()", "java.util.List<com.docdoku.android.plm.client.parts.Part>.get(int)"], "Fixed commit": "122655c2d1c23a9d4f6ab594a7e14ba73dc9fb70", "Url": "https://api.github.com/repos/docdoku/docdoku-plm", "Date": "2013-08-27T14:43:32Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.docdoku.android.plm.client.documents.Document document = documents.get(position); if ((document == null) || ((document.getAuthor()) == null)) { return false; }else { return true; } } catch (java.lang.IndexOutOfBoundsException e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2635/buggy-version/docdoku-cli-android.src.com.docdoku.android.plm.client.documents.DocumentListActivity.java", "BodyUseAPI": ["com.docdoku.android.plm.client.documents.Document.getAuthor()", "java.util.List<com.docdoku.android.plm.client.documents.Document>.get(int)"], "Fixed commit": "122655c2d1c23a9d4f6ab594a7e14ba73dc9fb70", "Url": "https://api.github.com/repos/docdoku/docdoku-plm", "Date": "2013-08-27T14:43:32Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { fr.cls.atoll.motu.web.dal.DALManager.getInstance().getCatalogManager().getProductManager().updateMetadata(fr.cls.atoll.motu.web.bll.BLLManager.getInstance().getCatalogManager().getCatalogType(configService), currentProduct.getProductId(), currentProduct.getLocationData(), currentProduct.getProductMetaData()); productCache.setProduct(configService.getName(), currentProduct); } catch (fr.cls.atoll.motu.web.bll.exception.MotuException e) { fr.cls.atoll.motu.web.bll.catalog.product.cache.CatalogAndProductCacheRefreshThread.LOGGER.error((((\"Error during refresh of the describe product cache, config service=\" + (configService.getName())) + \", productId=\") + (currentProduct.getProductId())), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8451/buggy-version/motu-web.src.main.java.fr.cls.atoll.motu.web.bll.catalog.product.cache.CatalogAndProductCacheRefreshThread.java", "BodyUseAPI": ["fr.cls.atoll.motu.web.dal.request.netcdf.data.Product.getProductId()", "fr.cls.atoll.motu.web.dal.request.netcdf.data.Product.getProductMetaData()", "fr.cls.atoll.motu.web.bll.BLLManager.getInstance().getCatalogManager().getCatalogType(fr.cls.atoll.motu.web.dal.config.xml.model.ConfigService)", "fr.cls.atoll.motu.web.dal.request.netcdf.data.Product.getLocationData()", "fr.cls.atoll.motu.web.bll.catalog.product.cache.IProductCache.setProduct(configService.getName(),fr.cls.atoll.motu.web.dal.request.netcdf.data.Product)", "fr.cls.atoll.motu.web.dal.DALManager.getInstance().getCatalogManager().getProductManager()", "fr.cls.atoll.motu.web.dal.DALManager.getInstance()", "fr.cls.atoll.motu.web.dal.DALManager.getInstance().getCatalogManager().getProductManager().updateMetadata(fr.cls.atoll.motu.web.bll.BLLManager.getInstance().getCatalogManager().getCatalogType(configService),currentProduct.getProductId(),currentProduct.getLocationData(),currentProduct.getProductMetaData())", "fr.cls.atoll.motu.web.dal.DALManager.getInstance().getCatalogManager()", "fr.cls.atoll.motu.web.bll.BLLManager.getInstance()", "fr.cls.atoll.motu.web.bll.BLLManager.getInstance().getCatalogManager()", "fr.cls.atoll.motu.web.dal.config.xml.model.ConfigService.getName()"], "Fixed commit": "2e220bc647dfbcbe9e6e04dcaeb10690f8237442", "Url": "https://api.github.com/repos/clstoulouse/motu", "Date": "2017-01-24T08:14:56Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { json.setData(sc.getUserPrincipal().getName()); } catch (java.lang.Exception e) { json.setStatus(\"401\"); json.setErrorMsg(\"Authentication failed\"); return getNoCacheResponseBuilder(Response.Status.UNAUTHORIZED).entity(json).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8747/buggy-version/HopsWorksBackend.src.main.java.io.hops.services.rest.AuthService.java", "BodyUseAPI": ["javax.ws.rs.core.SecurityContext.getUserPrincipal()", "io.hops.services.rest.JsonResponse.setData(sc.getUserPrincipal().getName())", "sc.getUserPrincipal().getName()"], "Fixed commit": "8dc64470e43f215233a65b9456ff63521a36d5e4", "Url": "https://api.github.com/repos/hopshadoop/hopsworks", "Date": "2015-03-31T10:43:01Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { federationAdminService.updateRegistryEntry(metacard, locations); } catch (org.codice.ddf.registry.federationadmin.service.internal.FederationAdminException e) { federationAdminService.addRegistryEntry(metacard, locations); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3404/buggy-version/catalog.spatial.registry.registry-federation-admin-service-impl.src.main.java.org.codice.ddf.registry.federationadmin.service.impl.RegistryPublicationServiceImpl.java", "BodyUseAPI": ["org.codice.ddf.registry.federationadmin.service.internal.FederationAdminService.updateRegistryEntry(ddf.catalog.data.Metacard,java.util.Set<java.lang.String>)"], "Fixed commit": "3d7aba5c17672742f124261e02bb60092e0ff285", "Url": "https://api.github.com/repos/clockard/ddf", "Date": "2016-09-12T15:16:43Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.parse.Parse.enableLocalDatastore(this); com.parse.ParseCrashReporting.enable(this); app.initializedParse = true; } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6451/buggy-version/app.src.main.java.de.weightlifting.app.SplashActivity.java", "BodyUseAPI": ["com.parse.ParseCrashReporting.enable(de.weightlifting.app.SplashActivity)", "com.parse.Parse.enableLocalDatastore(de.weightlifting.app.SplashActivity)"], "Fixed commit": "911290de79d35180eca62e258049d270e91ca693", "Url": "https://api.github.com/repos/WGierke/weightlifting_germany", "Date": "2016-01-01T14:14:47Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.parse.Parse.initialize(this, Keys.CONFIG_APP_ID, Keys.CONFIG_CLIENT_KEY); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6451/buggy-version/app.src.main.java.de.weightlifting.app.WeightliftingApp.java", "BodyUseAPI": ["com.parse.Parse.initialize(de.weightlifting.app.WeightliftingApp,Keys.CONFIG_APP_ID,Keys.CONFIG_CLIENT_KEY)"], "Fixed commit": "911290de79d35180eca62e258049d270e91ca693", "Url": "https://api.github.com/repos/WGierke/weightlifting_germany", "Date": "2016-01-01T14:14:47Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mgmInfo = hashTable.hashKey(globalPageId); } catch (bufmgr.HashEntryNotFoundException e) { hashEntryFound = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3923/buggy-version/src.bufmgr.BufMgr.java", "BodyUseAPI": ["bufmgr.HashTable.hashKey(global.PageId)"], "Fixed commit": "22349488078b8826c460c5c6315f2787ccc7ad55", "Url": "https://api.github.com/repos/centauroWaRRIor/OurMinibase", "Date": "2015-03-03T04:25:10Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((tokens.length) > 1) { return org.iplantc.de.client.viewer.models.MimeType.valueOf(tokens[1].toUpperCase().replaceAll(\"[-.+]\", \"_\")); }else { return org.iplantc.de.client.viewer.models.MimeType.valueOf(tokens[0].toUpperCase().replaceAll(\"[-.+]\", \"_\")); } } catch (java.lang.Exception e) { return org.iplantc.de.client.viewer.models.MimeType.PLAIN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6620/buggy-version/src.main.java.org.iplantc.de.client.viewer.models.MimeType.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)", "org.iplantc.de.client.viewer.models.MimeType.valueOf(java.lang.String)", "java.lang.String.toUpperCase()", "org.iplantc.de.client.viewer.models.MimeType.valueOf(java.lang.String)", "java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.lang.String.toUpperCase()"], "Fixed commit": "e78c1c80c1611c46d445e82f5bb5ae354c089cab", "Url": "https://api.github.com/repos/iPlantCollaborativeOpenSource/de-webapp", "Date": "2013-05-31T15:51:34Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { csvParser.close(); } catch (java.lang.Exception ex) { org.endeavourhealth.sftpreader.utilities.CsvSplitter.LOG.error((\"Failed to close parser \" + (ex.getMessage()))); try { csvParser.close(); org.endeavourhealth.sftpreader.utilities.CsvSplitter.LOG.error(\"Worked on second attempt\"); } catch (java.lang.Exception ex2) { org.endeavourhealth.sftpreader.utilities.CsvSplitter.LOG.error(\"Failed on second attempt\"); throw ex; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5714/buggy-version/src.sftpreader.src.main.java.org.endeavourhealth.sftpreader.utilities.CsvSplitter.java", "BodyUseAPI": ["org.apache.commons.csv.CSVParser.close()"], "Fixed commit": "1cb5f31f555e6c884720ea2f37632082a9ae2d2a", "Url": "https://api.github.com/repos/endeavourhealth/SFTPReader", "Date": "2017-11-15T10:13:55Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { csvPrinter.close(); } catch (java.lang.Exception ex) { org.endeavourhealth.sftpreader.utilities.CsvSplitter.LOG.error((\"Failed to close printer \" + (ex.getMessage()))); try { csvPrinter.close(); org.endeavourhealth.sftpreader.utilities.CsvSplitter.LOG.error(\"Worked on second attempt\"); } catch (java.lang.Exception ex2) { org.endeavourhealth.sftpreader.utilities.CsvSplitter.LOG.error(\"Failed on second attempt\"); throw ex; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5714/buggy-version/src.sftpreader.src.main.java.org.endeavourhealth.sftpreader.utilities.CsvSplitter.java", "BodyUseAPI": ["org.apache.commons.csv.CSVPrinter.close()"], "Fixed commit": "1cb5f31f555e6c884720ea2f37632082a9ae2d2a", "Url": "https://api.github.com/repos/endeavourhealth/SFTPReader", "Date": "2017-11-15T10:13:55Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { pdfGenaratorUtil.createPdf(pdfTemplateFilename, data); } catch (java.lang.Exception ex) { throw new com.demo.lastminute.exception.CustomException(\"Error during pdf creation\", org.springframework.http.HttpStatus.INTERNAL_SERVER_ERROR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6120/buggy-version/src.main.java.com.demo.lastminute.service.ReceiptServiceImpl.java", "BodyUseAPI": ["com.demo.lastminute.utils.PdfGeneratorUtil.createPdf(java.lang.String,java.util.Map<java.lang.String, java.util.List<com.demo.lastminute.dto.ReturnObject>>)"], "Fixed commit": "9a68682724f479cb0f2949941ffaadb28d8d8f87", "Url": "https://api.github.com/repos/lorenzocaspani84/lastminutedemo", "Date": "2017-10-14T14:48:56Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { type = state.getType(); if ((type != null) && (type.hasAfterCreate())) { state.fireTrigger(new com.psddev.dari.db.Record.AfterCreateTrigger()); } } catch (com.psddev.dari.util.SettingsException error) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6133/buggy-version/db.src.main.java.com.psddev.dari.db.Record.java", "BodyUseAPI": ["com.psddev.dari.db.State.getType()", "com.psddev.dari.db.State.fireTrigger(com.psddev.dari.db.Record.AfterCreateTrigger)", "com.psddev.dari.db.ObjectType.hasAfterCreate()"], "Fixed commit": "c92c4dd72f8c8385440aae21e9088de5c4d164b6", "Url": "https://api.github.com/repos/perfectsense/dari", "Date": "2014-01-25T14:57:30Z"},
{"Line": "=>728", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((objects[id]) != null) { subtractObjectNo(); } objects[id] = null; } catch (java.lang.ArrayIndexOutOfBoundsException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2537/buggy-version/Source.Client.ClientWorld.java", "BodyUseAPI": ["Client.ClientWorld.subtractObjectNo()"], "Fixed commit": "1968aafd21382b98ff745fa4ac36fce291c41228", "Url": "https://api.github.com/repos/Williamxu98/WorldQuestOnline", "Date": "2016-10-22T05:06:49Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { onItemsLoadComplete(); ac.snackError(getString(R.string.err_no_con), Snackbar.LENGTH_LONG); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/9184/buggy-version/app.src.main.java.rehanced.com.simpleetherwallet.fragments.FragmentPrice.java", "BodyUseAPI": ["rehanced.com.simpleetherwallet.activities.MainActivity.snackError(getString(R.string.err_no_con),Snackbar.LENGTH_LONG)", "1.getString(R.string.err_no_con)", "1.onItemsLoadComplete()"], "Fixed commit": "1f6f7e36f56d283442ecb28e00023e048da6f6d0", "Url": "https://api.github.com/repos/manuelsc/Lunary-Ethereum-Wallet", "Date": "2017-12-10T13:32:40Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { rows = statement.executeInsert(); } finally { statement.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2455/buggy-version/dbflow.src.main.java.com.raizlabs.android.dbflow.sql.language.BaseQueriable.java", "BodyUseAPI": ["com.raizlabs.android.dbflow.structure.database.DatabaseStatement.executeInsert()"], "Fixed commit": "3f3d0b437e8946a3ea236022c00873d44e4764ba", "Url": "https://api.github.com/repos/Raizlabs/DBFlow", "Date": "2017-12-28T16:25:48Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { group = planItemGroupPersistence.findByPrimaryKey(planId); } catch (com.liferay.portal.kernel.exception.PortalException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6456/buggy-version/services.plansProposalsFacade.plansProposalsFacade-portlet.src.main.java.com.ext.portlet.service.impl.PlanItemGroupLocalServiceImpl.java", "BodyUseAPI": ["com.ext.portlet.service.impl.PlanItemGroupLocalServiceImpl.findByPrimaryKey(java.lang.Long)"], "Fixed commit": "3ff615f1a742c9bab525e549a5fa5ffb0875ca07", "Url": "https://api.github.com/repos/jintrone/XCoLab", "Date": "2013-07-03T20:28:48Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { client.getOutputStream().close(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7545/buggy-version/src.controller.CF.java", "BodyUseAPI": ["client.getOutputStream().close()", "controller.Client.getOutputStream()"], "Fixed commit": "91153cd808e0b9eab7b5316b63260e0382c9e9a8", "Url": "https://api.github.com/repos/amirsaeedr/Transfer", "Date": "2017-05-15T06:46:57Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.javaprophet.javawebserver.plugins.javaloader.lib.DatabaseManager.closeAll(); } catch (java.sql.SQLException e) { com.javaprophet.javawebserver.util.Logger.logError(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6726/buggy-version/src.com.javaprophet.javawebserver.plugins.javaloader.PatchJavaLoader.java", "BodyUseAPI": ["com.javaprophet.javawebserver.plugins.javaloader.lib.DatabaseManager.closeAll()"], "Fixed commit": "76faeb3076e70790e4a697dd608a6fd33b144763", "Url": "https://api.github.com/repos/Protryon/AvunaHTTPD-Java", "Date": "2015-02-08T00:25:13Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { edu.wpi.first.wpilibj.smartdashboard.SmartDashboard.putData(\"Drive\", org.usfirst.frc.team948.robot.Robot.drive); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8818/buggy-version/NRGRobot2017.src.org.usfirst.frc.team948.robot.Robot.java", "BodyUseAPI": ["edu.wpi.first.wpilibj.smartdashboard.SmartDashboard.putData(java.lang.String,org.usfirst.frc.team948.robot.subsystems.Drive)"], "Fixed commit": "cdca2ef9e03ee1508a1eee41de7098ece5615ff0", "Url": "https://api.github.com/repos/NRG948/NRGRobot2017", "Date": "2017-03-11T21:35:25Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { frames.add(new org.eclipse.viatra.transformation.debug.model.TransformationStackFrame(this, act)); } catch (java.lang.Exception e) { throw new org.eclipse.debug.core.DebugException(new org.eclipse.core.runtime.Status(org.eclipse.core.runtime.IStatus.ERROR, org.eclipse.viatra.transformation.debug.activator.TransformationDebugActivator.PLUGIN_ID, \"No transformation rules detected\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5612/buggy-version/transformation.plugins.org.eclipse.viatra.transformation.debug.src.org.eclipse.viatra.transformation.debug.model.TransformationThread.java", "BodyUseAPI": ["java.util.List<org.eclipse.viatra.transformation.debug.model.TransformationStackFrame>.add(org.eclipse.viatra.transformation.debug.model.TransformationStackFrame)"], "Fixed commit": "e02fc75f4ec23b23b3bfeb5e0ef352a88f665c95", "Url": "https://api.github.com/repos/viatra/org.eclipse.viatra", "Date": "2016-06-30T14:22:47Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { imgList = gce.images().list(imageProject.projectName).execute(); if ((imgList != null) && ((imgList.getItems()) != null)) { for (com.google.api.services.compute.model.Image img : imgList.getItems()) { org.dasein.cloud.google.compute.server.MachineImage image = toMachineImage(img); if (image != null) images.add(image); } } } catch (java.io.IOException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6698/buggy-version/src.main.java.org.dasein.cloud.google.compute.server.ImageSupport.java", "BodyUseAPI": ["gce.images().list(imageProject.projectName).execute()", "com.google.api.services.compute.model.ImageList.getItems()", "org.dasein.cloud.google.compute.server.ImageSupport.toMachineImage(com.google.api.services.compute.model.Image)", "java.util.ArrayList<org.dasein.cloud.google.compute.server.MachineImage>.add(org.dasein.cloud.google.compute.server.MachineImage)", "com.google.api.services.compute.model.ImageList.getItems()", "gce.images().list(java.lang.String)", "com.google.api.services.compute.Compute.images()"], "Fixed commit": "93402779073caff4ccec1342649ed34b2bd907c9", "Url": "https://api.github.com/repos/unwin/dasein-cloud-google", "Date": "2014-06-16T07:55:06Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { final java.nio.file.Path directory = java.nio.file.Paths.get(fileName).getParent(); if (directory != null) { java.nio.file.Files.createDirectories(directory); } } catch (java.nio.file.InvalidPathException | java.nio.file.AccessDeniedException ex) { throw new java.lang.IllegalStateException(ex.getMessage(), ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3577/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.PropertyCacheFile.java", "BodyUseAPI": ["java.nio.file.Paths.get(java.lang.String)", "java.nio.file.Files.createDirectories(java.nio.file.Path)", "java.nio.file.Path.getParent()"], "Fixed commit": "286302b2f911cd2486c7b72402d69420c2ca6833", "Url": "https://api.github.com/repos/MEZk/checkstyle", "Date": "2015-12-09T23:33:17Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { acceptInsecureSslCert = json.getBoolean(\"acceptInsecureSslCert\"); } catch (org.json.JSONException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6669/buggy-version/src.main.java.de.zalando.buildstatus.job.JobsIO.java", "BodyUseAPI": ["org.json.JSONObject.getBoolean(java.lang.String)"], "Fixed commit": "513e4cce766a313a5ca10d501d48879bbc0c9705", "Url": "https://api.github.com/repos/Capoot/build-status-traffic-light", "Date": "2016-07-11T10:51:30Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { acceptInsecureSslCert = json.getBoolean(\"acceptInsecureSslCert\"); } catch (org.json.JSONException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6669/buggy-version/src.main.java.de.zalando.buildstatus.job.JobsIO.java", "BodyUseAPI": ["org.json.JSONObject.getBoolean(java.lang.String)"], "Fixed commit": "513e4cce766a313a5ca10d501d48879bbc0c9705", "Url": "https://api.github.com/repos/Capoot/build-status-traffic-light", "Date": "2016-07-11T10:51:30Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { org.apache.http.StatusLine status = result.getStatusLine(); if ((status.getStatusCode()) != (org.apache.http.HttpStatus.SC_CREATED)) { throw new com.dependencywatcher.client.Client.APICallException(org.apache.http.util.EntityUtils.toString(result.getEntity()), status.getStatusCode()); } } finally { result.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1613/buggy-version/src.main.java.com.dependencywatcher.client.Client.java", "BodyUseAPI": ["org.apache.http.client.methods.CloseableHttpResponse.getEntity()", "org.apache.http.util.EntityUtils.toString(result.getEntity())", "org.apache.http.client.methods.CloseableHttpResponse.getStatusLine()", "org.apache.http.StatusLine.getStatusCode()", "org.apache.http.StatusLine.getStatusCode()"], "Fixed commit": "9f40fb10b324353c102c5f68afa164263c2d8fd6", "Url": "https://api.github.com/repos/DependencyWatcher/agent", "Date": "2015-01-08T12:03:16Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String expression = \"//fields/fullName\"; org.w3c.dom.NodeList nodes; nodes = ((org.w3c.dom.NodeList) (xpath.compile(expression).evaluate(document, javax.xml.xpath.XPathConstants.NODESET))); for (int i = 0; i < (nodes.getLength()); i++) fieldNames.add(nodes.item(i).getTextContent()); } catch (javax.xml.xpath.XPathExpressionException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6545/buggy-version/src.main.java.com.sobjectparser.XMLReader.java", "BodyUseAPI": ["org.w3c.dom.NodeList.item(int)", "org.w3c.dom.Node.getTextContent()", "org.w3c.dom.NodeList.getLength()", "java.util.List<java.lang.String>.add(java.lang.String)", "javax.xml.xpath.XPath.compile(java.lang.String)", "javax.xml.xpath.XPathExpression.evaluate(org.w3c.dom.Document,javax.xml.namespace.QName)"], "Fixed commit": "05fc4843acf5aec9cc301afe23e7e5eb0cc1d384", "Url": "https://api.github.com/repos/felipescgouvea/sobject-parser", "Date": "2016-11-16T17:14:16Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.openmrs.api.context.Context.getFormService().saveFormResource(resource); } catch (java.lang.Exception ex) { session.setAttribute(WebConstants.OPENMRS_ERROR_ATTR, \"Error while submitting form, no or invalid file format. Please try again(make sure you select only text files).\"); return ((((\"redirect:addFormResource.form?formId=\" + (resource.getForm().getId())) + \"&datatype=\") + (resource.getDatatypeClassname())) + \"&handler=\") + (resource.getPreferredHandlerClassname()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/589/buggy-version/web.src.main.java.org.openmrs.web.controller.form.FormResourceController.java", "BodyUseAPI": ["org.openmrs.api.context.Context.getFormService()", "org.openmrs.api.context.Context.getFormService().saveFormResource(org.openmrs.FormResource)"], "Fixed commit": "f5a87c98094ff1b1cc2cdf17ad4c725c60e39a43", "Url": "https://api.github.com/repos/ivange94/openmrs-core", "Date": "2015-08-08T13:34:28Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { retValue = super.close(); } catch (java.lang.Throwable e) { logger.error(\"ERROR in closing Application\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2967/buggy-version/core.src.main.java.de.consol.sakuli.actions.environment.Application.java", "BodyUseAPI": ["org.sikuli.script.App.close()"], "Fixed commit": "bea4096db9854d3a45a8593578e313b1bf9c54f8", "Url": "https://api.github.com/repos/ConSol/sakuli", "Date": "2014-07-23T14:45:58Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { activeNotifications.addAll(java.util.Arrays.asList(getActiveNotifications())); } catch (java.lang.NullPointerException ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/288/buggy-version/app.src.main.java.com.james.status.services.NotificationService.java", "BodyUseAPI": ["com.james.status.services.NotificationService.getActiveNotifications()", "java.util.Arrays.asList(getActiveNotifications())", "java.util.ArrayList<android.service.notification.StatusBarNotification>.addAll(java.util.List)"], "Fixed commit": "fe14de3656536413b9a81336c68927c4dd63c22e", "Url": "https://api.github.com/repos/TheAndroidMaster/Status", "Date": "2017-11-30T02:39:10Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { hour = java.lang.Integer.parseInt(row[5].toString()); } catch (java.lang.NumberFormatException e) { output.OutputHandlerTSV.logger.error(\"Hour field is not parsable as integer.\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2806/buggy-version/src.main.java.output.OutputHandlerTSV.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.Object.toString()"], "Fixed commit": "3f22f05663dc0ae373e3509a5ce5d02fd25b3956", "Url": "https://api.github.com/repos/Wikidata/QueryAnalysis", "Date": "2017-01-05T06:53:40Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { coordinates = server.getCoordinates(room); } catch (java.lang.Exception e) { e.printStackTrace(); android.util.Log.v(\"Raber\", \"No cordinates\"); this.tracking = false; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5628/buggy-version/U-Finder.app.src.main.java.ml.u_finder.u_finder.MapThread.java", "BodyUseAPI": ["ml.u_finder.u_finder.UWBServer.getCoordinates(java.lang.String)"], "Fixed commit": "df1aba4986e8e3f2e1cdc87b9011ebfc472b71d1", "Url": "https://api.github.com/repos/magnocube/U-Finder-Applicatie", "Date": "2017-11-30T11:58:47Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { image = server.getImage(room); this.tracking = true; } catch (java.lang.Exception e) { e.printStackTrace(); android.util.Log.v(\"Raber\", \"failed to get map\"); this.tracking = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5628/buggy-version/U-Finder.app.src.main.java.ml.u_finder.u_finder.MapThread.java", "BodyUseAPI": ["ml.u_finder.u_finder.UWBServer.getImage(java.lang.String)"], "Fixed commit": "df1aba4986e8e3f2e1cdc87b9011ebfc472b71d1", "Url": "https://api.github.com/repos/magnocube/U-Finder-Applicatie", "Date": "2017-11-30T11:58:47Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { gradeThresholds.put(thresholdValue, java.lang.Double.valueOf(thresholdEntries[thresholdValue].getText().toString())); } catch (java.lang.NumberFormatException e) { gradeThresholds.put(thresholdValue, 0.0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3391/buggy-version/app.src.main.java.com.sarmento.mitchell.gradesaver2.dialogs.SectionDialogFragment.java", "BodyUseAPI": ["thresholdEntries[thresholdValue].getText()", "java.lang.Double.valueOf(thresholdEntries[thresholdValue].getText().toString())", "thresholdEntries[thresholdValue].getText().toString()", "android.util.SparseArray<java.lang.Double>.put(int,java.lang.Double)"], "Fixed commit": "4421407096ce8ee99547d73401fff06700557039", "Url": "https://api.github.com/repos/MitchellSarmento/GradeBook", "Date": "2017-09-11T16:42:48Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { assignmentWeights.put(typeValue, java.lang.Double.valueOf(weightEntries[typeValue].getText().toString())); } catch (java.lang.NumberFormatException e) { assignmentWeights.put(typeValue, 0.0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3391/buggy-version/app.src.main.java.com.sarmento.mitchell.gradesaver2.dialogs.SectionDialogFragment.java", "BodyUseAPI": ["java.lang.Double.valueOf(weightEntries[typeValue].getText().toString())", "weightEntries[typeValue].getText().toString()", "weightEntries[typeValue].getText()", "android.util.SparseArray<java.lang.Double>.put(int,java.lang.Double)"], "Fixed commit": "4421407096ce8ee99547d73401fff06700557039", "Url": "https://api.github.com/repos/MitchellSarmento/GradeBook", "Date": "2017-09-11T16:42:48Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { log(\"restart\", cookie); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6807/buggy-version/framework.gwt.src.cc.alcina.framework.gwt.persistence.client.LogStore.java", "BodyUseAPI": ["cc.alcina.framework.gwt.persistence.client.LogStore.log(java.lang.String,java.lang.String)"], "Fixed commit": "7fe307fa8857b7b6ca754434eaf40fd45873004b", "Url": "https://api.github.com/repos/nevella/alcina", "Date": "2017-05-30T21:00:55Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { indexEngine.deleteWithoutLoad(name); removeValuesContainer(); } catch (java.lang.Exception e) { com.orientechnologies.common.log.OLogManager.instance().error(this, \"Error during deletion of index '%s'\", name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/9282/buggy-version/core.src.main.java.com.orientechnologies.orient.core.index.OIndexAbstract.java", "BodyUseAPI": ["com.orientechnologies.orient.core.index.OIndexEngine<T>.deleteWithoutLoad(java.lang.String)", "com.orientechnologies.orient.core.index.OIndexAbstract<T>.removeValuesContainer()"], "Fixed commit": "4cd47f9782bc946e819ffc04fb5aed4d866657e7", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-12-03T07:56:13Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { getContext().getFiles().registerFileDir(propertiesFile.getParentFile().toPath(), propertiesFile.getName(), this); } catch (java.io.IOException e) { error(\"Error registering reloadablefile with file manager\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/808/buggy-version/src.main.java.org.intellimate.izou.sdk.properties.PropertiesAssistant.java", "BodyUseAPI": ["java.io.File.getParentFile()", "java.io.File.toPath()", "getContext().getFiles()", "getContext().getFiles().registerFileDir(java.nio.file.Path,java.lang.String,org.intellimate.izou.sdk.properties.PropertiesAssistant)", "org.intellimate.izou.sdk.properties.PropertiesAssistant.getContext()", "java.io.File.getName()"], "Fixed commit": "e34d22908af8d4acec011dbd4c5c6fb2065f5575", "Url": "https://api.github.com/repos/intellimate/IzouSDK", "Date": "2015-12-11T12:03:00Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { validate(); } catch (java.lang.Exception e) { de.craftinc.gates.Plugin.log((((\"The loaded gate \" + (this.getId())) + \" seems to be not valid: \") + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/9235/buggy-version/src.de.craftinc.gates.Gate.java", "BodyUseAPI": ["de.craftinc.gates.Gate.validate()"], "Fixed commit": "8f54c0acc2c288aa7a93e8e03c235b3ac385278c", "Url": "https://api.github.com/repos/craftinc/craftinc-gates", "Date": "2013-06-24T18:42:40Z"},
{"Line": "=>657", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { imgDate.setText(mediaDetailsMap.get(\"Date\").toString()); imgTitle.setText(media.getName()); imgType.setText(mediaDetailsMap.get(\"Type\").toUpperCase()); imgSize.setText(org.fossasia.phimpme.gallery.util.StringUtils.humanReadableByteCount(media.getSize(), true)); imgResolution.setText(mediaDetailsMap.get(\"Resolution\")); imgPath.setText(mediaDetailsMap.get(\"Path\").toString()); imgOrientation.setText(mediaDetailsMap.get(\"Orientation\")); imgDesc.setText(mediaDetailsMap.get(\"Description\")); imgExif.setText(mediaDetailsMap.get(\"EXIF\")); imgLocation.setText(mediaDetailsMap.get(\"Location\").toString()); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7358/buggy-version/app.src.main.java.org.fossasia.phimpme.gallery.activities.SingleMediaActivity.java", "BodyUseAPI": ["org.fossasia.phimpme.gallery.data.base.MediaDetailsMap<java.lang.String, java.lang.String>.get(java.lang.String)", "org.fossasia.phimpme.gallery.data.base.MediaDetailsMap<java.lang.String, java.lang.String>.get(java.lang.String)", "android.widget.TextView.setText(mediaDetailsMap.get(\"Description\"))", "android.widget.TextView.setText(mediaDetailsMap.get(\"Type\").toUpperCase())", "android.widget.TextView.setText(mediaDetailsMap.get(\"Orientation\"))", "mediaDetailsMap.get(\"Date\").toString()", "android.widget.TextView.setText(mediaDetailsMap.get(\"Path\").toString())", "android.widget.TextView.setText(mediaDetailsMap.get(\"Resolution\"))", "org.fossasia.phimpme.gallery.data.base.MediaDetailsMap<java.lang.String, java.lang.String>.get(java.lang.String)", "org.fossasia.phimpme.gallery.data.base.MediaDetailsMap<java.lang.String, java.lang.String>.get(java.lang.String)", "org.fossasia.phimpme.gallery.data.base.MediaDetailsMap<java.lang.String, java.lang.String>.get(java.lang.String)", "org.fossasia.phimpme.gallery.data.Media.getSize()", "mediaDetailsMap.get(\"Path\").toString()", "android.widget.TextView.setText(mediaDetailsMap.get(\"EXIF\"))", "android.widget.TextView.setText(mediaDetailsMap.get(\"Date\").toString())", "android.widget.TextView.setText(media.getName())", "org.fossasia.phimpme.gallery.data.base.MediaDetailsMap<java.lang.String, java.lang.String>.get(java.lang.String)", "android.widget.TextView.setText(org.fossasia.phimpme.gallery.util.StringUtils.humanReadableByteCount(media.getSize(), true))", "mediaDetailsMap.get(\"Type\").toUpperCase()", "org.fossasia.phimpme.gallery.data.Media.getName()", "org.fossasia.phimpme.gallery.data.base.MediaDetailsMap<java.lang.String, java.lang.String>.get(java.lang.String)", "android.widget.TextView.setText(mediaDetailsMap.get(\"Location\").toString())", "org.fossasia.phimpme.gallery.util.StringUtils.humanReadableByteCount(media.getSize(),boolean)", "org.fossasia.phimpme.gallery.data.base.MediaDetailsMap<java.lang.String, java.lang.String>.get(java.lang.String)", "mediaDetailsMap.get(\"Location\").toString()"], "Fixed commit": "61b8a0303872927beba542b9ce57c480dc6f9ed2", "Url": "https://api.github.com/repos/aditya98ak/phimpme-android", "Date": "2017-10-21T23:46:12Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { while (true) { inp = socket.getInputStream().read(buffer); if (inp == (-1)) break; recv(new java.lang.String(buffer, 0, inp)); } } catch (java.io.IOException e) { e.printStackTrace(); } finally { android.util.Log.d(\"Bluetooth\", \"BT handler out of loop\"); close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6891/buggy-version/src.de.uniulm.bagception.bluetoothserver.service.BluetoothServerHandler.java", "BodyUseAPI": ["android.bluetooth.BluetoothSocket.getInputStream()", "de.uniulm.bagception.bluetoothserver.service.BluetoothServerHandler.recv(java.lang.String)", "socket.getInputStream().read(byte[])"], "Fixed commit": "234a20048c2cb66b83e0e79c2860a6304617aab7", "Url": "https://api.github.com/repos/Bagception/BluetoothServer", "Date": "2013-10-23T18:01:18Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { description = result.getMethod().getDescription(); tickets.add(description.split(\"#\")[1].trim()); } catch (java.lang.Exception e) { com.qaprosoft.carina.core.foundation.jira.Jira.LOG.error((\"Incorrect Jira-ticket format: \" + description)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/794/buggy-version/carina-utils.src.main.java.com.qaprosoft.carina.core.foundation.jira.Jira.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "result.getMethod().getDescription()", "java.lang.String.trim()", "java.lang.String.split(java.lang.String)", "org.testng.ITestResult.getMethod()"], "Fixed commit": "75f91d47e0db5ef715a454a2e49036ed2274d2e1", "Url": "https://api.github.com/repos/qaprosoft/carina", "Date": "2017-12-20T13:07:37Z"},
{"Line": "=>429", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.passengerListViewController.updateListView(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2518/buggy-version/src.br.com.os.ui.Scene.java", "BodyUseAPI": ["br.com.os.interfaces.ListViewController.updateListView()"], "Fixed commit": "e8b728359eb8a6a81a7954aa3342e49b05b524d3", "Url": "https://api.github.com/repos/ajeferson/CrazyTrain", "Date": "2016-03-23T01:42:55Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { codes.showme.mavenrepocrawler.domain.Link.ebeanServer.insertAll(linkList); } catch (java.lang.Exception e) { java.lang.System.err.println(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4981/buggy-version/src.main.java.codes.showme.mavenrepocrawler.domain.Link.java", "BodyUseAPI": ["io.ebean.EbeanServer.insertAll(java.util.List<codes.showme.mavenrepocrawler.domain.Link>)"], "Fixed commit": "a36a0e45142574d0daf57500c47f8c6373330190", "Url": "https://api.github.com/repos/bigdata-labs/maven-repo-crawler", "Date": "2017-01-08T23:36:14Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return matcher.group(1); } catch (java.lang.IllegalStateException e) { return \"0.0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6644/buggy-version/src.fileProcessing.SortedGraph.java", "BodyUseAPI": ["java.util.regex.Matcher.group(int)"], "Fixed commit": "841a66693a699f81e8a0118d86d985cbd3883007", "Url": "https://api.github.com/repos/erictapen/weird-tree-plot", "Date": "2015-08-11T11:21:24Z"},
{"Line": "=>563", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { getPersistenceService().delete(model); } catch (org.pillarone.riskanalytics.graph.core.graph.persistence.GraphPersistenceException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/1168/buggy-version/src.groovy.org.pillarone.riskanalytics.graph.formeditor.ui.view.GraphModelEditor.java", "BodyUseAPI": ["org.pillarone.riskanalytics.graph.core.graph.persistence.GraphPersistenceService.delete(org.pillarone.riskanalytics.graph.core.graph.model.AbstractGraphModel)", "org.pillarone.riskanalytics.graph.formeditor.ui.view.GraphModelEditor.getPersistenceService()"], "Fixed commit": "245697f835367c804c069c34a3282353c405b04a", "Url": "https://api.github.com/repos/pillarone/risk-analytics-graph-form-editor", "Date": "2012-06-29T08:52:41Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (this.archive.isEncrypted()) { this.archive = null; throw new com.juanvvc.comicviewer.readers.ReaderException(getContext().getString(com.juanvvc.comicviewer.R.string.encrypted_file)); } } catch (java.lang.NullPointerException e) { throw new com.juanvvc.comicviewer.readers.ReaderException(getContext().getString(com.juanvvc.comicviewer.R.string.cannot_read)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7254/buggy-version/ComicViewer.src.com.juanvvc.comicviewer.readers.CBRReader.java", "BodyUseAPI": ["getContext().getString(com.juanvvc.comicviewer.R.string.encrypted_file)", "com.juanvvc.comicviewer.readers.CBRReader.getContext()", "de.innosystec.unrar.Archive.isEncrypted()"], "Fixed commit": "d369b09e61536b8f9deafc58f47df488acbad6ca", "Url": "https://api.github.com/repos/Juanvvc/ComicViewer", "Date": "2012-08-29T23:27:57Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { collections.setAdapter(new com.juanvvc.comicviewer.GalleryExplorer.CollectionListAdapter(this, new java.io.File(this.comicDir))); } catch (java.lang.NullPointerException e) { new android.app.AlertDialog.Builder(this).setIcon(R.drawable.icon).setTitle(this.getText(R.string.please_select_directory)).setPositiveButton(android.R.string.ok, null).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7254/buggy-version/ComicViewer.src.com.juanvvc.comicviewer.GalleryExplorer.java", "BodyUseAPI": ["android.widget.ListView.setAdapter(com.juanvvc.comicviewer.GalleryExplorer.CollectionListAdapter)"], "Fixed commit": "d369b09e61536b8f9deafc58f47df488acbad6ca", "Url": "https://api.github.com/repos/Juanvvc/ComicViewer", "Date": "2012-08-29T23:27:57Z"},
{"Line": "=>466", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (!(errorResponse.isNull(\"msg\"))) { showAlert(errorResponse.getString(\"msg\"), LFSAppConstants.DISMISS); }else { showAlert(\"Something went wrong.\", LFSAppConstants.DISMISS); } } catch (org.json.JSONException e) { e.printStackTrace(); showAlert(\"Something went wrong.\", LFSAppConstants.DISMISS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6111/buggy-version/streamhub-reviews.src.main.java.livefyre.reviews.activities.NewReview.java", "BodyUseAPI": ["livefyre.reviews.activities.NewReview.NewReviewWriteClientCallback.showAlert(java.lang.String,LFSAppConstants.DISMISS)", "livefyre.reviews.activities.NewReview.NewReviewWriteClientCallback.showAlert(errorResponse.getString(\"msg\"),LFSAppConstants.DISMISS)", "org.json.JSONObject.isNull(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "16046763f99ca60f0d020fff1245c267c1f9bf19", "Url": "https://api.github.com/repos/kvanadev1gmail/StreamHub-Android-SDK", "Date": "2016-11-02T07:55:06Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { invoker.callAny(this); } catch (java.lang.Exception e) { env.catchUncaught(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6699/buggy-version/jphp-runtime.src.php.runtime.ext.core.classes.time.WrapTimer.java", "BodyUseAPI": ["php.runtime.invoke.Invoker.callAny(php.runtime.ext.core.classes.time.WrapTimer.2)"], "Fixed commit": "960523e1a6a3e0a4ac06258da093852ed115c059", "Url": "https://api.github.com/repos/jphp-group/jphp", "Date": "2017-11-16T14:55:32Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { invoker.callAny(this); } catch (java.lang.Exception e) { env.catchUncaught(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6699/buggy-version/jphp-runtime.src.php.runtime.ext.core.classes.time.WrapTimer.java", "BodyUseAPI": ["php.runtime.invoke.Invoker.callAny(php.runtime.ext.core.classes.time.WrapTimer.1)"], "Fixed commit": "960523e1a6a3e0a4ac06258da093852ed115c059", "Url": "https://api.github.com/repos/jphp-group/jphp", "Date": "2017-11-16T14:55:32Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { recomputeResultFuture.get(); } catch (java.util.concurrent.ExecutionException e) { if ((e.getCause()) instanceof dgm.degraphmalizr.DegraphmalizerException) { dgm.degraphmalizr.DegraphmalizerException de = ((dgm.degraphmalizr.DegraphmalizerException) (e.getCause())); if ((de.severity()) == (DegraphmalizerException.Severity.ERROR)) { throw de; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2591/buggy-version/degraphmalizer-core.src.main.java.dgm.degraphmalizr.Degraphmalizer.java", "BodyUseAPI": ["java.util.concurrent.Future<dgm.degraphmalizr.recompute.RecomputeResult>.get()"], "Fixed commit": "0da8f5c3bcb446a29bdacc0f9d16e127060885ff", "Url": "https://api.github.com/repos/ricojansen/degraphmalizer", "Date": "2013-04-09T12:03:35Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { field.addListener(new com.mygdx.malefiz.PlayerClickListener(column, row, ((com.mygdx.malefiz.BoardToPlayboard.stage.getActors().size) + 1))); } catch (java.lang.NullPointerException e) { Gdx.app.log(\"GetFieldType\", e.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/1318/buggy-version/core.src.com.mygdx.malefiz.BoardToPlayboard.java", "BodyUseAPI": ["com.badlogic.gdx.scenes.scene2d.ui.Image.addListener(com.mygdx.malefiz.PlayerClickListener)", "com.badlogic.gdx.scenes.scene2d.Stage.getActors()"], "Fixed commit": "5e0b206b309a47980b4b4f1dc94e8deec9dd5754", "Url": "https://api.github.com/repos/onur95/Malefiz_SE2", "Date": "2017-05-17T11:47:59Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.google.common.io.Files.copy(new java.io.File(this.getContext().getFilesDir(), \"data.json.backup\"), dataFile); } catch (java.io.IOException e1) { throw com.google.common.base.Throwables.propagate(e1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2976/buggy-version/intellitalk.src.main.java.org.npenn.gifted.aacpecsapp.ContentLoader.java", "BodyUseAPI": ["com.google.common.io.Files.copy(java.io.File,java.io.File)", "org.npenn.gifted.aacpecsapp.ContentLoader.getContext()", "this.getContext().getFilesDir()"], "Fixed commit": "048c103372d9d98784347c7053774d1b6707bf49", "Url": "https://api.github.com/repos/intellitalkdev/intellitalk", "Date": "2014-08-27T16:23:41Z"},
{"Line": "=>463", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.lcmmun.kiosk.gui.Kiosk.splash.update(); } catch (java.lang.IllegalStateException ise) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/897/buggy-version/kiosk.src.org.lcmmun.kiosk.gui.Kiosk.java", "BodyUseAPI": ["java.awt.SplashScreen.update()"], "Fixed commit": "cbf6915fb9dfa519e944f4a830cc605653a11883", "Url": "https://api.github.com/repos/WChargin/kiosk", "Date": "2014-02-07T21:36:51Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { val = java.lang.Double.parseDouble(totalString); } catch (java.lang.Exception empty) { val = java.lang.Double.NaN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/1234/buggy-version/org.dawnsci.common.widgets.src.org.dawnsci.common.widgets.decorator.BoundsDecorator.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "41af21674b0217cc59cb21bcaf7c077c9c68c1ca", "Url": "https://api.github.com/repos/DawnScience/dawn-ui", "Date": "2013-07-09T14:59:07Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.System.out.println((\"!! this.relationshipGroups.get(orderName): \" + (this.relationshipGroups.get(orderName)))); java.lang.System.out.println((\"!! this.relationshipGroups.get(orderName).orderInIcm: \" + (this.relationshipGroups.get(orderName).orderInIcm))); java.lang.System.out.println((\"!! this.relationshipGroups.get(orderName).orderInIcm.order: \" + (this.relationshipGroups.get(orderName).orderInIcm.order))); if (this.relationshipGroups.containsKey(orderName)) { this.relationshipGroups.get(orderName).orderInIcm.order = order.getOrderList(); }else { java.lang.String[] className = orderName.split(\"-\"); java.lang.String reverseOrderName = ((className[1]) + \"-\") + (className[0]); java.lang.System.out.println((\"!! reverseOrderName: \" + reverseOrderName)); this.relationshipGroups.get(reverseOrderName).orderInIcm.order = order.getOrderList(); } } catch (java.lang.NullPointerException ex) { java.lang.System.out.println((\"!! NullPointerException caused by Relationship Group: \" + orderName)); throw ex; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/77/buggy-version/src.main.java.net.stigmod.domain.info.IcmDetail.java", "BodyUseAPI": ["net.stigmod.domain.conceptualmodel.Order.getOrderList()", "java.util.Map<java.lang.String, net.stigmod.domain.info.IcmDetail.RelationshipGroup>.get(java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "java.util.Map<java.lang.String, net.stigmod.domain.info.IcmDetail.RelationshipGroup>.get(java.lang.String)", "java.util.Map<java.lang.String, net.stigmod.domain.info.IcmDetail.RelationshipGroup>.get(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "net.stigmod.domain.conceptualmodel.Order.getOrderList()", "java.util.Map<java.lang.String, net.stigmod.domain.info.IcmDetail.RelationshipGroup>.containsKey(java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "java.util.Map<java.lang.String, net.stigmod.domain.info.IcmDetail.RelationshipGroup>.get(java.lang.String)", "java.util.Map<java.lang.String, net.stigmod.domain.info.IcmDetail.RelationshipGroup>.get(java.lang.String)"], "Fixed commit": "82b57b66f5295017599cffbe36de16421c5707e3", "Url": "https://api.github.com/repos/Stigmergic-Modeling/Stigmergic-Modeling", "Date": "2016-03-30T16:56:40Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { relationshipGroupName = makeRelationshipGroupName(propertyAndValues.get(\"class\").get(0), propertyAndValues.get(\"class\").get(1)); } catch (java.lang.NullPointerException ex) { java.lang.System.out.println((\"!! propertyAndValues: \" + propertyAndValues)); java.lang.System.out.println((\"!! propertyAndValues.get(\\\"class\\\"): \" + (propertyAndValues.get(\"class\")))); java.lang.System.out.println((\"!! propertyAndValues.get(\\\"class\\\").get(0): \" + (propertyAndValues.get(\"class\").get(0)))); java.lang.System.out.println((\"!! propertyAndValues.get(\\\"class\\\").get(1): \" + (propertyAndValues.get(\"class\").get(1)))); throw ex; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/77/buggy-version/src.main.java.net.stigmod.domain.info.IcmDetail.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)", "java.util.Map<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)", "java.util.Map<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)", "net.stigmod.domain.info.IcmDetail.makeRelationshipGroupName(java.lang.String,java.lang.String)", "java.util.List<java.lang.String>.get(int)"], "Fixed commit": "82b57b66f5295017599cffbe36de16421c5707e3", "Url": "https://api.github.com/repos/Stigmergic-Modeling/Stigmergic-Modeling", "Date": "2016-03-30T16:56:40Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { feed = eu.mosaic_cloud.tools.threading.tools.Threading.executeWithCurrentThreadClassLoader(eu.mosaic_cloud.examples.realtime_feeds.indexer.FeedParser.class.getClassLoader(), new java.util.concurrent.Callable<com.sun.syndication.feed.synd.SyndFeed>() { @java.lang.Override public com.sun.syndication.feed.synd.SyndFeed call() throws java.lang.Exception { return eu.mosaic_cloud.examples.realtime_feeds.indexer.FeedParser.this.input.build(reader); } }); } catch (final com.sun.syndication.io.FeedException exception) { throw exception; } catch (final java.io.IOException exception) { throw exception; } catch (final java.lang.Exception exception) { throw new java.lang.Error(exception); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7861/buggy-version/examples.realtime-feeds-indexer.src.main.java.eu.mosaic_cloud.examples.realtime_feeds.indexer.FeedParser.java", "BodyUseAPI": ["java.lang.Class.getClassLoader()", "eu.mosaic_cloud.tools.threading.tools.Threading.executeWithCurrentThreadClassLoader(java.lang.ClassLoader,java.util.concurrent.Callable<com.sun.syndication.feed.synd.SyndFeed>)", "java.lang.Object()", "com.sun.syndication.io.SyndFeedInput.build(com.sun.syndication.io.XmlReader)"], "Fixed commit": "7c78b07a0c1b0aecfb7cdce2b7131d328e55de2e", "Url": "https://api.github.com/repos/cipriancraciun/mosaic-java-platform", "Date": "2012-05-14T16:14:08Z"},
{"Line": "=>1170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { de.robv.android.xposed.XposedHelpers.findMethodExact(com.gzplanet.xposed.xperianavbarbuttons.XperiaNavBarButtons.CLASSNAME_NAVIGATIONBUTTONTRANSITIONS, lpparam.classLoader, \"updateRecentTransitions\", android.widget.ImageView.class, boolean.class); de.robv.android.xposed.XposedBridge.log(\"Xperia updateRecentTransitions(ImageView, boolean) found\"); de.robv.android.xposed.XposedHelpers.findAndHookMethod(com.gzplanet.xposed.xperianavbarbuttons.XperiaNavBarButtons.CLASSNAME_NAVIGATIONBUTTONTRANSITIONS, lpparam.classLoader, \"updateRecentTransitions\", android.widget.ImageView.class, boolean.class, new de.robv.android.xposed.XC_MethodReplacement() { @java.lang.Override protected java.lang.Object replaceHookedMethod(de.robv.android.xposed.XC_MethodHook.MethodHookParam param) throws java.lang.Throwable { return null; } }); } catch (de.robv.android.xposed.XposedHelpers.ClassNotFoundError e1) { } catch (java.lang.NoSuchMethodError e2) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/659/buggy-version/src.com.gzplanet.xposed.xperianavbarbuttons.XperiaNavBarButtons.java", "BodyUseAPI": ["de.robv.android.xposed.XposedHelpers.findAndHookMethod(java.lang.String,lpparam.classLoader,java.lang.String,java.lang.Class,java.lang.Class,de.robv.android.xposed.XC_MethodReplacement)", "de.robv.android.xposed.XposedBridge.log(java.lang.String)", "de.robv.android.xposed.XposedHelpers.findMethodExact(java.lang.String,lpparam.classLoader,java.lang.String,java.lang.Class,java.lang.Class)"], "Fixed commit": "257498b04846a14a0417c39a185f6a962a1bb425", "Url": "https://api.github.com/repos/itandy/XperiaAOSPNavBarButtons", "Date": "2016-03-05T02:07:06Z"},
{"Line": "=>1154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { de.robv.android.xposed.XposedHelpers.findMethodExact(com.gzplanet.xposed.xperianavbarbuttons.XperiaNavBarButtons.CLASSNAME_NAVIGATIONBUTTONTRANSITIONS, lpparam.classLoader, \"updateMenuTransitions\", android.widget.ImageView.class, boolean.class); de.robv.android.xposed.XposedBridge.log(\"Xperia updateMenuTransitions(ImageView, boolean) found\"); de.robv.android.xposed.XposedHelpers.findAndHookMethod(com.gzplanet.xposed.xperianavbarbuttons.XperiaNavBarButtons.CLASSNAME_NAVIGATIONBUTTONTRANSITIONS, lpparam.classLoader, \"updateMenuTransitions\", android.widget.ImageView.class, boolean.class, new de.robv.android.xposed.XC_MethodReplacement() { @java.lang.Override protected java.lang.Object replaceHookedMethod(de.robv.android.xposed.XC_MethodHook.MethodHookParam param) throws java.lang.Throwable { return null; } }); } catch (de.robv.android.xposed.XposedHelpers.ClassNotFoundError e1) { } catch (java.lang.NoSuchMethodError e2) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/659/buggy-version/src.com.gzplanet.xposed.xperianavbarbuttons.XperiaNavBarButtons.java", "BodyUseAPI": ["de.robv.android.xposed.XposedBridge.log(java.lang.String)", "de.robv.android.xposed.XposedHelpers.findAndHookMethod(java.lang.String,lpparam.classLoader,java.lang.String,java.lang.Class,java.lang.Class,de.robv.android.xposed.XC_MethodReplacement)", "de.robv.android.xposed.XposedHelpers.findMethodExact(java.lang.String,lpparam.classLoader,java.lang.String,java.lang.Class,java.lang.Class)"], "Fixed commit": "257498b04846a14a0417c39a185f6a962a1bb425", "Url": "https://api.github.com/repos/itandy/XperiaAOSPNavBarButtons", "Date": "2016-03-05T02:07:06Z"},
{"Line": "=>1122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { de.robv.android.xposed.XposedHelpers.findMethodExact(com.gzplanet.xposed.xperianavbarbuttons.XperiaNavBarButtons.CLASSNAME_NAVIGATIONBUTTONTRANSITIONS, lpparam.classLoader, \"updateHomeTransitions\", android.widget.ImageView.class, boolean.class); de.robv.android.xposed.XposedBridge.log(\"Xperia updateHomeTransitions(ImageView, boolean) found\"); de.robv.android.xposed.XposedHelpers.findAndHookMethod(com.gzplanet.xposed.xperianavbarbuttons.XperiaNavBarButtons.CLASSNAME_NAVIGATIONBUTTONTRANSITIONS, lpparam.classLoader, \"updateHomeTransitions\", android.widget.ImageView.class, boolean.class, new de.robv.android.xposed.XC_MethodReplacement() { @java.lang.Override protected java.lang.Object replaceHookedMethod(de.robv.android.xposed.XC_MethodHook.MethodHookParam param) throws java.lang.Throwable { return null; } }); } catch (de.robv.android.xposed.XposedHelpers.ClassNotFoundError e1) { } catch (java.lang.NoSuchMethodError e2) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/659/buggy-version/src.com.gzplanet.xposed.xperianavbarbuttons.XperiaNavBarButtons.java", "BodyUseAPI": ["de.robv.android.xposed.XposedHelpers.findMethodExact(java.lang.String,lpparam.classLoader,java.lang.String,java.lang.Class,java.lang.Class)", "de.robv.android.xposed.XposedBridge.log(java.lang.String)", "de.robv.android.xposed.XposedHelpers.findAndHookMethod(java.lang.String,lpparam.classLoader,java.lang.String,java.lang.Class,java.lang.Class,de.robv.android.xposed.XC_MethodReplacement)"], "Fixed commit": "257498b04846a14a0417c39a185f6a962a1bb425", "Url": "https://api.github.com/repos/itandy/XperiaAOSPNavBarButtons", "Date": "2016-03-05T02:07:06Z"},
{"Line": "=>1138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { de.robv.android.xposed.XposedHelpers.findMethodExact(com.gzplanet.xposed.xperianavbarbuttons.XperiaNavBarButtons.CLASSNAME_NAVIGATIONBUTTONTRANSITIONS, lpparam.classLoader, \"updateImeSwitcherTransitions\", android.widget.ImageView.class, boolean.class); de.robv.android.xposed.XposedBridge.log(\"Xperia updateImeSwitcherTransitions(ImageView, boolean) found\"); de.robv.android.xposed.XposedHelpers.findAndHookMethod(com.gzplanet.xposed.xperianavbarbuttons.XperiaNavBarButtons.CLASSNAME_NAVIGATIONBUTTONTRANSITIONS, lpparam.classLoader, \"updateImeSwitcherTransitions\", android.widget.ImageView.class, boolean.class, new de.robv.android.xposed.XC_MethodReplacement() { @java.lang.Override protected java.lang.Object replaceHookedMethod(de.robv.android.xposed.XC_MethodHook.MethodHookParam param) throws java.lang.Throwable { return null; } }); } catch (de.robv.android.xposed.XposedHelpers.ClassNotFoundError e1) { } catch (java.lang.NoSuchMethodError e2) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/659/buggy-version/src.com.gzplanet.xposed.xperianavbarbuttons.XperiaNavBarButtons.java", "BodyUseAPI": ["de.robv.android.xposed.XposedBridge.log(java.lang.String)", "de.robv.android.xposed.XposedHelpers.findMethodExact(java.lang.String,lpparam.classLoader,java.lang.String,java.lang.Class,java.lang.Class)", "de.robv.android.xposed.XposedHelpers.findAndHookMethod(java.lang.String,lpparam.classLoader,java.lang.String,java.lang.Class,java.lang.Class,de.robv.android.xposed.XC_MethodReplacement)"], "Fixed commit": "257498b04846a14a0417c39a185f6a962a1bb425", "Url": "https://api.github.com/repos/itandy/XperiaAOSPNavBarButtons", "Date": "2016-03-05T02:07:06Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { serializedConfiguration = org.apache.commons.lang3.StringUtils.defaultString(conf, cz.cuni.mff.xrg.odcs.commons.app.dpu.DPURecord.NULL_CONFIG).getBytes(\"UTF-8\"); } catch (java.io.UnsupportedEncodingException ex) { throw new java.lang.RuntimeException(ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5210/buggy-version/commons-app.src.main.java.cz.cuni.mff.xrg.odcs.commons.app.dpu.DPURecord.java", "BodyUseAPI": ["org.apache.commons.lang3.StringUtils.defaultString(conf, cz.cuni.mff.xrg.odcs.commons.app.dpu.DPURecord.NULL_CONFIG).getBytes(java.lang.String)", "org.apache.commons.lang3.StringUtils.defaultString(java.lang.String,java.lang.String)"], "Fixed commit": "f8e2d8a7ef561da05bd7f3f8098f4cdb9473c1b0", "Url": "https://api.github.com/repos/UnifiedViews/Core", "Date": "2014-08-07T06:28:23Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { lorSummoner.setLeagues(api.getLeagueBySummoner(id)); } catch (net.rithms.riot.api.RiotApiException e) { android.util.Log.e(lor.ch.leagueofranks.task.LoadingSummonerTask.LOG_TAG, \"NO LEAGUES\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6619/buggy-version/app.src.main.java.lor.ch.leagueofranks.task.LoadingSummonerTask.java", "BodyUseAPI": ["net.rithms.riot.api.RiotApi.getLeagueBySummoner(long)", "lor.ch.leagueofranks.model.LorSummoner.setLeagues(api.getLeagueBySummoner(id))"], "Fixed commit": "617795ef74ba190a05d3f312903ba3d5b955ed19", "Url": "https://api.github.com/repos/Phong6698/LeagueofRanks", "Date": "2017-06-30T13:11:19Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { item.rating = java.lang.Float.parseFloat(object.getString(\"rating\")); } catch (org.json.JSONException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2109/buggy-version/app.src.main.java.pizzasearch.f0ris.com.pizzasearchassignment.JsonParser.java", "BodyUseAPI": ["java.lang.Float.parseFloat(object.getString(\"rating\"))", "org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "9acf981bb74b99f1f6107a7591e5699f377a9557", "Url": "https://api.github.com/repos/F0RIS/PizzaSearchAssignment", "Date": "2016-03-06T11:52:37Z"},
{"Line": "=>429", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(textProcess.getRegex()); java.util.regex.Matcher match = pattern.matcher(val); match.find(); val = match.group(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7174/buggy-version/org.apache.nutch.indexer.domjsoup.DomJsoupParseFilter.java", "BodyUseAPI": ["java.util.regex.Matcher.find()", "java.util.regex.Matcher.group()", "java.util.regex.Pattern.compile(textProcess.getRegex())", "org.apache.nutch.indexer.domjsoup.rule.TextP.getRegex()", "java.util.regex.Pattern.matcher(java.lang.String)"], "Fixed commit": "47e91ffc11c70930fc04bcd59059122109d60e67", "Url": "https://api.github.com/repos/kantone/nutch-jsoup", "Date": "2014-10-13T13:19:11Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { searchResult = org.jahia.data.viewhelper.principal.PrincipalViewHelper.getSearchResult(searchCriteria.getSearchIn(), newsletter.getResolveSite().getSiteKey(), searchCriteria.getSearchString(), searchCriteria.getProperties(), searchCriteria.getStoredOn(), searchCriteria.getProviders()); } catch (javax.jcr.RepositoryException e) { org.jahia.modules.newsletter.sitesettings.ManageNewsletterFlowHandler.logger.error(e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7570/buggy-version/src.main.java.org.jahia.modules.newsletter.sitesettings.ManageNewsletterFlowHandler.java", "BodyUseAPI": ["newsletter.getResolveSite().getSiteKey()", "org.jahia.data.viewhelper.principal.PrincipalViewHelper.getSearchResult(searchCriteria.getSearchIn(),newsletter.getResolveSite().getSiteKey(),searchCriteria.getSearchString(),searchCriteria.getProperties(),searchCriteria.getStoredOn(),searchCriteria.getProviders())", "org.jahia.services.usermanager.SearchCriteria.getProviders()", "org.jahia.services.usermanager.SearchCriteria.getStoredOn()", "org.jahia.modules.newsletter.sitesettings.JCRNodeWrapper.getResolveSite()", "org.jahia.services.usermanager.SearchCriteria.getSearchString()", "org.jahia.services.usermanager.SearchCriteria.getProperties()", "org.jahia.services.usermanager.SearchCriteria.getSearchIn()"], "Fixed commit": "d52d5fa618f00ab71ca13261cf2ce166cf13095d", "Url": "https://api.github.com/repos/Jahia/JahiApp-Newsletter", "Date": "2014-11-19T14:29:21Z"},
{"Line": "=>589", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { pstmt.execute(); } catch (java.sql.SQLIntegrityConstraintViolationException sqlie) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2318/buggy-version/src.org.jabst.jabs.DatabaseManager.java", "BodyUseAPI": ["java.sql.PreparedStatement.execute()"], "Fixed commit": "b02cd84b579630ecb99cec772758b1c27cfa16ef", "Url": "https://api.github.com/repos/rmit-s3606501-jason-bigelow/JABR", "Date": "2017-05-02T11:47:42Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { characterLoadCursor = stephen.dungeonsanddragonscharactersheet.SQLHelper.setupDatabase(this, SQLHelper.TABLE_NAME, null, null, null); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5408/buggy-version/DungeonsandDragonsCharacterSheet.app.src.main.java.stephen.dungeonsanddragonscharactersheet.CharacterSelectionScreen.java", "BodyUseAPI": ["stephen.dungeonsanddragonscharactersheet.SQLHelper.setupDatabase(stephen.dungeonsanddragonscharactersheet.CharacterSelectionScreen,SQLHelper.TABLE_NAME,<nulltype>,<nulltype>,<nulltype>)"], "Fixed commit": "b5acd81413c9d1de3599941bde95e307cb9b60e9", "Url": "https://api.github.com/repos/SteebBease/Dungeons-and-Dragons-Character-Sheet", "Date": "2015-11-08T18:41:28Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { Wtdouble = java.lang.Double.valueOf(Wt); } catch (java.lang.Exception e) { Wtdouble = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7384/buggy-version/src.bmi.controllers.ResultController.java", "BodyUseAPI": ["java.lang.Double.valueOf(java.lang.String)"], "Fixed commit": "0e1a3d4e81e60a47407ab78edd5ff243679f12cb", "Url": "https://api.github.com/repos/Oceanblue713/BMICalculator", "Date": "2017-10-13T10:54:04Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { Htdouble = java.lang.Double.valueOf(Ht); } catch (java.lang.Exception e) { Htdouble = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7384/buggy-version/src.bmi.controllers.ResultController.java", "BodyUseAPI": ["java.lang.Double.valueOf(java.lang.String)"], "Fixed commit": "0e1a3d4e81e60a47407ab78edd5ff243679f12cb", "Url": "https://api.github.com/repos/Oceanblue713/BMICalculator", "Date": "2017-10-13T10:54:04Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { calendar.setTime(credits.get(itemPosition).release_date); releaseYear = calendar.get(java.util.Calendar.YEAR); } catch (java.lang.Exception ex) { ex.printStackTrace(); releaseYear = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/162/buggy-version/app.src.main.java.com.example.dmajc.cinephile_movieinfo.adapters.PersonCreditsAdapter.java", "BodyUseAPI": ["java.util.Calendar.get(int)", "java.util.List<com.uwetrottmann.tmdb2.entities.PersonCastCredit>.get(int)", "java.util.Calendar.setTime(credits.get(itemPosition).release_date)"], "Fixed commit": "2e918179db4394fc49da318d689689bc165b325f", "Url": "https://api.github.com/repos/Tetrominos/Cinephile-MovieInfo", "Date": "2017-06-23T12:38:33Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.dianping.pigeon.remoting.common.pool.ChannelPool channelPool = poolRef.get(); if ((channelPool != null) && (!(channelPool.isClosed()))) { java.util.List<com.dianping.pigeon.remoting.common.channel.Channel> channels = channelPool.getChannels(); for (int index = 0; index < (channels.size()); index++) { com.dianping.pigeon.remoting.common.channel.Channel channel = channels.get(index); if (!(channel.isAvaliable())) { com.dianping.pigeon.remoting.common.pool.DefaultChannelPool.reconnectChannel(channel, channelPool); } } } } catch (java.lang.Throwable t) { com.dianping.pigeon.remoting.common.pool.DefaultChannelPool.logger.warn(\"[run] pooledChannel check failed.\", t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2693/buggy-version/pigeon-remoting.src.main.java.com.dianping.pigeon.remoting.common.pool.DefaultChannelPool.java", "BodyUseAPI": ["java.util.List<com.dianping.pigeon.remoting.common.channel.Channel>.size()", "com.dianping.pigeon.remoting.common.channel.Channel.isAvaliable()", "com.dianping.pigeon.remoting.common.pool.ChannelPool.isClosed()", "com.dianping.pigeon.remoting.common.pool.ChannelPool.getChannels()", "java.lang.ref.WeakReference<com.dianping.pigeon.remoting.common.pool.ChannelPool>.get()", "java.util.List<com.dianping.pigeon.remoting.common.channel.Channel>.get(int)", "com.dianping.pigeon.remoting.common.pool.DefaultChannelPool.reconnectChannel(com.dianping.pigeon.remoting.common.channel.Channel,com.dianping.pigeon.remoting.common.pool.ChannelPool)"], "Fixed commit": "19dc0f054e731b69ca7fefa1d808f57c9fd4e4f2", "Url": "https://api.github.com/repos/dianping/pigeon", "Date": "2016-10-17T03:51:21Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { currentAttributes.putValue(atts.getQName(i), atts.getValue(i)); } catch (java.lang.IllegalArgumentException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3279/buggy-version/src.com.johnzeringue.svgtopdf.handlers.ElementHandler.java", "BodyUseAPI": ["java.util.jar.Attributes.putValue(java.lang.String,java.lang.String)", "org.xml.sax.Attributes.getQName(int)", "org.xml.sax.Attributes.getValue(int)"], "Fixed commit": "82f1d67a10ca447d71fd050073ea68871484aab7", "Url": "https://api.github.com/repos/zeringus/svg-to-pdf-converter", "Date": "2013-08-06T17:14:40Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { bound = bindService(service, session, 0); } catch (java.lang.Throwable e) { com.lody.virtual.helper.utils.VLog.e(com.lody.virtual.client.stub.StubJob.TAG, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/345/buggy-version/VirtualApp.lib.src.main.java.com.lody.virtual.client.stub.StubJob.java", "BodyUseAPI": ["com.lody.virtual.client.stub.StubJob.1.bindService(android.content.Intent,com.lody.virtual.client.stub.StubJob.JobSession,int)"], "Fixed commit": "5cddb9fcc6bfe6061a3cd61d7989a57340027a48", "Url": "https://api.github.com/repos/asLody/VirtualApp", "Date": "2017-01-27T14:50:32Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.content.Intent streetViewIntent = new android.content.Intent(android.content.Intent.ACTION_VIEW, streetViewUri); startActivity(streetViewIntent); } catch (android.content.ActivityNotFoundException anfe) { bg.znestorov.sofbus24.utils.activity.ActivityUtils.showNoCoordinatesToast(context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6239/buggy-version/sofbus24.src.main.java.bg.znestorov.sofbus24.main.VirtualBoardsTime.java", "BodyUseAPI": ["bg.znestorov.sofbus24.main.VirtualBoardsTime.1.startActivity(android.content.Intent)"], "Fixed commit": "cbd14c0183abcf172134820387cf021a5d54affa", "Url": "https://api.github.com/repos/zdravko-nestorov/Sofbus-24-GitHub", "Date": "2017-03-19T18:22:06Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return tr.getSingleResult(); } catch (javax.persistence.NoResultException ex) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3040/buggy-version/RibbonSystemEE-ejb.src.java.org.ribbon.beans.UserBean.java", "BodyUseAPI": ["javax.persistence.TypedQuery<org.ribbon.enteties.User>.getSingleResult()"], "Fixed commit": "19f2292bb70d756950ed0737b2c77a132d3fea82", "Url": "https://api.github.com/repos/spoilt-exile/RibbonSystemEE", "Date": "2014-04-02T22:10:29Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { final java.io.File storageFolder = new java.io.File(storagePath); if (!(storageFolder.exists())) if (!(storageFolder.mkdirs())) throw new com.orientechnologies.orient.core.exception.OStorageException((\"Cannot create folders in storage with path \" + (storagePath))); super.create(iProperties); } finally { stateLock.releaseWriteLock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6819/buggy-version/core.src.main.java.com.orientechnologies.orient.core.storage.impl.local.paginated.OLocalPaginatedStorage.java", "BodyUseAPI": ["com.orientechnologies.orient.core.storage.impl.local.OAbstractPaginatedStorage.create(java.util.Map<java.lang.String, java.lang.Object>)", "java.io.File.exists()", "java.io.File.mkdirs()"], "Fixed commit": "e6de6560942ec59acbeaaa946fa452d7f9b0d1f6", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-01-28T19:04:18Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { numColumns = databaseManager.loadTable(tableName).columnTypes().size(); java.util.Map<java.lang.Integer, java.lang.String> columnData = getMapParameter(parameters, \"column\", numColumns); removeRow(tableName, columnData); } catch (java.io.IOException e) { outputManager.outputError(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/975/buggy-version/src.main.java.cyberwaste.kuzoff.command.CommandRunner.java", "BodyUseAPI": ["cyberwaste.kuzoff.database.DatabaseManager.loadTable(java.lang.String)", "databaseManager.loadTable(tableName).columnTypes()", "cyberwaste.kuzoff.command.CommandRunner.getMapParameter(java.util.Map<java.lang.String, java.lang.String>,java.lang.String,int)", "cyberwaste.kuzoff.command.CommandRunner.removeRow(java.lang.String,java.util.Map<java.lang.Integer, java.lang.String>)", "databaseManager.loadTable(tableName).columnTypes().size()"], "Fixed commit": "06a3fb3da78df066de01452395fa6544ec71f77f", "Url": "https://api.github.com/repos/cyber-waste/kuzoff", "Date": "2013-09-15T17:50:51Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { final java.nio.file.Path directory = java.nio.file.Paths.get(fileName).getParent(); if (directory != null) { java.nio.file.Files.createDirectories(directory); } } catch (java.nio.file.InvalidPathException | java.nio.file.AccessDeniedException ex) { throw new java.lang.IllegalStateException(ex.getMessage(), ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/1193/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.PropertyCacheFile.java", "BodyUseAPI": ["java.nio.file.Path.getParent()", "java.nio.file.Paths.get(java.lang.String)", "java.nio.file.Files.createDirectories(java.nio.file.Path)"], "Fixed commit": "9ec8344c59920a34816d9fb6b4045f41481cf366", "Url": "https://api.github.com/repos/MEZk/checkstyle", "Date": "2015-12-09T23:41:07Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { multiClassModelCnt = ml.shifu.shifu.util.CommonUtils.getBasicModelsCnt(modelConfig, evalConfig, evalConfig.getDataSet().getSource()); } catch (java.io.FileNotFoundException e) { multiClassModelCnt = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2282/buggy-version/src.main.java.ml.shifu.shifu.core.ConfusionMatrix.java", "BodyUseAPI": ["evalConfig.getDataSet().getSource()", "ml.shifu.shifu.container.obj.EvalConfig.getDataSet()", "ml.shifu.shifu.util.CommonUtils.getBasicModelsCnt(ml.shifu.shifu.container.obj.ModelConfig,ml.shifu.shifu.container.obj.EvalConfig,evalConfig.getDataSet().getSource())"], "Fixed commit": "20eed8384831521a569ebd4a2847180b72f5a9cb", "Url": "https://api.github.com/repos/ShifuML/shifu", "Date": "2017-03-29T19:54:55Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.processNormalInputFile(inputFile); } catch (final kieker.common.exception.RecordInstantiationException e) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2341/buggy-version/kieker-analysis.src.kieker.analysis.plugin.reader.filesystem.DirectoryReaderThread.java", "BodyUseAPI": ["kieker.analysis.plugin.reader.filesystem.DirectoryReaderThread.processNormalInputFile(java.io.File)"], "Fixed commit": "d7f465e14395c30a033b514f3079d3c6ecff0c31", "Url": "https://api.github.com/repos/kieker-monitoring/kieker", "Date": "2017-01-27T18:32:49Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return input.scores.get(a).get(b); } catch (java.lang.NullPointerException e) { java.lang.System.err.println((((\"a:\" + a) + \", b:\") + b)); return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3644/buggy-version/src.SequenceAlignment.SequenceAlignment.java", "BodyUseAPI": ["input.scores.get(java.lang.String)", "input.scores.get(a).get(java.lang.String)"], "Fixed commit": "c97dad87a82ac84f4dcdac8f6d8f15929619bcc4", "Url": "https://api.github.com/repos/rodrigore/Desafio-ADN-Forense", "Date": "2013-05-01T15:49:09Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return new com.anysoftkeyboard.dictionaries.AutoText(getPackageContext().getResources(), mAutoTextResId); } catch (java.lang.OutOfMemoryError e) { android.util.Log.i(com.anysoftkeyboard.dictionaries.DictionaryAddOnAndBuilder.TAG, \"Failed to create the AutoText dictionary.\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4933/buggy-version/src.com.anysoftkeyboard.dictionaries.DictionaryAddOnAndBuilder.java", "BodyUseAPI": ["com.anysoftkeyboard.dictionaries.DictionaryAddOnAndBuilder.getPackageContext()", "getPackageContext().getResources()"], "Fixed commit": "3b4c92ed44c5883238f7e4004b6eeb2e025ce5c4", "Url": "https://api.github.com/repos/AnySoftKeyboard/AnySoftKeyboard", "Date": "2012-12-21T15:38:19Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { canvasTexture.updateTexImage(); frameAvailable = false; } catch (java.lang.IllegalStateException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1675/buggy-version/library.src.jp.co.cyberagent.android.gpuimage.GPUImageCanvasOverlayFilter.java", "BodyUseAPI": ["android.graphics.SurfaceTexture.updateTexImage()"], "Fixed commit": "250b895e8fa6433c5eb5dde7b799bd4102256561", "Url": "https://api.github.com/repos/skonb/android-gpuimage", "Date": "2016-10-20T10:05:58Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { myTriangles.add(new MonotonePolygon.Triangle(vertexNumber1, vertexNumber2, vertexNumber3)); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/708/buggy-version/src.MonotonePolygon.java", "BodyUseAPI": ["java.util.List<MonotonePolygon.Triangle>.add(MonotonePolygon.Triangle)"], "Fixed commit": "0ddd847498d806a38b86c43318c466fa1bdee8f8", "Url": "https://api.github.com/repos/novokrest/TriangulationMonotonePolygon", "Date": "2014-09-30T11:33:16Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.mCamera.enableShutterSound(false); } catch (java.lang.Exception e) { e.printStackTrace(); android.util.Log.e(\"CJT\", \"enable shutter sound faild\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/324/buggy-version/camera.src.main.java.com.cjt2325.cameralibrary.CameraInterface.java", "BodyUseAPI": ["android.hardware.Camera.enableShutterSound(boolean)"], "Fixed commit": "cd569f9b5486b4dd1148cc99ebae6bbfeaae8871", "Url": "https://api.github.com/repos/CJT2325/CameraView", "Date": "2017-06-12T02:12:37Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { _storage = new defaultPart.Storage(); } catch (org.xml.sax.SAXException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5280/buggy-version/src.defaultPart.Logic.java", "BodyUseAPI": [], "Fixed commit": "940369d716d5087ab40edfa53bf2666a766f6194", "Url": "https://api.github.com/repos/cs2103jan2016-w14-4j/main", "Date": "2016-03-29T14:26:35Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { responseBodyStr = new java.lang.String(responseBody, configuration.getCharset()); } catch (java.io.UnsupportedEncodingException ex) { throw new org.nextlets.erc.exception.ERCDeserializationException((\"Unsupported charset: \" + (configuration.getCharset())), ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1302/buggy-version/src.main.java.org.nextlets.erc.defaults.handler.ERCResultDeserializerJsonImpl.java", "BodyUseAPI": ["org.nextlets.erc.ERCConfiguration.getCharset()"], "Fixed commit": "2e2c93ef4d46c53828b853838149e15c45c8c822", "Url": "https://api.github.com/repos/nextlets/erc", "Date": "2015-11-04T08:30:20Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { config.load(edu.kit.ipd.crowdcontrol.workerservice.database.DatabaseManager.class.getResourceAsStream(propertyFileLocation)); } catch (java.lang.NullPointerException ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6653/buggy-version/src.main.java.edu.kit.ipd.crowdcontrol.workerservice.Main.java", "BodyUseAPI": ["java.lang.Class.getResourceAsStream(java.lang.String)", "java.util.Properties.load(java.io.InputStream)"], "Fixed commit": "87b3ee31b49f2e3d4192bd67e52ebad00df0d250", "Url": "https://api.github.com/repos/coolcrowd/worker-service", "Date": "2016-02-06T15:47:41Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { frag.show(mActivity.getSupportFragmentManager(), rmmFragmentTag); } catch (java.lang.Exception e) { com.cpsolutions.android.utils.Logger.e(\"Couldn't show the RateMeDialog\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3883/buggy-version/src.com.cpsolutions.android.rating.RateMeMaybe.java", "BodyUseAPI": ["android.support.v4.app.FragmentActivity.getSupportFragmentManager()", "com.cpsolutions.android.rating.RateMeMaybeFragment.show(mActivity.getSupportFragmentManager(),java.lang.String)"], "Fixed commit": "f5f92a898e8097f8c49610c3bde3a818e177ca49", "Url": "https://api.github.com/repos/eygraber/CPSolutions-Android-Lib", "Date": "2013-11-17T14:06:02Z"},
{"Line": "=>670", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { long id = java.lang.Long.parseLong(_id); cr.notifyChange(android.content.ContentUris.withAppendedId(EntryColumns.CONTENT_URI, id), null); cr.notifyChange(android.content.ContentUris.withAppendedId(EntryColumns.FAVORITES_CONTENT_URI, id), null); } catch (java.lang.NumberFormatException e) { cr.notifyChange(EntryColumns.CONTENT_URI, null); cr.notifyChange(EntryColumns.FAVORITES_CONTENT_URI, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1851/buggy-version/src.net.fred.feedex.activity.EntryActivity.java", "BodyUseAPI": ["android.content.ContentResolver.notifyChange(android.content.ContentUris.withAppendedId(EntryColumns.CONTENT_URI, id),<nulltype>)", "java.lang.Long.parseLong(java.lang.String)", "android.content.ContentResolver.notifyChange(android.content.ContentUris.withAppendedId(EntryColumns.FAVORITES_CONTENT_URI, id),<nulltype>)", "android.content.ContentUris.withAppendedId(EntryColumns.CONTENT_URI,long)", "android.content.ContentUris.withAppendedId(EntryColumns.FAVORITES_CONTENT_URI,long)"], "Fixed commit": "654c41b4d4e61bd5771f121540c659db8945fde2", "Url": "https://api.github.com/repos/HoloAddict/FeedEx", "Date": "2013-05-29T20:31:27Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { recordReader.close(); } catch (java.lang.Exception e) { io.github.benas.easybatch.core.impl.EasyBatchEngine.LOGGER.log(java.util.logging.Level.WARNING, \"An exception occurred during closing data source reader\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/9233/buggy-version/easybatch-core.src.main.java.io.github.benas.easybatch.core.impl.EasyBatchEngine.java", "BodyUseAPI": ["io.github.benas.easybatch.core.impl.RecordReader.close()"], "Fixed commit": "753b7f2a8fa5296ffd2ef8e8ffeca302f8838e70", "Url": "https://api.github.com/repos/benas/easy-batch", "Date": "2014-01-27T21:39:15Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { recordReader.open(); } catch (java.lang.Exception e) { io.github.benas.easybatch.core.impl.EasyBatchEngine.LOGGER.log(java.util.logging.Level.SEVERE, \"An exception occurred during opening data source reader\", e); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/9233/buggy-version/easybatch-core.src.main.java.io.github.benas.easybatch.core.impl.EasyBatchEngine.java", "BodyUseAPI": ["io.github.benas.easybatch.core.impl.RecordReader.open()"], "Fixed commit": "753b7f2a8fa5296ffd2ef8e8ffeca302f8838e70", "Url": "https://api.github.com/repos/benas/easy-batch", "Date": "2014-01-27T21:39:15Z"},
{"Line": "=>1727", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { new com.example.anubhav.vacmet.OrderStatus.CreatingPdf().execute(\"Open\", new java.lang.String(invoiceTo.getInvoice(), \"UTF-8\"), invoiceTo.getInvoiceNo()); } catch (java.io.UnsupportedEncodingException e) { e.printStackTrace(); android.widget.Toast.makeText(activity, \"Encoding exception occurred! Contact admin\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3228/buggy-version/app.src.main.java.com.example.anubhav.vacmet.OrderStatus.java", "BodyUseAPI": ["com.example.anubhav.vacmet.model.InvoiceTo.getInvoiceNo()", "com.example.anubhav.vacmet.OrderStatus.CreatingPdf.execute(java.lang.String,java.lang.String,invoiceTo.getInvoiceNo())", "com.example.anubhav.vacmet.model.InvoiceTo.getInvoice()"], "Fixed commit": "b2a73e0211a16b594ecc482d56349f9c39662ea1", "Url": "https://api.github.com/repos/jay1493/vacmetOrderStatus", "Date": "2017-11-15T12:26:20Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { results.add(methodNames.getDeclaringType()); } catch (java.lang.Exception e) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8129/buggy-version/cc.kave.episodes.src.main.java.cc.kave.episodes.postprocessor.EnclosingMethods.java", "BodyUseAPI": ["cc.kave.commons.model.naming.codeelements.IMethodName.getDeclaringType()", "java.util.Set<cc.kave.commons.model.naming.types.ITypeName>.add(methodNames.getDeclaringType())"], "Fixed commit": "63f36eb71f6ce90243abbc04c287b75f7f72c850", "Url": "https://api.github.com/repos/stg-tud/kave-java", "Date": "2017-02-21T16:19:21Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String lineNumber = typeLine.substring((index + 1), typeLine.length()).trim(); line = java.lang.Integer.valueOf(lineNumber).intValue(); } catch (java.lang.NumberFormatException e) { return line; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2349/buggy-version/org.eclipse.jdt.productivity.openfromexternalevent.src.org.eclipse.jdt.productivity.openfromexternalevent.actions.OpenFromExternalEventAction.java", "BodyUseAPI": ["java.lang.Integer.intValue()", "java.lang.Integer.valueOf(java.lang.String)", "java.lang.String.trim()", "java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "5bab46bed4e313891e208ec489ea25db9062cff6", "Url": "https://api.github.com/repos/cbos/OpenFromExternalEvent", "Date": "2014-08-26T15:08:29Z"},
{"Line": "=>878", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { localTopologyManager.setCacheAvailability(getName(), availability); } catch (java.lang.Exception e) { throw new org.infinispan.commons.CacheException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7031/buggy-version/core.src.main.java.org.infinispan.cache.impl.CacheImpl.java", "BodyUseAPI": ["org.infinispan.topology.LocalTopologyManager.setCacheAvailability(java.lang.String,org.infinispan.partionhandling.AvailabilityMode)", "org.infinispan.cache.impl.CacheImpl<K, V>.getName()"], "Fixed commit": "cc19f1afef7d21e4fc066a9daa294edac3de5ff1", "Url": "https://api.github.com/repos/danberindei/infinispan", "Date": "2014-10-20T14:43:22Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return connectionService.getRemoteConnection(com.google.common.net.HostAndPort.fromParts(virtualMachine.publicIpAddress().get().getIp(), remotePort), osFamily, de.uniulm.omi.cloudiator.sword.core.domain.LoginCredentialBuilder.newBuilder().password(virtualMachine.loginPassword().get()).username(virtualMachine.loginName().get()).build()); } catch (de.uniulm.omi.cloudiator.sword.api.remote.RemoteException e) { throw new cloud.strategies.RemoteRuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/918/buggy-version/app.cloud.strategies.PasswordRemoteConnectionStrategy.java", "BodyUseAPI": ["de.uniulm.omi.cloudiator.sword.core.domain.LoginCredentialBuilder.newBuilder().password(virtualMachine.loginPassword().get()).username(virtualMachine.loginName().get()).build()", "cloud.SwordConnectionService.getRemoteConnection(com.google.common.net.HostAndPort.fromParts(virtualMachine.publicIpAddress().get().getIp(), remotePort),de.uniulm.omi.cloudiator.sword.api.domain.OSFamily,de.uniulm.omi.cloudiator.sword.core.domain.LoginCredentialBuilder.newBuilder().password(virtualMachine.loginPassword().get()).username(virtualMachine.loginName().get()).build())", "com.google.common.net.HostAndPort.fromParts(virtualMachine.publicIpAddress().get().getIp(),int)", "virtualMachine.publicIpAddress().get()", "de.uniulm.omi.cloudiator.sword.core.domain.LoginCredentialBuilder.newBuilder().password(virtualMachine.loginPassword().get()).username(virtualMachine.loginName().get())", "models.VirtualMachine.loginPassword()", "virtualMachine.publicIpAddress().get().getIp()", "de.uniulm.omi.cloudiator.sword.core.domain.LoginCredentialBuilder.newBuilder().password(virtualMachine.loginPassword().get())", "virtualMachine.loginName().get()", "de.uniulm.omi.cloudiator.sword.core.domain.LoginCredentialBuilder.newBuilder()", "models.VirtualMachine.publicIpAddress()", "models.VirtualMachine.loginName()", "virtualMachine.loginPassword().get()"], "Fixed commit": "e0bc7811c08f1623cbd0a4ba2026240c01538a46", "Url": "https://api.github.com/repos/ech1965/colosseum", "Date": "2015-09-22T13:28:16Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return connectionService.getRemoteConnection(com.google.common.net.HostAndPort.fromParts(virtualMachine.publicIpAddress().get().getIp(), virtualMachine.remotePort()), virtualMachine.osFamily(), de.uniulm.omi.cloudiator.sword.core.domain.LoginCredentialBuilder.newBuilder().username(virtualMachine.loginName().get()).privateKey(keyPair.get().getPrivateKey()).build()); } catch (de.uniulm.omi.cloudiator.sword.api.remote.RemoteException e) { throw new cloud.strategies.RemoteRuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/918/buggy-version/app.cloud.strategies.KeyPairRemoteConnectionStrategy.java", "BodyUseAPI": ["virtualMachine.publicIpAddress().get().getIp()", "models.VirtualMachine.remotePort()", "de.uniulm.omi.cloudiator.sword.core.domain.LoginCredentialBuilder.newBuilder().username(virtualMachine.loginName().get()).privateKey(keyPair.get().getPrivateKey())", "java.util.Optional<models.KeyPair>.get()", "cloud.SwordConnectionService.getRemoteConnection(com.google.common.net.HostAndPort.fromParts(virtualMachine.publicIpAddress().get().getIp(), virtualMachine.remotePort()),virtualMachine.osFamily(),de.uniulm.omi.cloudiator.sword.core.domain.LoginCredentialBuilder.newBuilder().username(virtualMachine.loginName().get()).privateKey(keyPair.get().getPrivateKey()).build())", "models.VirtualMachine.publicIpAddress()", "models.VirtualMachine.osFamily()", "de.uniulm.omi.cloudiator.sword.core.domain.LoginCredentialBuilder.newBuilder().username(virtualMachine.loginName().get())", "com.google.common.net.HostAndPort.fromParts(virtualMachine.publicIpAddress().get().getIp(),virtualMachine.remotePort())", "de.uniulm.omi.cloudiator.sword.core.domain.LoginCredentialBuilder.newBuilder()", "models.VirtualMachine.loginName()", "de.uniulm.omi.cloudiator.sword.core.domain.LoginCredentialBuilder.newBuilder().username(virtualMachine.loginName().get()).privateKey(keyPair.get().getPrivateKey()).build()", "keyPair.get().getPrivateKey()", "virtualMachine.loginName().get()", "virtualMachine.publicIpAddress().get()"], "Fixed commit": "e0bc7811c08f1623cbd0a4ba2026240c01538a46", "Url": "https://api.github.com/repos/ech1965/colosseum", "Date": "2015-09-22T13:28:16Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { sample.android.veritrans.co.id.sampleandroidapi.model.VTRestResponse response = new com.google.gson.Gson().fromJson(restResponse, sample.android.veritrans.co.id.sampleandroidapi.model.VTRestResponse.class); if (response.status.equalsIgnoreCase(\"success\")) { android.widget.Toast.makeText(getActivity(), (\"Success To Add payment: \" + (response.body.order_id)), Toast.LENGTH_SHORT).show(); }else { android.widget.Toast.makeText(getActivity(), \"Failed to Pay\", Toast.LENGTH_SHORT).show(); } } catch (java.lang.Exception ex) { android.widget.Toast.makeText(getActivity(), \"Failed to Pay\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/155/buggy-version/app.src.main.java.sample.android.veritrans.co.id.sampleandroidapi.FragmentCheckout.java", "BodyUseAPI": ["response.status.equalsIgnoreCase(java.lang.String)", "android.widget.Toast.makeText(getActivity(), \"Failed to Pay\", Toast.LENGTH_SHORT).show()", "sample.android.veritrans.co.id.sampleandroidapi.FragmentCheckout.SendTokenAsync.getActivity()", "android.widget.Toast.makeText(getActivity(),java.lang.String,Toast.LENGTH_SHORT)", "com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)", "android.widget.Toast.makeText(getActivity(),(\"Success To Add payment: \" + (response.body.order_id)),Toast.LENGTH_SHORT)", "android.widget.Toast.makeText(getActivity(), (\"Success To Add payment: \" + (response.body.order_id)), Toast.LENGTH_SHORT).show()", "sample.android.veritrans.co.id.sampleandroidapi.FragmentCheckout.SendTokenAsync.getActivity()"], "Fixed commit": "51347117af27ee42035a5e3ebb096b4857375366", "Url": "https://api.github.com/repos/muhammadanis/vtsamplestoreAndroid", "Date": "2015-01-09T06:35:41Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.money.manager.ex.dropbox.DropboxHelper.getInstance(); } catch (java.lang.Exception e) { android.util.Log.e(com.money.manager.ex.CheckingAccountActivity.LOGCAT, e.getMessage()); com.money.manager.ex.dropbox.DropboxHelper.getInstance(getApplicationContext()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5582/buggy-version/src.com.money.manager.ex.CheckingAccountActivity.java", "BodyUseAPI": ["com.money.manager.ex.dropbox.DropboxHelper.getInstance()"], "Fixed commit": "7d41196931d9b90462664808b637d93a2425cf05", "Url": "https://api.github.com/repos/AlessandroLazzari/android-money-manager-ex", "Date": "2015-02-02T21:16:39Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { current = java.lang.Class.forName(element.getClassName()); } catch (java.lang.ClassNotFoundException e) { throw new java.lang.IllegalStateException(e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5741/buggy-version/src.org.andlog.Builder.java", "BodyUseAPI": ["java.lang.Class.forName(java.lang.String)", "java.lang.StackTraceElement.getClassName()"], "Fixed commit": "0b3d1ef00c6e390b5fdb8ecccf8f0d3864e880c3", "Url": "https://api.github.com/repos/freesamael/andlog", "Date": "2014-10-01T11:44:48Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { result = de.tum.in.tumcampusapp.auxiliary.NetUtils.downloadJson(getApplicationContext(), SERVER_URL.concat((\"&q=\" + (java.net.URLEncoder.encode(query, \"UTF-8\"))))); } catch (java.io.UnsupportedEncodingException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/133/buggy-version/app.src.main.java.de.tum.in.tumcampusapp.services.AssistantService.java", "BodyUseAPI": ["java.net.URLEncoder.encode(java.lang.String,java.lang.String)", "de.tum.in.tumcampusapp.services.AssistantService.getApplicationContext()", "de.tum.in.tumcampusapp.auxiliary.NetUtils.downloadJson(getApplicationContext(),java.lang.String)", "java.lang.String.concat(java.lang.String)"], "Fixed commit": "8b63cd7230af1f42f5f51e46c35c9d5a4b3efe19", "Url": "https://api.github.com/repos/dimart/TumCampusApp", "Date": "2016-11-12T12:00:39Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (!(job.waitForCompletion(true))) java.lang.System.out.println(\"not running\"); else { java.lang.System.out.println(\"running\"); } } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5339/buggy-version/src.indexer.WordCountDriver.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "org.apache.hadoop.mapreduce.Job.waitForCompletion(boolean)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "7f6942f5fb0b0617632a5dfe74b962a015286042", "Url": "https://api.github.com/repos/katiewu/Search-Engine", "Date": "2015-04-20T01:07:28Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { parsedDate = gmt.parse(dbDate); } catch (java.text.ParseException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8578/buggy-version/src.com.Grupp01.gymapp.Controller.History.HistoryDbHandler.java", "BodyUseAPI": ["java.text.SimpleDateFormat.parse(java.lang.String)"], "Fixed commit": "3a3b735661ab274187437392198d27b8eb8b87a6", "Url": "https://api.github.com/repos/Rofflarn/Gym-app", "Date": "2012-10-17T13:06:56Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { rid = java.lang.Integer.parseInt(javax.swing.JOptionPane.showInputDialog(null, \"Enter route ID\")); } catch (java.lang.NumberFormatException nfe) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/727/buggy-version/src.TLinkFrame.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "javax.swing.JOptionPane.showInputDialog(<nulltype>,java.lang.String)"], "Fixed commit": "83551af4f8c8557cd824aeb8f5743d798b120274", "Url": "https://api.github.com/repos/vinlore/TLink", "Date": "2015-03-21T21:04:34Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { sid = java.lang.Integer.parseInt(javax.swing.JOptionPane.showInputDialog(null, \"Enter stop ID\")); } catch (java.lang.NumberFormatException nfe) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/727/buggy-version/src.TLinkFrame.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "javax.swing.JOptionPane.showInputDialog(<nulltype>,java.lang.String)"], "Fixed commit": "83551af4f8c8557cd824aeb8f5743d798b120274", "Url": "https://api.github.com/repos/vinlore/TLink", "Date": "2015-03-21T21:04:34Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder.class.getMethod(\"fromMethodName\", org.springframework.web.util.UriComponentsBuilder.class, java.lang.Class.class, java.lang.String.class, java.lang.Object[].class); de.neofonie.surlgen.processor.spring.JMethod getBaseMvcUriComponentsBuilder = definedClass.method(JMod.PROTECTED, org.springframework.web.util.UriComponentsBuilder.class, \"getBaseUriComponentsBuilder\"); getBaseMvcUriComponentsBuilder.body()._return(de.neofonie.surlgen.processor.spring.JExpr._null()); getBaseMvcUriComponentsBuilder.javadoc().add(\"Extension-Point to use another Base-UriComponentsBuilder than the default one\"); return getBaseMvcUriComponentsBuilder; } catch (java.lang.NoSuchMethodException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/77/buggy-version/surlgen-processor.src.main.java.de.neofonie.surlgen.processor.spring.UrlFactoryServiceGenerator.java", "BodyUseAPI": ["de.neofonie.surlgen.processor.spring.JExpr._null()", "java.lang.Class.getMethod(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class)", "de.neofonie.surlgen.processor.spring.JDefinedClass.method(JMod.PROTECTED,java.lang.Class,java.lang.String)", "de.neofonie.surlgen.processor.spring.JMethod.javadoc()", "de.neofonie.surlgen.processor.spring.JMethod.body()", "getBaseMvcUriComponentsBuilder.javadoc().add(java.lang.String)", "getBaseMvcUriComponentsBuilder.body()._return(de.neofonie.surlgen.processor.spring.JExpr._null())"], "Fixed commit": "67ce3bb6e8d6dda87e5fa9af88d5e8474f72d04a", "Url": "https://api.github.com/repos/Neofonie/surlgen", "Date": "2016-04-21T14:12:24Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { argPos.add(((java.lang.Integer.parseInt(argParts[x].trim())) + multiplier)); } catch (java.lang.NumberFormatException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5370/buggy-version/src.com.ramblingwood.minecraft.jsonapi.dynamic.Call.java", "BodyUseAPI": ["java.lang.String.trim()", "java.lang.Integer.parseInt(java.lang.String)", "java.util.ArrayList<java.lang.Integer>.add(int)"], "Fixed commit": "1a0d3c3f93e3141165a2c6f8e5f296c7aa277f84", "Url": "https://api.github.com/repos/alecgorge/jsonapi", "Date": "2011-04-08T01:46:15Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.accounts.Account[] accounts = mAccountManager.getAccountsByType(Constants.ACCOUNT_TYPE); android.accounts.Account userAccount = accounts[((accounts.length) - 1)]; mAccountManager.setUserData(userAccount, Constants.LOGOUT, \"true\"); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5891/buggy-version/src.com.example.taximap.map.FragmentTabsActivity.java", "BodyUseAPI": ["android.accounts.AccountManager.setUserData(android.accounts.Account,Constants.LOGOUT,java.lang.String)", "android.accounts.AccountManager.getAccountsByType(Constants.ACCOUNT_TYPE)"], "Fixed commit": "1e378eada3216688b121541f8c33ba30bc518af3", "Url": "https://api.github.com/repos/vfonte91/TaxiMap", "Date": "2013-04-16T18:53:58Z"},
{"Line": "=>468", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { jobCidsBean.setProperty(\"saumap\", java.lang.Integer.parseInt(anfrageBean.getSaumAPSuche())); } catch (final java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6325/buggy-version/src.main.java.de.cismet.cids.custom.utils.vermessungsunterlagen.VermessungsunterlagenHelper.java", "BodyUseAPI": ["de.cismet.cids.custom.utils.vermessungsunterlagen.VermessungsunterlagenAnfrageBean.getSaumAPSuche()", "de.cismet.cids.dynamics.CidsBean.setProperty(java.lang.String,int)", "java.lang.Integer.parseInt(anfrageBean.getSaumAPSuche())"], "Fixed commit": "cad7d88cdc1789538d8902f14d1241ee8d35e858", "Url": "https://api.github.com/repos/cismet/cids-custom-wuppertal-server", "Date": "2016-11-28T10:52:34Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { int notifId = java.lang.Integer.parseInt(notif.getId()); notificationManager.notify(\"CN1\", notifId, notification); } catch (java.lang.Exception e) { notificationManager.notify(notif.getId(), 0, notification); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6008/buggy-version/Ports.Android.src.com.codename1.impl.android.LocalNotificationPublisher.java", "BodyUseAPI": ["com.codename1.notifications.LocalNotification.getId()", "java.lang.Integer.parseInt(notif.getId())", "android.app.NotificationManager.notify(java.lang.String,int,android.app.Notification)"], "Fixed commit": "e8385b1dbc727c11a4c38e6d131fd48ca74f8679", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2016-07-13T19:37:40Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { java.lang.String output; while ((output = br.readLine()) != null) { result.append(output); } } finally { br.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8231/buggy-version/molgenis-data-annotators.src.main.java.org.molgenis.data.annotation.impl.CosmicServiceAnnotator.java", "BodyUseAPI": ["java.io.BufferedReader.readLine()", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "81d5ce6425c769d9679bcbcbb7d54eb7e4949475", "Url": "https://api.github.com/repos/jjettenn/molgenis", "Date": "2014-12-23T12:42:05Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { java.lang.String output; while ((output = br.readLine()) != null) { result.append(output); } } finally { br.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8231/buggy-version/molgenis-data-annotators.src.main.java.org.molgenis.data.annotation.impl.EbiServiceAnnotator.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.io.BufferedReader.readLine()"], "Fixed commit": "81d5ce6425c769d9679bcbcbb7d54eb7e4949475", "Url": "https://api.github.com/repos/jjettenn/molgenis", "Date": "2014-12-23T12:42:05Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { closeInstant = org.joda.time.DateTime.parse(closeTime, com.pennapps.labs.pennmobile.classes.VenueInterval.MealInterval.DATEFORMAT); } catch (org.joda.time.IllegalInstantException e) { closeTime = (date + \" \") + \"01:00:00\"; closeInstant = org.joda.time.DateTime.parse(closeTime, com.pennapps.labs.pennmobile.classes.VenueInterval.MealInterval.DATEFORMAT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1017/buggy-version/PennMobile.src.main.java.com.pennapps.labs.pennmobile.classes.VenueInterval.java", "BodyUseAPI": ["org.joda.time.DateTime.parse(java.lang.String,org.joda.time.format.DateTimeFormatter)"], "Fixed commit": "3f478546e1b4d2b6db25a34669f65bd5c3e5d8ca", "Url": "https://api.github.com/repos/pennlabs/penn-mobile-android", "Date": "2017-03-12T23:26:04Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { _backgroundPlayer.close(); } catch (java.lang.NullPointerException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1922/buggy-version/src.us.calnet.dungeonboard.DungeonBoard.java", "BodyUseAPI": ["us.calnet.dungeonboard.AudioPlayer.close()"], "Fixed commit": "853359b3178cb2eb76c954f1a67eae16beee9013", "Url": "https://api.github.com/repos/seancallaway/DungeonBoard", "Date": "2017-08-15T00:37:52Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { return em.find(org.jboss.narayana.txvis.persistence.entities.Transaction.class, primaryKeyId); } finally { em.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7687/buggy-version/txvis-core.src.main.java.org.jboss.narayana.txvis.persistence.dao.TransactionDAO.java", "BodyUseAPI": ["javax.persistence.EntityManager.find(java.lang.Class,java.lang.Long)"], "Fixed commit": "13b461b1aab81e9a227ba0a9ee7fb447e3387bb6", "Url": "https://api.github.com/repos/alexcreasy/txvis", "Date": "2013-07-19T19:50:04Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { model = cc.mallet.topics.ParallelTopicModel.read(modelFile); } catch (java.lang.Exception e) { throw new java.io.IOException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/298/buggy-version/de.tudarmstadt.ukp.dkpro.core.mallet-asl.src.main.java.de.tudarmstadt.ukp.dkpro.core.mallet.topicmodel.MalletTopicModelUtils.java", "BodyUseAPI": ["cc.mallet.topics.ParallelTopicModel.read(java.io.File)"], "Fixed commit": "68e072208f51eefee9202304ade01a80ef0ee8aa", "Url": "https://api.github.com/repos/dkpro/dkpro-core", "Date": "2015-09-25T10:00:09Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { model = cc.mallet.topics.ParallelTopicModel.read(modelFile); } catch (java.lang.Exception e) { throw new java.io.IOException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/298/buggy-version/de.tudarmstadt.ukp.dkpro.core.mallet-asl.src.main.java.de.tudarmstadt.ukp.dkpro.core.mallet.topicmodel.MalletTopicModelUtils.java", "BodyUseAPI": ["cc.mallet.topics.ParallelTopicModel.read(java.io.File)"], "Fixed commit": "68e072208f51eefee9202304ade01a80ef0ee8aa", "Url": "https://api.github.com/repos/dkpro/dkpro-core", "Date": "2015-09-25T10:00:09Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (gr = 0; (net.sf.nightworks.Tables.prac_table[gr].sh_name) != null; gr++) { if (!(str_prefix(name, net.sf.nightworks.Tables.prac_table[gr].sh_name))) { return gr; } } } catch (java.lang.ArrayIndexOutOfBoundsException e) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3452/buggy-version/src.main.java.net.sf.nightworks.ActSkill.java", "BodyUseAPI": ["net.sf.nightworks.ActSkill.str_prefix(java.lang.String,net.sf.nightworks.Tables.prac_table[gr].sh_name)"], "Fixed commit": "998de99e02feb0df4efee3cd379cc72f90cabbab", "Url": "https://api.github.com/repos/tomhickerson/nightworks", "Date": "2017-11-21T21:49:38Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { key = org.calrissian.accumulorecipes.commons.iterators.support.EventFields.stringSerializer.read(kryo, input, java.lang.String.class); } catch (java.lang.Throwable e) { java.lang.System.out.println(input); throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/373/buggy-version/commons.src.main.java.org.calrissian.accumulorecipes.commons.iterators.support.EventFields.java", "BodyUseAPI": ["DefaultSerializers.StringSerializer.read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)"], "Fixed commit": "7491dd6234d512a508ef8c03c2d0f17f04530b36", "Url": "https://api.github.com/repos/vincentrussell/accumulo-recipes", "Date": "2016-11-12T23:10:51Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { stmt = conn.prepareStatement(\"SELECT ID AS DEVICE_TYPE_ID, NAME AS DEVICE_TYPE FROM DM_DEVICE_TYPE WHERE ID=?\"); stmt.setInt(1, id); java.sql.ResultSet results = stmt.executeQuery(); while (results.next()) { deviceType = new org.wso2.carbon.device.mgt.core.dto.DeviceType(); deviceType.setId(results.getLong(\"DEVICE_TYPE_ID\")); deviceType.setName(results.getString(\"DEVICE_TYPE\")); } } catch (java.sql.SQLException e) { java.lang.String msg = \"Error occurred while fetching the registered device type\"; org.wso2.carbon.device.mgt.core.dao.impl.DeviceTypeDAOImpl.log.error(msg, e); throw new org.wso2.carbon.device.mgt.core.dao.DeviceManagementDAOException(msg, e); } finally { org.wso2.carbon.device.mgt.core.dao.util.DeviceManagementDAOUtil.cleanupResources(conn, stmt, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3483/buggy-version/components.device-mgt.org.wso2.carbon.device.mgt.core.src.main.java.org.wso2.carbon.device.mgt.core.dao.impl.DeviceTypeDAOImpl.java", "BodyUseAPI": ["java.sql.PreparedStatement.setInt(int,java.lang.Integer)", "java.sql.ResultSet.getString(java.lang.String)", "java.sql.Connection.prepareStatement(java.lang.String)", "org.wso2.carbon.device.mgt.core.dto.DeviceType.setId(long)", "java.sql.PreparedStatement.executeQuery()", "java.sql.ResultSet.getLong(java.lang.String)", "org.wso2.carbon.device.mgt.core.dto.DeviceType.setName(java.lang.String)", "java.sql.ResultSet.next()"], "Fixed commit": "250c48a25886e1727b30696f5db0fc3767090ad6", "Url": "https://api.github.com/repos/geethkokila/product-cdm", "Date": "2015-01-19T09:02:10Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { cursor.moveToFirst(); count = cursor.getInt(1); } catch (android.database.CursorIndexOutOfBoundsException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1372/buggy-version/HabitHamster.app.src.main.java.com.example.jonathan.myapplication.ProgressActivity.java", "BodyUseAPI": ["android.database.Cursor.getInt(int)", "android.database.Cursor.moveToFirst()"], "Fixed commit": "fdfad044be8ed218a0c9f367c7032de81fb7acef", "Url": "https://api.github.com/repos/austinmsuarez/Habit-Hamster", "Date": "2017-12-03T21:12:17Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { issueLog.setCreatedBy(userDAO.findByLoginName(org.libreplan.web.security.SecurityUtils.getSessionUserLoginName())); } catch (org.libreplan.business.common.exceptions.InstanceNotFoundException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5735/buggy-version/libreplan-webapp.src.main.java.org.libreplan.web.logs.IssueLogModel.java", "BodyUseAPI": ["org.libreplan.business.users.daos.IUserDAO.findByLoginName(org.libreplan.web.security.SecurityUtils.getSessionUserLoginName())", "org.libreplan.web.security.SecurityUtils.getSessionUserLoginName()", "org.libreplan.business.logs.entities.IssueLog.setCreatedBy(userDAO.findByLoginName(org.libreplan.web.security.SecurityUtils.getSessionUserLoginName()))"], "Fixed commit": "df55e1bd19cfaf563ae7a0cf7a82d2fde8f6a3fc", "Url": "https://api.github.com/repos/dgray16/libreplan", "Date": "2015-12-10T13:48:16Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { riskLog.setCreatedBy(userDAO.findByLoginName(org.libreplan.web.security.SecurityUtils.getSessionUserLoginName())); } catch (org.libreplan.business.common.exceptions.InstanceNotFoundException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5735/buggy-version/libreplan-webapp.src.main.java.org.libreplan.web.logs.RiskLogModel.java", "BodyUseAPI": ["org.libreplan.business.logs.entities.RiskLog.setCreatedBy(userDAO.findByLoginName(org.libreplan.web.security.SecurityUtils.getSessionUserLoginName()))", "org.libreplan.business.users.daos.IUserDAO.findByLoginName(org.libreplan.web.security.SecurityUtils.getSessionUserLoginName())", "org.libreplan.web.security.SecurityUtils.getSessionUserLoginName()"], "Fixed commit": "df55e1bd19cfaf563ae7a0cf7a82d2fde8f6a3fc", "Url": "https://api.github.com/repos/dgray16/libreplan", "Date": "2015-12-10T13:48:16Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { de.mhus.lib.core.util.TimerIfc timerIfc = de.mhus.lib.karaf.MOsgi.getService(de.mhus.lib.core.util.TimerIfc.class); getBaseControl().getCurrentBase().addObject(de.mhus.lib.core.util.TimerIfc.class, timerIfc); } catch (java.lang.Throwable t) { java.lang.System.out.println(\"Can't initialize timer\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7049/buggy-version/mhu-lib-karaf.src.main.java.de.mhus.lib.mutable.KarafSingletonImpl.java", "BodyUseAPI": ["getBaseControl().getCurrentBase().addObject(java.lang.Class,de.mhus.lib.core.util.TimerIfc)", "de.mhus.lib.karaf.MOsgi.getService(java.lang.Class)", "de.mhus.lib.mutable.KarafSingletonImpl.getBaseControl()", "de.mhus.lib.core.lang.BaseControl.getCurrentBase()"], "Fixed commit": "058d28dd72d23e6c76c2771cc6d5fde7ecf735ce", "Url": "https://api.github.com/repos/mhus/mhus-lib", "Date": "2015-10-13T06:37:31Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { housekeeper = new de.mhus.lib.mutable.KarafHousekeeper(); getBaseControl().getCurrentBase().addObject(de.mhus.lib.core.MHousekeeper.class, housekeeper); } catch (java.lang.Throwable t) { java.lang.System.out.println((\"Can't initialize housekeeper \" + t)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7049/buggy-version/mhu-lib-karaf.src.main.java.de.mhus.lib.mutable.KarafSingletonImpl.java", "BodyUseAPI": ["de.mhus.lib.mutable.KarafSingletonImpl.getBaseControl()", "getBaseControl().getCurrentBase().addObject(java.lang.Class,de.mhus.lib.mutable.KarafHousekeeper)", "de.mhus.lib.core.lang.BaseControl.getCurrentBase()"], "Fixed commit": "058d28dd72d23e6c76c2771cc6d5fde7ecf735ce", "Url": "https://api.github.com/repos/mhus/mhus-lib", "Date": "2015-10-13T06:37:31Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return activity.getFragmentManager().isDestroyed(); } catch (java.lang.Exception ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2076/buggy-version/library.src.main.java.com.iwhys.library.lifecycle.InnerManagerRetriever.java", "BodyUseAPI": ["activity.getFragmentManager().isDestroyed()", "android.app.Activity.getFragmentManager()"], "Fixed commit": "9f88a499967126114b9b86e0997f7c4c49049218", "Url": "https://api.github.com/repos/iwhys/to-lifecycle", "Date": "2017-02-03T12:18:26Z"},
{"Line": "=>461", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { btCondition = (mChatService.getState()) != (BluetoothChatService.STATE_CONNECTED); } catch (java.lang.Exception e) { android.util.Log.d(com.ded.smacktalker.MainActivity.DEBUGTAG, \"btCondition failed to set\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/976/buggy-version/app.src.main.java.com.ded.smacktalker.MainActivity.java", "BodyUseAPI": ["com.ded.smacktalker.BluetoothChatService.getState()"], "Fixed commit": "a12449c42665c631131b8a5e29e59c1163274a8e", "Url": "https://api.github.com/repos/DrakeMorin/SmackTalker", "Date": "2016-06-02T12:19:28Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { shell.close(); } catch (java.lang.Exception ex) { org.guideme.guideme.App.logger.error((\"Main shell close \" + (ex.getLocalizedMessage())), ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7162/buggy-version/src.main.java.org.guideme.guideme.App.java", "BodyUseAPI": ["org.eclipse.swt.widgets.Shell.close()"], "Fixed commit": "21ac6e586085906a5522e46abb604d4f7a05d41d", "Url": "https://api.github.com/repos/guide-me/GuideMe", "Date": "2015-03-08T22:29:53Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.applicationSelectorConfiguration.loadConfiguration(); this.applicationMapping = this.applicationSelectorConfiguration.getApplicationMapping(); } catch (java.lang.Exception e) { log.error(\"Cannot read asimba-selector.xml configuration\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1523/buggy-version/asimba-selector.src.main.java.org.gluu.authentication.remote.saml2.selector.ApplicationSelector.java", "BodyUseAPI": ["org.gluu.authentication.remote.saml2.selector.ApplicationSelectorConfiguration.getApplicationMapping()", "org.gluu.authentication.remote.saml2.selector.ApplicationSelectorConfiguration.loadConfiguration()"], "Fixed commit": "8b41755f321f5bf09782314912d0bed7803f1159", "Url": "https://api.github.com/repos/GluuFederation/gluu-Asimba", "Date": "2016-03-01T07:08:41Z"},
{"Line": "=>450", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mEditText.setSelection(text.length()); } catch (java.lang.Throwable ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6399/buggy-version/marqueeto.src.main.java.com.github.guilhermesgb.marqueeto.LabelledMarqueeEditText.java", "BodyUseAPI": ["android.support.v7.widget.AppCompatEditText.setSelection(int)", "java.lang.String.length()"], "Fixed commit": "4ef0ca0d502f70e1f59a374e962e91c6ff863650", "Url": "https://api.github.com/repos/guilhermesgb/marqueeto", "Date": "2017-05-02T02:02:05Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Class.forName(de.jClipCorn.database.DerbyDatabase.DRIVER).newInstance(); } catch (java.lang.InstantiationException | java.lang.IllegalAccessException | java.lang.ClassNotFoundException e) { de.jClipCorn.gui.log.CCLog.addUndefinied(java.lang.Thread.currentThread(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8266/buggy-version/src.de.jClipCorn.database.DerbyDatabase.java", "BodyUseAPI": ["java.lang.Class.forName(java.lang.String)", "java.lang.Class<?>.newInstance()"], "Fixed commit": "534922370127222c6163e7f4c7a9d9639afa0392", "Url": "https://api.github.com/repos/Mikescher/jClipCorn", "Date": "2016-07-06T19:37:23Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { selectMessage = database.getConnection().createStatement(); if (selectMessage.execute(SQL)) { results = selectMessage.getResultSet(); while (results.next()) contactId = results.getInt(\"owner\"); } } catch (java.sql.SQLException e) { com.thevoiceasia.email.LOGGER.severe((\"Error getting contact id from message \" + contactMessageId)); } finally { close(selectMessage, results); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3030/buggy-version/src.com.thevoiceasia.email.ManualSender.java", "BodyUseAPI": ["java.sql.Statement.getResultSet()", "com.thevoiceasia.email.ManualSender.getConnection()", "java.sql.ResultSet.getInt(java.lang.String)", "java.sql.Statement.execute(java.lang.String)", "database.getConnection().createStatement()", "java.sql.ResultSet.next()"], "Fixed commit": "84d0ad6b603acc3ccca2829b0eec7f65e205ce07", "Url": "https://api.github.com/repos/waynemerricks/contactresponse", "Date": "2014-10-03T13:26:48Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { plugin.getChathandler().setPlayerchatmode(event.getPlayer().getName(), null); } catch (com.guntherdw.bukkit.tweakcraft.Exceptions.ChatModeException e) { plugin.getLogger().severe(\"[TweakcraftUtils] Error setting ChatMode to null after the logout!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3261/buggy-version/src.com.guntherdw.bukkit.tweakcraft.TweakcraftPlayerListener.java", "BodyUseAPI": ["org.bukkit.event.player.PlayerEvent.getPlayer()", "plugin.getChathandler().setPlayerchatmode(event.getPlayer().getName(),<nulltype>)", "com.guntherdw.bukkit.tweakcraft.TweakcraftUtils.getChathandler()", "event.getPlayer().getName()"], "Fixed commit": "83d4144b304248283fb57a7aec644aea2123ec3a", "Url": "https://api.github.com/repos/GuntherDW/TweakcraftUtils", "Date": "2011-03-24T23:08:48Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { found = applicationUserFacade.findByEmail(form.getEmail()); } catch (org.springframework.dao.EmptyResultDataAccessException ex) { redirectAttributes.addFlashAttribute(\"alert_warning\", ((\"Login with username \" + (form.getEmail())) + \" has failed.\")); return \"redirect:\" + (uriBuilder.path(\"/login\").toUriString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/207/buggy-version/music-library-web.src.main.java.cz.fi.muni.pa165.musiclibrary.web.controllers.LoginController.java", "BodyUseAPI": ["cz.fi.muni.pa165.musiclibrary.dto.ApplicationUserDTO.getEmail()", "cz.fi.muni.pa165.musiclibrary.facade.ApplicationUserFacade.findByEmail(form.getEmail())"], "Fixed commit": "5a767b9b90f0bbade9f4cd17f6a4e351fe86f965", "Url": "https://api.github.com/repos/fabik/fi-muni-PA165-music-library", "Date": "2017-12-18T21:38:49Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { cellNum = com.tictactoe.gameplay.TicTacToeGame.sc.nextInt(); } catch (java.util.InputMismatchException e) { java.lang.System.out.println(\"That's not a valid number !!\"); com.tictactoe.gameplay.TicTacToeGame.sc.next(); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7440/buggy-version/src.com.tictactoe.gameplay.TicTacToeGame.java", "BodyUseAPI": ["java.util.Scanner.nextInt()"], "Fixed commit": "12add9859272ff108ad21c87aae603068c986eac", "Url": "https://api.github.com/repos/arjun033/TicTacToe", "Date": "2017-03-13T16:39:47Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { cellNum = com.tictactoe.gameplay.TicTacToeGame.sc.nextInt(); } catch (java.util.InputMismatchException e) { java.lang.System.out.println(\"That's not a valid number !!\"); com.tictactoe.gameplay.TicTacToeGame.sc.next(); com.tictactoe.gameplay.TicTacToeGame.swapPlayerTurns(); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7440/buggy-version/src.com.tictactoe.gameplay.TicTacToeGame.java", "BodyUseAPI": ["java.util.Scanner.nextInt()"], "Fixed commit": "12add9859272ff108ad21c87aae603068c986eac", "Url": "https://api.github.com/repos/arjun033/TicTacToe", "Date": "2017-03-13T16:39:47Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.docBase = getAbsolutePathWithSchemePrefix(docBase); } catch (java.lang.Exception e) { this.docBase = docBase; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5552/buggy-version/core.src.main.java.com.predic8.membrane.core.interceptor.server.WebServerInterceptor.java", "BodyUseAPI": ["com.predic8.membrane.core.interceptor.server.WebServerInterceptor.getAbsolutePathWithSchemePrefix(java.lang.String)"], "Fixed commit": "624e4f4c3249e97cb31b85767c02a96d0f7fdac7", "Url": "https://api.github.com/repos/membrane/service-proxy", "Date": "2016-06-20T15:01:14Z"},
{"Line": "=>2675", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { doc.validate(); } catch (com.orientechnologies.orient.core.db.document.OValidationException ex) { doc.undo(); throw ex; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2072/buggy-version/core.src.main.java.com.orientechnologies.orient.core.db.document.ODatabaseDocumentTx.java", "BodyUseAPI": ["com.orientechnologies.orient.core.record.impl.ODocument.validate()"], "Fixed commit": "fa5063e6b67f61562ae25a6b932f53e9bf3739f9", "Url": "https://api.github.com/repos/sonatype/orientdb", "Date": "2017-02-13T13:00:21Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { output = optimizer.optimize(10000000, b, GoalType.MAXIMIZE, startPoint).getPoint(); } catch (java.lang.Exception e) { output = startPoint; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7775/buggy-version/src-plugins.Cell_Blob_Tracking.blobTracking.MaximumLikelihoodBlobPolicy.java", "BodyUseAPI": ["optimizer.optimize(10000000, b, GoalType.MAXIMIZE, startPoint).getPoint()", "org.apache.commons.math.optimization.direct.PowellOptimizer.optimize(int,blobTracking.Blob,GoalType.MAXIMIZE,double[])"], "Fixed commit": "15df05ef834631a90b359ff722ab09831f5205b1", "Url": "https://api.github.com/repos/alex-krull/fiji", "Date": "2012-04-24T13:52:53Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (soleLoadGenerator.isStarted()) { return false; } } catch (final java.rmi.RemoteException e) { com.emc.mongoose.ui.log.LogUtil.exception(com.emc.mongoose.load.monitor.BasicLoadMonitor.LOG, Level.WARN, e, \"Failed to check the load generator state\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7699/buggy-version/load.monitor.src.main.java.com.emc.mongoose.load.monitor.BasicLoadMonitor.java", "BodyUseAPI": ["com.emc.mongoose.model.load.LoadGenerator<I, O>.isStarted()"], "Fixed commit": "cd134811ed1077be9d9722f4800989cd938f0f72", "Url": "https://api.github.com/repos/emc-mongoose/mongoose", "Date": "2017-02-27T11:46:38Z"},
{"Line": "=>532", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((data.cx) != null) { org.mozilla.javascript.Context.exit(); } } catch (java.lang.Exception er) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6980/buggy-version/engine.src.main.java.org.pentaho.di.trans.steps.scriptvalues_mod.ScriptValuesMod.java", "BodyUseAPI": ["org.mozilla.javascript.Context.exit()"], "Fixed commit": "4219b900e62d08d8655af5ca3773d42e92750912", "Url": "https://api.github.com/repos/marcoslarsen/pentaho-kettle", "Date": "2017-12-04T18:22:18Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.amazonaws.kinesis.agg.AggRecord aggRecord = this.aggregator.addUserRecord(userRecord); checkAndForwardRecords(logger, aggRecord); } catch (java.lang.Exception e) { logger.log((\"[ERROR] Could not add user record: \" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/625/buggy-version/java.KinesisLambdaForwarder.src.main.java.com.amazonaws.kinesis.forwarder.LambdaAggregatingForwarder.java", "BodyUseAPI": ["com.amazonaws.kinesis.forwarder.LambdaAggregatingForwarder.checkAndForwardRecords(com.amazonaws.services.lambda.runtime.LambdaLogger,com.amazonaws.kinesis.agg.AggRecord)", "com.amazonaws.kinesis.agg.RecordAggregator.addUserRecord(com.amazonaws.services.kinesis.clientlibrary.types.UserRecord)"], "Fixed commit": "957098c1904930c896620828f89d8e3eaccae57a", "Url": "https://api.github.com/repos/brentnash/kinesis-aggregation", "Date": "2017-12-18T17:33:42Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return java.util.Optional.ofNullable(this.get()); } catch (java.util.NoSuchElementException e) { return java.util.Optional.empty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4149/buggy-version/src.java.de.craftolution.craftolibrary.NullableSupplier.java", "BodyUseAPI": ["java.util.Optional.ofNullable(T)", "de.craftolution.craftolibrary.NullableSupplier<T>.get()"], "Fixed commit": "4327851f9973bac1f4676c5c793bdea1800bb7be", "Url": "https://api.github.com/repos/Craftolution/CraftoLibrary", "Date": "2016-02-13T20:09:27Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return (this.get()) != null; } catch (java.util.NoSuchElementException e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4149/buggy-version/src.java.de.craftolution.craftolibrary.NullableSupplier.java", "BodyUseAPI": ["de.craftolution.craftolibrary.NullableSupplier<T>.get()"], "Fixed commit": "4327851f9973bac1f4676c5c793bdea1800bb7be", "Url": "https://api.github.com/repos/Craftolution/CraftoLibrary", "Date": "2016-02-13T20:09:27Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { networkView.getNodeView(childNode.getCyNode()).setVisualProperty(BasicVisualLexicon.NODE_VISIBLE, true); edu.umich.med.mbni.lkq.cyontology.internal.utils.ViewOperationUtils.setEdgeVisibleBetweenNodes(rootNode.getCyNode(), childNode.getCyNode(), networkView, true); edu.umich.med.mbni.lkq.cyontology.internal.utils.ViewOperationUtils.showSubTree(childNode, networkView); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1976/buggy-version/src.main.java.edu.umich.med.mbni.lkq.cyontology.internal.utils.ViewOperationUtils.java", "BodyUseAPI": ["networkView.getNodeView(childNode.getCyNode()).setVisualProperty(BasicVisualLexicon.NODE_VISIBLE,boolean)", "edu.umich.med.mbni.lkq.cyontology.internal.model.ExpandableNode.getCyNode()", "edu.umich.med.mbni.lkq.cyontology.internal.model.ExpandableNode.getCyNode()", "edu.umich.med.mbni.lkq.cyontology.internal.model.ExpandableNode.getCyNode()", "edu.umich.med.mbni.lkq.cyontology.internal.utils.ViewOperationUtils.setEdgeVisibleBetweenNodes(rootNode.getCyNode(),childNode.getCyNode(),org.cytoscape.view.model.CyNetworkView,boolean)", "edu.umich.med.mbni.lkq.cyontology.internal.utils.ViewOperationUtils.showSubTree(edu.umich.med.mbni.lkq.cyontology.internal.model.ExpandableNode,org.cytoscape.view.model.CyNetworkView)", "org.cytoscape.view.model.CyNetworkView.getNodeView(childNode.getCyNode())"], "Fixed commit": "66b8c976ddf63ed13370d88ea9d562f1827431c6", "Url": "https://api.github.com/repos/keqiang/cytoscape-ontology-display", "Date": "2015-02-26T22:16:30Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { boolean visible = networkView.getNodeView(childNode.getCyNode()).getVisualProperty(BasicVisualLexicon.NODE_VISIBLE); if (!visible) { networkView.getNodeView(childNode.getCyNode()).setVisualProperty(BasicVisualLexicon.NODE_VISIBLE, true); } edu.umich.med.mbni.lkq.cyontology.internal.utils.ViewOperationUtils.setEdgeVisibleBetweenNodes(rootNode.getCyNode(), childNode.getCyNode(), networkView, true); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1976/buggy-version/src.main.java.edu.umich.med.mbni.lkq.cyontology.internal.utils.ViewOperationUtils.java", "BodyUseAPI": ["networkView.getNodeView(childNode.getCyNode()).setVisualProperty(BasicVisualLexicon.NODE_VISIBLE,boolean)", "edu.umich.med.mbni.lkq.cyontology.internal.utils.ViewOperationUtils.setEdgeVisibleBetweenNodes(rootNode.getCyNode(),childNode.getCyNode(),org.cytoscape.view.model.CyNetworkView,boolean)", "edu.umich.med.mbni.lkq.cyontology.internal.model.ExpandableNode.getCyNode()", "edu.umich.med.mbni.lkq.cyontology.internal.model.ExpandableNode.getCyNode()", "edu.umich.med.mbni.lkq.cyontology.internal.model.ExpandableNode.getCyNode()", "org.cytoscape.view.model.CyNetworkView.getNodeView(childNode.getCyNode())", "networkView.getNodeView(childNode.getCyNode()).getVisualProperty(BasicVisualLexicon.NODE_VISIBLE)", "org.cytoscape.view.model.CyNetworkView.getNodeView(childNode.getCyNode())", "edu.umich.med.mbni.lkq.cyontology.internal.model.ExpandableNode.getCyNode()"], "Fixed commit": "66b8c976ddf63ed13370d88ea9d562f1827431c6", "Url": "https://api.github.com/repos/keqiang/cytoscape-ontology-display", "Date": "2015-02-26T22:16:30Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { currentDir = new java.io.File(\"./\").getCanonicalPath(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6922/buggy-version/src.main.java.org.intellimate.izou.security.IzouSecurityManager.java", "BodyUseAPI": ["java.io.File.getCanonicalPath()"], "Fixed commit": "e57a36431a1900f6ddb77cabcf3d1d99eb259ee1", "Url": "https://api.github.com/repos/intellimate/Izou", "Date": "2015-05-08T11:42:30Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { db.execSQL((\"DROP TABLE \" + (DBSchema.Steps.TABLE_NAME))); } catch (android.database.sqlite.SQLiteException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7557/buggy-version/ValensContentProvider.src.ntnu.stud.valens.contentprovider.CPValensDB.java", "BodyUseAPI": ["android.database.sqlite.SQLiteDatabase.execSQL((\"DROP TABLE \" + (DBSchema.Steps.TABLE_NAME)))"], "Fixed commit": "a944dc6a73f035d67584d022e9810106b612dcae", "Url": "https://api.github.com/repos/vonbob/Fall_Prevention_2013", "Date": "2013-04-26T11:11:44Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { db.execSQL((\"DROP TABLE \" + (DBSchema.Gaits.TABLE_NAME))); } catch (android.database.sqlite.SQLiteException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7557/buggy-version/ValensContentProvider.src.ntnu.stud.valens.contentprovider.CPValensDB.java", "BodyUseAPI": ["android.database.sqlite.SQLiteDatabase.execSQL((\"DROP TABLE \" + (DBSchema.Gaits.TABLE_NAME)))"], "Fixed commit": "a944dc6a73f035d67584d022e9810106b612dcae", "Url": "https://api.github.com/repos/vonbob/Fall_Prevention_2013", "Date": "2013-04-26T11:11:44Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { sizeAndLastModified = org.apache.kylin.engine.mr.DFSFileTable.getSizeAndLastModified(path); } catch (java.io.FileNotFoundException ex) { sizeAndLastModified = org.apache.kylin.common.util.Pair.newPair((-1L), 0L); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7429/buggy-version/engine-mr.src.main.java.org.apache.kylin.engine.mr.DFSFileTable.java", "BodyUseAPI": ["org.apache.kylin.engine.mr.DFSFileTable.getSizeAndLastModified(java.lang.String)"], "Fixed commit": "7b50d3163456a748a98779b432161bde9da71b7d", "Url": "https://api.github.com/repos/apache/kylin", "Date": "2016-11-24T23:16:45Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { monitor.update(queries); } catch (uk.co.flax.luwak.UpdateException e) { java.lang.StringBuilder sb = new java.lang.StringBuilder(); for (uk.co.flax.luwak.QueryError error : e.errors) { sb.append(error.toString()).append(\"\\n\"); } throw new javax.ws.rs.WebApplicationException(sb.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3578/buggy-version/luwak-server.src.main.java.uk.co.flax.luwak.server.resources.UpdateResource.java", "BodyUseAPI": ["uk.co.flax.luwak.Monitor.update(java.util.List<uk.co.flax.luwak.MonitorQuery>)"], "Fixed commit": "7072fbc77dee7403ecea31279b1f8ebab0c1d0ac", "Url": "https://api.github.com/repos/flaxsearch/luwak", "Date": "2017-01-20T15:11:28Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { new view.StatisticsMenu().setVisible(true); } catch (java.io.IOException ex) { java.util.logging.Logger.getLogger(view.StatisticsMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); } catch (java.lang.ClassNotFoundException ex) { java.util.logging.Logger.getLogger(view.StatisticsMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/285/buggy-version/src.main.java.view.StatisticsMenu.java", "BodyUseAPI": ["view.StatisticsMenu.setVisible(boolean)"], "Fixed commit": "45381d3c430c1b2be1b9aa64fd636eb076b55259", "Url": "https://api.github.com/repos/VictorHPergher/WorkoutLog", "Date": "2017-11-28T02:09:20Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { game.makeTurnAutomatically(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7205/buggy-version/src.main.java.de.hsbremen.battleshipextreme.Main.java", "BodyUseAPI": ["de.hsbremen.battleshipextreme.model.Game.makeTurnAutomatically()"], "Fixed commit": "fd3925da04f70d7a06793ef01d0635534306c2d8", "Url": "https://api.github.com/repos/cschaf/battleship-extreme", "Date": "2015-05-10T07:07:08Z"},
{"Line": "=>360", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { itemsToAdd.add(new com.felipecsl.asymmetricgridview.library.widget.RowItem(i, ((T) (wrappedAdapter.getItem(i))))); } catch (android.database.CursorIndexOutOfBoundsException e) { android.util.Log.w(com.felipecsl.asymmetricgridview.library.widget.AsymmetricGridViewAdapter.TAG, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/8973/buggy-version/library.src.main.java.com.felipecsl.asymmetricgridview.library.widget.AsymmetricGridViewAdapter.java", "BodyUseAPI": ["java.util.List<com.felipecsl.asymmetricgridview.library.widget.RowItem<T>>.add(com.felipecsl.asymmetricgridview.library.widget.RowItem)", "android.widget.ListAdapter.getItem(int)"], "Fixed commit": "cdeac01025ed78ebc4a6fb5f06f6ac5beacb3d57", "Url": "https://api.github.com/repos/felipecsl/AsymmetricGridView", "Date": "2014-10-27T01:40:26Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { owner = jdbcTemplateObject.queryForObject(SQL, new java.lang.Object[]{ eventId }, new eventoris.dao.UserInfoMapper()); } catch (org.springframework.dao.IncorrectResultSizeDataAccessException ex) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4030/buggy-version/eventoris_jdbc.src.main.java.eventoris.dao.EventJDBCTemplate.java", "BodyUseAPI": ["org.springframework.jdbc.core.JdbcTemplate.queryForObject(java.lang.String,java.lang.Object[],eventoris.dao.UserInfoMapper)"], "Fixed commit": "a224a6572cfd2315741719913fbb90fd112c12e0", "Url": "https://api.github.com/repos/alexeiti/eventoris", "Date": "2014-06-12T18:51:30Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { category = jdbcTemplateObject.queryForObject(SQL, new java.lang.Object[]{ id }, new eventoris.dao.CategoryMapper()); } catch (org.springframework.dao.IncorrectResultSizeDataAccessException ex) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4030/buggy-version/eventoris_jdbc.src.main.java.eventoris.dao.EventJDBCTemplate.java", "BodyUseAPI": ["org.springframework.jdbc.core.JdbcTemplate.queryForObject(java.lang.String,java.lang.Object[],eventoris.dao.CategoryMapper)"], "Fixed commit": "a224a6572cfd2315741719913fbb90fd112c12e0", "Url": "https://api.github.com/repos/alexeiti/eventoris", "Date": "2014-06-12T18:51:30Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { clientSocket.receive(receive_packet); } catch (java.lang.Exception e) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/30/buggy-version/client.Ping.src.com.num.helpers.LossHelper.java", "BodyUseAPI": ["java.net.DatagramSocket.receive(java.net.DatagramPacket)"], "Fixed commit": "4baf1aff3a61daf8a6c7b7e8231ee8d442083143", "Url": "https://api.github.com/repos/ykim320/androidperformance", "Date": "2014-06-19T22:06:35Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.apache.commons.io.FileUtils.forceMkdir(artifactOutputFolder); } catch (java.io.IOException e) { throw new java.lang.RuntimeException(e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2055/buggy-version/src.main.java.org.reficio.p2.P2Helper.java", "BodyUseAPI": ["org.apache.commons.io.FileUtils.forceMkdir(java.io.File)"], "Fixed commit": "6cccba0910f437bc7911254c0d99a37e1865af62", "Url": "https://api.github.com/repos/reficio/p2-maven-plugin", "Date": "2015-02-25T13:56:39Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { keyStatus = warriorService.getWarriorKeyStatus(username, \"ray.com\"); } catch (com.csg.warrior.raydotcom.exception.WarriorRequestException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5471/buggy-version/raydotcom.src.main.java.com.csg.warrior.raydotcom.service.impl.UserServiceImpl.java", "BodyUseAPI": ["com.csg.warrior.raydotcom.service.WarriorService.getWarriorKeyStatus(java.lang.String,java.lang.String)"], "Fixed commit": "c1b644b83c57d2f618f44fac2eee2ec815bc20c0", "Url": "https://api.github.com/repos/smitparaggua/thesis-clean", "Date": "2014-01-23T11:26:51Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { compare = com.github.salvatorenovelli.redirectcheck.model.EscapedUriComparator.compare(request.getExpectedDestination(), actualDestinationURI); } catch (java.net.URISyntaxException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4218/buggy-version/redirect-check-api.src.main.java.com.github.salvatorenovelli.redirectcheck.model.RedirectCheckResponse.java", "BodyUseAPI": ["com.github.salvatorenovelli.redirectcheck.model.RedirectSpecification.getExpectedDestination()", "com.github.salvatorenovelli.redirectcheck.model.EscapedUriComparator.compare(request.getExpectedDestination(),java.lang.String)"], "Fixed commit": "da555af8b31f5a81b29bd2b74162259db2704c53", "Url": "https://api.github.com/repos/salvatorenovelli/redirect-check", "Date": "2017-09-21T21:48:26Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.view.View v = getView(); v.post(new java.lang.Runnable() { @java.lang.Override public void run() { list.add(0, new seg.user.interface3125.thehominator.FeedContent(getString(R.string.feed_bbq_title), getString(R.string.feed_bbq_desc))); fAdapter.notifyDataSetChanged(); } }); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1514/buggy-version/app.src.main.java.seg.user.interface3125.thehominator.Feed_Fragment.java", "BodyUseAPI": ["java.util.List.add(int,seg.user.interface3125.thehominator.FeedContent)", "android.view.View.post(java.lang.Runnable)", "seg.user.interface3125.thehominator.Feed_Fragment.1.getString(R.string.feed_bbq_desc)", "seg.user.interface3125.thehominator.FeedAdapter.notifyDataSetChanged()", "java.lang.Object()", "seg.user.interface3125.thehominator.Feed_Fragment.getView()", "seg.user.interface3125.thehominator.Feed_Fragment.1.getString(R.string.feed_bbq_title)"], "Fixed commit": "c5b72f10fd2e6d36d2e5c74e207c872feaa85cf1", "Url": "https://api.github.com/repos/nnam-ibe/Hominator", "Date": "2015-07-30T05:16:12Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { resourceDescription = resourceDescriptions.getResourceDescription(this.uri); } catch (java.lang.IllegalStateException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2534/buggy-version/src.eclipse.net.vtst.ow.eclipse.less.src.net.vtst.ow.eclipse.less.scoping.LessImportStatementResolver.java", "BodyUseAPI": ["org.eclipse.xtext.scoping.impl.LoadOnDemandResourceDescriptions.getResourceDescription(org.eclipse.emf.common.util.URI)"], "Fixed commit": "4ae5c54defe670f4ec7b4fe3ba820245e0c5e03d", "Url": "https://api.github.com/repos/vtst/ow", "Date": "2013-08-16T09:39:59Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.io.FileInputStream fis = context.openFileInput(getFileName()); java.io.ObjectInputStream ois = new java.io.ObjectInputStream(fis); return ((T) (ois.readObject())); } catch (java.io.FileNotFoundException fne) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1099/buggy-version/app.src.main.java.com.lucasmoellers.metraupn.ObjectDataStorage.java", "BodyUseAPI": ["android.content.Context.openFileInput(java.lang.String)", "com.lucasmoellers.metraupn.ObjectDataStorage<T>.getFileName()", "java.io.ObjectInputStream.readObject()"], "Fixed commit": "14205e94c187cc2b2cc3a50200e6064d17e0ea29", "Url": "https://api.github.com/repos/lucasmoellers/metraupn", "Date": "2015-02-11T01:48:48Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { em.close(); } finally { entityManager.remove(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4926/buggy-version/extensions.persist.src.com.google.inject.persist.jpa.JpaPersistService.java", "BodyUseAPI": ["javax.persistence.EntityManager.close()"], "Fixed commit": "cb610bf7038cafd462cece603aae46595065f46c", "Url": "https://api.github.com/repos/leusonmario/roboguice", "Date": "2014-06-26T07:38:56Z"},
{"Line": "=>1222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { queryString = translator.translateQuery(getTheJenaModel(), q); } catch (java.lang.UnsupportedOperationException e) { com.ge.research.sadl.reasoner.IReasoner defaultReasoner = getConfigMgr(null).getOtherReasoner(ConfigurationManager.DEFAULT_REASONER); com.ge.research.sadl.reasoner.ITranslator alttranslator = getConfigMgr(null).getTranslatorForReasoner(defaultReasoner); queryString = alttranslator.translateQuery(getTheJenaModel(), q); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2445/buggy-version/sadl3.com.ge.research.sadl.parent.com.ge.research.sadl.jena.src.com.ge.research.sadl.jena.JenaBasedSadlInferenceProcessor.java", "BodyUseAPI": ["com.ge.research.sadl.jena.JenaBasedSadlInferenceProcessor.getTheJenaModel()", "com.ge.research.sadl.reasoner.ITranslator.translateQuery(com.hp.hpl.jena.ontology.OntModel,com.ge.research.sadl.model.gp.Query)"], "Fixed commit": "62b08baddc7a591c714860f1e9c59302f2a55aef", "Url": "https://api.github.com/repos/crapo/sadlos2", "Date": "2017-08-23T20:20:35Z"},
{"Line": "=>1235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { advanceStop(vmUuid, false); } catch (final com.cloud.exception.OperationTimedoutException e) { throw new com.cloud.exception.AgentUnavailableException(\"Unable to stop vm because the operation to stop timed out\", e.getAgentId(), e); } catch (final com.cloud.exception.ConcurrentOperationException e) { throw new com.cloud.utils.exception.CloudRuntimeException(\"Unable to stop vm because of a concurrent operation\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/145/buggy-version/engine.orchestration.src.com.cloud.vm.VirtualMachineManagerImpl.java", "BodyUseAPI": ["com.cloud.vm.VirtualMachineManagerImpl.advanceStop(java.lang.String,boolean)"], "Fixed commit": "e8ce472968f9e1b105cc2fa7c684eb9ed58833fb", "Url": "https://api.github.com/repos/myENA/cloudstack", "Date": "2016-09-09T17:33:00Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(this.settings.getDelayBeforeResponseMs()); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3918/buggy-version/app.src.main.java.com.medziku.motoresponder.logic.RespondingTask.java", "BodyUseAPI": ["com.medziku.motoresponder.logic.Settings.getDelayBeforeResponseMs()", "java.lang.Thread.sleep(this.settings.getDelayBeforeResponseMs())"], "Fixed commit": "bedf57c89b9d614e802dba784f85f98e3bd6ac3d", "Url": "https://api.github.com/repos/orzechowskikamil/motoresponder", "Date": "2016-04-10T13:31:34Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { org.wildfly.security.manager.WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(loader); initialContextClass = java.lang.Class.forName(initialContextClassName, true, loader); java.lang.reflect.Constructor ctor = initialContextClass.getConstructor(java.util.Hashtable.class); context = ((javax.naming.Context) (ctor.newInstance(newEnvironment))); } finally { org.wildfly.security.manager.WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(currentClassLoader); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1780/buggy-version/naming.src.main.java.org.jboss.as.naming.ExternalContextObjectFactory.java", "BodyUseAPI": ["org.wildfly.security.manager.WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(java.lang.ClassLoader)", "java.lang.Class.getConstructor(java.lang.Class)", "java.lang.Class.forName(java.lang.String,boolean,java.lang.ClassLoader)", "java.lang.reflect.Constructor.newInstance(java.util.Hashtable<?, ?>)"], "Fixed commit": "81959bae44f9afca872ad2f9432a08e74cc7a09b", "Url": "https://api.github.com/repos/pferraro/wildfly", "Date": "2014-01-17T14:15:29Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { classifier.trainFromFile(file); } catch (java.io.IOException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/221/buggy-version/src.java.gui.menus.fileMenu.LoadNewClassifier.java", "BodyUseAPI": ["classifiers.NaiveBayesClassifier.trainFromFile(java.io.File)"], "Fixed commit": "b1731d099fdba2fae892cbffde017561fa326855", "Url": "https://api.github.com/repos/Destion/Laipsum", "Date": "2016-01-04T19:18:43Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { tMaterial = gregtech.api.GregTech_API.sGeneratedMaterials[(meta % 1000)]; } catch (java.lang.Exception e) { tMaterial = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5612/buggy-version/src.main.java.com.detrav.net.DetravProPickPacket00.java", "BodyUseAPI": [], "Fixed commit": "57f4fca3694b36aea993940f5bef838e45d98d3d", "Url": "https://api.github.com/repos/Detrav/DetravScannerMod", "Date": "2016-12-13T10:33:04Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { channel.close(); } catch (java.io.IOException ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1436/buggy-version/src.main.java.fr.delthas.network.Socket.java", "BodyUseAPI": ["java.nio.channels.DatagramChannel.close()"], "Fixed commit": "612d8662a73e91a8165006f34ecdb4efec490df0", "Url": "https://api.github.com/repos/delthas/network", "Date": "2017-01-20T17:40:23Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return fetchActivitiesList().get(selectActivityList.getSelectedIndex()); } catch (java.sql.SQLException e) { new projectPlanner.view.projectPanel.ErrorDialog(\"There was a problem in connecting to the server\"); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/199/buggy-version/src.projectPlanner.view.projectPanel.ListPanel.java", "BodyUseAPI": ["java.util.List<projectPlanner.Activity>.get(int)", "projectPlanner.view.projectPanel.ListPanel.fetchActivitiesList()", "javax.swing.JList<java.lang.String>.getSelectedIndex()"], "Fixed commit": "0ee49e8a77eea8ee0cfd608dfafc0b9901aa817b", "Url": "https://api.github.com/repos/OliverFlecke/ProjectPlanner", "Date": "2015-05-05T21:31:56Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.net.URI uri = new java.net.URI(path); if ((uri.getScheme()) != null) return path; } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/539/buggy-version/core.src.main.java.com.predic8.membrane.core.interceptor.server.WebServerInterceptor.java", "BodyUseAPI": ["java.net.URI.getScheme()"], "Fixed commit": "1d1937b26a38c73476298b2b72b75026a4ca56f6", "Url": "https://api.github.com/repos/membrane/service-proxy", "Date": "2016-07-04T15:59:05Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return runQuery(queryInput, queryGerman, queryNorwegian); } catch (java.io.IOException e) { org.xlrnet.metadict.engines.heinzelnisse.HeinzelnisseEngine.LOGGER.error(\"Fetching response from backend failed\", e); throw new org.xlrnet.metadict.api.exception.MetadictTechnicalException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/8574/buggy-version/metadict-engines.heinzelnisse-engine.src.main.java.org.xlrnet.metadict.engines.heinzelnisse.HeinzelnisseEngine.java", "BodyUseAPI": ["org.xlrnet.metadict.engines.heinzelnisse.HeinzelnisseEngine.runQuery(java.lang.String,boolean,boolean)"], "Fixed commit": "2cee1bfc37b39416f5fef5c328552fecaa00c12f", "Url": "https://api.github.com/repos/jhendess/metadict", "Date": "2017-01-12T19:33:20Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { input = new java.io.FileInputStream(\"/tmp/config.properties\"); } catch (java.io.FileNotFoundException e) { e.printStackTrace(); throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6657/buggy-version/04.servlet.programming.servlet-project.src.main.java.com.servlet.util.JDBCUtil.java", "BodyUseAPI": [], "Fixed commit": "eebb7ea97e17f8220dc4ce61bd1cb06e547e2cf0", "Url": "https://api.github.com/repos/kodfarki/staj-2016", "Date": "2016-08-04T14:07:25Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { refresh(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3483/buggy-version/tools.plugins.com.liferay.ide.project.core.src.com.liferay.ide.project.core.model.internal.ProjectNameValidationService.java", "BodyUseAPI": ["com.liferay.ide.project.core.model.internal.ProjectNameValidationService.1.refresh()"], "Fixed commit": "e08c45c33278fc09a41ffcc236dd883a931765f0", "Url": "https://api.github.com/repos/AndyWu2015/liferay-ide", "Date": "2017-06-08T11:12:07Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { weibo.uploadStatus(statusText, new weibo4j.http.ImageItem(image)); h2weibo.Twitter2Weibo.log.info(java.lang.String.format(\"@%s - %s sent with image.\", name, statusText)); } catch (weibo4j.WeiboException e) { h2weibo.Twitter2Weibo.log.error(\"Faile to update image.\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5365/buggy-version/core.src.main.java.h2weibo.Twitter2Weibo.java", "BodyUseAPI": ["org.apache.log4j.Logger.info(java.lang.String)", "weibo4j.Weibo.uploadStatus(java.lang.String,weibo4j.http.ImageItem)", "java.lang.String.format(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "db76726d38256b66e5cf1f830117e4769291f311", "Url": "https://api.github.com/repos/rjyo/twitter-2-weibo", "Date": "2011-09-04T14:04:21Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { data = new net.tomp2p.storage.Data(args); commandLine.put(name, data); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/179/buggy-version/GDCN_proj.UI.src.main.java.ui.console.Console.java", "BodyUseAPI": ["command.CommandLine.put(java.lang.String,net.tomp2p.storage.Data)"], "Fixed commit": "4853637d72c6d3ed5184c8a792853da7b3129fd1", "Url": "https://api.github.com/repos/weeeeeew/GDCN", "Date": "2014-02-19T13:05:58Z"},
{"Line": "=>623", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { final java.lang.String successMessage = jsonResult.getString(ServerUtilities.POST_DATA_SUCCESS); android.util.Log.i(edu.selu.android.classygames.GenericGameFragment.LOG_TAG, (\"Server returned success message: \" + successMessage)); try { parsedServerResponse = new org.json.JSONObject(successMessage); } catch (final org.json.JSONException e) { } } catch (final org.json.JSONException e) { final java.lang.String errorMessage = jsonResult.getString(ServerUtilities.POST_DATA_ERROR); android.util.Log.e(edu.selu.android.classygames.GenericGameFragment.LOG_TAG, (\"Server returned error message: \" + errorMessage)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2779/buggy-version/projects.android.classygames.src.edu.selu.android.classygames.GenericGameFragment.java", "BodyUseAPI": ["org.json.JSONObject.getString(ServerUtilities.POST_DATA_SUCCESS)", "android.util.Log.i(java.lang.String,java.lang.String)"], "Fixed commit": "5b623e663d2b0741d44a9ce4a4b38b16640ddd78", "Url": "https://api.github.com/repos/ScootrNova/ClassyGames", "Date": "2013-02-27T06:40:44Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { byui.cit260.ghostStory.model.Player player = byui.cit260.ghostStory.control.GameControl.createPlayer(playersName); if (player == null) { java.lang.System.out.println(\"\\nError creating player.\"); return false; } this.displayNextView(player); } catch (byui.cit260.ghostStory.exceptions.GameControlException gce) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/116/buggy-version/ghostStory.src.byui.cit260.ghostStory.view.StartProgramView.java", "BodyUseAPI": ["byui.cit260.ghostStory.view.StartProgramView.displayNextView(byui.cit260.ghostStory.model.Player)", "java.io.PrintStream.println(java.lang.String)", "byui.cit260.ghostStory.control.GameControl.createPlayer(java.lang.String)"], "Fixed commit": "e30650699300e0fde8bf4acaa671265273e2ffc6", "Url": "https://api.github.com/repos/carsonbott/CIT260GhostStory", "Date": "2016-12-01T01:51:49Z"},
{"Line": "=>544", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { method = getRegistrationClass(type).getDeclaredMethod(\"getHandlerList\"); method.setAccessible(true); return ((org.bukkit.event.HandlerList) (method.invoke(null))); } catch (java.lang.NoSuchMethodException e) { e.printStackTrace(); } catch (java.lang.SecurityException e) { e.printStackTrace(); } catch (java.lang.IllegalAccessException e) { e.printStackTrace(); } catch (java.lang.IllegalArgumentException e) { e.printStackTrace(); } catch (java.lang.reflect.InvocationTargetException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4544/buggy-version/src.main.java.org.bukkit.plugin.SimplePluginManager.java", "BodyUseAPI": ["java.lang.reflect.Method.setAccessible(boolean)", "java.lang.reflect.Method.invoke(<nulltype>)", "org.bukkit.plugin.SimplePluginManager.getRegistrationClass(java.lang.Class<? extends org.bukkit.event.Event>)", "java.lang.Class<? extends org.bukkit.event.Event>.getDeclaredMethod(java.lang.String)"], "Fixed commit": "f7691a53449aa34604a9705e37c2bc128d34d01a", "Url": "https://api.github.com/repos/St-Arai/Experiment1-1", "Date": "2013-06-17T05:49:30Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mKindImages = mAssetManager.list(\"kinds\"); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7794/buggy-version/floworld.src.com.tianPATH.app.floworld.favorite.FavoriteTabActivity.java", "BodyUseAPI": ["android.content.res.AssetManager.list(java.lang.String)"], "Fixed commit": "5a27e85b32d33b790c7ff495bc70bfa440003605", "Url": "https://api.github.com/repos/openproject/world", "Date": "2012-04-07T08:54:44Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { numFiles = new java.io.File((((path + purpose) + \"/\") + entityId)).listFiles().length; if (numFiles == 0) { return null; } } catch (java.lang.Exception ex) { return new de.rwth.i9.palm.analytics.algorithm.ngram.TopicalNGrams(0, 50.0, 0.01, 0.01, 0.03, 0.2, 1000); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4049/buggy-version/src.main.java.de.rwth.i9.palm.analytics.algorithm.ngram.Ngram.java", "BodyUseAPI": ["java.io.File.listFiles()"], "Fixed commit": "4886e4a507c7015c507041a06d976f88fa175b9f", "Url": "https://api.github.com/repos/palm-toolkit/palm-analytics", "Date": "2017-06-23T19:49:30Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.codehaus.plexus.util.FileUtils.cleanDirectory(sdkDir); } catch (java.lang.Exception e) { getLog().warn((\"Could not clean qooxdoo-sdk directory:\" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4290/buggy-version/src.main.java.org.charless.qxmaven.mojo.qooxdoo.SdkUnpackMojo.java", "BodyUseAPI": ["org.codehaus.plexus.util.FileUtils.cleanDirectory(java.io.File)"], "Fixed commit": "0bcacc7b7d0dfbfe71318f442c3f0f0492ae83ef", "Url": "https://api.github.com/repos/salmon-charles/qooxdoo-maven-plugin", "Date": "2012-07-20T15:47:59Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { collisionY = collisionLayer.getCell(((int) ((player.getX()) / tileWidth)), ((int) ((player.getY()) / tileHeigth))).getTile().getProperties().containsKey(\"Collision\"); if (!(collisionY)) collisionY = collisionLayer.getCell(((int) ((((player.getX()) + (player.getWidth())) / 2) / tileWidth)), ((int) ((player.getY()) / tileHeigth))).getTile().getProperties().containsKey(\"Collision\"); if (!(collisionY)) collisionY = collisionLayer.getCell(((int) (((player.getX()) + (player.getWidth())) / tileWidth)), ((int) ((player.getY()) / tileHeigth))).getTile().getProperties().containsKey(\"Collision\"); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4104/buggy-version/Blockster.core.src.main.java.edu.chalmers.Blockster.core.PlayerController.java", "BodyUseAPI": ["edu.chalmers.Blockster.core.Player.getX()", "collisionLayer.getCell(((int) ((player.getX()) / tileWidth)), ((int) ((player.getY()) / tileHeigth))).getTile()", "edu.chalmers.Blockster.core.Player.getX()", "edu.chalmers.Blockster.core.Player.getX()", "collisionLayer.getCell(((int) ((((player.getX()) + (player.getWidth())) / 2) / tileWidth)), ((int) ((player.getY()) / tileHeigth))).getTile().getProperties().containsKey(java.lang.String)", "edu.chalmers.Blockster.core.Player.getY()", "collisionLayer.getCell(((int) ((player.getX()) / tileWidth)), ((int) ((player.getY()) / tileHeigth))).getTile().getProperties().containsKey(java.lang.String)", "collisionLayer.getCell(((int) ((((player.getX()) + (player.getWidth())) / 2) / tileWidth)), ((int) ((player.getY()) / tileHeigth))).getTile().getProperties()", "collisionLayer.getCell(((int) ((((player.getX()) + (player.getWidth())) / 2) / tileWidth)), ((int) ((player.getY()) / tileHeigth))).getTile()", "edu.chalmers.Blockster.core.Player.getWidth()", "edu.chalmers.Blockster.core.Player.getY()", "collisionLayer.getCell(((int) (((player.getX()) + (player.getWidth())) / tileWidth)), ((int) ((player.getY()) / tileHeigth))).getTile().getProperties().containsKey(java.lang.String)", "com.badlogic.gdx.maps.tiled.TiledMapTileLayer.getCell(((int) (((player.getX()) + (player.getWidth())) / tileWidth)),((int) ((player.getY()) / tileHeigth)))", "collisionLayer.getCell(((int) ((player.getX()) / tileWidth)), ((int) ((player.getY()) / tileHeigth))).getTile().getProperties()", "collisionLayer.getCell(((int) (((player.getX()) + (player.getWidth())) / tileWidth)), ((int) ((player.getY()) / tileHeigth))).getTile().getProperties()", "edu.chalmers.Blockster.core.Player.getWidth()", "edu.chalmers.Blockster.core.Player.getY()", "collisionLayer.getCell(((int) (((player.getX()) + (player.getWidth())) / tileWidth)), ((int) ((player.getY()) / tileHeigth))).getTile()", "com.badlogic.gdx.maps.tiled.TiledMapTileLayer.getCell(((int) ((player.getX()) / tileWidth)),((int) ((player.getY()) / tileHeigth)))", "com.badlogic.gdx.maps.tiled.TiledMapTileLayer.getCell(((int) ((((player.getX()) + (player.getWidth())) / 2) / tileWidth)),((int) ((player.getY()) / tileHeigth)))"], "Fixed commit": "42ba9ed725ffe8c1ab516088568589eee2bd573e", "Url": "https://api.github.com/repos/oskarjonefors/TDA367", "Date": "2014-04-01T14:47:29Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { copy2ClipBoard(url2); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7496/buggy-version/app.src.main.java.com.yydcdut.note.mvp.v.WebViewActivity.java", "BodyUseAPI": ["com.yydcdut.note.mvp.v.WebViewActivity.1.copy2ClipBoard(java.lang.String)"], "Fixed commit": "98760799707d2741cb2b16c931760ae783e2ad70", "Url": "https://api.github.com/repos/yydcdut/PhotoNoter", "Date": "2016-01-19T05:56:11Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.io.File myFile = new java.io.File(\"Score.txt\"); java.io.FileReader fileReader = new java.io.FileReader(\"Score.txt\"); java.io.BufferedReader reader = new java.io.BufferedReader(fileReader); java.lang.String line = null; while ((line = reader.readLine()) != null) { array[a] = java.lang.Integer.parseInt(line); a++; } } catch (java.lang.Exception ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8687/buggy-version/src.edu.ucsb.cs56.S12.choice.issue842.RogueController.java", "BodyUseAPI": ["java.io.BufferedReader.readLine()", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "0e72702dcbccca07eddbc5c36859a7dbe93afe81", "Url": "https://api.github.com/repos/hmarasigan/cs56-games-roguelike", "Date": "2013-05-17T22:10:43Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { found = Person.Utility.search(ec, Teacher.entityName, pUser.present()); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/778/buggy-version/RujelUsers.Sources.net.rujel.user.TableLoginHandler.java", "BodyUseAPI": ["Person.Utility.search(com.webobjects.eocontrol.EOEditingContext,Teacher.entityName,pUser.present())", "net.rujel.auth.UserPresentation.present()"], "Fixed commit": "97826e80cc4646111575e75dc939f53f24eda932", "Url": "https://api.github.com/repos/baywind/rujel", "Date": "2011-09-05T14:46:15Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { thefuryoftherabbidgrans.server.globals.MySQLConnection.getInstance().execUpdate(((\"UPDATE gransCommunity.membres SET connected=0 WHERE nom_utilisateur='\" + (name)) + \"';\")); sendMessageToClient(\"C219\"); if ((game) != null) game.removePlayer(id); } catch (java.sql.SQLException ex) { java.util.logging.Logger.getLogger(thefuryoftherabbidgrans.server.implementations.Player.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1723/buggy-version/src.thefuryoftherabbidgrans.server.implementations.Player.java", "BodyUseAPI": ["thefuryoftherabbidgrans.server.globals.MySQLConnection.getInstance()", "thefuryoftherabbidgrans.server.interfaces.Game_INTERFACE.removePlayer(int)", "thefuryoftherabbidgrans.server.globals.MySQLConnection.getInstance().execUpdate(java.lang.String)", "thefuryoftherabbidgrans.server.implementations.Player.sendMessageToClient(java.lang.String)"], "Fixed commit": "deb590e723b543f93d4056f72155e183ceb14dc9", "Url": "https://api.github.com/repos/UCDP-Brony/FuryOfTheRabbidGransServer", "Date": "2016-07-21T16:23:12Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (nstuff.juggerfall.extension.baseobject.TimeUpdateEntity entity : allUpdate) { long delta = (java.lang.System.currentTimeMillis()) - (lastTime); entity.update(delta); } long delta = (java.lang.System.currentTimeMillis()) - (lastTime); update(delta); lastTime = java.lang.System.currentTimeMillis(); if (markToClear) { markToClear = false; allUpdate.clear(); } } catch (java.lang.RuntimeException e) { trace(ExtensionLogLevel.ERROR, (\"Game Rule IllegalAccessException \" + (e.getStackTrace().toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3644/buggy-version/src.nstuff.juggerfall.extension.MainExtension.java", "BodyUseAPI": ["java.lang.System.currentTimeMillis()", "java.lang.System.currentTimeMillis()", "java.util.concurrent.ConcurrentLinkedQueue<nstuff.juggerfall.extension.baseobject.TimeUpdateEntity>.clear()", "nstuff.juggerfall.extension.baseobject.TimeUpdateEntity.update(long)", "nstuff.juggerfall.extension.MainExtension.SecondRunner.update(long)", "java.lang.System.currentTimeMillis()"], "Fixed commit": "af9bd900da53a2b4c691acf79945fd16fd8df3e8", "Url": "https://api.github.com/repos/JazzyJohn/fox-server-side", "Date": "2014-09-15T14:13:06Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { pattern = java.util.regex.Pattern.compile(\"<message>(.+?)</message>\"); matcher = pattern.matcher(responseTxt.toString()); matcher.find(); if (!(\"OK\".equals(matcher.group(1)))) { errorMessage += (matcher.group(1)) + \". \"; } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8369/buggy-version/extension.src.tk.barrydegraaff.ocs.OCS.java", "BodyUseAPI": ["java.util.regex.Pattern.matcher(java.lang.String)", "java.lang.StringBuffer.toString()", "java.util.regex.Matcher.find()", "java.lang.String.equals(java.lang.String)", "java.util.regex.Matcher.group(int)", "java.util.regex.Pattern.compile(java.lang.String)", "java.util.regex.Matcher.group(int)"], "Fixed commit": "cc2ad652f97c5f1a37c88df77339fc15d81622ea", "Url": "https://api.github.com/repos/Zimbra-Community/OCS", "Date": "2017-12-30T10:04:38Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return entity.getTargetBlock(spell.getLosTransparentBlocks(), range); } catch (java.lang.IllegalStateException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6450/buggy-version/src.com.nisovin.magicspells.util.BlockUtils.java", "BodyUseAPI": ["com.nisovin.magicspells.Spell.getLosTransparentBlocks()", "org.bukkit.entity.LivingEntity.getTargetBlock(spell.getLosTransparentBlocks(),int)"], "Fixed commit": "f7e247e4d3e195b24449c32528b04399ee8c6161", "Url": "https://api.github.com/repos/nisovin/MagicSpells", "Date": "2014-10-08T20:33:03Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return entity.getLastTwoTargetBlocks(spell.getLosTransparentBlocks(), range); } catch (java.lang.IllegalStateException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6450/buggy-version/src.com.nisovin.magicspells.util.BlockUtils.java", "BodyUseAPI": ["org.bukkit.entity.LivingEntity.getLastTwoTargetBlocks(spell.getLosTransparentBlocks(),int)", "com.nisovin.magicspells.Spell.getLosTransparentBlocks()"], "Fixed commit": "f7e247e4d3e195b24449c32528b04399ee8c6161", "Url": "https://api.github.com/repos/nisovin/MagicSpells", "Date": "2014-10-08T20:33:03Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String qlString = \"SELECT SiteUser FROM SiteUser WHERE username LIKE :name\"; final javax.persistence.Query query = entityManager.createQuery(qlString); final javax.persistence.Query parametrizedQuery = query.setParameter(\"name\", name); return ((no.jenjon13.reeddit.data.entities.SiteUser) (parametrizedQuery.getSingleResult())); } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5629/buggy-version/src.main.java.no.jenjon13.reeddit.ejb.impl.SiteUserEJB.java", "BodyUseAPI": ["javax.persistence.Query.setParameter(java.lang.String,java.lang.String)", "no.jenjon13.reeddit.ejb.impl.SiteUserEJB.createQuery(java.lang.String)", "javax.persistence.Query.getSingleResult()"], "Fixed commit": "9b23ca511cbf8a0b8a0425505c5091bf960e7b7f", "Url": "https://api.github.com/repos/j0nas/JavaEE_exercises", "Date": "2016-05-14T16:11:55Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { utilityURL = utilityFile.toURI().toURL(); } catch (final java.net.MalformedURLException e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/39/buggy-version/src.edgruberman.bukkit.sleep.Main.java", "BodyUseAPI": ["java.io.File.toURI()", "java.net.URI.toURL()"], "Fixed commit": "e9ba3335bd38cae8716e660388074fa9ed0277d2", "Url": "https://api.github.com/repos/EdGruberman/Sleep", "Date": "2012-09-20T22:33:53Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { it.uniroma3.siw.model.Utente user = utenteRepository.findByUsername(getUtenteConnesso()).get(0); java.util.ArrayList<it.uniroma3.siw.model.Pipeline> pipeList = new java.util.ArrayList<>(); pipeList = ((java.util.ArrayList<it.uniroma3.siw.model.Pipeline>) (pipelineRepository.findByUser(user))); model.addAttribute(\"pipeList\", pipeList); } catch (java.lang.Exception e) { e.getMessage().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6662/buggy-version/src.main.java.it.uniroma3.siw.controller.KayakController.java", "BodyUseAPI": ["utenteRepository.findByUsername(getUtenteConnesso()).get(int)", "org.springframework.ui.ModelMap.addAttribute(java.lang.String,java.util.ArrayList<it.uniroma3.siw.model.Pipeline>)", "it.uniroma3.siw.controller.KayakController.getUtenteConnesso()", "it.uniroma3.siw.repository.PipelineRepository.findByUser(it.uniroma3.siw.model.Utente)", "it.uniroma3.siw.repository.UtenteRepository.findByUsername(java.lang.String)"], "Fixed commit": "cfe9153a1fa24ca1278ceac53718732d1be928fd", "Url": "https://api.github.com/repos/adileone/progettoSiw", "Date": "2017-06-20T11:39:50Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (logic.Task task : logic.Execution.mainList) { java.time.LocalDateTime taskDeadline = task.getEndDate(); if (taskDeadline != null) { java.time.LocalDate taskDeadlineDate = taskDeadline.toLocalDate(); if (currentDate.equals(taskDeadlineDate)) { count++; logic.Execution.categories.get(1).setCount(count); } } } } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1090/buggy-version/src.logic.Execution.java", "BodyUseAPI": ["logic.Task.getEndDate()", "java.time.LocalDate.equals(java.time.LocalDate)", "java.util.ArrayList<logic.Category>.get(int)", "logic.Execution.categories.get(1).setCount(int)", "java.time.LocalDateTime.toLocalDate()"], "Fixed commit": "c81411d0dd1fcf81e48c869c920c51d0c03a2caa", "Url": "https://api.github.com/repos/cs2103jan2016-w09-4j/main", "Date": "2016-03-29T11:13:32Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.carRepair.carRepair.Domain.Member member = searchService.getMemberByVatOrMail(searchForm.getVat(), searchForm.getEmail()); } catch (com.carRepair.carRepair.Exceptions.UserNotFoundException userNotFound) { java.lang.System.out.println((\"User not Found controller\" + userNotFound)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5270/buggy-version/src.main.java.com.carRepair.carRepair.Web.AdminControllers.AdminController.java", "BodyUseAPI": ["com.carRepair.carRepair.Forms.SearchForm.getEmail()", "com.carRepair.carRepair.Services.SearchService.getMemberByVatOrMail(searchForm.getVat(),searchForm.getEmail())", "com.carRepair.carRepair.Forms.SearchForm.getVat()"], "Fixed commit": "f645f9af2a087b1e8190cf26ac8b163922ddd454", "Url": "https://api.github.com/repos/d-elz/carRepair", "Date": "2017-10-19T10:48:46Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { tr = getTr(); } catch (org.jtrfp.trcl.core.FeaturesImpl.FeatureNotFoundException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1828/buggy-version/src.main.java.org.jtrfp.trcl.obj.MiniMap.java", "BodyUseAPI": ["org.jtrfp.trcl.obj.MiniMap.getTr()"], "Fixed commit": "8f39d73b8c1161ff61bc8fb264b738f1f3f086d8", "Url": "https://api.github.com/repos/jtrfp/terminal-recall", "Date": "2016-07-10T06:34:05Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { html = ((android.text.SpannableStringBuilder) (android.text.Html.fromHtml(text, null, new org.wordpress.android.util.WPHtmlTagHandler()))); } catch (java.lang.RuntimeException runtimeException) { html = ((android.text.SpannableStringBuilder) (android.text.Html.fromHtml(text, null, null))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2633/buggy-version/src.org.wordpress.android.models.Note.java", "BodyUseAPI": ["android.text.Html.fromHtml(java.lang.String,<nulltype>,org.wordpress.android.util.WPHtmlTagHandler)"], "Fixed commit": "c1fe8cae8fa81fb8c78a8c46e8924a305d9902d0", "Url": "https://api.github.com/repos/aagam-shah/WordPress-Android-1", "Date": "2013-12-26T16:55:46Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(processingDelay); } catch (java.lang.InterruptedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3503/buggy-version/seep-system.examples.acita_demo_2015.src.uk.ac.imperial.lsds.seep.acita15.operators.Processor.java", "BodyUseAPI": ["java.lang.Thread.sleep(long)"], "Fixed commit": "69f9eb212e161d8ed42b31190161fc427306b418", "Url": "https://api.github.com/repos/lsds/SEEP", "Date": "2015-08-21T18:30:04Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(15000); } catch (java.lang.InterruptedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3503/buggy-version/seep-system.examples.acita_demo_2015.src.uk.ac.imperial.lsds.seep.acita15.operators.LocationSource.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "69f9eb212e161d8ed42b31190161fc427306b418", "Url": "https://api.github.com/repos/lsds/SEEP", "Date": "2015-08-21T18:30:04Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { setResource(getApi().userResource.getInterestResource(getUserId())); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3517/buggy-version/client.src.main.java.uk.ac.cam.echo.client.data.InterestData.java", "BodyUseAPI": ["uk.ac.cam.echo.client.data.InterestData.getUserId()", "uk.ac.cam.echo.client.data.InterestData.getApi()", "uk.ac.cam.echo.client.data.InterestData.setResource(getApi().userResource.getInterestResource(getUserId()))", "getApi().userResource.getInterestResource(java.lang.Long)"], "Fixed commit": "72b4ff6ef4a1d5022c8f173229ecfa0ceb523cf1", "Url": "https://api.github.com/repos/PetarV-/CSTIB-Echo", "Date": "2014-03-01T17:42:56Z"},
{"Line": "=>1177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.opencms.file.CmsResource formatterResource = cms.readResource(formatterConfig.getJspStructureId()); formatter = cms.getSitePath(formatterResource); } catch (org.opencms.file.CmsVfsResourceNotFoundException ex) { formatter = cms.getRequestContext().removeSiteRoot(formatterConfig.getJspRootPath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2416/buggy-version/src.org.opencms.jsp.CmsJspTagContainer.java", "BodyUseAPI": ["org.opencms.file.CmsObject.readResource(formatterConfig.getJspStructureId())", "org.opencms.xml.containerpage.I_CmsFormatterBean.getJspStructureId()", "org.opencms.file.CmsObject.getSitePath(org.opencms.file.CmsResource)"], "Fixed commit": "7e2adf42b5809cc4bb92c91838a26406bc0eda33", "Url": "https://api.github.com/repos/gallardo/opencms-core", "Date": "2014-08-14T07:13:47Z"},
{"Line": "=>1205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.opencms.file.CmsResource formatterResource = cms.readResource(elementFormatterBean.getJspStructureId()); formatter = cms.getSitePath(formatterResource); } catch (org.opencms.file.CmsVfsResourceNotFoundException ex) { formatter = cms.getRequestContext().removeSiteRoot(elementFormatterBean.getJspRootPath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2416/buggy-version/src.org.opencms.jsp.CmsJspTagContainer.java", "BodyUseAPI": ["org.opencms.xml.containerpage.I_CmsFormatterBean.getJspStructureId()", "org.opencms.file.CmsObject.getSitePath(org.opencms.file.CmsResource)", "org.opencms.file.CmsObject.readResource(elementFormatterBean.getJspStructureId())"], "Fixed commit": "7e2adf42b5809cc4bb92c91838a26406bc0eda33", "Url": "https://api.github.com/repos/gallardo/opencms-core", "Date": "2014-08-14T07:13:47Z"},
{"Line": "=>1118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.opencms.file.CmsResource formatterResource = cms.readResource(subElementFormatterConfig.getJspStructureId()); formatterSitePath = cms.getSitePath(formatterResource); } catch (org.opencms.file.CmsVfsResourceNotFoundException ex) { formatterSitePath = cms.getRequestContext().removeSiteRoot(subElementFormatterConfig.getJspRootPath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2416/buggy-version/src.org.opencms.jsp.CmsJspTagContainer.java", "BodyUseAPI": ["org.opencms.file.CmsObject.getSitePath(org.opencms.file.CmsResource)", "org.opencms.file.CmsObject.readResource(subElementFormatterConfig.getJspStructureId())", "org.opencms.xml.containerpage.I_CmsFormatterBean.getJspStructureId()"], "Fixed commit": "7e2adf42b5809cc4bb92c91838a26406bc0eda33", "Url": "https://api.github.com/repos/gallardo/opencms-core", "Date": "2014-08-14T07:13:47Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.content.Intent intent = new android.content.Intent(android.provider.Settings.ACTION_MANAGE_OVERLAY_PERMISSION, android.net.Uri.parse((\"package:\" + (getPackageName())))); startActivityForResult(intent, com.idoideas.xoutof10.MainActivity.REQUEST_CODE); } catch (android.content.ActivityNotFoundException e) { android.widget.Toast.makeText(getApplicationContext(), \"Couldn\\'t find overlay premission activity.\\nPlease permit drawing over apps manually through the device settings.\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1399/buggy-version/app.src.main.java.com.idoideas.xoutof10.MainActivity.java", "BodyUseAPI": ["android.net.Uri.parse((\"package:\" + (getPackageName())))", "com.idoideas.xoutof10.MainActivity.startActivityForResult(android.content.Intent,int)", "com.idoideas.xoutof10.MainActivity.getPackageName()"], "Fixed commit": "4c91746efa8e110e1f20f55d448f7c3525cb52d0", "Url": "https://api.github.com/repos/idoideas/XOutOf10", "Date": "2017-09-20T00:03:20Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { clientResp = service.path(\"Priam/REST/v1/cassadmin/gossipinfo\").accept(MediaType.APPLICATION_JSON).get(com.sun.jersey.api.client.ClientResponse.class); if ((clientResp.getStatus()) != 200) return null; textEntity = clientResp.getEntity(java.lang.String.class); com.netflix.priam.identity.InstanceIdentity.logger.info((((((\"Respond from calling gossipinfo on host[\" + host) + \"] and token[\") + token) + \"] : \") + textEntity)); if (org.apache.commons.lang.StringUtils.isEmpty(textEntity)) return null; } catch (java.lang.Exception e) { com.netflix.priam.identity.InstanceIdentity.logger.debug((\"Error in reaching out to host: \" + (getBaseURI(host)))); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7839/buggy-version/priam.src.main.java.com.netflix.priam.identity.InstanceIdentity.java", "BodyUseAPI": ["service.path(\"Priam/REST/v1/cassadmin/gossipinfo\").accept(MediaType.APPLICATION_JSON)", "org.apache.commons.lang.StringUtils.isEmpty(java.lang.String)", "com.sun.jersey.api.client.ClientResponse.getStatus()", "service.path(\"Priam/REST/v1/cassadmin/gossipinfo\").accept(MediaType.APPLICATION_JSON).get(java.lang.Class)", "com.sun.jersey.api.client.ClientResponse.getEntity(java.lang.Class)", "com.sun.jersey.api.client.WebResource.path(java.lang.String)", "org.slf4j.Logger.info(java.lang.String)"], "Fixed commit": "322df42a8a3ca19312d854af297aa63cf5982558", "Url": "https://api.github.com/repos/Netflix/Priam", "Date": "2014-05-06T18:35:05Z"},
{"Line": "=>528", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { is.readFully(b); } catch (java.io.EOFException e) { if (failureBehavior == (FailureBehavior.UNRECOGNIZED_FORMAT)) throw new org.jtrfp.jfdt.UnrecognizedFormatException(); else throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7762/buggy-version/src.main.java.org.jtrfp.jfdt.Parser.java", "BodyUseAPI": ["org.jtrfp.jfdt.EndianAwareDataInputStream.readFully(byte[])"], "Fixed commit": "f6e4a7e48df1f6de1ce9aa94556e7035890edef9", "Url": "https://api.github.com/repos/jtrfp/jfdt", "Date": "2014-06-21T06:20:13Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { user = facebook.userOperations().getUserProfile(reference.getId()); } catch (org.springframework.social.UncategorizedApiException e) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1502/buggy-version/Tarapana.social_webapp.src.main.java.com.endava.tarapana.social_webapp.FetchDataController.java", "BodyUseAPI": ["org.springframework.social.facebook.api.Facebook.userOperations()", "facebook.userOperations().getUserProfile(reference.getId())", "org.springframework.social.facebook.api.Reference.getId()"], "Fixed commit": "00ce6efdf7b09801ab880ca56a7733dd0c9f1f6f", "Url": "https://api.github.com/repos/kvatrom/tarapana", "Date": "2016-02-28T13:30:32Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { double doubleValue = java.lang.Double.parseDouble(value); if (key == null) { query = query.equalTo(doubleValue); }else { query = query.equalTo(doubleValue, key); } } catch (java.lang.NumberFormatException ex) { if ((\"true\".equals(value)) || (\"false\".equals(value))) { boolean booleanValue = java.lang.Boolean.parseBoolean(value); if (key == null) { query = query.equalTo(booleanValue); }else { query = query.equalTo(booleanValue, key); } }else { if (key == null) { query = query.equalTo(value); }else { query = query.equalTo(value, key); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/480/buggy-version/android.src.main.java.io.fullstack.firestack.database.FirestackDatabaseReference.java", "BodyUseAPI": ["com.google.firebase.database.Query.equalTo(double)", "java.lang.Double.parseDouble(java.lang.String)", "com.google.firebase.database.Query.equalTo(double,java.lang.String)"], "Fixed commit": "e7713256370fb75a67d13c35ffb678eb24cf2a79", "Url": "https://api.github.com/repos/chrisbianca/react-native-firestack", "Date": "2016-12-02T17:18:22Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { double doubleValue = java.lang.Double.parseDouble(value); if (key == null) { query = query.endAt(doubleValue); }else { query = query.endAt(doubleValue, key); } } catch (java.lang.NumberFormatException ex) { if ((\"true\".equals(value)) || (\"false\".equals(value))) { boolean booleanValue = java.lang.Boolean.parseBoolean(value); if (key == null) { query = query.endAt(booleanValue); }else { query = query.endAt(booleanValue, key); } }else { if (key == null) { query = query.endAt(value); }else { query = query.endAt(value, key); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/480/buggy-version/android.src.main.java.io.fullstack.firestack.database.FirestackDatabaseReference.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)", "com.google.firebase.database.Query.endAt(double,java.lang.String)", "com.google.firebase.database.Query.endAt(double)"], "Fixed commit": "e7713256370fb75a67d13c35ffb678eb24cf2a79", "Url": "https://api.github.com/repos/chrisbianca/react-native-firestack", "Date": "2016-12-02T17:18:22Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mins = java.lang.Integer.parseInt(minutes); } catch (java.lang.NumberFormatException nfe) { for (java.lang.Character c : minutes.toCharArray()) { if (java.lang.Character.isDigit(c)) { mins = (mins * 10) + (java.lang.Character.getNumericValue(c)); }else { break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1623/buggy-version/src.main.java.com.cerner.intern.traqr.servlets.UploadConnectionServlet.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "8d9757bba9e6320c327eb50f0a1243524961c9c5", "Url": "https://api.github.com/repos/maxshort/traQR", "Date": "2015-07-20T08:08:03Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { type = org.deidentifier.arx.DataType.createOrderedString(array); if (!(isValidDataType(type, model.getItems()))) { type = org.deidentifier.arx.DataType.STRING; combo.select(((getIndexOfDataType(DataType.STRING)) + 1)); } } catch (java.lang.Exception e) { controller.actionShowInfoDialog(\"Error\", (\"Cannot create data type: \" + (e.getMessage()))); type = org.deidentifier.arx.DataType.STRING; combo.select(((getIndexOfDataType(DataType.STRING)) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4207/buggy-version/src.gui.org.deidentifier.arx.gui.view.impl.menu.WizardHierarchyPageOrder.java", "BodyUseAPI": ["org.deidentifier.arx.gui.view.impl.menu.WizardHierarchyPageOrder.3.isValidDataType(org.deidentifier.arx.DataType<?>,model.getItems())", "org.deidentifier.arx.gui.view.impl.menu.WizardHierarchyModel.getItems()", "org.eclipse.swt.widgets.Combo.select(((getIndexOfDataType(DataType.STRING)) + 1))", "org.deidentifier.arx.DataType.createOrderedString(java.lang.String[])", "org.deidentifier.arx.gui.view.impl.menu.WizardHierarchyPageOrder.3.getIndexOfDataType(DataType.STRING)"], "Fixed commit": "460fb52bb25a5f84f9cd8bc8b861388f1dd36e14", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2014-04-11T14:37:33Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { properties.load(new java.io.FileInputStream(file)); } catch (java.io.IOException e) { java.lang.System.out.println((\"Unable to load properties file\" + e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3505/buggy-version/src.main.java.com.ritchie.chris.properties.PropertyFileResolver.java", "BodyUseAPI": ["java.util.Properties.load(java.io.FileInputStream)"], "Fixed commit": "1287fe3e6a115add43c66dfb5ffb07467c7531b3", "Url": "https://api.github.com/repos/ChrisRitchie/CDI-injecting-properties", "Date": "2015-03-12T07:10:11Z"},
{"Line": "=>518", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { taskCls = dep.deployedClass(taskName); } catch (java.lang.Throwable t) { throw new org.apache.ignite.internal.IgniteDeploymentCheckedException((((((\"Failed to auto-deploy \" + \"task (was task (re|un)deployed?) [taskName=\") + taskName) + \", dep=\") + dep) + ']')); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4679/buggy-version/modules.core.src.main.java.org.apache.ignite.internal.processors.task.GridTaskProcessor.java", "BodyUseAPI": ["org.apache.ignite.internal.managers.deployment.GridDeployment.deployedClass(java.lang.String)"], "Fixed commit": "7e5b51486ccff375b943f6ce2e1bc5505d39400e", "Url": "https://api.github.com/repos/gridgain/apache-ignite", "Date": "2016-09-19T16:27:11Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return resultJson.elements().next().get(\"Physics\").asDouble(); } catch (java.lang.NullPointerException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2039/buggy-version/src.main.java.rcms.utilities.daqaggregator.datasource.F3DataRetriever.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.JsonNode.elements()", "resultJson.elements().next().get(\"Physics\").asDouble()", "resultJson.elements().next().get(java.lang.String)", "resultJson.elements().next()"], "Fixed commit": "31ab420c72e79b09a92ccb45fa8d0af48e4894f5", "Url": "https://api.github.com/repos/cmsdaq/DAQAggregator", "Date": "2017-03-02T12:50:53Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { readJSON = ((net.minidev.json.JSONObject) (net.minidev.json.JSONValue.parseWithException(r))); } catch (java.lang.ClassCastException e) { return new net.minidev.json.JSONObject(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/958/buggy-version/plugin-ceno.src.plugins.CeNo.CeNoHandler.java", "BodyUseAPI": ["net.minidev.json.JSONValue.parseWithException(java.io.BufferedReader)"], "Fixed commit": "08f8b80474ecf676182cdc825cb464d2d0631619", "Url": "https://api.github.com/repos/misaakidis/ceno", "Date": "2015-02-12T18:02:50Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { process = java.lang.Runtime.getRuntime().exec(command); } catch (java.io.IOException e) { cz.zcu.kiv.Server.SparkSubmitService.logger.info(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8366/buggy-version/src.main.java.cz.zcu.kiv.Server.SparkSubmitService.java", "BodyUseAPI": ["java.lang.Runtime.getRuntime()", "java.lang.Runtime.exec(java.lang.String[])"], "Fixed commit": "ee59c1a801e5b8b61b8813e2660c0d33e8a15632", "Url": "https://api.github.com/repos/dorianbg/EEG_RemoteServer", "Date": "2017-08-28T09:53:23Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (de.cismet.cids.custom.objectrenderer.utils.billing.BillingPopup.doBilling(\"appdf\", \"no.yet\", ((com.vividsolutions.jts.geom.Geometry) (null)), new de.cismet.cids.custom.objectrenderer.utils.billing.ProductGroupAmount(\"ea\", 1))) { de.cismet.tools.CismetThreadPool.execute(new de.cismet.cids.custom.objectrenderer.wunda_blau.AlkisPointAggregationRenderer.GenerateAPMapReport(selectedAlkisPoints)); } } catch (java.lang.Exception e) { de.cismet.cids.custom.objectrenderer.wunda_blau.AlkisPointAggregationRenderer.log.error(\"Error when trying to produce a alkis product\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5594/buggy-version/src.main.java.de.cismet.cids.custom.objectrenderer.wunda_blau.AlkisPointAggregationRenderer.java", "BodyUseAPI": ["de.cismet.cids.custom.objectrenderer.utils.billing.BillingPopup.doBilling(java.lang.String,java.lang.String,<nulltype>,de.cismet.cids.custom.objectrenderer.utils.billing.ProductGroupAmount)", "de.cismet.tools.CismetThreadPool.execute(de.cismet.cids.custom.objectrenderer.wunda_blau.AlkisPointAggregationRenderer.GenerateAPMapReport)"], "Fixed commit": "2474fe49ce9944194f5d9c534d5626eae7103b91", "Url": "https://api.github.com/repos/cismet/cids-custom-wuppertal", "Date": "2012-07-19T09:27:52Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { filePath = new java.io.File(path).getCanonicalFile(); } catch (java.io.IOException e) { com.polyvi.xface.util.XLog.e(com.polyvi.xface.util.XFileUtils.CLASS_NAME, e.getMessage()); e.printStackTrace(); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3766/buggy-version/framework.src.com.polyvi.xface.util.XFileUtils.java", "BodyUseAPI": ["java.io.File.getCanonicalFile()"], "Fixed commit": "19a13631114bd2d2700ffbdf4a68c81e88dd3671", "Url": "https://api.github.com/repos/polyvi/xface-android", "Date": "2014-01-02T07:48:51Z"},
{"Line": "=>458", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { camera = android.hardware.Camera.open(); zoomControls = ((android.widget.ZoomControls) (findViewById(R.id.zoomControls))); } catch (java.lang.RuntimeException e) { java.lang.System.err.println(e); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5164/buggy-version/app.src.main.java.com.example.gaby.c_color.MainActivity.java", "BodyUseAPI": ["com.example.gaby.c_color.MainActivity.findViewById(R.id.zoomControls)", "android.hardware.Camera.open()"], "Fixed commit": "9b960ee8563e776b40403df70b060a279ee65616", "Url": "https://api.github.com/repos/gnahum12345/C-Color-Android", "Date": "2016-01-15T00:48:05Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { validID = handler.getControlFlowHandler().replaceID(vertex.getID(), validID); if (vertex instanceof org.yawlfoundation.yawl.editor.ui.elements.model.YAWLTask) { handler.getResourceHandler().replaceID(vertex.getID(), validID); } vertex.setID(validID); } catch (org.yawlfoundation.yawl.editor.core.exception.IllegalIdentifierException iie) { javax.swing.JOptionPane.showMessageDialog(org.yawlfoundation.yawl.editor.ui.YAWLEditor.getInstance(), (\"Label updated, but failed to synch element identifier - \" + (iie.getMessage())), \"Element Identifier Synchronisation Failed\", javax.swing.JOptionPane.WARNING_MESSAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5667/buggy-version/source.org.yawlfoundation.yawl.editor.ui.swing.element.LabelElementDialog.java", "BodyUseAPI": ["handler.getControlFlowHandler().replaceID(vertex.getID(),java.lang.String)", "org.yawlfoundation.yawl.editor.core.YSpecificationHandler.getControlFlowHandler()", "org.yawlfoundation.yawl.editor.ui.elements.model.YAWLVertex.setID(java.lang.String)", "org.yawlfoundation.yawl.editor.ui.elements.model.YAWLVertex.getID()", "org.yawlfoundation.yawl.editor.core.YSpecificationHandler.getResourceHandler()", "handler.getResourceHandler().replaceID(vertex.getID(),java.lang.String)", "org.yawlfoundation.yawl.editor.ui.elements.model.YAWLVertex.getID()"], "Fixed commit": "708a1471ebaacbc6ce3253f2dc738736a70db1d7", "Url": "https://api.github.com/repos/yawlfoundation/editor", "Date": "2015-09-19T10:27:53Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { v.download(); } catch (java.lang.Exception e) { java.lang.System.out.println(\"Something wrong with downloading this video.. moving on\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3210/buggy-version/src.youtube.DownloadVideo.java", "BodyUseAPI": ["com.github.axet.vget.VGet.download()"], "Fixed commit": "293449d976ec5be08c03dfe8f1898bf5c5aeff28", "Url": "https://api.github.com/repos/shwinay/Spotify-Playlist-Downloader", "Date": "2016-10-28T23:55:14Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { uk.ac.cam.echo2016.multinarrative.preview.TextPreview preview = new uk.ac.cam.echo2016.multinarrative.preview.TextPreview(f); preview.preview(java.lang.System.out, java.lang.System.out, java.lang.System.in); } catch (java.io.IOException ioe) { java.lang.System.out.println(ioe.getMessage()); } catch (uk.ac.cam.echo2016.multinarrative.InvalidGraphException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5408/buggy-version/src.main.java.uk.ac.cam.echo2016.multinarrative.preview.TextPreview.java", "BodyUseAPI": ["uk.ac.cam.echo2016.multinarrative.preview.TextPreview.preview(java.io.PrintStream,java.io.PrintStream,java.io.InputStream)"], "Fixed commit": "106004cdaa5a6588437f0b8558728dd4d6c506b6", "Url": "https://api.github.com/repos/echocam/dynamo", "Date": "2016-02-24T23:18:04Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (java.lang.String supportedOperation : supportedOperations) { operations.add(com.stratio.crossdata.common.metadata.Operations.valueOf(supportedOperation.toUpperCase())); } } catch (java.lang.IllegalArgumentException ex) { throw new com.stratio.crossdata.common.exceptions.ManifestException(ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2036/buggy-version/crossdata-common.src.main.java.com.stratio.crossdata.common.metadata.ConnectorMetadata.java", "BodyUseAPI": ["com.stratio.crossdata.common.metadata.Operations.valueOf(java.lang.String)", "java.lang.String.toUpperCase()", "java.util.Set<com.stratio.crossdata.common.metadata.Operations>.add(com.stratio.crossdata.common.metadata.Operations.valueOf(supportedOperation.toUpperCase()))"], "Fixed commit": "4f6ad803d301f1a5d754d1869d8efe6888aa30a8", "Url": "https://api.github.com/repos/Stratio/crossdata", "Date": "2014-11-25T09:55:36Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String str = pIoT.server.SerialServiceImpl.port.readString(); if (str != null) { pIoT.server.SerialServiceImpl.logger.info((\"Com port says: \" + str)); long now = java.util.Calendar.getInstance().getTimeInMillis(); if ((now - (lastRead)) > 10000) stringBuffer = str; else stringBuffer += str; java.lang.Object o = pIoT.server.ObjectParser.parse(str); while (o != null) { if (o instanceof pIoT.shared.messages.DataMessage) { pIoT.server.SerialServiceImpl.logger.info((\"Object parsed from serial com of class \" + (o.getClass().getName()))); pIoT.shared.messages.DataMessage m = ((pIoT.shared.messages.DataMessage) (o)); m.setReceivedTimestamp(java.util.Calendar.getInstance().getTime()); m.setSourceMessage(pIoT.server.ObjectParser.getParsedMessage()); pIoT.server.DBServiceImpl.store(m); pIoT.server.SerialServiceImpl.logger.finer(\"Object stored\"); int devAddr = m.getSourceAddress(); if (devAddr != 0) { manageDevice(devAddr); } }else if (o instanceof java.lang.Error) { java.lang.Error er = ((java.lang.Error) (o)); if ((er.getSeverity()) == 0) pIoT.server.SerialServiceImpl.logger.info(er.getMessage()); else if ((er.getSeverity()) == 1) pIoT.server.SerialServiceImpl.logger.warning(er.getMessage()); else pIoT.server.SerialServiceImpl.logger.severe(er.getMessage()); }else { pIoT.server.SerialServiceImpl.logger.severe(((\"Object parsed from serial com is of class \" + (o.getClass().getName())) + \" that is not a DataMessage\")); } o = pIoT.server.ObjectParser.parse(\"\"); } } } catch (pIoT.server.jssc e) { pIoT.server.SerialServiceImpl.logger.log(java.util.logging.Level.WARNING, \"Error while reading serial event\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4002/buggy-version/src.pIoT.server.SerialServiceImpl.java", "BodyUseAPI": ["pIoT.shared.messages.DataMessage.getSourceAddress()", "java.lang.Error.getSeverity()", "java.lang.Error.getSeverity()", "java.util.logging.Logger.finer(java.lang.String)", "pIoT.server.SerialServiceImpl.1.manageDevice(int)", "java.lang.Error.getMessage()", "java.util.Calendar.getInstance()", "pIoT.server.ObjectParser.getParsedMessage()", "jssc.SerialPort.readString()", "java.util.logging.Logger.severe(java.lang.String)", "java.lang.Object.getClass()", "java.util.Calendar.getInstance()", "pIoT.shared.messages.DataMessage.setSourceMessage(pIoT.server.ObjectParser.getParsedMessage())", "pIoT.server.DBServiceImpl.store(pIoT.shared.messages.DataMessage)", "java.util.Calendar.getTime()", "java.lang.Error.getMessage()", "pIoT.shared.messages.DataMessage.setReceivedTimestamp(java.util.Date)", "java.util.logging.Logger.info(java.lang.String)", "java.util.logging.Logger.info(java.lang.String)", "java.util.Calendar.getTimeInMillis()", "java.lang.Class<? extends java.lang.Object>.getName()", "java.util.logging.Logger.severe(java.lang.String)", "pIoT.server.ObjectParser.parse(java.lang.String)", "java.lang.Object.getClass()", "java.lang.Class<? extends java.lang.Object>.getName()", "java.lang.Error.getMessage()", "pIoT.server.ObjectParser.parse(java.lang.String)", "java.util.logging.Logger.info(java.lang.String)", "java.util.logging.Logger.warning(java.lang.String)"], "Fixed commit": "8a76767c2913f4745fbe5db3f776bc69b7a8b50f", "Url": "https://api.github.com/repos/dariosalvi78/pIoT-SW", "Date": "2014-09-01T08:12:26Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.apache.stratos.messaging.message.receiver.topology.TopologyManager.acquireReadLock(); if (org.apache.stratos.messaging.message.receiver.topology.TopologyManager.getTopology().isInitialized()) { if ((org.apache.stratos.messaging.message.receiver.topology.TopologyManager.getTopology().getServices()) == null) { return null; } for (org.apache.stratos.cep.extension.Service service : org.apache.stratos.messaging.message.receiver.topology.TopologyManager.getTopology().getServices()) { if ((service.getClusters()) != null) { for (org.apache.stratos.cep.extension.Cluster cluster : service.getClusters()) { if ((cluster.getMembers()) != null) { for (org.apache.stratos.cep.extension.Member member : cluster.getMembers()) { if (memberId.equals(member.getMemberId())) { return member; } } } } } } } } catch (java.lang.Exception e) { org.apache.stratos.cep.extension.FaultHandlingWindowProcessor.log.error((\"Failed to retrieve member from the topology.\" + (e.getMessage()))); } finally { org.apache.stratos.messaging.message.receiver.topology.TopologyManager.releaseReadLock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7794/buggy-version/extensions.cep.stratos-cep-extension.src.main.java.org.apache.stratos.cep.extension.FaultHandlingWindowProcessor.java", "BodyUseAPI": ["org.apache.stratos.cep.extension.Service.getClusters()", "org.apache.stratos.messaging.message.receiver.topology.TopologyManager.getTopology().getServices()", "org.apache.stratos.cep.extension.Cluster.getMembers()", "org.apache.stratos.cep.extension.Member.getMemberId()", "org.apache.stratos.messaging.message.receiver.topology.TopologyManager.getTopology()", "org.apache.stratos.cep.extension.Cluster.getMembers()", "org.apache.stratos.messaging.message.receiver.topology.TopologyManager.acquireReadLock()", "org.apache.stratos.messaging.message.receiver.topology.TopologyManager.getTopology().getServices()", "org.apache.stratos.messaging.message.receiver.topology.TopologyManager.getTopology()", "org.apache.stratos.messaging.message.receiver.topology.TopologyManager.getTopology().isInitialized()", "org.apache.stratos.cep.extension.Service.getClusters()", "java.lang.String.equals(member.getMemberId())", "org.apache.stratos.messaging.message.receiver.topology.TopologyManager.getTopology()"], "Fixed commit": "219af13e7f73280cf8b315e37d777c5233221c28", "Url": "https://api.github.com/repos/ravihansa3000/stratos", "Date": "2014-09-25T13:15:01Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { account = userDAO.findByUsername(username); } catch (java.lang.Exception x) { throw new org.springframework.security.core.userdetails.UsernameNotFoundException(((\"Could not find the user '\" + username) + \"'\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3600/buggy-version/src.main.java.it.consoft.security.RestUserDetailService.java", "BodyUseAPI": ["it.consoft.dao.UserDAO.findByUsername(java.lang.String)"], "Fixed commit": "6e1432f0d4bc140b00676d5d63f98e7695c57042", "Url": "https://api.github.com/repos/bruno-vignola/spring-boot-ds-c3p0", "Date": "2016-05-26T09:06:49Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { at.kleinknes.BookServiceClient.BookToXML.main(args); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4359/buggy-version/src.main.java.at.kleinknes.BookServiceClient.App.java", "BodyUseAPI": ["at.kleinknes.BookServiceClient.BookToXML.main(java.lang.String[])"], "Fixed commit": "6331f2976f7a78253e56b54e746ee64d5eca06c2", "Url": "https://api.github.com/repos/knesomatik/BIF-SKS-WS15-Client", "Date": "2015-11-05T11:48:43Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mycount = result.get(option[i].trim()); } catch (java.lang.Exception e) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2392/buggy-version/src.com.swallow.PushVoteServlet.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)", "java.lang.String.trim()"], "Fixed commit": "422367a58e281701a9e5a122b05c7d396f73101c", "Url": "https://api.github.com/repos/swallowcc/pushvote", "Date": "2014-06-05T01:32:33Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return bitmap.getPixel(((int) (touchAt.x)), ((int) (touchAt.y))); } catch (java.lang.IllegalArgumentException ex) { ex.printStackTrace(); return sfllhkhan95.doodle.core.PaintCanvas.DEFAULT_BG_COLOR; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5690/buggy-version/app.src.main.java.sfllhkhan95.doodle.core.PaintCanvas.java", "BodyUseAPI": ["android.graphics.Bitmap.getPixel(((int) (touchAt.x)),((int) (touchAt.y)))"], "Fixed commit": "086844438fb233a1a7928d72047d0782c4b189ab", "Url": "https://api.github.com/repos/saifkhichi96/paint", "Date": "2017-12-29T13:52:25Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mapConnector.putAll(map); } catch (java.lang.Exception ex) { throw new java.lang.RuntimeException(ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1415/buggy-version/src.main.java.de.timoh.sphm.SimplePersistentHashMap.java", "BodyUseAPI": ["de.timoh.sphm.connector.MapConnector<K, V>.putAll(java.util.Map<? extends K, ? extends V>)"], "Fixed commit": "006ea9f2cd673746b8d4c11e8c12ac5dced7aa0c", "Url": "https://api.github.com/repos/TimoHanisch/SimplePersistentHashMap", "Date": "2014-08-20T13:06:24Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { update(\"set @slave_uuid=uuid()\"); } catch (java.lang.Exception e) { if (!(org.apache.commons.lang.StringUtils.contains(e.getMessage(), \"Unknown system variable\"))) { com.alibaba.otter.canal.parse.inbound.mysql.MysqlConnection.logger.warn(org.apache.commons.lang.exception.ExceptionUtils.getFullStackTrace(e)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/24/buggy-version/parse.src.main.java.com.alibaba.otter.canal.parse.inbound.mysql.MysqlConnection.java", "BodyUseAPI": ["com.alibaba.otter.canal.parse.inbound.mysql.MysqlConnection.update(java.lang.String)"], "Fixed commit": "b2a5f482ee6269242a6ba13cd99283149f689c98", "Url": "https://api.github.com/repos/luoyaogui/canal", "Date": "2017-04-01T13:01:07Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((store.getTestMatrix(revision)) != null) { return store; } } catch (final com.indeed.proctor.store.StoreException e) { com.indeed.proctor.webapp.controllers.AbstractController.LOGGER.info(java.lang.String.format(\"Failed to find revision %s in %s\", revision, store.getName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4263/buggy-version/src.main.java.com.indeed.proctor.webapp.controllers.AbstractController.java", "BodyUseAPI": ["com.indeed.proctor.store.ProctorStore.getTestMatrix(java.lang.String)"], "Fixed commit": "169c6c6fe64ee2b5b7652480e9d3d8a8b3c2bdb7", "Url": "https://api.github.com/repos/indeedeng/proctor-webapp-library", "Date": "2016-11-11T08:20:30Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { os = java.lang.System.getProperty(\"os.name\").substring(0, 7); } catch (java.lang.StringIndexOutOfBoundsException e) { return text; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6992/buggy-version/src.main.java.me.danjono.inventoryrollback.InventoryRollback.java", "BodyUseAPI": ["java.lang.System.getProperty(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "47e928d0d16280936eb9ed2b2c1088cecc847f81", "Url": "https://api.github.com/repos/danjono/InventoryRollback", "Date": "2017-11-15T21:45:42Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { createImport(); } catch (org.tmatesoft.sqljet.core.SqlJetException e) { e.printStackTrace(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4946/buggy-version/src.ClassAdminBackEnd.XlsImport.java", "BodyUseAPI": ["ClassAdminBackEnd.XlsImport.createImport()"], "Fixed commit": "7bdfc945f3ab1936ae2d32770daeefb5a2974f0c", "Url": "https://api.github.com/repos/undeadpebble/UP-Class-Admin", "Date": "2012-09-15T11:58:36Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { getManager().flush(); return new java.lang.String(getManager().getByteArrayOutputStream().toByteArray()); } catch (java.io.IOException e) { return new java.lang.String(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5261/buggy-version/features.poller.remote.src.main.java.org.opennms.netmgt.poller.remote.support.Log4j2StringAppender.java", "BodyUseAPI": ["getManager().getByteArrayOutputStream()", "getManager().flush()", "org.opennms.netmgt.poller.remote.support.Log4j2StringAppender.getManager()", "getManager().getByteArrayOutputStream().toByteArray()", "org.opennms.netmgt.poller.remote.support.Log4j2StringAppender.getManager()"], "Fixed commit": "5d6cd5bc2de1cce466344c8570bb766307753219", "Url": "https://api.github.com/repos/OpenNMS/opennms", "Date": "2017-04-19T02:28:45Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { load.load(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8753/buggy-version/src.net.estinet.gFeatures.Listeners.java", "BodyUseAPI": ["net.estinet.gFeatures.API.PlayerStats.Load.load()"], "Fixed commit": "57931b2090be3480b55a848a87f8affdad374e3c", "Url": "https://api.github.com/repos/EstiNet/gFeatures", "Date": "2015-11-14T14:27:31Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { checkZoomEvent(ev); } catch (java.lang.IllegalArgumentException ex) { android.util.Log.e(com.erakk.lnreader.helper.NonLeakingWebView.TAG, \"Failed to handle zoom event.\", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4196/buggy-version/app.src.main.java.com.erakk.lnreader.helper.NonLeakingWebView.java", "BodyUseAPI": ["com.erakk.lnreader.helper.NonLeakingWebView.checkZoomEvent(android.view.MotionEvent)"], "Fixed commit": "062dd9df00125fb2410c92ed87396f04a56af371", "Url": "https://api.github.com/repos/freedomofkeima/LNReader-Android", "Date": "2015-03-24T11:34:16Z"},
{"Line": "=>778", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Integer.parseInt(messageData.substring((sohOffset + 1), messageData.indexOf('=', sohOffset))); } catch (java.lang.NumberFormatException e) { while ((((sohOffset - equalsOffset) - 1) < fieldLength) && ((messageData.substring((equalsOffset + 1), sohOffset).getBytes(org.quickfixj.CharsetSupport.getCharsetInstance()).length) < fieldLength)) { sohOffset = messageData.indexOf('\\u0001', (sohOffset + 1)); if (sohOffset == (-1)) { throw new quickfix.InvalidMessage((((\"SOH not found at end of field: \" + tag) + \" in \") + (messageData))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6460/buggy-version/quickfixj-core.src.main.java.quickfix.Message.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.indexOf(char,int)"], "Fixed commit": "27407b2dd8a8cc1fe8de2879a36089f32c8df46e", "Url": "https://api.github.com/repos/btomas/quickfixj", "Date": "2017-03-02T07:09:11Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { em.wait(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6307/buggy-version/src.Business.java", "BodyUseAPI": ["Employee.wait()"], "Fixed commit": "20b059d98126257433ed38ad77ab4bf9b21ab419", "Url": "https://api.github.com/repos/DanielleGonzalez/SoftwareProjectDay", "Date": "2014-10-24T18:44:37Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (simElectricity.EnergyNet.IBaseComponent tile : energyNet.tileEntityGraph.vertexSet()) { if (tile instanceof simElectricity.API.IEnergyNetUpdateHandler) { ((simElectricity.API.IEnergyNetUpdateHandler) (tile)).onEnergyNetUpdate(); } } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1560/buggy-version/simElectricity.src.main.java.simElectricity.EnergyNet.EnergyNet.java", "BodyUseAPI": ["simElectricity.EnergyNet.IBaseComponent.onEnergyNetUpdate()", "org.jgrapht.graph.SimpleGraph<simElectricity.EnergyNet.IBaseComponent, org.jgrapht.graph.DefaultEdge>.vertexSet()"], "Fixed commit": "7b08084b03b934c6dadee190434c9260a071d05a", "Url": "https://api.github.com/repos/RoyalAliceAcademyOfSciences/SimElectricity", "Date": "2014-07-20T14:44:34Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { prescriptionList = com.along.android.healthmanagement.entities.Prescription.listAll(com.along.android.healthmanagement.entities.Prescription.class); } catch (android.database.sqlite.SQLiteException e) { prescriptionList = new java.util.ArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7175/buggy-version/app.src.main.java.com.along.android.healthmanagement.fragments.MedicationHistoryTabFragment.java", "BodyUseAPI": ["com.along.android.healthmanagement.entities.Prescription.listAll(java.lang.Class)"], "Fixed commit": "82a9ee6a9e8b105ab26127081557de9bb1aa0aeb", "Url": "https://api.github.com/repos/cqlzx/health-management", "Date": "2017-03-01T19:43:05Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.net.Uri uri = this.getContentResolver().insert(FavouriteMovieEntry.CONTENT_URI, contentValues); if (uri != null) { android.widget.Toast.makeText(this, getString(R.string.mark_as_favourite_response), Toast.LENGTH_SHORT).show(); } } catch (java.lang.Exception ex) { android.widget.Toast.makeText(this, getString(R.string.favourite_already_added), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1700/buggy-version/app.src.main.java.com.zeddysoft.popularmovies.activities.MovieDetailActivity.java", "BodyUseAPI": ["android.widget.Toast.makeText(com.zeddysoft.popularmovies.activities.MovieDetailActivity,getString(R.string.mark_as_favourite_response),Toast.LENGTH_SHORT)", "android.widget.Toast.makeText(this, getString(R.string.mark_as_favourite_response), Toast.LENGTH_SHORT).show()", "this.getContentResolver().insert(FavouriteMovieEntry.CONTENT_URI,android.content.ContentValues)", "com.zeddysoft.popularmovies.activities.MovieDetailActivity.1.getString(R.string.mark_as_favourite_response)", "com.zeddysoft.popularmovies.activities.MovieDetailActivity.getContentResolver()"], "Fixed commit": "cd9183a61a04739e1979e7f8c98f79bd2efdebfc", "Url": "https://api.github.com/repos/zeddysoft/popular_movies", "Date": "2017-07-03T08:35:04Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.net.Socket socket = server.accept(); handler.handle(socket); } catch (java.net.SocketTimeoutException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8999/buggy-version/kvstore.src.kvstore.SocketServer.java", "BodyUseAPI": ["kvstore.NetworkHandler.handle(java.net.Socket)", "java.net.ServerSocket.accept()"], "Fixed commit": "c605231852fbcac4c475957d00480745967ee162", "Url": "https://api.github.com/repos/QAQO-O/KVStore", "Date": "2014-06-22T08:32:32Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { t = java.sql.Timestamp.valueOf(s); isNull = false; } catch (java.lang.IllegalArgumentException e) { isNull = true; logExceptionMessage(bytes, start, length, \"TIMESTAMP\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5196/buggy-version/serde.src.java.org.apache.hadoop.hive.serde2.lazy.LazyTimestamp.java", "BodyUseAPI": ["java.sql.Timestamp.valueOf(java.lang.String)"], "Fixed commit": "60333a6af8b48ab9dd5354b80c947c9caf57cd15", "Url": "https://api.github.com/repos/amplab/hive", "Date": "2013-04-02T03:01:37Z"},
{"Line": "=>442", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (int thread = 0; thread < numThreads; ++thread) { seed = console.parameters.getInt(new ec.util.Parameter((\"seed.\" + thread)), null); for (int job = 0; job < numJobs; ++job) setSeed((\"\" + (seed + (i++))), job, thread); } } catch (java.lang.NumberFormatException ex) { javax.swing.JOptionPane.showMessageDialog(null, (\"The seed parameter for at least one thread not a fixed number (perhaps it\\'s set to \\'time\\'?), so sequential seeds cannot be used.\\n\" + \"Reverting to random number seeds for all threads.\"), \"Adjusting Seeds\", javax.swing.JOptionPane.INFORMATION_MESSAGE); randomSeedsRadioButton.setSelected(true); generateRandomSeeds(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7081/buggy-version/ecj.ec.display.ControlPanel.java", "BodyUseAPI": ["ec.display.ControlPanel.setSeed(java.lang.String,int,int)", "console.parameters.getInt(ec.util.Parameter,<nulltype>)"], "Fixed commit": "803ce5717e7ebc1ad2e8300b3ab753d37d77107a", "Url": "https://api.github.com/repos/GMUEClab/ecj", "Date": "2017-09-19T20:23:47Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mCoverDrawable.getBitmap().recycle(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1253/buggy-version/src.ImShare.src.com.imtech.imshare.ui.myshare.MyShareAdapter.java", "BodyUseAPI": ["android.graphics.drawable.BitmapDrawable.getBitmap()", "mCoverDrawable.getBitmap().recycle()"], "Fixed commit": "9020289d2babe358d894e498da1c4fd3496d3cc9", "Url": "https://api.github.com/repos/ImTech/ImShare", "Date": "2014-01-16T13:51:18Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (model.observer.GameEngineObserver o : observers) { o.gameEngineHasTicked(); } } catch (java.util.ConcurrentModificationException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5043/buggy-version/src.model.gameEngine.GameEngine.java", "BodyUseAPI": ["model.observer.GameEngineObserver.gameEngineHasTicked()"], "Fixed commit": "ed4b0840d0f4bf1c575e1a144f003b8cd821ebf7", "Url": "https://api.github.com/repos/amstewart/LastRun", "Date": "2015-04-19T01:45:13Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { session = unmarshal(sessions.get(sessionId)); } catch (com.hazelcast.nio.serialization.HazelcastSerializationException e) { logger.warn((\"Error in deserializing hazelcast session \" + sessionId)); try { sessions.remove(sessionId); } catch (com.hazelcast.nio.serialization.HazelcastSerializationException e1) { logger.warn((\"Error getting object after removing hazelcast session \" + sessionId)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6349/buggy-version/session.src.main.java.org.entcore.session.AuthManager.java", "BodyUseAPI": ["org.entcore.session.AuthManager.unmarshal(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "40394e19a36a27840bb7b9113c1f0c4b25f57fad", "Url": "https://api.github.com/repos/entcore/entcore", "Date": "2015-11-26T14:44:21Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { s = unmarshal(sessions.get(sId)); } catch (com.hazelcast.nio.serialization.HazelcastSerializationException e) { sendError(message, (\"Error in deserializing new hazelcast session \" + sId), e); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6349/buggy-version/session.src.main.java.org.entcore.session.AuthManager.java", "BodyUseAPI": ["1.unmarshal(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "40394e19a36a27840bb7b9113c1f0c4b25f57fad", "Url": "https://api.github.com/repos/entcore/entcore", "Date": "2015-11-26T14:44:21Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { startScanActiveMethod = android.net.wifi.WifiManager.class.getMethod(\"startScanActive\"); startScanActiveMethod.invoke(mWifimanager); } catch (java.lang.NoSuchMethodException e) { e.printStackTrace(); } catch (java.lang.IllegalAccessException e) { e.printStackTrace(); } catch (java.lang.IllegalArgumentException e) { e.printStackTrace(); } catch (java.lang.reflect.InvocationTargetException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5917/buggy-version/iair.src.com.txmcu.PATHoxin.config.wifi.WifiHotManager.java", "BodyUseAPI": ["java.lang.Class.getMethod(java.lang.String)", "java.lang.reflect.Method.invoke(android.net.wifi.WifiManager)"], "Fixed commit": "9cd87171f70d39edf78c2e6b2432bb71c4494af4", "Url": "https://api.github.com/repos/arventwei/iAirAndroid", "Date": "2014-03-28T16:22:50Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.openmrs.api.context.Context.getFormService().saveFormResource(resource); } catch (java.lang.Exception ex) { session.setAttribute(WebConstants.OPENMRS_ERROR_ATTR, \"error.file.upload.expected.text.file\"); return ((((\"redirect:addFormResource.form?formId=\" + (resource.getForm().getId())) + \"&datatype=\") + (resource.getDatatypeClassname())) + \"&handler=\") + (resource.getPreferredHandlerClassname()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6850/buggy-version/web.src.main.java.org.openmrs.web.controller.form.FormResourceController.java", "BodyUseAPI": ["org.openmrs.api.context.Context.getFormService().saveFormResource(org.openmrs.FormResource)", "org.openmrs.api.context.Context.getFormService()"], "Fixed commit": "2e1ea9bfb95fc931593900efdb7f3a84c85ccab9", "Url": "https://api.github.com/repos/ivange94/openmrs-core", "Date": "2015-08-12T01:49:26Z"},
{"Line": "=>473", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { theValue = variableRendererManager.getStringRepresentation(variables.get(variable)); } catch (java.lang.Exception e) { theValue = \"N/A\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2138/buggy-version/modules.activiti-explorer.src.main.java.org.activiti.explorer.ui.management.admin.AdminRunningInstancesPanel.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "org.activiti.explorer.ui.variable.VariableRendererManager.getStringRepresentation(java.lang.Object)"], "Fixed commit": "6e0076d837308ca7c99caad861272ba20ded03ad", "Url": "https://api.github.com/repos/Activiti/Activiti", "Date": "2012-11-27T10:23:54Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { getTaskList().get(markerList.indexOf(marker)).name = ((location.getAddressLine(0)) + \", \") + (location.getAddressLine(1)); db.updateData(DbHelper.TABLE_TASKS, getTaskList().get(markerList.indexOf(marker))); ((com.tikotapps.pathfinder.Setup.Pathfinder) (getApplication())).updateTaskArrayList(db, DbHelper.TABLE_TASKS); } catch (java.lang.IndexOutOfBoundsException ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/9071/buggy-version/app.src.main.java.com.tikotapps.pathfinder.Activities.MapsActivity.java", "BodyUseAPI": ["com.tikotapps.pathfinder.Activities.MapsActivity.getTaskList()", "java.util.ArrayList<com.tikotapps.pathfinder.Database.Task>.get(markerList.indexOf(marker))", "java.util.ArrayList<com.google.android.gms.maps.model.Marker>.indexOf(com.google.android.gms.maps.model.Marker)", "java.util.ArrayList<com.google.android.gms.maps.model.Marker>.indexOf(com.google.android.gms.maps.model.Marker)", "com.tikotapps.pathfinder.Database.DbUtil.updateData(DbHelper.TABLE_TASKS,getTaskList().get(markerList.indexOf(marker)))", "android.location.Address.getAddressLine(int)", "((com.tikotapps.pathfinder.Setup.Pathfinder) (getApplication())).updateTaskArrayList(com.tikotapps.pathfinder.Database.DbUtil,DbHelper.TABLE_TASKS)", "com.tikotapps.pathfinder.Activities.MapsActivity.getTaskList()", "java.util.ArrayList<com.tikotapps.pathfinder.Database.Task>.get(markerList.indexOf(marker))", "com.tikotapps.pathfinder.Activities.MapsActivity.getApplication()", "android.location.Address.getAddressLine(int)"], "Fixed commit": "eae15212065e4fac2d19b83bef604fca2fb906c7", "Url": "https://api.github.com/repos/neelmehta247/Pathfinder", "Date": "2015-11-04T10:02:34Z"},
{"Line": "=>1329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return java.lang.Long.parseLong(str); } catch (java.lang.NumberFormatException nfe) { return ((long) (railo.runtime.op.Caster.toDoubleValue(str))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7014/buggy-version/railo-java.railo-core.src.railo.runtime.op.Caster.java", "BodyUseAPI": ["java.lang.Long.parseLong(java.lang.String)"], "Fixed commit": "76ad17e896ff4a473f10c2d2eac8db7a0ff73c5b", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2012-10-11T17:26:04Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { id = java.lang.Long.valueOf(authId); } catch (java.lang.NumberFormatException e) { throw new javax.ws.rs.WebApplicationException(Response.Status.UNAUTHORIZED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5370/buggy-version/src.main.java.com.noname.server.security.LoginFilter.java", "BodyUseAPI": ["java.lang.Long.valueOf(java.lang.String)"], "Fixed commit": "df4ae64f06eac60269b2454c1e5b8568ac09ed3f", "Url": "https://api.github.com/repos/lacau/noname-game", "Date": "2016-02-17T23:08:55Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { t.join(); } catch (java.lang.InterruptedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/667/buggy-version/db2014_parser.src.gui.preferences_window.java", "BodyUseAPI": ["java.lang.Thread.join()"], "Fixed commit": "321345dcd36719c809a555389e4ff33b64af9e3c", "Url": "https://api.github.com/repos/dbguydaich/Dione", "Date": "2014-06-07T08:46:33Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { closeChannel(); } catch (java.lang.Exception e1) { jazmin.server.relay.DtlsRelayChannel.logger.catching(e1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7469/buggy-version/JazminServer.src.jazmin.server.relay.DtlsRelayChannel.java", "BodyUseAPI": ["jazmin.server.relay.DtlsRelayChannel.closeChannel()"], "Fixed commit": "a53db3841f039c6efa6fe78cb7038f8c3f1846a7", "Url": "https://api.github.com/repos/guooscar/JazminServer", "Date": "2015-05-05T14:53:40Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.peace.auto.bl.job.DENG_LU.checkUser(com.peace.auto.bl.job.DEVICE_1.getRegion(), status, ti.getUserName()); } catch (java.lang.Exception e) { log.info(\"{}\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3582/buggy-version/src.main.java.com.peace.auto.bl.job.AutoMode.java", "BodyUseAPI": ["com.peace.auto.bl.job.DENG_LU.checkUser(com.peace.auto.bl.job.DEVICE_1.getRegion(),com.peace.auto.bl.job.AutoMode,ti.getUserName())", "com.peace.auto.bl.TaskItem.getUserName()", "com.peace.auto.bl.job.DEVICE_1.getRegion()"], "Fixed commit": "5d006805a6e8e1fdfafdfadb1327c3a538675fd5", "Url": "https://api.github.com/repos/peace0phmind/blauto", "Date": "2016-06-21T08:26:57Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { src = src.substring(((src.lastIndexOf(\"/\")) + 1), src.indexOf(\"?\")); src = \"http://www.youtube.com/watch?v=\" + src; com.ytripper.video.YoutubeVideoObject youtubeVideo = com.ytripper.net.YoutubeConnection.getYoutubeVideoObject(src); playlist.addYoutubeVideoObject(youtubeVideo); } catch (java.lang.Exception e) { java.lang.System.out.println((\"EXCEPTION: \" + (e.getMessage()))); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8284/buggy-version/src.com.ytripper.net.YoutubeConnection.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "com.ytripper.video.YoutubePlaylistObject.addYoutubeVideoObject(com.ytripper.video.YoutubeVideoObject)", "java.lang.String.lastIndexOf(java.lang.String)", "com.ytripper.net.YoutubeConnection.getYoutubeVideoObject(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "5d239aee7c4afd0b33b34dc96d8a7cf496b2ffc3", "Url": "https://api.github.com/repos/deusprogrammer/Youtube-Ripper", "Date": "2013-01-30T02:12:49Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { _getDamageOfStack = _gradItemInt.getMethod(\"getCustomDamage\", net.minecraft.item.ItemStack.class); } catch (java.lang.NoSuchMethodException e) { _getDamageOfStack = _gradItemInt.getMethod(\"getControlTagOfStack\", net.minecraft.item.ItemStack.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8460/buggy-version/src.main.java.shedar.mods.ic2.nuclearcontrol.crossmod.ic2.CrossIndustrialCraft2.java", "BodyUseAPI": ["java.lang.Class.getMethod(java.lang.String,java.lang.Class)"], "Fixed commit": "6dfa78d7bfd7134030762f95221dcac58508201b", "Url": "https://api.github.com/repos/xbony2/Nuclear-Control", "Date": "2015-11-08T12:48:48Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.Locale locale = new java.util.Locale(\"\", countryCode); return new com.scrounger.countrycurrencypicker.library.Country(countryCode, locale.getDisplayName(), com.scrounger.countrycurrencypicker.library.Helper.getFlagDrawableId(countryCode, context)); } catch (java.lang.NullPointerException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1251/buggy-version/library.src.main.java.com.scrounger.countrycurrencypicker.library.Country.java", "BodyUseAPI": ["com.scrounger.countrycurrencypicker.library.Helper.getFlagDrawableId(java.lang.String,android.content.Context)", "java.util.Locale.getDisplayName()"], "Fixed commit": "e57ca241497ad5f8b1a47d35221e9b1c29952557", "Url": "https://api.github.com/repos/Scrounger/CountryCurrencyPicker", "Date": "2017-10-28T12:40:16Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { recipeIt.remove(); } catch (java.lang.UnsupportedOperationException exp) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3684/buggy-version/src.main.java.de.tobiyas.racesandclasses.traitcontainer.traits.defaultraits.activate.PoisonedWeaponTrait.PoisonWeaponListener.java", "BodyUseAPI": ["java.util.Iterator<org.bukkit.inventory.Recipe>.remove()"], "Fixed commit": "f3d9cddf00f3271b3c3802c21082687c607dafc4", "Url": "https://api.github.com/repos/tobiyas/RacesAndClasses", "Date": "2017-06-26T11:05:44Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.json.JSONObject pageSRPair = jsonArray.getJSONObject(i); org.wikibrain.core.lang.LocalId page = new org.wikibrain.core.lang.LocalId(language, pageSRPair.getInt(\"wikiPageId\")); java.lang.Double sr = new java.lang.Double(pageSRPair.getDouble(\"srMeasure\")); result.put(page, sr); } catch (java.lang.Exception e) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2542/buggy-version/atlasify.src.main.java.org.wikibrain.atlasify.AtlasifyResource.java", "BodyUseAPI": ["org.json.JSONObject.getInt(java.lang.String)", "java.util.Map<org.wikibrain.core.lang.LocalId, java.lang.Double>.put(org.wikibrain.core.lang.LocalId,java.lang.Double)", "org.json.JSONObject.getDouble(java.lang.String)", "org.json.JSONArray.getJSONObject(int)"], "Fixed commit": "266ae58f7389d754f87e7382186275e195267e9a", "Url": "https://api.github.com/repos/shilad/wikibrain", "Date": "2015-02-12T07:55:52Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(1500); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7323/buggy-version/app.src.main.java.com.nvharikrishna.whoisthat.PushNotificationListenerService.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "532a92c9818538ad6754ebbce42fbbbc381bac50", "Url": "https://api.github.com/repos/nvharikrishna/whoisthat", "Date": "2016-09-11T05:06:15Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(1000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2709/buggy-version/gMixFramework.src.evaluation.simulator.gui.customElements.ConfigChooserPanel.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "7919890c08f76dded73562e44cffeffd6d533026", "Url": "https://api.github.com/repos/kpfuchs/gMix", "Date": "2014-05-21T11:28:01Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { resolved = metaObject.getValue(Constants.PAGE_PARAMERTER_NAME); } catch (java.lang.Exception e) { org.mybatis.plugin.pager.resolver.PageParameterResolver.LOGGER.info(\"Resolve Page parameter failed. Most likely the page parameter doesn't contained in the parameterObject[{},{}]. WILL NOT PROCEED TO PAGE QUERY!\", parameterObject.getClass(), parameterObject); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8398/buggy-version/src.main.java.org.mybatis.plugin.pager.resolver.PageParameterResolver.java", "BodyUseAPI": ["org.apache.ibatis.reflection.MetaObject.getValue(Constants.PAGE_PARAMERTER_NAME)"], "Fixed commit": "ed7927b71984c12be5dbd00cc526aa79beba045c", "Url": "https://api.github.com/repos/GitHanter/mybatis-pager", "Date": "2016-08-19T11:48:45Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) { if (\"Nimbus\".equals(info.getName())) { javax.swing.UIManager.setLookAndFeel(info.getClassName()); break; } } } catch (java.lang.ClassNotFoundException ex) { java.util.logging.Logger.getLogger(edu.asu.bmi.dyauch.clinicalquery.ui.UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); } catch (java.lang.InstantiationException ex) { java.util.logging.Logger.getLogger(edu.asu.bmi.dyauch.clinicalquery.ui.UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); } catch (java.lang.IllegalAccessException ex) { java.util.logging.Logger.getLogger(edu.asu.bmi.dyauch.clinicalquery.ui.UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); } catch (javax.swing.UnsupportedLookAndFeelException ex) { java.util.logging.Logger.getLogger(edu.asu.bmi.dyauch.clinicalquery.ui.UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4558/buggy-version/src.main.java.edu.asu.bmi.dyauch.clinicalquery.App.java", "BodyUseAPI": ["javax.swing.UIManager.LookAndFeelInfo.getClassName()", "javax.swing.UIManager.getInstalledLookAndFeels()", "javax.swing.UIManager.LookAndFeelInfo.getName()", "javax.swing.UIManager.setLookAndFeel(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "b6bcb5bb7d2971e7ce73d1f0b049425978da10d8", "Url": "https://api.github.com/repos/whydavid/clinicalquery", "Date": "2012-12-15T02:49:47Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.springframework.util.FileSystemUtils.copyRecursively(new java.io.File(needCopyJavaSourceFilePath), new java.io.File((((generateCodePath) + (codeAndroidDirName)) + (utilsPackage)))); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2570/buggy-version/src.main.java.com.sql.code.generator.modules.android.service.impl.CodeGeneratorImpl.java", "BodyUseAPI": ["org.springframework.util.FileSystemUtils.copyRecursively(java.io.File,java.io.File)"], "Fixed commit": "ac0c317d21a095548f34da25a5619fee1b7c4b40", "Url": "https://api.github.com/repos/SvenOu/SqlCodeGenerator", "Date": "2017-03-01T10:34:02Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { osMBean = java.lang.management.ManagementFactory.newPlatformMXBeanProxy(mbsc, java.lang.management.ManagementFactory.OPERATING_SYSTEM_MXBEAN_NAME, com.sun.management.OperatingSystemMXBean.class); } catch (java.io.IOException e) { java.lang.System.exit((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5828/buggy-version/server-api.src.main.java.edu.uci.eecs.wukong.framework.metrics.JvmMetrics.java", "BodyUseAPI": ["java.lang.management.ManagementFactory.newPlatformMXBeanProxy(javax.management.MBeanServerConnection,java.lang.String,java.lang.Class)"], "Fixed commit": "b21638addb4ee4c96f42241787b866587e180732", "Url": "https://api.github.com/repos/HuangZhenQiu/Progression-Framework", "Date": "2017-07-12T07:05:40Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { org.soluvas.web.bootstrap.FriendlyErrorRequestListener.log.error((((((((org.slf4j.MDC.get(CommandRequestAttributes.MDC_TENANT_ID)) + \" \") + incidentId) + \" \") + (cycle.getRequest().getUrl())) + \"\u00bb \") + ex), ex); return new org.apache.wicket.core.request.handler.RenderPageRequestHandler(new org.apache.wicket.core.request.handler.PageProvider(new org.soluvas.web.bootstrap.FriendlyErrorPage(incidentId, ex)), org.apache.wicket.core.request.handler.RenderPageRequestHandler.RedirectPolicy.NEVER_REDIRECT); } finally { org.slf4j.MDC.remove(org.soluvas.web.bootstrap.FriendlyErrorRequestListener.MDC_INCIDENT_ID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2725/buggy-version/bootstrap.src.main.java.org.soluvas.web.bootstrap.FriendlyErrorRequestListener.java", "BodyUseAPI": ["org.apache.wicket.request.cycle.RequestCycle.getRequest()", "cycle.getRequest().getUrl()", "org.slf4j.Logger.error((((((((org.slf4j.MDC.get(CommandRequestAttributes.MDC_TENANT_ID)) + \" \") + incidentId) + \" \") + (cycle.getRequest().getUrl())) + \"\u00bb \") + ex),java.lang.Exception)", "org.slf4j.MDC.get(CommandRequestAttributes.MDC_TENANT_ID)"], "Fixed commit": "c5772331e0dc2c6192d1be6d260a6c809f4fce49", "Url": "https://api.github.com/repos/soluvas/soluvas-web", "Date": "2014-12-10T07:42:29Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String maxID = java.lang.Integer.toString(maxHistoryId); mStorage.setItem(\"maxHistory\", maxID); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/288/buggy-version/src.uk.me.graphe.client.LocalStoreImpl.java", "BodyUseAPI": ["java.lang.Integer.toString(int)", "uk.me.graphe.client.Storage.setItem(java.lang.String,java.lang.String)"], "Fixed commit": "0f2d00e53de15beb772d9ff98e56794fedd32ca1", "Url": "https://api.github.com/repos/samphippen/spe", "Date": "2011-03-07T17:08:41Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { latitude = ((double) (dataSnapshot.child(\"latitude\").getValue())); longitude = ((double) (dataSnapshot.child(\"longitude\").getValue())); } catch (java.lang.Exception e) { java.lang.Long latitudeLong = ((long) (dataSnapshot.child(\"latitude\").getValue())); java.lang.Long longitudeLong = ((long) (dataSnapshot.child(\"longitude\").getValue())); latitude = latitudeLong.doubleValue(); longitude = longitudeLong.doubleValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8660/buggy-version/app.src.main.java.edu.gatech.cs2340.ratlab.model.SightingsManager.java", "BodyUseAPI": ["com.google.firebase.database.DataSnapshot.child(java.lang.String)", "dataSnapshot.child(\"latitude\").getValue()", "com.google.firebase.database.DataSnapshot.child(java.lang.String)", "dataSnapshot.child(\"longitude\").getValue()"], "Fixed commit": "1906ae450602976b4fced5d455ec21680053b682", "Url": "https://api.github.com/repos/tgieseking/RATLAB", "Date": "2017-10-17T16:34:33Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { put(key, value); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/786/buggy-version/plugins.antidote.src.main.java.org.radargun.cachewrappers.TransactionManager.java", "BodyUseAPI": ["org.radargun.cachewrappers.TransactionManager.put(java.lang.Object,java.lang.Object)"], "Fixed commit": "2d7396a06591ab954a7401e5bbdafab77e7c79f9", "Url": "https://api.github.com/repos/marsleezm/Radargun-antidote", "Date": "2015-10-08T14:57:25Z"},
{"Line": "=>543", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { line = reader.readLine(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4950/buggy-version/GShelf.Gshelf.src.com.derpicons.gshelf.Network.java", "BodyUseAPI": ["java.io.BufferedReader.readLine()"], "Fixed commit": "7682e65bfe792eaaa5a432ea66d960de6c74948d", "Url": "https://api.github.com/repos/brennon246/GShelf", "Date": "2013-04-16T20:03:21Z"},
{"Line": "=>533", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { reader = new java.io.BufferedReader(new java.io.InputStreamReader(input, \"iso-8859-1\"), 8); } catch (java.io.UnsupportedEncodingException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4950/buggy-version/GShelf.Gshelf.src.com.derpicons.gshelf.Network.java", "BodyUseAPI": [], "Fixed commit": "7682e65bfe792eaaa5a432ea66d960de6c74948d", "Url": "https://api.github.com/repos/brennon246/GShelf", "Date": "2013-04-16T20:03:21Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return this.messages.last(); } catch (java.util.NoSuchElementException e) { android.util.Log.e(this.getClass().getSimpleName(), \"Suppressing exception\", e); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/7686/buggy-version/app.src.main.java.akechi.projectl.component.MessageAdapter.java", "BodyUseAPI": ["java.util.SortedSet<Room.Message>.last()"], "Fixed commit": "c56c57717d05a0a5ac9937bc4694c6f63e4860fe", "Url": "https://api.github.com/repos/akechi/project-l", "Date": "2016-01-28T13:22:40Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (int i = 0; i < (msg.arg1); i++) KTSyncData.mKScan.HandleInputData(readBuf[i]); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/446/buggy-version/app.src.main.java.eventworks.accesscontrol.ui.scan.ExternalScanPresenter.java", "BodyUseAPI": ["KTSyncData.mKScan.HandleInputData(byte)"], "Fixed commit": "2ade10609b537c6406a8b36ead807f290ff18190", "Url": "https://api.github.com/repos/dan41k/accesscontrol", "Date": "2015-04-01T09:06:59Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { remain = java.lang.Integer.parseInt(map.get(\"balance_num\").toString()); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8585/buggy-version/src.main.java.data.InventoryServiceImpl.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.lang.Object.toString()"], "Fixed commit": "3b7ba5c5811ce061c5c9da89be3dcb694173ca0f", "Url": "https://api.github.com/repos/hadley0828/citi2017", "Date": "2017-09-16T08:39:25Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { remain = java.lang.Integer.parseInt(map.get(\"balance_num\").toString()); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8585/buggy-version/src.main.java.data.InventoryServiceImpl.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.lang.Integer.parseInt(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "3b7ba5c5811ce061c5c9da89be3dcb694173ca0f", "Url": "https://api.github.com/repos/hadley0828/citi2017", "Date": "2017-09-16T08:39:25Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return com.luxoft.training.javase.bankapp.service.BankService.addClient(client); } catch (com.luxoft.training.javase.bankapp.domains.ClientExistsException e) { return client; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3196/buggy-version/src.main.java.com.luxoft.training.javase.bankapp.service.BankService.java", "BodyUseAPI": ["com.luxoft.training.javase.bankapp.service.BankService.addClient(com.luxoft.training.javase.bankapp.domains.clients.Client)"], "Fixed commit": "2b9a8a4f2f881eadc586acbbfa1dc320d4fd5ee5", "Url": "https://api.github.com/repos/Vyacheslav-Lapin/java-se", "Date": "2017-06-21T06:22:36Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { action = actionDS.getLastCreated(); } catch (android.database.CursorIndexOutOfBoundsException e) { android.util.Log.d(\"HomeFragment\", \"No previous record found\"); return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4390/buggy-version/app.src.main.java.com.aqib.icrave.controller.HomeFragment.java", "BodyUseAPI": ["com.aqib.icrave.model.UserActionsDataSource.getLastCreated()"], "Fixed commit": "d24ad9464bb4a542726b24aa0bdd32013ea60f91", "Url": "https://api.github.com/repos/aqibmushtaq/icrave-app", "Date": "2014-04-13T22:59:55Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { unbindService(sc); } catch (java.lang.IllegalArgumentException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/203/buggy-version/app.src.main.java.cn.zhihu.daily.zhihu_daily.ui.activity.MainActivity.java", "BodyUseAPI": ["cn.zhihu.daily.zhihu_daily.ui.activity.MainActivity.unbindService(android.content.ServiceConnection)"], "Fixed commit": "3337090e122849b56c8e1e5fa85c952bef864f44", "Url": "https://api.github.com/repos/MoRunChang2015/Zhihu-Daily", "Date": "2016-12-25T07:51:11Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { level = weapon.getEnchantmentLevel(Enchantment.SWEEPING_EDGE); } catch (java.lang.NoSuchFieldError e1) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4727/buggy-version/src.main.java.gvlfm78.plugin.OldCombatMechanics.module.ModuleSwordSweep.java", "BodyUseAPI": ["org.bukkit.inventory.ItemStack.getEnchantmentLevel(Enchantment.SWEEPING_EDGE)"], "Fixed commit": "a58937d5ac5c37793da31bc3c7e53a89bbaed956", "Url": "https://api.github.com/repos/gvlfm78/BukkitOldCombatMechanics", "Date": "2017-04-17T13:30:30Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.location.Location location = locationManager.getLastKnownLocation(provider); if (location != null) { } } catch (java.lang.SecurityException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/7965/buggy-version/app.src.main.java.com.example.hoda.weather.activity.ChooseAreaActivity.java", "BodyUseAPI": ["android.location.LocationManager.getLastKnownLocation(java.lang.String)"], "Fixed commit": "545f435ddd507ad79435af5190112fee82e966a9", "Url": "https://api.github.com/repos/hdkn235/SwallowWeather", "Date": "2017-04-12T02:09:11Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (response != null) { response.close(); } } catch (java.io.IOException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3157/buggy-version/src.main.java.com.kickbox.java.http.HttpExecutor.java", "BodyUseAPI": ["org.apache.http.client.methods.CloseableHttpResponse.close()"], "Fixed commit": "87f87d01f5d4278fcec6ac87066431f3e7678143", "Url": "https://api.github.com/repos/szagriichuk/kickbox", "Date": "2016-01-10T17:37:58Z"},
{"Line": "=>532", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((data.cx) != null) { org.mozilla.javascript.Context.exit(); } } catch (java.lang.Exception er) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3188/buggy-version/engine.src.main.java.org.pentaho.di.trans.steps.scriptvalues_mod.ScriptValuesMod.java", "BodyUseAPI": ["org.mozilla.javascript.Context.exit()"], "Fixed commit": "9fd0bf2c687baf55fca77161eaa44b34f365125e", "Url": "https://api.github.com/repos/pentaho-jrice/pentaho-kettle", "Date": "2017-11-29T16:27:26Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { value = invoke(temp); } catch (java.lang.Exception e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8765/buggy-version/src.LJava.Formula.java", "BodyUseAPI": ["LJava.Formula<P, R>.invoke(P[])"], "Fixed commit": "9b99cfd0d341b3a185a14bd069b3f40930b9e9fc", "Url": "https://api.github.com/repos/tmkctm/LJ", "Date": "2012-11-07T20:51:04Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.content.SharedPreferences pref = android.preference.PreferenceManager.getDefaultSharedPreferences(this); maxSpeed = java.lang.Float.valueOf(pref.getString(\"speed\", \"\")); maxDistance = (java.lang.Float.valueOf(pref.getString(\"distance\", \"\"))) * 1000; } catch (java.lang.NumberFormatException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5479/buggy-version/src.com.example.runtime.MainActivity.java", "BodyUseAPI": ["android.content.SharedPreferences.getString(java.lang.String,java.lang.String)", "java.lang.Float.valueOf(pref.getString(\"speed\", \"\"))", "java.lang.Float.valueOf(pref.getString(\"distance\", \"\"))", "android.content.SharedPreferences.getString(java.lang.String,java.lang.String)", "android.preference.PreferenceManager.getDefaultSharedPreferences(com.example.runtime.MainActivity)"], "Fixed commit": "9c5518795efe8aaaed077330c03b934d989f4b26", "Url": "https://api.github.com/repos/kenowessels/Runtime", "Date": "2014-06-12T13:45:39Z"},
{"Line": "=>604", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { silverObjectId = createSilverContent(con, media, media.getCreatorId()); } finally { com.stratelia.webactiv.util.DBUtil.close(con); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6954/buggy-version/gallery.gallery-ejb.src.main.java.com.silverpeas.gallery.control.ejb.GalleryBmEJB.java", "BodyUseAPI": ["com.silverpeas.gallery.model.Media.getCreatorId()", "com.silverpeas.gallery.control.ejb.GalleryBmEJB.createSilverContent(java.sql.Connection,com.silverpeas.gallery.model.Media,media.getCreatorId())"], "Fixed commit": "17fa86f8d248bed9bf9884b1bf4430e67209cfc3", "Url": "https://api.github.com/repos/SilverTeamWork/Silverpeas-Components", "Date": "2014-07-02T08:12:38Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { unregisterReceiver(broadcast_receiver); } catch (java.lang.IllegalArgumentException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2582/buggy-version/app.src.main.java.space.collabify.android.activities.CollabifierActivity.java", "BodyUseAPI": ["space.collabify.android.activities.CollabifierActivity.unregisterReceiver(android.content.BroadcastReceiver)"], "Fixed commit": "6fc3f8f2ccf085ddbb8fd3e93ad12fa73ddf339b", "Url": "https://api.github.com/repos/Collabify/Collabify_App", "Date": "2015-04-22T01:05:57Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.io.BufferedReader br = new java.io.BufferedReader(new java.io.FileReader(path)); java.lang.String line; while ((line = br.readLine()) != null) { java.lang.String[] sections = line.split(\"\\t\"); lstWeixinID.add(sections[0]); } } catch (java.io.FileNotFoundException ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/1259/buggy-version/src.main.java.com.weiboyi.utils.weixin.WeixinCrawler.AccountGenerator.java", "BodyUseAPI": ["java.io.BufferedReader.readLine()", "java.util.ArrayList<java.lang.String>.add(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "7b176de52c2b11bce5af1890943ef8053d543fb6", "Url": "https://api.github.com/repos/kunwu/WeixinCrawler", "Date": "2014-10-20T08:24:38Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { serverReqRouter.sendRemoveAllCmd(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/1432/buggy-version/src.main.java.edu.usfca.cs.thread.ServerRemoveAllThread.java", "BodyUseAPI": ["edu.usfca.cs.route.ServerReqRouter.sendRemoveAllCmd()"], "Fixed commit": "9e1f66a3571863968ffbd572db529fe1e26dd03f", "Url": "https://api.github.com/repos/peterpandayang/temp_dfs", "Date": "2017-10-07T00:36:48Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((user.getTags()) != null) hbnUser.setTags(super.getHbnTagSet(user.getTags())); } catch (javax.persistence.EntityNotFoundException enf) { throw new javax.persistence.EntityNotFoundException(\"Feil i registrering av gruppe (ny bruker): \\nEn eller flere merknader finnes ikke\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4547/buggy-version/src.main.java.com.acc.database.repository.GroupRepository.java", "BodyUseAPI": ["com.acc.database.repository.User.getTags()", "com.acc.database.repository.HbnUser.setTags(super.getHbnTagSet(user.getTags()))", "com.acc.database.repository.User.getTags()", "com.acc.database.repository.AbstractRepository.getHbnTagSet(user.getTags())"], "Fixed commit": "5589d9dc4cc8519a3e67e46996d60252544e4671", "Url": "https://api.github.com/repos/Adsime/bm_backend", "Date": "2017-03-29T12:37:33Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { apply(); } catch (org.openflexo.kvc.InvalidKeyValuePropertyException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5341/buggy-version/gina-swing.src.main.java.org.openflexo.gina.swing.utils.BindingSelector.java", "BodyUseAPI": ["org.openflexo.gina.swing.utils.BindingSelector.3.apply()"], "Fixed commit": "e757516d0b5d182797e0583684bd753d73e90771", "Url": "https://api.github.com/repos/openflexo-team/gina", "Date": "2016-05-24T21:00:04Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { chain[0].checkValidity(); } catch (java.lang.Exception e) { throw new java.security.cert.CertificateException(\"Certificate not valid or trusted.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/1746/buggy-version/library.src.main.java.com.vorlonsoft.android.http.MySSLSocketFactory.java", "BodyUseAPI": ["java.security.cert.X509Certificate.checkValidity()"], "Fixed commit": "cdce1165ca7cf236f5db04ecc85169597a806a7a", "Url": "https://api.github.com/repos/Vorlonsoft/AndroidAsyncHTTP", "Date": "2017-11-21T15:27:03Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { chain[0].checkValidity(); } catch (java.lang.Exception e) { throw new java.security.cert.CertificateException(\"Certificate not valid or trusted.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/1746/buggy-version/library.src.main.java.com.vorlonsoft.android.http.MySSLSocketFactory.java", "BodyUseAPI": ["java.security.cert.X509Certificate.checkValidity()"], "Fixed commit": "cdce1165ca7cf236f5db04ecc85169597a806a7a", "Url": "https://api.github.com/repos/Vorlonsoft/AndroidAsyncHTTP", "Date": "2017-11-21T15:27:03Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { jar = ((org.json.simple.JSONArray) (((org.json.simple.JSONObject) (oo.get(\"result\"))).get(\"tra_card\"))); } catch (java.lang.Exception e) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2296/buggy-version/party_Macro.src.macro.parsingJson.jsonParser.java", "BodyUseAPI": ["org.json.simple.JSONObject.get(java.lang.String)", "((org.json.simple.JSONObject) (oo.get(\"result\"))).get(java.lang.String)"], "Fixed commit": "785e2bbce1f20a00de2965ae41e89da909575160", "Url": "https://api.github.com/repos/JungHyun-Choi/DraPartyLogin", "Date": "2014-09-08T00:40:01Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String stringResponse = org.apache.http.util.EntityUtils.toString(response.getEntity()); java.lang.String[] splitResponse = stringResponse.split(\":\"); java.lang.String auth_token = splitResponse[3].substring(1, ((splitResponse[3].length()) - 2)); android.content.Intent intent = new android.content.Intent(context, com.example.m3.SuccessScreenActivity.class); intent.putExtra(\"auth_token\", auth_token); startActivity(intent); } catch (org.apache.http.ParseException e) { e.printStackTrace(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/1718/buggy-version/src.com.example.m3.RegistrationActivity.java", "BodyUseAPI": ["java.lang.String.length()", "org.apache.http.util.EntityUtils.toString(response.getEntity())", "android.content.Intent.putExtra(java.lang.String,java.lang.String)", "org.apache.http.HttpResponse.getEntity()", "java.lang.String.split(java.lang.String)", "com.example.m3.RegistrationActivity.RegisterTask.startActivity(android.content.Intent)", "java.lang.String.substring(int,int)"], "Fixed commit": "ef16202aad01d733ce2d2b743b6e5bda1217681c", "Url": "https://api.github.com/repos/mkmerritt1004/2340Project", "Date": "2014-02-26T05:40:02Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { line = mscanner.nextLine(); while ((FileParser.getNextValidPosition(line, 0)) == (-1)) line = mscanner.nextLine(); } catch (java.lang.Exception e) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6179/buggy-version/FileParser.java", "BodyUseAPI": ["java.util.Scanner.nextLine()", "FileParser.getNextValidPosition(java.lang.String,int)", "java.util.Scanner.nextLine()"], "Fixed commit": "b1510d8a9688ee5c745ebdc90c663361eff81490", "Url": "https://api.github.com/repos/MarcFichtel/CPSC433-Project", "Date": "2017-11-26T20:29:41Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { final java.lang.String version = new com.github.eirslett.maven.plugins.frontend.lib.YarnExecutor(config, java.util.Arrays.asList(\"--version\"), null).executeAndGetResult(logger).trim(); logger.info(\"Yarn verstion is {}\", version); if ((version.startsWith(\"v1.\")) || (version.startsWith(\"V1.\"))) { for (int i = 0; i < (additionalArguments.size()); i++) { java.lang.String para = additionalArguments.get(i); additionalArguments.set(i, para.replaceFirst(\"^--\", \"\")); } } } catch (com.github.eirslett.maven.plugins.frontend.lib.ProcessExecutionException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2029/buggy-version/frontend-plugin-core.src.main.java.com.github.eirslett.maven.plugins.frontend.lib.YarnTaskExecutor.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)", "java.util.List<java.lang.String>.set(int,java.lang.String)", "new com.github.eirslett.maven.plugins.frontend.lib.YarnExecutor(config, java.util.Arrays.asList(\"--version\"), null).executeAndGetResult(logger).trim()", "java.util.List<java.lang.String>.get(int)", "com.github.eirslett.maven.plugins.frontend.lib.YarnExecutor.executeAndGetResult(org.slf4j.Logger)", "java.lang.String.startsWith(java.lang.String)", "java.util.Arrays.asList(java.lang.String)", "java.util.List<java.lang.String>.size()", "org.slf4j.Logger.info(java.lang.String,java.lang.String)", "java.lang.String.replaceFirst(java.lang.String,java.lang.String)"], "Fixed commit": "6cf9d4e34f92ecf200f5a899eb7059d657fed7d3", "Url": "https://api.github.com/repos/lmbai/frontend-maven-plugin", "Date": "2017-11-24T09:07:58Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Class foundClass = java.lang.Class.forName(filteredClassName); foundClasses.add(foundClass); org.openflexo.gina.swing.utils.ClassEditor.LOGGER.info((\"Found class \" + foundClass)); } catch (java.lang.ClassNotFoundException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/860/buggy-version/gina-swing.src.main.java.org.openflexo.gina.swing.utils.ClassEditor.java", "BodyUseAPI": ["java.lang.Class.forName(java.lang.String)", "java.util.Vector<java.lang.Class>.add(java.lang.Class)", "java.util.logging.Logger.info(java.lang.String)"], "Fixed commit": "16b774a54e64ba9f6a02ae4d6af24c194658e0a7", "Url": "https://api.github.com/repos/openflexo-team/gina", "Date": "2016-10-27T17:18:00Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { s3Object.close(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5601/buggy-version/src.java.com.netflix.ice.common.AwsUtils.java", "BodyUseAPI": ["com.netflix.ice.common.S3Object.close()"], "Fixed commit": "ab83c89e0a44f045fed16fe754f983aa269a40c2", "Url": "https://api.github.com/repos/jimroth/ice", "Date": "2017-11-08T23:03:13Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { s3Object.close(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5601/buggy-version/src.java.com.netflix.ice.common.AwsUtils.java", "BodyUseAPI": ["com.netflix.ice.common.S3Object.close()"], "Fixed commit": "ab83c89e0a44f045fed16fe754f983aa269a40c2", "Url": "https://api.github.com/repos/jimroth/ice", "Date": "2017-11-08T23:03:13Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { pageExists = page.hasExpectedPageTitle(); } catch (com.paypal.selion.testcomponents.PageYamlException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4814/buggy-version/client.src.main.java.com.paypal.selion.platform.html.AbstractElement.java", "BodyUseAPI": ["com.paypal.selion.testcomponents.BasicPageImpl.hasExpectedPageTitle()"], "Fixed commit": "3e48b54461e6c55bc9b03f3d82948694ad66c55b", "Url": "https://api.github.com/repos/azaytsev/SeLion", "Date": "2014-12-19T09:01:01Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { au.edu.uq.cmm.paul.PaulConfiguration oldConfig = em.createQuery(\"from PaulConfiguration\", au.edu.uq.cmm.paul.PaulConfiguration.class).getSingleResult(); em.remove(oldConfig); } catch (javax.persistence.NoResultException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6431/buggy-version/paul.src.main.java.au.edu.uq.cmm.paul.servlet.ConfigurationManager.java", "BodyUseAPI": ["javax.persistence.EntityManager.createQuery(java.lang.String,java.lang.Class)", "javax.persistence.EntityManager.remove(au.edu.uq.cmm.paul.PaulConfiguration)", "em.createQuery(\"from PaulConfiguration\", au.edu.uq.cmm.paul.PaulConfiguration.class).getSingleResult()"], "Fixed commit": "a443d831c1ae69d07ce936d177a0740ffe675251", "Url": "https://api.github.com/repos/UQ-CMM-Mirage/CMM-data-grabber", "Date": "2013-05-29T07:27:48Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { au.edu.uq.cmm.eccles.EcclesProxyConfiguration oldProxyConfig = em.createQuery(\"from EcclesProxyConfiguration\", au.edu.uq.cmm.eccles.EcclesProxyConfiguration.class).getSingleResult(); em.remove(oldProxyConfig); } catch (javax.persistence.NoResultException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6431/buggy-version/paul.src.main.java.au.edu.uq.cmm.paul.servlet.ConfigurationManager.java", "BodyUseAPI": ["javax.persistence.EntityManager.createQuery(java.lang.String,java.lang.Class)", "javax.persistence.EntityManager.remove(au.edu.uq.cmm.eccles.EcclesProxyConfiguration)", "em.createQuery(\"from EcclesProxyConfiguration\", au.edu.uq.cmm.eccles.EcclesProxyConfiguration.class).getSingleResult()"], "Fixed commit": "a443d831c1ae69d07ce936d177a0740ffe675251", "Url": "https://api.github.com/repos/UQ-CMM-Mirage/CMM-data-grabber", "Date": "2013-05-29T07:27:48Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(500); } catch (java.lang.InterruptedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5898/buggy-version/app.src.main.java.cs.dal.weatherapp.MainActivity.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "79ff0307d616d3932e08e78ad25dfdb03e8b98a3", "Url": "https://api.github.com/repos/dpulsifer/WeatherApp", "Date": "2017-03-13T13:03:10Z"},
{"Line": "=>768", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { trySending(apns.get(0), bytesToSend, false); } catch (java.lang.Exception e) { context.sendBroadcast(new com.klinker.android.send_message.Intent(\"com.klinker.android.send_message.MMS_ERROR\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2171/buggy-version/src.com.klinker.android.send_message.Transaction.java", "BodyUseAPI": ["com.klinker.android.send_message.Transaction.3.trySending(apns.get(0),byte[],boolean)", "java.util.List<com.google.android.mms.APN>.get(int)"], "Fixed commit": "487d5dc979a7d48604471b4355f2b7593c682176", "Url": "https://api.github.com/repos/klinker41/android-smsmms", "Date": "2013-08-28T21:18:22Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { db.MySQLConnection.conn = db.MySQLConnection.source.getConnection(); } catch (java.sql.SQLException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5880/buggy-version/src.db.MySQLConnection.java", "BodyUseAPI": ["org.apache.tomcat.dbcp.dbcp2.BasicDataSource.getConnection()"], "Fixed commit": "37a61ab5f4d2e9aa65a443c75d48133006e2cedf", "Url": "https://api.github.com/repos/nikartix/OOP_ProblemPage", "Date": "2015-06-29T14:32:24Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { result = org.rascalmpl.uri.URIUtil.fixUnicode(resolved.toURI()); } catch (java.net.URISyntaxException e) { java.lang.String path = resolved.getPath(); if (path.startsWith(\"file:\")) { path = path.substring(5); } result = org.rascalmpl.uri.URIUtil.create(resolved.getProtocol(), resolved.getAuthority(), path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2362/buggy-version/src.org.rascalmpl.eclipse.uri.BundleURIResolver.java", "BodyUseAPI": ["java.net.URL.toURI()", "org.rascalmpl.uri.URIUtil.fixUnicode(java.net.URI)"], "Fixed commit": "14fbfba571ab9128b2636ba29d43c7b467e969c2", "Url": "https://api.github.com/repos/cwi-swat/rascal-eclipse", "Date": "2013-10-28T16:25:48Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((phaseRoadMapCollection.count(new org.bson.Document(\"phaseRoadMapId\", topicStructure.getPhaseRoadMapId()))) == 0) { phaseRoadMapIdCheck = false; }else if ((phaseRoadMapCollection.count(new org.bson.Document(\"phaseRoadMapId\", topicStructure.getPhaseRoadMapId()))) == 1) { phaseRoadMapIdCheck = true; }else { com.enow.storm.TriggerTopology.StagingBolt.LOG.debug(\"There are more than two Phase Roadmap Id on MongoDB\"); } } catch (java.lang.NumberFormatException e) { e.getMessage(); phaseRoadMapIdCheck = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/887/buggy-version/src.main.java.com.enow.storm.TriggerTopology.StagingBolt.java", "BodyUseAPI": ["com.enow.storm.TriggerTopology.TopicStructure.getPhaseRoadMapId()", "org.slf4j.Logger.debug(java.lang.String)", "com.mongodb.client.MongoCollection<org.bson.Document>.count(org.bson.Document)", "com.enow.storm.TriggerTopology.TopicStructure.getPhaseRoadMapId()", "com.mongodb.client.MongoCollection<org.bson.Document>.count(org.bson.Document)"], "Fixed commit": "126f6045c7ec74963bedc7be2dda225290615f3c", "Url": "https://api.github.com/repos/ENOW-IJI/ENOW-server", "Date": "2016-08-30T07:53:37Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (utils.CFacade.getInstance().checkAIStatus(currentTeam)) { utils.CFacade.getInstance().doAIGameTurn(actionController, currentTeam); } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8424/buggy-version/src.controller.GameController.java", "BodyUseAPI": ["utils.CFacade.getInstance().checkAIStatus(model.piece.Team)", "utils.CFacade.getInstance().doAIGameTurn(controller.ActionController,model.piece.Team)", "utils.CFacade.getInstance()", "utils.CFacade.getInstance()"], "Fixed commit": "df08cfa41ec70975b0431e95df5d93fa863371b3", "Url": "https://api.github.com/repos/S4KH/mystic-ents", "Date": "2016-05-29T01:59:33Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { resultList = ((java.util.ArrayList<java.lang.String>) (results.values)); } catch (java.lang.ClassCastException e) { resultList = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4326/buggy-version/android.src.com.sims.topaz.PlaceSearchFragment.java", "BodyUseAPI": [], "Fixed commit": "9e543222b1007c3bcc5cae25d8effb3b8d1b0e34", "Url": "https://api.github.com/repos/SIMS-Topaz/sims-topaz-android", "Date": "2014-03-01T15:09:22Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ru.salauyou.util.misc.BeanHelper.PROXY_TESTERS.add(java.lang.Class.forName(\"org.springframework.util.ClassUtils\").getMethod(\"isCglibProxyClass\", java.lang.Class.class)); } catch (java.lang.ReflectiveOperationException | java.lang.SecurityException ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5759/buggy-version/src.main.java.ru.salauyou.util.misc.BeanHelper.java", "BodyUseAPI": ["java.lang.Class.forName(java.lang.String)", "java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method)", "java.lang.Class<?>.getMethod(java.lang.String,java.lang.Class)"], "Fixed commit": "5cd46a39f2d35c3c4c9084babf21708c685260dc", "Url": "https://api.github.com/repos/Salauyou/Java-Utils", "Date": "2016-07-06T11:56:23Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { commitSessionInternal(); } catch (java.lang.RuntimeException ex) { rollbackSession(); throw ex; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4494/buggy-version/neutron-core.src.main.java.zhy2002.neutron.UiNodeChangeEngineImpl.java", "BodyUseAPI": ["zhy2002.neutron.UiNodeChangeEngineImpl.commitSessionInternal()"], "Fixed commit": "490edf5d7093de55ab7f3a7a63694220f9b6ab7d", "Url": "https://api.github.com/repos/zhy2002/neutron", "Date": "2017-04-28T01:35:32Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { builder.append(\"&\").append(p).append(\"[\").append(i).append(\"]\").append(\"=\").append(java.net.URLEncoder.encode(this.get(i).get(p), \"UTF-8\")); } catch (java.io.UnsupportedEncodingException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6825/buggy-version/lastfm-library.src.main.java.com.ag.lfm.ScrobbleParameters.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "com.ag.lfm.ScrobbleParameters.get(int)", "java.lang.StringBuilder.append(java.lang.String)", "com.ag.lfm.LfmParameters.get(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(int)", "java.lang.StringBuilder.append(java.lang.String)", "java.net.URLEncoder.encode(this.get(i).get(p),java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "661f56e9a65afb2c98a7b62b674e4f8011b2b5c8", "Url": "https://api.github.com/repos/4-Eyes/lastfm-lib", "Date": "2017-03-14T14:28:18Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { permission_file = file; } catch (java.io.FileNotFoundException e) { java.lang.System.out.println(\"File not found\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/7943/buggy-version/src.main.java.com.keegan.bot.Dude_Guy_Bot.Main.java", "BodyUseAPI": [], "Fixed commit": "aa5e8b6015487185f29b76fcda39259c90bde39a", "Url": "https://api.github.com/repos/poonkeegan/Dude_Guy_Bot", "Date": "2016-08-14T20:06:50Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Long numerator = java.lang.Long.valueOf(numeratorStr); java.lang.Long denominator = java.lang.Long.valueOf(denominatorStr); doubleVal = ((double) (numerator)) / ((double) (denominator)); } catch (java.lang.NumberFormatException ex) { java.math.BigDecimal bigNumerator = new java.math.BigDecimal(numeratorStr); java.math.BigDecimal bigDenominator = new java.math.BigDecimal(denominatorStr); java.math.BigDecimal rational = bigNumerator.divide(bigDenominator, org.evosuite.symbolic.solver.z3str2.Z3Str2ResultParser.BIG_DECIMAL_SCALE, java.math.BigDecimal.ROUND_UP); doubleVal = rational.doubleValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/7593/buggy-version/client.src.main.java.org.evosuite.symbolic.solver.z3str2.Z3Str2ResultParser.java", "BodyUseAPI": ["java.lang.Long.valueOf(java.lang.String)", "java.lang.Long.valueOf(java.lang.String)"], "Fixed commit": "d261158df1c9d29e2814eb18447f8aa7818ec515", "Url": "https://api.github.com/repos/EvoSuite/evosuite", "Date": "2015-11-06T16:41:50Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { TurtleManagers.userManager.login(); } catch (java.lang.NullPointerException e) { e.printStackTrace(); org.sunshinelibrary.turtle.utils.Logger.e(\"-=-=-=-=-=-=-> Current userManager is Null !!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8222/buggy-version/src.org.sunshinelibrary.turtle.SyncTriggerReceiver.java", "BodyUseAPI": ["TurtleManagers.userManager.login()"], "Fixed commit": "49403da1decc786d9b0cbd96953fd5016acd4a31", "Url": "https://api.github.com/repos/SunshineLibrary/turtle-android", "Date": "2014-03-14T07:52:32Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ret = tasks.remove(); for (org.sunshinelibrary.turtle.taskmanager.TaskManagerCallback callback : callbackList) { callback.onTaskChange(); } } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8222/buggy-version/src.org.sunshinelibrary.turtle.taskmanager.SyncTaskManager.java", "BodyUseAPI": ["java.util.concurrent.ConcurrentLinkedQueue<org.sunshinelibrary.turtle.taskmanager.WebAppTask>.remove()", "org.sunshinelibrary.turtle.taskmanager.TaskManagerCallback.onTaskChange()"], "Fixed commit": "49403da1decc786d9b0cbd96953fd5016acd4a31", "Url": "https://api.github.com/repos/SunshineLibrary/turtle-android", "Date": "2014-03-14T07:52:32Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (java.lang.String beanName : appCtx.getBeanDefinitionNames()) { java.lang.Object bean = appCtx.getBean(beanName); if (org.springframework.aop.support.AopUtils.isJdkDynamicProxy(bean)) { bean = ((org.springframework.aop.framework.Advised) (bean)).getTargetSource().getTarget(); } if ((bean != null) && (bean.getClass().isAssignableFrom(targetClass))) { return beanName; } } } catch (java.lang.Exception e) { throw new java.lang.RuntimeException(\"ff4j-aop: Cannot read bheind proxy target\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/998/buggy-version/ff4j-aop.src.main.java.org.ff4j.aop.FeatureAdvisor.java", "BodyUseAPI": ["((org.springframework.aop.framework.Advised) (bean)).getTargetSource().getTarget()", "java.lang.Class<? extends java.lang.Object>.isAssignableFrom(java.lang.Class<?>)", "java.lang.Object.getClass()", "org.springframework.context.ApplicationContext.getBeanDefinitionNames()", "org.springframework.aop.support.AopUtils.isJdkDynamicProxy(java.lang.Object)", "org.springframework.context.ApplicationContext.getBean(java.lang.String)", "java.lang.Object.getTargetSource()"], "Fixed commit": "c1bb74d093519d7bf0d931d39e81453f10b6dc18", "Url": "https://api.github.com/repos/ff4j/ff4j", "Date": "2015-12-18T08:59:04Z"},
{"Line": "=>470", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.updateSignatureURL = new java.net.URL(((this.updateURL.toExternalForm()) + \".asc\")); } catch (java.net.MalformedURLException ex) { java.util.logging.Logger.getLogger(eu.mihosoft.vrl.system.VRLUpdater.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6571/buggy-version/VRL.src.eu.mihosoft.vrl.system.VRLUpdater.java", "BodyUseAPI": ["java.net.URL.toExternalForm()"], "Fixed commit": "f116894b34fbacd50ce4b1a9b2b144edd590e2c3", "Url": "https://api.github.com/repos/miho/VRL", "Date": "2014-04-29T08:46:41Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { de.caluga.morphium.driver.mongodb.Document res = mongo.getDatabase(\"local\").runCommand(new de.caluga.morphium.driver.mongodb.BasicDBObject(\"isMaster\", true)); if ((res.get(\"setName\")) != null) { replicaset = true; } } catch (de.caluga.morphium.driver.mongodb.MongoCommandException mce) { if ((mce.getCode()) == 20) { replicaset = false; }else { throw new de.caluga.morphium.driver.MorphiumDriverException(\"Error getting replicaset status\", mce); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/1062/buggy-version/src.de.caluga.morphium.driver.mongodb.Driver.java", "BodyUseAPI": ["mongo.getDatabase(\"local\").runCommand(de.caluga.morphium.driver.mongodb.BasicDBObject)", "de.caluga.morphium.driver.mongodb.MongoClient.getDatabase(java.lang.String)", "de.caluga.morphium.driver.mongodb.Document.get(java.lang.String)"], "Fixed commit": "5d642d540f7a8d05284bf572cd812bfcda4a3657", "Url": "https://api.github.com/repos/sboesebeck/morphium", "Date": "2016-02-13T17:54:40Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.icon = new javax.swing.ImageIcon(getClass().getClassLoader().getResource(Constants.APP_IMAGE)); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/9024/buggy-version/src.com.github.unixpackage.components.CommonFrame.java", "BodyUseAPI": ["com.github.unixpackage.components.CommonFrame.getClass()", "java.lang.Class<? extends com.github.unixpackage.components.CommonFrame>.getClassLoader()", "java.lang.ClassLoader.getResource(Constants.APP_IMAGE)"], "Fixed commit": "31a7cff1ed8d87357a335c6bacbd9fef5be25af4", "Url": "https://api.github.com/repos/CarolinaFernandez/unixpackage", "Date": "2015-09-01T22:07:55Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { metaId = java.lang.Integer.parseInt(req.getParameter(com.imcode.imcms.servlet.admin.AdminDoc.PARAMETER__META_ID)); } catch (java.lang.NumberFormatException e) { e.printStackTrace(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4693/buggy-version/src.main.java.com.imcode.imcms.servlet.admin.AdminDoc.java", "BodyUseAPI": ["java.lang.Integer.parseInt(req.getParameter(com.imcode.imcms.servlet.admin.AdminDoc.PARAMETER__META_ID))", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Fixed commit": "190ce4a006b4192dc3474f2114d00bccc7efcfff", "Url": "https://api.github.com/repos/imCodePartnerAB/imcms", "Date": "2016-02-22T08:57:54Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { goserver.Goserver.ServerState state = service.state(goserver.Goserver.Empty.newBuilder().build()); java.lang.System.out.println((\"HERE => \" + (state.getStatesList()))); for (goserver.Goserver.State st : state.getStatesList()) { if (st.getKey().equals(\"core\")) { if ((st.getTimeValue()) > 0) { s.update(entry, ((st.getTimeValue()) + \"\")); }else { s.update(entry, ((st.getValue()) + \"\")); } } } } catch (java.lang.Exception e) { java.lang.System.out.println(\"Skipping update\"); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5171/buggy-version/src.main.java.com.github.brotherlogic.serverstatus.Model.java", "BodyUseAPI": ["goserverServiceGrpc.goserverServiceBlockingStub.state(goserver.Goserver.Empty.newBuilder().build())", "java.io.PrintStream.println((\"HERE => \" + (state.getStatesList())))", "st.getKey().equals(java.lang.String)", "goserver.Goserver.ServerState.getStatesList()", "goserver.Goserver.Empty.newBuilder().build()", "goserver.Goserver.State.getKey()", "goserver.Goserver.State.getTimeValue()", "goserver.Goserver.ServerState.getStatesList()", "com.github.brotherlogic.serverstatus.State.update(discovery.Discovery.RegistryEntry,((st.getTimeValue()) + \"\"))", "goserver.Goserver.Empty.newBuilder()", "goserver.Goserver.State.getValue()", "com.github.brotherlogic.serverstatus.State.update(discovery.Discovery.RegistryEntry,((st.getValue()) + \"\"))", "goserver.Goserver.State.getTimeValue()"], "Fixed commit": "32df61baff2a8c4a7c97283731b6d6810ebe95c4", "Url": "https://api.github.com/repos/brotherlogic/serverstatus", "Date": "2017-12-03T02:23:34Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { is.setCharacterStream(new java.io.StringReader(edu.stanford.BuildCourseXMLTable.courseXML(termCode))); doc = edu.stanford.CourseTrans.courseDoc(edu.stanford.BuildCourseXMLTable.getDocument(is)); } catch (java.lang.Exception e) { edu.stanford.BuildCourseXMLTable.log.warn((\"No input source for document: \" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1989/buggy-version/Course.src.main.java.edu.stanford.BuildCourseXMLTable.java", "BodyUseAPI": ["org.xml.sax.InputSource.setCharacterStream(java.io.StringReader)", "edu.stanford.BuildCourseXMLTable.courseXML(java.lang.String)", "edu.stanford.CourseTrans.courseDoc(org.jdom2.Document)", "edu.stanford.BuildCourseXMLTable.getDocument(org.xml.sax.InputSource)"], "Fixed commit": "dc24af56fcf86b2b84b91d096399c5be26789b74", "Url": "https://api.github.com/repos/sul-dlss/registry-harvester", "Date": "2017-10-04T17:59:55Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { r.getRecipeOutput().getUnlocalizedName(); } catch (java.lang.Exception e) { Ref.LOGGER.warn(\"[compat] Empty recipe skipped.\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4293/buggy-version/src.main.java.net.lepko.easycrafting.core.recipe.RecipeManager.java", "BodyUseAPI": ["net.minecraft.item.crafting.IRecipe.getRecipeOutput()", "r.getRecipeOutput().getUnlocalizedName()"], "Fixed commit": "c4adac4a6e3b8bd79cd265a3bd25662dad8ff151", "Url": "https://api.github.com/repos/planetguy32/EasyCrafting", "Date": "2016-11-01T05:09:24Z"},
{"Line": "=>554", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String query = params[0]; net.somethingdreadful.MAL.api.MALApi api = new net.somethingdreadful.MAL.api.MALApi(context); switch (job) { case 1 : _result = api.getMostPopular(getListType(), 1); break; case 2 : _result = api.getTopRated(getListType(), 1); break; } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8001/buggy-version/Atarashii.src.net.somethingdreadful.MAL.Home.java", "BodyUseAPI": ["net.somethingdreadful.MAL.api.MALApi.getTopRated(MALApi.ListType,int)", "net.somethingdreadful.MAL.api.MALApi.getMostPopular(MALApi.ListType,int)", "net.somethingdreadful.MAL.Home.networkThread.getListType()", "net.somethingdreadful.MAL.Home.networkThread.getListType()"], "Fixed commit": "4bac93710c77626117eb80ed4db383b852c911b9", "Url": "https://api.github.com/repos/AnimaSA/Atarashii", "Date": "2013-08-28T11:59:39Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { return getSet(Entities.NAMESPACE_METADATA_KIND); } finally { com.google.appengine.api.NamespaceManager.set(oldNS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7686/buggy-version/datastore.src.main.java.org.jboss.capedwarf.datastore.NamespaceServiceImpl.java", "BodyUseAPI": ["org.jboss.capedwarf.datastore.NamespaceServiceImpl.getSet(Entities.NAMESPACE_METADATA_KIND)"], "Fixed commit": "b5045e1ec78da38b67db237c3089f1f7390447f8", "Url": "https://api.github.com/repos/capedwarf/capedwarf-blue", "Date": "2013-04-16T09:18:38Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { return getSet(Entities.KIND_METADATA_KIND); } finally { com.google.appengine.api.NamespaceManager.set(oldNS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7686/buggy-version/datastore.src.main.java.org.jboss.capedwarf.datastore.NamespaceServiceImpl.java", "BodyUseAPI": ["org.jboss.capedwarf.datastore.NamespaceServiceImpl.getSet(Entities.KIND_METADATA_KIND)"], "Fixed commit": "b5045e1ec78da38b67db237c3089f1f7390447f8", "Url": "https://api.github.com/repos/capedwarf/capedwarf-blue", "Date": "2013-04-16T09:18:38Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.net.URL urlICN = java.lang.ClassLoader.getSystemResource(rutaFavicon); ventana.setIconImage(new javax.swing.ImageIcon(urlICN).getImage()); } catch (java.lang.Exception e) { java.lang.System.out.println(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7712/buggy-version/src.org.japo.java.libraries.UtilesSwing.java", "BodyUseAPI": ["java.lang.ClassLoader.getSystemResource(java.lang.String)", "javax.swing.JFrame.setIconImage(java.awt.Image)", "javax.swing.ImageIcon.getImage()"], "Fixed commit": "c659a3d667567ecacd3c033ca8f4bf4991c6e30a", "Url": "https://api.github.com/repos/joanpaon/ShopAssistant", "Date": "2017-08-17T13:26:38Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Integer value = java.lang.Integer.parseInt(s); return value >= 0; } catch (java.lang.NumberFormatException e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1881/buggy-version/src.gui.product.EditProductController.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "c4a91065df2aa33f81b0c23dff4ec2b2d5b3273e", "Url": "https://api.github.com/repos/djhaskin987/snake", "Date": "2013-11-20T02:59:48Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { scans = parseToScans(pID, segmentJson, startUid, endUid, null); } catch (java.text.ParseException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2771/buggy-version/src.main.java.com.xingcloud.qt.query.hbase.QueryHBase.java", "BodyUseAPI": ["com.xingcloud.qt.query.hbase.QueryHBase.parseToScans(java.lang.String,java.lang.String,long,long,<nulltype>)"], "Fixed commit": "eb86c04ef2fcb46079e69752ecced79bef77685a", "Url": "https://api.github.com/repos/snakev/QT", "Date": "2013-05-16T03:02:44Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { scans = parseToScans(pID, segmentJson, startUid, endUid, groupByAttr); } catch (java.text.ParseException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2771/buggy-version/src.main.java.com.xingcloud.qt.query.hbase.QueryHBase.java", "BodyUseAPI": ["com.xingcloud.qt.query.hbase.QueryHBase.parseToScans(java.lang.String,java.lang.String,long,long,java.lang.String)"], "Fixed commit": "eb86c04ef2fcb46079e69752ecced79bef77685a", "Url": "https://api.github.com/repos/snakev/QT", "Date": "2013-05-16T03:02:44Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { result = java.lang.Integer.parseInt(romp[romp_ptr]._name); } catch (java.lang.Exception e) { result = 15; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7006/buggy-version/emulator.src.mame.commonH.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "15631eaeb762552205ca89f6b4a01e4359a25ccf", "Url": "https://api.github.com/repos/georgemoralis/arcadeflex037b11", "Date": "2015-11-13T23:44:10Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { port = java.lang.Integer.parseInt(portstring); } catch (java.lang.NumberFormatException e) { port = 21; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3889/buggy-version/src.main.java.edu.pdx.cs510.agile.team3.FTP.CLIClient.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "231ee13a904eaed89cdd5a317ff5e5fe3553706a", "Url": "https://api.github.com/repos/glass2/EZFTP", "Date": "2017-08-09T01:54:46Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { res = ((diaz.rodriguez.entities.Usuario) (query.getSingleResult())); } catch (java.lang.Exception ex) { res = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3780/buggy-version/EAppTfm-ejb.src.main.java.diaz.rodriguez.sessionbeans.UsuarioFacade.java", "BodyUseAPI": ["javax.persistence.Query.getSingleResult()"], "Fixed commit": "44e1623aaffc2fdbe6e4397838053d6c2fae29a6", "Url": "https://api.github.com/repos/marcRDZ/TFM_MRD", "Date": "2015-03-14T10:59:31Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.goalSelector.a(1, new com.gmail.oaplugins.ai.Pathfinder(this, 1.2F, org.bukkit.Bukkit.getServer().getPlayer(this.getCustomName().replace(\"'s Ocelot\", \"\")).getLocation())); } catch (java.lang.NullPointerException e) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2642/buggy-version/src.com.gmail.oaplugins.entities.CustomEntityOcelot.java", "BodyUseAPI": ["this.goalSelector.a(int,com.gmail.oaplugins.ai.Pathfinder)", "org.bukkit.Bukkit.getServer().getPlayer(this.getCustomName().replace(\"'s Ocelot\", \"\")).getLocation()", "org.bukkit.Bukkit.getServer()", "com.gmail.oaplugins.entities.CustomEntityOcelot.getCustomName()", "org.bukkit.Bukkit.getServer().getPlayer(this.getCustomName().replace(\"'s Ocelot\", \"\"))", "this.getCustomName().replace(java.lang.String,java.lang.String)"], "Fixed commit": "448a7e15bbeb6a029492bb2b870864a8f26d3202", "Url": "https://api.github.com/repos/OpenAirPlugins/PetBukkit", "Date": "2014-06-11T19:37:33Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.goalSelector.a(1, new com.gmail.oaplugins.ai.Pathfinder(this, 1.2F, org.bukkit.Bukkit.getServer().getPlayer(this.getCustomName().replace(\"'s Cow\", \"\")).getLocation())); } catch (java.lang.NullPointerException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2642/buggy-version/src.com.gmail.oaplugins.entities.CustomEntityCow.java", "BodyUseAPI": ["org.bukkit.Bukkit.getServer().getPlayer(this.getCustomName().replace(\"'s Cow\", \"\")).getLocation()", "this.getCustomName().replace(java.lang.String,java.lang.String)", "com.gmail.oaplugins.entities.CustomEntityCow.getCustomName()", "org.bukkit.Bukkit.getServer()", "this.goalSelector.a(int,com.gmail.oaplugins.ai.Pathfinder)", "org.bukkit.Bukkit.getServer().getPlayer(this.getCustomName().replace(\"'s Cow\", \"\"))"], "Fixed commit": "448a7e15bbeb6a029492bb2b870864a8f26d3202", "Url": "https://api.github.com/repos/OpenAirPlugins/PetBukkit", "Date": "2014-06-11T19:37:33Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { solve(0, 0); } catch (java.lang.StackOverflowError e) { java.lang.System.out.println(\"STACKOVERFLOW\"); for (int i = 0; i < 9; i++) { for (int j = 0; j < 9; j++) { puzzle[i][j] = 0; } } solve(0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1025/buggy-version/SudokuSolver.src.sudoku.Puzzle.java", "BodyUseAPI": ["sudoku.Puzzle.solve(int,int)"], "Fixed commit": "f5f74c1c96d4fada74711487ab7493edd718896c", "Url": "https://api.github.com/repos/petefic/SudokuSolver", "Date": "2014-01-26T23:03:57Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { gvc.serverSocket.close(); } catch (java.lang.NullPointerException np) { java.lang.System.out.println(\"This client cannot close the serverSocket, Other player will do so\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6378/buggy-version/Gomoku.src.gomoku.WinLossPopupView.java", "BodyUseAPI": ["gvc.serverSocket.close()"], "Fixed commit": "3d1e3cff31189800fbd0332051cc514257559359", "Url": "https://api.github.com/repos/JeremiahParkhurst/CSCE320", "Date": "2015-05-14T01:59:29Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { searchValueAsInt = new java.lang.Integer(searchValue); } catch (java.lang.NumberFormatException nfe) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4680/buggy-version/app.src.main.java.team5.calendarproject.Search.java", "BodyUseAPI": [], "Fixed commit": "d0922f4253d720f23573c0c70873e2466947d33d", "Url": "https://api.github.com/repos/Team5-2016Q1/TermProject", "Date": "2016-04-26T21:37:19Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { javax.swing.SwingUtilities.invokeAndWait(() -> { br.univali.ps.nucleo.biblioteca.PortugolStudio.setUltimoEstado(br.univali.ps.nucleo.biblioteca.br.univali.ps.nucleo.PortugolStudio.getInstancia().getTelaPrincipal().getExtendedState()); br.univali.ps.nucleo.biblioteca.br.univali.ps.nucleo.PortugolStudio.getInstancia().getTelaPrincipal().setExtendedState(javax.swing.JFrame.ICONIFIED); }); } catch (java.lang.InterruptedException | java.lang.reflect.InvocationTargetException ex) { throw new br.univali.portugol.nucleo.bibliotecas.base.ErroExecucaoBiblioteca(ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2110/buggy-version/src.br.univali.ps.nucleo.biblioteca.PortugolStudio.java", "BodyUseAPI": ["br.univali.ps.nucleo.biblioteca.br.univali.ps.nucleo.PortugolStudio.getInstancia()", "br.univali.ps.nucleo.biblioteca.br.univali.ps.nucleo.PortugolStudio.getInstancia().getTelaPrincipal()", "br.univali.ps.nucleo.biblioteca.br.univali.ps.nucleo.PortugolStudio.getInstancia().getTelaPrincipal().getExtendedState()", "br.univali.ps.nucleo.biblioteca.br.univali.ps.nucleo.PortugolStudio.getInstancia()", "br.univali.ps.nucleo.biblioteca.br.univali.ps.nucleo.PortugolStudio.getInstancia().getTelaPrincipal()", "javax.swing.SwingUtilities.invokeAndWait(java.lang.Runnable)", "br.univali.ps.nucleo.biblioteca.PortugolStudio.setUltimoEstado(br.univali.ps.nucleo.biblioteca.br.univali.ps.nucleo.PortugolStudio.getInstancia().getTelaPrincipal().getExtendedState())", "br.univali.ps.nucleo.biblioteca.br.univali.ps.nucleo.PortugolStudio.getInstancia().getTelaPrincipal().setExtendedState(int)"], "Fixed commit": "0304ae7847e3b5561fdb73df0c864cc160b21148", "Url": "https://api.github.com/repos/UNIVALI-LITE/Portugol-Studio", "Date": "2016-08-12T18:42:31Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { javax.swing.SwingUtilities.invokeAndWait(() -> { if ((br.univali.ps.nucleo.biblioteca.br.univali.ps.nucleo.PortugolStudio.getInstancia().getTelaPrincipal().getExtendedState()) == (javax.swing.JFrame.ICONIFIED)) { br.univali.ps.nucleo.biblioteca.br.univali.ps.nucleo.PortugolStudio.getInstancia().getTelaPrincipal().setExtendedState(br.univali.ps.nucleo.biblioteca.PortugolStudio.getUltimoEstado()); br.univali.ps.nucleo.biblioteca.br.univali.ps.nucleo.PortugolStudio.getInstancia().getTelaPrincipal().toFront(); br.univali.ps.nucleo.biblioteca.br.univali.ps.nucleo.PortugolStudio.getInstancia().getTelaPrincipal().requestFocusInWindow(); } }); } catch (java.lang.InterruptedException | java.lang.reflect.InvocationTargetException ex) { throw new br.univali.portugol.nucleo.bibliotecas.base.ErroExecucaoBiblioteca(ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2110/buggy-version/src.br.univali.ps.nucleo.biblioteca.PortugolStudio.java", "BodyUseAPI": ["br.univali.ps.nucleo.biblioteca.br.univali.ps.nucleo.PortugolStudio.getInstancia().getTelaPrincipal()", "br.univali.ps.nucleo.biblioteca.br.univali.ps.nucleo.PortugolStudio.getInstancia().getTelaPrincipal()", "br.univali.ps.nucleo.biblioteca.PortugolStudio.getUltimoEstado()", "br.univali.ps.nucleo.biblioteca.br.univali.ps.nucleo.PortugolStudio.getInstancia().getTelaPrincipal()", "br.univali.ps.nucleo.biblioteca.br.univali.ps.nucleo.PortugolStudio.getInstancia()", "br.univali.ps.nucleo.biblioteca.br.univali.ps.nucleo.PortugolStudio.getInstancia().getTelaPrincipal().setExtendedState(int)", "br.univali.ps.nucleo.biblioteca.br.univali.ps.nucleo.PortugolStudio.getInstancia().getTelaPrincipal().requestFocusInWindow()", "br.univali.ps.nucleo.biblioteca.br.univali.ps.nucleo.PortugolStudio.getInstancia().getTelaPrincipal().getExtendedState()", "br.univali.ps.nucleo.biblioteca.br.univali.ps.nucleo.PortugolStudio.getInstancia()", "javax.swing.SwingUtilities.invokeAndWait(java.lang.Runnable)", "br.univali.ps.nucleo.biblioteca.br.univali.ps.nucleo.PortugolStudio.getInstancia().getTelaPrincipal().toFront()", "br.univali.ps.nucleo.biblioteca.br.univali.ps.nucleo.PortugolStudio.getInstancia().getTelaPrincipal()", "br.univali.ps.nucleo.biblioteca.br.univali.ps.nucleo.PortugolStudio.getInstancia()", "br.univali.ps.nucleo.biblioteca.br.univali.ps.nucleo.PortugolStudio.getInstancia()"], "Fixed commit": "0304ae7847e3b5561fdb73df0c864cc160b21148", "Url": "https://api.github.com/repos/UNIVALI-LITE/Portugol-Studio", "Date": "2016-08-12T18:42:31Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.watabou.noosa.Game.versionCode = getPackageManager().getPackageInfo(getPackageName(), 0).versionCode; } catch (android.content.pm.PackageManager.NameNotFoundException e) { com.watabou.noosa.Game.versionCode = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7607/buggy-version/com.watabou.noosa.Game.java", "BodyUseAPI": ["com.watabou.noosa.Game.getPackageManager()", "getPackageManager().getPackageInfo(getPackageName(),int)", "com.watabou.noosa.Game.getPackageName()"], "Fixed commit": "cf50e2e45382808891f2bf2661bc15e49ba69b9b", "Url": "https://api.github.com/repos/00-Evan/PD-classes", "Date": "2014-08-31T07:42:31Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { trapCollector.add(payload); } catch (java.lang.Throwable current) { throw new cascading.flow.stream.TrapException((\"could not write to trap: \" + (trap.getIdentifier())), current); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7257/buggy-version/cascading-core.src.main.java.cascading.flow.stream.TrapHandler.java", "BodyUseAPI": ["cascading.tuple.TupleEntryCollector.add(cascading.tuple.TupleEntry)"], "Fixed commit": "7a49127eab0f3f19c6bdeff3cb8777ff2590d3ce", "Url": "https://api.github.com/repos/cwensel/cascading", "Date": "2015-03-19T23:14:08Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { reporter.createFileReport(getNodeName(), getExitCode(), getRuntimeData().getWorkingDir(), getSystemStatus()); } catch (final java.lang.Throwable t) { org.erlide.util.ErlLogger.warn(t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3679/buggy-version/org.erlide.runtime.src.org.erlide.runtime.internal.ErlRuntime.java", "BodyUseAPI": ["org.erlide.runtime.internal.ErlRuntimeReporter.createFileReport(java.lang.String,int,getRuntimeData().getWorkingDir(),org.erlide.runtime.api.ErlSystemStatus)", "org.erlide.runtime.internal.ErlRuntime.ErlRuntimeListener.getExitCode()", "org.erlide.runtime.internal.ErlRuntime.ErlRuntimeListener.getSystemStatus()", "org.erlide.runtime.internal.ErlRuntime.ErlRuntimeListener.getNodeName()", "org.erlide.runtime.api.RuntimeData.getWorkingDir()", "org.erlide.runtime.internal.ErlRuntime.ErlRuntimeListener.getRuntimeData()"], "Fixed commit": "2f81718aaa34daa3b418fd7148f1ab83d551854a", "Url": "https://api.github.com/repos/erlide/erlide", "Date": "2013-06-28T13:30:44Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.uma.jmetal.problem.singleobjective.WindScenario ws = new org.uma.jmetal.problem.singleobjective.WindScenario(\"/home/guotong/code/WindFLO/Scenarios/00.xml\"); this.initialize(ws); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8679/buggy-version/jmetal-problem.src.main.java.org.uma.jmetal.problem.singleobjective.WindFLO.java", "BodyUseAPI": ["org.uma.jmetal.problem.singleobjective.WindFLO.initialize(org.uma.jmetal.problem.singleobjective.WindScenario)"], "Fixed commit": "55526b6c87860ddcf4ea11842190bb6f9312a98d", "Url": "https://api.github.com/repos/DarkMagician55/jMetal", "Date": "2016-04-24T15:31:29Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { db = db_open_helper.getWritableDatabase(); } catch (java.lang.Exception e) { android.util.Log.i(\"getWritableDatabase \u9519\u8bef \", e.toString()); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2670/buggy-version/filedownloader.filedownloader.src.main.java.com.mindpin.android.filedownloader.FileRecord.java", "BodyUseAPI": ["com.mindpin.android.filedownloader.DBOpenHelper.getWritableDatabase()"], "Fixed commit": "054751340b1776a9a78ca4712311367ddf51d94c", "Url": "https://api.github.com/repos/mindpin/FileDownloaderManager", "Date": "2014-07-17T01:26:55Z"},
{"Line": "=>979", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { gov.healthit.chpl.domain.CertifiedProduct found = searchDao.getByChplProductNumber(parent.getChplProductNumber()); if (found != null) { parent.setId(found.getId()); } } catch (java.lang.Exception ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/679/buggy-version/chpl.chpl-service.src.main.java.gov.healthit.chpl.manager.impl.CertifiedProductManagerImpl.java", "BodyUseAPI": ["gov.healthit.chpl.domain.CertifiedProduct.getChplProductNumber()", "gov.healthit.chpl.domain.CertifiedProduct.getId()", "gov.healthit.chpl.dao.search.CertifiedProductSearchDAO.getByChplProductNumber(parent.getChplProductNumber())", "gov.healthit.chpl.domain.CertifiedProduct.setId(found.getId())"], "Fixed commit": "15d80faa61c39955327c8310e6c247ba8d4fd300", "Url": "https://api.github.com/repos/kekey1/chpl-api", "Date": "2017-10-19T20:50:33Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { buildGoogleApiClient(); } catch (java.lang.Exception e) { e.printStackTrace(); com.bloc.blocspot.utilities.Message.message(this, \"Google API not connected\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5023/buggy-version/android-blocspot.BlocSpot.src.main.java.com.bloc.blocspot.BlocSpotActivity.java", "BodyUseAPI": ["com.bloc.blocspot.BlocSpotActivity.buildGoogleApiClient()"], "Fixed commit": "4865786f742dcb188fccb05046430cee9508fc32", "Url": "https://api.github.com/repos/jetav8r/android-source", "Date": "2015-01-02T16:04:20Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ((Parse.IClass) (classes.get(cName))).addMethod(method.name, method); } catch (java.lang.Exception e) { ((Parse.IClass) (interfaces.get(cName))).addMethod(method.name, method); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1864/buggy-version/src.Parse.ParsedDataStorage.java", "BodyUseAPI": ["((Parse.IClass) (classes.get(cName))).addMethod(method.name,Parse.IData)", "java.util.Map<java.lang.String, Parse.IData>.get(java.lang.String)"], "Fixed commit": "296cc65e72069e0f1d15a561f0970581ff2d23c5", "Url": "https://api.github.com/repos/cbudo/UMLCreator", "Date": "2016-01-05T08:21:02Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ((Parse.IClass) (classes.get(cName))).addField(field.name, field); } catch (java.lang.Exception e) { ((Parse.IClass) (interfaces.get(cName))).addField(field.name, field); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1864/buggy-version/src.Parse.ParsedDataStorage.java", "BodyUseAPI": ["java.util.Map<java.lang.String, Parse.IData>.get(java.lang.String)", "((Parse.IClass) (classes.get(cName))).addField(field.name,Parse.IData)"], "Fixed commit": "296cc65e72069e0f1d15a561f0970581ff2d23c5", "Url": "https://api.github.com/repos/cbudo/UMLCreator", "Date": "2016-01-05T08:21:02Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { stop(); } catch (java.io.IOException | java.lang.InterruptedException e) { com.cicc.tts.Speak.say(\"Error\"); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5108/buggy-version/src.com.cicc.voiceCont.Main.java", "BodyUseAPI": ["1.stop()"], "Fixed commit": "c6d54b471a5e297d6c5d7b6239e5d63e152e1abe", "Url": "https://api.github.com/repos/buster52000/Pi-Control", "Date": "2014-08-18T23:42:52Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { stop(); } catch (java.io.IOException | java.lang.InterruptedException e) { com.cicc.tts.Speak.say(\"Error\"); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5108/buggy-version/src.com.cicc.voiceCont.Main.java", "BodyUseAPI": ["com.cicc.voiceCont.Main.3.stop()"], "Fixed commit": "c6d54b471a5e297d6c5d7b6239e5d63e152e1abe", "Url": "https://api.github.com/repos/buster52000/Pi-Control", "Date": "2014-08-18T23:42:52Z"},
{"Line": "=>1161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { displayString = proposal.getDisplayString(); image = proposal.getImage(); } catch (java.lang.RuntimeException e) { java.lang.String PLUGIN_ID = \"org.eclipse.jface.text\"; org.eclipse.core.runtime.ILog log = org.eclipse.core.runtime.Platform.getLog(org.eclipse.core.runtime.Platform.getBundle(PLUGIN_ID)); log.log(new org.eclipse.core.runtime.Status(org.eclipse.core.runtime.IStatus.ERROR, PLUGIN_ID, org.eclipse.core.runtime.IStatus.OK, org.eclipse.jface.text.contentassist.JFaceTextMessages.getString(\"CompletionProposalPopup.unexpected_error\"), e)); displayString = org.eclipse.jface.text.contentassist.JFaceTextMessages.getString(\"CompletionProposalPopup.error_retrieving_proposal\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4918/buggy-version/org.eclipse.jface.text.src.org.eclipse.jface.text.contentassist.CompletionProposalPopup.java", "BodyUseAPI": ["org.eclipse.jface.text.contentassist.ICompletionProposal.getImage()", "org.eclipse.jface.text.contentassist.ICompletionProposal.getDisplayString()"], "Fixed commit": "ca57b300d79431c27b32ae2113919be546cc42d9", "Url": "https://api.github.com/repos/Overruler/eclipse.platform.text", "Date": "2014-04-16T11:36:42Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Class.forName(\"org.bukkit.NamespacedKey\"); grinderRecipe = new org.bukkit.inventory.ShapedRecipe(new ru.meloncode.xmas.NamespacedKey(this, \"xmas\"), XMas.XMAS_CRYSTAL).shape(\"#d#\", \"ded\", \"#d#\").setIngredient('d', Material.DIAMOND).setIngredient('e', Material.EMERALD); } catch (java.lang.Exception e) { grinderRecipe = new org.bukkit.inventory.ShapedRecipe(XMas.XMAS_CRYSTAL).shape(\"#d#\", \"ded\", \"#d#\").setIngredient('d', Material.DIAMOND).setIngredient('e', Material.EMERALD); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2373/buggy-version/src.main.java.ru.meloncode.xmas.Main.java", "BodyUseAPI": ["org.bukkit.inventory.ShapedRecipe.shape(java.lang.String,java.lang.String,java.lang.String)", "new org.bukkit.inventory.ShapedRecipe(new ru.meloncode.xmas.NamespacedKey(this, \"xmas\"), XMas.XMAS_CRYSTAL).shape(\"#d#\", \"ded\", \"#d#\").setIngredient('d', Material.DIAMOND).setIngredient(char,Material.EMERALD)", "new org.bukkit.inventory.ShapedRecipe(new ru.meloncode.xmas.NamespacedKey(this, \"xmas\"), XMas.XMAS_CRYSTAL).shape(\"#d#\", \"ded\", \"#d#\").setIngredient(char,Material.DIAMOND)", "java.lang.Class.forName(java.lang.String)"], "Fixed commit": "b33cf234be440f21379e53808d9a15237149696f", "Url": "https://api.github.com/repos/MelonCode/X-Mas", "Date": "2017-12-25T21:40:42Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { boolean valid = isValidApiEndpoint(client, swaggerUrl); if (valid) { apis.add(new io.fabric8.api.registry.ApiDTO(podId, serviceId, labels, containerName, objectName, path, url, port, state, jolokiaUrl, swaggerPath, swaggerUrl, wadlPath, wadlUrl, wsdlPath, wsdlUrl)); } } catch (java.lang.Throwable e) { io.fabric8.api.registry.ApiFinder.LOG.error((((\"Failed to discover any APIs for \" + url) + \". \") + e), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2379/buggy-version/apps.api-registry.src.main.java.io.fabric8.api.registry.ApiFinder.java", "BodyUseAPI": ["java.util.List<io.fabric8.api.registry.ApiDTO>.add(io.fabric8.api.registry.ApiDTO)", "io.fabric8.api.registry.ApiFinder.isValidApiEndpoint(org.apache.http.impl.client.CloseableHttpClient,java.lang.String)"], "Fixed commit": "76894d13579b02d6dcf8e2ebd4016e38b9a33fa4", "Url": "https://api.github.com/repos/fabric8io/quickstarts", "Date": "2014-11-25T09:27:32Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mUser = ((org.finalappproject.findapetsitter.model.User) (org.finalappproject.findapetsitter.model.User.getCurrentUser().fetchIfNeeded())); } catch (com.parse.ParseException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3004/buggy-version/app.src.main.java.org.finalappproject.findapetsitter.fragments.UserProfileFragment.java", "BodyUseAPI": ["org.finalappproject.findapetsitter.model.User.getCurrentUser().fetchIfNeeded()", "org.finalappproject.findapetsitter.model.User.getCurrentUser()"], "Fixed commit": "13d0cef9fd893ce40cd9473756d03684233f993a", "Url": "https://api.github.com/repos/FinalAppProject/FindaPetSitter", "Date": "2016-11-16T06:57:11Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.N)) && (file != null)) builder.directory(file); } catch (java.lang.Exception e) { android.widget.Toast.makeText(this, \"\u4e3a\u4e86\u5f97\u5230\u66f4\u4f73\u7684\u7528\u6237\u4f53\u9a8c, \u8bf7\u5728\u8bbe\u7f6e\u4e2d\u6388\u4e88\u672c\u5e94\u7528\u76f8\u5173\u6743\u9650\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/916/buggy-version/app.src.main.java.top.wuhaojie.week.App.java", "BodyUseAPI": ["RealmConfiguration.Builder.directory(java.io.File)"], "Fixed commit": "4502b9dac181ea8f5d656856905d14660024d1fd", "Url": "https://api.github.com/repos/a-voyager/WeekToDo", "Date": "2017-02-11T14:15:25Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { file = new java.io.File(top.wuhaojie.week.constant.Constants.ExternalStorageDirectory, top.wuhaojie.week.constant.Constants.DATABASE_FILE_PATH_FOLDER); file.mkdirs(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/916/buggy-version/app.src.main.java.top.wuhaojie.week.App.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "4502b9dac181ea8f5d656856905d14660024d1fd", "Url": "https://api.github.com/repos/a-voyager/WeekToDo", "Date": "2017-02-11T14:15:25Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.sdl.odata.datasource.jpa.JPAEdmModelLoader.LOG.debug(\"We have a JPA Entity type: {}\", t.getBindableJavaType().getCanonicalName()); java.lang.Class<?> entityType = t.getJavaType(); foundEntities.put(entityType.getName(), entityType); } catch (java.lang.NullPointerException e) { com.sdl.odata.datasource.jpa.JPAEdmModelLoader.LOG.debug(\"An Autogenerated Entity Discovered. Not Adding to Entity Types: {}\", t.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8203/buggy-version/odata-jpa.src.main.java.com.sdl.odata.datasource.jpa.JPAEdmModelLoader.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,t.getBindableJavaType().getCanonicalName())", "t.getBindableJavaType().getCanonicalName()", "java.lang.Class<?>.getName()", "java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.String,java.lang.Class<?>)", "javax.persistence.metamodel.EntityType.getJavaType()", "javax.persistence.metamodel.EntityType.getBindableJavaType()"], "Fixed commit": "99a9e374ec681e5dfe39b9029c74733387e49a83", "Url": "https://api.github.com/repos/omersaeed/odata-jpa-datasource", "Date": "2016-12-07T18:43:31Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((mAuth.getCurrentUser().getUid()) != null) { java.lang.String uid = mAuth.getCurrentUser().getUid(); for (com.google.firebase.database.DataSnapshot dataSnapshot1 : dataSnapshot.getChildren()) { if (uid.equals(dataSnapshot1.getKey())) { txtProfile.setText(dataSnapshot1.getValue(id.ignitech.iak.Model.ModelFasilitator.class).getNama()); } } } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3993/buggy-version/app.src.main.java.id.ignitech.iak.Activity.FasilActivity.java", "BodyUseAPI": ["mAuth.getCurrentUser().getUid()", "dataSnapshot1.getValue(id.ignitech.iak.Model.ModelFasilitator.class).getNama()", "com.google.firebase.database.DataSnapshot.getChildren()", "com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)", "com.google.firebase.auth.FirebaseAuth.getCurrentUser()", "mAuth.getCurrentUser().getUid()", "com.google.firebase.database.DataSnapshot.getKey()", "com.google.firebase.auth.FirebaseAuth.getCurrentUser()", "java.lang.String.equals(dataSnapshot1.getKey())", "android.widget.TextView.setText(dataSnapshot1.getValue(id.ignitech.iak.Model.ModelFasilitator.class).getNama())"], "Fixed commit": "6f39c9a6d58b19400d734c61dcb85f0a195ee730", "Url": "https://api.github.com/repos/illukinati/indonesiaandroidkejar", "Date": "2017-12-12T05:11:59Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { bidCourses = currStudent.getBidCourses(); } catch (java.lang.Exception e) { java.lang.System.out.println(\"Error\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2220/buggy-version/ABARS.src.BidGUI.java", "BodyUseAPI": ["Student.getBidCourses()"], "Fixed commit": "f119c76058bd22c52725cef262d6c87aa94a7bee", "Url": "https://api.github.com/repos/bazaalejandro7/ABARS", "Date": "2014-12-03T19:40:24Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.System.out.println(\"Waiting for client\"); socket = ss.accept(); client = new server.ClientHandlerThread(socket); clients.add(client); java.lang.System.out.println(\"Got client!\"); client.start(); } catch (java.io.IOException e) { java.lang.System.err.println(\"Failed to accept client:\"); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3768/buggy-version/src.server.Server.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.util.ArrayList<server.ClientHandlerThread>.add(server.ClientHandlerThread)", "server.ClientHandlerThread.start()", "java.io.PrintStream.println(java.lang.String)", "java.net.ServerSocket.accept()"], "Fixed commit": "8876d097006fa1fd174cfb4ed6edd48512813434", "Url": "https://api.github.com/repos/Meldanya/eda095-project", "Date": "2013-05-02T12:41:58Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { identity = BearerMsg.get(\"Identity\"); } catch (java.lang.NullPointerException e) { identity = \"\u7121\u9a57\u8b49\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2376/buggy-version/hermit.src.main.java.com.hermit.iii.sms.controller.SMSServlet.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "62481c28a8c366e4146cba263c6bf2b1207976a4", "Url": "https://api.github.com/repos/EEITHermit/eeithermit", "Date": "2017-10-27T07:01:25Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { in = this.clientSocket.getInputStream(); } catch (java.io.IOException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6197/buggy-version/FTP.src.ServerThread.java", "BodyUseAPI": ["java.net.Socket.getInputStream()"], "Fixed commit": "644581d9ac4649103bb42fe8122b2dd8f4edf75b", "Url": "https://api.github.com/repos/jtumale1/FTPClientServer", "Date": "2016-02-03T04:53:27Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { executor.resume(continuation); } catch (net.sandius.rembulan.exec.CallException ex) { throw newLuaException(ex); } catch (net.sandius.rembulan.LuaRuntimeException ex) { throw newLuaException(ex); } catch (java.lang.Exception e) { if ((e.getCause()) instanceof net.sandius.rembulan.parser.ParseException) { throw newLuaException(((net.sandius.rembulan.parser.ParseException) (e.getCause()))); } throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6730/buggy-version/src.main.java.net.karneim.luamod.lua.LuaUtil.java", "BodyUseAPI": ["net.sandius.rembulan.exec.DirectCallExecutor.resume(net.sandius.rembulan.exec.Continuation)"], "Fixed commit": "044af500339369058a3f4930ce7e199df4a6c2d9", "Url": "https://api.github.com/repos/wizards-of-lua/wizards-of-lua", "Date": "2017-04-19T20:04:16Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mTotalsLabel.setText(getString(R.string.stats_comments_total_comments_followers, org.wordpress.android.util.FormatUtils.formatDecimal(totalNumberOfFollowers))); } catch (java.lang.AssertionError e) { mTotalsLabel.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4277/buggy-version/WordPress.src.main.java.org.wordpress.android.ui.stats.StatsCommentsFragment.java", "BodyUseAPI": ["org.wordpress.android.ui.stats.StatsCommentsFragment.setText(getString(R.string.stats_comments_total_comments_followers, org.wordpress.android.util.FormatUtils.formatDecimal(totalNumberOfFollowers)))", "org.wordpress.android.ui.stats.StatsCommentsFragment.getString(R.string.stats_comments_total_comments_followers,org.wordpress.android.util.FormatUtils.formatDecimal(totalNumberOfFollowers))", "org.wordpress.android.util.FormatUtils.formatDecimal(int)"], "Fixed commit": "24f75d094796868ecde13e0643aa617375df2c34", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-Android", "Date": "2015-05-08T09:13:08Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { expression = parser.parseExpression(adaptedValueString); } catch (java.lang.NullPointerException exception) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3674/buggy-version/treezCore.src.org.treez.core.springspel.VectorEvaluation.java", "BodyUseAPI": ["org.springframework.expression.ExpressionParser.parseExpression(java.lang.String)"], "Fixed commit": "a1700040665d4ebc2d39cdfe401a3c14d66c95e5", "Url": "https://api.github.com/repos/AmineAfia/treez", "Date": "2017-02-24T12:47:02Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { expression = parser.parseExpression(adaptedValueString); } catch (java.lang.NullPointerException exception) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3674/buggy-version/treezCore.src.org.treez.core.springspel.VectorEvaluation.java", "BodyUseAPI": ["org.springframework.expression.ExpressionParser.parseExpression(java.lang.String)"], "Fixed commit": "a1700040665d4ebc2d39cdfe401a3c14d66c95e5", "Url": "https://api.github.com/repos/AmineAfia/treez", "Date": "2017-02-24T12:47:02Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { player.setDataSource(getApplicationContext(), uri); player.setOnPreparedListener(new android.media.MediaPlayer.OnPreparedListener() { @java.lang.Override public void onPrepared(android.media.MediaPlayer mp) { playerSeek.setMax(player.getDuration()); playerSeek.setProgress(0); onPlayAction(findViewById(R.id.playButton)); new java.lang.Thread(updater).start(); } }); player.prepareAsync(); } catch (java.io.IOException e) { android.util.Log.e(org.tjdo.latotuga.LaTotugaActivity.TAG, java.lang.String.format(\"Couldn't load the mp3 %s\", mp3.getName()), e); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4268/buggy-version/app.src.main.java.org.tjdo.latotuga.LaTotugaActivity.java", "BodyUseAPI": ["org.tjdo.latotuga.LaTotugaActivity.6.onPlayAction(findViewById(R.id.playButton))", "android.media.MediaPlayer.getDuration()", "android.widget.SeekBar.setProgress(int)", "org.tjdo.latotuga.LaTotugaActivity.6.findViewById(R.id.playButton)", "java.lang.Thread.start()", "android.media.MediaPlayer.prepareAsync()", "android.media.MediaPlayer.setDataSource(getApplicationContext(),android.net.Uri)", "android.widget.SeekBar.setMax(player.getDuration())", "org.tjdo.latotuga.LaTotugaActivity.getApplicationContext()", "android.media.MediaPlayer.setOnPreparedListener(android.media.MediaPlayer.OnPreparedListener)"], "Fixed commit": "2376fa2c9028cc61238ed326e22f4eb1f0f725bc", "Url": "https://api.github.com/repos/efmcuiti/LaTotuga-Mobile", "Date": "2015-02-09T17:54:59Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { final java.util.Map<?, ?> map = req.getParameterMap(); for (final java.util.Map.Entry<?, ?> s : map.entrySet()) { final java.lang.String key = s.getKey().toString(); final java.lang.String[] vals = ((s.getValue()) instanceof java.lang.String[]) ? ((java.lang.String[]) (s.getValue())) : new java.lang.String[]{ s.getValue().toString() }; params.put(key, vals); } } catch (final java.lang.IllegalArgumentException ex) { HTTPErr.INVALID_PARAM_X.thrw(req.getQueryString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/10/buggy-version/src.main.java.org.basex.http.HTTPContext.java", "BodyUseAPI": ["java.util.Map.Entry<?, ?>.getValue()", "java.util.Map<java.lang.String, java.lang.String[]>.put(java.lang.String,java.lang.String[])", "org.basex.http.HttpServletRequest.getParameterMap()", "s.getKey().toString()", "java.util.Map.Entry<?, ?>.getKey()", "s.getValue().toString()", "java.util.Map.Entry<?, ?>.getValue()", "java.util.Map.Entry<?, ?>.getValue()", "java.util.Map<?, ?>.entrySet()"], "Fixed commit": "19011874d132a8fd0b662e2f8c50fe49e71a62c9", "Url": "https://api.github.com/repos/Masoumeh/basex-api", "Date": "2013-04-30T19:22:08Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (str.startsWith(\"class \")) { str = str.substring(6); } return java.lang.Class.forName(str); } catch (java.lang.ClassNotFoundException e) { throw new com.yiwugou.homer.core.exception.HomerException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1132/buggy-version/homer-core.src.main.java.com.yiwugou.homer.core.util.CommonUtils.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)", "java.lang.String.substring(int)", "java.lang.Class.forName(java.lang.String)"], "Fixed commit": "1f6f4bc44261b35e1079f6fecc210ba5bf007c1f", "Url": "https://api.github.com/repos/yiwugou/homer", "Date": "2017-06-08T07:49:18Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { return allBlocks[a][b]; } catch (java.lang.ArrayIndexOutOfBoundsException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4651/buggy-version/src.Control.GameplayHandler.WorldHandler.java", "BodyUseAPI": [], "Fixed commit": "66b074b98dc5c5b5f3d8c8b12578895284b1bada", "Url": "https://api.github.com/repos/yummiejan/Sandboxgame", "Date": "2017-01-11T15:01:33Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.nio.file.Files.getFileAttributeView(current, java.nio.file.attribute.BasicFileAttributeView.class).setTimes(entry.getLastModifiedTime(), entry.getLastAccessTime(), entry.getCreationTime()); } catch (java.io.IOException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6343/buggy-version/deployment-repository.src.main.java.org.jboss.as.repository.PathUtil.java", "BodyUseAPI": ["java.util.zip.ZipEntry.getCreationTime()", "java.nio.file.attribute.BasicFileAttributeView.setTimes(java.nio.file.attribute.FileTime,java.nio.file.attribute.FileTime,java.nio.file.attribute.FileTime)", "java.util.zip.ZipEntry.getLastAccessTime()", "java.nio.file.Files.getFileAttributeView(java.nio.file.Path,java.lang.Class)", "java.util.zip.ZipEntry.getLastModifiedTime()"], "Fixed commit": "082471b74a1f5b8965c94ce08ee6b7462c21b4e6", "Url": "https://api.github.com/repos/bstansberry/wildfly-core", "Date": "2016-09-22T15:31:07Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { session = getStore().load(id); } catch (java.lang.ClassNotFoundException e) { throw new java.io.IOException((\"error loading class for session \" + id), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1709/buggy-version/src.main.java.org.appng.tomcat.session.mongo.MongoPersistentManager.java", "BodyUseAPI": ["org.appng.tomcat.session.mongo.MongoPersistentManager.getStore()", "org.appng.tomcat.session.mongo.MongoStore.load(java.lang.String)"], "Fixed commit": "b7ebbfee6f5ad5040aa5f9e02846432e4f1839d6", "Url": "https://api.github.com/repos/appNG/appng-tomcat-session", "Date": "2017-12-21T17:31:41Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { monetaryChange = java.lang.Float.parseFloat(data.getString(data.getColumnIndex(\"change\"))); } catch (java.lang.Exception e) { } finally { if (monetaryChange == 0) { mChangeImageView.setContentDescription(getString(R.string.a11y_price_unchanged)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8011/buggy-version/app.src.main.java.com.sam_chordas.android.stockhawk.ui.StockDetailActivityFragment.java", "BodyUseAPI": ["android.database.Cursor.getString(data.getColumnIndex(\"change\"))", "android.database.Cursor.getColumnIndex(java.lang.String)", "java.lang.Float.parseFloat(data.getString(data.getColumnIndex(\"change\")))"], "Fixed commit": "7eec0f24b147436fa470d50d2a572b6b76ae589c", "Url": "https://api.github.com/repos/OwenLaRosa/stock-hawk", "Date": "2016-09-21T20:27:29Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String user = args[2]; DisplayProfile(user, request, response); } catch (java.lang.ArrayIndexOutOfBoundsException outofb) { error(\"An error occured\", request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6053/buggy-version/src.main.java.uk.ac.dundee.computing.aec.instagrim.servlets.Profile.java", "BodyUseAPI": ["uk.ac.dundee.computing.aec.instagrim.servlets.Profile.DisplayProfile(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"], "Fixed commit": "57d8541ce60dd819f0a80303e0aeb3716ce02a03", "Url": "https://api.github.com/repos/littlefury/instagrim", "Date": "2014-10-25T22:07:50Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.System.out.println((\"tableMetadata.getColumn(ident).getType()=\" + (tableMetadata.getColumn(ident).getType()))); } catch (java.lang.NullPointerException npe) { java.lang.System.err.println((\"ident=\" + ident)); java.lang.System.err.println((\"terms.get(i)=\" + (terms.get(i).toString().toString()))); java.lang.System.err.println((\"tableMetadata.getColumn(ident)=\" + (tableMetadata.getColumn(ident)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6271/buggy-version/meta-core.src.main.java.com.stratio.meta.core.structures.Relation.java", "BodyUseAPI": ["java.io.PrintStream.println((\"tableMetadata.getColumn(ident).getType()=\" + (tableMetadata.getColumn(ident).getType())))", "tableMetadata.getColumn(ident).getType()", "com.datastax.driver.core.TableMetadata.getColumn(java.lang.String)"], "Fixed commit": "e07b4de2cb95101a76310570ce24bd550f23d70b", "Url": "https://api.github.com/repos/Stratio/stratio-meta", "Date": "2014-05-09T07:19:32Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { latLong = new java.lang.Double[2]; latLong[0] = java.lang.Double.parseDouble(location.get(\"latitude\")); latLong[1] = java.lang.Double.parseDouble(location.get(\"longitude\")); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4693/buggy-version/src.com.rickdane.farmersmarkets.dao.FarmersMarketGeoSearchDao.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "4b38bfdd3442121dee98b2a9fe31792a6b5c521c", "Url": "https://api.github.com/repos/rickdane/droidrick", "Date": "2013-02-26T04:28:00Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { transaction.commit(); showLayout(); } catch (java.lang.IllegalStateException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5146/buggy-version/app.src.main.java.com.zjp.translateit.activity.ResultActivity.java", "BodyUseAPI": ["android.support.v4.app.FragmentTransaction.commit()", "com.zjp.translateit.activity.ResultActivity.showLayout()"], "Fixed commit": "1d75486aa0dd58e14f7c95f216c1c1e0b07642ce", "Url": "https://api.github.com/repos/zunpiau/TranslateIt", "Date": "2017-02-15T04:39:12Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { post.setHeader(\"Authorization\", (\"Basic \" + (android.util.Base64.encodeToString((((this.account.getAccessToken()) + \":\") + (this.account.getAccessSecret())).getBytes(\"UTF-8\"), Base64.NO_WRAP)))); } catch (final java.io.UnsupportedEncodingException e) { throw new java.lang.IllegalStateException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4258/buggy-version/src.main.java.com.vaguehope.onosendai.provider.instapaper.Instapaper.java", "BodyUseAPI": ["org.apache.http.client.methods.HttpPost.setHeader(java.lang.String,(\"Basic \" + (android.util.Base64.encodeToString((((this.account.getAccessToken()) + \":\") + (this.account.getAccessSecret())).getBytes(\"UTF-8\"), Base64.NO_WRAP))))", "android.util.Base64.encodeToString((((this.account.getAccessToken()) + \":\") + (this.account.getAccessSecret())).getBytes(\"UTF-8\"),Base64.NO_WRAP)", "(((this.account.getAccessToken()) + \":\") + (this.account.getAccessSecret())).getBytes(java.lang.String)", "com.vaguehope.onosendai.config.Account.getAccessToken()", "com.vaguehope.onosendai.config.Account.getAccessSecret()"], "Fixed commit": "53dffc634e393cab9ac2bb64ba05209b078657ba", "Url": "https://api.github.com/repos/haku/Onosendai", "Date": "2014-02-16T08:55:21Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { onOverflow.call(); } catch (java.lang.Throwable e) { rx.exceptions.Exceptions.throwIfFatal(e); manager.terminateAndDrain(e); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6676/buggy-version/src.main.java.rx.internal.operators.OperatorOnBackpressureBuffer.java", "BodyUseAPI": ["rx.functions.Action0.call()"], "Fixed commit": "25e7b2c85c1015b319c3b44d8625f25c69b1e5ec", "Url": "https://api.github.com/repos/ReactiveX/RxJava", "Date": "2016-01-23T10:30:50Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { de.hdc.kspchecklist.data.DataIO.copyAssetsFiles(getApplicationContext()); } catch (java.io.IOException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/905/buggy-version/app.src.main.java.de.hdc.kspchecklist.ItemListActivity.java", "BodyUseAPI": ["de.hdc.kspchecklist.ItemListActivity.getApplicationContext()", "de.hdc.kspchecklist.data.DataIO.copyAssetsFiles(getApplicationContext())"], "Fixed commit": "36215be10887d83de8800090a8f7c4666f52b2ef", "Url": "https://api.github.com/repos/dertroglodyt/KSPCheckList", "Date": "2017-09-09T07:52:48Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.net.InetAddress addr = java.net.InetAddress.getByName(bukkitPlayer.getAddress().getHostString()); address = addr; } catch (java.net.UnknownHostException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8092/buggy-version/src.main.java.nl.rutgerkok.pokkit.pluginservice.PlayerConnectEvents.java", "BodyUseAPI": ["org.bukkit.entity.Player.getAddress()", "java.net.InetAddress.getByName(bukkitPlayer.getAddress().getHostString())", "bukkitPlayer.getAddress().getHostString()"], "Fixed commit": "744bd4e6b8905f5441bce6578e34e0cc482e1976", "Url": "https://api.github.com/repos/rutgerkok/Pokkit", "Date": "2016-10-02T13:32:26Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return send(serializer.serialize(message)); } catch (java.io.IOException e) { throw new java.lang.IllegalStateException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/446/buggy-version/kikaha-core.source.kikaha.core.modules.websocket.WebSocketSession.java", "BodyUseAPI": ["kikaha.core.modules.websocket.WebSocketSession.send(java.lang.String)", "kikaha.core.modules.websocket.WebSocketSession.Serializer.serialize(java.lang.Object)"], "Fixed commit": "b85cda931702dc58008401f498db3b9f7886cc48", "Url": "https://api.github.com/repos/Skullabs/kikaha", "Date": "2016-08-01T01:43:41Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { frag.getSelectedFood().clear(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6466/buggy-version/Splurge.src.ucsd.cs110.splurge.RestaurantListFragment.java", "BodyUseAPI": ["frag.getSelectedFood().clear()", "ucsd.cs110.splurge.DiningOutFragment.getSelectedFood()"], "Fixed commit": "3f0af95c6cf4c20b90be343c147f81cf2c541263", "Url": "https://api.github.com/repos/SplurgeRestaurants/Splurge", "Date": "2014-06-08T05:12:45Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { beanDesc = config.introspect(type); } catch (java.lang.NoClassDefFoundError error) { return new com.fasterxml.jackson.databind.deser.impl.NoClassDefFoundDeserializer<java.lang.Object>(error); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/3219/buggy-version/src.main.java.com.fasterxml.jackson.databind.deser.DeserializerCache.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.deser.DeserializationConfig.introspect(com.fasterxml.jackson.databind.deser.JavaType)"], "Fixed commit": "1a037b3dab24ab733d1e9e34957eefdd19cece87", "Url": "https://api.github.com/repos/conflictpredictor/jackson-databind", "Date": "2014-11-27T00:09:31Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(500); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1202/buggy-version/AppAdmin.src.main.java.com.app.controller.BaseController.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "6a9d8be60382392bfbf1f17260d812d6bf0227a1", "Url": "https://api.github.com/repos/NobleYd/appAdmin_rest_v0", "Date": "2017-04-16T18:30:37Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { autoCheckShuffleAndShuffleSize(); } catch (java.lang.Exception e) { ml.shifu.shifu.core.processor.NormalizeModelProcessor.log.warn(\"warn: exception in autho check shuffle size, exception can be ignored as no big impact\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2394/buggy-version/src.main.java.ml.shifu.shifu.core.processor.NormalizeModelProcessor.java", "BodyUseAPI": ["ml.shifu.shifu.core.processor.NormalizeModelProcessor.autoCheckShuffleAndShuffleSize()"], "Fixed commit": "4b32423fa9d334ee717d47904ee6509b7b620bfe", "Url": "https://api.github.com/repos/ShifuML/shifu", "Date": "2017-10-31T06:15:02Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { webContext.setVariable(\"annotation1\", loadAnnotation(latestBooks[0].getFileName())); webContext.setVariable(\"annotation2\", loadAnnotation(latestBooks[1].getFileName())); webContext.setVariable(\"annotation3\", loadAnnotation(latestBooks[2].getFileName())); } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8557/buggy-version/src.main.java.cleb.library.IndexServlet.java", "BodyUseAPI": ["cleb.library.IndexServlet.loadAnnotation(latestBooks[1].getFileName())", "org.thymeleaf.context.WebContext.setVariable(java.lang.String,java.lang.String)", "cleb.library.IndexServlet.loadAnnotation(latestBooks[0].getFileName())", "cleb.library.IndexServlet.loadAnnotation(latestBooks[2].getFileName())", "org.thymeleaf.context.WebContext.setVariable(java.lang.String,java.lang.String)", "latestBooks[0].getFileName()", "latestBooks[1].getFileName()", "org.thymeleaf.context.WebContext.setVariable(java.lang.String,java.lang.String)", "latestBooks[2].getFileName()"], "Fixed commit": "8026309cc6a394f99429139ab01a2f36713e4f0a", "Url": "https://api.github.com/repos/tol182/cleb", "Date": "2016-08-30T10:05:43Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (java.lang.String root : sourceRoots) { java.io.File f = new java.io.File(root, s); if ((f.exists()) && (f.getName().equals(f.getCanonicalFile().getName()))) { return f; } } } catch (java.io.IOException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8020/buggy-version/plexus-compilers.plexus-compiler-eclipse.src.main.java.org.codehaus.plexus.compiler.eclipse.SourceCodeLocator.java", "BodyUseAPI": ["java.io.File.getName()", "java.lang.String.equals(java.lang.String)", "java.io.File.getName()", "java.io.File.getCanonicalFile()", "java.io.File.exists()"], "Fixed commit": "ed1ac5ad956059faebe174f21d7407e7d1200023", "Url": "https://api.github.com/repos/thinkofdeath/plexus-compiler", "Date": "2014-12-25T16:13:57Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { processMessage(address, contents); } catch (java.lang.Exception ex) { org.onebusaway.nyc.queue.QueueListenerTask._log.error((\"#####>>>>> processMessage() failed, exception was: \" + (ex.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5702/buggy-version/onebusaway-nyc-queue-subscriber.src.main.java.org.onebusaway.nyc.queue.QueueListenerTask.java", "BodyUseAPI": ["org.onebusaway.nyc.queue.QueueListenerTask.ReadThread.processMessage(java.lang.String,java.lang.String)"], "Fixed commit": "695e2b52f25747812d65d010ed6bf60c81db36b3", "Url": "https://api.github.com/repos/camsys/onebusaway-nyc", "Date": "2013-03-11T21:29:22Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(((\"(\\\\W|^)\" + subString) + \"(\\\\W|$)\"), java.util.regex.Pattern.CASE_INSENSITIVE); res = pattern.matcher(longString).find(); } catch (java.lang.Exception e) { org.matrix.androidsdk.util.Log.e(org.matrix.androidsdk.util.EventUtils.LOG_TAG, \"## caseInsensitiveFind() : failed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4919/buggy-version/matrix-sdk.src.main.java.org.matrix.androidsdk.util.EventUtils.java", "BodyUseAPI": ["java.util.regex.Pattern.compile(java.lang.String,int)", "java.util.regex.Matcher.find()", "java.util.regex.Pattern.matcher(java.lang.String)"], "Fixed commit": "19a690937c49f85cfe676974ed0a06c1fa97e4a8", "Url": "https://api.github.com/repos/matrix-org/matrix-android-sdk", "Date": "2017-02-13T09:21:55Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { def = getJdbcTemplate().queryForObject(sql_statement, this.cohortDefinitionMapper); } catch (org.springframework.dao.EmptyResultDataAccessException e) { log.debug(java.lang.String.format(\"Request for cohortDefinition=%s resulted in 0 results\", id)); throw new javax.ws.rs.WebApplicationException(Response.Status.NOT_FOUND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4957/buggy-version/src.main.java.org.ohdsi.webapi.service.CohortDefinitionService.java", "BodyUseAPI": ["getJdbcTemplate().queryForObject(java.lang.String,org.springframework.jdbc.core.RowMapper<org.ohdsi.webapi.model.CohortDefinition>)", "org.ohdsi.webapi.service.CohortDefinitionService.getJdbcTemplate()"], "Fixed commit": "ec97c1b22777e2d6dcf3a471db3e06cdd1aff0a8", "Url": "https://api.github.com/repos/OHDSI/WebAPI", "Date": "2015-02-04T16:59:41Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return row.getCell(colIndex).getNumericCellValue(); } catch (java.lang.RuntimeException re) { return 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1434/buggy-version/src.main.java.org.openmf.mifos.dataimport.handler.AbstractDataImportHandler.java", "BodyUseAPI": ["row.getCell(colIndex).getNumericCellValue()", "org.apache.poi.ss.usermodel.Row.getCell(int)"], "Fixed commit": "0b700b668e8379dfd2249eb9dfd7c091b05794e8", "Url": "https://api.github.com/repos/Musoni/DataImportTool", "Date": "2017-03-15T10:59:56Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.springframework.context.ApplicationContext context = new org.springframework.context.support.ClassPathXmlApplicationContext(\"Spring-Mail.xml\"); this.mailer = ((app.service.Mailer) (context.getBean(\"mailer\"))); } catch (org.springframework.beans.BeansException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/3943/buggy-version/src.main.java.app.service.MailService.java", "BodyUseAPI": ["org.springframework.context.ApplicationContext.getBean(java.lang.String)"], "Fixed commit": "04fffabec6747ad05b49d187eca419d04a7b9675", "Url": "https://api.github.com/repos/serpentisx/road-watch", "Date": "2017-11-16T01:31:26Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { p = new com.kpro.parser.P3PParser().parse(pLoc.getAbsolutePath()); if ((p.getContext().getDomain()) == null) { if ((p.getContext().getDomain()) == null) { p.setContext(new com.kpro.dataobjects.Context(new java.util.Date(java.lang.System.currentTimeMillis()), new java.util.Date(java.lang.System.currentTimeMillis()), genProps.getProperty(\"p3pLocation\"))); } pdb.addPolicy(p); } } catch (java.lang.Exception e) { java.lang.System.err.println(\"Einar needs to fix this parsing error. (!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!)\"); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8592/buggy-version/code.src.com.kpro.main.Gio.java", "BodyUseAPI": ["com.kpro.dataobjects.PolicyObject.setContext(com.kpro.dataobjects.Context)", "com.kpro.dataobjects.PolicyObject.getContext()", "java.util.Properties.getProperty(java.lang.String)", "p.getContext().getDomain()", "com.kpro.dataobjects.PolicyObject.getContext()", "java.lang.System.currentTimeMillis()", "p.getContext().getDomain()", "java.lang.System.currentTimeMillis()", "com.kpro.database.PolicyDatabase.addPolicy(com.kpro.dataobjects.PolicyObject)", "com.kpro.parser.P3PParser.parse(java.lang.String)", "java.io.File.getAbsolutePath()"], "Fixed commit": "48f10767d14c584eb5fc73f1bf854c79987d9df8", "Url": "https://api.github.com/repos/iernie/Costumer-Driven-Project", "Date": "2011-10-11T13:45:18Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Class.forName(\"com.mysql.jdbc.Driver\").newInstance(); } catch (java.lang.Exception ex) { java.lang.System.out.println(ex.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6565/buggy-version/src.mysqlConnection.java", "BodyUseAPI": ["java.lang.Class<?>.newInstance()", "java.lang.Class.forName(java.lang.String)"], "Fixed commit": "50ecde60eb20904cba06c2c15b81798c3152fc58", "Url": "https://api.github.com/repos/mikeberezanich/MediaToDoList", "Date": "2015-11-10T06:11:53Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return sessionScope.scope(com.google.inject.Key.get(org.apache.maven.execution.MavenSession.class), null).get(); } catch (com.google.inject.OutOfScopeException ex) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2026/buggy-version/src.main.java.com.qoomon.maven.extension.branchversioning.SessionUtil.java", "BodyUseAPI": ["com.google.inject.Key.get(java.lang.Class)", "sessionScope.scope(com.google.inject.Key.get(org.apache.maven.execution.MavenSession.class), null).get()", "org.apache.maven.session.scope.internal.SessionScope.scope(com.google.inject.Key.get(org.apache.maven.execution.MavenSession.class),<nulltype>)"], "Fixed commit": "547875fc04decc3d2cb3e8cf7aaeb0412ef2692f", "Url": "https://api.github.com/repos/qoomon/maven-git-versioning-extension", "Date": "2016-12-01T11:07:27Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { microsoftBands.register(); notificationManager = new org.md2k.microsoftband.notification.NotificationManager(this, microsoftBands.find()); notificationManager.start(); } catch (java.lang.Exception e) { android.support.v4.content.LocalBroadcastManager.getInstance(this).sendBroadcast(new android.content.Intent(Constants.INTENT_STOP)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5641/buggy-version/microsoftband.src.main.java.org.md2k.microsoftband.ServiceMicrosoftBands.java", "BodyUseAPI": ["org.md2k.microsoftband.MicrosoftBands.register()", "org.md2k.microsoftband.notification.NotificationManager.start()", "org.md2k.microsoftband.MicrosoftBands.find()"], "Fixed commit": "74af29b2f9f406de4eff8747324acc5773d317b5", "Url": "https://api.github.com/repos/MD2Korg/mCerebrum-MicrosoftBand", "Date": "2016-08-26T19:30:10Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { members = jsonObject.getJSONArray(\"members\"); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1266/buggy-version/src.main.java.com.thed.zephyr.jenkins.utils.rest.Project.java", "BodyUseAPI": ["org.json.JSONObject.getJSONArray(java.lang.String)"], "Fixed commit": "558a273daea1933893ebc7d4cc2e8f5b3efdbc1b", "Url": "https://api.github.com/repos/zephyrdeveloper/zee-jenkins", "Date": "2015-06-30T05:51:19Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { socket = io.socket.client.IO.socket(url, this.options); } catch (java.net.URISyntaxException e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/154/buggy-version/src.main.java.me.joshuamarquez.sails.io.SailsSocket.java", "BodyUseAPI": ["io.socket.client.IO.socket(java.lang.String,IO.Options)"], "Fixed commit": "e5c51163d8b83db591a40c8a9569229f8b97eb74", "Url": "https://api.github.com/repos/joshuamarquez/sails.io.java", "Date": "2016-06-01T00:43:14Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { newWidth = java.lang.Integer.parseInt(newValueStr); } catch (java.lang.NumberFormatException e) { org.opendatakit.logging.WebLogger.getLogger(appName).e(org.opendatakit.tables.fragments.ColumnPreferenceFragment.TAG, \"column width not an integer, doing nothing\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2722/buggy-version/tables_app.src.main.java.org.opendatakit.tables.fragments.ColumnPreferenceFragment.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "21d47f7dff3d605e17e65da2817cb811b9be87d1", "Url": "https://api.github.com/repos/opendatakit/tables", "Date": "2017-06-07T21:55:51Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.silverpeas.util.FileUtil.validateFilename(downloadPath.getPath(), getRootPath()); } catch (java.io.IOException e) { com.stratelia.silverpeas.silvertrace.SilverTrace.error(\"silverCrawler\", \"SilverCrawlerRequestRouter.zipFolder()\", \"root.MSG_GEN_PARAM_VALUE\", (\"downloadPath error = \" + (downloadPath.getPath()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2845/buggy-version/silvercrawler.silvercrawler-war.src.main.java.com.silverpeas.silvercrawler.control.SilverCrawlerSessionController.java", "BodyUseAPI": ["com.silverpeas.util.FileUtil.validateFilename(java.lang.String,java.lang.String)", "com.silverpeas.silvercrawler.control.SilverCrawlerSessionController.getRootPath()", "java.io.File.getPath()"], "Fixed commit": "b8ff45c6a12a223611784798981b0ddb63e6fa44", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Components", "Date": "2015-08-04T12:44:58Z"},
{"Line": "=>435", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mDB.update(NewsContentDBHelper.TABLE_CONTENT, values, (((((com.kknews.database.NewsContentDBHelper.COLUMN_FILE) + \" = \") + \"'\") + originalTitle) + \"'\"), null); } catch (android.database.sqlite.SQLiteConstraintException exception) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2809/buggy-version/app.src.main.java.com.kknews.fragment.PersonalFragment.java", "BodyUseAPI": ["android.database.sqlite.SQLiteDatabase.update(NewsContentDBHelper.TABLE_CONTENT,android.content.ContentValues,(((((com.kknews.database.NewsContentDBHelper.COLUMN_FILE) + \" = \") + \"'\") + originalTitle) + \"'\"),<nulltype>)"], "Fixed commit": "9c17faff7fe142a39f51da58e34ffcd3181c834c", "Url": "https://api.github.com/repos/rewind927/kknews", "Date": "2014-10-01T10:56:21Z"},
{"Line": "=>425", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mDB.update(NewsContentDBHelper.TABLE_CATEGORY, values, (((((com.kknews.database.NewsContentDBHelper.COLUMN_FILE) + \" = \") + \"'\") + originalTitle) + \"'\"), null); } catch (android.database.sqlite.SQLiteConstraintException exception) { deleteCategory(originalTitle); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2809/buggy-version/app.src.main.java.com.kknews.fragment.PersonalFragment.java", "BodyUseAPI": ["android.database.sqlite.SQLiteDatabase.update(NewsContentDBHelper.TABLE_CATEGORY,android.content.ContentValues,(((((com.kknews.database.NewsContentDBHelper.COLUMN_FILE) + \" = \") + \"'\") + originalTitle) + \"'\"),<nulltype>)"], "Fixed commit": "9c17faff7fe142a39f51da58e34ffcd3181c834c", "Url": "https://api.github.com/repos/rewind927/kknews", "Date": "2014-10-01T10:56:21Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { severityLevel = com.puppycrawl.tools.checkstyle.api.SeverityLevel.getInstance(severity); } catch (java.lang.Exception exc) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/9228/buggy-version/checkstyle-sonar-plugin.src.main.java.org.sonar.plugins.checkstyle.CheckstyleSeverityUtils.java", "BodyUseAPI": ["com.puppycrawl.tools.checkstyle.api.SeverityLevel.getInstance(java.lang.String)"], "Fixed commit": "882df6f3c2f29c4aca75641aaa3cc8862079acf9", "Url": "https://api.github.com/repos/checkstyle/sonar-checkstyle", "Date": "2016-12-25T14:32:08Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { combo.putClientProperty(org.jboss.forge.netbeans.ui.wizard.component.ComboComponentBuilder.PROCESSING_STATE, java.lang.Boolean.TRUE); super.updateState(combo, input); updateComboModel(combo, ((org.jboss.forge.addon.ui.input.UISelectOne<java.lang.Object>) (input))); } finally { combo.putClientProperty(org.jboss.forge.netbeans.ui.wizard.component.ComboComponentBuilder.PROCESSING_STATE, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/331/buggy-version/ui.src.main.java.org.jboss.forge.netbeans.ui.wizard.component.ComboComponentBuilder.java", "BodyUseAPI": ["org.jboss.forge.netbeans.ui.wizard.component.ComponentBuilder<javax.swing.JComboBox>.updateState(javax.swing.JComboBox,org.jboss.forge.addon.ui.input.InputComponent<?, ?>)", "org.jboss.forge.netbeans.ui.wizard.component.ComboComponentBuilder.updateComboModel(javax.swing.JComboBox,org.jboss.forge.addon.ui.input.InputComponent<?, ?>)", "javax.swing.JComboBox.putClientProperty(java.lang.String,java.lang.Boolean)"], "Fixed commit": "d023f33ac1ae8bf230ff68f832c1cf193bed90ff", "Url": "https://api.github.com/repos/forge/netbeans-plugin", "Date": "2015-06-20T13:43:31Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { targetConn.setAutoCommit(false); } catch (java.sql.SQLException e1) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1162/buggy-version/collect-rdb.src.main.java.org.openforis.collect.relational.CollectRDBPublisher.java", "BodyUseAPI": ["java.sql.Connection.setAutoCommit(boolean)"], "Fixed commit": "d90e4f10402bd8052e622635f50c46747cb4ccf2", "Url": "https://api.github.com/repos/openforis/collect", "Date": "2015-11-18T10:56:50Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(10000); } catch (java.lang.InterruptedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6008/buggy-version/angel-ps.core.src.main.java.com.tencent.angel.localcluster.LocalCluster.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "ddd546e45d3fce01aec98d3de0a15f0693713887", "Url": "https://api.github.com/repos/leusonmario/angel", "Date": "2017-07-07T08:18:27Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.nio.file.Path file = new java.io.File(((net.minecraft.client.Minecraft.getMinecraft().mcDataDir) + (the_fireplace.iasencrypt.Standards.IASFOLDER)), com.github.mrebhan.ingameaccountswitcher.tools.Config.configFileName).toPath(); java.nio.file.attribute.DosFileAttributes attr = java.nio.file.Files.readAttributes(file, java.nio.file.attribute.DosFileAttributes.class); java.nio.file.attribute.DosFileAttributeView view = java.nio.file.Files.getFileAttributeView(file, java.nio.file.attribute.DosFileAttributeView.class); if (attr.isHidden()) view.setHidden(false); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2070/buggy-version/src.main.java.com.github.mrebhan.ingameaccountswitcher.tools.Config.java", "BodyUseAPI": ["java.io.File.toPath()", "java.nio.file.attribute.DosFileAttributeView.setHidden(boolean)", "net.minecraft.client.Minecraft.getMinecraft()", "java.nio.file.attribute.DosFileAttributes.isHidden()", "java.nio.file.Files.readAttributes(java.nio.file.Path,java.lang.Class)", "java.nio.file.Files.getFileAttributeView(java.nio.file.Path,java.lang.Class)"], "Fixed commit": "0ecd6871f0ef899b0bc52851d9107932437f9aaa", "Url": "https://api.github.com/repos/therealfarfetchd/IngameAccountSwitcher", "Date": "2015-08-17T17:20:11Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mHoverCellCurrentBounds.offsetTo(mHoverCellOriginalBounds.left, mobileView.getTop()); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2245/buggy-version/app.src.main.java.com.nethergrim.combogymdiary.view.DraggableListView.java", "BodyUseAPI": ["android.view.View.getTop()", "android.graphics.Rect.offsetTo(mHoverCellOriginalBounds.left,mobileView.getTop())"], "Fixed commit": "e98cc0d1ebd023cc165693eb44c7df37d0ceb9fb", "Url": "https://api.github.com/repos/nethergrim/Training-Log", "Date": "2014-08-22T15:18:04Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (json.getString(\"service\").equalsIgnoreCase(java.lang.String.valueOf(Services.QUIT))) { closeSocket(); break; } } catch (org.json.JSONException ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1641/buggy-version/src.server.ThreadServer.java", "BodyUseAPI": ["server.ThreadServer.closeSocket()", "json.getString(\"service\").equalsIgnoreCase(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)", "java.lang.String.valueOf(Services.QUIT)"], "Fixed commit": "84d79fddd20d7b579825dcdd228782b18d26b4a6", "Url": "https://api.github.com/repos/Paltoquet/Netodin", "Date": "2015-11-10T20:03:27Z"},
{"Line": "=>423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return getKubernetesGlobalExtensions().getOAuthClient(name); } catch (io.fabric8.kubernetes.api.WebApplicationException e) { if ((e.getResponse().getStatus()) == 404) { return null; }else { throw e; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7910/buggy-version/components.kubernetes-api.src.main.java.io.fabric8.kubernetes.api.KubernetesClient.java", "BodyUseAPI": ["io.fabric8.kubernetes.api.KubernetesClient.getKubernetesGlobalExtensions()", "io.fabric8.kubernetes.api.KubernetesGlobalExtensions.getOAuthClient(java.lang.String)"], "Fixed commit": "19317a112d322d73eac0d424fe51f653ab865be5", "Url": "https://api.github.com/repos/rhuss/fabric8", "Date": "2015-05-08T13:11:22Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.openmrs.module.emrapi.utils.MetadataUtil.setupStandardMetadata(org.openmrs.module.ModuleFactory.getModuleClassLoader(\"referencemetadata\")); } catch (java.lang.Exception e) { throw new org.openmrs.module.ModuleException(\"Failed to load Visit Diagnosis concept package\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8848/buggy-version/api.src.main.java.org.openmrs.module.referencemetadata.ReferenceMetadataActivator.java", "BodyUseAPI": ["org.openmrs.module.emrapi.utils.MetadataUtil.setupStandardMetadata(org.openmrs.module.ModuleFactory.getModuleClassLoader(\"referencemetadata\"))", "org.openmrs.module.ModuleFactory.getModuleClassLoader(java.lang.String)"], "Fixed commit": "beceef2e6af4cb9d42e30244bd8ded639610358e", "Url": "https://api.github.com/repos/openmrs/openmrs-module-referencemetadata", "Date": "2013-05-29T16:02:51Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { int i = java.lang.Integer.valueOf(name); return new com.laytonsmith.abstraction.bukkit.BukkitMCEnchantment(org.bukkit.enchantments.Enchantment.getById(i)); } catch (java.lang.NumberFormatException e) { return new com.laytonsmith.abstraction.bukkit.BukkitMCEnchantment(org.bukkit.enchantments.Enchantment.getByName(name)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4746/buggy-version/src.main.java.com.laytonsmith.abstraction.bukkit.BukkitConvertor.java", "BodyUseAPI": ["org.bukkit.enchantments.Enchantment.getById(int)", "java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "9f84aa7ec49d17f40bd7f4a426a157a39fc873d5", "Url": "https://api.github.com/repos/EntityReborn/commandhelper", "Date": "2012-06-02T02:55:01Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.homeCenter.Config.registerParameter(new com.homeCenter.ConfigParam(\"node.address\", com.homeCenter.wf.VariableDataType.STRING, \"\")); } catch (java.lang.Exception e1) { com.homeCenter.common.Log.error(e1.getMessage(), e1.fillInStackTrace()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5038/buggy-version/src.com.homeCenter.node.Main.java", "BodyUseAPI": ["com.homeCenter.Config.registerParameter(com.homeCenter.ConfigParam)"], "Fixed commit": "77f3992e70b7021fd4bea080b368f0d36d069306", "Url": "https://api.github.com/repos/NukulaPoncho/homeCenter", "Date": "2017-01-15T08:06:05Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { setSynced(false); } catch (org.json.JSONException e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/9177/buggy-version/RapidFTR-Android.src.main.java.com.rapidftr.model.Child.java", "BodyUseAPI": ["com.rapidftr.model.Child.setSynced(boolean)"], "Fixed commit": "d60e18a9ec04c63c6b60c235b1d63aec2b799673", "Url": "https://api.github.com/repos/akash/RapidFTR---Android", "Date": "2012-11-08T11:21:03Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { msg.obj = (returnAsImage) ? android.graphics.drawable.Drawable.createFromStream(is, \"src\") : is; } catch (java.lang.OutOfMemoryError oome) { throw new java.lang.Exception(\"No memory to load image\", oome); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7946/buggy-version/src.com.drewschrauf.robotronic.threads.BinaryFetchThread.java", "BodyUseAPI": ["android.graphics.drawable.Drawable.createFromStream(java.io.InputStream,java.lang.String)"], "Fixed commit": "1f729b650cafe2b47fc0bf1b5eeba7bd3a17b689", "Url": "https://api.github.com/repos/drewschrauf/robotronic", "Date": "2011-10-17T04:58:41Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { msg.obj = (returnAsImage) ? android.graphics.drawable.Drawable.createFromStream(is, \"src\") : is; } catch (java.lang.OutOfMemoryError oome) { throw new java.lang.Exception(\"No memory to load image\", oome); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7946/buggy-version/src.com.drewschrauf.robotronic.threads.BinaryFetchThread.java", "BodyUseAPI": ["android.graphics.drawable.Drawable.createFromStream(java.io.InputStream,java.lang.String)"], "Fixed commit": "1f729b650cafe2b47fc0bf1b5eeba7bd3a17b689", "Url": "https://api.github.com/repos/drewschrauf/robotronic", "Date": "2011-10-17T04:58:41Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.resourceBundle = java.util.ResourceBundle.getBundle(\"nu.najt.kecon.jsocksproxy.admin.bundles.messages\", locale); } catch (java.util.MissingResourceException e) { this.resourceBundle = java.util.ResourceBundle.getBundle(\"nu.najt.kecon.jsocksproxy.admin.bundles.messages\", java.util.Locale.US); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7626/buggy-version/src.main.java.nu.najt.kecon.jsocksproxy.admin.JSocksProxyAdmin.java", "BodyUseAPI": ["java.util.ResourceBundle.getBundle(java.lang.String,java.util.Locale)"], "Fixed commit": "2388a4096836bbc7356bcfcd8636a3c44c38f16e", "Url": "https://api.github.com/repos/Kecon/JSocksProxy", "Date": "2017-06-23T09:14:32Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.net.InetAddress address = null; java.util.Enumeration<java.net.NetworkInterface> interfaces = java.net.NetworkInterface.getNetworkInterfaces(); while (interfaces.hasMoreElements()) { java.net.NetworkInterface networkInterface = interfaces.nextElement(); if (networkInterface.isLoopback()) continue; java.util.Enumeration<java.net.InetAddress> addresses = networkInterface.getInetAddresses(); while (addresses.hasMoreElements()) { address = addresses.nextElement(); if (!(address.getHostAddress().contains(\"192.168\"))) continue; break; } if ((address != null) || (address.toString().contains(\"192.168\"))) { break; } } ip = address; queue = new java.util.concurrent.ConcurrentLinkedQueue<java.lang.Byte>(); tr = new Communications.TCPReceiverThread(queue); } catch (java.lang.Exception e) { java.lang.System.out.println(\"Could not set up TCP\"); java.lang.System.exit((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8965/buggy-version/Chat.src.Communications.TCP.java", "BodyUseAPI": ["java.net.InetAddress.getHostAddress()", "java.util.Enumeration<java.net.NetworkInterface>.nextElement()", "java.lang.String.contains(java.lang.String)", "java.util.Enumeration<java.net.InetAddress>.nextElement()", "java.util.Enumeration<java.net.NetworkInterface>.hasMoreElements()", "java.net.NetworkInterface.isLoopback()", "java.net.NetworkInterface.getInetAddresses()", "java.util.Enumeration<java.net.InetAddress>.hasMoreElements()", "java.net.InetAddress.toString()", "java.lang.String.contains(java.lang.String)", "java.net.NetworkInterface.getNetworkInterfaces()"], "Fixed commit": "45f3f1f05393898cb1101743cd3d420c4e37fe35", "Url": "https://api.github.com/repos/ragnarok089/CS544", "Date": "2013-06-07T01:20:36Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return new de.jodamob.android.phrase.SafePhrase(com.squareup.phrase.Phrase.from(view, resourceId)); } catch (java.lang.IllegalArgumentException e) { android.util.Log.wtf((\"invalid id \" + resourceId), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7639/buggy-version/src.main.java.de.jodamob.android.phrase.SafePhrase.java", "BodyUseAPI": ["com.squareup.phrase.Phrase.from(android.view.View,int)"], "Fixed commit": "ef098026650056de5bd53b1cb34bce4b0160d4ac", "Url": "https://api.github.com/repos/dpreussler/android-gluten", "Date": "2014-07-31T12:05:20Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return new de.jodamob.android.phrase.SafePhrase(com.squareup.phrase.Phrase.from(fragment, resourceId)); } catch (java.lang.IllegalArgumentException e) { android.util.Log.wtf((\"invalid id \" + resourceId), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7639/buggy-version/src.main.java.de.jodamob.android.phrase.SafePhrase.java", "BodyUseAPI": ["com.squareup.phrase.Phrase.from(android.app.Fragment,int)"], "Fixed commit": "ef098026650056de5bd53b1cb34bce4b0160d4ac", "Url": "https://api.github.com/repos/dpreussler/android-gluten", "Date": "2014-07-31T12:05:20Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return new de.jodamob.android.phrase.SafePhrase(com.squareup.phrase.Phrase.from(resources, resourceId)); } catch (java.lang.IllegalArgumentException e) { android.util.Log.wtf((\"invalid id \" + resourceId), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7639/buggy-version/src.main.java.de.jodamob.android.phrase.SafePhrase.java", "BodyUseAPI": ["com.squareup.phrase.Phrase.from(android.content.res.Resources,int)"], "Fixed commit": "ef098026650056de5bd53b1cb34bce4b0160d4ac", "Url": "https://api.github.com/repos/dpreussler/android-gluten", "Date": "2014-07-31T12:05:20Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return new de.jodamob.android.phrase.SafePhrase(com.squareup.phrase.Phrase.from(context, resourceId)); } catch (java.lang.IllegalArgumentException e) { android.util.Log.wtf((\"invalid id \" + resourceId), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7639/buggy-version/src.main.java.de.jodamob.android.phrase.SafePhrase.java", "BodyUseAPI": ["com.squareup.phrase.Phrase.from(android.content.Context,int)"], "Fixed commit": "ef098026650056de5bd53b1cb34bce4b0160d4ac", "Url": "https://api.github.com/repos/dpreussler/android-gluten", "Date": "2014-07-31T12:05:20Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { fixPrjFile(); } catch (java.lang.Exception e) { org.opengeo.data.importer.LOGGER.log(java.util.logging.Level.WARNING, \"Error fixing prj file\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8958/buggy-version/importer.src.main.java.org.opengeo.data.importer.SpatialFile.java", "BodyUseAPI": ["org.opengeo.data.importer.SpatialFile.fixPrjFile()"], "Fixed commit": "00e4d878b1eea22a9b3fd3ed7481b8be78c16cb5", "Url": "https://api.github.com/repos/opengeo/geoserver-exts", "Date": "2012-07-05T20:19:23Z"},
{"Line": "=>526", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { repos.addAll(org.jetbrains.plugins.github.api.GithubApiUtil.getMembershipRepos(auth)); } catch (org.jetbrains.plugins.github.api.GithubStatusCodeException ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7475/buggy-version/plugins.github.src.org.jetbrains.plugins.github.api.GithubApiUtil.java", "BodyUseAPI": ["java.util.List<org.jetbrains.plugins.github.api.GithubRepo>.addAll(java.util.List<org.jetbrains.plugins.github.api.GithubRepoOrg>)", "org.jetbrains.plugins.github.api.GithubApiUtil.getMembershipRepos(org.jetbrains.plugins.github.util.GithubAuthData)"], "Fixed commit": "65642d998f6a22ccfb1aa21970c6df53526c6d9d", "Url": "https://api.github.com/repos/JetBrains/intellij-community", "Date": "2014-02-18T08:56:22Z"},
{"Line": "=>529", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { repos.addAll(org.jetbrains.plugins.github.api.GithubApiUtil.getWatchedRepos(auth)); } catch (org.jetbrains.plugins.github.api.GithubStatusCodeException ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7475/buggy-version/plugins.github.src.org.jetbrains.plugins.github.api.GithubApiUtil.java", "BodyUseAPI": ["org.jetbrains.plugins.github.api.GithubApiUtil.getWatchedRepos(org.jetbrains.plugins.github.util.GithubAuthData)", "java.util.List<org.jetbrains.plugins.github.api.GithubRepo>.addAll(java.util.List<org.jetbrains.plugins.github.api.GithubRepo>)"], "Fixed commit": "65642d998f6a22ccfb1aa21970c6df53526c6d9d", "Url": "https://api.github.com/repos/JetBrains/intellij-community", "Date": "2014-02-18T08:56:22Z"},
{"Line": "=>3052", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { child.storeRelative(((is.idega.idegaweb.egov.course.CourseConstants.COURSE_PREFIX) + (owner.getPrimaryKey())), userPK, relations[a], (a + 1), homePhones[a], workPhones[a], mobilePhones[a], emails[a]); } catch (java.lang.Exception e) { getLogger().log(java.util.logging.Level.WARNING, (\"Error while trying to save relatives for child \" + child), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6347/buggy-version/src.java.is.idega.idegaweb.egov.course.presentation.CourseApplication.java", "BodyUseAPI": ["com.idega.user.data.User.getPrimaryKey()", "is.idega.block.family.data.Child.storeRelative(((is.idega.idegaweb.egov.course.CourseConstants.COURSE_PREFIX) + (owner.getPrimaryKey())),java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "fc9290fafe5fc1cd9e8f08836b87530e19a72c32", "Url": "https://api.github.com/repos/idega/is.idega.idegaweb.egov.course", "Date": "2015-06-16T11:45:40Z"},
{"Line": "=>3045", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { child.storeMainRelative(((is.idega.idegaweb.egov.course.CourseConstants.COURSE_PREFIX) + (owner.getPrimaryKey())), userPK, relations[a], homePhones[a], workPhones[a], mobilePhones[a], emails[a]); } catch (java.lang.Exception e) { getLogger().log(java.util.logging.Level.WARNING, (\"Error while trying to save main relative for child \" + child), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6347/buggy-version/src.java.is.idega.idegaweb.egov.course.presentation.CourseApplication.java", "BodyUseAPI": ["is.idega.block.family.data.Child.storeMainRelative(((is.idega.idegaweb.egov.course.CourseConstants.COURSE_PREFIX) + (owner.getPrimaryKey())),java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)", "com.idega.user.data.User.getPrimaryKey()"], "Fixed commit": "fc9290fafe5fc1cd9e8f08836b87530e19a72c32", "Url": "https://api.github.com/repos/idega/is.idega.idegaweb.egov.course", "Date": "2015-06-16T11:45:40Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { path = getMainActivity().getTabManager().getEditorAdapter().getCurrentEditorDelegate().getPath(); } catch (java.lang.Exception e) { com.jecelyin.common.utils.L.e(e); com.jecelyin.common.utils.UIUtils.toast(context, R.string.editor_in_init); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7029/buggy-version/app.src.main.java.com.jecelyin.editor.v2.ui.dialog.RunDialog.java", "BodyUseAPI": ["com.jecelyin.editor.v2.ui.dialog.RunDialog.getMainActivity()", "getMainActivity().getTabManager().getEditorAdapter().getCurrentEditorDelegate().getPath()", "getMainActivity().getTabManager()", "getMainActivity().getTabManager().getEditorAdapter()", "getMainActivity().getTabManager().getEditorAdapter().getCurrentEditorDelegate()"], "Fixed commit": "64df47b2cfb3ee73c1e7f049bc7370f3b4c4992a", "Url": "https://api.github.com/repos/jecelyin/920-text-editor-v2", "Date": "2016-09-17T03:19:36Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { return originalStrutsAction.execute(request, response); } finally { currentThread.setContextClassLoader(contextClassLoader); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6924/buggy-version/pluginsSDK.hooks.opengraph-hook.docroot.WEB-INF.src.com.fb.action.OpenGraphLayoutAction.java", "BodyUseAPI": ["com.liferay.portal.kernel.struts.StrutsAction.execute(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"], "Fixed commit": "11f9b5af1ba42a6017a39fa51a8ccb3fee973265", "Url": "https://api.github.com/repos/juliocamarero/facebook-liferay-integration", "Date": "2012-09-26T00:45:33Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { processFilter(com.fb.filter.OpenGraphFilter.class, request, stringServerResponse, filterChain); } finally { currentThread.setContextClassLoader(contextClassLoader); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6924/buggy-version/pluginsSDK.hooks.opengraph-hook.docroot.WEB-INF.src.com.fb.filter.OpenGraphFilter.java", "BodyUseAPI": ["com.fb.filter.OpenGraphFilter.processFilter(java.lang.Class,javax.servlet.http.HttpServletRequest,com.liferay.portal.kernel.servlet.StringServletResponse,javax.servlet.FilterChain)"], "Fixed commit": "11f9b5af1ba42a6017a39fa51a8ccb3fee973265", "Url": "https://api.github.com/repos/juliocamarero/facebook-liferay-integration", "Date": "2012-09-26T00:45:33Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.apache.commons.io.FileUtils.forceDelete(tempDir); org.apache.commons.io.FileUtils.forceMkdir(tempDir); } catch (java.io.IOException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/7455/buggy-version/certificate-generator-core.src.main.java.org.codeclubbrasil.certificategenerator.domain.CertificateTemplate.java", "BodyUseAPI": ["org.apache.commons.io.FileUtils.forceDelete(java.io.File)", "org.apache.commons.io.FileUtils.forceMkdir(java.io.File)"], "Fixed commit": "91a32618d298609fb41092917c4e8d735f16e1c9", "Url": "https://api.github.com/repos/CodeClubBrasil/ccbr-gerador-certificados", "Date": "2017-10-14T22:48:19Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { that.visit(ev); } catch (com.redhat.ceylon.compiler.java.codegen.recovery.HasErrorException e) { newplan(new com.redhat.ceylon.compiler.java.codegen.recovery.Drop(e.getNode(), e.getErrorMessage())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1892/buggy-version/src.com.redhat.ceylon.compiler.java.codegen.recovery.DeclarationErrorVisitor.java", "BodyUseAPI": ["Tree.SpecifierOrInitializerExpression.visit(com.redhat.ceylon.compiler.java.codegen.recovery.DeclarationErrorVisitor.DeclExprErrorVisitor)"], "Fixed commit": "49e65ef05e182a02a4dce0a4a17eddbbec7f9bcc", "Url": "https://api.github.com/repos/ceylon/ceylon-compiler", "Date": "2014-10-06T09:17:39Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { str4 = request.getServerName(); } catch (java.lang.NumberFormatException ignore) { str4 = \"127.0.0.1\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4051/buggy-version/src.java.org.rapidcontext.core.web.Request.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getServerName()"], "Fixed commit": "b8650c2fddcfdee38d4bc9c680e674c307d6400d", "Url": "https://api.github.com/repos/cederberg/rapidcontext", "Date": "2017-01-31T17:28:43Z"},
{"Line": "=>544", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mAdapter.notifyDataSetChanged(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2123/buggy-version/app.src.main.java.com.pea.jay.redditlists.userInterface.RecyclerListActivity.java", "BodyUseAPI": ["com.pea.jay.redditlists.customViews.CustomRecyclerListAdapter.notifyDataSetChanged()"], "Fixed commit": "b293f613496398acd6bfa4e161a5101bbaf2d6a5", "Url": "https://api.github.com/repos/SeledousSystems/RedditLists", "Date": "2017-01-27T18:25:47Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.text.SimpleDateFormat timeSdf = new java.text.SimpleDateFormat(\"H:m\"); java.sql.Time time = new java.sql.Time(timeSdf.parse(timeString).getTime()); return time; } catch (java.text.ParseException e) { e.printStackTrace(); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8363/buggy-version/FacultyInfo_Server.src.de.uni_passau.facultyinfo.server.dataloader.SportsCourseLoader.java", "BodyUseAPI": ["java.text.SimpleDateFormat.parse(java.lang.String)", "java.util.Date.getTime()"], "Fixed commit": "06ecf6ccde86e9800306610a2347ebd758dc6ddd", "Url": "https://api.github.com/repos/TimoSta/FacultyInfo_Server", "Date": "2014-06-05T20:54:53Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(30); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2634/buggy-version/code.game.Game.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "099b0e4e745556bdef6ad2b028377325786c7c20", "Url": "https://api.github.com/repos/DocSkellington/Projet", "Date": "2016-05-03T11:56:32Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.openscience.jchempaint.controller.ControllerHub.avoidOverlap(chemModel); } catch (java.lang.Exception e) { javax.swing.JOptionPane.showMessageDialog(panel, org.openscience.jchempaint.GT._(\"Structure could not be generated\")); throw new org.openscience.cdk.exception.CDKException(\"Cannot depict structure\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6041/buggy-version/src.main.org.openscience.jchempaint.application.JChemPaint.java", "BodyUseAPI": ["org.openscience.jchempaint.controller.ControllerHub.avoidOverlap(org.openscience.cdk.interfaces.IChemModel)"], "Fixed commit": "cf3a51332ca8f8b3c06b7307dbf7ecae548ee008", "Url": "https://api.github.com/repos/JChemPaint/jchempaint", "Date": "2012-06-04T10:12:56Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.openscience.jchempaint.application.JChemPaint.generateModel(jChemPaintPanel, molecule, true, false); } catch (org.openscience.cdk.exception.CDKException e) { e.printStackTrace(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6041/buggy-version/src.main.org.openscience.jchempaint.InsertTextPanel.java", "BodyUseAPI": ["org.openscience.jchempaint.application.JChemPaint.generateModel(org.openscience.jchempaint.AbstractJChemPaintPanel,org.openscience.cdk.interfaces.IMolecule,boolean,boolean)"], "Fixed commit": "cf3a51332ca8f8b3c06b7307dbf7ecae548ee008", "Url": "https://api.github.com/repos/JChemPaint/jchempaint", "Date": "2012-06-04T10:12:56Z"},
{"Line": "=>540", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.openscience.jchempaint.application.JChemPaint.generateModel(jcpPanel, toPaste, false, true); } catch (org.openscience.cdk.exception.CDKException e) { e.printStackTrace(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6041/buggy-version/src.main.org.openscience.jchempaint.action.CopyPasteAction.java", "BodyUseAPI": ["org.openscience.jchempaint.application.JChemPaint.generateModel(org.openscience.jchempaint.action.CopyPasteAction,org.openscience.cdk.interfaces.IMolecule,boolean,boolean)"], "Fixed commit": "cf3a51332ca8f8b3c06b7307dbf7ecae548ee008", "Url": "https://api.github.com/repos/JChemPaint/jchempaint", "Date": "2012-06-04T10:12:56Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { monitor.addPlayerLeft(); is.close(); return; } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3630/buggy-version/src.server.InputHandler.java", "BodyUseAPI": ["java.io.InputStream.close()", "server.Monitor.addPlayerLeft()"], "Fixed commit": "9f78c99f598db310a9b58838210f65fe4269bc3d", "Url": "https://api.github.com/repos/atp10mla/project_network_programming", "Date": "2014-05-20T19:57:22Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((lore.size()) > i) { i++; for (@java.lang.SuppressWarnings(\"unused\") int z = i; i < (lore.size()); i++) { line = net.stormdev.ucars.trade.Colors.strip(lore.get(i)).toLowerCase(); modifiers.add(line.replaceFirst(java.util.regex.Pattern.quote(\"-modifier: \"), \"\").trim()); } } } catch (java.lang.Exception e) { return new net.stormdev.ucarstrade.cars.DrivenCar(name, speed, health, isHandlingDamaged, modifiers); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6026/buggy-version/src.main.java.net.stormdev.ucarstrade.ItemCarValidation.java", "BodyUseAPI": ["java.util.regex.Pattern.quote(java.lang.String)", "net.stormdev.ucars.trade.Colors.strip(java.lang.String)", "java.util.List<java.lang.String>.add(java.lang.String)", "net.stormdev.ucars.trade.Colors.strip(lore.get(i)).toLowerCase()", "java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.size()", "java.lang.String.trim()", "java.util.List<java.lang.String>.get(int)", "java.lang.String.replaceFirst(java.lang.String,java.lang.String)"], "Fixed commit": "e38717fbbed29a528df9ec80e272af7b1db2ebc5", "Url": "https://api.github.com/repos/storm345dev/uCarsTrade", "Date": "2014-05-25T20:22:36Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { tempDir = new java.io.File(com.example.fileex.FileEx.previousDir).getParent(); } catch (java.lang.NullPointerException e) { android.util.Log.d(com.example.fileex.FileEx.TAG, \"You are already at root directory.\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2960/buggy-version/fileex.src.main.java.com.example.fileex.FileEx.java", "BodyUseAPI": ["java.io.File.getParent()"], "Fixed commit": "c05d48e2e608ea5fd4de6f0728f72efdfa472c7c", "Url": "https://api.github.com/repos/1singhmanmeet/FileEx", "Date": "2017-12-13T12:22:03Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return new java.io.File(dir).exists(); } catch (java.lang.NullPointerException e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2960/buggy-version/fileex.src.main.java.com.example.fileex.FileEx.java", "BodyUseAPI": ["java.io.File.exists()"], "Fixed commit": "c05d48e2e608ea5fd4de6f0728f72efdfa472c7c", "Url": "https://api.github.com/repos/1singhmanmeet/FileEx", "Date": "2017-12-13T12:22:03Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.example.fileex.FileEx.previousDir = new java.io.File(dir).getParent(); } catch (java.lang.NullPointerException e) { android.util.Log.e(com.example.fileex.FileEx.TAG, \"There is no parent for current directory.\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2960/buggy-version/fileex.src.main.java.com.example.fileex.FileEx.java", "BodyUseAPI": ["java.io.File.getParent()"], "Fixed commit": "c05d48e2e608ea5fd4de6f0728f72efdfa472c7c", "Url": "https://api.github.com/repos/1singhmanmeet/FileEx", "Date": "2017-12-13T12:22:03Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { time.parse3339(taskInfo.timestamp); } catch (android.util.TimeFormatException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/88/buggy-version/src.com.github.leeonlee.crowdshop_app.TasksAdapter.java", "BodyUseAPI": ["android.text.format.Time.parse3339(taskInfo.timestamp)"], "Fixed commit": "64ce1597e6af1114e15202584e16d5dee188ad4e", "Url": "https://api.github.com/repos/leeonlee/crowdshop-app", "Date": "2014-04-06T14:20:17Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { expenseRequests = ExpenseAccess.sort(expenseRequests); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3322/buggy-version/src.ExpenseAccess.java", "BodyUseAPI": ["ExpenseAccess.sort(java.util.ArrayList<ExpenseRequest>)"], "Fixed commit": "3943d4d73e2b519bbb4208a2b13697b13793a658", "Url": "https://api.github.com/repos/k-short/CSC-640-Project", "Date": "2016-11-29T18:43:56Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (trace(org.alfresco.extension.bulkimport.impl.BatchImporterImpl.log)) trace(org.alfresco.extension.bulkimport.impl.BatchImporterImpl.log, (((\"Importing \" + (item.isDirectory() ? \"directory \" : \"file \")) + (java.lang.String.valueOf(item))) + \".\")); org.alfresco.service.cmr.repository.NodeRef nodeRef = findOrCreateNode(target, item, replaceExisting, dryRun); boolean isDirectory = item.isDirectory(); if (nodeRef != null) { if (isDirectory) { importDirectory(nodeRef, item, dryRun); }else { importFile(nodeRef, item, dryRun); } } if (trace(org.alfresco.extension.bulkimport.impl.BatchImporterImpl.log)) trace(org.alfresco.extension.bulkimport.impl.BatchImporterImpl.log, (\"Finished importing \" + (java.lang.String.valueOf(item)))); } catch (final java.lang.Exception e) { throw new org.alfresco.extension.bulkimport.impl.ItemImportException(item, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/7651/buggy-version/amp.src.main.java.org.alfresco.extension.bulkimport.impl.BatchImporterImpl.java", "BodyUseAPI": ["java.lang.String.valueOf(org.alfresco.extension.bulkimport.source.BulkImportItem<org.alfresco.extension.bulkimport.source.BulkImportItem.Version>)", "org.alfresco.extension.bulkimport.source.BulkImportItem<org.alfresco.extension.bulkimport.source.BulkImportItem.Version>.isDirectory()", "org.alfresco.extension.bulkimport.source.BulkImportItem<org.alfresco.extension.bulkimport.source.BulkImportItem.Version>.isDirectory()", "org.alfresco.extension.bulkimport.impl.BatchImporterImpl.findOrCreateNode(org.alfresco.service.cmr.repository.NodeRef,org.alfresco.extension.bulkimport.source.BulkImportItem<org.alfresco.extension.bulkimport.source.BulkImportItem.Version>,boolean,boolean)", "org.alfresco.extension.bulkimport.impl.BatchImporterImpl.importFile(org.alfresco.service.cmr.repository.NodeRef,org.alfresco.extension.bulkimport.source.BulkImportItem<org.alfresco.extension.bulkimport.source.BulkImportItem.Version>,boolean)", "org.alfresco.extension.bulkimport.impl.BatchImporterImpl.importDirectory(org.alfresco.service.cmr.repository.NodeRef,org.alfresco.extension.bulkimport.source.BulkImportItem<org.alfresco.extension.bulkimport.source.BulkImportItem.Version>,boolean)", "java.lang.String.valueOf(org.alfresco.extension.bulkimport.source.BulkImportItem<org.alfresco.extension.bulkimport.source.BulkImportItem.Version>)", "org.alfresco.extension.bulkimport.impl.BatchImporterImpl.trace(org.apache.commons.logging.Log)", "org.alfresco.extension.bulkimport.impl.BatchImporterImpl.trace(org.apache.commons.logging.Log,(\"Finished importing \" + (java.lang.String.valueOf(item))))", "org.alfresco.extension.bulkimport.impl.BatchImporterImpl.trace(org.apache.commons.logging.Log,(((\"Importing \" + (item.isDirectory() ? \"directory \" : \"file \")) + (java.lang.String.valueOf(item))) + \".\"))", "org.alfresco.extension.bulkimport.impl.BatchImporterImpl.trace(org.apache.commons.logging.Log)"], "Fixed commit": "98acc8afefcf4c3eb79ed3c38e4124c4bf18464d", "Url": "https://api.github.com/repos/pmonks/alfresco-bulk-import", "Date": "2015-06-14T03:20:38Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { holder.txtCommentName.setText(comment.getFromId().getInfo().getName()); holder.txtCommentContent.setText(comment.getContent()); if ((comment.getTask()) == null) throw new java.lang.IllegalArgumentException(); else { holder.txtCommentType.setText(comment.getTask().getInfoTask().getTitle()); } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4760/buggy-version/app.src.main.java.com.hbbsolution.maid.maid_profile.ListCommentAdapter.java", "BodyUseAPI": ["com.hbbsolution.maid.maid_profile.model.comment_maid.Doc.getContent()", "comment.getFromId().getInfo()", "comment.getFromId().getInfo().getName()", "comment.getTask().getInfoTask().getTitle()", "android.widget.TextView.setText(comment.getFromId().getInfo().getName())", "comment.getTask().getInfoTask()", "com.hbbsolution.maid.maid_profile.model.comment_maid.Doc.getTask()", "com.hbbsolution.maid.maid_profile.model.comment_maid.Doc.getFromId()", "android.widget.TextView.setText(comment.getTask().getInfoTask().getTitle())", "android.widget.TextView.setText(comment.getContent())", "com.hbbsolution.maid.maid_profile.model.comment_maid.Doc.getTask()"], "Fixed commit": "f06acfa433221d97f0507e4fda45f17588279c65", "Url": "https://api.github.com/repos/thanhduy26091995/Maid", "Date": "2017-07-03T09:18:03Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { replacedValue = azkaban.utils.PropsUtils.resolveVariableReplacement(value, props, visitedVariables); } catch (java.lang.Exception e) { java.lang.System.out.println(java.lang.String.format(\"What'a suprise key %s , val %s\", key, value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1228/buggy-version/azkaban-common.src.main.java.azkaban.utils.PropsUtils.java", "BodyUseAPI": ["azkaban.utils.PropsUtils.resolveVariableReplacement(java.lang.String,azkaban.utils.Props,java.util.LinkedHashSet<java.lang.String>)"], "Fixed commit": "32967eb0ff64c2be89194ac86a4c8c93b023ee13", "Url": "https://api.github.com/repos/lilonghua1987/azkaban", "Date": "2016-03-29T02:53:42Z"},
{"Line": "=>1071", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (gui_.isLiveModeOn()) { gui_.enableLiveMode(false); gui_.closeAllAcquisitions(); } } catch (java.lang.Exception e) { java.lang.System.out.println((\"Failed stopping Live mode: \" + e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/853/buggy-version/src.com.github.dougkelly88.FLIMPlateReaderGUI.GeneralGUIComponents.HCAFLIMPluginFrame.java", "BodyUseAPI": ["org.micromanager.MMStudio.enableLiveMode(boolean)", "org.micromanager.MMStudio.isLiveModeOn()", "org.micromanager.MMStudio.closeAllAcquisitions()"], "Fixed commit": "8189ba16f611c6059b401a4b6760f33a18fbdfb3", "Url": "https://api.github.com/repos/imperial-photonics/openFLIM-HCA", "Date": "2016-02-15T19:56:21Z"},
{"Line": "=>1087", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (gui_.isLiveModeOn()) { gui_.enableLiveMode(false); gui_.closeAllAcquisitions(); } } catch (java.lang.Exception e) { java.lang.System.out.println((\"Failed stopping Live mode: \" + e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/853/buggy-version/src.com.github.dougkelly88.FLIMPlateReaderGUI.GeneralGUIComponents.HCAFLIMPluginFrame.java", "BodyUseAPI": ["org.micromanager.MMStudio.enableLiveMode(boolean)", "org.micromanager.MMStudio.closeAllAcquisitions()", "org.micromanager.MMStudio.isLiveModeOn()"], "Fixed commit": "8189ba16f611c6059b401a4b6760f33a18fbdfb3", "Url": "https://api.github.com/repos/imperial-photonics/openFLIM-HCA", "Date": "2016-02-15T19:56:21Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { lastSeen = javax.xml.bind.DatatypeConverter.parseDateTime(seenItems.get(itemId, null)); lastSeen.add(java.util.Calendar.DATE, 1); } catch (java.lang.IllegalArgumentException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8518/buggy-version/src.ch.ike.TradeMeScanner.java", "BodyUseAPI": ["javax.xml.bind.DatatypeConverter.parseDateTime(java.lang.String)", "java.util.Calendar.add(int,int)", "java.util.prefs.Preferences.get(java.lang.String,<nulltype>)"], "Fixed commit": "9d5dff95b48ff0b69d60fdb9f650c463b847e040", "Url": "https://api.github.com/repos/mikeller/trade-me-watcher", "Date": "2012-09-19T09:24:30Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { action = intent.getAction(); } catch (java.lang.NullPointerException e) { action = \"null\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5877/buggy-version/app.src.main.java.com.github.guwenk.smuradio.PlayerService.java", "BodyUseAPI": ["android.content.Intent.getAction()"], "Fixed commit": "63cfad83c4408f9cba161234e95061b02c213bbe", "Url": "https://api.github.com/repos/guwenk/SomeRadio-Android", "Date": "2017-05-25T20:44:12Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(filesystem.ReplicaManager.SCAN_INTERVAL); } catch (java.lang.InterruptedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1192/buggy-version/src.filesystem.ReplicaManager.java", "BodyUseAPI": ["java.lang.Thread.sleep(java.lang.Integer)"], "Fixed commit": "802f11b804508b32408b8e1c7d26d313d4e31c4e", "Url": "https://api.github.com/repos/naveed2/MP3", "Date": "2012-11-11T03:22:42Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.json.JSONObject rObj = android.weather.rob.org.weather.client.WeatherJSONParser.getObject(\"rain\", jObj); weather.setmPrecipitations(android.weather.rob.org.weather.client.WeatherJSONParser.getFloat(\"3h\", rObj)); } catch (org.json.JSONException e) { weather.setmPrecipitations(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/597/buggy-version/mobile.src.main.java.android.weather.rob.org.weather.client.WeatherJSONParser.java", "BodyUseAPI": ["android.weather.rob.org.weather.utility.Weather.setmPrecipitations(float)", "android.weather.rob.org.weather.client.WeatherJSONParser.getObject(java.lang.String,org.json.JSONObject)", "android.weather.rob.org.weather.client.WeatherJSONParser.getFloat(java.lang.String,org.json.JSONObject)"], "Fixed commit": "b2c00cf8337d8016be90d7fa0665d0985d7028cd", "Url": "https://api.github.com/repos/guisalmon/Weather", "Date": "2015-04-13T18:44:13Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { setZooKeeperInstance(job, instanceId, zookeepers); } catch (java.lang.IllegalStateException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1742/buggy-version/src.main.java.org.apache.accumulo.storagehandler.HiveAccumuloTableInputFormat.java", "BodyUseAPI": ["org.apache.accumulo.storagehandler.HiveAccumuloTableInputFormat.setZooKeeperInstance(org.apache.accumulo.storagehandler.Job,java.lang.String,java.lang.String)"], "Fixed commit": "6b93c5998f4bc724a46cb776b9e9378b0f82778e", "Url": "https://api.github.com/repos/mahesh2013/accumulo-hive-storage-manager", "Date": "2013-09-04T16:02:46Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.util.Iterator<java.lang.Object> it = localLibs.iterator(); while (it.hasNext()) { java.io.File auxLibs = new java.io.File(it.next().toString()).getCanonicalFile(); if (auxLibs.exists()) { if (auxLibs.isDirectory()) { java.io.File[] files = auxLibs.listFiles(); for (java.io.File jar : files) { classPathFiles.add(jar); } }else { classPathFiles.add(auxLibs); } } } } catch (java.io.IOException e) { throw new org.walkmod.conf.ConfigurationException(\"Error resolving the libs directories\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1659/buggy-version/src.main.java.org.walkmod.gradle.providers.ClassLoaderConfigurationProvider.java", "BodyUseAPI": ["java.io.File.exists()", "java.util.List<java.io.File>.add(java.io.File)", "java.io.File.isDirectory()", "java.util.List<java.io.File>.add(java.io.File)", "com.alibaba.fastjson.JSONArray.iterator()", "java.util.Iterator<java.lang.Object>.next()", "java.lang.Object.toString()", "java.util.Iterator<java.lang.Object>.hasNext()", "java.io.File.getCanonicalFile()", "java.io.File.listFiles()"], "Fixed commit": "70d157d60d16e438226e1404ad612de2c954ffea", "Url": "https://api.github.com/repos/walkmod/walkmod-gradle-plugin", "Date": "2016-04-04T09:25:10Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { page = java.lang.Integer.parseInt(request.getParameter(\"size\")); } catch (java.lang.NumberFormatException e) { slf4jLogger.info(\"Bad parameter for size\"); response.sendError(HttpServletResponse.SC_BAD_REQUEST); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/186/buggy-version/src.main.java.com.excilys.controller.Dashboard.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "java.lang.Integer.parseInt(request.getParameter(\"size\"))"], "Fixed commit": "bbd3697a4faa547e6b9cb08dcdca64cebe36ddc7", "Url": "https://api.github.com/repos/Mealya/ComputerDatabase", "Date": "2016-04-28T10:19:56Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { page = java.lang.Integer.parseInt(request.getParameter(\"page\")); } catch (java.lang.NumberFormatException e) { slf4jLogger.info(\"Bad parameter for page\"); response.sendError(HttpServletResponse.SC_BAD_REQUEST); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/186/buggy-version/src.main.java.com.excilys.controller.Dashboard.java", "BodyUseAPI": ["java.lang.Integer.parseInt(request.getParameter(\"page\"))", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Fixed commit": "bbd3697a4faa547e6b9cb08dcdca64cebe36ddc7", "Url": "https://api.github.com/repos/Mealya/ComputerDatabase", "Date": "2016-04-28T10:19:56Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.scotch.OARKit.java.helpers.NativeLoader.addLibraryPath(com.scotch.OARKit.java.helpers.NativeLoader.tempdir); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/7780/buggy-version/Java.src.com.scotch.OARKit.java.helpers.NativeLoader.java", "BodyUseAPI": ["com.scotch.OARKit.java.helpers.NativeLoader.addLibraryPath(java.lang.String)"], "Fixed commit": "d512fae49c5ed26b333de76448ecb4fb1b35305b", "Url": "https://api.github.com/repos/jamesjames/scotch-college-oarkit", "Date": "2016-03-30T11:50:43Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { GraphicPackage.LocationURLGenerator locationURL = new GraphicPackage.LocationURLGenerator(jTextField1.getText()); writer.writeXML(); java.lang.System.out.println(\"fatto\"); } catch (java.io.IOException ex) { java.util.logging.Logger.getLogger(GraphicPackage.MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6791/buggy-version/JavaXMLProject.src.GraphicPackage.MainFrame.java", "BodyUseAPI": ["javax.swing.JTextField.getText()", "GraphicPackage.LocationXMLWriter.writeXML()", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "abf8a8f877c5523fe8da4f861611048bac2e2939", "Url": "https://api.github.com/repos/5AI-2015-TPI-pollini/progetto-java-xml-AlessandroTrainini", "Date": "2015-12-02T11:53:25Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.util.Log.d(com.niupiao.niupiao.fragments.my_tickets.MyTicketsViewPagerFragment.class.getSimpleName(), (\"FIRST TICKET: \" + (events.iterator().next().getTickets().toString()))); } catch (java.lang.Exception e) { android.util.Log.d(com.niupiao.niupiao.fragments.my_tickets.MyTicketsViewPagerFragment.class.getSimpleName(), \"No tickets!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4412/buggy-version/app.src.main.java.com.niupiao.niupiao.fragments.my_tickets.MyTicketsViewPagerFragment.java", "BodyUseAPI": ["events.iterator().next()", "android.util.Log.d(java.lang.String,(\"FIRST TICKET: \" + (events.iterator().next().getTickets().toString())))", "events.iterator().next().getTickets()", "java.lang.Class.getSimpleName()", "java.util.Collection<com.niupiao.niupiao.models.Event>.iterator()", "events.iterator().next().getTickets().toString()"], "Fixed commit": "2d5a1af00a1080c3cbed4e3382e5cb42617b347f", "Url": "https://api.github.com/repos/Niupiao/niupiao-android", "Date": "2015-03-18T08:45:44Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { playMe = new player.PlayMe(((new java.io.File(\"\").getCanonicalPath()) + ((java.lang.String) (util.UtilProperty.getProperty(\"musicFile\"))))); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3272/buggy-version/src.timer.ControlTimer.java", "BodyUseAPI": ["util.UtilProperty.getProperty(java.lang.String)", "java.io.File.getCanonicalPath()"], "Fixed commit": "dc726bfd8c7f7f5fa79385b5df534eb64fbe198b", "Url": "https://api.github.com/repos/snajperro/TimeControll", "Date": "2015-09-30T06:37:11Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mActivity.startActivityForResult(checkIntent, MainActivity.CALLBACK_TTS); } catch (android.content.ActivityNotFoundException e) { mTts = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1087/buggy-version/app.src.main.java.org.librepilot.lp2go.helper.TextToSpeechHelper.java", "BodyUseAPI": ["org.librepilot.lp2go.MainActivity.startActivityForResult(android.content.Intent,MainActivity.CALLBACK_TTS)"], "Fixed commit": "7035f16a4e242b79074cecea3f33b3c0e16dafc5", "Url": "https://api.github.com/repos/MarcProe/lp2go", "Date": "2016-06-27T20:39:42Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { v = vproxy.createView(group, new android.view.ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT)); } catch (java.lang.Exception e) { com.evolved.automata.android.lisp.guibuilder.EventLog.get().logSystemError(e, \"Failed to render page\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4536/buggy-version/projects.android_studio.JavaLisp.AndroidLispGuiBuilder.src.main.java.com.evolved.automata.android.lisp.guibuilder.RenderFragment.java", "BodyUseAPI": ["com.evolved.automata.android.lisp.views.ViewProxy.createView(android.view.ViewGroup,android.view.ViewGroup.LayoutParams)"], "Fixed commit": "a715d94ad1c0a59d101b77ff994c4d624e19a303", "Url": "https://api.github.com/repos/hexagonc/Android-Lisp", "Date": "2017-07-26T19:36:05Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.jadventure.game.items.Item appendItem = com.jadventure.game.prompts.BackpackDebugPrompt.itemRepo.getItem(command.substring(3).trim()); if ((appendItem.getName()) != null) player.addItemToStorage(appendItem); } catch (com.jadventure.game.repository.RepositoryException ex) { com.jadventure.game.QueueProvider.offer(ex.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/7738/buggy-version/src.main.java.com.jadventure.game.prompts.BackpackDebugPrompt.java", "BodyUseAPI": ["com.jadventure.game.entities.Player.addItemToStorage(com.jadventure.game.items.Item)", "com.jadventure.game.repository.ItemRepository.getItem(java.lang.String)", "java.lang.String.substring(int)", "com.jadventure.game.items.Item.getName()", "java.lang.String.trim()"], "Fixed commit": "08ff7a429ec0262c12fb9df05612ed02ab6ff2a4", "Url": "https://api.github.com/repos/Progether/JAdventure", "Date": "2015-01-13T08:02:19Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return this.teamName.split(\";\")[1]; } catch (java.lang.ArrayIndexOutOfBoundsException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6591/buggy-version/Spark.src.com.cisco.ukidcv.spark.tasks.rooms.CreateRoomConfig.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "c3cd8f5346afc125928928251b9aa3acf78fb66f", "Url": "https://api.github.com/repos/CiscoUKIDCDev/ucsd-spark-plugin", "Date": "2016-07-15T14:57:33Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { session.beginTransaction(); java.lang.Long id = ((java.lang.Long) (session.save(entity))); session.getTransaction().commit(); return id; } catch (java.lang.Exception e) { session.getTransaction().rollback(); throw e; } finally { if (session != null) session.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5171/buggy-version/facade.src.main.java.com.revolut.facade.orm.HibernateUtil.java", "BodyUseAPI": ["org.hibernate.Session.save(java.lang.Object)", "org.hibernate.Session.getTransaction()", "org.hibernate.Session.beginTransaction()", "session.getTransaction().commit()"], "Fixed commit": "e1c91a489fc342e86b3bf189d861368e57a93b9a", "Url": "https://api.github.com/repos/azhuravel/Revolut", "Date": "2016-05-24T13:30:28Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { getMessage(); } catch (java.lang.Throwable e) { return 1000; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4722/buggy-version/src.bin.mt.WeChat.java", "BodyUseAPI": ["bin.mt.WeChat.getMessage()"], "Fixed commit": "489bd88797f9cdb788c1bbb5d915e789712a5270", "Url": "https://api.github.com/repos/L-JINBIN/WeChatPayListener", "Date": "2017-07-15T14:41:29Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return getUniverseApiOpen(apiClient).postUniverseNames(t, net.nikr.eve.jeveasset.io.esi.DATASOURCE, net.nikr.eve.jeveasset.io.esi.USER_AGENT, null); } catch (net.troja.eve.esi.ApiException ex) { if (((ex.getCode()) == 404) && (ex.getResponseBody().toLowerCase().contains(\"ensure all ids are valid before resolving\"))) { return null; }else { throw ex; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2781/buggy-version/src.main.java.net.nikr.eve.jeveasset.io.esi.EsiNameGetter.java", "BodyUseAPI": ["net.nikr.eve.jeveasset.io.esi.EsiNameGetter.1.getUniverseApiOpen(net.troja.eve.esi.ApiClient)", "getUniverseApiOpen(apiClient).postUniverseNames(java.util.List<java.lang.Integer>,net.nikr.eve.jeveasset.io.esi.DATASOURCE,net.nikr.eve.jeveasset.io.esi.USER_AGENT,<nulltype>)"], "Fixed commit": "7dd60bd2e7ca730ca16d0cf544fbd939dd5c3690", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2017-10-17T09:36:33Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (!(CMMS.CMMS.currDisplay.readAndDispatch())) { CMMS.CMMS.currDisplay.sleep(); } } catch (java.lang.Exception e) { e.printStackTrace(); java.lang.System.out.println(e.getMessage()); java.lang.System.out.println(e.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7028/buggy-version/src.CMMS.CMMS.java", "BodyUseAPI": ["org.eclipse.swt.widgets.Display.readAndDispatch()", "org.eclipse.swt.widgets.Display.sleep()"], "Fixed commit": "4d998bf1271b06a03a09293e48dfc55479cef2e6", "Url": "https://api.github.com/repos/brycepfrimmer/3350Project", "Date": "2014-02-12T06:14:36Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { int check = java.lang.Integer.parseInt(outPage); if (check > allPage) { outPut += \",\" + outPage; } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6605/buggy-version/checkCategory.src.checkCategory.mainClass.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "6ce403c8e976cc455db3c755dd22dcc3ef481f84", "Url": "https://api.github.com/repos/nvhviet/checkCatogery", "Date": "2013-09-26T10:48:26Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { elements.put(1, new chemistry.Element(\"H\", 1, 1.00794, chemistry.ChemConstant.ElementClass.NON_METAL, new chemistry.ElectronConfig(\"1s1\"), 1, 1)); } catch (chemistry.exception.ChemException ce) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2733/buggy-version/src.chemistry.PeriodicTable.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Integer, chemistry.Element>.put(int,chemistry.Element)"], "Fixed commit": "3dfe25c943aaf04db7cb49f85da2100e7a8b46ea", "Url": "https://api.github.com/repos/Noviv/Commons", "Date": "2014-04-15T04:20:13Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { buf.writeItemStackToBuffer(stack); } catch (java.io.IOException ioex) { clashsoft.cslib.logging.CSLog.error(ioex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6672/buggy-version/src.main.java.clashsoft.cslib.minecraft.network.CSPacket.java", "BodyUseAPI": ["net.minecraft.network.PacketBuffer.writeItemStackToBuffer(net.minecraft.item.ItemStack)"], "Fixed commit": "d1aa466a6d0741ae3b5919c9f5cbc0936fafd2f6", "Url": "https://api.github.com/repos/Clashsoft/CSLib-Minecraft", "Date": "2014-06-03T11:32:26Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return buf.readItemStackFromBuffer(); } catch (java.io.IOException ioex) { clashsoft.cslib.logging.CSLog.error(ioex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6672/buggy-version/src.main.java.clashsoft.cslib.minecraft.network.CSPacket.java", "BodyUseAPI": ["net.minecraft.network.PacketBuffer.readItemStackFromBuffer()"], "Fixed commit": "d1aa466a6d0741ae3b5919c9f5cbc0936fafd2f6", "Url": "https://api.github.com/repos/Clashsoft/CSLib-Minecraft", "Date": "2014-06-03T11:32:26Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { if (Hack.Gates.GateClass.classesBeingLoaded.contains(gateName)) throw new Hack.Gates.HDLException((\"Cyclic dependency. Gate definition (possibly indirectly) depends on itself: \" + gateName)); Hack.Gates.GateClass.classesBeingLoaded.add(gateName); Hack.Gates.HDLTokenizer input = new Hack.Gates.HDLTokenizer(fileName); result = Hack.Gates.GateClass.readHDL(input, gateName); Hack.Gates.GateClass.GateClasses.put(fileName, result); } finally { Hack.Gates.GateClass.classesBeingLoaded.remove(gateName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7018/buggy-version/SimulatorsPackage.src.main.java.Hack.Gates.GateClass.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.contains(java.lang.String)", "java.util.Set<java.lang.String>.add(java.lang.String)", "Hack.Gates.GateClass.readHDL(Hack.Gates.HDLTokenizer,java.lang.String)", "java.util.Hashtable.put(java.lang.String,Hack.Gates.GateClass)"], "Fixed commit": "92792c631e12cf6d13dc588e6f5d2f267e60ab3a", "Url": "https://api.github.com/repos/itoshkov/nand2tetris-emu", "Date": "2015-09-03T15:31:46Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.select = com.softserve.edu.atqc.tools.SelectWrapper.getVisibleSelectWebElement(control); } catch (java.lang.Exception e) { select = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7500/buggy-version/src.main.java.com.softserve.edu.atqc.controls.Component.java", "BodyUseAPI": ["com.softserve.edu.atqc.tools.SelectWrapper.getVisibleSelectWebElement(com.softserve.edu.atqc.tools.ControlWrapper)"], "Fixed commit": "734963b41e54db44c5fb5361e887bae06ab5c086", "Url": "https://api.github.com/repos/softservedata/atqc148", "Date": "2015-06-26T08:07:03Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { latLngBounds = boundsBuilder.build(); } catch (java.lang.IllegalStateException e) { android.util.Log.i(ch.hearc.devmobile.travelnotebook.HomeActivity.LOGTAG, \"No LatLng in boundsBuilder: will not center the map\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5785/buggy-version/src.ch.hearc.devmobile.travelnotebook.HomeActivity.java", "BodyUseAPI": ["com.google.android.gms.maps.model.LatLngBounds.Builder.build()"], "Fixed commit": "4dd06c9a681d126a571ab39224d66aa892cac1d4", "Url": "https://api.github.com/repos/maeberli/travelnotebook", "Date": "2014-01-03T06:43:59Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { latLngBounds = boundsBuilder.build(); } catch (java.lang.IllegalStateException e) { android.util.Log.i(ch.hearc.devmobile.travelnotebook.NotebookActivity.LOGTAG, \"No LatLng in boundsBuilder: will not center the map\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5785/buggy-version/src.ch.hearc.devmobile.travelnotebook.NotebookActivity.java", "BodyUseAPI": ["com.google.android.gms.maps.model.LatLngBounds.Builder.build()"], "Fixed commit": "4dd06c9a681d126a571ab39224d66aa892cac1d4", "Url": "https://api.github.com/repos/maeberli/travelnotebook", "Date": "2014-01-03T06:43:59Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.branchName = registeredTrail.getBranch().getValue().getName(); } catch (java.lang.NullPointerException e) { this.branchName = \"No Especificado\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/1772/buggy-version/public-utils.src.main.java.mx.krieger.mapaton.publicutils.wrappers.NearTrails.java", "BodyUseAPI": ["mx.krieger.mapaton.publicutils.entities.RegisteredTrail.getBranch()", "registeredTrail.getBranch().getValue().getName()", "registeredTrail.getBranch().getValue()"], "Fixed commit": "a9c4f5fd50cae460ff18d112de680adbff0443cb", "Url": "https://api.github.com/repos/LabPLC/MapatonAPI", "Date": "2016-04-09T13:44:04Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { chat.server.Config.init(args); } catch (java.lang.Exception e) { java.lang.System.out.println(\"Invalid launch arguments!\"); e.printStackTrace(); java.lang.System.exit((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2279/buggy-version/services.chat-server.src.main.java.chat.server.Service.java", "BodyUseAPI": ["chat.server.Config.init(java.lang.String[])"], "Fixed commit": "62ae12fae770c9c6bd6f2e0d66f2b12a5ae8430a", "Url": "https://api.github.com/repos/int-lecture/repo-03", "Date": "2017-06-26T11:26:30Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { float x = (event.getX(0)) + (event.getX(1)); float y = (event.getY(0)) + (event.getY(1)); return new android.graphics.PointF((x / 2), (y / 2)); } catch (java.lang.IllegalStateException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3734/buggy-version/app.src.main.java.com.eascs.eaphotoselect.photo.view.widget.ZoomImageView.java", "BodyUseAPI": ["android.view.MotionEvent.getX(int)", "android.view.MotionEvent.getY(int)", "android.view.MotionEvent.getX(int)", "android.view.MotionEvent.getY(int)"], "Fixed commit": "76449b94431c60e5b3bea2adee86e034466b489f", "Url": "https://api.github.com/repos/zhoudailiang/EAPhotoSelect", "Date": "2016-11-22T09:10:41Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { activeSerialPort.enableReceiveTimeout(10); } catch (purejavacomm.UnsupportedCommOperationException ex) { jmri.jmrix.lenz.ztc640.ZTC640Adapter.log.error((((\"Cannot set receive timeout on port \" + portName) + \": \") + (ex.getMessage()))); return ((\"Cannot set receive timeout on port \" + portName) + \": \") + (ex.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3640/buggy-version/java.src.jmri.jmrix.lenz.ztc640.ZTC640Adapter.java", "BodyUseAPI": ["jmri.jmrix.lenz.ztc640.ZTC640Adapter.enableReceiveTimeout(int)"], "Fixed commit": "bb668927d1f5ffabde0fffb3697b15b0112a676c", "Url": "https://api.github.com/repos/rhwood/JMRI", "Date": "2016-08-20T19:44:22Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { id = java.lang.Integer.valueOf(mMeasurePoints.get(i).getPntType()); id--; } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8802/buggy-version/CRTBTunnelMonitor.src.com.crtb.tunnelmonitor.task.SubsidenceMeasureData.java", "BodyUseAPI": ["java.util.List<com.crtb.tunnelmonitor.entity.SubsidenceTotalData>.get(int)", "mMeasurePoints.get(i).getPntType()", "java.lang.Integer.valueOf(mMeasurePoints.get(i).getPntType())"], "Fixed commit": "e0fd9700f965e3054444cc833794cbb12375fb91", "Url": "https://api.github.com/repos/2014-2/001", "Date": "2014-07-15T13:14:24Z"},
{"Line": "=>570", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { result = new graphql.GraphQL(index.graphQLSchema, query).execute().getResult(); success = true; } catch (java.lang.Exception e) { result = e.getMessage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6365/buggy-version/src.main.java.org.opentripplanner.index.IndexAPI.java", "BodyUseAPI": ["graphql.GraphQL.execute()", "new graphql.GraphQL(index.graphQLSchema, query).execute().getResult()"], "Fixed commit": "7141c27849d6d86833fa8cdfaeaac32cf83dac3b", "Url": "https://api.github.com/repos/azavea/OpenTripPlanner", "Date": "2015-07-15T13:00:08Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { byte[] receiveData = new byte[vitro.wlab.wsi.coap.Constants.DTN_MESSAGE_SIZE]; java.net.DatagramPacket receivePacket = new java.net.DatagramPacket(receiveData, receiveData.length); serverSocket.receive(receivePacket); java.net.InetAddress fromIP = receivePacket.getAddress(); java.lang.String fromIPString = fromIP.getHostAddress(); java.lang.String msgString = new java.lang.String(receivePacket.getData()).trim(); if (msgString.equals(\"route\")) { logger.info((((\"Command: \" + msgString) + \" - from: \") + fromIPString)); java.net.DatagramSocket ackSocket = new java.net.DatagramSocket(); java.lang.String ack = \"ack\"; byte[] sendData = new byte[10]; sendData = ack.getBytes(); java.net.InetAddress IPAddress = java.net.InetAddress.getByName(Network.VGW_ADDRESS); java.net.DatagramPacket sendPacket = new java.net.DatagramPacket(sendData, sendData.length, IPAddress, vitro.wlab.wsi.coap.Constants.UDPSHELL_VGW_PORT); ackSocket.send(sendPacket); ackSocket.close(); manageRoutingTable(); }else { logger.info((((\"DTN message: \" + msgString) + \" - from: \") + fromIPString)); manageDtnMessages(msgString, fromIPString, fromIP); } } catch (java.io.IOException e) { logger.error(e.getMessage()); if ((clientSocket) != null) { clientSocket.close(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8964/buggy-version/src.vitro.wlab.wsi.proxy.ProxyUdpForwarder.java", "BodyUseAPI": ["java.net.InetAddress.getHostAddress()", "java.net.DatagramSocket.close()", "java.lang.String.equals(java.lang.String)", "java.net.InetAddress.getByName(Network.VGW_ADDRESS)", "org.apache.log4j.Logger.info(java.lang.String)", "vitro.wlab.wsi.proxy.ProxyUdpForwarder.manageRoutingTable()", "org.apache.log4j.Logger.info(java.lang.String)", "java.net.DatagramSocket.receive(java.net.DatagramPacket)", "java.lang.String.getBytes()", "java.net.DatagramSocket.send(java.net.DatagramPacket)", "java.net.DatagramPacket.getAddress()", "java.lang.String.trim()", "vitro.wlab.wsi.proxy.ProxyUdpForwarder.manageDtnMessages(java.lang.String,java.lang.String,java.net.InetAddress)", "java.net.DatagramPacket.getData()"], "Fixed commit": "b84d1c7cf195bf09798159d3a7d523c99adbae2e", "Url": "https://api.github.com/repos/francesco-ficarola/vitro-wlab-wsi", "Date": "2013-04-12T13:20:03Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { service = api.getService(); } catch (retrofit.RetrofitError re) { android.util.Log.d(com.udacitiy.nanodegree.spotifystage1.MainActivityFragment.TAG, \"RetrofitError in service, returning null\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/212/buggy-version/app.src.main.java.com.udacitiy.nanodegree.spotifystage1.MainActivityFragment.java", "BodyUseAPI": ["kaaes.spotify.webapi.android.SpotifyApi.getService()"], "Fixed commit": "4a264e6cf578d2d85ab93671cc71b32fc724ab72", "Url": "https://api.github.com/repos/yash256/SpotifyStage1", "Date": "2015-10-06T05:13:35Z"},
{"Line": "=>693", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { oldVal = st.getProperty(prop); } catch (java.lang.Exception e) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5592/buggy-version/library.src.main.java.com.sksamuel.jqm4gwt.button.JQMButton.java", "BodyUseAPI": ["com.google.gwt.dom.client.Style.getProperty(java.lang.String)"], "Fixed commit": "150bf97c181cc1940d821292a116c5f5f7e49810", "Url": "https://api.github.com/repos/jqm4gwt/jqm4gwt", "Date": "2015-05-19T00:38:31Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Class test = loader.findClass(classLocation); java.lang.System.out.println(test.hashCode()); } catch (java.lang.ClassNotFoundException e) { java.lang.System.err.println(\"Loader failed to load class\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4760/buggy-version/homework02.src.classLoaders.ClassLoaderMain.java", "BodyUseAPI": ["java.lang.Class.hashCode()", "java.io.PrintStream.println(int)", "classLoaders.MyCustomClassLoader.findClass(java.lang.String)"], "Fixed commit": "d0fb8e6d2344990267188cd2a846b30dec9bb3ce", "Url": "https://api.github.com/repos/CyberPuck/JavaSecuirtyHomework", "Date": "2016-09-24T19:45:09Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { frame.setState(javax.swing.JFrame.ICONIFIED); } catch (java.lang.RuntimeException e) { com.niklim.clicktrace.view.MainView.log.error(\"There is some bug in Java for Mac - cannot minimize Clicktrace.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3739/buggy-version/src.main.java.com.niklim.clicktrace.view.MainView.java", "BodyUseAPI": ["javax.swing.JFrame.setState(int)"], "Fixed commit": "bc9105eac28dfdbf9c303921d5d0edfde50005f8", "Url": "https://api.github.com/repos/mnikliborc/clicktrace", "Date": "2014-03-18T19:33:47Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { extension = type.substring(((type.lastIndexOf('/')) + 1), type.length()); } catch (java.lang.Exception e) { android.util.Log.i(\"MainActivity\", \"No MimeType found\"); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3046/buggy-version/app.src.main.java.com.kszr.midiplayer.MainActivity.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.lastIndexOf(char)", "java.lang.String.substring(int,int)"], "Fixed commit": "1094dfcaf8c1455fa48ad4f7304e33d6bbcccb0e", "Url": "https://api.github.com/repos/kszr/MIDI-Player-App", "Date": "2016-09-16T18:50:29Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { recorder.stop(); } catch (java.lang.Exception e) { android.util.Log.d(\"SoundRecorder\", e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8712/buggy-version/catroid.src.org.catrobat.catroid.soundrecorder.SoundRecorder.java", "BodyUseAPI": ["android.media.MediaRecorder.stop()"], "Fixed commit": "12c682d251cc88759a0f7400c0d073c524287825", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2014-05-20T17:22:07Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { m.ensureIndex(de.caluga.morphium.messaging.Msg.class, Msg.Fields.lockedBy, Msg.Fields.timestamp); m.ensureIndex(de.caluga.morphium.messaging.Msg.class, Msg.Fields.lockedBy, Msg.Fields.processedBy); m.ensureIndex(de.caluga.morphium.messaging.Msg.class, Msg.Fields.timestamp); } catch (java.lang.Exception e) { de.caluga.morphium.messaging.Messaging.log.error(\"Could not ensure indices\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/572/buggy-version/src.de.caluga.morphium.messaging.Messaging.java", "BodyUseAPI": ["de.caluga.morphium.Morphium.ensureIndex(java.lang.Class,Msg.Fields.lockedBy,Msg.Fields.timestamp)", "de.caluga.morphium.Morphium.ensureIndex(java.lang.Class,Msg.Fields.timestamp)", "de.caluga.morphium.Morphium.ensureIndex(java.lang.Class,Msg.Fields.lockedBy,Msg.Fields.processedBy)"], "Fixed commit": "e4b64dc69c66fbaa531c123e31cde9db77968a6f", "Url": "https://api.github.com/repos/sboesebeck/morphium", "Date": "2012-08-16T13:03:20Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { handler.failure(throwable, input); } catch (java.lang.Throwable throwable2) { asyncContext.exception(throwable2); } finally { asyncContext.exception(throwable).release(); pending.decrementAndGet(); org.apache.storm.cassandra.executor.AsyncExecutor.LOG.error(java.lang.String.format(\"Failed to execute statement '%s' \", statement), throwable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6439/buggy-version/external.storm-cassandra.src.main.java.org.apache.storm.cassandra.executor.AsyncExecutor.java", "BodyUseAPI": ["org.apache.storm.cassandra.executor.AsyncResultSetHandler<T>.failure(java.lang.Throwable,T)"], "Fixed commit": "a6110e84f677b8fc67b1ccebe6fc263e6017167a", "Url": "https://api.github.com/repos/ef-labs/storm", "Date": "2016-11-22T09:39:23Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { final java.lang.String methodProp = serializationProperties.get(SerializationProperty.METHOD); method = (methodProp == null) ? org.exquery.serialization.annotation.MethodAnnotation.SupportedMethod.xml : org.exquery.serialization.annotation.MethodAnnotation.SupportedMethod.valueOf(methodProp); } catch (final java.lang.IllegalArgumentException iae) { java.lang.System.out.println(iae.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6537/buggy-version/exquery-restxq.src.main.java.org.exquery.restxq.impl.serialization.AbstractRestXqServiceSerializer.java", "BodyUseAPI": ["org.exquery.serialization.annotation.MethodAnnotation.SupportedMethod.valueOf(java.lang.String)", "java.util.Map<org.exquery.restxq.impl.serialization.SerializationProperty, java.lang.String>.get(SerializationProperty.METHOD)"], "Fixed commit": "e4f2d0cdef20b948edc8955273408de8c558a140", "Url": "https://api.github.com/repos/exquery/exquery", "Date": "2013-01-18T08:49:36Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.widget.Toast.makeText(this, \"Downloading image...\", Toast.LENGTH_SHORT).show(); } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3124/buggy-version/app.src.main.java.me.ccrama.redditslide.Notifications.ImageDownloadNotificationService.java", "BodyUseAPI": ["android.widget.Toast.makeText(this, \"Downloading image...\", Toast.LENGTH_SHORT).show()", "android.widget.Toast.makeText(me.ccrama.redditslide.Notifications.ImageDownloadNotificationService,java.lang.String,Toast.LENGTH_SHORT)"], "Fixed commit": "d797877e0c7300242853814c877eaade5d9890d7", "Url": "https://api.github.com/repos/Nxt3/Slide", "Date": "2016-09-09T19:10:41Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.currentCompletionInfo = this.editor.getLanguageService().getCompletionsAtPosition(fileName, offset); this.currentOffset = this.getOffset(offset); } catch (java.lang.RuntimeException e) { org.eclipse.core.runtime.Status status = new org.eclipse.core.runtime.Status(org.eclipse.core.runtime.IStatus.ERROR, com.palantir.typescript.TypeScriptPlugin.ID, e.getMessage(), e); com.palantir.typescript.TypeScriptPlugin.getDefault().getLog().log(status); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5930/buggy-version/com.palantir.typescript.src.com.palantir.typescript.text.ContentAssistProcessor.java", "BodyUseAPI": ["com.palantir.typescript.text.ContentAssistProcessor.getOffset(int)", "this.editor.getLanguageService().getCompletionsAtPosition(java.lang.String,int)", "com.palantir.typescript.text.TypeScriptEditor.getLanguageService()"], "Fixed commit": "541e924c4ed931f3d6e1a53d083f67e48e4a4d24", "Url": "https://api.github.com/repos/palantir/eclipse-typescript", "Date": "2013-09-29T21:32:50Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return runnableScript.run(context); } catch (java.lang.Exception e) { throw new java.lang.RuntimeException((\"function call failed: \" + (e.getMessage())), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/1820/buggy-version/runtime.src.main.java.io.dshell.runtime.Runtime.java", "BodyUseAPI": ["io.dshell.runtime.api.RunnableScript.run(io.dshell.runtime.api.Context)"], "Fixed commit": "909d2085d47d7584d9d8a094cb5dae2102b378d3", "Url": "https://api.github.com/repos/dshell-io/dshell", "Date": "2017-05-06T12:02:56Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { host = java.net.InetAddress.getLocalHost().getHostAddress(); } catch (java.net.UnknownHostException e) { host = \"192.168.0.1\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/976/buggy-version/src.util.Naming.java", "BodyUseAPI": ["java.net.InetAddress.getHostAddress()", "java.net.InetAddress.getLocalHost()"], "Fixed commit": "da8aac6d996e0d26258d41db248944be538b2117", "Url": "https://api.github.com/repos/Jeremy-Fu/remote-method-invocation", "Date": "2014-06-24T02:51:54Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return com.rectang.xsm.io.XSMDocument.getXSMDoc(getSite(), this); } catch (java.lang.RuntimeException e) { java.lang.System.err.println((\"Error reading file\" + (getTitle()))); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/1765/buggy-version/xsm-web.src.main.java.com.rectang.xsm.site.DocumentPage.java", "BodyUseAPI": ["com.rectang.xsm.site.DocumentPage.getSite()", "com.rectang.xsm.io.XSMDocument.getXSMDoc(getSite(),com.rectang.xsm.site.DocumentPage)"], "Fixed commit": "6c6d75b216feac54323864b5f0056784ce6823a1", "Url": "https://api.github.com/repos/ajwillia-ms/xsm", "Date": "2012-12-19T23:53:21Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { Main.checkAvailability(f); } catch (java.net.MalformedURLException e) { java.lang.System.out.println(((\"There is a problem with the file, may be breaks. Fix it! (\" + (f.getName())) + \")\")); } catch (java.lang.Exception e) { java.lang.System.out.println((\"Invalid file format: \" + (f.getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/346/buggy-version/src.main.java.Main.java", "BodyUseAPI": ["Main.checkAvailability(java.io.File)"], "Fixed commit": "84c805d4f6b9d38deed1ed381f09d5ea6e2e0a87", "Url": "https://api.github.com/repos/Juffff/EbayAvChecker", "Date": "2017-02-10T08:07:41Z"},
{"Line": "=>428", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { bmpResized = android.graphics.BitmapFactory.decodeFile(filePath, optActual); } catch (java.lang.OutOfMemoryError e) { org.wordpress.android.util.WPMobileStatsUtil.trackEventForSelfHostedAndWPCom(WPMobileStatsUtil.StatsEventMediaOutOfMemory); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4278/buggy-version/src.org.wordpress.android.util.ImageHelper.java", "BodyUseAPI": ["android.graphics.BitmapFactory.decodeFile(java.lang.String,BitmapFactory.Options)"], "Fixed commit": "c98201e0564046bf133cf9f43e92968dcc95ca86", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-Android", "Date": "2014-03-26T22:28:51Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.graphics.BitmapFactory.decodeFile(filePath, optBounds); } catch (java.lang.OutOfMemoryError e) { org.wordpress.android.util.WPMobileStatsUtil.trackEventForSelfHostedAndWPCom(WPMobileStatsUtil.StatsEventMediaOutOfMemory); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4278/buggy-version/src.org.wordpress.android.util.ImageHelper.java", "BodyUseAPI": ["android.graphics.BitmapFactory.decodeFile(java.lang.String,BitmapFactory.Options)"], "Fixed commit": "c98201e0564046bf133cf9f43e92968dcc95ca86", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-Android", "Date": "2014-03-26T22:28:51Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { assetCategory = com.liferay.portlet.asset.service.AssetCategoryLocalServiceUtil.addCategory(userId, AssetCategoryConstants.DEFAULT_PARENT_CATEGORY_ID, titleMap, descriptionMap, vocabularyId, null, serviceContext); } catch (com.liferay.portlet.asset.DuplicateCategoryException dce) { throw new com.liferay.content.targeting.InvalidNameException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/58/buggy-version/content-targeting-api.src.com.liferay.content.targeting.service.impl.UserSegmentLocalServiceImpl.java", "BodyUseAPI": ["com.liferay.portlet.asset.service.AssetCategoryLocalServiceUtil.addCategory(long,AssetCategoryConstants.DEFAULT_PARENT_CATEGORY_ID,java.util.Map<java.util.Locale, java.lang.String>,java.util.Map<java.util.Locale, java.lang.String>,long,<nulltype>,com.liferay.portal.service.ServiceContext)"], "Fixed commit": "bd7b2ed1c25955baeec41b0262880979013f6146", "Url": "https://api.github.com/repos/CAustin582/liferay-apps-content-targeting", "Date": "2014-09-17T08:46:03Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { f.createNewFile(); } catch (java.io.IOException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6283/buggy-version/src.net.aionstudios.ndf.ANDFParser.java", "BodyUseAPI": ["java.io.File.createNewFile()"], "Fixed commit": "201902f812d77e73dd96bf5ca3b7c95253e538a7", "Url": "https://api.github.com/repos/Aion253/ANDF", "Date": "2017-06-12T02:38:54Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { lobbyplugin.jens7841.main.TeleporterItems.load(); } catch (java.lang.Exception e) { java.lang.System.err.println(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6441/buggy-version/src.lobbyplugin.jens7841.main.PluginSettings.java", "BodyUseAPI": ["lobbyplugin.jens7841.main.TeleporterItems.load()"], "Fixed commit": "a9d28aa531518158c34b4e156ced627e2a4cf2d6", "Url": "https://api.github.com/repos/jens7841/LobbyPlugin", "Date": "2015-10-17T09:50:23Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { lobbyplugin.jens7841.main.TeleporterItem.load(); } catch (java.lang.Exception e) { java.lang.System.err.println(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6441/buggy-version/src.lobbyplugin.jens7841.main.PluginSettings.java", "BodyUseAPI": ["lobbyplugin.jens7841.main.TeleporterItem.load()"], "Fixed commit": "a9d28aa531518158c34b4e156ced627e2a4cf2d6", "Url": "https://api.github.com/repos/jens7841/LobbyPlugin", "Date": "2015-10-17T09:50:23Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { while (true) { java.util.Set<java.lang.Integer> ids = rhogenwizard.OSHelper.getProcessesIds(\"ruby.exe\"); if ((ids.size()) == 0) { break; } } } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6925/buggy-version/rhogen-wizard.src.rhogenwizard.sdk.task.RubyDebugTask.java", "BodyUseAPI": ["java.util.Set<java.lang.Integer>.size()", "rhogenwizard.OSHelper.getProcessesIds(java.lang.String)"], "Fixed commit": "a71dc1c1e68b85cf6fef468c4d91f39b7e6535a9", "Url": "https://api.github.com/repos/rhomobile/rhostudio", "Date": "2014-11-27T01:21:49Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return java.lang.Double.valueOf(transStr); } catch (java.lang.NumberFormatException nExp) { return 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7743/buggy-version/src.main.java.org.restcomm.perfcorder.analyzer.AnalysisMeasTarget.java", "BodyUseAPI": ["java.lang.Double.valueOf(java.lang.String)"], "Fixed commit": "5325af574fc1f205047eec39916eabec9d9d76ab", "Url": "https://api.github.com/repos/RestComm/PerfCorder", "Date": "2016-04-21T14:18:32Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { expectNextTag(\"problems\"); } catch (java.io.IOException exc) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4135/buggy-version/src.main.java.hudson.plugins.violations.types.ideainspect.IdeaInspectParser.java", "BodyUseAPI": ["hudson.plugins.violations.types.ideainspect.IdeaInspectParser.expectNextTag(java.lang.String)"], "Fixed commit": "d752aa629dfabc4d60939ec477f6fe925c9acea9", "Url": "https://api.github.com/repos/9seconds/violations-plugin", "Date": "2013-09-20T13:32:50Z"},
{"Line": "=>582", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return ((com.yahoo.platform.yui.compressor.JavaScriptToken) (tokens.get(((offset) + delta)))); } catch (java.lang.IndexOutOfBoundsException ex) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7436/buggy-version/src.com.yahoo.platform.yui.compressor.JavaScriptCompressor.java", "BodyUseAPI": ["java.util.ArrayList.get(int)"], "Fixed commit": "8f4f3f0dcb7e9f98d077027fbd4e5c0bc73e8810", "Url": "https://api.github.com/repos/maskamar/yuicompressor", "Date": "2014-04-21T16:59:00Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { createLobby(new org.json.JSONArray(getDataFromServer(\"http://trongame.ddns.net:8880/listGames\"))); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3119/buggy-version/app.src.main.java.cwa115.trongame.LobbyActivity.java", "BodyUseAPI": ["cwa115.trongame.LobbyActivity.getDataFromServer(java.lang.String)", "cwa115.trongame.LobbyActivity.createLobby(org.json.JSONArray)"], "Fixed commit": "b9c2d2f90864febe08fc9e8893b4aeffefcaa8ef", "Url": "https://api.github.com/repos/TronGame/CWA115", "Date": "2015-11-12T16:31:17Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { device.getRuntime().onStartup(getDeviceConfiguration(device.getContext())); eventManager.postEvent(device.getContext().getPluginContext().getHubContext(), new com.whizzosoftware.hobson.api.event.DeviceStartedEvent(java.lang.System.currentTimeMillis(), device.getContext())); } catch (java.lang.Throwable t) { logger.error(\"An uncaught exception occurred\", t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5675/buggy-version/src.main.java.com.whizzosoftware.hobson.bootstrap.api.device.store.OSGIDeviceStore.java", "BodyUseAPI": ["device.getRuntime().onStartup(com.whizzosoftware.hobson.api.property.PropertyContainer)", "com.whizzosoftware.hobson.api.device.HobsonDevice.getContext()", "java.lang.System.currentTimeMillis()", "com.whizzosoftware.hobson.bootstrap.api.device.store.OSGIDeviceStore.1.getDeviceConfiguration(device.getContext())", "device.getContext().getPluginContext().getHubContext()", "device.getContext().getPluginContext()", "com.whizzosoftware.hobson.api.event.EventManager.postEvent(device.getContext().getPluginContext().getHubContext(),com.whizzosoftware.hobson.api.event.DeviceStartedEvent)", "com.whizzosoftware.hobson.api.device.HobsonDevice.getContext()", "com.whizzosoftware.hobson.api.device.HobsonDevice.getContext()", "com.whizzosoftware.hobson.api.device.HobsonDevice.getRuntime()"], "Fixed commit": "18a57aa4495205dc6783bf8724ffbc632fc13974", "Url": "https://api.github.com/repos/whizzosoftware/hobson-hub-core", "Date": "2016-02-23T22:32:16Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.rbi.speak.storage.Logger.log(error.getMessage().toString()); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7879/buggy-version/app.src.main.java.com.rbi.speak.NetworkSpeechActivity.java", "BodyUseAPI": ["error.getMessage().toString()", "com.android.volley.VolleyError.getMessage()", "com.rbi.speak.storage.Logger.log(error.getMessage().toString())"], "Fixed commit": "f35bc61edc289a1c3f8482a1572cd4f024e38af8", "Url": "https://api.github.com/repos/rbi13/piVoiceControl-Android", "Date": "2014-11-18T02:14:28Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { loadProject(\"Testprojekt\"); } catch (java.rmi.RemoteException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8636/buggy-version/src.server.core.Core.java", "BodyUseAPI": ["server.core.Core.loadProject(java.lang.String)"], "Fixed commit": "59448e89c2a28d94630aea55c8167349cf2c8526", "Url": "https://api.github.com/repos/mammo0/PROJECT", "Date": "2015-01-20T15:21:27Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { types[i] = contextClassLoader.loadClass(className); } catch (java.lang.ClassNotFoundException e) { types[i] = java.lang.Class.forName(className); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2606/buggy-version/portal-service.src.com.liferay.portal.kernel.util.MethodParameter.java", "BodyUseAPI": ["java.lang.ClassLoader.loadClass(java.lang.String)"], "Fixed commit": "aee13d4bb3d890ed80c6c8e49721f300e2dfb0cb", "Url": "https://api.github.com/repos/brianchandotcom/liferay-portal", "Date": "2013-10-14T22:42:32Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { long orig = java.lang.System.currentTimeMillis(); while ((orig + millseconds) > (java.lang.System.currentTimeMillis())) { } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1249/buggy-version/src.com.jpii.navalbattle.gui.LoggingInWindow.java", "BodyUseAPI": ["java.lang.System.currentTimeMillis()", "java.lang.System.currentTimeMillis()"], "Fixed commit": "2cde74feec8d46caa2fa0e0c9c71ab5ac9cf613a", "Url": "https://api.github.com/repos/JPII/NavalBattle", "Date": "2012-11-15T23:35:16Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { lastId = getLastActiveId(); } catch (android.database.CursorIndexOutOfBoundsException ex) { return new java.util.Date(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8425/buggy-version/src.iCrave.icrave.src.main.java.com.aqib.icrave.model.UserActionsDataSource.java", "BodyUseAPI": ["com.aqib.icrave.model.UserActionsDataSource.getLastActiveId()"], "Fixed commit": "78843d9d5d349208847d493a5ac2595d7ac82664", "Url": "https://api.github.com/repos/aqibmushtaq/icrave-app", "Date": "2014-03-25T10:39:02Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { filepath = new java.io.File(parent, basename).getCanonicalPath(); } catch (java.io.IOException exp) { org.opensolaris.opengrok.OpenGrokLogger.getLogger().log(java.util.logging.Level.SEVERE, \"Failed to get canonical path: {0}\", exp.getClass().toString()); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1740/buggy-version/src.org.opensolaris.opengrok.history.SubversionRepository.java", "BodyUseAPI": ["java.io.File.getCanonicalPath()"], "Fixed commit": "3533a68c3dda94495b6bbcd6dce28c6559671011", "Url": "https://api.github.com/repos/OpenGrok/OpenGrok", "Date": "2013-03-15T20:20:48Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mLEScanner.startScan(filters, settings, mScanCallback); } catch (java.lang.IllegalStateException e) { com.eveningoutpost.dexdrip.Models.UserError.Log.e(com.eveningoutpost.dexdrip.Services.G5CollectionService.TAG, (\"Scan error: \" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1063/buggy-version/app.src.main.java.com.eveningoutpost.dexdrip.Services.G5CollectionService.java", "BodyUseAPI": ["android.bluetooth.le.BluetoothLeScanner.startScan(java.util.List<android.bluetooth.le.ScanFilter>,android.bluetooth.le.ScanSettings,android.bluetooth.le.ScanCallback)"], "Fixed commit": "97b096adadcc737db03a600612c56728c664c1d7", "Url": "https://api.github.com/repos/jamorham/xDrip-plus", "Date": "2016-05-13T23:09:11Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { gui_.registerForEvents(this); core_ = gui_.getCore(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2477/buggy-version/FLIMPlateReaderGUI.src.com.github.dougkelly88.FLIMPlateReaderGUI.GUIComponents.FLIMPanel.java", "BodyUseAPI": ["org.micromanager.MMStudio.getCore()", "org.micromanager.MMStudio.registerForEvents(com.github.dougkelly88.FLIMPlateReaderGUI.GUIComponents.FLIMPanel)"], "Fixed commit": "02465b8e3e4420116748bfb242b516795d08921c", "Url": "https://api.github.com/repos/Fredxxx/uManagerPlugins", "Date": "2014-10-28T12:42:28Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { biBindings = javax.imageio.ImageIO.read(kbStream); bindings = new javax.swing.ImageIcon(biBindings); } catch (java.io.IOException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6754/buggy-version/src.main.java.de.lvm.client.KFZLabelerFrame.java", "BodyUseAPI": ["javax.imageio.ImageIO.read(java.io.InputStream)"], "Fixed commit": "716a1fd2fa22084bb6aeebb6c8f350002123dbab", "Url": "https://api.github.com/repos/Marvin-Schoen/KFZ_Labeler", "Date": "2017-05-03T14:22:36Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { final java.util.Date parsedDate = parseDate(((java.lang.String) (event.getProperty().getValue()))); if (parsedDate != null) { dateTime.set(java.util.Calendar.HOUR_OF_DAY, parsedDate.getHours()); dateTime.set(java.util.Calendar.MINUTE, parsedDate.getMinutes()); isSet = true; setNewValue(); } this.valueChange(event); field.setComponentError(null); } catch (final com.vaadin.data.Validator.InvalidValueException e) { field.setComponentError(new com.vaadin.server.ErrorMessage() { private static final long serialVersionUID = 1L; @java.lang.Override public java.lang.String getFormattedHtmlMessage() { return e.getMessage(); } @java.lang.Override public au.com.vaadinutils.layout.ErrorLevel getErrorLevel() { return ErrorLevel.ERROR; } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/712/buggy-version/src.main.java.au.com.vaadinutils.layout.TimePicker.java", "BodyUseAPI": ["au.com.vaadinutils.layout.TimePicker.2.setNewValue()", "java.util.Date.getMinutes()", "com.vaadin.ui.TextField.setComponentError(<nulltype>)", "java.util.Calendar.set(int,int)", "event.getProperty().getValue()", "java.util.Calendar.set(int,int)", "au.com.vaadinutils.layout.TimePicker.valueChange(com.vaadin.data.Property.ValueChangeEvent)", "java.util.Date.getHours()", "au.com.vaadinutils.layout.TimePicker.2.parseDate(((java.lang.String) (event.getProperty().getValue())))", "com.vaadin.data.Property.ValueChangeEvent.getProperty()"], "Fixed commit": "c08f480990be48bdef3cd27247c9c638d03de8dc", "Url": "https://api.github.com/repos/rlsutton1/VaadinUtils", "Date": "2017-03-01T00:00:11Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { entity = handleException(exception, webRequest); } catch (cz.jirutka.spring.web.servlet.exhandler.RestHandlerExceptionResolver.NoExceptionHandlerFoundException ex) { cz.jirutka.spring.web.servlet.exhandler.RestHandlerExceptionResolver.LOG.warn(\"No exception handler found to handle exception: {}\", exception.getClass().getName()); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7003/buggy-version/src.main.java.cz.jirutka.spring.web.servlet.exhandler.RestHandlerExceptionResolver.java", "BodyUseAPI": ["cz.jirutka.spring.web.servlet.exhandler.RestHandlerExceptionResolver.handleException(java.lang.Exception,org.springframework.web.context.request.ServletWebRequest)"], "Fixed commit": "ff7ef123bb436c0dbcdbc52b698b5fd5daa11ffc", "Url": "https://api.github.com/repos/jirutka/spring-rest-exception-handler", "Date": "2014-04-06T18:18:34Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { startActivity(intent); } catch (java.lang.Exception e) { onRestart(); es.dmoral.toasty.Toasty.success(this, (((\"Application successfully updated to \" + version) + \" \") + \"version.\")).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/457/buggy-version/app.src.main.java.semiworld.org.logger.activities.SettingsActivity.java", "BodyUseAPI": ["1.startActivity(android.content.Intent)"], "Fixed commit": "7f540cf676fb482d84e2220fbcb456e0cbc13dc7", "Url": "https://api.github.com/repos/ozcanyarimdunya/Logger", "Date": "2017-06-24T13:48:41Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { memStats = domain.memoryStats(1); org.inria.myriads.snoozenode.localcontroller.monitoring.api.impl.LibVirtVirtualMachineMonitor.log_.debug(java.lang.String.format(\"Size of memory stats: %d\", memStats.length)); } catch (org.libvirt.LibvirtException exception) { org.inria.myriads.snoozenode.localcontroller.monitoring.api.impl.LibVirtVirtualMachineMonitor.log_.debug((\"No dynamic memory usage information available! Falling back to fixed memory allocation! : \" + (domain.getInfo().memory))); return domain.getInfo().memory; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7513/buggy-version/src.main.java.org.inria.myriads.snoozenode.localcontroller.monitoring.api.impl.LibVirtVirtualMachineMonitor.java", "BodyUseAPI": ["org.libvirt.Domain.memoryStats(int)", "java.lang.String.format(java.lang.String,memStats.length)", "org.slf4j.Logger.debug(java.lang.String)"], "Fixed commit": "984f5732b83ab72f493064bd7a3b2205e8b43509", "Url": "https://api.github.com/repos/snoozesoftware/snoozenode", "Date": "2012-10-15T06:47:43Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { patientID = reg.addPatient(title, fName, sName, dOB, phone, addressID); } catch (java.sql.SQLException x) { x.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8756/buggy-version/SheffieldDentalCare.src.sheffieldDentalCare.RegisterDetailsPanel.java", "BodyUseAPI": ["sheffieldDentalCare.Registrar.addPatient(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)"], "Fixed commit": "5c3c51e4b6c1e9b2d90d545d3e31e945ab58cc58", "Url": "https://api.github.com/repos/com2002/sheffieldDentalCare", "Date": "2016-11-21T01:25:26Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { addressID = reg.addAddress(houseNum, street, district, city, pocode); } catch (java.sql.SQLException x) { java.lang.System.out.println(\"address invalid\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8756/buggy-version/SheffieldDentalCare.src.sheffieldDentalCare.RegisterDetailsPanel.java", "BodyUseAPI": ["sheffieldDentalCare.Registrar.addAddress(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "5c3c51e4b6c1e9b2d90d545d3e31e945ab58cc58", "Url": "https://api.github.com/repos/com2002/sheffieldDentalCare", "Date": "2016-11-21T01:25:26Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { doc = builder.parse(new java.io.ByteArrayInputStream(xml.getBytes())); } catch (org.xml.sax.SAXException e) { android.util.Log.i(\"XmlHelper\", \"Parse error.\", e); doc = null; } catch (java.lang.NullPointerException e) { android.util.Log.i(\"XmlHelper\", \"Parse error. String must not be null.\", e); doc = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7339/buggy-version/local_store.src.org.onepf.oms.XmlHelper.java", "BodyUseAPI": ["java.lang.String.getBytes()", "javax.xml.parsers.DocumentBuilder.parse(java.io.ByteArrayInputStream)"], "Fixed commit": "ebcb0f4e176b55fb784d85ba255a1962e4569f2e", "Url": "https://api.github.com/repos/GrimReio/OpenIAB", "Date": "2013-09-26T09:42:35Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName()); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5723/buggy-version/src.edu.ucsb.cs56.projects.games.simon_says.SimonMenu.java", "BodyUseAPI": ["javax.swing.UIManager.setLookAndFeel(java.lang.String)", "javax.swing.UIManager.getSystemLookAndFeelClassName()"], "Fixed commit": "cbf76fd6f893ad552b8b3e38b39e39a64c3e9ff2", "Url": "https://api.github.com/repos/PARanOiA1120/cs56-games-simon-says", "Date": "2014-02-27T22:49:28Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { jobService.delete(id); org.opencron.common.utils.WebUtils.writeHtml(response, \"success\"); } catch (org.quartz.SchedulerException e) { org.opencron.common.utils.WebUtils.writeHtml(response, \"failure\"); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7647/buggy-version/opencron-server.src.main.java.org.opencron.server.controller.JobController.java", "BodyUseAPI": ["org.opencron.server.controller.JobService.delete(java.lang.Long)", "org.opencron.common.utils.WebUtils.writeHtml(javax.servlet.http.HttpServletResponse,java.lang.String)"], "Fixed commit": "51d81aa361ca81f9088cd55733b65950a4386c84", "Url": "https://api.github.com/repos/royalosyin/opencron", "Date": "2017-04-23T01:10:18Z"},
{"Line": "=>601", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return java.lang.Integer.parseInt(((java.lang.String) (value))); } catch (java.lang.Exception e) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8973/buggy-version/base.org.spinsuite.util.DisplayType.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.Object)"], "Fixed commit": "7f0b6868cd9554f3b687e0cea00308150f1e91f2", "Url": "https://api.github.com/repos/adempiere/spin-suite", "Date": "2014-11-04T17:02:00Z"},
{"Line": "=>748", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { setFirstScreenText(controller.getSqrt(getCurrentScreenValue())); } catch (java.lang.IllegalArgumentException e) { setFirstScreenText(com.implemica.zavizionov.calculator.CalculatorFormatter.INVALID_INPUT_MESSAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2325/buggy-version/src.com.implemica.zavizionov.calculator.CalculatorFormatter.java", "BodyUseAPI": ["com.implemica.zavizionov.calculator.CalculatorController.getSqrt(java.math.BigDecimal)", "com.implemica.zavizionov.calculator.CalculatorFormatter.getCurrentScreenValue()", "com.implemica.zavizionov.calculator.CalculatorFormatter.setFirstScreenText(controller.getSqrt(getCurrentScreenValue()))"], "Fixed commit": "b2b227d972fbfa2797ead1e6da09275f90f2877a", "Url": "https://api.github.com/repos/Bloodmoor/calc_app", "Date": "2015-07-31T09:59:30Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { user = userService.getUser(userId); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3087/buggy-version/src.main.java.com.makhlouf.controller.UserController.java", "BodyUseAPI": ["com.makhlouf.service.UserService.getUser(java.lang.Long)"], "Fixed commit": "be5e8c9380cf21f29c3a73fdd6e17bdf5eedabf8", "Url": "https://api.github.com/repos/Raouf25/RaoufWebApp", "Date": "2017-01-18T11:00:24Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { output = java.lang.Double.parseDouble(parse[((parse.length) - 1)]); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2532/buggy-version/src.com.d4l3k.Link.Gate.IO.Button.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "b88c3ddba0c66c28c0a45b3ce23eee2a69d0728a", "Url": "https://api.github.com/repos/d4l3k/Link", "Date": "2011-07-14T03:19:39Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { net.md_5.bungee.BungeeCord.getInstance().getConsoleReader().resetPromptLine((costumPormtLineMessage = dev.wolveringer.chat.ChatColor.AnsiColorFormater.getFormater().format((((((dev.wolveringer.chat.ChatColor.ChatColorUtils.COLOR_CHAR) + \"aLoading BungeeUtil >> \") + (dev.wolveringer.chat.ChatColor.ChatColorUtils.COLOR_CHAR)) + \"b\") + info))), \"\", 0); } catch (java.lang.Exception e) { try { net.md_5.bungee.BungeeCord.getInstance().getConsoleReader().resetPromptLine(\"\", \"\", 0); net.md_5.bungee.BungeeCord.getInstance().getConsoleReader().resetPromptLine((costumPormtLineMessage = dev.wolveringer.chat.ChatColor.AnsiColorFormater.getFormater().format((((((dev.wolveringer.chat.ChatColor.ChatColorUtils.COLOR_CHAR) + \"aLoading BungeeUtil >> \") + (dev.wolveringer.chat.ChatColor.ChatColorUtils.COLOR_CHAR)) + \"b\") + info))), \"\", 0); } catch (java.lang.Exception e2) { dev.wolveringer.BungeeUtil.BungeeUtil.debug(e2); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8957/buggy-version/src.dev.wolveringer.BungeeUtil.BungeeUtil.java", "BodyUseAPI": ["dev.wolveringer.chat.ChatColor.AnsiColorFormater.getFormater().format((((((dev.wolveringer.chat.ChatColor.ChatColorUtils.COLOR_CHAR) + \"aLoading BungeeUtil >> \") + (dev.wolveringer.chat.ChatColor.ChatColorUtils.COLOR_CHAR)) + \"b\") + info))", "dev.wolveringer.chat.ChatColor.AnsiColorFormater.getFormater()", "net.md_5.bungee.BungeeCord.getInstance().getConsoleReader().resetPromptLine(java.lang.String,java.lang.String,int)", "net.md_5.bungee.BungeeCord.getInstance().getConsoleReader()", "net.md_5.bungee.BungeeCord.getInstance()"], "Fixed commit": "4537ddb08f9cd7c4f4142634e3e92ab19fedecbe", "Url": "https://api.github.com/repos/WolverinDEV/BungeeUtil", "Date": "2016-08-22T10:24:02Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { setRuntime(json.getInt(RTConstants.RUNTIME)); } catch (java.lang.Exception ex) { mk.tomatoes.utils.Log.print(ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6215/buggy-version/src.mk.tomatoes.entity.RTMovie.java", "BodyUseAPI": ["net.sf.json.JSONObject.getInt(RTConstants.RUNTIME)", "mk.tomatoes.entity.RTMovie.setRuntime(json.getInt(RTConstants.RUNTIME))"], "Fixed commit": "f18005b056ed64f3fdcf263014451f0c97fcb631", "Url": "https://api.github.com/repos/makgyver/MKtomatoes", "Date": "2013-01-15T13:41:04Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { body = java.net.URLDecoder.decode(body, charset); } catch (java.io.UnsupportedEncodingException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6699/buggy-version/geowebcache.rest.src.main.java.org.geowebcache.rest.controller.SeedController.java", "BodyUseAPI": ["java.net.URLDecoder.decode(java.lang.String,java.lang.String)"], "Fixed commit": "5e4a78173b4b22f84637010332496a670d1b33b5", "Url": "https://api.github.com/repos/mlog-engineer/geowebcache", "Date": "2017-12-19T02:04:32Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { error = org.openl.syntax.exception.SyntaxNodeExceptionUtils.createError(\"Cannot parse spreadsheet header definition\", t, parseHeaderElement(value).getName()); } catch (org.openl.syntax.exception.SyntaxNodeException e) { error = org.openl.syntax.exception.SyntaxNodeExceptionUtils.createError(\"Cannot parse spreadsheet header definition\", t, null, value.asSourceCodeModule()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5154/buggy-version/DEV.org.openl.rules.src.org.openl.rules.calc.SpreadsheetComponentsBuilder.java", "BodyUseAPI": ["org.openl.syntax.exception.SyntaxNodeExceptionUtils.createError(java.lang.String,java.lang.Throwable,parseHeaderElement(value).getName())", "org.openl.rules.calc.SpreadsheetComponentsBuilder.parseHeaderElement(org.openl.meta.StringValue)", "org.openl.rules.calc.SymbolicTypeDefinition.getName()"], "Fixed commit": "ed29dbd1eddd8d7f5aa566e5c272023ddb25d146", "Url": "https://api.github.com/repos/openl-tablets/openl-tablets", "Date": "2014-08-27T17:09:42Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { noteIds = communicator.getNoteIds(); } catch (pia.NotesCommunicatorException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6568/buggy-version/src.pia.NotesManager.java", "BodyUseAPI": ["pia.NotesCommunicator.getNoteIds()"], "Fixed commit": "6554dd83ae044836cfb8f6bb0d01c1c199aafd7f", "Url": "https://api.github.com/repos/kaisky89/pia", "Date": "2013-06-20T20:37:13Z"},
{"Line": "=>499", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { configuration.setWindowGeometry(windowGeometry.substring(((windowGeometry.indexOf(\"[\")) + 1), windowGeometry.indexOf(\"]\"))); configuration.setScreenSize(((((int) (screenSize.getWidth())) + \"x\") + ((int) (screenSize.getHeight())))); } catch (java.lang.Exception e) { net.pms.newgui.LooksFrame.LOGGER.warn(\"Failed to save window geometry and size: {}\", e.getMessage()); net.pms.newgui.LooksFrame.LOGGER.debug(\"\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7328/buggy-version/src.main.java.net.pms.newgui.LooksFrame.java", "BodyUseAPI": ["java.awt.Dimension.getHeight()", "java.lang.String.indexOf(java.lang.String)", "net.pms.configuration.PmsConfiguration.setWindowGeometry(java.lang.String)", "java.awt.Dimension.getWidth()", "java.lang.String.substring(int,int)", "net.pms.configuration.PmsConfiguration.setScreenSize(java.lang.String)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "db354237e106cd4ed892769d9a86171a69446fc1", "Url": "https://api.github.com/repos/UniversalMediaServer/UniversalMediaServer", "Date": "2015-10-14T19:33:56Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { writer.close(); } catch (java.io.IOException e) { int queryId = config.getQuery().getId(); logger.warn(((\"araqne logdb: cannot close query [\" + queryId) + \"] result writer\"), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7521/buggy-version/araqne-logdb.src.main.java.org.araqne.logdb.query.engine.QueryResultImpl.java", "BodyUseAPI": ["org.araqne.logstorage.file.LogFileWriter.close()"], "Fixed commit": "cfd152b5e5fa0a1f09d34cb2d9af73193dba2802", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2015-08-12T08:44:29Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { startIndexingDocsId = java.lang.Long.valueOf(startIdRutimeProperty.getPropertyValue()); } catch (java.lang.NumberFormatException e) { startIndexingDocsId = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7157/buggy-version/src.main.java.com.getqiu.history.scheduledtask.EnsureIndexForLucene.java", "BodyUseAPI": ["com.getqiu.history.dao.po.RuntimeProperty.getPropertyValue()", "java.lang.Long.valueOf(startIdRutimeProperty.getPropertyValue())"], "Fixed commit": "ed4c27f07ef9857a75dd3205a4145726f0025afe", "Url": "https://api.github.com/repos/qiulimao/history", "Date": "2017-06-05T13:59:55Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { freshSession = session.getRepository().loginAdministrative(session.getUserId()); freshSession.getAuthorizableManager().delete(authorizable.getId()); } finally { if (freshSession != null) { try { freshSession.logout(); } catch (org.sakaiproject.nakamura.api.lite.ClientPoolException e) { org.sakaiproject.nakamura.user.lite.servlet.LiteDeleteSakaiAuthorizableServlet.LOGGER.error(e.getMessage()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3046/buggy-version/bundles.user.src.main.java.org.sakaiproject.nakamura.user.lite.servlet.LiteDeleteSakaiAuthorizableServlet.java", "BodyUseAPI": ["org.sakaiproject.nakamura.api.lite.Session.getUserId()", "freshSession.getAuthorizableManager().delete(authorizable.getId())", "org.sakaiproject.nakamura.api.lite.authorizable.Authorizable.getId()", "org.sakaiproject.nakamura.api.lite.Session.getRepository()", "session.getRepository().loginAdministrative(session.getUserId())", "org.sakaiproject.nakamura.api.lite.Session.getAuthorizableManager()"], "Fixed commit": "a642bbd7889b8394d800363b5dce935a5cf22ec2", "Url": "https://api.github.com/repos/ets-berkeley-edu/nakamura", "Date": "2011-12-02T18:31:55Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { setMovieView(); } catch (java.lang.NullPointerException npe) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/224/buggy-version/app.src.main.java.com.popularmovies.fragments.MovieDetailsFragment.java", "BodyUseAPI": ["com.popularmovies.fragments.MovieDetailsFragment.setMovieView()"], "Fixed commit": "3ab1ae08299e4b92d6f09d18620e319130abcc65", "Url": "https://api.github.com/repos/Kilyc2/PopularMovies", "Date": "2015-09-15T22:44:16Z"},
{"Line": "=>438", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { org.apache.axis2.engine.AxisEngine.send(mainOutMsgContext); } finally { mainOutMsgContext.getAxisService().getSchema().removeAll(tenantOutMsgContext.getAxisService().getSchema()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/85/buggy-version/core.org.wso2.carbon.core.src.main.java.org.wso2.carbon.core.multitenancy.MultitenantMessageReceiver.java", "BodyUseAPI": ["org.apache.axis2.engine.AxisEngine.send(org.apache.axis2.context.MessageContext)"], "Fixed commit": "66e6ddee32c4e7bd332df5ed5f44ba458a7cb86b", "Url": "https://api.github.com/repos/madhawa-gunasekara/carbon4-kernel", "Date": "2015-07-30T11:21:12Z"},
{"Line": "=>2947", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { code = executor.execute(org.apache.commons.exec.CommandLine.parse(startCmd)); } catch (org.apache.commons.exec.ExecuteException e) { throw new java.lang.Exception((((\"Failed to start Solr using command: \" + startCmd) + \" Exception : \") + e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2099/buggy-version/solr.core.src.java.org.apache.solr.util.SolrCLI.java", "BodyUseAPI": ["org.apache.commons.exec.Executor.execute(org.apache.commons.exec.CommandLine.parse(startCmd))", "org.apache.commons.exec.CommandLine.parse(java.lang.String)"], "Fixed commit": "8bfe8c7b2400a6ae7d3c01d9cdb69558c1aceed5", "Url": "https://api.github.com/repos/apache/lucene-solr", "Date": "2017-04-03T20:45:54Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { new ar.edu.itba.pod.mmxivii.sube.client.items.CardMenu(cardClient, card).runItem(); } catch (ar.edu.itba.pod.mmxivii.sube.client.exceptions.CardNotFoundException cnfe) { ar.edu.itba.util.IO.printlnError(cnfe.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/581/buggy-version/client.src.main.java.ar.edu.itba.pod.mmxivii.sube.client.items.CreateNewCard.java", "BodyUseAPI": ["ar.edu.itba.pod.mmxivii.sube.client.items.CardMenu.runItem()"], "Fixed commit": "58ca1897843dc6ab2ec5b2e48b9f3f4e506dde6f", "Url": "https://api.github.com/repos/julienCXX/TP-Sube", "Date": "2014-10-26T19:08:40Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { card = cardClient.newCard(owner, label); } catch (java.lang.IllegalArgumentException iae) { ar.edu.itba.util.IO.printlnError(iae.getMessage()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/581/buggy-version/client.src.main.java.ar.edu.itba.pod.mmxivii.sube.client.items.CreateNewCard.java", "BodyUseAPI": ["ar.edu.itba.pod.mmxivii.sube.client.items.CreateNewCard.newCard(java.lang.String,java.lang.String)"], "Fixed commit": "58ca1897843dc6ab2ec5b2e48b9f3f4e506dde6f", "Url": "https://api.github.com/repos/julienCXX/TP-Sube", "Date": "2014-10-26T19:08:40Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.hyphenate.chat.EMClient.getInstance().chatManager().deleteConversation(tobeDeleteCons.getUserName(), deleteMessage); com.hyphenate.chatuidemo.db.InviteMessgeDao inviteMessgeDao = new com.hyphenate.chatuidemo.db.InviteMessgeDao(getActivity()); inviteMessgeDao.deleteMessage(tobeDeleteCons.getUserName()); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/939/buggy-version/src.com.hyphenate.chatuidemo.ui.ConversationListFragment.java", "BodyUseAPI": ["com.hyphenate.chat.EMClient.getInstance().chatManager()", "com.hyphenate.chat.EMConversation.getUserName()", "com.hyphenate.chat.EMConversation.getUserName()", "com.hyphenate.chatuidemo.db.InviteMessgeDao.deleteMessage(tobeDeleteCons.getUserName())", "com.hyphenate.chat.EMClient.getInstance().chatManager().deleteConversation(tobeDeleteCons.getUserName(),boolean)", "com.hyphenate.chat.EMClient.getInstance()", "com.hyphenate.chatuidemo.ui.ConversationListFragment.getActivity()"], "Fixed commit": "583879fe6c3e74b2081c91510636c31114693bfc", "Url": "https://api.github.com/repos/easemob/sdkdemoapp3.0_android", "Date": "2016-02-24T03:01:54Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { data = java.lang.Double.parseDouble(value); } catch (java.lang.NumberFormatException nfe) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2797/buggy-version/biojava-structure-gui.src.main.java.org.biojava.nbio.structure.align.gui.ParameterGUI.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "169a336968763fcfa76321a9865f461e5b3c45e6", "Url": "https://api.github.com/repos/cristinamartins/biojava", "Date": "2016-12-04T12:42:52Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { data = java.lang.Float.parseFloat(value); } catch (java.lang.NumberFormatException nfe) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2797/buggy-version/biojava-structure-gui.src.main.java.org.biojava.nbio.structure.align.gui.ParameterGUI.java", "BodyUseAPI": ["java.lang.Float.parseFloat(java.lang.String)"], "Fixed commit": "169a336968763fcfa76321a9865f461e5b3c45e6", "Url": "https://api.github.com/repos/cristinamartins/biojava", "Date": "2016-12-04T12:42:52Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { data = java.lang.Integer.parseInt(value); } catch (java.lang.NumberFormatException nfe) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2797/buggy-version/biojava-structure-gui.src.main.java.org.biojava.nbio.structure.align.gui.ParameterGUI.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "169a336968763fcfa76321a9865f461e5b3c45e6", "Url": "https://api.github.com/repos/cristinamartins/biojava", "Date": "2016-12-04T12:42:52Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { data = java.lang.Boolean.parseBoolean(value); } catch (java.lang.NumberFormatException nfe) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2797/buggy-version/biojava-structure-gui.src.main.java.org.biojava.nbio.structure.align.gui.ParameterGUI.java", "BodyUseAPI": ["java.lang.Boolean.parseBoolean(java.lang.String)"], "Fixed commit": "169a336968763fcfa76321a9865f461e5b3c45e6", "Url": "https://api.github.com/repos/cristinamartins/biojava", "Date": "2016-12-04T12:42:52Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { data = java.lang.Short.parseShort(value); } catch (java.lang.NumberFormatException nfe) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2797/buggy-version/biojava-structure-gui.src.main.java.org.biojava.nbio.structure.align.gui.ParameterGUI.java", "BodyUseAPI": ["java.lang.Short.parseShort(java.lang.String)"], "Fixed commit": "169a336968763fcfa76321a9865f461e5b3c45e6", "Url": "https://api.github.com/repos/cristinamartins/biojava", "Date": "2016-12-04T12:42:52Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (auntEdith.getText().toString().equals(\"Timmy\")) { java.lang.System.out.println(\"Timmy fixed a bug!\"); } } catch (java.lang.Exception e) { android.widget.Toast.makeText(this, \"Error acurred!\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4723/buggy-version/BrokenProject.app.src.main.java.mmbuw.com.brokenproject.BrokenActivity.java", "BodyUseAPI": ["auntEdith.getText().toString().equals(java.lang.String)", "android.widget.EditText.getText()", "java.io.PrintStream.println(java.lang.String)", "auntEdith.getText().toString()"], "Fixed commit": "237eb4e6f80f41f38a1d568e005f82cfd4839e62", "Url": "https://api.github.com/repos/tliedtke/mis-2015-exercise-1", "Date": "2015-04-26T13:37:06Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (int i = 0; i < (strArray.length); i++) { strArray[i] = files.get(i).getName().substring(0, files.get(i).getName().lastIndexOf(\".\")); } } catch (java.lang.IndexOutOfBoundsException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5408/buggy-version/FBG2.0.src.controller.menu.save.SaveLoadMenu.java", "BodyUseAPI": ["java.io.File.getName()", "java.io.File.getName()", "java.util.List<java.io.File>.get(int)", "java.lang.String.substring(int,int)", "java.lang.String.lastIndexOf(java.lang.String)", "java.util.List<java.io.File>.get(int)"], "Fixed commit": "9292110f64c1f9a795190b98bf589ff2ee79a973", "Url": "https://api.github.com/repos/TeamFinalBoss/GameIteration2", "Date": "2015-03-23T14:27:35Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { builder.setMessage(((((\"U bevind zich in \" + (beaconInfo.get(1))) + \" bij informatiepunt \") + (beaconInfo.get(0))) + \". wil u de informatie van dit punt zien?\")).setPositiveButton(\"Ja\", dialogClickListener).setNegativeButton(\"Nee\", dialogClickListener).setCancelable(false).show(); android.os.Vibrator v = ((android.os.Vibrator) (getSystemService(Context.VIBRATOR_SERVICE))); v.vibrate(500); } catch (java.lang.Exception e) { searching = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/113/buggy-version/RondleidingAppTeamKobalt.app.src.main.java.com.example.a11302481.rondleidingappteamkobalt.Controllers.SearchingActivity.java", "BodyUseAPI": ["builder.setMessage(((((\"U bevind zich in \" + (beaconInfo.get(1))) + \" bij informatiepunt \") + (beaconInfo.get(0))) + \". wil u de informatie van dit punt zien?\")).setPositiveButton(\"Ja\", dialogClickListener).setNegativeButton(\"Nee\", dialogClickListener).setCancelable(false).show()", "builder.setMessage(((((\"U bevind zich in \" + (beaconInfo.get(1))) + \" bij informatiepunt \") + (beaconInfo.get(0))) + \". wil u de informatie van dit punt zien?\")).setPositiveButton(java.lang.String,DialogInterface.OnClickListener)", "builder.setMessage(((((\"U bevind zich in \" + (beaconInfo.get(1))) + \" bij informatiepunt \") + (beaconInfo.get(0))) + \". wil u de informatie van dit punt zien?\")).setPositiveButton(\"Ja\", dialogClickListener).setNegativeButton(java.lang.String,DialogInterface.OnClickListener)", "java.util.List.get(int)", "java.util.List.get(int)", "AlertDialog.Builder.setMessage(java.lang.String)", "builder.setMessage(((((\"U bevind zich in \" + (beaconInfo.get(1))) + \" bij informatiepunt \") + (beaconInfo.get(0))) + \". wil u de informatie van dit punt zien?\")).setPositiveButton(\"Ja\", dialogClickListener).setNegativeButton(\"Nee\", dialogClickListener).setCancelable(boolean)", "android.os.Vibrator.vibrate(int)", "com.example.a11302481.rondleidingappteamkobalt.Controllers.SearchingActivity.getSystemService(Context.VIBRATOR_SERVICE)"], "Fixed commit": "7a38d08ed15955748a73312fd1ed8aacbce7eacd", "Url": "https://api.github.com/repos/SteffenVandegaer/AppTeamKobalt", "Date": "2017-12-19T10:42:54Z"},
{"Line": "=>1242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { storage.createContainer(org.roda.storage.DefaultStoragePath.parse(RodaConstants.STORAGE_CONTAINER_ACTIONLOG), new java.util.HashMap()); } catch (org.roda.storage.StorageActionException sae) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5611/buggy-version/roda-common.roda-common-storage.src.main.java.org.roda.model.ModelService.java", "BodyUseAPI": ["org.roda.storage.StorageService.createContainer(org.roda.storage.DefaultStoragePath.parse(RodaConstants.STORAGE_CONTAINER_ACTIONLOG),java.util.HashMap)", "org.roda.storage.DefaultStoragePath.parse(RodaConstants.STORAGE_CONTAINER_ACTIONLOG)"], "Fixed commit": "f504ef1c7c829444c71b95a8996e8fed4e9960ec", "Url": "https://api.github.com/repos/keeps/roda", "Date": "2015-07-27T16:44:59Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { content = unmarshaller.unmarshal(is); } catch (javax.xml.bind.JAXBException ex) { logger.error(\"######################JAXBException : \", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3429/buggy-version/geoplatform-tools.geoplatform-connectors.geoplatform-ogc-connectors.geoplatform-connector-api.src.main.java.org.geosdi.geoplatform.connector.server.request.GPPostConnectorRequest.java", "BodyUseAPI": ["javax.xml.bind.Unmarshaller.unmarshal(java.io.InputStream)"], "Fixed commit": "f9e8bf24e622b136b778941f0ec8b0ca6d8dc967", "Url": "https://api.github.com/repos/glascaleia/geo-platform", "Date": "2015-11-12T09:07:55Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((story.getString(\"starred\")) == \"true\") { item.starred = true; item.addCategory(\"Starred items\"); } } catch (org.json.JSONException e) { item.starred = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4834/buggy-version/newsplus.extensions.NewsblurExtension.src.com.noinnion.android.newsplus.extension.newsblurplus.NewsBlurPlus.java", "BodyUseAPI": ["com.noinnion.android.reader.api.provider.IItem.addCategory(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "9d1836321610025fced0d4cedd420bdd2810e19a", "Url": "https://api.github.com/repos/asafge/newsblurplus", "Date": "2013-07-05T15:31:34Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.awt.Point p = arg.getLocation(); javax.swing.tree.TreePath path = tree.getPathForLocation(p.x, p.y); husacct.define.task.components.AnalyzedModuleComponent check = ((husacct.define.task.components.AnalyzedModuleComponent) (path.getLastPathComponent())); java.lang.String type = check.getType().toLowerCase(); if (((type.equals(\"root\")) || (type.equals(\"application\"))) || (type.equals(\"externalpackage\"))) { arg.rejectDrag(); } } catch (java.lang.Exception e) { arg.rejectDrag(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3054/buggy-version/src.husacct.define.presentation.draganddrop.customdroptargetlisterner.SoftwareUnitDropListerner.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.awt.dnd.DropTargetDragEvent.rejectDrag()", "husacct.define.task.components.AnalyzedModuleComponent.getType()", "java.lang.String.equals(java.lang.String)", "java.awt.dnd.DropTargetDragEvent.getLocation()", "javax.swing.tree.TreePath.getLastPathComponent()", "check.getType().toLowerCase()", "java.lang.String.equals(java.lang.String)", "husacct.define.presentation.moduletree.AnalyzedModuleTree.getPathForLocation(int,int)"], "Fixed commit": "9b98ffd5d0d84c8f90780ccef0ca9f6f8beea8fb", "Url": "https://api.github.com/repos/HUSACCT/HUSACCT", "Date": "2013-06-19T04:36:17Z"},
{"Line": "=>559", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { result = java.lang.Integer.parseInt(val); } catch (java.lang.Exception e) { result = ((int) (java.lang.Double.parseDouble(val))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6359/buggy-version/de.bund.bfr.knime.openkrise.db.src.de.bund.bfr.knime.openkrise.db.imports.custom.bfrnewformat.BackTraceImporter.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "5f28ce848750e1aa6b280707a9cbf1cf1d53476c", "Url": "https://api.github.com/repos/SiLeBAT/BfROpenLab", "Date": "2015-05-11T09:47:37Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.reflect.Field children = net.sourceforge.olduvai.treejuxtaposer.drawer.TreeNode.class.getDeclaredField(\"children\"); children.setAccessible(true); return ((java.util.ArrayList) (children.get(node))).indexOf(((nl.tudelft.pl2016gr2.gui.model.PhylogeneticTreeNode) (child)).node); } catch (java.lang.NoSuchFieldException | java.lang.SecurityException | java.lang.IllegalArgumentException | java.lang.IllegalAccessException ex) { java.util.logging.Logger.getLogger(nl.tudelft.pl2016gr2.gui.model.PhylogeneticTreeNode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6464/buggy-version/PL2.PL2-gui.src.main.java.nl.tudelft.pl2016gr2.gui.model.PhylogeneticTreeNode.java", "BodyUseAPI": ["java.lang.reflect.Field.get(net.sourceforge.olduvai.treejuxtaposer.drawer.TreeNode)", "java.lang.Class.getDeclaredField(java.lang.String)", "java.lang.Object.indexOf(net.sourceforge.olduvai.treejuxtaposer.drawer.TreeNode)", "java.lang.reflect.Field.setAccessible(boolean)"], "Fixed commit": "9c3897003a7e0f80871d254d8d7c331a57a53ba2", "Url": "https://api.github.com/repos/ProgrammingLife2016/PL2-2016", "Date": "2016-04-28T17:52:02Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return sessionCacheService.getSessionById(sessionId); } catch (cn.edu.seu.herald.session.exception.InvalidSessionIdException ex) { return createNewSession(response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3303/buggy-version/herald-session.herald-session-jee-api.src.main.java.cn.edu.seu.herald.session.jee.SessionServiceClient.java", "BodyUseAPI": ["cn.edu.seu.herald.session.SessionService.getSessionById(java.lang.String)"], "Fixed commit": "26c708c877b62340a1f61b9b825dbc5fcaea1f39", "Url": "https://api.github.com/repos/HeraldStudio/herald-base-platform", "Date": "2012-11-05T06:46:52Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { controller.guess(cmdLine.getArg(0)); } catch (java.lang.IndexOutOfBoundsException e) { outMsg.println((\"Invalid use of guess!\\n\" + \"The correct way is: \\\"guess <char|string>\\\"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4712/buggy-version/homework1.hangman.src.main.java.id1212.wachsler.joel.hangman.client.view.NonBlockingInterpreter.java", "BodyUseAPI": ["id1212.wachsler.joel.hangman.client.view.CmdLine.getArg(int)", "id1212.wachsler.joel.hangman.client.controller.Controller.guess(cmdLine.getArg(0))"], "Fixed commit": "7d82166343221cf0915c5ddcc02ad6bd04ce49f2", "Url": "https://api.github.com/repos/JoelWachsler/ID1212-Network-Programming", "Date": "2017-11-13T08:47:44Z"},
{"Line": "=>425", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String ret = getAwItems1.execute().get(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } catch (java.util.concurrent.ExecutionException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/9057/buggy-version/ir.src.main.java.com.sssemil.sonyirremote.ir.ir.java", "BodyUseAPI": ["com.sssemil.sonyirremote.ir.ir.GetAwItems.execute()", "getAwItems1.execute().get()"], "Fixed commit": "182a5c593a76471b16bd23af88a2b9644700208a", "Url": "https://api.github.com/repos/sssemil/SonyIRRemote", "Date": "2014-03-27T15:33:34Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.List<org.openqa.selenium.WebElement> elements = context.getElementFinder().findElements(context.getWrappedDriver(), cssLocator); return elements.size(); } catch (com.thoughtworks.selenium.SeleniumException e) { if ((e.getCause()) instanceof org.openqa.selenium.NoSuchElementException) return 0; throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3549/buggy-version/src.main.java.jp.vmi.selenium.selenese.subcommand.GetCssCount.java", "BodyUseAPI": ["java.util.List<org.openqa.selenium.WebElement>.size()", "jp.vmi.selenium.selenese.Context.getWrappedDriver()", "context.getElementFinder().findElements(context.getWrappedDriver(),java.lang.String)", "jp.vmi.selenium.selenese.Context.getElementFinder()"], "Fixed commit": "8127947ee5c953b64604673e1737a15e13d2f774", "Url": "https://api.github.com/repos/koichirok/selenese-runner-java", "Date": "2014-04-26T00:19:56Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.parse.Parse.enableLocalDatastore(this); com.parse.ParseCrashReporting.enable(this); app.initializedParse = true; } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/172/buggy-version/app.src.main.java.de.weightlifting.app.SplashActivity.java", "BodyUseAPI": ["com.parse.ParseCrashReporting.enable(de.weightlifting.app.SplashActivity)", "com.parse.Parse.enableLocalDatastore(de.weightlifting.app.SplashActivity)"], "Fixed commit": "f3a626555323ea37b63eecac06c71ca19240abba", "Url": "https://api.github.com/repos/WGierke/weightlifting_germany", "Date": "2016-01-01T14:14:47Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.parse.Parse.initialize(this, Keys.CONFIG_APP_ID, Keys.CONFIG_CLIENT_KEY); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/172/buggy-version/app.src.main.java.de.weightlifting.app.WeightliftingApp.java", "BodyUseAPI": ["com.parse.Parse.initialize(de.weightlifting.app.WeightliftingApp,Keys.CONFIG_APP_ID,Keys.CONFIG_CLIENT_KEY)"], "Fixed commit": "f3a626555323ea37b63eecac06c71ca19240abba", "Url": "https://api.github.com/repos/WGierke/weightlifting_germany", "Date": "2016-01-01T14:14:47Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { helper = eu.unifiedviews.helpers.dataunit.virtualpathhelper.VirtualPathHelpers.create(writableFilesDataUnit); helper.setVirtualPath(symbolicName, virtualPath); } finally { if (helper != null) { helper.close(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1094/buggy-version/uv-dataunit-helpers.src.main.java.eu.unifiedviews.helpers.dataunit.virtualpathhelper.VirtualPathHelpers.java", "BodyUseAPI": ["eu.unifiedviews.helpers.dataunit.virtualpathhelper.VirtualPathHelper.setVirtualPath(java.lang.String,java.lang.String)", "eu.unifiedviews.helpers.dataunit.virtualpathhelper.VirtualPathHelpers.create(eu.unifiedviews.dataunit.WritableMetadataDataUnit)"], "Fixed commit": "f473425145b211b22cbb885976a0cdc9fb334b8d", "Url": "https://api.github.com/repos/UnifiedViews/Plugin-DevEnv", "Date": "2014-07-29T12:53:24Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { helper = eu.unifiedviews.helpers.dataunit.virtualpathhelper.VirtualPathHelpers.create(filesDataUnit); result = helper.getVirtualPath(symbolicName); } finally { if (helper != null) { helper.close(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1094/buggy-version/uv-dataunit-helpers.src.main.java.eu.unifiedviews.helpers.dataunit.virtualpathhelper.VirtualPathHelpers.java", "BodyUseAPI": ["eu.unifiedviews.helpers.dataunit.virtualpathhelper.VirtualPathHelper.getVirtualPath(java.lang.String)", "eu.unifiedviews.helpers.dataunit.virtualpathhelper.VirtualPathHelpers.create(eu.unifiedviews.dataunit.MetadataDataUnit)"], "Fixed commit": "f473425145b211b22cbb885976a0cdc9fb334b8d", "Url": "https://api.github.com/repos/UnifiedViews/Plugin-DevEnv", "Date": "2014-07-29T12:53:24Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.location.Location location = lm.getLastKnownLocation(LocationManager.GPS_PROVIDER); double longitude = location.getLongitude(); double latitude = location.getLatitude(); de.meetme.UserLocation loc = new de.meetme.UserLocation(latitude, longitude, com.google.firebase.auth.FirebaseAuth.getInstance().getCurrentUser().getUid()); databaseLocations.child(com.google.firebase.auth.FirebaseAuth.getInstance().getCurrentUser().getUid()).setValue(loc); } catch (java.lang.NullPointerException np) { android.widget.Toast.makeText(this, \"Deine Location ist nicht verf\u00fcgbar\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1412/buggy-version/meetme-app.src.main.java.de.meetme.eventinfos.java", "BodyUseAPI": ["android.location.LocationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER)", "com.google.firebase.auth.FirebaseAuth.getInstance().getCurrentUser()", "com.google.firebase.auth.FirebaseAuth.getInstance().getCurrentUser().getUid()", "com.google.firebase.auth.FirebaseAuth.getInstance().getCurrentUser()", "databaseLocations.child(com.google.firebase.auth.FirebaseAuth.getInstance().getCurrentUser().getUid()).setValue(de.meetme.UserLocation)", "com.firebase.client.Firebase.child(com.google.firebase.auth.FirebaseAuth.getInstance().getCurrentUser().getUid())", "android.location.Location.getLatitude()", "android.location.Location.getLongitude()", "com.google.firebase.auth.FirebaseAuth.getInstance()", "com.google.firebase.auth.FirebaseAuth.getInstance().getCurrentUser().getUid()", "com.google.firebase.auth.FirebaseAuth.getInstance()"], "Fixed commit": "05b78f18a7d7f69dbbb175911a186c9adbbc4745", "Url": "https://api.github.com/repos/svenjale/smap_meetme", "Date": "2017-10-11T08:11:24Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { getFriendById(friend.mId); } catch (ca.psiphon.ploggy.Data.DataNotFoundError e) { friendExists = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3553/buggy-version/AndroidApp.src.ca.psiphon.ploggy.Data.java", "BodyUseAPI": ["ca.psiphon.ploggy.Data.getFriendById(java.lang.String)"], "Fixed commit": "c70be8eb0240ec18c8f64df4383c64cf59117693", "Url": "https://api.github.com/repos/Psiphon-Labs/ploggy", "Date": "2013-11-05T04:11:52Z"},
{"Line": "=>394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { googleMap.animateCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngBounds(bounds, ((int) (android.util.TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 30, getResources().getDisplayMetrics()))))); } catch (java.lang.IllegalStateException e) { if (mapContainer.getViewTreeObserver().isAlive()) { mapContainer.getViewTreeObserver().addOnGlobalLayoutListener(new android.view.ViewTreeObserver.OnGlobalLayoutListener() { @java.lang.Override public void onGlobalLayout() { mapContainer.getViewTreeObserver().removeOnGlobalLayoutListener(this); googleMap.animateCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngBounds(bounds, ((int) (android.util.TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 30, getResources().getDisplayMetrics()))))); } }); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4689/buggy-version/app.src.main.java.org.septa.android.app.nextarrive.NextToArriveTripDetailActivity.java", "BodyUseAPI": ["com.google.android.gms.maps.CameraUpdateFactory.newLatLngBounds(com.google.android.gms.maps.model.LatLngBounds,((int) (android.util.TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 30, getResources().getDisplayMetrics()))))", "org.septa.android.app.nextarrive.NextToArriveTripDetailActivity.getResources()", "android.util.TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP,int,getResources().getDisplayMetrics())", "com.google.android.gms.maps.GoogleMap.animateCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngBounds(bounds, ((int) (android.util.TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 30, getResources().getDisplayMetrics())))))", "getResources().getDisplayMetrics()"], "Fixed commit": "210f606be728d31956c6654acc7b74dc2a67de9a", "Url": "https://api.github.com/repos/septadev/SEPTA-Android", "Date": "2017-10-12T13:44:17Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { out = g.getFromLocationName(address, 1); } catch (java.io.IOException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2652/buggy-version/src.we.should.list.GenericItem.java", "BodyUseAPI": ["android.location.Geocoder.getFromLocationName(java.lang.String,int)"], "Fixed commit": "b0c4ff8108fef9a28bdb937a7abd84b4e09b0874", "Url": "https://api.github.com/repos/ccemeraldeyes/AndroidLunch", "Date": "2012-05-09T05:24:03Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { final long tasks = tasksStarted.get(); serviceEmitter.emit(com.metamx.emitter.service.ServiceMetricEvent.builder().build(\"namespace/size\", dataSize.get())); serviceEmitter.emit(com.metamx.emitter.service.ServiceMetricEvent.builder().build(\"namespace/count\", fnCache.size())); serviceEmitter.emit(com.metamx.emitter.service.ServiceMetricEvent.builder().build(\"namespace/deltaTasksStarted\", (tasks - (priorTasksStarted)))); priorTasksStarted = tasks; } catch (java.lang.Exception e) { io.druid.server.namespace.cache.NamespaceExtractionCacheManager.log.error(e, \"Error emitting namespace stats\"); if (java.lang.Thread.currentThread().isInterrupted()) { throw com.google.common.base.Throwables.propagate(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4114/buggy-version/extensions.namespace-lookup.src.main.java.io.druid.server.namespace.cache.NamespaceExtractionCacheManager.java", "BodyUseAPI": ["com.metamx.emitter.service.ServiceMetricEvent.builder().build(java.lang.String,long)", "com.metamx.emitter.service.ServiceMetricEvent.builder()", "com.metamx.emitter.service.ServiceEmitter.emit(com.metamx.emitter.service.ServiceMetricEvent.builder().build(\"namespace/count\", fnCache.size()))", "com.metamx.emitter.service.ServiceMetricEvent.builder()", "com.metamx.emitter.service.ServiceEmitter.emit(com.metamx.emitter.service.ServiceMetricEvent.builder().build(\"namespace/deltaTasksStarted\", (tasks - (priorTasksStarted))))", "java.util.concurrent.atomic.AtomicLong.get()", "com.metamx.emitter.service.ServiceMetricEvent.builder().build(java.lang.String,fnCache.size())", "java.util.concurrent.ConcurrentMap<java.lang.String, com.google.common.base.Function<java.lang.String, java.lang.String>>.size()", "com.metamx.emitter.service.ServiceMetricEvent.builder()", "com.metamx.emitter.service.ServiceEmitter.emit(com.metamx.emitter.service.ServiceMetricEvent.builder().build(\"namespace/size\", dataSize.get()))", "com.metamx.emitter.service.ServiceMetricEvent.builder().build(java.lang.String,long)", "java.util.concurrent.atomic.AtomicLong.get()"], "Fixed commit": "0b7b5d0308c5d852e8474146d46508d1fbbd7566", "Url": "https://api.github.com/repos/metamx/druid", "Date": "2015-07-16T18:30:47Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { userNo = sqlSession.selectOne(\"com.tessoft.nearhere.taxi.selectUserNoByUUID\", hash); if (!(com.dy.common.Util.isEmptyString(userNo))) user.setUserNo(userNo); } catch (java.lang.Exception ex) { com.tessoft.nearhere.taxi.TaxiController.logger.error(\"error while getRandomIDV2\", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3029/buggy-version/randomMsgServer.src.main.java.com.tessoft.nearhere.taxi.TaxiController.java", "BodyUseAPI": ["org.apache.ibatis.session.SqlSession.selectOne(java.lang.String,java.util.HashMap)", "com.nearhere.domain.User.setUserNo(java.lang.String)", "com.dy.common.Util.isEmptyString(java.lang.String)"], "Fixed commit": "b28f0741412738d23f50991460726c08b8d1346e", "Url": "https://api.github.com/repos/kim2509/publicChatServer", "Date": "2015-04-27T12:50:26Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { return new de.ovgu.featureide.core.builder.ComposerExtensionProxy(configurationElement); } catch (java.lang.Exception e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1801/buggy-version/plugins.de.ovgu.featureide.core.src.de.ovgu.featureide.core.builder.ComposerExtensionManager.java", "BodyUseAPI": [], "Fixed commit": "6ff21979c972aa6007f3638c25ebbc3ff486a55f", "Url": "https://api.github.com/repos/FeatureIDE/FeatureIDE", "Date": "2016-12-08T18:41:52Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { value = java.net.URLDecoder.decode(value, \"UTF-8\"); } catch (java.io.UnsupportedEncodingException e) { e.printStackTrace(); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2762/buggy-version/zkbind.src.org.zkoss.bind.impl.BinderImpl.java", "BodyUseAPI": ["java.net.URLDecoder.decode(java.lang.String,java.lang.String)"], "Fixed commit": "a707cc0548edbcfa78e4c8526ceb458b45b9d8a6", "Url": "https://api.github.com/repos/wenninghsu/zk", "Date": "2016-11-15T07:48:57Z"},
{"Line": "=>440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { getView().getDocumentPane().scrollRectToVisible(getView().getDocumentPane().modelToView(caretPos)); } catch (javax.swing.text.BadLocationException ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1864/buggy-version/src.main.java.edu.brandeis.cs.nlp.mae.controller.TextPanelController.java", "BodyUseAPI": ["getView().getDocumentPane().modelToView(int)", "edu.brandeis.cs.nlp.mae.controller.TextPanelController.getView()", "edu.brandeis.cs.nlp.mae.controller.TextPanelController.getView()", "edu.brandeis.cs.nlp.mae.view.TextPanelView.getDocumentPane()", "getView().getDocumentPane().scrollRectToVisible(getView().getDocumentPane().modelToView(caretPos))", "edu.brandeis.cs.nlp.mae.view.TextPanelView.getDocumentPane()"], "Fixed commit": "4fab03d1f718844649412f63da7c2a654bfc2fc8", "Url": "https://api.github.com/repos/keighrim/mae-annotation", "Date": "2016-04-15T17:15:14Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { table.packAll(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4382/buggy-version/src.org.magic.gui.dashlet.EditionsDashlet.java", "BodyUseAPI": ["org.jdesktop.swingx.JXTable.packAll()"], "Fixed commit": "5829febea8f29f43120e6fce94a859cbf2980ba0", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2017-09-13T15:53:22Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mPosition = mMP.getCurrentPosition(); mMP.pause(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4999/buggy-version/app.src.main.java.com.h2kresearch.syllablegame.utils.MusicService.java", "BodyUseAPI": ["android.media.MediaPlayer.getCurrentPosition()", "android.media.MediaPlayer.pause()"], "Fixed commit": "296801d37f20f5928280d4910502c9de1ba2e60d", "Url": "https://api.github.com/repos/josuekim/SyllableGame", "Date": "2017-12-18T04:28:49Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(2000); } catch (java.lang.InterruptedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2365/buggy-version/araqne-core.src.main.java.org.araqne.ssh.SshPasswordAuthenticator.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "5f766c8d246d7b103826e06f99728e6d8c79f301", "Url": "https://api.github.com/repos/araqne/core", "Date": "2016-02-01T11:30:05Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { db = new ru.fizteh.fivt.students.torunova.multifilehashmap.Database(dbfile); } catch (ru.fizteh.fivt.students.torunova.multifilehashmap.exceptions.IncorrectDbNameException e) { java.lang.System.out.println((\"Caught IncorrectDbNameException: \" + (e.getMessage()))); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/276/buggy-version/src.ru.fizteh.fivt.students.torunova.multifilehashmap.Shell.java", "BodyUseAPI": [], "Fixed commit": "12d23565e51e46c2826c890039e941ad17d401b7", "Url": "https://api.github.com/repos/dkomanov/fizteh-java-2014", "Date": "2014-10-24T06:59:16Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { return (((Build.VERSION.SDK_INT) == 25) && ((Build.VERSION.PREVIEW_SDK_INT) > 0)) || ((Build.VERSION.SDK_INT) > 25); } catch (java.lang.Throwable e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/5068/buggy-version/VirtualApp.lib.src.main.java.com.lody.virtual.helper.compat.BuildCompat.java", "BodyUseAPI": [], "Fixed commit": "26c5e1553a8983fac3db2f7d2776c318848f0fcd", "Url": "https://api.github.com/repos/dstmath/VirtualApp", "Date": "2017-07-05T03:28:40Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { property = rb.getString(key); } catch (com.example.MissingResourceException ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/958/buggy-version/old-main-config-client.src.main.java.com.example.ConfigReader.java", "BodyUseAPI": ["java.util.ResourceBundle.getString(java.lang.String)"], "Fixed commit": "59b955a0a0e4fe1652ffd487122013c9fbc914f8", "Url": "https://api.github.com/repos/Baresse/demo-springcloud-config", "Date": "2016-11-06T09:14:03Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { IPAddress = java.net.InetAddress.getByName(request.getIP()); } catch (java.net.UnknownHostException e1) { e1.printStackTrace(); bot.sendMessageToChannel(\"Error: Query IP address could not be resolved or is using IPv6.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4477/buggy-version/src.org.bestever.serverquery.QueryHandler.java", "BodyUseAPI": ["org.bestever.serverquery.ServerQueryRequest.getIP()", "java.net.InetAddress.getByName(request.getIP())"], "Fixed commit": "eb1ec344e3429945920f40c29131cdba1880483d", "Url": "https://api.github.com/repos/IvanTopolcic/BestBot", "Date": "2013-07-09T05:03:44Z"},
{"Line": "=>636", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { values[k] = Metrics[i].getDistributions().get(distributionX).getValues()[j]; } catch (java.lang.ArrayIndexOutOfBoundsException e) { values[k] = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4704/buggy-version/src.dna.series.Aggregation.java", "BodyUseAPI": ["Metrics[i].getDistributions().get(java.lang.String)", "Metrics[i].getDistributions()", "Metrics[i].getDistributions().get(distributionX).getValues()"], "Fixed commit": "e0655d27f4a633b5b6f74daeb99c02617233d2c8", "Url": "https://api.github.com/repos/BenjaminSchiller/DNA", "Date": "2013-08-08T10:57:22Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { tipWhole = java.lang.Double.parseDouble(tip); } catch (java.lang.NumberFormatException e) { tipWhole = 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4788/buggy-version/src.me.valour.bowls.TableActivity.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "a08d4769ae86a3ad29d72c8a11afbab7458464eb", "Url": "https://api.github.com/repos/algobunny/Bowls", "Date": "2014-05-29T02:49:26Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { amount = java.lang.Double.parseDouble(tax); } catch (java.lang.NumberFormatException e) { amount = 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4788/buggy-version/src.me.valour.bowls.TableActivity.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "a08d4769ae86a3ad29d72c8a11afbab7458464eb", "Url": "https://api.github.com/repos/algobunny/Bowls", "Date": "2014-05-29T02:49:26Z"},
{"Line": "=>510", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { buildUploadRequest(request, weiboclient4j.StatusService.PIC_PARAM_NAME, image, weiboclient4j.params.Parameters.create()); } catch (java.io.IOException e) { throw new weiboclient4j.WeiboClientException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4588/buggy-version/src.main.java.weiboclient4j.StatusService.java", "BodyUseAPI": ["weiboclient4j.params.Parameters.create()", "weiboclient4j.StatusService.buildUploadRequest(org.scribe.model.OAuthRequest,java.lang.String,java.io.File,weiboclient4j.params.Parameters.create())"], "Fixed commit": "70c19b249f85e6d693932576c126d1cddc83668e", "Url": "https://api.github.com/repos/hoverruan/weiboclient4j", "Date": "2013-08-01T03:45:11Z"},
{"Line": "=>562", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { java.lang.Thread.currentThread().setContextClassLoader(com.microsoft.azure.storage.core.Utility.saxParserFactory.getClass().getClassLoader()); com.microsoft.azure.storage.core.Utility.saxParserFactory.setNamespaceAware(true); return com.microsoft.azure.storage.core.Utility.saxParserFactory.newSAXParser(); } finally { java.lang.Thread.currentThread().setContextClassLoader(orgContextLoader); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3447/buggy-version/microsoft-azure-storage.src.com.microsoft.azure.storage.core.Utility.java", "BodyUseAPI": ["java.lang.Thread.setContextClassLoader(java.lang.ClassLoader)", "javax.xml.parsers.SAXParserFactory.getClass()", "java.lang.Thread.currentThread()", "javax.xml.parsers.SAXParserFactory.newSAXParser()", "java.lang.Class<? extends javax.xml.parsers.SAXParserFactory>.getClassLoader()", "javax.xml.parsers.SAXParserFactory.setNamespaceAware(boolean)"], "Fixed commit": "2c538ade605dfc80372e73a09b7ee6b7bbba75ec", "Url": "https://api.github.com/repos/hdinsight/azure-storage-java", "Date": "2016-06-20T13:49:21Z"},
{"Line": "=>644", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { java.lang.Thread.currentThread().setContextClassLoader(com.microsoft.azure.storage.core.Utility.xmlOutputFactory.getClass().getClassLoader()); return com.microsoft.azure.storage.core.Utility.xmlOutputFactory.createXMLStreamWriter(outStream, charset); } finally { java.lang.Thread.currentThread().setContextClassLoader(orgContextLoader); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3447/buggy-version/microsoft-azure-storage.src.com.microsoft.azure.storage.core.Utility.java", "BodyUseAPI": ["java.lang.Thread.setContextClassLoader(java.lang.ClassLoader)", "javax.xml.stream.XMLOutputFactory.createXMLStreamWriter(java.io.OutputStream,java.lang.String)", "java.lang.Class<? extends javax.xml.stream.XMLOutputFactory>.getClassLoader()", "java.lang.Thread.currentThread()", "javax.xml.stream.XMLOutputFactory.getClass()"], "Fixed commit": "2c538ade605dfc80372e73a09b7ee6b7bbba75ec", "Url": "https://api.github.com/repos/hdinsight/azure-storage-java", "Date": "2016-06-20T13:49:21Z"},
{"Line": "=>622", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { java.lang.Thread.currentThread().setContextClassLoader(com.microsoft.azure.storage.core.Utility.xmlOutputFactory.getClass().getClassLoader()); return com.microsoft.azure.storage.core.Utility.xmlOutputFactory.createXMLStreamWriter(outWriter); } finally { java.lang.Thread.currentThread().setContextClassLoader(orgContextLoader); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3447/buggy-version/microsoft-azure-storage.src.com.microsoft.azure.storage.core.Utility.java", "BodyUseAPI": ["javax.xml.stream.XMLOutputFactory.getClass()", "java.lang.Thread.currentThread()", "java.lang.Class<? extends javax.xml.stream.XMLOutputFactory>.getClassLoader()", "javax.xml.stream.XMLOutputFactory.createXMLStreamWriter(java.io.StringWriter)", "java.lang.Thread.setContextClassLoader(java.lang.ClassLoader)"], "Fixed commit": "2c538ade605dfc80372e73a09b7ee6b7bbba75ec", "Url": "https://api.github.com/repos/hdinsight/azure-storage-java", "Date": "2016-06-20T13:49:21Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.System.loadLibrary(\"jawt\"); } catch (java.lang.UnsatisfiedLinkError e) { if (((e.getMessage()) == null) || (!(e.getMessage().contains(\"already loaded in another classloader\")))) java.util.logging.Logger.getLogger(org.jcae.netbeans.viewer3d.ViewManager.class.getName()).log(java.util.logging.Level.SEVERE, null, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1934/buggy-version/jcae.mesh-algos.src.org.jcae.netbeans.viewer3d.ViewManager.java", "BodyUseAPI": ["java.lang.System.loadLibrary(java.lang.String)"], "Fixed commit": "e67d92f7508751a2e78dbcfd27946d0355ef665d", "Url": "https://api.github.com/repos/spirritus/jCAE", "Date": "2012-05-30T10:01:45Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.da4.urlminimizer.UrlMinimizer minimizer = ((org.da4.urlminimizer.UrlMinimizer) (request.getServletContext().getAttribute(\"minimizer\"))); org.da4.urlminimizer.web.servlets.Redirector.logger.debug((\"Alias Recieved: \" + (request.getServletPath().substring(1)))); java.lang.String url = minimizer.maximize(request.getServletPath().substring(1)); if ((url == null) || (url.trim().isEmpty())) { response.sendRedirect(\"/\"); return; } org.da4.urlminimizer.web.servlets.Redirector.logger.debug((\"Maximimized URL: \" + url)); response.sendRedirect(url); } catch (java.lang.Exception e) { response.sendRedirect(\"/\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2113/buggy-version/UrlMinifierWebapp.src.org.da4.urlminimizer.web.servlets.Redirector.java", "BodyUseAPI": ["request.getServletPath().substring(int)", "java.lang.String.trim()", "request.getServletPath().substring(int)", "java.lang.String.isEmpty()", "org.apache.logging.log4j.Logger.debug(java.lang.String)", "org.da4.urlminimizer.UrlMinimizer.maximize(request.getServletPath().substring(1))", "javax.servlet.http.HttpServletRequest.getServletPath()", "javax.servlet.http.HttpServletResponse.sendRedirect(java.lang.String)", "javax.servlet.http.HttpServletRequest.getServletPath()", "org.apache.logging.log4j.Logger.debug((\"Alias Recieved: \" + (request.getServletPath().substring(1))))", "javax.servlet.http.HttpServletRequest.getServletContext()", "request.getServletContext().getAttribute(java.lang.String)", "javax.servlet.http.HttpServletResponse.sendRedirect(java.lang.String)"], "Fixed commit": "72faae0ef5799fb4e7865a8a9609924dada80766", "Url": "https://api.github.com/repos/dblaber/urlminimizer", "Date": "2016-10-16T00:05:08Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return new com.ModDamage.Variables.Strings.WorldString(com.ModDamage.Variables.Strings.WorldString.WorldStringProperty.valueOf(string.toUpperCase()), worldRef); } catch (java.lang.IllegalArgumentException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4767/buggy-version/src.com.ModDamage.Variables.Strings.WorldString.java", "BodyUseAPI": ["java.lang.String.toUpperCase()", "com.ModDamage.Variables.Strings.WorldString.WorldStringProperty.valueOf(java.lang.String)"], "Fixed commit": "2662fc4dbeefceb8fc353d369989424c0e44880e", "Url": "https://api.github.com/repos/ModDamage/ModDamage", "Date": "2012-03-17T01:49:25Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.jayway.jsonpath.DocumentContext doc = com.intuit.karate.JsonUtils.toJsonDoc(responseString); responseBody = doc; if (context.isLogPrettyResponse()) { context.logger.info(\"response:\\n{}\", com.intuit.karate.JsonUtils.toPrettyJsonString(doc)); } } catch (java.lang.Exception e) { context.logger.warn(\"json parsing failed, response data type set to string: {}\", e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/774/buggy-version/karate-core.src.main.java.com.intuit.karate.StepDefs.java", "BodyUseAPI": ["com.intuit.karate.JsonUtils.toJsonDoc(java.lang.String)", "context.logger.info(java.lang.String,com.intuit.karate.JsonUtils.toPrettyJsonString(doc))", "com.intuit.karate.ScriptContext.isLogPrettyResponse()", "com.intuit.karate.JsonUtils.toPrettyJsonString(com.jayway.jsonpath.DocumentContext)"], "Fixed commit": "ce8b448653967d6b5a819617d7a19bb5ccfa32f3", "Url": "https://api.github.com/repos/intuit/karate", "Date": "2017-12-08T05:47:18Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(10); } catch (java.lang.InterruptedException ex) { java.lang.Thread.currentThread().interrupt(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1463/buggy-version/src.main.java.com.github.parmel.BrickBreaker.GameEngine.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "fd75441e7fe489e9a9cbcc64e67a5cd5f50bb6f4", "Url": "https://api.github.com/repos/parmel/BrickBreaker", "Date": "2014-05-20T23:56:29Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { connection = com.dtstack.flinkx.hbase.reader.ConnectionFactory.createConnection(hConfiguration); } catch (java.lang.Exception e) { com.dtstack.flinkx.hbase.HbaseHelper.closeConnection(connection); throw new java.lang.IllegalArgumentException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5468/buggy-version/flinkx-hbase.flinkx-hbase-reader.src.main.java.com.dtstack.flinkx.hbase.reader.HbaseInputFormat.java", "BodyUseAPI": ["com.dtstack.flinkx.hbase.reader.ConnectionFactory.createConnection(org.apache.flink.configuration.Configuration)"], "Fixed commit": "32bcec6d6cba0435d087a1cb67f18677185d2c0f", "Url": "https://api.github.com/repos/DTStack/flinkx", "Date": "2018-05-10T09:26:23Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { index = new java.util.Random().nextInt(max); } catch (java.lang.Exception ex) { index = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/415/buggy-version/app.src.main.java.space.infinity.app.activities.FactsActivity.java", "BodyUseAPI": ["java.util.Random.nextInt(int)"], "Fixed commit": "cc06253a6a51c1b5248917b5f25be0c8539dce27", "Url": "https://api.github.com/repos/icatalin201/Space-Infinity", "Date": "2018-04-19T19:38:40Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { index = new java.util.Random().nextInt(max); } catch (java.lang.Exception ex) { index = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/415/buggy-version/app.src.main.java.space.infinity.app.activities.FactsActivity.java", "BodyUseAPI": ["java.util.Random.nextInt(int)"], "Fixed commit": "cc06253a6a51c1b5248917b5f25be0c8539dce27", "Url": "https://api.github.com/repos/icatalin201/Space-Infinity", "Date": "2018-04-19T19:38:40Z"},
{"Line": "=>788", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.apache.commons.io.FileUtils.copyFile(file, outputStream); } catch (java.io.FileNotFoundException e) { root.system.utils.Utils.log(root.system.utils.Utils.TAG, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4307/buggy-version/app.src.main.java.root.system.utils.Utils.java", "BodyUseAPI": ["org.apache.commons.io.FileUtils.copyFile(java.io.File,java.io.BufferedOutputStream)"], "Fixed commit": "10f1f116bf57b4cc55fec6f4aab28b95140cc7b0", "Url": "https://api.github.com/repos/pvasa/System", "Date": "2016-09-15T04:16:53Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mailAccountService.checkDefaultMailAccount(account); } catch (com.axelor.exception.AxelorException e) { response.setAttr(\"isDefault\", \"value\", false); response.setFlash(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4023/buggy-version/axelor-message.src.main.java.com.axelor.apps.message.web.MailAccountController.java", "BodyUseAPI": ["com.axelor.apps.message.service.MailAccountService.checkDefaultMailAccount(com.axelor.apps.message.db.EmailAccount)"], "Fixed commit": "5cc47f857e4ae4ac3a5c7bfde5af0bcd9c36eb29", "Url": "https://api.github.com/repos/ugo-axelor/axelor-business-suite", "Date": "2018-05-08T10:14:24Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.pentaho.di.ui.spoon.Spoon spoon = org.pentaho.di.ui.spoon.Spoon.getInstance(); org.pentaho.di.trans.TransPainterExtension tpe = ((org.pentaho.di.trans.TransPainterExtension) (o)); java.util.Map<java.lang.String, java.lang.String> stepLevelMap = tpe.transMeta.getAttributesMap().get(Defaults.TRANSMETA_DEBUG_GROUP); if (stepLevelMap != null) { java.lang.String stepname = tpe.stepMeta.getName(); final org.kettle.DebugLevel debugLevel = org.kettle.util.DebugLevelUtil.getDebugLevel(stepLevelMap, stepname); if (debugLevel != null) { if ((org.kettle.xp.DrawDebugLevelBeeExtensionPoint.beeImage) == null) { org.kettle.xp.DrawDebugLevelBeeExtensionPoint.beeImage = org.kettle.xp.util.SvgLoader.transcodeSVGDocument(this.getClass().getClassLoader(), \"bee.svg\", 30, 26); } tpe.gc.drawImage(org.kettle.xp.DrawDebugLevelBeeExtensionPoint.beeImage, ((tpe.x1) + (tpe.iconsize)), ((tpe.y1) - ((tpe.iconsize) / 2))); } } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/203/buggy-version/src.main.java.org.kettle.xp.DrawDebugLevelBeeExtensionPoint.java", "BodyUseAPI": ["tpe.transMeta.getAttributesMap()", "org.kettle.util.DebugLevelUtil.getDebugLevel(java.util.Map<java.lang.String, java.lang.String>,java.lang.String)", "java.lang.Class<? extends org.kettle.xp.DrawDebugLevelBeeExtensionPoint>.getClassLoader()", "tpe.stepMeta.getName()", "tpe.gc.drawImage(java.awt.image.BufferedImage,((tpe.x1) + (tpe.iconsize)),((tpe.y1) - ((tpe.iconsize) / 2)))", "tpe.transMeta.getAttributesMap().get(Defaults.TRANSMETA_DEBUG_GROUP)", "org.kettle.xp.util.SvgLoader.transcodeSVGDocument(java.lang.ClassLoader,java.lang.String,int,int)", "org.pentaho.di.ui.spoon.Spoon.getInstance()", "org.kettle.xp.DrawDebugLevelBeeExtensionPoint.getClass()"], "Fixed commit": "dff09e55c595b26ac4af6be2b938d12615199bb8", "Url": "https://api.github.com/repos/mattcasters/kettle-debug-plugin", "Date": "2018-10-15T20:36:22Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { resources.add(createResourceDTO(resource)); } catch (java.lang.Exception e) { com.bcdlog.server.service.api.TravelBookAPI.log.log(java.util.logging.Level.SEVERE, e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/51/buggy-version/fwk.src.main.java.com.bcdlog.server.service.api.TravelBookAPI.java", "BodyUseAPI": ["java.util.ArrayList<com.bcdlog.server.service.api.ResourceDTO>.add(com.bcdlog.server.service.api.ResourceDTO)", "com.bcdlog.server.service.api.TravelBookAPI.createResourceDTO(com.bcdlog.shared.model.ResourceModel)"], "Fixed commit": "547b8f0ba9cadbab2e8fd1b00e1853c0f7d3da10", "Url": "https://api.github.com/repos/BertrandClarke/sites", "Date": "2018-04-14T05:44:17Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ru.zendal.session.TradeOffline tradeOffline = sessionManager.getTradeOfflineById(idTrade); org.bukkit.OfflinePlayer offlinePlayer = org.bukkit.Bukkit.getOfflinePlayer(java.util.UUID.fromString(uuidPlayer)); if (offlinePlayer == null) { throw new ru.zendal.socket.command.exception.ProcessCommandException(); } if (!(offlinePlayer.isOnline())) { throw new ru.zendal.socket.command.exception.ProcessCommandException(); } org.bukkit.entity.Player player = offlinePlayer.getPlayer(); ru.zendal.session.TradeOfflineConfirmResponse response = tradeOffline.confirmTrade(player); if (response.hasMissingItems()) { throw new ru.zendal.socket.command.exception.ProcessCommandException(); } try { sessionManager.removeTradeOffline(tradeOffline); player.getInventory().clear(); player.getInventory().setContents(response.getNewContent()); sessionManager.processTradeOffline(player, tradeOffline); } catch (ru.zendal.session.exception.TradeSessionManagerException e) { } } catch (ru.zendal.session.exception.TradeSessionManagerException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8214/buggy-version/src.main.java.ru.zendal.socket.command.AcceptTradeCommand.java", "BodyUseAPI": ["java.util.UUID.fromString(java.lang.String)", "player.getInventory().clear()", "ru.zendal.session.TradeOfflineConfirmResponse.hasMissingItems()", "ru.zendal.session.TradeOfflineConfirmResponse.getNewContent()", "ru.zendal.session.TradeOffline.confirmTrade(org.bukkit.entity.Player)", "org.bukkit.entity.Player.getInventory()", "org.bukkit.OfflinePlayer.isOnline()", "org.bukkit.entity.Player.getInventory()", "player.getInventory().setContents(response.getNewContent())", "org.bukkit.OfflinePlayer.getPlayer()", "ru.zendal.session.TradeSessionManager.processTradeOffline(org.bukkit.entity.Player,ru.zendal.session.TradeOffline)", "org.bukkit.Bukkit.getOfflinePlayer(java.util.UUID)", "ru.zendal.session.TradeSessionManager.removeTradeOffline(ru.zendal.session.TradeOffline)", "ru.zendal.session.TradeSessionManager.getTradeOfflineById(java.lang.String)"], "Fixed commit": "df951c9809811431ae49652b662ffd262b4012b4", "Url": "https://api.github.com/repos/ZendalMinecraft/TradingPlatform", "Date": "2018-07-31T08:26:52Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.util.Log.e(\"Simple \", \"onPress\"); } catch (java.lang.Exception ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6933/buggy-version/app.src.main.java.com.example.rahulk.simplycustomkeyboard.SimpleIME.java", "BodyUseAPI": ["android.util.Log.e(java.lang.String,java.lang.String)"], "Fixed commit": "014d2ce47689dc41e89c9b0dfab4e2442f78668e", "Url": "https://api.github.com/repos/SagarGang/SystemCustomKeyBoard", "Date": "2018-02-07T16:22:39Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.util.Log.e(\"Simple \", \"onRelease\"); } catch (java.lang.Exception ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6933/buggy-version/app.src.main.java.com.example.rahulk.simplycustomkeyboard.SimpleIME.java", "BodyUseAPI": ["android.util.Log.e(java.lang.String,java.lang.String)"], "Fixed commit": "014d2ce47689dc41e89c9b0dfab4e2442f78668e", "Url": "https://api.github.com/repos/SagarGang/SystemCustomKeyBoard", "Date": "2018-02-07T16:22:39Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { googleApiAvailability = com.google.android.gms.common.GoogleApiAvailability.getInstance(); errorCode = googleApiAvailability.isGooglePlayServicesAvailable(this); com.google.android.gms.security.ProviderInstaller.installIfNeeded(this); showThumbnailDialog(); } catch (com.google.android.gms.common.GooglePlayServicesRepairableException e) { android.util.Log.e(com.samirk433.quotebook.QuoteActivity.TAG, \"Google Play Exception\", e); if (googleApiAvailability != null) googleApiAvailability.getErrorDialog(this, errorCode, 1); } catch (com.google.android.gms.common.GooglePlayServicesNotAvailableException e) { android.util.Log.e(com.samirk433.quotebook.QuoteActivity.TAG, \"Google Play Exception\", e); if (googleApiAvailability != null) googleApiAvailability.getErrorDialog(this, errorCode, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7427/buggy-version/app.src.main.java.com.samirk433.quotebook.QuoteActivity.java", "BodyUseAPI": ["com.google.android.gms.common.GoogleApiAvailability.getInstance()", "com.google.android.gms.common.GoogleApiAvailability.isGooglePlayServicesAvailable(com.samirk433.quotebook.QuoteActivity)", "com.samirk433.quotebook.QuoteActivity.showThumbnailDialog()", "com.google.android.gms.security.ProviderInstaller.installIfNeeded(com.samirk433.quotebook.QuoteActivity)"], "Fixed commit": "e08a81ab1a31e36296ef273f7f2ff3b73a1d122f", "Url": "https://api.github.com/repos/yasirh33/QuotBook-II", "Date": "2018-05-08T06:12:31Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { cmdInt = java.lang.Integer.parseInt(cmd); } catch (java.lang.NumberFormatException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1270/buggy-version/src.Driver.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "e05fe5b1b4f04591653365fac97d11c4fcf53b3e", "Url": "https://api.github.com/repos/cmchu3/ZendeskSearch", "Date": "2018-02-08T19:24:44Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ((com.example.bryan.togatheradproject.InterestActivity) (getActivity())).button_AddButton.setEnabled(true); } catch (java.lang.ClassCastException e) { android.util.Log.d(com.example.bryan.togatheradproject.EditProfileDialog.TAG, \"not from interest\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5341/buggy-version/app.src.main.java.com.example.bryan.togatheradproject.EditProfileDialog.java", "BodyUseAPI": ["com.example.bryan.togatheradproject.EditProfileDialog.getActivity()", "((com.example.bryan.togatheradproject.InterestActivity) (getActivity())).button_AddButton.setEnabled(boolean)"], "Fixed commit": "eaebe7f1de536e58ea249268f7bcc4f9b630d2d6", "Url": "https://api.github.com/repos/bryantanuwijaya/ToGatherADProject", "Date": "2018-10-01T06:20:25Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { graphCache.closeGraph(graphPath); } catch (java.lang.Throwable t) { org.jboss.windup.web.services.service.WindupExecutionService.LOG.log(java.util.logging.Level.FINE, (((\"Could not close the graph at: \" + graphPath) + \" due to: \") + (t.getMessage())), t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8578/buggy-version/services.src.main.java.org.jboss.windup.web.services.service.WindupExecutionService.java", "BodyUseAPI": ["org.jboss.windup.web.addons.websupport.rest.graph.GraphCache.closeGraph(java.nio.file.Path)"], "Fixed commit": "40943dc42523aba1c7c771126a69db53882f7d53", "Url": "https://api.github.com/repos/windup/windup-web", "Date": "2018-03-13T09:58:43Z"},
{"Line": "=>8", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((args.length) > 0) { if ((args[0].equals(\"-h\")) || (args[0].equals(\"--help\"))) { output += \"\\njava JPassGen [length] [lower] [upper] [digit] [punctuation]\" + \"\\n\\n\"; output += \"length - Length of the password.\" + \"\\n\"; output += \" 0 - default length\" + \"\\n\"; output += \"lower - Minimum number of lower case characters in password.\" + \"\\n\"; output += \"upper - Minimum number of upper case characters in password.\" + \"\\n\"; output += \"digit - Minimum number of digit characters in password.\" + \"\\n\"; output += \"punctuation - Minimum number of punctuation characters in password.\" + \"\\n\"; output += \" -1 - disable\" + \"\\n\"; output += \" 0 - random number\" + \"\\n\"; output += \" >0 - digit minimum number\" + \"\\n\\n\"; output += \"Examples:\" + \"\\n\"; output += \"---------\" + \"\\n\"; output += ((\"java JPassGen // Default length (\" + (passwordGenerator.getDefaultLength())) + \"characters) random password with default settings\") + \"\\n\"; output += \"java JPassGen 12 // 12 characters length random password with default settings\" + \"\\n\"; output += \"java JPassGen 12 -1 // 12 characters length random password, lowercase characters disabled \" + \"\\n\"; output += \"java JPassGen 12 0 3 // 12 characters length random password, random number lowercase characters, minimum 3 uppercase characters\" + \"\\n\"; output += \"java JPassGen 0 0 -1 3 2 // Default length random password, random number lowercase characters, disable uppercase, minimum 3 digit and minimum 2 punctuation characters\" + \"\\n\"; }else if ((java.lang.Integer.parseInt(args[0])) > 0) { passLength = java.lang.Integer.parseInt(args[0]); } if ((args.length) > 1) { if ((java.lang.Integer.parseInt(args[1])) < 0) { passwordGenerator.disableLower(); }else { passwordGenerator.enableLower(); passwordGenerator.setMinNumberLower(java.lang.Integer.parseInt(args[1])); } if ((args.length) > 2) { if ((java.lang.Integer.parseInt(args[2])) < 0) { passwordGenerator.disableUpper(); }else { passwordGenerator.enableUpper(); passwordGenerator.setMinNumberUpper(java.lang.Integer.parseInt(args[2])); } if ((args.length) > 3) { if ((java.lang.Integer.parseInt(args[3])) < 0) { passwordGenerator.disableDigit(); }else { passwordGenerator.enableDigit(); passwordGenerator.setMinNumberDigit(java.lang.Integer.parseInt(args[3])); } if ((args.length) > 4) { if ((java.lang.Integer.parseInt(args[4])) < 0) { passwordGenerator.disablePunctuation(); }else { passwordGenerator.enablePunctuation(); passwordGenerator.setMinNumberPunctuation(java.lang.Integer.parseInt(args[4])); } } } } } } if ((output.length()) == 0) { output = passwordGenerator.generate(passLength); } java.lang.System.out.println(output); } catch (java.lang.NumberFormatException e) { java.lang.System.out.println(\"Type:\\n\"); java.lang.System.out.println(\"java JPassGen --help\"); java.lang.System.out.println(\"or\"); java.lang.System.out.println(\"java JPassGen -h\\n\"); java.lang.System.out.println(\"for help!\"); } catch (PasswordLengthException e) { java.lang.System.out.println(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7834/buggy-version/src.JPassGen.java", "BodyUseAPI": ["PasswordGenerator.generate(int)", "PasswordGenerator.disableUpper()", "java.lang.String.equals(java.lang.String)", "PasswordGenerator.setMinNumberUpper(int)", "PasswordGenerator.setMinNumberDigit(int)", "PasswordGenerator.enablePunctuation()", "java.lang.Integer.parseInt(java.lang.String)", "PasswordGenerator.enableDigit()", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.equals(java.lang.String)", "PasswordGenerator.getDefaultLength()", "java.io.PrintStream.println(java.lang.String)", "PasswordGenerator.enableLower()", "PasswordGenerator.setMinNumberLower(int)", "PasswordGenerator.disablePunctuation()", "java.lang.String.length()", "PasswordGenerator.enableUpper()", "PasswordGenerator.setMinNumberPunctuation(int)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "PasswordGenerator.disableDigit()", "java.lang.Integer.parseInt(java.lang.String)", "PasswordGenerator.disableLower()"], "Fixed commit": "1a8261ee16d5ac59ecac963cb119521e2b9eae44", "Url": "https://api.github.com/repos/kissn76/JPassGen", "Date": "2018-09-28T08:36:28Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { image = new java.io.File(((((filePath.substring(0, filePath.lastIndexOf('\\\\'))) + \"\\\\\") + (metaTokens.get(\"icon\"))) + \".png\")); } catch (java.lang.StringIndexOutOfBoundsException e) { image = new java.io.File((((filePath + \"\\\\\") + (metaTokens.get(\"icon\"))) + \".png\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7373/buggy-version/src.main.java.io.github.wheezygold7931.discordthemer.DiscordThemer.java", "BodyUseAPI": ["java.lang.String.lastIndexOf(char)", "java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "fe676ca31068f3b1f6be5092f72f53b38da432c6", "Url": "https://api.github.com/repos/JRoy/discord-themer", "Date": "2018-05-05T02:29:16Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { segundos = java.lang.Integer.parseInt(javax.swing.JOptionPane.showInputDialog(this, \"Segundos:\")); } catch (java.lang.Exception e) { segundos = 5; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4483/buggy-version/AsdChallenge.src.app.App.java", "BodyUseAPI": ["javax.swing.JOptionPane.showInputDialog(app.App,java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "641cc34ce9793529296582ca829dd3056050e455", "Url": "https://api.github.com/repos/pperezp/asd-challenge", "Date": "2018-04-27T04:40:55Z"},
{"Line": "=>590", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return linkTarget.replaceFirst(currTestSuiteDir, this.testProject); } catch (java.lang.Exception eX) { nl.dictu.prova.plugins.reporting.simplereport.SimpleReport.LOGGER.warn((\"Creating relative link failed, using normal link instead: \" + eX)); return linkTarget; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9268/buggy-version/plugins.reporting.simpleReport.src.main.java.nl.dictu.prova.plugins.reporting.simplereport.SimpleReport.java", "BodyUseAPI": ["java.lang.String.replaceFirst(java.lang.String,java.lang.String)"], "Fixed commit": "83e53289349cf11f5faa9e64c14ab3652f98a8d7", "Url": "https://api.github.com/repos/Dictu/Prova-V1", "Date": "2018-01-10T10:49:28Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.io.FileWriter fileWriter = new java.io.FileWriter(contactApplication.ApplicationFunctions.FILENAME, true); java.io.BufferedWriter bw = new java.io.BufferedWriter(fileWriter); java.io.PrintWriter pw = new java.io.PrintWriter(bw); pw.flush(); pw.close(); javax.swing.JOptionPane.showMessageDialog(null, \"record saved\"); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7810/buggy-version/src.contactApplication.ApplicationFunctions.java", "BodyUseAPI": ["javax.swing.JOptionPane.showMessageDialog(<nulltype>,java.lang.String)", "java.io.PrintWriter.close()", "java.io.PrintWriter.flush()"], "Fixed commit": "d4fac72e5839380f40e616b53f3c9176ba85220d", "Url": "https://api.github.com/repos/creigPhiri/ContactApplication", "Date": "2018-03-28T23:38:58Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { name = java.net.URLDecoder.decode(lists.get(0).getName(), \"UTF-8\"); } catch (java.io.UnsupportedEncodingException e) { com.love.service.impl.UserServiceImpl.logger.error(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9886/buggy-version/src.main.java.com.love.service.impl.UserServiceImpl.java", "BodyUseAPI": ["lists.get(0).getName()", "java.net.URLDecoder.decode(lists.get(0).getName(),java.lang.String)", "java.util.List<com.love.model.User>.get(int)"], "Fixed commit": "8cf69c5cf21038d06a08c6601c26b0a7c018f7e8", "Url": "https://api.github.com/repos/NiccoLiu/name_of_love_web", "Date": "2018-04-28T03:13:16Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (com.google.android.youtube.player.YouTubeIntents.canResolvePlayVideoIntentWithOptions(com.example.jeffr.popularmovieapp.DetailedMovieActivity.context)) { com.example.jeffr.popularmovieapp.DetailedMovieActivity.context.startActivity(com.google.android.youtube.player.YouTubeStandalonePlayer.createVideoIntent(com.example.jeffr.popularmovieapp.DetailedMovieActivity.activity, com.example.jeffr.popularmovieapp.DetailedMovieActivity.API_KEY2, s, 0, true, true)); } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/374/buggy-version/app.src.main.java.com.example.jeffr.popularmovieapp.FetchTrailer.java", "BodyUseAPI": ["com.google.android.youtube.player.YouTubeIntents.canResolvePlayVideoIntentWithOptions(com.example.jeffr.popularmovieapp.FetchTrailer)", "com.example.jeffr.popularmovieapp.FetchTrailer.startActivity(com.google.android.youtube.player.YouTubeStandalonePlayer.createVideoIntent(com.example.jeffr.popularmovieapp.DetailedMovieActivity.activity, com.example.jeffr.popularmovieapp.DetailedMovieActivity.API_KEY2, s, 0, true, true))", "com.google.android.youtube.player.YouTubeStandalonePlayer.createVideoIntent(com.example.jeffr.popularmovieapp.FetchTrailer,com.example.jeffr.popularmovieapp.DetailedMovieActivity.API_KEY2,java.lang.String,int,boolean,boolean)"], "Fixed commit": "43559470645e9e58d6620daf5af97783f5824a96", "Url": "https://api.github.com/repos/jfleurent/PopularMoviesApp", "Date": "2018-05-22T09:37:47Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { loadTextures(folder, renderingFactory, imageTypes); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4517/buggy-version/core.src.main.se.tevej.game.view.BuildingEntityRendereable.java", "BodyUseAPI": ["main.se.tevej.game.view.BuildingEntityRendereable.loadTextures(java.io.File,main.se.tevej.game.view.rendering.RenderingFactory,java.util.List<java.lang.String>)"], "Fixed commit": "5b6ae59cfbbf00fe8462916c6d92695c304c775f", "Url": "https://api.github.com/repos/Tevej/DayInGothenburgInTime", "Date": "2018-09-28T18:01:53Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { checkoutManager.commit(); } catch (java.lang.Exception e) { org.sonar.plugins.scm.starteam.StarteamConnection.LOG.error(\"Cannot commit checkout\", e); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6798/buggy-version/src.main.java.org.sonar.plugins.scm.starteam.StarteamConnection.java", "BodyUseAPI": ["org.sonar.plugins.scm.starteam.CheckoutManager.commit()"], "Fixed commit": "28466ce2111b4183c4231ea7fc752e360d6a4783", "Url": "https://api.github.com/repos/ahunigel/sonar-scm-starteam", "Date": "2018-05-10T09:25:24Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { blockOperationsResult.operationId = object_id.create_from_string(jsonElement.getAsJsonArray().get(1).getAsString()); } catch (java.lang.Exception e) { blockOperationsResult.operationId = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1883/buggy-version/src.main.java.com.github.chouheiwa.wallet.socket.chain.BlockOperationsResult.java", "BodyUseAPI": ["jsonElement.getAsJsonArray().get(1).getAsString()", "com.github.chouheiwa.wallet.socket.chain.BlockOperationsResult.BlockOperationsResultDeserializer.create_from_string(jsonElement.getAsJsonArray().get(1).getAsString())", "com.google.gson.JsonElement.getAsJsonArray()", "jsonElement.getAsJsonArray().get(int)"], "Fixed commit": "b1faeabd4990611f77f9e5b694cbf7bcd3a41478", "Url": "https://api.github.com/repos/chouheiwa/bitshares_wallet", "Date": "2018-08-17T07:08:02Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (direction == (Player.Direction.NORTH)) { if (isAccessible(currentMap[(y - wall)][(x + 1)], integer)) { return true; } }else if (direction == (Player.Direction.EAST)) { if (isAccessible(currentMap[(y + 1)][(x + wall)], integer)) { return true; } }else if (direction == (Player.Direction.SOUTH)) { if (isAccessible(currentMap[(y + wall)][(x - 1)], integer)) { return true; } }else if (direction == (Player.Direction.WEST)) { if (isAccessible(currentMap[(y - 1)][(x - wall)], integer)) { return true; } } return false; } catch (java.lang.ArrayIndexOutOfBoundsException exception) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4456/buggy-version/GameWorld.src.GameWorld.Game.java", "BodyUseAPI": ["GameWorld.Game.isAccessible(currentMap[(y + 1)][(x + wall)],java.lang.Integer)", "GameWorld.Game.isAccessible(currentMap[(y - 1)][(x - wall)],java.lang.Integer)", "GameWorld.Game.isAccessible(currentMap[(y - wall)][(x + 1)],java.lang.Integer)", "GameWorld.Game.isAccessible(currentMap[(y + wall)][(x - 1)],java.lang.Integer)"], "Fixed commit": "44d3d16f5883a8d5bba48eba6b900f95824931b5", "Url": "https://api.github.com/repos/xavierbroadhead/AdventureGame", "Date": "2018-10-15T03:56:29Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { twitter.ApiMain.makeConnection((((\"https://api.twitter.com/1.1/statuses/user_timeline.json?screen_name=\" + name) + \"&count=\") + number)); twitter.ApiMain.connection.setRequestMethod(\"GET\"); twitter.ApiMain.connection.setRequestProperty(\"Authorization\", ((\"Bearer\" + \" \") + (twitter.ApiMain.bearer_key))); twitter.ApiMain.connection.connect(); if (twitter.ApiMain.connection.getResponseMessage().equals(\"OK\")) { twitter.JSONObject json = twitter.ApiMain.inputStreamToJSON(); twitter.JSONArray array = new twitter.JSONArray(json); for (int i = 0; i < (array.length()); i++) { twitter.JSONObject dataObj = ((twitter.JSONObject) (array.get(i))); output = output + (dataObj.toString()); } }else { output = output + \"Cannot connect to api\"; } } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/488/buggy-version/src.main.java.twitter.ApiMain.java", "BodyUseAPI": ["javax.net.ssl.HttpsURLConnection.connect()", "javax.net.ssl.HttpsURLConnection.getResponseMessage()", "twitter.ApiMain.inputStreamToJSON()", "java.lang.String.equals(java.lang.String)", "javax.net.ssl.HttpsURLConnection.setRequestMethod(java.lang.String)", "twitter.JSONArray.length()", "twitter.JSONObject.toString()", "twitter.ApiMain.makeConnection(java.lang.String)", "javax.net.ssl.HttpsURLConnection.setRequestProperty(java.lang.String,java.lang.String)", "twitter.JSONArray.get(int)"], "Fixed commit": "64330139f2c0408e4bcd62d09679eb7e50b9ce56", "Url": "https://api.github.com/repos/JohnnyLiang1018/KarafTwitterAPI", "Date": "2018-10-07T23:37:12Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mDefaultUserAgent = new android.webkit.WebView(appContext).getSettings().getUserAgentString(); } catch (java.lang.RuntimeException re) { mDefaultUserAgent = \"Mozilla/5.0 (Linux; Android 6.0; default FluxC UA; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/44.0.2403.119 Mobile Safari/537.36\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1263/buggy-version/fluxc.src.main.java.org.wordpress.android.fluxc.network.UserAgent.java", "BodyUseAPI": ["android.webkit.WebView.getSettings()", "new android.webkit.WebView(appContext).getSettings().getUserAgentString()"], "Fixed commit": "64ae250711546da2c5aa6b28b43cedc956ba2b58", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android", "Date": "2018-01-26T16:08:15Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { event.setColor(java.awt.Color.decode((\"#\" + (a.attr(\"data-color\"))))); } catch (java.lang.Exception ex) { event.setColor(java.awt.Color.WHITE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2223/buggy-version/src.main.java.org.magic.services.MTGEventProvider.java", "BodyUseAPI": ["org.jsoup.nodes.Element.attr(java.lang.String)", "org.magic.api.beans.MagicEvent.setColor(java.awt.Color)", "java.awt.Color.decode((\"#\" + (a.attr(\"data-color\"))))"], "Fixed commit": "2edd216b55d6a9e54ec5a2b1f0e1af2358124042", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2018-02-18T21:45:20Z"},
{"Line": "=>606", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { temperature = ((micdoodle8.mods.galacticraft.api.prefab.world.gen.WorldProviderSpace) (temp)).getThermalLevelModifier(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7162/buggy-version/src.main.java.com.mjr.extraplanets.client.gui.screen.CustomCelestialSelection.java", "BodyUseAPI": ["net.minecraft.world.WorldProvider.getThermalLevelModifier()"], "Fixed commit": "e5a78fc0a6db117412684edbdf8357d115b0d7d0", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-01-04T19:40:07Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { userName = io.jsonwebtoken.Jwts.parser().setSigningKey(com.boot.cut_costs.service.AuthenticationService.SECRET).parseClaimsJws(token.replace(com.boot.cut_costs.service.AuthenticationService.TOKEN_PREFIX, \"\")).getBody().getSubject(); } catch (java.lang.Exception e) { throw new org.springframework.security.authentication.BadCredentialsException(\"Wrong credentials provided\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1503/buggy-version/src.main.java.com.boot.cut_costs.service.AuthenticationService.java", "BodyUseAPI": ["io.jsonwebtoken.Jwts.parser()", "io.jsonwebtoken.Jwts.parser().setSigningKey(java.lang.String)", "io.jsonwebtoken.Jwts.parser().setSigningKey(com.boot.cut_costs.service.AuthenticationService.SECRET).parseClaimsJws(java.lang.String)", "io.jsonwebtoken.Jwts.parser().setSigningKey(com.boot.cut_costs.service.AuthenticationService.SECRET).parseClaimsJws(token.replace(com.boot.cut_costs.service.AuthenticationService.TOKEN_PREFIX, \"\")).getBody()", "java.lang.String.replace(java.lang.String,java.lang.String)", "io.jsonwebtoken.Jwts.parser().setSigningKey(com.boot.cut_costs.service.AuthenticationService.SECRET).parseClaimsJws(token.replace(com.boot.cut_costs.service.AuthenticationService.TOKEN_PREFIX, \"\")).getBody().getSubject()"], "Fixed commit": "f72a75a4110c29c063075d4a7c26f35340ceb69f", "Url": "https://api.github.com/repos/arian-h/cut-costs", "Date": "2018-01-31T07:17:47Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (java.io.File file : listOfFiles) { if (file.isFile()) { java.lang.String fileString = sourceToString(file.getAbsolutePath()); parseDirectory(fileString); } } } catch (java.lang.NullPointerException e) { java.lang.System.out.println(\"Could not find any .java files\"); java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8769/buggy-version/DeclarationCounter.java", "BodyUseAPI": ["java.io.File.isFile()", "DeclarationCounter.parseDirectory(java.lang.String)", "java.io.File.getAbsolutePath()", "DeclarationCounter.sourceToString(java.lang.String)"], "Fixed commit": "09822ad0936c52d238225b353067829fa10ce4a8", "Url": "https://api.github.com/repos/CT-Clark/SENG300", "Date": "2018-03-14T02:24:39Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { for (int i = head; i < (tail); i++) copy[(((tail) - i) - 1)] = array[i]; } catch (java.lang.Exception e) { java.lang.System.out.println(((((\"tail-head-i:\" + (tail)) + \"-\") + (head)) + \"-\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6894/buggy-version/src.main.java.RandomizedQueue.java", "BodyUseAPI": [], "Fixed commit": "57d19df3afe8055f4e4059667853f302daf02330", "Url": "https://api.github.com/repos/gsayas/DequeAndRandomizedQueue", "Date": "2018-09-15T14:10:59Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { connection = com.dtstack.flinkx.hbase.reader.ConnectionFactory.createConnection(hConfiguration); } catch (java.lang.Exception e) { com.dtstack.flinkx.hbase.HbaseHelper.closeConnection(connection); throw new java.lang.IllegalArgumentException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5468/buggy-version/flinkx-hbase.flinkx-hbase-reader.src.main.java.com.dtstack.flinkx.hbase.reader.HbaseInputFormat.java", "BodyUseAPI": ["com.dtstack.flinkx.hbase.reader.ConnectionFactory.createConnection(org.apache.flink.configuration.Configuration)"], "Fixed commit": "32bcec6d6cba0435d087a1cb67f18677185d2c0f", "Url": "https://api.github.com/repos/DTStack/flinkx", "Date": "2018-05-10T09:26:23Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { index = new java.util.Random().nextInt(max); } catch (java.lang.Exception ex) { index = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/415/buggy-version/app.src.main.java.space.infinity.app.activities.FactsActivity.java", "BodyUseAPI": ["java.util.Random.nextInt(int)"], "Fixed commit": "cc06253a6a51c1b5248917b5f25be0c8539dce27", "Url": "https://api.github.com/repos/icatalin201/Space-Infinity", "Date": "2018-04-19T19:38:40Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { index = new java.util.Random().nextInt(max); } catch (java.lang.Exception ex) { index = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/415/buggy-version/app.src.main.java.space.infinity.app.activities.FactsActivity.java", "BodyUseAPI": ["java.util.Random.nextInt(int)"], "Fixed commit": "cc06253a6a51c1b5248917b5f25be0c8539dce27", "Url": "https://api.github.com/repos/icatalin201/Space-Infinity", "Date": "2018-04-19T19:38:40Z"},
{"Line": "=>788", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.apache.commons.io.FileUtils.copyFile(file, outputStream); } catch (java.io.FileNotFoundException e) { root.system.utils.Utils.log(root.system.utils.Utils.TAG, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4307/buggy-version/app.src.main.java.root.system.utils.Utils.java", "BodyUseAPI": ["org.apache.commons.io.FileUtils.copyFile(java.io.File,java.io.BufferedOutputStream)"], "Fixed commit": "10f1f116bf57b4cc55fec6f4aab28b95140cc7b0", "Url": "https://api.github.com/repos/pvasa/System", "Date": "2016-09-15T04:16:53Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mailAccountService.checkDefaultMailAccount(account); } catch (com.axelor.exception.AxelorException e) { response.setAttr(\"isDefault\", \"value\", false); response.setFlash(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4023/buggy-version/axelor-message.src.main.java.com.axelor.apps.message.web.MailAccountController.java", "BodyUseAPI": ["com.axelor.apps.message.service.MailAccountService.checkDefaultMailAccount(com.axelor.apps.message.db.EmailAccount)"], "Fixed commit": "5cc47f857e4ae4ac3a5c7bfde5af0bcd9c36eb29", "Url": "https://api.github.com/repos/ugo-axelor/axelor-business-suite", "Date": "2018-05-08T10:14:24Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.pentaho.di.ui.spoon.Spoon spoon = org.pentaho.di.ui.spoon.Spoon.getInstance(); org.pentaho.di.trans.TransPainterExtension tpe = ((org.pentaho.di.trans.TransPainterExtension) (o)); java.util.Map<java.lang.String, java.lang.String> stepLevelMap = tpe.transMeta.getAttributesMap().get(Defaults.TRANSMETA_DEBUG_GROUP); if (stepLevelMap != null) { java.lang.String stepname = tpe.stepMeta.getName(); final org.kettle.DebugLevel debugLevel = org.kettle.util.DebugLevelUtil.getDebugLevel(stepLevelMap, stepname); if (debugLevel != null) { if ((org.kettle.xp.DrawDebugLevelBeeExtensionPoint.beeImage) == null) { org.kettle.xp.DrawDebugLevelBeeExtensionPoint.beeImage = org.kettle.xp.util.SvgLoader.transcodeSVGDocument(this.getClass().getClassLoader(), \"bee.svg\", 30, 26); } tpe.gc.drawImage(org.kettle.xp.DrawDebugLevelBeeExtensionPoint.beeImage, ((tpe.x1) + (tpe.iconsize)), ((tpe.y1) - ((tpe.iconsize) / 2))); } } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/203/buggy-version/src.main.java.org.kettle.xp.DrawDebugLevelBeeExtensionPoint.java", "BodyUseAPI": ["tpe.transMeta.getAttributesMap()", "org.kettle.util.DebugLevelUtil.getDebugLevel(java.util.Map<java.lang.String, java.lang.String>,java.lang.String)", "java.lang.Class<? extends org.kettle.xp.DrawDebugLevelBeeExtensionPoint>.getClassLoader()", "tpe.stepMeta.getName()", "tpe.gc.drawImage(java.awt.image.BufferedImage,((tpe.x1) + (tpe.iconsize)),((tpe.y1) - ((tpe.iconsize) / 2)))", "tpe.transMeta.getAttributesMap().get(Defaults.TRANSMETA_DEBUG_GROUP)", "org.kettle.xp.util.SvgLoader.transcodeSVGDocument(java.lang.ClassLoader,java.lang.String,int,int)", "org.pentaho.di.ui.spoon.Spoon.getInstance()", "org.kettle.xp.DrawDebugLevelBeeExtensionPoint.getClass()"], "Fixed commit": "dff09e55c595b26ac4af6be2b938d12615199bb8", "Url": "https://api.github.com/repos/mattcasters/kettle-debug-plugin", "Date": "2018-10-15T20:36:22Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { resources.add(createResourceDTO(resource)); } catch (java.lang.Exception e) { com.bcdlog.server.service.api.TravelBookAPI.log.log(java.util.logging.Level.SEVERE, e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/51/buggy-version/fwk.src.main.java.com.bcdlog.server.service.api.TravelBookAPI.java", "BodyUseAPI": ["java.util.ArrayList<com.bcdlog.server.service.api.ResourceDTO>.add(com.bcdlog.server.service.api.ResourceDTO)", "com.bcdlog.server.service.api.TravelBookAPI.createResourceDTO(com.bcdlog.shared.model.ResourceModel)"], "Fixed commit": "547b8f0ba9cadbab2e8fd1b00e1853c0f7d3da10", "Url": "https://api.github.com/repos/BertrandClarke/sites", "Date": "2018-04-14T05:44:17Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ru.zendal.session.TradeOffline tradeOffline = sessionManager.getTradeOfflineById(idTrade); org.bukkit.OfflinePlayer offlinePlayer = org.bukkit.Bukkit.getOfflinePlayer(java.util.UUID.fromString(uuidPlayer)); if (offlinePlayer == null) { throw new ru.zendal.socket.command.exception.ProcessCommandException(); } if (!(offlinePlayer.isOnline())) { throw new ru.zendal.socket.command.exception.ProcessCommandException(); } org.bukkit.entity.Player player = offlinePlayer.getPlayer(); ru.zendal.session.TradeOfflineConfirmResponse response = tradeOffline.confirmTrade(player); if (response.hasMissingItems()) { throw new ru.zendal.socket.command.exception.ProcessCommandException(); } try { sessionManager.removeTradeOffline(tradeOffline); player.getInventory().clear(); player.getInventory().setContents(response.getNewContent()); sessionManager.processTradeOffline(player, tradeOffline); } catch (ru.zendal.session.exception.TradeSessionManagerException e) { } } catch (ru.zendal.session.exception.TradeSessionManagerException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8214/buggy-version/src.main.java.ru.zendal.socket.command.AcceptTradeCommand.java", "BodyUseAPI": ["java.util.UUID.fromString(java.lang.String)", "player.getInventory().clear()", "ru.zendal.session.TradeOfflineConfirmResponse.hasMissingItems()", "ru.zendal.session.TradeOfflineConfirmResponse.getNewContent()", "ru.zendal.session.TradeOffline.confirmTrade(org.bukkit.entity.Player)", "org.bukkit.entity.Player.getInventory()", "org.bukkit.OfflinePlayer.isOnline()", "org.bukkit.entity.Player.getInventory()", "player.getInventory().setContents(response.getNewContent())", "org.bukkit.OfflinePlayer.getPlayer()", "ru.zendal.session.TradeSessionManager.processTradeOffline(org.bukkit.entity.Player,ru.zendal.session.TradeOffline)", "org.bukkit.Bukkit.getOfflinePlayer(java.util.UUID)", "ru.zendal.session.TradeSessionManager.removeTradeOffline(ru.zendal.session.TradeOffline)", "ru.zendal.session.TradeSessionManager.getTradeOfflineById(java.lang.String)"], "Fixed commit": "df951c9809811431ae49652b662ffd262b4012b4", "Url": "https://api.github.com/repos/ZendalMinecraft/TradingPlatform", "Date": "2018-07-31T08:26:52Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.util.Log.e(\"Simple \", \"onPress\"); } catch (java.lang.Exception ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6933/buggy-version/app.src.main.java.com.example.rahulk.simplycustomkeyboard.SimpleIME.java", "BodyUseAPI": ["android.util.Log.e(java.lang.String,java.lang.String)"], "Fixed commit": "014d2ce47689dc41e89c9b0dfab4e2442f78668e", "Url": "https://api.github.com/repos/SagarGang/SystemCustomKeyBoard", "Date": "2018-02-07T16:22:39Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.util.Log.e(\"Simple \", \"onRelease\"); } catch (java.lang.Exception ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6933/buggy-version/app.src.main.java.com.example.rahulk.simplycustomkeyboard.SimpleIME.java", "BodyUseAPI": ["android.util.Log.e(java.lang.String,java.lang.String)"], "Fixed commit": "014d2ce47689dc41e89c9b0dfab4e2442f78668e", "Url": "https://api.github.com/repos/SagarGang/SystemCustomKeyBoard", "Date": "2018-02-07T16:22:39Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { googleApiAvailability = com.google.android.gms.common.GoogleApiAvailability.getInstance(); errorCode = googleApiAvailability.isGooglePlayServicesAvailable(this); com.google.android.gms.security.ProviderInstaller.installIfNeeded(this); showThumbnailDialog(); } catch (com.google.android.gms.common.GooglePlayServicesRepairableException e) { android.util.Log.e(com.samirk433.quotebook.QuoteActivity.TAG, \"Google Play Exception\", e); if (googleApiAvailability != null) googleApiAvailability.getErrorDialog(this, errorCode, 1); } catch (com.google.android.gms.common.GooglePlayServicesNotAvailableException e) { android.util.Log.e(com.samirk433.quotebook.QuoteActivity.TAG, \"Google Play Exception\", e); if (googleApiAvailability != null) googleApiAvailability.getErrorDialog(this, errorCode, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7427/buggy-version/app.src.main.java.com.samirk433.quotebook.QuoteActivity.java", "BodyUseAPI": ["com.google.android.gms.common.GoogleApiAvailability.getInstance()", "com.google.android.gms.common.GoogleApiAvailability.isGooglePlayServicesAvailable(com.samirk433.quotebook.QuoteActivity)", "com.samirk433.quotebook.QuoteActivity.showThumbnailDialog()", "com.google.android.gms.security.ProviderInstaller.installIfNeeded(com.samirk433.quotebook.QuoteActivity)"], "Fixed commit": "e08a81ab1a31e36296ef273f7f2ff3b73a1d122f", "Url": "https://api.github.com/repos/yasirh33/QuotBook-II", "Date": "2018-05-08T06:12:31Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { cmdInt = java.lang.Integer.parseInt(cmd); } catch (java.lang.NumberFormatException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1270/buggy-version/src.Driver.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "e05fe5b1b4f04591653365fac97d11c4fcf53b3e", "Url": "https://api.github.com/repos/cmchu3/ZendeskSearch", "Date": "2018-02-08T19:24:44Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ((com.example.bryan.togatheradproject.InterestActivity) (getActivity())).button_AddButton.setEnabled(true); } catch (java.lang.ClassCastException e) { android.util.Log.d(com.example.bryan.togatheradproject.EditProfileDialog.TAG, \"not from interest\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5341/buggy-version/app.src.main.java.com.example.bryan.togatheradproject.EditProfileDialog.java", "BodyUseAPI": ["com.example.bryan.togatheradproject.EditProfileDialog.getActivity()", "((com.example.bryan.togatheradproject.InterestActivity) (getActivity())).button_AddButton.setEnabled(boolean)"], "Fixed commit": "eaebe7f1de536e58ea249268f7bcc4f9b630d2d6", "Url": "https://api.github.com/repos/bryantanuwijaya/ToGatherADProject", "Date": "2018-10-01T06:20:25Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { graphCache.closeGraph(graphPath); } catch (java.lang.Throwable t) { org.jboss.windup.web.services.service.WindupExecutionService.LOG.log(java.util.logging.Level.FINE, (((\"Could not close the graph at: \" + graphPath) + \" due to: \") + (t.getMessage())), t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8578/buggy-version/services.src.main.java.org.jboss.windup.web.services.service.WindupExecutionService.java", "BodyUseAPI": ["org.jboss.windup.web.addons.websupport.rest.graph.GraphCache.closeGraph(java.nio.file.Path)"], "Fixed commit": "40943dc42523aba1c7c771126a69db53882f7d53", "Url": "https://api.github.com/repos/windup/windup-web", "Date": "2018-03-13T09:58:43Z"},
{"Line": "=>8", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((args.length) > 0) { if ((args[0].equals(\"-h\")) || (args[0].equals(\"--help\"))) { output += \"\\njava JPassGen [length] [lower] [upper] [digit] [punctuation]\" + \"\\n\\n\"; output += \"length - Length of the password.\" + \"\\n\"; output += \" 0 - default length\" + \"\\n\"; output += \"lower - Minimum number of lower case characters in password.\" + \"\\n\"; output += \"upper - Minimum number of upper case characters in password.\" + \"\\n\"; output += \"digit - Minimum number of digit characters in password.\" + \"\\n\"; output += \"punctuation - Minimum number of punctuation characters in password.\" + \"\\n\"; output += \" -1 - disable\" + \"\\n\"; output += \" 0 - random number\" + \"\\n\"; output += \" >0 - digit minimum number\" + \"\\n\\n\"; output += \"Examples:\" + \"\\n\"; output += \"---------\" + \"\\n\"; output += ((\"java JPassGen // Default length (\" + (passwordGenerator.getDefaultLength())) + \"characters) random password with default settings\") + \"\\n\"; output += \"java JPassGen 12 // 12 characters length random password with default settings\" + \"\\n\"; output += \"java JPassGen 12 -1 // 12 characters length random password, lowercase characters disabled \" + \"\\n\"; output += \"java JPassGen 12 0 3 // 12 characters length random password, random number lowercase characters, minimum 3 uppercase characters\" + \"\\n\"; output += \"java JPassGen 0 0 -1 3 2 // Default length random password, random number lowercase characters, disable uppercase, minimum 3 digit and minimum 2 punctuation characters\" + \"\\n\"; }else if ((java.lang.Integer.parseInt(args[0])) > 0) { passLength = java.lang.Integer.parseInt(args[0]); } if ((args.length) > 1) { if ((java.lang.Integer.parseInt(args[1])) < 0) { passwordGenerator.disableLower(); }else { passwordGenerator.enableLower(); passwordGenerator.setMinNumberLower(java.lang.Integer.parseInt(args[1])); } if ((args.length) > 2) { if ((java.lang.Integer.parseInt(args[2])) < 0) { passwordGenerator.disableUpper(); }else { passwordGenerator.enableUpper(); passwordGenerator.setMinNumberUpper(java.lang.Integer.parseInt(args[2])); } if ((args.length) > 3) { if ((java.lang.Integer.parseInt(args[3])) < 0) { passwordGenerator.disableDigit(); }else { passwordGenerator.enableDigit(); passwordGenerator.setMinNumberDigit(java.lang.Integer.parseInt(args[3])); } if ((args.length) > 4) { if ((java.lang.Integer.parseInt(args[4])) < 0) { passwordGenerator.disablePunctuation(); }else { passwordGenerator.enablePunctuation(); passwordGenerator.setMinNumberPunctuation(java.lang.Integer.parseInt(args[4])); } } } } } } if ((output.length()) == 0) { output = passwordGenerator.generate(passLength); } java.lang.System.out.println(output); } catch (java.lang.NumberFormatException e) { java.lang.System.out.println(\"Type:\\n\"); java.lang.System.out.println(\"java JPassGen --help\"); java.lang.System.out.println(\"or\"); java.lang.System.out.println(\"java JPassGen -h\\n\"); java.lang.System.out.println(\"for help!\"); } catch (PasswordLengthException e) { java.lang.System.out.println(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7834/buggy-version/src.JPassGen.java", "BodyUseAPI": ["PasswordGenerator.generate(int)", "PasswordGenerator.disableUpper()", "java.lang.String.equals(java.lang.String)", "PasswordGenerator.setMinNumberUpper(int)", "PasswordGenerator.setMinNumberDigit(int)", "PasswordGenerator.enablePunctuation()", "java.lang.Integer.parseInt(java.lang.String)", "PasswordGenerator.enableDigit()", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.equals(java.lang.String)", "PasswordGenerator.getDefaultLength()", "java.io.PrintStream.println(java.lang.String)", "PasswordGenerator.enableLower()", "PasswordGenerator.setMinNumberLower(int)", "PasswordGenerator.disablePunctuation()", "java.lang.String.length()", "PasswordGenerator.enableUpper()", "PasswordGenerator.setMinNumberPunctuation(int)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "PasswordGenerator.disableDigit()", "java.lang.Integer.parseInt(java.lang.String)", "PasswordGenerator.disableLower()"], "Fixed commit": "1a8261ee16d5ac59ecac963cb119521e2b9eae44", "Url": "https://api.github.com/repos/kissn76/JPassGen", "Date": "2018-09-28T08:36:28Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { image = new java.io.File(((((filePath.substring(0, filePath.lastIndexOf('\\\\'))) + \"\\\\\") + (metaTokens.get(\"icon\"))) + \".png\")); } catch (java.lang.StringIndexOutOfBoundsException e) { image = new java.io.File((((filePath + \"\\\\\") + (metaTokens.get(\"icon\"))) + \".png\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7373/buggy-version/src.main.java.io.github.wheezygold7931.discordthemer.DiscordThemer.java", "BodyUseAPI": ["java.lang.String.lastIndexOf(char)", "java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "fe676ca31068f3b1f6be5092f72f53b38da432c6", "Url": "https://api.github.com/repos/JRoy/discord-themer", "Date": "2018-05-05T02:29:16Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { segundos = java.lang.Integer.parseInt(javax.swing.JOptionPane.showInputDialog(this, \"Segundos:\")); } catch (java.lang.Exception e) { segundos = 5; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4483/buggy-version/AsdChallenge.src.app.App.java", "BodyUseAPI": ["javax.swing.JOptionPane.showInputDialog(app.App,java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "641cc34ce9793529296582ca829dd3056050e455", "Url": "https://api.github.com/repos/pperezp/asd-challenge", "Date": "2018-04-27T04:40:55Z"},
{"Line": "=>590", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return linkTarget.replaceFirst(currTestSuiteDir, this.testProject); } catch (java.lang.Exception eX) { nl.dictu.prova.plugins.reporting.simplereport.SimpleReport.LOGGER.warn((\"Creating relative link failed, using normal link instead: \" + eX)); return linkTarget; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9268/buggy-version/plugins.reporting.simpleReport.src.main.java.nl.dictu.prova.plugins.reporting.simplereport.SimpleReport.java", "BodyUseAPI": ["java.lang.String.replaceFirst(java.lang.String,java.lang.String)"], "Fixed commit": "83e53289349cf11f5faa9e64c14ab3652f98a8d7", "Url": "https://api.github.com/repos/Dictu/Prova-V1", "Date": "2018-01-10T10:49:28Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.io.FileWriter fileWriter = new java.io.FileWriter(contactApplication.ApplicationFunctions.FILENAME, true); java.io.BufferedWriter bw = new java.io.BufferedWriter(fileWriter); java.io.PrintWriter pw = new java.io.PrintWriter(bw); pw.flush(); pw.close(); javax.swing.JOptionPane.showMessageDialog(null, \"record saved\"); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7810/buggy-version/src.contactApplication.ApplicationFunctions.java", "BodyUseAPI": ["javax.swing.JOptionPane.showMessageDialog(<nulltype>,java.lang.String)", "java.io.PrintWriter.close()", "java.io.PrintWriter.flush()"], "Fixed commit": "d4fac72e5839380f40e616b53f3c9176ba85220d", "Url": "https://api.github.com/repos/creigPhiri/ContactApplication", "Date": "2018-03-28T23:38:58Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { name = java.net.URLDecoder.decode(lists.get(0).getName(), \"UTF-8\"); } catch (java.io.UnsupportedEncodingException e) { com.love.service.impl.UserServiceImpl.logger.error(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9886/buggy-version/src.main.java.com.love.service.impl.UserServiceImpl.java", "BodyUseAPI": ["lists.get(0).getName()", "java.net.URLDecoder.decode(lists.get(0).getName(),java.lang.String)", "java.util.List<com.love.model.User>.get(int)"], "Fixed commit": "8cf69c5cf21038d06a08c6601c26b0a7c018f7e8", "Url": "https://api.github.com/repos/NiccoLiu/name_of_love_web", "Date": "2018-04-28T03:13:16Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (com.google.android.youtube.player.YouTubeIntents.canResolvePlayVideoIntentWithOptions(com.example.jeffr.popularmovieapp.DetailedMovieActivity.context)) { com.example.jeffr.popularmovieapp.DetailedMovieActivity.context.startActivity(com.google.android.youtube.player.YouTubeStandalonePlayer.createVideoIntent(com.example.jeffr.popularmovieapp.DetailedMovieActivity.activity, com.example.jeffr.popularmovieapp.DetailedMovieActivity.API_KEY2, s, 0, true, true)); } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/374/buggy-version/app.src.main.java.com.example.jeffr.popularmovieapp.FetchTrailer.java", "BodyUseAPI": ["com.google.android.youtube.player.YouTubeIntents.canResolvePlayVideoIntentWithOptions(com.example.jeffr.popularmovieapp.FetchTrailer)", "com.example.jeffr.popularmovieapp.FetchTrailer.startActivity(com.google.android.youtube.player.YouTubeStandalonePlayer.createVideoIntent(com.example.jeffr.popularmovieapp.DetailedMovieActivity.activity, com.example.jeffr.popularmovieapp.DetailedMovieActivity.API_KEY2, s, 0, true, true))", "com.google.android.youtube.player.YouTubeStandalonePlayer.createVideoIntent(com.example.jeffr.popularmovieapp.FetchTrailer,com.example.jeffr.popularmovieapp.DetailedMovieActivity.API_KEY2,java.lang.String,int,boolean,boolean)"], "Fixed commit": "43559470645e9e58d6620daf5af97783f5824a96", "Url": "https://api.github.com/repos/jfleurent/PopularMoviesApp", "Date": "2018-05-22T09:37:47Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { loadTextures(folder, renderingFactory, imageTypes); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4517/buggy-version/core.src.main.se.tevej.game.view.BuildingEntityRendereable.java", "BodyUseAPI": ["main.se.tevej.game.view.BuildingEntityRendereable.loadTextures(java.io.File,main.se.tevej.game.view.rendering.RenderingFactory,java.util.List<java.lang.String>)"], "Fixed commit": "5b6ae59cfbbf00fe8462916c6d92695c304c775f", "Url": "https://api.github.com/repos/Tevej/DayInGothenburgInTime", "Date": "2018-09-28T18:01:53Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { checkoutManager.commit(); } catch (java.lang.Exception e) { org.sonar.plugins.scm.starteam.StarteamConnection.LOG.error(\"Cannot commit checkout\", e); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6798/buggy-version/src.main.java.org.sonar.plugins.scm.starteam.StarteamConnection.java", "BodyUseAPI": ["org.sonar.plugins.scm.starteam.CheckoutManager.commit()"], "Fixed commit": "28466ce2111b4183c4231ea7fc752e360d6a4783", "Url": "https://api.github.com/repos/ahunigel/sonar-scm-starteam", "Date": "2018-05-10T09:25:24Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { blockOperationsResult.operationId = object_id.create_from_string(jsonElement.getAsJsonArray().get(1).getAsString()); } catch (java.lang.Exception e) { blockOperationsResult.operationId = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1883/buggy-version/src.main.java.com.github.chouheiwa.wallet.socket.chain.BlockOperationsResult.java", "BodyUseAPI": ["jsonElement.getAsJsonArray().get(1).getAsString()", "com.github.chouheiwa.wallet.socket.chain.BlockOperationsResult.BlockOperationsResultDeserializer.create_from_string(jsonElement.getAsJsonArray().get(1).getAsString())", "com.google.gson.JsonElement.getAsJsonArray()", "jsonElement.getAsJsonArray().get(int)"], "Fixed commit": "b1faeabd4990611f77f9e5b694cbf7bcd3a41478", "Url": "https://api.github.com/repos/chouheiwa/bitshares_wallet", "Date": "2018-08-17T07:08:02Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (direction == (Player.Direction.NORTH)) { if (isAccessible(currentMap[(y - wall)][(x + 1)], integer)) { return true; } }else if (direction == (Player.Direction.EAST)) { if (isAccessible(currentMap[(y + 1)][(x + wall)], integer)) { return true; } }else if (direction == (Player.Direction.SOUTH)) { if (isAccessible(currentMap[(y + wall)][(x - 1)], integer)) { return true; } }else if (direction == (Player.Direction.WEST)) { if (isAccessible(currentMap[(y - 1)][(x - wall)], integer)) { return true; } } return false; } catch (java.lang.ArrayIndexOutOfBoundsException exception) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4456/buggy-version/GameWorld.src.GameWorld.Game.java", "BodyUseAPI": ["GameWorld.Game.isAccessible(currentMap[(y + 1)][(x + wall)],java.lang.Integer)", "GameWorld.Game.isAccessible(currentMap[(y - 1)][(x - wall)],java.lang.Integer)", "GameWorld.Game.isAccessible(currentMap[(y - wall)][(x + 1)],java.lang.Integer)", "GameWorld.Game.isAccessible(currentMap[(y + wall)][(x - 1)],java.lang.Integer)"], "Fixed commit": "44d3d16f5883a8d5bba48eba6b900f95824931b5", "Url": "https://api.github.com/repos/xavierbroadhead/AdventureGame", "Date": "2018-10-15T03:56:29Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { twitter.ApiMain.makeConnection((((\"https://api.twitter.com/1.1/statuses/user_timeline.json?screen_name=\" + name) + \"&count=\") + number)); twitter.ApiMain.connection.setRequestMethod(\"GET\"); twitter.ApiMain.connection.setRequestProperty(\"Authorization\", ((\"Bearer\" + \" \") + (twitter.ApiMain.bearer_key))); twitter.ApiMain.connection.connect(); if (twitter.ApiMain.connection.getResponseMessage().equals(\"OK\")) { twitter.JSONObject json = twitter.ApiMain.inputStreamToJSON(); twitter.JSONArray array = new twitter.JSONArray(json); for (int i = 0; i < (array.length()); i++) { twitter.JSONObject dataObj = ((twitter.JSONObject) (array.get(i))); output = output + (dataObj.toString()); } }else { output = output + \"Cannot connect to api\"; } } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/488/buggy-version/src.main.java.twitter.ApiMain.java", "BodyUseAPI": ["javax.net.ssl.HttpsURLConnection.connect()", "javax.net.ssl.HttpsURLConnection.getResponseMessage()", "twitter.ApiMain.inputStreamToJSON()", "java.lang.String.equals(java.lang.String)", "javax.net.ssl.HttpsURLConnection.setRequestMethod(java.lang.String)", "twitter.JSONArray.length()", "twitter.JSONObject.toString()", "twitter.ApiMain.makeConnection(java.lang.String)", "javax.net.ssl.HttpsURLConnection.setRequestProperty(java.lang.String,java.lang.String)", "twitter.JSONArray.get(int)"], "Fixed commit": "64330139f2c0408e4bcd62d09679eb7e50b9ce56", "Url": "https://api.github.com/repos/JohnnyLiang1018/KarafTwitterAPI", "Date": "2018-10-07T23:37:12Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mDefaultUserAgent = new android.webkit.WebView(appContext).getSettings().getUserAgentString(); } catch (java.lang.RuntimeException re) { mDefaultUserAgent = \"Mozilla/5.0 (Linux; Android 6.0; default FluxC UA; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/44.0.2403.119 Mobile Safari/537.36\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1263/buggy-version/fluxc.src.main.java.org.wordpress.android.fluxc.network.UserAgent.java", "BodyUseAPI": ["android.webkit.WebView.getSettings()", "new android.webkit.WebView(appContext).getSettings().getUserAgentString()"], "Fixed commit": "64ae250711546da2c5aa6b28b43cedc956ba2b58", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android", "Date": "2018-01-26T16:08:15Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { event.setColor(java.awt.Color.decode((\"#\" + (a.attr(\"data-color\"))))); } catch (java.lang.Exception ex) { event.setColor(java.awt.Color.WHITE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2223/buggy-version/src.main.java.org.magic.services.MTGEventProvider.java", "BodyUseAPI": ["org.jsoup.nodes.Element.attr(java.lang.String)", "org.magic.api.beans.MagicEvent.setColor(java.awt.Color)", "java.awt.Color.decode((\"#\" + (a.attr(\"data-color\"))))"], "Fixed commit": "2edd216b55d6a9e54ec5a2b1f0e1af2358124042", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2018-02-18T21:45:20Z"},
{"Line": "=>606", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { temperature = ((micdoodle8.mods.galacticraft.api.prefab.world.gen.WorldProviderSpace) (temp)).getThermalLevelModifier(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7162/buggy-version/src.main.java.com.mjr.extraplanets.client.gui.screen.CustomCelestialSelection.java", "BodyUseAPI": ["net.minecraft.world.WorldProvider.getThermalLevelModifier()"], "Fixed commit": "e5a78fc0a6db117412684edbdf8357d115b0d7d0", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-01-04T19:40:07Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { userName = io.jsonwebtoken.Jwts.parser().setSigningKey(com.boot.cut_costs.service.AuthenticationService.SECRET).parseClaimsJws(token.replace(com.boot.cut_costs.service.AuthenticationService.TOKEN_PREFIX, \"\")).getBody().getSubject(); } catch (java.lang.Exception e) { throw new org.springframework.security.authentication.BadCredentialsException(\"Wrong credentials provided\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1503/buggy-version/src.main.java.com.boot.cut_costs.service.AuthenticationService.java", "BodyUseAPI": ["io.jsonwebtoken.Jwts.parser()", "io.jsonwebtoken.Jwts.parser().setSigningKey(java.lang.String)", "io.jsonwebtoken.Jwts.parser().setSigningKey(com.boot.cut_costs.service.AuthenticationService.SECRET).parseClaimsJws(java.lang.String)", "io.jsonwebtoken.Jwts.parser().setSigningKey(com.boot.cut_costs.service.AuthenticationService.SECRET).parseClaimsJws(token.replace(com.boot.cut_costs.service.AuthenticationService.TOKEN_PREFIX, \"\")).getBody()", "java.lang.String.replace(java.lang.String,java.lang.String)", "io.jsonwebtoken.Jwts.parser().setSigningKey(com.boot.cut_costs.service.AuthenticationService.SECRET).parseClaimsJws(token.replace(com.boot.cut_costs.service.AuthenticationService.TOKEN_PREFIX, \"\")).getBody().getSubject()"], "Fixed commit": "f72a75a4110c29c063075d4a7c26f35340ceb69f", "Url": "https://api.github.com/repos/arian-h/cut-costs", "Date": "2018-01-31T07:17:47Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (java.io.File file : listOfFiles) { if (file.isFile()) { java.lang.String fileString = sourceToString(file.getAbsolutePath()); parseDirectory(fileString); } } } catch (java.lang.NullPointerException e) { java.lang.System.out.println(\"Could not find any .java files\"); java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8769/buggy-version/DeclarationCounter.java", "BodyUseAPI": ["java.io.File.isFile()", "DeclarationCounter.parseDirectory(java.lang.String)", "java.io.File.getAbsolutePath()", "DeclarationCounter.sourceToString(java.lang.String)"], "Fixed commit": "09822ad0936c52d238225b353067829fa10ce4a8", "Url": "https://api.github.com/repos/CT-Clark/SENG300", "Date": "2018-03-14T02:24:39Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { for (int i = head; i < (tail); i++) copy[(((tail) - i) - 1)] = array[i]; } catch (java.lang.Exception e) { java.lang.System.out.println(((((\"tail-head-i:\" + (tail)) + \"-\") + (head)) + \"-\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6894/buggy-version/src.main.java.RandomizedQueue.java", "BodyUseAPI": [], "Fixed commit": "57d19df3afe8055f4e4059667853f302daf02330", "Url": "https://api.github.com/repos/gsayas/DequeAndRandomizedQueue", "Date": "2018-09-15T14:10:59Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Integer num = transactionService.newAddress(); if (num > 0) { log.info(java.lang.String.format(\"%s user update eth address\", num)); } } catch (java.io.IOException e) { e.printStackTrace(); } finally { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/8583/buggy-version/src.main.java.com.mvc.sell.console.job.EthJob.java", "BodyUseAPI": ["com.mvc.sell.console.job.EthJob.info(java.lang.String)", "com.mvc.sell.console.service.TransactionService.newAddress()", "java.lang.String.format(java.lang.String,java.lang.Integer)"], "Fixed commit": "9042b3fe500a0d3b375e9978373916e0947ef729", "Url": "https://api.github.com/repos/mvchain/token-exchange-protocol-interior", "Date": "2018-10-16T05:57:00Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Integer num = projectService.updateStatus(); if (num > 0) { log.info(java.lang.String.format(\"%s project update status\", num)); } } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/8583/buggy-version/src.main.java.com.mvc.sell.console.job.ProjectJob.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.Integer)", "com.mvc.sell.console.job.ProjectJob.info(java.lang.String)", "com.mvc.sell.console.service.ProjectService.updateStatus()"], "Fixed commit": "9042b3fe500a0d3b375e9978373916e0947ef729", "Url": "https://api.github.com/repos/mvchain/token-exchange-protocol-interior", "Date": "2018-10-16T05:57:00Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(500); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4520/buggy-version/core.src.main.java.org.talust.core.core.SynBlock.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "157b1eda90b49f9c66bd1e6e040db07b6665cc76", "Url": "https://api.github.com/repos/TalustOrg/talust", "Date": "2018-08-22T08:31:02Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (savedInstanceState == null) { android.os.Bundle extras = getIntent().getExtras(); if (extras == null) { }else { java.lang.String method = extras.getString(\"methodName\"); java.lang.String picLoc = extras.getString(\"pictureLocation\"); if ((method.equals(\"textFromEditImage\")) && (picLoc != null)) { textFromEditImage(picLoc); } } } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/499/buggy-version/Phonote.app.src.main.java.cmps121.phonote.ImageToText.java", "BodyUseAPI": ["cmps121.phonote.ImageToText.textFromEditImage(java.lang.String)", "android.os.Bundle.getString(java.lang.String)", "cmps121.phonote.ImageToText.getIntent()", "java.lang.String.equals(java.lang.String)", "getIntent().getExtras()", "android.os.Bundle.getString(java.lang.String)"], "Fixed commit": "c0b1ac1a33fa4fd3c41a0feed9cb7c900bb4b3c3", "Url": "https://api.github.com/repos/sgalindo/cmps121_app", "Date": "2018-06-06T10:44:38Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.bitcoinj.tools.BuildCheckpoints.writeBinaryCheckpoints(checkpoints, plainFile); org.bitcoinj.tools.BuildCheckpoints.writeTextualCheckpoints(checkpoints, textFile); peerGroup.stop(); store.close(); org.bitcoinj.tools.BuildCheckpoints.sanityCheck(plainFile, checkpoints.size()); org.bitcoinj.tools.BuildCheckpoints.sanityCheck(textFile, checkpoints.size()); } catch (java.lang.Exception ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/5187/buggy-version/tools.src.main.java.org.bitcoinj.tools.BuildCheckpoints.java", "BodyUseAPI": ["org.bitcoinj.tools.BuildCheckpoints.writeBinaryCheckpoints(java.util.TreeMap<java.lang.Integer, org.bitcoinj.tools.StoredBlock>,java.io.File)", "org.bitcoinj.store.BlockStore.close()", "org.bitcoinj.tools.PeerGroup.stop()", "org.bitcoinj.tools.BuildCheckpoints.sanityCheck(java.io.File,checkpoints.size())", "org.bitcoinj.tools.BuildCheckpoints.sanityCheck(java.io.File,checkpoints.size())", "org.bitcoinj.tools.BuildCheckpoints.writeTextualCheckpoints(java.util.TreeMap<java.lang.Integer, org.bitcoinj.tools.StoredBlock>,java.io.File)", "java.util.TreeMap<java.lang.Integer, org.bitcoinj.tools.StoredBlock>.size()", "java.util.TreeMap<java.lang.Integer, org.bitcoinj.tools.StoredBlock>.size()"], "Fixed commit": "3215faa41edcbed58acbb76e6a86c267a1fbf57c", "Url": "https://api.github.com/repos/Giszmo/bitcoinj", "Date": "2018-03-04T02:09:53Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { propertiesResources = resolver.getResources(((lodsve.core.properties.init.ParamsHome.getInstance().getParamsRoot()) + \"/i18n/**/*.properties\")); } catch (java.io.IOException e) { propertiesResources = new org.springframework.core.io.Resource[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4871/buggy-version/lodsve-core.src.main.java.lodsve.core.properties.i18n.MessageSourceLoader.java", "BodyUseAPI": ["org.springframework.core.io.support.ResourcePatternResolver.getResources(((lodsve.core.properties.init.ParamsHome.getInstance().getParamsRoot()) + \"/i18n/**/*.properties\"))", "lodsve.core.properties.init.ParamsHome.getInstance()", "lodsve.core.properties.init.ParamsHome.getInstance().getParamsRoot()"], "Fixed commit": "86569540c80cb3953e7ebc064f003fc26c4481aa", "Url": "https://api.github.com/repos/lodsve/lodsve-framework", "Date": "2018-01-04T05:29:50Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { htmlResources = resolver.getResources(((lodsve.core.properties.init.ParamsHome.getInstance().getParamsRoot()) + \"/i18n/**/*.html\")); } catch (java.io.IOException e) { htmlResources = new org.springframework.core.io.Resource[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4871/buggy-version/lodsve-core.src.main.java.lodsve.core.properties.i18n.MessageSourceLoader.java", "BodyUseAPI": ["lodsve.core.properties.init.ParamsHome.getInstance().getParamsRoot()", "lodsve.core.properties.init.ParamsHome.getInstance()", "org.springframework.core.io.support.ResourcePatternResolver.getResources(((lodsve.core.properties.init.ParamsHome.getInstance().getParamsRoot()) + \"/i18n/**/*.html\"))"], "Fixed commit": "86569540c80cb3953e7ebc064f003fc26c4481aa", "Url": "https://api.github.com/repos/lodsve/lodsve-framework", "Date": "2018-01-04T05:29:50Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { txtResources = resolver.getResources(((lodsve.core.properties.init.ParamsHome.getInstance().getParamsRoot()) + \"/i18n/**/*.txt\")); } catch (java.io.IOException e) { txtResources = new org.springframework.core.io.Resource[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4871/buggy-version/lodsve-core.src.main.java.lodsve.core.properties.i18n.MessageSourceLoader.java", "BodyUseAPI": ["org.springframework.core.io.support.ResourcePatternResolver.getResources(((lodsve.core.properties.init.ParamsHome.getInstance().getParamsRoot()) + \"/i18n/**/*.txt\"))", "lodsve.core.properties.init.ParamsHome.getInstance().getParamsRoot()", "lodsve.core.properties.init.ParamsHome.getInstance()"], "Fixed commit": "86569540c80cb3953e7ebc064f003fc26c4481aa", "Url": "https://api.github.com/repos/lodsve/lodsve-framework", "Date": "2018-01-04T05:29:50Z"},
{"Line": "=>1572", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { gfyItem = response.body().getGfyItem(); } catch (java.lang.Exception e) { android.util.Log.e(\"GFYCAT_RESPONSE_ERROR\", (((\"Failed in attempt to retrieve gfycat object for hash \" + gfycatHash) + \". \") + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/1875/buggy-version/app.src.main.java.com.sometimestwo.moxie.FragmentHome.java", "BodyUseAPI": ["response.body().getGfyItem()", "retrofit2.Response<com.sometimestwo.moxie.Model.GfycatWrapper>.body()"], "Fixed commit": "e08262316289aa0ddbe9ccaf76be773afe6cddfa", "Url": "https://api.github.com/repos/izikperz/Jumble", "Date": "2018-09-23T01:02:24Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { xmlOut.writeStartDocument(\"UTF-8\", \"1.0\"); xmlOut.writeStartElement(\"message\"); xmlOut.writeAttribute(\"sender\", sender); } catch (java.lang.NullPointerException e) { lostConnection(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4919/buggy-version/src.session.User.java", "BodyUseAPI": ["javax.xml.stream.XMLStreamWriter.writeAttribute(java.lang.String,java.lang.String)", "javax.xml.stream.XMLStreamWriter.writeStartDocument(java.lang.String,java.lang.String)", "javax.xml.stream.XMLStreamWriter.writeStartElement(java.lang.String)"], "Fixed commit": "6f89a4f625019f45826dcaa6689bd800011c7583", "Url": "https://api.github.com/repos/thaggus-kth/LeChatt", "Date": "2018-02-28T20:00:26Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { info.nightscout.androidaps.plugins.ConfigBuilder.ConfigBuilderPlugin.getCommandQueue().readStatus(\"Pump driver changed.\", null); } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7135/buggy-version/app.src.main.java.info.nightscout.androidaps.interfaces.PluginBase.java", "BodyUseAPI": ["info.nightscout.androidaps.plugins.ConfigBuilder.ConfigBuilderPlugin.getCommandQueue().readStatus(java.lang.String,<nulltype>)", "info.nightscout.androidaps.plugins.ConfigBuilder.ConfigBuilderPlugin.getCommandQueue()"], "Fixed commit": "ad74a9ba9a72ef708cbc24169cddf072b1fe91ec", "Url": "https://api.github.com/repos/MilosKozak/AndroidAPS", "Date": "2018-04-02T08:29:19Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String[] split = line.split(\"\\\\t\"); java.lang.String id = split[4]; results.add(id); if ((results.size()) == numOfResults) break; } catch (java.lang.Exception e) { e.printStackTrace(); logger.warning((((\"Failed to retrieve MetaCyc ID from URL \" + queryURL) + \", line \") + line)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/444/buggy-version/src.main.java.net.sf.mzmine.modules.peaklistmethods.identification.onlinedbsearch.databases.MetaCycGateway.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "java.lang.String.split(java.lang.String)", "java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "b0be0bdebd6c52086e42766e7c013ccd957fa8bb", "Url": "https://api.github.com/repos/mzmine/mzmine2", "Date": "2018-03-30T16:08:10Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((imgURLs.size()) > 0) { setImage(imgURLs.get(0), galleryImage, mAppend); mSelectedImage = imgURLs.get(0); }else { android.widget.Toast.makeText(getActivity(), \"Error while displaying directory\", Toast.LENGTH_SHORT).show(); } } catch (java.lang.ArrayIndexOutOfBoundsException e) { android.util.Log.d(com.example.mateusrovari.instagramclone.Share.GalleryFragment.TAG, (\"setupGridView: ArrayIndexOutOfBoundsException: \" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/5777/buggy-version/app.src.main.java.com.example.mateusrovari.instagramclone.Share.GalleryFragment.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)", "java.util.ArrayList<java.lang.String>.get(int)", "com.example.mateusrovari.instagramclone.Share.GalleryFragment.getActivity()", "android.widget.Toast.makeText(getActivity(), \"Error while displaying directory\", Toast.LENGTH_SHORT).show()", "java.util.ArrayList<java.lang.String>.size()", "com.example.mateusrovari.instagramclone.Share.GalleryFragment.setImage(java.lang.String,android.widget.ImageView,java.lang.String)", "android.widget.Toast.makeText(getActivity(),java.lang.String,Toast.LENGTH_SHORT)"], "Fixed commit": "06399b8d8f901c6a8413e88aa8a57a08694fe892", "Url": "https://api.github.com/repos/MtsRovari/Instagram-Clone", "Date": "2018-09-08T01:29:26Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { hero = heroService.get(pet.getHeroid()); } catch (java.lang.Exception e) { hero = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/1896/buggy-version/pets.pets-web.src.main.java.hu.javanetacademy.hoe.pets.pets.web.PetDeleteServlet.java", "BodyUseAPI": ["hu.javanetacademy.hoe.hero.service.object.HeroService.get(pet.getHeroid())", "hu.javanetacademy.hoe.pets.dao.model.Pet.getHeroid()"], "Fixed commit": "e716a3b27261bfbf37df6c42f028ef7ef6c5692a", "Url": "https://api.github.com/repos/JavaNetAcademy/due-prog3-corr-2018-19-I", "Date": "2018-10-22T09:13:32Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(5000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4782/buggy-version/src.main.java.de.failender.dsaonline.service.HeldRepositoryService.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "ff849ded23c3944e63455ca40455c0ea47bc4e25", "Url": "https://api.github.com/repos/Failender/dsa-online-rest", "Date": "2018-05-30T19:42:51Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { IP = com.projectileknockback.Loader.getIp(); } catch (java.io.IOException e) { IP = \"null\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6823/buggy-version/src.com.projectileknockback.Loader.java", "BodyUseAPI": ["com.projectileknockback.Loader.getIp()"], "Fixed commit": "3f74f6a6513e71fb8af3a6d7f5f17a8e4485ffe1", "Url": "https://api.github.com/repos/klokailo/ProjectileKnockback", "Date": "2018-04-24T06:54:03Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { part.delete(); } catch (final java.lang.IllegalStateException ex) { org.minijax.MinijaxMultipartForm.LOG.debug(ex.getMessage(), ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/3361/buggy-version/minijax-core.src.main.java.org.minijax.MinijaxMultipartForm.java", "BodyUseAPI": ["javax.servlet.http.Part.delete()"], "Fixed commit": "a74dc9a5649aee7cc00e2251080762c639bf9b1b", "Url": "https://api.github.com/repos/minijax/minijax", "Date": "2018-02-19T19:34:09Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { userAge = java.lang.Integer.parseInt(java.lang.String.valueOf(dataSnapshot.child(\"userAge\").getValue())); } catch (java.lang.Exception e) { userAge = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/8833/buggy-version/app.src.main.java.max.convives.settingsActivity.java", "BodyUseAPI": ["java.lang.String.valueOf(dataSnapshot.child(\"userAge\").getValue())", "dataSnapshot.child(\"userAge\").getValue()", "com.google.firebase.database.DataSnapshot.child(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "c4c6e9e59e543bc080b7154560fa62fb2d0f81d8", "Url": "https://api.github.com/repos/MaximSt85/convives", "Date": "2018-03-09T10:47:04Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { userSex = java.lang.Boolean.parseBoolean(java.lang.String.valueOf(dataSnapshot.child(\"userSex\").getValue())); } catch (java.lang.Exception e) { userSex = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/8833/buggy-version/app.src.main.java.max.convives.settingsActivity.java", "BodyUseAPI": ["java.lang.String.valueOf(dataSnapshot.child(\"userSex\").getValue())", "com.google.firebase.database.DataSnapshot.child(java.lang.String)", "dataSnapshot.child(\"userSex\").getValue()", "java.lang.Boolean.parseBoolean(java.lang.String)"], "Fixed commit": "c4c6e9e59e543bc080b7154560fa62fb2d0f81d8", "Url": "https://api.github.com/repos/MaximSt85/convives", "Date": "2018-03-09T10:47:04Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return getSeriesData().get(row).getData().get(column).getExtraValue().toString(); } catch (java.lang.Exception e) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/8919/buggy-version/src.com.sciome.charts.jfree.violin.SciomeViolinPlot.java", "BodyUseAPI": ["getSeriesData().get(int)", "getSeriesData().get(row).getData().get(column).getExtraValue().toString()", "getSeriesData().get(row).getData().get(column).getExtraValue()", "getSeriesData().get(row).getData()", "getSeriesData().get(row).getData().get(int)", "com.sciome.charts.jfree.violin.SciomeViolinPlot.4.getSeriesData()"], "Fixed commit": "71a7a2e281b8d45d85e30389407217780d8fb349", "Url": "https://api.github.com/repos/auerbachs/BMDExpress-2", "Date": "2018-07-09T20:23:41Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { date = formatter.parse(minedBlockModel.getDateCreated()); } catch (java.text.ParseException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4868/buggy-version/node.src.main.java.com.topchain.node.serviceImpl.MiningServiceImpl.java", "BodyUseAPI": ["com.topchain.node.model.bindingModel.MinedBlockModel.getDateCreated()", "java.text.DateFormat.parse(minedBlockModel.getDateCreated())"], "Fixed commit": "ad16c08f2efa9bf3b0c9e14ec8167976c8c1f086", "Url": "https://api.github.com/repos/eslavov11/topchain", "Date": "2018-03-08T19:49:06Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return com.evernote.android.job.GcmAvailableHelper.isGcmApiSupported(context); } catch (java.lang.Exception e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6380/buggy-version/library.src.main.java.com.evernote.android.job.JobApi.java", "BodyUseAPI": ["com.evernote.android.job.GcmAvailableHelper.isGcmApiSupported(android.content.Context)"], "Fixed commit": "0bff2a0dcfc905d346179dca4dfe8b9204bc99d6", "Url": "https://api.github.com/repos/evernote/android-job", "Date": "2018-07-20T23:49:27Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { @java.lang.SuppressWarnings(\"deprecation\") com.jaoafa.MyMaid2.Lib.Pointjao Pjao_wasbought = new com.jaoafa.MyMaid2.Lib.Pointjao(bookdata.getAuthor()); Pjao_wasbought.add(bookdata.getRequiredjao(), ((((\"\u672c\u300c\" + (bookdata.getTitle())) + \"\u300d\u3092\") + (player.getName())) + \"\u304c\u8cfc\u5165\u3057\u305f\u305f\u3081\")); } catch (java.lang.UnsupportedOperationException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/1339/buggy-version/src.main.java.com.jaoafa.MyMaid2.Command.Cmd_Book.java", "BodyUseAPI": ["org.bukkit.entity.Player.getName()", "com.jaoafa.MyMaid2.Command.MyMaidBookData.getRequiredjao()", "com.jaoafa.MyMaid2.Lib.Pointjao.add(int,((((\"\u672c\u300c\" + (bookdata.getTitle())) + \"\u300d\u3092\") + (player.getName())) + \"\u304c\u8cfc\u5165\u3057\u305f\u305f\u3081\"))", "com.jaoafa.MyMaid2.Command.MyMaidBookData.getTitle()", "com.jaoafa.MyMaid2.Command.MyMaidBookData.getAuthor()"], "Fixed commit": "ff9af035adb39b7139bd8d555fee3d90f1da3538", "Url": "https://api.github.com/repos/jaoafa/MyMaid2", "Date": "2018-05-26T14:02:36Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { channelGroup = channelGroupService.createOrUpdate(channelGroup); } catch (java.lang.Exception e) { cn.com.yikangbao.api.admin.channelgroup.PrivateAdminChannelGroupController.logger.debug(\"error: {}\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7937/buggy-version/ins-admin.src.main.java.cn.com.yikangbao.api.admin.channelgroup.PrivateAdminChannelGroupController.java", "BodyUseAPI": ["cn.com.yikangbao.service.channelgroup.ChannelGroupService.createOrUpdate(cn.com.yikangbao.entity.channelgroup.ChannelGroup)"], "Fixed commit": "0ceaad0c3113189031f942e06f7bc49fe684108e", "Url": "https://api.github.com/repos/juyecys/ykb-web", "Date": "2018-02-23T09:21:42Z"},
{"Line": "=>397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mc.setPower(obj.get(\"card_faces\").getAsJsonArray().get(idface).getAsJsonObject().get(\"power\").getAsString()); mc.setToughness(obj.get(\"card_faces\").getAsJsonArray().get(idface).getAsJsonObject().get(\"toughness\").getAsString()); } catch (java.lang.Exception e) { logger.error((((mc.getName()) + \" has no power/toughness: \") + e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6603/buggy-version/src.main.java.org.magic.api.providers.impl.ScryFallProvider.java", "BodyUseAPI": ["obj.get(\"card_faces\").getAsJsonArray().get(idface).getAsJsonObject().get(java.lang.String)", "obj.get(\"card_faces\").getAsJsonArray().get(idface).getAsJsonObject().get(\"toughness\").getAsString()", "com.google.gson.JsonObject.get(java.lang.String)", "obj.get(\"card_faces\").getAsJsonArray().get(int)", "com.google.gson.JsonObject.get(java.lang.String)", "obj.get(\"card_faces\").getAsJsonArray().get(idface).getAsJsonObject().get(java.lang.String)", "org.magic.api.beans.MagicCard.setToughness(obj.get(\"card_faces\").getAsJsonArray().get(idface).getAsJsonObject().get(\"toughness\").getAsString())", "obj.get(\"card_faces\").getAsJsonArray().get(idface).getAsJsonObject()", "obj.get(\"card_faces\").getAsJsonArray().get(idface).getAsJsonObject().get(\"power\").getAsString()", "obj.get(\"card_faces\").getAsJsonArray()", "org.magic.api.beans.MagicCard.setPower(obj.get(\"card_faces\").getAsJsonArray().get(idface).getAsJsonObject().get(\"power\").getAsString())", "obj.get(\"card_faces\").getAsJsonArray()", "obj.get(\"card_faces\").getAsJsonArray().get(idface).getAsJsonObject()", "obj.get(\"card_faces\").getAsJsonArray().get(int)"], "Fixed commit": "5046e46bdef761af5da2b7ccd3897e88d3363af9", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2018-03-28T16:39:22Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (projectLocation.child(((\"xcuserdata/\" + currentUser) + \".xcuserdatad/xcschemes\")).exists()) { schemeFilesDirList.add(projectLocation.child(((\"xcuserdata/\" + currentUser) + \".xcuserdatad/xcschemes\"))); } if (projectLocation.child(\"xcshareddata/xcschemes\").exists()) { schemeFilesDirList.add(projectLocation.child(\"xcshareddata/xcschemes\")); } } catch (java.io.IOException ex) { ex.printStackTrace(); schemeList = null; } catch (java.lang.InterruptedException ex) { ex.printStackTrace(); schemeList = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/2242/buggy-version/src.main.java.au.com.rayh.XcodeProjectParser.java", "BodyUseAPI": ["projectLocation.child(((\"xcuserdata/\" + currentUser) + \".xcuserdatad/xcschemes\")).exists()", "hudson.FilePath.child(java.lang.String)", "projectLocation.child(\"xcshareddata/xcschemes\").exists()", "hudson.FilePath.child(java.lang.String)", "java.util.List<hudson.FilePath>.add(projectLocation.child(\"xcshareddata/xcschemes\"))", "hudson.FilePath.child(java.lang.String)", "java.util.List<hudson.FilePath>.add(projectLocation.child(((\"xcuserdata/\" + currentUser) + \".xcuserdatad/xcschemes\")))", "hudson.FilePath.child(java.lang.String)"], "Fixed commit": "52cd35e4308cddf8958e707ebffe9c28b543c1f6", "Url": "https://api.github.com/repos/kazuhidet/xcode-plugin", "Date": "2018-08-20T08:17:22Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(4000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/8093/buggy-version/cheetah-kv.src.main.java.hash.MapProxy.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "10c1d00f4ae948df083879ce989bdf9c1222b9e1", "Url": "https://api.github.com/repos/Ruan-Xin/cheetah", "Date": "2018-04-22T06:54:37Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mList = db.getSeenBirdList(); dateList = db.getSeenBirdDateList(); } catch (java.lang.RuntimeException e) { db.onCreate(db.getWritableDatabase()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/5711/buggy-version/OpenCV.app.src.main.java.com.example.charles.opencv.FeatureActivity.BirdBankActivity.java", "BodyUseAPI": ["com.example.charles.opencv.Database.BirdBankDatabase.getSeenBirdDateList()", "com.example.charles.opencv.Database.BirdBankDatabase.getSeenBirdList()"], "Fixed commit": "96d264678c62bb9d4ccc25a91deb712602053b25", "Url": "https://api.github.com/repos/lowejosh/team3432-capstone", "Date": "2018-08-06T17:00:43Z"},
{"Line": "=>424", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.fenixedu.academic.domain.degreeStructure.EctsGraduationGradeConversionTable ectsGraduationGradeConversionTable = org.fenixedu.academic.domain.degreeStructure.EctsTableIndex.getGraduationGradeConversionTable(registrationCurriculumBean.getRegistration().getDegree(), cycleType, academicInterval, processingDate); request.setAttribute(\"ectsGradeConversionTable\", ectsGraduationGradeConversionTable.getEctsTable().toString().split(\"\")); request.setAttribute(\"ectsGradePercentagesTable\", ectsGraduationGradeConversionTable.getPercentages().toString().split(\":\")); } catch (org.fenixedu.academic.domain.degreeStructure.NoEctsComparabilityTableFound noEctsException) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/1827/buggy-version/src.main.java.org.fenixedu.academic.ui.struts.action.administrativeOffice.student.RegistrationDA.java", "BodyUseAPI": ["org.fenixedu.academic.domain.degreeStructure.EctsTableIndex.getGraduationGradeConversionTable(registrationCurriculumBean.getRegistration().getDegree(),org.fenixedu.academic.domain.degreeStructure.CycleType,org.fenixedu.academic.domain.time.calendarStructure.AcademicInterval,org.joda.time.DateTime)", "ectsGraduationGradeConversionTable.getEctsTable().toString().split(java.lang.String)", "ectsGraduationGradeConversionTable.getPercentages().toString()", "registrationCurriculumBean.getRegistration().getDegree()", "org.fenixedu.academic.domain.degreeStructure.EctsGraduationGradeConversionTable.getPercentages()", "org.fenixedu.academic.dto.student.RegistrationCurriculumBean.getRegistration()", "javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,ectsGraduationGradeConversionTable.getPercentages().toString().split(\":\"))", "ectsGraduationGradeConversionTable.getPercentages().toString().split(java.lang.String)", "org.fenixedu.academic.domain.degreeStructure.EctsGraduationGradeConversionTable.getEctsTable()", "javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,ectsGraduationGradeConversionTable.getEctsTable().toString().split(\"\"))", "ectsGraduationGradeConversionTable.getEctsTable().toString()"], "Fixed commit": "f7e40c62934f8726a14d3ce541dbe09dd4af6a5f", "Url": "https://api.github.com/repos/qub-it/fenixedu-academic", "Date": "2018-04-04T10:42:09Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.jenkinsci.plugins.workflow.flow.FlowExecution execution = owner.get(); if (execution != null) { previousHadStep = (new org.jenkinsci.plugins.workflow.graphanalysis.DepthFirstScanner().findFirstMatch(execution, new org.jenkinsci.plugins.workflow.graphanalysis.NodeStepTypePredicate(step.getDescriptor()))) != null; } } catch (java.lang.Exception ex) { org.jenkinsci.plugins.workflow.multibranch.JobPropertyStep.LOGGER.log(java.util.logging.Level.FINE, \"Could not search for JobPropertyStep execution: previous run either had null execution due to legitimate error and shows as not-yet-started, or threw exception\", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/8856/buggy-version/src.main.java.org.jenkinsci.plugins.workflow.multibranch.JobPropertyStep.java", "BodyUseAPI": ["org.jenkinsci.plugins.workflow.multibranch.JobPropertyStep.getDescriptor()", "org.jenkinsci.plugins.workflow.flow.FlowExecutionOwner.get()", "org.jenkinsci.plugins.workflow.graphanalysis.DepthFirstScanner.findFirstMatch(org.jenkinsci.plugins.workflow.flow.FlowExecution,org.jenkinsci.plugins.workflow.graphanalysis.NodeStepTypePredicate)"], "Fixed commit": "0a06168aa4d21f8418d30bb904bcf0c4bff5c8cb", "Url": "https://api.github.com/repos/jenkinsci/workflow-multibranch-plugin", "Date": "2018-05-17T14:47:27Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { githubSearchResults = com.example.sawepeter.sunshine.utilities.NetworkUtils.getResponseFromHttpUrl(githubSearchurl); mSearchResultsTextView.setText(githubSearchResults); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7985/buggy-version/app.src.main.java.com.example.sawepeter.sunshine.MainActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)", "com.example.sawepeter.sunshine.utilities.NetworkUtils.getResponseFromHttpUrl(java.net.URL)"], "Fixed commit": "fe8ee71e6b543afaaa801d86ffb18cbe9bc43e71", "Url": "https://api.github.com/repos/sawepeter/Github_Query", "Date": "2018-05-26T10:41:11Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { instInfo = new massbank.GetInstInfo(massbank.MassBankEnv.get(MassBankEnv.KEY_BASE_URL)); } catch (java.sql.SQLException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7408/buggy-version/MassBank-Project.api-aar.src.main.java.massbank.api.MassBankAPI.java", "BodyUseAPI": ["massbank.MassBankEnv.get(MassBankEnv.KEY_BASE_URL)"], "Fixed commit": "01c5ff1d138ee2f11a2d4856dd4ef42e4689218f", "Url": "https://api.github.com/repos/MassBank/MassBank-web", "Date": "2018-04-20T08:57:10Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { new etu.swing.UI().setVisible(true); } catch (java.io.FileNotFoundException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6244/buggy-version/HeapSort_Visualisation.src.etu.swing.UI.java", "BodyUseAPI": ["etu.swing.UI.setVisible(boolean)"], "Fixed commit": "cb53fae127a7dfc908b54b69722373184ca41382", "Url": "https://api.github.com/repos/cherowl/java-project", "Date": "2018-07-04T11:40:09Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { setTurnScreenOn(true); } catch (java.lang.NoSuchMethodException e) { window.addFlags(WindowManager.LayoutParams.FLAG_TURN_SCREEN_ON); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/2775/buggy-version/library-projects.android.insomnia.src.com.commontime.cordova.plugins.insomnia.Insomnia.java", "BodyUseAPI": ["com.commontime.cordova.plugins.insomnia.Insomnia.setTurnScreenOn(boolean)"], "Fixed commit": "8b39e50b0fb68227b2b70de0b7ea2a0397ad1c1e", "Url": "https://api.github.com/repos/commontime/com.commontime.cordova.insomnia", "Date": "2018-09-05T08:37:42Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { setShowWhenLocked(true); } catch (java.lang.NoSuchMethodException e) { window.addFlags(WindowManager.LayoutParams.FLAG_SHOW_WHEN_LOCKED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/2775/buggy-version/library-projects.android.insomnia.src.com.commontime.cordova.plugins.insomnia.Insomnia.java", "BodyUseAPI": ["com.commontime.cordova.plugins.insomnia.Insomnia.setShowWhenLocked(boolean)"], "Fixed commit": "8b39e50b0fb68227b2b70de0b7ea2a0397ad1c1e", "Url": "https://api.github.com/repos/commontime/com.commontime.cordova.insomnia", "Date": "2018-09-05T08:37:42Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { inRange = inRange(java.lang.Integer.valueOf(command.getWord(3)), java.lang.Integer.valueOf(command.getWord(4))); } catch (java.lang.Exception e) { java.lang.System.out.println(\"exception\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/8157/buggy-version/src.input.ProcessInput.java", "BodyUseAPI": ["java.lang.Integer.valueOf(command.getWord(3))", "input.Command.getWord(int)", "input.ProcessInput.inRange(java.lang.Integer,java.lang.Integer)", "input.Command.getWord(int)", "java.lang.Integer.valueOf(command.getWord(4))"], "Fixed commit": "f965faa0557955fdd453411876b646642758cd1d", "Url": "https://api.github.com/repos/DwangDistracted/Zombies-are-Vegan", "Date": "2018-10-26T19:31:54Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { googleClientId = environment.getProperty(\"spring.social.google.client-id\"); googleClientSecret = environment.getProperty(\"spring.social.google.client-secret\"); } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/3052/buggy-version/api.src.main.java.org.asaunin.socialnetwork.config.SocialConfiguration.java", "BodyUseAPI": ["org.springframework.core.env.Environment.getProperty(java.lang.String)", "org.springframework.core.env.Environment.getProperty(java.lang.String)"], "Fixed commit": "fd60c83c95f53277c2686a6254ba1ce0c8b6b189", "Url": "https://api.github.com/repos/ASaunin/social-network-spring", "Date": "2018-02-02T19:23:45Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { facebookClientId = environment.getProperty(\"spring.social.facebook.client-id\"); facebookClientSecret = environment.getProperty(\"spring.social.facebook.client-secret\"); } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/3052/buggy-version/api.src.main.java.org.asaunin.socialnetwork.config.SocialConfiguration.java", "BodyUseAPI": ["org.springframework.core.env.Environment.getProperty(java.lang.String)", "org.springframework.core.env.Environment.getProperty(java.lang.String)"], "Fixed commit": "fd60c83c95f53277c2686a6254ba1ce0c8b6b189", "Url": "https://api.github.com/repos/ASaunin/social-network-spring", "Date": "2018-02-02T19:23:45Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String name = mMediaBean.getFilePath().substring(((mMediaBean.getFilePath().lastIndexOf(\"/\")) + 1)); java.lang.String dir = mMediaBean.getFilePath().substring(0, ((mMediaBean.getFilePath().lastIndexOf(\"/\")) + 1)); android.util.Log.i(\"zhoup\", (((\"NAME = \" + name) + \" \\n dir =\") + dir)); urls.add((((com.PATHojiutech.dlna.utils.Constants.WEB_SERVER_IP) + dir) + (java.net.URLEncoder.encode(name, \"utf-8\")))); android.util.Log.i(\"zhoup\", urls.get(0)); } catch (java.lang.Exception e) { urls.add(((com.PATHojiutech.dlna.utils.Constants.WEB_SERVER_IP) + (mMediaBean.getFilePath()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/1611/buggy-version/app.src.main.java.com.PATHojiutech.dlna.mvp.activity.ControlActivity.java", "BodyUseAPI": ["com.PATHojiutech.dlna.bean.MaterialBean.getFilePath()", "mMediaBean.getFilePath().substring(int,((mMediaBean.getFilePath().lastIndexOf(\"/\")) + 1))", "com.PATHojiutech.dlna.bean.MaterialBean.getFilePath()", "java.net.URLEncoder.encode(java.lang.String,java.lang.String)", "mMediaBean.getFilePath().lastIndexOf(java.lang.String)", "mMediaBean.getFilePath().lastIndexOf(java.lang.String)", "android.util.Log.i(java.lang.String,java.lang.String)", "java.util.List<java.lang.String>.get(int)", "mMediaBean.getFilePath().substring(((mMediaBean.getFilePath().lastIndexOf(\"/\")) + 1))", "android.util.Log.i(java.lang.String,java.lang.String)", "com.PATHojiutech.dlna.bean.MaterialBean.getFilePath()", "java.util.List<java.lang.String>.add((((com.PATHojiutech.dlna.utils.Constants.WEB_SERVER_IP) + dir) + (java.net.URLEncoder.encode(name, \"utf-8\"))))", "com.PATHojiutech.dlna.bean.MaterialBean.getFilePath()"], "Fixed commit": "ab3542036728a81444e7c614d1b68c56e417466e", "Url": "https://api.github.com/repos/iorizhou/dlna", "Date": "2018-07-29T08:02:58Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { unableTimerTask(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6955/buggy-version/app.src.main.java.com.bit.fuxingwuye.activities.resetPwd.ResetPwdActivity.java", "BodyUseAPI": ["com.bit.fuxingwuye.activities.resetPwd.ResetPwdActivity.unableTimerTask()"], "Fixed commit": "1a6658afdfdc21db4a52d231db01c13b3ca3adf4", "Url": "https://api.github.com/repos/jackzjj/BitCommunityOwner", "Date": "2018-03-05T14:35:35Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { locationEngine.requestLocationUpdates(com.mapbox.android.telemetry.TelemetryService.getRequest(), callback, null); } catch (java.lang.SecurityException se) { android.util.Log.e(com.mapbox.android.telemetry.TelemetryService.TAG, se.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7022/buggy-version/libtelemetry.src.main.java.com.mapbox.android.telemetry.TelemetryService.java", "BodyUseAPI": ["com.mapbox.android.core.location.LocationEngine.requestLocationUpdates(com.mapbox.android.core.location.LocationEngineRequest,com.mapbox.android.core.location.LocationEngineCallback<android.location.Location>,<nulltype>)", "com.mapbox.android.telemetry.TelemetryService.getRequest()"], "Fixed commit": "a9b4605b71387318ea6a7acf20718cca9de172d9", "Url": "https://api.github.com/repos/mapbox/mapbox-events-android", "Date": "2018-10-04T18:15:28Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { result = java.lang.Long.decode(values[0].trim()); reminder = java.lang.Long.decode(values[1].trim()); } catch (java.lang.NumberFormatException e) { android.util.Log.e(\"DivisionBuilder\", e.getMessage()); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8684/buggy-version/app.src.main.java.com.example.mentalmath.trainings.examplegenerator.DivisionBuilder.java", "BodyUseAPI": ["java.lang.Long.decode(java.lang.String)", "java.lang.String.trim()", "java.lang.String.trim()", "java.lang.Long.decode(java.lang.String)"], "Fixed commit": "2354c53b8e8a37c14193ddc33a4ea7c6aa52d1e1", "Url": "https://api.github.com/repos/Roman-Markov/probe", "Date": "2018-05-15T19:27:31Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { outerForLoop : for (int i = 0; i < (listSemesters.size());) { boolean isItemRemoved = false; for (int j = 0; j < (listCourseSemester.size()); j++) { if ((semesters.size()) == 0) { break outerForLoop; }else if (listSemesters.get(i).getSemester().equals(listCourseSemester.get(j).getSemester())) { listSemesters.remove(i); isItemRemoved = true; } } if (!isItemRemoved) { i++; } } } catch (java.lang.Exception e) { return getCoursesModel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5870/buggy-version/src.main.java.controller.CourseController.java", "BodyUseAPI": ["java.util.Set<model.Semester>.size()", "listSemesters.get(i).getSemester()", "java.util.List<model.Semester>.get(int)", "java.util.List<model.Semester>.remove(int)", "java.util.List<model.Semester>.size()", "listSemesters.get(i).getSemester().equals(listCourseSemester.get(j).getSemester())", "listCourseSemester.get(j).getSemester()", "java.util.List<model.Semester>.get(int)", "java.util.List<model.Semester>.size()"], "Fixed commit": "f9868eefc530218edbef1e97e238c31315b57918", "Url": "https://api.github.com/repos/dvdprr6/SchoolWebPortal", "Date": "2018-02-02T22:35:45Z"},
{"Line": "=>474", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((data.length) >= 6) { code = java.lang.Integer.valueOf(data[5]); }else { code = 99; } } catch (java.lang.NumberFormatException e) { code = 99; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/4244/buggy-version/src.translator.logic.ARESTranslatorFactory.java", "BodyUseAPI": ["java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "bd1a96eda8e7214a611ee47586cba686746dc2dc", "Url": "https://api.github.com/repos/nsrr/edf-editor-translator", "Date": "2018-05-23T19:45:35Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { drawQueue(g, i, queueList.get(i)); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/7235/buggy-version/ParkingSimulator.src.view.QueueView.java", "BodyUseAPI": ["java.util.ArrayList<entities.CarQueue>.get(int)", "view.QueueView.drawQueue(java.awt.Graphics,int,queueList.get(i))"], "Fixed commit": "2247796a75c25dca23f27c578adc78ac0cac0a4d", "Url": "https://api.github.com/repos/zejar/carpark", "Date": "2018-01-31T15:07:38Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.bumptech.glide.Glide.with(mContext).load(imageSource).error(com.bumptech.glide.Glide.with(mContext).load(placeholderSource)).into(imageView); } catch (java.lang.IllegalArgumentException iae) { iae.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/9145/buggy-version/app.src.main.java.de.griot_app.griot.ImageLoader.java", "BodyUseAPI": ["com.bumptech.glide.Glide.with(mContext).load(imageSource).error(com.bumptech.glide.Glide.with(mContext).load(placeholderSource)).into(android.widget.ImageView)", "com.bumptech.glide.Glide.with(mContext).load(T1)", "com.bumptech.glide.Glide.with(mContext).load(T2)", "com.bumptech.glide.Glide.with(android.content.Context)", "com.bumptech.glide.Glide.with(mContext).load(imageSource).error(com.bumptech.glide.Glide.with(mContext).load(placeholderSource))", "com.bumptech.glide.Glide.with(android.content.Context)"], "Fixed commit": "6b0ba356889456472c79d104f284bf667ec1d734", "Url": "https://api.github.com/repos/Locdoc01/griot-app", "Date": "2018-05-04T09:46:19Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.telenor.possumcore.detectors.ImageDetector.tensorFlowInterface = createTensor(context.getAssets(), com.telenor.possumcore.detectors.ImageDetector.modelName); org.opencv.android.OpenCVLoader.initDebug(context()); } catch (java.lang.Exception e) { android.util.Log.e(tag, \"AP: Failed to initialize tensorFlow or openCV:\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3642/buggy-version/core.src.main.java.com.telenor.possumcore.detectors.ImageDetector.java", "BodyUseAPI": ["com.telenor.possumcore.detectors.ImageDetector.context()", "org.opencv.android.OpenCVLoader.initDebug(context())", "com.telenor.possumcore.detectors.ImageDetector.createTensor(context.getAssets(),java.lang.String)", "android.content.Context.getAssets()"], "Fixed commit": "9e0a8f59e4afb5a07bf8894276d91af6f3928bbd", "Url": "https://api.github.com/repos/telenordigital/awesome-possum-android-sdk", "Date": "2018-01-22T10:00:13Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { pairing.setVictory_points(java.lang.Integer.parseInt(round_data[2])); } catch (java.lang.Exception e) { float vp = java.lang.Float.parseFloat(round_data[2]); pairing.setVictory_points(((int) (vp))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/4122/buggy-version/src.jpairing.pairingTableModel.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "jpairing.PairingClass.setVictory_points(int)"], "Fixed commit": "f6f3f9c88078972a1518b9273fa05583a8b0ad92", "Url": "https://api.github.com/repos/shaunpress/jpairing", "Date": "2018-05-27T03:10:45Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { suggestedUserList = _rankerClient.getRankerList(id, mergerResult.getData().getUsers(), abTestMap.get(AbTestKeys.SUGGESTED_USER_MODEL.name()), 3).get(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } catch (java.util.concurrent.ExecutionException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2403/buggy-version/src.main.java.com.tantan.l2.services.SuggestedUsersImpl.java", "BodyUseAPI": ["mergerResult.getData().getUsers()", "com.tantan.l2.models.Resp.getData()", "_rankerClient.getRankerList(id, mergerResult.getData().getUsers(), abTestMap.get(AbTestKeys.SUGGESTED_USER_MODEL.name()), 3).get()", "AbTestKeys.SUGGESTED_USER_MODEL.name()", "com.tantan.l2.clients.RankerClient.getRankerList(java.lang.Long,mergerResult.getData().getUsers(),java.lang.String,int)", "java.util.Map<java.lang.String, java.lang.String>.get(AbTestKeys.SUGGESTED_USER_MODEL.name())"], "Fixed commit": "666dec910c279ae6a37c9f71590bcbf5410b6930", "Url": "https://api.github.com/repos/messingliu/l2-mt", "Date": "2018-04-25T09:08:24Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { url = new java.net.URL(builtUri.toString()); } catch (java.net.MalformedURLException error) { error.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/254/buggy-version/Lesson02-GitHub-Repo-Search.T02.03-Exercise-DisplayUrl.app.src.main.java.com.example.android.datafrominternet.utilities.NetworkUtils.java", "BodyUseAPI": ["android.net.Uri.toString()"], "Fixed commit": "a392ad1a678667ef6ae01e8f519492c40fb6ceba", "Url": "https://api.github.com/repos/martyav/ud851-Exercises", "Date": "2018-01-13T21:55:20Z"},
{"Line": "=>474", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { raveLengthInt = java.lang.Integer.parseInt(raveLength.trim()); } catch (java.lang.NumberFormatException nfe) { gov.nih.nci.cadsr.service.validator.ValidatorService.logger.debug((((\"Error in computing Rave Length from Field Unit: \" + raveLength) + \" :: \") + (nfe.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/604/buggy-version/alsvalidator.src.main.java.gov.nih.nci.cadsr.service.validator.ValidatorService.java", "BodyUseAPI": ["java.lang.String.trim()", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "2b8d0fbec3abc57b70b1435562421a4e15d48835", "Url": "https://api.github.com/repos/CBIIT/cadsr-services", "Date": "2018-09-14T21:15:25Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { statement.evaluate(); } finally { new com.tngtech.archunit.lang.extension.ArchUnitExtensions().finish(classes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8717/buggy-version/archunit-junit.src.main.java.com.tngtech.archunit.junit.ArchUnitRunner.java", "BodyUseAPI": ["org.junit.runners.model.Statement.evaluate()"], "Fixed commit": "87e68324e08d509f9a89165efc6d521e571b5eb9", "Url": "https://api.github.com/repos/TNG/ArchUnit", "Date": "2018-08-06T08:42:47Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8407/buggy-version/FrontEnd.app.src.main.java.com.example.social_photo.Fragments.SearchTab.java", "BodyUseAPI": [], "Fixed commit": "7966bd273fcdaf5870dbe0008bd055a610b2dcfd", "Url": "https://api.github.com/repos/FedericoBianca/SocialPhoto", "Date": "2018-09-13T23:16:54Z"},
{"Line": "=>860", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { java.io.BufferedReader rd = new java.io.BufferedReader(new java.io.InputStreamReader(is)); } catch (java.lang.NullPointerException nullPointer) { listener.getLogger().println(\"Remote Jenkins server returned empty response or invalid JSON - also the Error stream is not available. We just do nothing and can still proceed with the remote build.\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6048/buggy-version/src.main.java.org.jenkinsci.plugins.ParameterizedRemoteTrigger.RemoteBuildConfiguration.java", "BodyUseAPI": [], "Fixed commit": "4a10dce84dc3831a21bd068629232dbcd79a5b47", "Url": "https://api.github.com/repos/FlashBytes/parameterized-remote-trigger-plugin", "Date": "2018-02-20T17:29:57Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mDialog.dismiss(); } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1308/buggy-version/loading.src.main.java.com.icourt.loading.AlphaLoading.java", "BodyUseAPI": ["android.app.Dialog.dismiss()"], "Fixed commit": "ef822ef4b1c427c9500a21cf07fd7f16f0d16de4", "Url": "https://api.github.com/repos/icourt-android/alpha-loading", "Date": "2018-01-08T02:37:30Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mDialog.dismiss(); } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1308/buggy-version/loading.src.main.java.com.icourt.loading.AlphaLoading.java", "BodyUseAPI": ["android.app.Dialog.dismiss()"], "Fixed commit": "ef822ef4b1c427c9500a21cf07fd7f16f0d16de4", "Url": "https://api.github.com/repos/icourt-android/alpha-loading", "Date": "2018-01-08T02:37:30Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { srList = eu.arrowhead.core.orchestrator.OrchestratorDriver.queryServiceRegistry(entry.getService(), orchestrationFlags.get(\"metadataSearch\"), orchestrationFlags.get(\"pingProviders\")); for (eu.arrowhead.common.database.ServiceRegistryEntry srEntry : srList) { providerSystemsFromSR.add(srEntry.getProvider()); } providerSystemsFromAuth = eu.arrowhead.core.orchestrator.OrchestratorDriver.queryAuthorization(entry.getConsumer(), entry.getService(), java.util.Collections.singleton(entry.getProviderSystem())); if ((!(providerSystemsFromSR.contains(entry.getProviderSystem()))) || (!(providerSystemsFromAuth.contains(entry.getProviderSystem())))) { toRemove.add(entry); } } catch (eu.arrowhead.common.exception.DataNotFoundException e) { toRemove.add(entry); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/7641/buggy-version/orchestrator.src.main.java.eu.arrowhead.core.orchestrator.OrchestratorDriver.java", "BodyUseAPI": ["eu.arrowhead.common.database.OrchestrationStore.getProviderSystem()", "eu.arrowhead.common.database.ServiceRegistryEntry.getProvider()", "java.util.Set<eu.arrowhead.common.database.ArrowheadSystem>.contains(entry.getProviderSystem())", "eu.arrowhead.core.orchestrator.OrchestratorDriver.queryAuthorization(entry.getConsumer(),entry.getService(),java.util.Set)", "eu.arrowhead.common.database.OrchestrationStore.getProviderSystem()", "eu.arrowhead.common.database.OrchestrationStore.getProviderSystem()", "java.util.Collections.singleton(entry.getProviderSystem())", "eu.arrowhead.common.database.OrchestrationStore.getService()", "eu.arrowhead.common.database.OrchestrationStore.getConsumer()", "java.util.List<eu.arrowhead.common.database.OrchestrationStore>.add(eu.arrowhead.common.database.OrchestrationStore)", "java.util.Set<eu.arrowhead.common.database.ArrowheadSystem>.add(srEntry.getProvider())", "java.util.Map<java.lang.String, java.lang.Boolean>.get(java.lang.String)", "eu.arrowhead.core.orchestrator.OrchestratorDriver.queryServiceRegistry(entry.getService(),java.lang.Boolean,java.lang.Boolean)", "java.util.Set<eu.arrowhead.common.database.ArrowheadSystem>.contains(entry.getProviderSystem())", "java.util.Map<java.lang.String, java.lang.Boolean>.get(java.lang.String)", "eu.arrowhead.common.database.OrchestrationStore.getService()"], "Fixed commit": "eb0476ab4b3a16e755d2a155b9d71947dca42c4b", "Url": "https://api.github.com/repos/hegeduscs/arrowhead", "Date": "2018-02-06T10:08:05Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Integer.valueOf(tableParameter); } catch (java.lang.NumberFormatException e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6752/buggy-version/src.main.java.GameState.UserIO.InputParamsValidator.java", "BodyUseAPI": ["java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "2e50c33e5fcf195773c78f84da6e12adccad5b4e", "Url": "https://api.github.com/repos/Hoymm/OX", "Date": "2018-05-11T14:45:33Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ruler.orderSubjects(); } catch (java.lang.Exception ex) { int confirmed = javax.swing.JOptionPane.showConfirmDialog(null, ((ruler.getRulerName()) + \" committed a game-breaking error! Exit game?\"), \"Error Message\", javax.swing.JOptionPane.YES_NO_OPTION); if (confirmed == (javax.swing.JOptionPane.YES_OPTION)) { java.lang.System.exit(0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8368/buggy-version/src.dev.CodeRulers.game.CodeRulers.java", "BodyUseAPI": ["dev.CodeRulers.ruler.AbstractRuler.orderSubjects()"], "Fixed commit": "818869eade859a8e90d5dc526a2c0d86eb5431da", "Url": "https://api.github.com/repos/sean01zhang/ICS4UE_CodeRulers", "Date": "2018-01-23T21:34:10Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { final javax.ws.rs.core.Configuration config = context.getConfiguration(); final java.lang.String jsonFeature = org.glassfish.jersey.CommonProperties.getValue(config.getProperties(), config.getRuntimeType(), InternalProperties.JSON_FEATURE, com.alibaba.fastjson.support.jaxrs.FastJsonFeature.JSON_FEATURE, java.lang.String.class); if (!(com.alibaba.fastjson.support.jaxrs.FastJsonFeature.JSON_FEATURE.equalsIgnoreCase(jsonFeature))) { return false; } context.property(org.glassfish.jersey.internal.util.PropertiesHelper.getPropertyNameForRuntime(InternalProperties.JSON_FEATURE, config.getRuntimeType()), com.alibaba.fastjson.support.jaxrs.FastJsonFeature.JSON_FEATURE); if (!(config.isRegistered(com.alibaba.fastjson.support.jaxrs.FastJsonProvider.class))) { context.register(com.alibaba.fastjson.support.jaxrs.FastJsonProvider.class, javax.ws.rs.ext.MessageBodyReader.class, javax.ws.rs.ext.MessageBodyWriter.class); } } catch (java.lang.NoSuchMethodError e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5133/buggy-version/src.main.java.com.alibaba.fastjson.support.jaxrs.FastJsonFeature.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "javax.ws.rs.core.FeatureContext.getConfiguration()", "org.glassfish.jersey.internal.util.PropertiesHelper.getPropertyNameForRuntime(InternalProperties.JSON_FEATURE,config.getRuntimeType())", "javax.ws.rs.core.Configuration.getRuntimeType()", "javax.ws.rs.core.Configuration.getProperties()", "javax.ws.rs.core.Configuration.getRuntimeType()", "javax.ws.rs.core.FeatureContext.property(org.glassfish.jersey.internal.util.PropertiesHelper.getPropertyNameForRuntime(InternalProperties.JSON_FEATURE, config.getRuntimeType()),java.lang.String)", "javax.ws.rs.core.Configuration.isRegistered(java.lang.Class)", "javax.ws.rs.core.FeatureContext.register(java.lang.Class,java.lang.Class,java.lang.Class)", "org.glassfish.jersey.CommonProperties.getValue(config.getProperties(),config.getRuntimeType(),InternalProperties.JSON_FEATURE,java.lang.String,java.lang.Class)"], "Fixed commit": "42252b96fbead7b110de1b7a77ac6aa9e4fa8e75", "Url": "https://api.github.com/repos/GulajavaMinistudio/fastjson", "Date": "2018-07-20T09:04:39Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (((work.getRawContent()) == null) && (!fullDownload)) { rawContent = ru.samlib.client.net.HtmlClient.executeRequest(request, ru.samlib.client.parser.MIN_BODY_SIZE, ((cached) || (lazyLoad))); }else { rawContent = ru.samlib.client.net.HtmlClient.executeRequest(request, ((cached) || (lazyLoad))); } } catch (java.lang.Throwable tr) { if (lazyLoad) { lazyLoad = false; net.vrallev.android.cat.Cat.w(tr); return parse(fullDownload, processChapters); }else { throw tr; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6105/buggy-version/Client.src.main.java.ru.samlib.client.parser.WorkParser.java", "BodyUseAPI": ["ru.samlib.client.parser.Work.getRawContent()", "ru.samlib.client.net.HtmlClient.executeRequest(ru.samlib.client.parser.WorkParser,((cached) || (lazyLoad)))", "ru.samlib.client.net.HtmlClient.executeRequest(ru.samlib.client.parser.WorkParser,ru.samlib.client.parser.MIN_BODY_SIZE,((cached) || (lazyLoad)))"], "Fixed commit": "a3e1163c544bb5d55e8ca6a406e8339cb016f5b7", "Url": "https://api.github.com/repos/Rufim/Samlib", "Date": "2018-08-25T00:46:33Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String line; java.lang.String vl = null; java.lang.String[] sp = filepath.split(\"/\"); java.lang.String migration = sp[((sp.length) - 1)]; filepath = filepath.replace(migration, \"bootstrap.sql\"); java.io.BufferedReader reader = new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(filepath), model.CHARSET)); line = reader.readLine(); while (line != null) { if (line.toLowerCase().contains(\"insert into releases\")) { vl = line; } line = reader.readLine(); } reader.close(); if (vl != null) { vl = vl.replace(version, \"\"); java.lang.String rowId = \"\"; for (char c : vl.toCharArray()) { if (java.lang.Character.isDigit(c)) { rowId = rowId + c; } } int intVal = (java.lang.Integer.parseInt(rowId)) + 1; return java.lang.String.valueOf(intVal); } } catch (java.io.IOException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8787/buggy-version/src.dk.rosadrift.model.handlers.MigrationHandler.java", "BodyUseAPI": ["java.lang.String.toCharArray()", "java.io.BufferedReader.readLine()", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.Character.isDigit(char)", "java.lang.String.split(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.io.BufferedReader.close()", "java.lang.String.toLowerCase()", "java.lang.String.valueOf(int)", "java.lang.String.contains(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.io.BufferedReader.readLine()"], "Fixed commit": "9a1135874767b2575988b6d151fe7912df4597f0", "Url": "https://api.github.com/repos/qazuar/sk.rosamigrations", "Date": "2018-09-27T08:14:09Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { privateKey = ((java.security.PrivateKey) (im.adamant.android.core.encryption.KeyStoreCipher.androidKeyStore.getKey(alias, null))); java.security.cert.Certificate certificate = im.adamant.android.core.encryption.KeyStoreCipher.androidKeyStore.getCertificate(alias); if (certificate != null) { publicKey = certificate.getPublicKey(); } } catch (java.security.UnrecoverableKeyException | java.security.KeyStoreException ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/423/buggy-version/app.src.main.java.im.adamant.android.core.encryption.KeyStoreCipher.java", "BodyUseAPI": ["java.security.KeyStore.getCertificate(java.lang.String)", "java.security.KeyStore.getKey(java.lang.String,<nulltype>)", "java.security.cert.Certificate.getPublicKey()"], "Fixed commit": "bc56999f928eec72591711598a685d83dcc12a8c", "Url": "https://api.github.com/repos/Adamant-im/adamant-android", "Date": "2018-07-29T14:31:32Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.util.StringTokenizer st = new java.util.StringTokenizer(pValues.getFsLoc(), \"?&\"); while (st.hasMoreTokens()) { java.lang.String t = st.nextToken(); if (t.startsWith(\"i=\")) { geo.setCountry(t.substring(2)); }else if (t.startsWith(\"c=\")) { geo.setCity(new java.lang.String(decoder.decode(t.substring(2).getBytes()))); } } } catch (java.lang.Exception ex) { log.error((\"missing geo code properties: \" + (pValues.getFsLoc()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3313/buggy-version/open-ssp-parent.core.src.main.java.com.atg.openssp.core.exchange.HeaderBiddingBidRequestBuilderHandler.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.getBytes()", "com.atg.openssp.core.exchange.Geo.setCountry(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.startsWith(java.lang.String)", "com.atg.openssp.core.exchange.Geo.setCity(java.lang.String)", "java.util.StringTokenizer.nextToken()", "java.util.Base64.Decoder.decode(byte[])", "java.lang.String.startsWith(java.lang.String)", "java.util.StringTokenizer.hasMoreTokens()", "com.atg.openssp.common.demand.HeaderBiddingParamValue.getFsLoc()"], "Fixed commit": "dd7a5779e53f107c332d3a87f5c6f022927127d8", "Url": "https://api.github.com/repos/freestarcapital/openssp", "Date": "2018-05-04T20:51:56Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (int i = 0; i < (eventDetailsList.size()); i++) { addDatatoRealm(eventDetailsList.get(i)); } isnetwork = true; } catch (java.lang.Exception e) { android.widget.Toast.makeText(context, \"Network Problem\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/781/buggy-version/app.src.main.java.com.dota.festmanager.fragment.EventsFragment.java", "BodyUseAPI": ["com.dota.festmanager.fragment.EventsFragment.2.addDatatoRealm(eventDetailsList.get(i))", "java.util.ArrayList<com.dota.festmanager.model.EventDetails>.get(int)", "java.util.ArrayList<com.dota.festmanager.model.EventDetails>.size()"], "Fixed commit": "7977891f1f6c572cca2207e9650d452786aad98a", "Url": "https://api.github.com/repos/Ashwik/Fest-Manager-App", "Date": "2018-10-23T03:48:30Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { isNetwork = true; addDatatoRealm(eventDetailsmodel); } catch (java.lang.Exception e) { android.widget.Toast.makeText(context, \"Network problem\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/781/buggy-version/app.src.main.java.com.dota.festmanager.fragment.DetailsFragment.java", "BodyUseAPI": ["com.dota.festmanager.fragment.DetailsFragment.1.addDatatoRealm(com.dota.festmanager.model.EventDetails)"], "Fixed commit": "7977891f1f6c572cca2207e9650d452786aad98a", "Url": "https://api.github.com/repos/Ashwik/Fest-Manager-App", "Date": "2018-10-23T03:48:30Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { isNetwork = true; for (i = 0; (i) < (list.size()); (i)++) { addDatatoRealm(list.get(i)); } } catch (java.lang.Exception e) { android.widget.Toast.makeText(context, \"Network Problem\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/781/buggy-version/app.src.main.java.com.dota.festmanager.fragment.SchedulePagerFragment.java", "BodyUseAPI": ["java.util.List<com.dota.festmanager.model.EventDetails>.size()", "java.util.List<com.dota.festmanager.model.EventDetails>.get(int)", "com.dota.festmanager.fragment.SchedulePagerFragment.2.addDatatoRealm(list.get(i))"], "Fixed commit": "7977891f1f6c572cca2207e9650d452786aad98a", "Url": "https://api.github.com/repos/Ashwik/Fest-Manager-App", "Date": "2018-10-23T03:48:30Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { path = com.intellij.idea.plugin.hybris.project.utils.FileUtils.getPathToParentDirectoryFrom(moduleDescriptor.getRootDirectory(), hybrisBinDirectory); } catch (java.io.IOException e) { com.intellij.idea.plugin.hybris.project.configurators.impl.DefaultGroupModuleConfigurator.LOG.warn(java.lang.String.format((\"Can not build group path for OOTB module '%s' because its root directory '%s' is not under\" + \"under Hybris bin directory '%s'.\"), moduleDescriptor.getName(), moduleDescriptor.getRootDirectory(), hybrisBinDirectory)); return this.groupHybris; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/4672/buggy-version/src.com.intellij.idea.plugin.hybris.project.configurators.impl.DefaultGroupModuleConfigurator.java", "BodyUseAPI": ["com.intellij.idea.plugin.hybris.project.utils.FileUtils.getPathToParentDirectoryFrom(moduleDescriptor.getRootDirectory(),java.io.File)", "com.intellij.idea.plugin.hybris.project.descriptors.HybrisModuleDescriptor.getRootDirectory()"], "Fixed commit": "dcd398823e4f5414c24b730c97392a7adeeeec28", "Url": "https://api.github.com/repos/AlexanderBartash/hybris-integration-intellij-idea-plugin", "Date": "2018-04-25T06:37:45Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { path = com.intellij.idea.plugin.hybris.project.utils.FileUtils.getPathToParentDirectoryFrom(moduleDescriptor.getRootDirectory(), customDirectory); } catch (java.io.IOException e) { com.intellij.idea.plugin.hybris.project.configurators.impl.DefaultGroupModuleConfigurator.LOG.warn(java.lang.String.format((\"Can not build group path for a custom module '%s' because its root directory '%s' is not under\" + \" custom directory '%s'.\"), moduleDescriptor.getName(), moduleDescriptor.getRootDirectory(), customDirectory)); return this.groupCustom; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/4672/buggy-version/src.com.intellij.idea.plugin.hybris.project.configurators.impl.DefaultGroupModuleConfigurator.java", "BodyUseAPI": ["com.intellij.idea.plugin.hybris.project.utils.FileUtils.getPathToParentDirectoryFrom(moduleDescriptor.getRootDirectory(),java.io.File)", "com.intellij.idea.plugin.hybris.project.descriptors.HybrisModuleDescriptor.getRootDirectory()"], "Fixed commit": "dcd398823e4f5414c24b730c97392a7adeeeec28", "Url": "https://api.github.com/repos/AlexanderBartash/hybris-integration-intellij-idea-plugin", "Date": "2018-04-25T06:37:45Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ir.sahab.nimbo.jimbo.main.Exec.blockingQueue.put(new ir.sahab.nimbo.jimbo.elasticsearch.ElasticsearchWebpageModel(message.getLink(), text, message.getTitle(), message.getDescription())); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/7891/buggy-version/newsfetcher.src.main.java.ir.sahab.nimbo.jimbo.main.Exec.java", "BodyUseAPI": ["java.util.concurrent.ArrayBlockingQueue<ir.sahab.nimbo.jimbo.elasticsearch.ElasticsearchWebpageModel>.put(ir.sahab.nimbo.jimbo.elasticsearch.ElasticsearchWebpageModel)", "ir.sahab.nimbo.jimbo.rss.RssFeedMessage.getTitle()", "ir.sahab.nimbo.jimbo.rss.RssFeedMessage.getLink()", "ir.sahab.nimbo.jimbo.rss.RssFeedMessage.getDescription()"], "Fixed commit": "b042164fb7751620515eb0bf1e79448b0291ff81", "Url": "https://api.github.com/repos/jimbo-nimbo/dumbo", "Date": "2018-08-29T15:19:53Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { p.insert(factory2.createMoney(value)); } catch (java.lang.Exception e) { java.lang.System.out.println(((\"Malay doesn't have \" + value) + \" Ringgit note\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8937/buggy-version/src.coinpurse.MoneyFactoryDemo.java", "BodyUseAPI": ["coinpurse.MoneyFactory.createMoney(int)", "coinpurse.Purse.insert(factory2.createMoney(value))"], "Fixed commit": "6e08de206a830d86fea064a2fd656b8a21257b33", "Url": "https://api.github.com/repos/OOP2018/coinpurse-wasuthun", "Date": "2018-02-23T14:00:57Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { jsonObj.put(\"status\", 400); jsonObj.put(\"result\", outputFilePath); } catch (org.json.JSONException e) { e.printStackTrace(); callback.error(e.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/7147/buggy-version/src.android.VideoEditorByCC.java", "BodyUseAPI": ["org.json.JSONObject.put(java.lang.String,int)", "org.json.JSONObject.put(java.lang.String,java.lang.String)"], "Fixed commit": "145d03f1f92ca7e3a7643d618f099769aaa8e7bb", "Url": "https://api.github.com/repos/CrispyFriedPig/cordova-plugin-video-editorbycc", "Date": "2018-08-14T06:06:07Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.System.out.println(\"choose:\\n1)encode\\n2)decode\"); return scan.nextInt(); } catch (java.lang.Exception e) { java.lang.System.out.println(\"Invalid input\\n\"); scan.nextLine(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/9495/buggy-version/src.Menu.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.util.Scanner.nextInt()"], "Fixed commit": "d395bf01f13224ccdcd210b30a27f69cf15957f0", "Url": "https://api.github.com/repos/Kigaru/enigma", "Date": "2018-04-27T00:16:30Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { connection.close(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5813/buggy-version/src.model.SQLite.java", "BodyUseAPI": ["java.sql.Connection.close()"], "Fixed commit": "51857f5d05d07b2523c554d28537e90e20b00d35", "Url": "https://api.github.com/repos/LRober09/Soundy", "Date": "2018-06-03T19:53:17Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { connection.close(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5813/buggy-version/src.model.SQLite.java", "BodyUseAPI": ["java.sql.Connection.close()"], "Fixed commit": "51857f5d05d07b2523c554d28537e90e20b00d35", "Url": "https://api.github.com/repos/LRober09/Soundy", "Date": "2018-06-03T19:53:17Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { connection.close(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5813/buggy-version/src.model.SQLite.java", "BodyUseAPI": ["java.sql.Connection.close()"], "Fixed commit": "51857f5d05d07b2523c554d28537e90e20b00d35", "Url": "https://api.github.com/repos/LRober09/Soundy", "Date": "2018-06-03T19:53:17Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { connection.close(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5813/buggy-version/src.model.SQLite.java", "BodyUseAPI": ["java.sql.Connection.close()"], "Fixed commit": "51857f5d05d07b2523c554d28537e90e20b00d35", "Url": "https://api.github.com/repos/LRober09/Soundy", "Date": "2018-06-03T19:53:17Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((activitiesReceiver) != null) { android.support.v4.content.LocalBroadcastManager.getInstance(context).unregisterReceiver(activitiesReceiver); } } catch (java.lang.Exception e) { android.util.Log.d(NSR.TAG, e.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/4227/buggy-version/nsr.src.main.java.eu.neosurance.sdk.NSRService.java", "BodyUseAPI": ["android.support.v4.content.LocalBroadcastManager.getInstance(android.content.Context)", "android.support.v4.content.LocalBroadcastManager.getInstance(context).unregisterReceiver(android.content.BroadcastReceiver)"], "Fixed commit": "b0c6265a559350b2c5a09ff2b51d6c78ca4d5a30", "Url": "https://api.github.com/repos/clickntap/android-neosurance-sdk", "Date": "2018-03-22T12:20:39Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { seedu.address.model.person.Time currTime = new seedu.address.model.person.Time(args); if (currTime.toString().isEmpty()) { throw new seedu.address.logic.parser.exceptions.ParseException(java.lang.String.format(seedu.address.logic.parser.MESSAGE_INVALID_COMMAND_FORMAT, FilterByTimeCommand.MESSAGE_USAGE)); } return new seedu.address.logic.commands.FilterByTimeCommand(args); } catch (java.lang.IllegalArgumentException e) { throw new seedu.address.logic.parser.exceptions.ParseException(java.lang.String.format(seedu.address.logic.parser.MESSAGE_INVALID_COMMAND_FORMAT, FilterByTimeCommand.MESSAGE_USAGE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/137/buggy-version/src.main.java.seedu.address.logic.parser.FilterByTimeCommandParser.java", "BodyUseAPI": ["seedu.address.model.person.Time.toString()", "currTime.toString().isEmpty()", "java.lang.String.format(seedu.address.logic.parser.MESSAGE_INVALID_COMMAND_FORMAT,FilterByTimeCommand.MESSAGE_USAGE)"], "Fixed commit": "2f3ccb998a2281c908adb7a7297d62e3aea22e3b", "Url": "https://api.github.com/repos/CS2103-AY1819S1-T13-1/main", "Date": "2018-10-25T07:24:32Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { int sizeOfBin = scalarArray.downSample(); } catch (java.lang.Exception e) { org.auscope.nvcl.server.service.TSGModJobProcessor.logger.error((\"Exception: on scalarArray.downSample()\" + e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3657/buggy-version/src.main.java.org.auscope.nvcl.server.service.TSGModJobProcessor.java", "BodyUseAPI": ["org.auscope.nvcl.server.vo.TSGScalarArrayVo.downSample()"], "Fixed commit": "ca6ff07ee027133a9dad48b7952490a9d0127f6c", "Url": "https://api.github.com/repos/AuScope/NVCLAnalyticalServices", "Date": "2018-06-15T01:47:50Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (!(requestUpdate.powerUp.equals(null))) { for (int i = 0; i < (supportPowerUp.getFireUps().length); i++) { if (requestUpdate.powerUp.equals(supportPowerUp.getFireUps()[i])) { supportPowerUp.changeFireUp(i); } } } } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1481/buggy-version/Fight4rena.src.Listeners.ServerListener.java", "BodyUseAPI": ["requestUpdate.powerUp.equals(supportPowerUp.getFireUps()[i])", "Support.SupportPowerUp.changeFireUp(int)", "Support.SupportPowerUp.getFireUps()", "Support.SupportPowerUp.getFireUps()", "requestUpdate.powerUp.equals(<nulltype>)"], "Fixed commit": "4e658b0c4b35af8eb69b5b301d023d376924bfcf", "Url": "https://api.github.com/repos/Shadowoli/Fight4rena", "Date": "2018-10-29T10:53:40Z"},
{"Line": "=>902", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { currentCase = org.sleuthkit.autopsy.casemodule.Case.getCurrentCaseThrows(); } catch (org.sleuthkit.autopsy.casemodule.NoCurrentCaseException ex) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5296/buggy-version/Core.src.org.sleuthkit.autopsy.directorytree.DirectoryTreeTopComponent.java", "BodyUseAPI": ["org.sleuthkit.autopsy.casemodule.Case.getCurrentCaseThrows()"], "Fixed commit": "9c5e612ffe4493736e4523da5629de8e66ad5f69", "Url": "https://api.github.com/repos/sleuthkit/autopsy", "Date": "2018-09-13T06:28:19Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(1000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3278/buggy-version/src.main.java.com.locydragon.tim.io.item.IOItemMaker.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "588f1fa79b61ad2089a040aee08aeb43acf07b85", "Url": "https://api.github.com/repos/LocyDragon/TomoriItemMythic", "Date": "2018-10-06T06:11:58Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Class.forName(\"org.pepsoft.worldpainter.DefaultPlugin\"); } catch (java.lang.ClassNotFoundException e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5622/buggy-version/WorldPainter.WPCore.src.main.java.org.pepsoft.worldpainter.tools.Export.java", "BodyUseAPI": ["java.lang.Class.forName(java.lang.String)"], "Fixed commit": "76e332e4e59f79e8949d979b90c7af4a853b39f9", "Url": "https://api.github.com/repos/Captain-Chaos/WorldPainter", "Date": "2018-06-02T14:07:12Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Class.forName(\"org.pepsoft.worldpainter.DefaultPlugin\"); } catch (java.lang.ClassNotFoundException e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5622/buggy-version/WorldPainter.WPGUI.src.main.java.org.pepsoft.minecraft.mapexplorer.MapExplorer.java", "BodyUseAPI": ["java.lang.Class.forName(java.lang.String)"], "Fixed commit": "76e332e4e59f79e8949d979b90c7af4a853b39f9", "Url": "https://api.github.com/repos/Captain-Chaos/WorldPainter", "Date": "2018-06-02T14:07:12Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(50); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2506/buggy-version/src.client.gui.view.ChatRoomWindow.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "b665474d61e5122e3531a2daec2e1e463766fcc0", "Url": "https://api.github.com/repos/benf223/DMSAssignment1", "Date": "2018-08-16T22:04:33Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { while (chkAcctNumResults.next()) { checkingAccountNum = chkAcctNumResults.getInt(\"account_number\"); } } catch (java.sql.SQLException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/725/buggy-version/src.controller.RegisterClientController.java", "BodyUseAPI": ["java.sql.ResultSet.getInt(java.lang.String)", "java.sql.ResultSet.next()"], "Fixed commit": "560a0215d23f58a045066d0e814082fec14dc6a0", "Url": "https://api.github.com/repos/rissandimo/Bank-Application", "Date": "2018-08-06T15:01:21Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { getJavaTypeMapping().getJavaTypeDescriptor(); } catch (org.hibernate.boot.model.domain.NotYetResolvedException e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2400/buggy-version/hibernate-core.src.main.java.org.hibernate.mapping.ManyToOne.java", "BodyUseAPI": ["org.hibernate.boot.model.domain.JavaTypeMapping.getJavaTypeDescriptor()", "org.hibernate.mapping.ManyToOne.getJavaTypeMapping()"], "Fixed commit": "0ededd3a0d868d08897ad4649bc0db70c6a5f53e", "Url": "https://api.github.com/repos/sebersole/hibernate-core", "Date": "2018-07-19T19:08:44Z"},
{"Line": "=>465", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { enumValues = ((java.util.Map<java.lang.String, java.lang.String>) (enumsConfig.getAnyRef((((TransformationConstants.ENUMS) + (TransformationConstants.DOT)) + enumName)))); } catch (com.typesafe.config.ConfigException e) { enumValues = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8140/buggy-version/src.main.java.org.sunbird.extension.util.TransformJsonUtil.java", "BodyUseAPI": ["com.typesafe.config.Config.getAnyRef((((TransformationConstants.ENUMS) + (TransformationConstants.DOT)) + enumName))"], "Fixed commit": "0ddb519ece8681e42df0d5af74140a68230b8a3a", "Url": "https://api.github.com/repos/project-sunbird/sunbird-open-saber-bridge", "Date": "2018-08-08T14:20:17Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { identityFieldValue = ((java.lang.Long) (pojo.get(identityFieldName))); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4737/buggy-version/dal-client.src.main.java.com.ctrip.platform.dal.dao.task.InsertTaskAdapter.java", "BodyUseAPI": ["java.util.Map<java.lang.String, ?>.get(java.lang.String)"], "Fixed commit": "c125425f7b179e6b052323bdb21b46c0e74a0bf2", "Url": "https://api.github.com/repos/ctripcorp/dal", "Date": "2018-10-14T10:56:32Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { javax.faces.context.FacesContext.getCurrentInstance().getExternalContext().redirect(\"/acrecruitment/registeredjobapp.xhtml\"); } catch (java.lang.Exception e) { view.RecruitmentHandler.LOG.log(java.util.logging.Level.WARNING, Messages.SYSTEM_ERROR.name(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3958/buggy-version/src.main.java.view.RecruitmentHandler.java", "BodyUseAPI": ["javax.faces.context.FacesContext.getCurrentInstance()", "javax.faces.context.FacesContext.getCurrentInstance().getExternalContext().redirect(java.lang.String)", "javax.faces.context.FacesContext.getCurrentInstance().getExternalContext()"], "Fixed commit": "60586fe0a9d93b60b6c7e470f7935cf14b809ef1", "Url": "https://api.github.com/repos/Osyx/acrecruitment", "Date": "2018-03-06T23:02:46Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.json.JSONObject obj = new org.json.JSONObject(json); array = obj.optJSONArray(\"numbers\"); } catch (org.json.JSONException e) { ru.leonid.shutov.javaee.controller.MainController.logger.error(\"Cannot parse JSON\", e); return javax.ws.rs.core.Response.serverError().entity(\"Incorrect JSON received. Please provide valid JSON\").build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6579/buggy-version/src.main.java.ru.leonid.shutov.javaee.controller.MainController.java", "BodyUseAPI": ["org.json.JSONObject.optJSONArray(java.lang.String)"], "Fixed commit": "e02e20008e307eab5c7caf3996c399fc8c95e281", "Url": "https://api.github.com/repos/LeonidShutov/RainyHillsCRX", "Date": "2018-03-20T20:19:31Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (!(strLastSongURL.equals(listSong.get(nPosition).getPath()))) { strLastSongURL = listSong.get(nPosition).getPath(); getCurrentInfoSong(nPosition); updateSongInfoUI(); avatarSong.setRotation(0.0F); } } catch (java.lang.Exception e) { strLastSongURL = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7214/buggy-version/MusicAndroid.app.src.main.java.com.bku.musicandroid.Activity.SongOnlinePlayerActivity.java", "BodyUseAPI": ["java.lang.String.equals(listSong.get(nPosition).getPath())", "com.bku.musicandroid.Activity.SongOnlinePlayerActivity.1.updateSongInfoUI()", "listSong.get(nPosition).getPath()", "java.util.ArrayList<com.bku.musicandroid.Model.SongPlayerOnlineInfo>.get(int)", "android.widget.ImageView.setRotation(float)", "listSong.get(nPosition).getPath()", "java.util.ArrayList<com.bku.musicandroid.Model.SongPlayerOnlineInfo>.get(int)", "com.bku.musicandroid.Activity.SongOnlinePlayerActivity.1.getCurrentInfoSong(int)"], "Fixed commit": "0f6fa5ebec60a2d20ab1b3bc0de32af1e4aecb03", "Url": "https://api.github.com/repos/Kurosaki12a1/MusicAndroidProject", "Date": "2018-05-20T07:37:31Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { io.trane.future.AsyncPromise.setValue(s.get()); } catch (final java.lang.Throwable error) { io.trane.future.NonFatalException.verify(error); io.trane.future.AsyncPromise.setException(error); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7295/buggy-version/future-java.src.main.java.io.trane.future.FuturePool.java", "BodyUseAPI": ["io.trane.future.AsyncPromise.setValue(T)", "java.util.function.Supplier<T>.get()"], "Fixed commit": "1c4a6baed6a799485593693ca0a86b68affb572a", "Url": "https://api.github.com/repos/traneio/future", "Date": "2018-09-18T06:32:16Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return format.parse(dateTime); } catch (java.text.ParseException e) { timber.log.Timber.d(\"Error occurred while parsing date %s\", dateTime); return new java.util.Date(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8/buggy-version/app.src.main.java.fr.free.nrw.commons.category.CategoryImageUtils.java", "BodyUseAPI": ["java.text.SimpleDateFormat.parse(java.lang.String)"], "Fixed commit": "afd5bc509172ab8ea4dfc976fdefd976b87b7ad0", "Url": "https://api.github.com/repos/maskaravivek/apps-android-commons", "Date": "2018-05-01T20:37:30Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { profile.put(\"_id\", ID); } catch (org.json.JSONException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8243/buggy-version/app.src.main.java.golden_retriever.qru.QRReaderActivity.java", "BodyUseAPI": ["org.json.JSONObject.put(java.lang.String,java.lang.String)"], "Fixed commit": "e5333c8ab9f2a8f33ed84f40c5ee8a3df138b327", "Url": "https://api.github.com/repos/eatmyshorts5/EE461L_QRU", "Date": "2018-04-25T00:02:39Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { fHelper.close(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2075/buggy-version/app.src.main.java.com.example.sensor.MainActivity.java", "BodyUseAPI": ["com.example.sensor.FileHelper.close()"], "Fixed commit": "47cf3b9dd3da26917a741fb9a631c23d9ef2600f", "Url": "https://api.github.com/repos/EsdeathYZH/GlassesSensor", "Date": "2018-01-19T04:29:43Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { db.ulozFaktura(f); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1540/buggy-version/src.main.java.cz.jcu.uaidoklad.Model.FakturaServiceImpl.java", "BodyUseAPI": ["cz.jcu.uaidoklad.Model.FakturaRepository.ulozFaktura(cz.jcu.uaidoklad.Model.Faktura)"], "Fixed commit": "d2b96cb1706304c6208d86672f1f141d396e9c0f", "Url": "https://api.github.com/repos/michbart/Fakturacni-system", "Date": "2018-06-28T19:04:59Z"},
{"Line": "=>360", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { fhandle = ipfsGet(cid, timeout, java.util.concurrent.TimeUnit.MILLISECONDS); } catch (io.nessus.cmd.IPFSException ex) { if ((ex.getCause()) instanceof io.nessus.cmd.MerkleNotFoundException) { continue; }else { throw ex; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2080/buggy-version/ipfs.src.main.java.io.nessus.ipfs.impl.DefaultContentManager.java", "BodyUseAPI": ["io.nessus.ipfs.impl.DefaultContentManager.ipfsGet(java.lang.String,java.lang.Long,java.util.concurrent.TimeUnit)"], "Fixed commit": "0074393ee05406ee00f6c235329c171e2201c1a8", "Url": "https://api.github.com/repos/tdiesler/nessus", "Date": "2018-07-24T20:06:13Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { data = new com.google.gson.Gson().fromJson(s2, ProducedData.class); } catch (java.lang.Exception e) { e.printStackTrace(); FiltersManager.logger.error((\"Failed to parse the message - \" + s2)); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4124/buggy-version/src.main.java.FiltersManager.java", "BodyUseAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Fixed commit": "95e71d0db00803ea0df9155e07db28a1b29230fc", "Url": "https://api.github.com/repos/nimble-platform/data_pipes", "Date": "2018-04-03T12:18:41Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(10000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9666/buggy-version/src.main.java.com.poc.ohlc.OHLCCacheManager.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "6c013c506ab5d24c70dd7c4d9a5f110d25a4639d", "Url": "https://api.github.com/repos/avergnaud/eth-bot", "Date": "2018-10-22T19:19:20Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.net.Socket tmp = new java.net.Socket(\"127.0.0.1\", portNumber); tmp.close(); } catch (java.io.IOException ex) { java.util.logging.Logger.getLogger(server.remote.IMCommunicator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7465/buggy-version/src.server.remote.IMCommunicator.java", "BodyUseAPI": ["java.net.Socket.close()"], "Fixed commit": "11b66bd7219eda1ab27ae2d4c527da4bbe4fe1e3", "Url": "https://api.github.com/repos/derekworth/Envelopes", "Date": "2018-10-07T03:16:42Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { seats = java.lang.Integer.parseInt(seatsTextField.getText()); } catch (java.lang.NumberFormatException ex) { java.lang.System.err.println(ex); javax.swing.JOptionPane.showMessageDialog(null, \"Error with number of bus seats.\", \"Bus Seats Error\", javax.swing.JOptionPane.ERROR_MESSAGE); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9385/buggy-version/src.UI.BusDialog.java", "BodyUseAPI": ["javax.swing.JTextField.getText()", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "49c76cc9bb64746755162001aa4db68c20ea4830", "Url": "https://api.github.com/repos/ser316asu/ser316-dresden-Spring18", "Date": "2018-04-18T18:13:45Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(5000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6369/buggy-version/src.com.gree.air.condition.Run.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "bfec80bf22b1a912508e88f5a2664c813a176126", "Url": "https://api.github.com/repos/tt2nn/Gree-AirCondition", "Date": "2018-03-15T04:10:38Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { currentQuests.put(q, 0); } catch (java.lang.NullPointerException npe) { plugin.getLogger().severe(((((\"Unable to add quest\" + (q.name)) + \" for player \") + (player.getName())) + \". Consider resetting player data or report on Github\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9486/buggy-version/src.main.java.me.blackvein.quests.Quester.java", "BodyUseAPI": ["java.util.concurrent.ConcurrentHashMap<me.blackvein.quests.Quest, java.lang.Integer>.put(me.blackvein.quests.Quest,int)"], "Fixed commit": "e88d7159fe5759f81ac20ec96c3912a50c8826f0", "Url": "https://api.github.com/repos/FlyingPikachu/Quests", "Date": "2018-04-21T17:53:17Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { instance.server.join(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9300/buggy-version/src.jeremiahlowe.fightinggame.server.FightingGameServerCLI.java", "BodyUseAPI": ["instance.server.join()"], "Fixed commit": "b264d24babb58379a08ef23076a6ef86859033ab", "Url": "https://api.github.com/repos/abc123me/FightingGame", "Date": "2018-09-11T16:31:49Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { int start = (shouldRotateUp) ? 0 : org.angmarch.views.NiceSpinner.MAX_LEVEL; int end = (shouldRotateUp) ? org.angmarch.views.NiceSpinner.MAX_LEVEL : 0; android.animation.ObjectAnimator animator = android.animation.ObjectAnimator.ofInt(arrowDrawable, \"level\", start, end); animator.setInterpolator(new android.support.v4.view.animation.LinearOutSlowInInterpolator()); animator.start(); } catch (java.lang.Exception e) { hideArrow(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9900/buggy-version/src.main.java.org.angmarch.views.NiceSpinner.java", "BodyUseAPI": ["android.animation.ObjectAnimator.start()", "android.animation.ObjectAnimator.setInterpolator(android.support.v4.view.animation.LinearOutSlowInInterpolator)", "android.animation.ObjectAnimator.ofInt(android.graphics.drawable.Drawable,java.lang.String,int,int)"], "Fixed commit": "6358bedd6cbc64855e8ea262318e41bfbb0e45e6", "Url": "https://api.github.com/repos/hyy12345678/nice-spinner", "Date": "2018-01-09T07:44:36Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { fos = java.security.AccessController.doPrivileged(new java.security.PrivilegedExceptionAction<java.io.FileOutputStream>() { @java.lang.Override public java.io.FileOutputStream run() throws java.io.FileNotFoundException { return new java.io.FileOutputStream(tName, tAppend); } }); } catch (java.security.PrivilegedActionException e) { throw ((java.io.FileNotFoundException) (e.getException())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/5986/buggy-version/dev.com.ibm.ws.kernel.boot.core.src.com.ibm.ws.kernel.boot.logging.DefaultFileStreamFactory.java", "BodyUseAPI": ["java.lang.Object()", "java.security.AccessController.doPrivileged(java.security.PrivilegedExceptionAction<java.io.FileOutputStream>)"], "Fixed commit": "96c1a70cee519eda9896413264866b2aede2da93", "Url": "https://api.github.com/repos/ayoho/open-liberty", "Date": "2018-10-03T15:32:30Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { fos = java.security.AccessController.doPrivileged(new java.security.PrivilegedExceptionAction<java.io.FileOutputStream>() { @java.lang.Override public java.io.FileOutputStream run() throws java.io.FileNotFoundException { return new java.io.FileOutputStream(tFile); } }); } catch (java.security.PrivilegedActionException e) { throw ((java.io.FileNotFoundException) (e.getException())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/5986/buggy-version/dev.com.ibm.ws.kernel.boot.core.src.com.ibm.ws.kernel.boot.logging.DefaultFileStreamFactory.java", "BodyUseAPI": ["java.lang.Object()", "java.security.AccessController.doPrivileged(java.security.PrivilegedExceptionAction<java.io.FileOutputStream>)"], "Fixed commit": "96c1a70cee519eda9896413264866b2aede2da93", "Url": "https://api.github.com/repos/ayoho/open-liberty", "Date": "2018-10-03T15:32:30Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { fos = java.security.AccessController.doPrivileged(new java.security.PrivilegedExceptionAction<java.io.FileOutputStream>() { @java.lang.Override public java.io.FileOutputStream run() throws java.io.FileNotFoundException { return new java.io.FileOutputStream(tFile, tAppend); } }); } catch (java.security.PrivilegedActionException e) { throw ((java.io.FileNotFoundException) (e.getException())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/5986/buggy-version/dev.com.ibm.ws.kernel.boot.core.src.com.ibm.ws.kernel.boot.logging.DefaultFileStreamFactory.java", "BodyUseAPI": ["java.security.AccessController.doPrivileged(java.security.PrivilegedExceptionAction<java.io.FileOutputStream>)", "java.lang.Object()"], "Fixed commit": "96c1a70cee519eda9896413264866b2aede2da93", "Url": "https://api.github.com/repos/ayoho/open-liberty", "Date": "2018-10-03T15:32:30Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { fos = java.security.AccessController.doPrivileged(new java.security.PrivilegedExceptionAction<java.io.FileOutputStream>() { @java.lang.Override public java.io.FileOutputStream run() throws java.io.FileNotFoundException { return new java.io.FileOutputStream(tName); } }); } catch (java.security.PrivilegedActionException e) { throw ((java.io.FileNotFoundException) (e.getException())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/5986/buggy-version/dev.com.ibm.ws.kernel.boot.core.src.com.ibm.ws.kernel.boot.logging.DefaultFileStreamFactory.java", "BodyUseAPI": ["java.security.AccessController.doPrivileged(java.security.PrivilegedExceptionAction<java.io.FileOutputStream>)", "java.lang.Object()"], "Fixed commit": "96c1a70cee519eda9896413264866b2aede2da93", "Url": "https://api.github.com/repos/ayoho/open-liberty", "Date": "2018-10-03T15:32:30Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { this.jedis.setnx(this.name, java.lang.String.valueOf(((this.startId) - 1))); } finally { this.lock.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1539/buggy-version/src.main.java.cn.zhucongqi.gedid.core.dc.impl.RedisDC.java", "BodyUseAPI": ["redis.clients.jedis.Jedis.setnx(java.lang.String,java.lang.String)", "java.lang.String.valueOf(int)"], "Fixed commit": "e0592aa060ccd4d0cc2f1a79e7535c743ab4b00a", "Url": "https://api.github.com/repos/E7du/gedid", "Date": "2018-09-03T07:00:00Z"},
{"Line": "=>492", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { comments = com.Bluefix.Prodosia.Imgur.ImgurApi.ImgurManager.client().accountService().listComments(tracker.getImgurName(), Comment.Sort.Newest, 0); } catch (java.lang.Exception ex) { return com.Bluefix.Prodosia.Imgur.CommentScanner.CommentScannerExecution.defaultBookmark(tracker); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1719/buggy-version/src.main.java.com.Bluefix.Prodosia.Imgur.CommentScanner.CommentScannerExecution.java", "BodyUseAPI": ["com.Bluefix.Prodosia.DataType.Tracker.Tracker.getImgurName()", "com.Bluefix.Prodosia.Imgur.ImgurApi.ImgurManager.client()", "com.Bluefix.Prodosia.Imgur.ImgurApi.ImgurManager.client().accountService()", "com.Bluefix.Prodosia.Imgur.ImgurApi.ImgurManager.client().accountService().listComments(tracker.getImgurName(),Comment.Sort.Newest,int)"], "Fixed commit": "94742a2b3c7ffefba5528b3b5e3fd9525bc0b923", "Url": "https://api.github.com/repos/RoseLaLuna/Prodosia", "Date": "2018-04-13T01:39:49Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return doCalc(cameraService.capturePreview()); } catch (java.lang.Exception e) { throw new java.lang.RuntimeException(\"Failed to get image brightness for preview image.\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9645/buggy-version/src.main.java.x.mvmn.gp2srv.camera.service.impl.LightMeterImpl.java", "BodyUseAPI": ["x.mvmn.gp2srv.camera.service.impl.LightMeterImpl.doCalc(cameraService.capturePreview())", "x.mvmn.gp2srv.camera.CameraService.capturePreview()"], "Fixed commit": "59d3860560d95d53ee4916853f0f5f0524d0c6c0", "Url": "https://api.github.com/repos/mvmn/gp2srv", "Date": "2018-10-19T04:17:14Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return doCalc(cameraService.fileGetThumb(folder, file)); } catch (java.lang.Exception e) { throw new java.lang.RuntimeException(((((\"Failed to get image brightness for preview of camera file '\" + file) + \"' in folder '\") + folder) + \"'\"), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9645/buggy-version/src.main.java.x.mvmn.gp2srv.camera.service.impl.LightMeterImpl.java", "BodyUseAPI": ["x.mvmn.gp2srv.camera.CameraService.fileGetThumb(java.lang.String,java.lang.String)", "x.mvmn.gp2srv.camera.service.impl.LightMeterImpl.doCalc(cameraService.fileGetThumb(folder, file))"], "Fixed commit": "59d3860560d95d53ee4916853f0f5f0524d0c6c0", "Url": "https://api.github.com/repos/mvmn/gp2srv", "Date": "2018-10-19T04:17:14Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { whizzball1.packagemod.core.PackageReader.data.getAsJsonArray(); whizzball1.packagemod.core.PackageReader.packages = whizzball1.packagemod.core.PackageReader.data.get(0).getAsJsonObject().get(\"packages\").getAsJsonArray(); } catch (java.lang.NullPointerException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/515/buggy-version/src.main.java.whizzball1.packagemod.core.PackageReader.java", "BodyUseAPI": ["com.google.gson.JsonArray.getAsJsonArray()", "whizzball1.packagemod.core.PackageReader.data.get(0).getAsJsonObject().get(\"packages\").getAsJsonArray()", "whizzball1.packagemod.core.PackageReader.data.get(0).getAsJsonObject()", "whizzball1.packagemod.core.PackageReader.data.get(0).getAsJsonObject().get(java.lang.String)", "com.google.gson.JsonArray.get(int)"], "Fixed commit": "f8c155d624865af8720440e2bd7f10e39be7eb1b", "Url": "https://api.github.com/repos/whizzball1/The-Package-Mod", "Date": "2018-05-12T20:40:44Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((future.isSuccess()) && (future.get())) { setHealthState(healthState.get().afterSuccess()); return; } } catch (java.lang.Exception e) { com.ctrip.xpipe.redis.core.proxy.endpoint.DefaultEndpointHealthChecker.logger.error(\"[check][operationComplete]\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/5210/buggy-version/redis.redis-core.src.main.java.com.ctrip.xpipe.redis.core.proxy.endpoint.DefaultEndpointHealthChecker.java", "BodyUseAPI": ["com.ctrip.xpipe.api.command.CommandFuture<java.lang.Boolean>.isSuccess()", "com.ctrip.xpipe.redis.core.proxy.endpoint.DefaultEndpointHealthChecker.EndpointHealthState.afterSuccess()", "java.util.concurrent.atomic.AtomicReference<com.ctrip.xpipe.redis.core.proxy.endpoint.DefaultEndpointHealthChecker.EndpointHealthState>.get()", "com.ctrip.xpipe.api.command.CommandFuture<java.lang.Boolean>.get()", "com.ctrip.xpipe.redis.core.proxy.endpoint.DefaultEndpointHealthChecker.EndpointHealthStatus.2.setHealthState(com.ctrip.xpipe.redis.core.proxy.endpoint.DefaultEndpointHealthChecker.EndpointHealthState)"], "Fixed commit": "7e679f56ad6f6fba98a7d6cb1806091bca8008c4", "Url": "https://api.github.com/repos/ctripcorp/x-pipe", "Date": "2018-10-17T02:44:40Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { year = br.com.ufpi.systematicmap.utils.BibtexToArticleUtils.getAttr(fields, BibTeXEntry.KEY_YEAR); year = br.com.ufpi.systematicmap.utils.BibtexToArticleUtils.remove(year); article.setYear(java.lang.Integer.parseInt(year)); } catch (java.lang.Exception e) { br.com.ufpi.systematicmap.utils.BibtexToArticleUtils.logger.warn((((\"Article year: \" + year) + \" --> \") + title)); article.setYear(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3775/buggy-version/src.main.java.br.com.ufpi.systematicmap.utils.BibtexToArticleUtils.java", "BodyUseAPI": ["br.com.ufpi.systematicmap.model.Article.setYear(int)", "br.com.ufpi.systematicmap.utils.BibtexToArticleUtils.getAttr(java.util.Map<org.jbibtex.Key, org.jbibtex.Value>,BibTeXEntry.KEY_YEAR)", "java.lang.Integer.parseInt(java.lang.String)", "br.com.ufpi.systematicmap.utils.BibtexToArticleUtils.remove(java.lang.String)"], "Fixed commit": "5736facfd958ca802f766010fa960c0e83365a9d", "Url": "https://api.github.com/repos/lostufpi/theend", "Date": "2018-07-19T14:57:27Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { userTask.setTaskData(taskManager.getTaskPure(userTask.getTaskId())); } catch (com.conedot.aland.training.exception.TaskNotFoundException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6121/buggy-version/AlandTrainingService.src.main.java.com.conedot.aland.training.manager.UserTaskManager.java", "BodyUseAPI": ["com.conedot.aland.training.manager.UserTask.setTaskData(taskManager.getTaskPure(userTask.getTaskId()))", "com.conedot.aland.training.manager.TaskManager.getTaskPure(userTask.getTaskId())", "com.conedot.aland.training.manager.UserTask.getTaskId()"], "Fixed commit": "88454db64dc966ca98cc8010e002362e043d21ff", "Url": "https://api.github.com/repos/victorwang0526/AlandTraining", "Date": "2018-08-19T03:38:41Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.jsoup.nodes.Document doc = org.jsoup.Jsoup.parse(response); org.jsoup.nodes.Element description = doc.getElementsByTag(\"course_description\").first(); android.util.Log.i(ca.unb.cs.cs2063g8.birdcall.ugrad.Description.TAG, (\"desc: \" + (description.text()))); this.description = description.text(); } catch (java.lang.Exception e) { android.util.Log.i(ca.unb.cs.cs2063g8.birdcall.ugrad.Description.TAG, (\"error reading from url: \" + (descriptionUrl.toString()))); description = \"[No Description]\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4700/buggy-version/app.src.main.java.ca.unb.cs.cs2063g8.birdcall.ugrad.Description.java", "BodyUseAPI": ["org.jsoup.nodes.Element.text()", "org.jsoup.nodes.Element.text()", "org.jsoup.nodes.Document.getElementsByTag(java.lang.String)", "doc.getElementsByTag(\"course_description\").first()", "org.jsoup.Jsoup.parse(java.lang.String)", "android.util.Log.i(java.lang.String,(\"desc: \" + (description.text())))"], "Fixed commit": "70c1b704de804fbd7f83e7da8dc0ad6547214544", "Url": "https://api.github.com/repos/dduxx/BirdCall", "Date": "2018-04-02T19:11:40Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.money = java.lang.Double.valueOf((lore.get(1).startsWith(\"Hidden:\") ? lore.get(1).substring(7) : lore.get(1))); } catch (java.lang.Exception e) { this.money = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/5535/buggy-version/src.one.lindegaard.MobHunting.rewards.Reward.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)", "java.lang.String.substring(int)", "java.lang.String.startsWith(java.lang.String)", "java.lang.Double.valueOf(java.lang.String)", "java.util.List<java.lang.String>.get(int)", "java.util.List<java.lang.String>.get(int)"], "Fixed commit": "478aa3473b963cc7bc02532c68e115ecf5c1ef5f", "Url": "https://api.github.com/repos/Rocologo/MobHunting", "Date": "2018-08-06T13:38:36Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { colorTouched = hitboxBM.getPixel(xCoord, yCoord); } catch (java.lang.Exception e) { android.util.Log.d(\"Hitbox\", e.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4243/buggy-version/app.src.main.java.edu.dartmouthcs65.museumtour.Hitbox.java", "BodyUseAPI": ["android.graphics.Bitmap.getPixel(int,int)"], "Fixed commit": "878a2d1baafedb4bd0352bfc4fe8a230113a6911", "Url": "https://api.github.com/repos/johnlev/CS65-RoomKit", "Date": "2018-03-07T18:51:45Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { project.DataManager.deleteImage(project.DataManager.getProperty(player.toString(), \"icon\")); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4643/buggy-version/4-Gewinnt.src.project.EditPlayer.java", "BodyUseAPI": ["project.DataManager.getProperty(java.lang.String,java.lang.String)", "java.lang.Object.toString()", "project.DataManager.deleteImage(project.DataManager.getProperty(player.toString(), \"icon\"))"], "Fixed commit": "48146da32c74aadf06d6c672f531ebeb3087a062", "Url": "https://api.github.com/repos/SebastianMichaelis1997/4Gewinnt", "Date": "2018-07-29T21:05:42Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { subResource.deletePermissionRole(ctx, roleFound.getCsid(), SubjectType.PERMISSION); } catch (org.collectionspace.services.common.document.DocumentNotFoundException dnf) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2486/buggy-version/services.authorization-mgt.service.src.main.java.org.collectionspace.services.authorization.storage.RoleDocumentHandler.java", "BodyUseAPI": ["org.collectionspace.services.authorization.PermissionRoleSubResource.deletePermissionRole(org.collectionspace.services.common.context.ServiceContext,roleFound.getCsid(),SubjectType.PERMISSION)", "org.collectionspace.services.authorization.Role.getCsid()"], "Fixed commit": "66405e375010e324e568fbc34bc907de43027cbd", "Url": "https://api.github.com/repos/collectionspace/services", "Date": "2018-02-06T01:49:54Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return inflater.inflate(R.layout.fragment_scan, container, false); } catch (java.lang.Exception e) { android.util.Log.println(Log.ASSERT, \"ERROR\", e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1820/buggy-version/app.src.main.java.edu.umkc.platescanner.FragmentScan.java", "BodyUseAPI": ["android.view.LayoutInflater.inflate(R.layout.fragment_scan,android.view.ViewGroup,boolean)"], "Fixed commit": "1c4db2412fcd8bb933fe44c3de329cb577d41f0e", "Url": "https://api.github.com/repos/Everest84/PlateScan", "Date": "2018-10-08T18:20:54Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { claims = org.boot.security.security.Jwts.parser().setSigningKey(secret).parseClaimsJws(token).getBody(); } catch (org.boot.security.security.JwtException e) { log.error(e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9070/buggy-version/boot-security.src.main.java.org.boot.security.security.JwtTokenHandler.java", "BodyUseAPI": ["org.boot.security.security.Jwts.parser().setSigningKey(secret).parseClaimsJws(token).getBody()", "org.boot.security.security.Jwts.parser()", "org.boot.security.security.Jwts.parser().setSigningKey(secret).parseClaimsJws(java.lang.String)", "org.boot.security.security.Jwts.parser().setSigningKey(java.lang.String)"], "Fixed commit": "6501bd14b3012a14e8a85f72ada8e945925f9f9a", "Url": "https://api.github.com/repos/LuoLiangDSGA/spring-learning", "Date": "2018-07-17T15:06:56Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { peer.Stop(); } catch (java.io.FileNotFoundException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6182/buggy-version/main.java.com.sunbash.wifigram.Messaging.java", "BodyUseAPI": ["com.sunbash.wifigram.Peer.Stop()"], "Fixed commit": "4bfcacfbf3aa5a3e6ad62dd3a04b92a91b9e83a4", "Url": "https://api.github.com/repos/Yxbcvn410/WiFiGram", "Date": "2018-07-06T00:03:04Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return ((T) (java.lang.Long.valueOf(textValue))); } catch (java.lang.Exception e) { throw new java.lang.RuntimeException(((\"Decode long value failed. Text value: `\" + (new java.lang.String(src, valueOffset, valueLength, java.nio.charset.Charset.forName(\"US-ASCII\")))) + \"`.\"), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7021/buggy-version/src.main.java.com.heimuheimu.naivecache.transcoder.SimpleTranscoder.java", "BodyUseAPI": ["java.lang.Long.valueOf(java.lang.String)"], "Fixed commit": "4970e6f673a68a50e73845132f68fcc269f20ed1", "Url": "https://api.github.com/repos/heimuheimu/naivecache", "Date": "2018-03-02T11:58:50Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { int number = java.lang.Integer.parseInt(amount.getText().toString()); } catch (java.lang.Exception e) { android.widget.Toast toast = android.widget.Toast.makeText(this, \"Please enter a valid amount\", Toast.LENGTH_SHORT); toast.show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6475/buggy-version/app.src.main.java.com.sdcg3.sheltersearcher.controllers.ShelterDetailActivity.java", "BodyUseAPI": ["java.lang.Integer.parseInt(amount.getText().toString())", "amount.getText().toString()", "android.widget.EditText.getText()"], "Fixed commit": "55f290c9ac63b5fc89a836933cfeeb590bf4cfeb", "Url": "https://api.github.com/repos/EpicPi/CS2340-56", "Date": "2018-03-28T03:27:22Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { this.mListener = ((software.enclavegroup.quiz.utilities.DialogUtilities.OnCompleteListener) (activity)); } catch (final java.lang.ClassCastException e) { throw new java.lang.ClassCastException(activity.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6487/buggy-version/Quiz.app.src.main.java.software.enclavegroup.quiz.utilities.DialogUtilities.java", "BodyUseAPI": [], "Fixed commit": "a19335ff05923d2f7deb4ad36070d161745b8f8d", "Url": "https://api.github.com/repos/ArtemGord1728/IKwow", "Date": "2018-09-14T22:38:16Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { pl.plajer.buildbattle3.arena.Arena.addToBlackList(org.bukkit.Material.valueOf(item.toUpperCase())); } catch (java.lang.IllegalArgumentException ex) { org.bukkit.Bukkit.getConsoleSender().sendMessage(((((org.bukkit.ChatColor.RED) + \"[BuildBattle] Invalid black listed item! \") + item) + \" doesn't exist, are you sure it's properly named?\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3334/buggy-version/src.pl.plajer.buildbattle3.ConfigPreferences.java", "BodyUseAPI": ["org.bukkit.Material.valueOf(java.lang.String)", "java.lang.String.toUpperCase()", "pl.plajer.buildbattle3.arena.Arena.addToBlackList(org.bukkit.Material.valueOf(item.toUpperCase()))"], "Fixed commit": "0594366b31e796c692f33283289a396a06af0cd1", "Url": "https://api.github.com/repos/Plajer-Lair/BuildBattle", "Date": "2018-08-20T13:14:35Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.util.Log.i(com.gkwak.lottonumbergenerator.activities.SplashActivity.TAG, \"start date compare\"); currentDate = d; standardDate = sdf.parse(standard); currentDate = new java.util.Date(((currentDate.getTime()) + (9 * (com.gkwak.lottonumbergenerator.activities.SplashActivity.HOUR)))); android.util.Log.i(com.gkwak.lottonumbergenerator.activities.SplashActivity.TAG, (\"currentDate : \" + currentDate)); android.util.Log.i(com.gkwak.lottonumbergenerator.activities.SplashActivity.TAG, (\"standardDate : \" + standardDate)); long diff = (currentDate.getTime()) - (standardDate.getTime()); long diffDays = diff / (((24 * 60) * 60) * 1000); android.util.Log.i(com.gkwak.lottonumbergenerator.activities.SplashActivity.TAG, (\"standardDate : \" + diffDays)); if (((diffDays / 7) > 0) && ((diffDays % 7) != 0)) { standardDrwNo += diffDays / 7; } } catch (java.text.ParseException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6059/buggy-version/app.src.main.java.com.gkwak.lottonumbergenerator.activities.SplashActivity.java", "BodyUseAPI": ["java.text.SimpleDateFormat.parse(java.lang.String)", "java.util.Date.getTime()", "android.util.Log.i(java.lang.String,java.lang.String)", "java.util.Date.getTime()", "android.util.Log.i(java.lang.String,java.lang.String)", "java.util.Date.getTime()", "android.util.Log.i(java.lang.String,java.lang.String)", "android.util.Log.i(java.lang.String,java.lang.String)"], "Fixed commit": "2085a23f8fe7900cb5cb9fe36fd9ca7598352187", "Url": "https://api.github.com/repos/kgmhk/LottoNumberGenerator", "Date": "2018-09-28T15:40:01Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mDrawCardsButton.setEnabled(toggle); mPlaceTrainsButton.setEnabled(toggle); mDrawRoutesButton.setEnabled(toggle); } catch (java.lang.Exception e) { this.runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { mDrawCardsButton.setEnabled(threadToggle); mPlaceTrainsButton.setEnabled(threadToggle); mDrawRoutesButton.setEnabled(threadToggle); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8924/buggy-version/app.src.main.java.views_and_presenters.GameActivity.java", "BodyUseAPI": ["android.widget.Button.setEnabled(boolean)", "android.widget.Button.setEnabled(boolean)", "android.widget.Button.setEnabled(boolean)"], "Fixed commit": "8ec51c2e3a9004f2bdc29c93e6d135b4c8134cce", "Url": "https://api.github.com/repos/kurtishill/Ticket_To_Ride", "Date": "2018-03-06T19:50:05Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return javax.ws.rs.core.Response.ok(exists(getSubject(subject).lookupBySchema(schema)).getId()).build(); } catch (java.lang.IllegalArgumentException e) { return javax.ws.rs.core.Response.status(Status.BAD_REQUEST).entity(e.getMessage()).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6766/buggy-version/server.src.main.java.org.schemarepo.server.RESTRepository.java", "BodyUseAPI": ["org.schemarepo.SchemaEntry.getId()", "org.schemarepo.server.RESTRepository.exists(getSubject(subject).lookupBySchema(schema))", "javax.ws.rs.core.Response.ok(exists(getSubject(subject).lookupBySchema(schema)).getId()).build()", "javax.ws.rs.core.Response.ok(exists(getSubject(subject).lookupBySchema(schema)).getId())", "org.schemarepo.server.RESTRepository.getSubject(java.lang.String)", "org.schemarepo.Subject.lookupBySchema(java.lang.String)"], "Fixed commit": "90ce85f4ca9b5352f106f06896d84ea94c895a24", "Url": "https://api.github.com/repos/chekore/schema-repo", "Date": "2018-09-13T09:44:36Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(100); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/544/buggy-version/app.src.main.java.edu.csula.dream.exercise.multiplayer.replay.track.ReplayTrackGameFragment.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "c956d3faae492990b4fdee5808a909aa4f98f31e", "Url": "https://api.github.com/repos/DREAM-CSULA/dream-mobile-client", "Date": "2018-10-05T06:29:17Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { c1 = java.lang.Class.forName(cn1); } catch (java.lang.Exception e) { return new java.util.AbstractMap.SimpleEntry<>(null, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/5381/buggy-version/src.main.java.com.gmail.berndivader.mythicmobsext.externals.Internals.java", "BodyUseAPI": ["java.lang.Class.forName(java.lang.String)"], "Fixed commit": "832e8f6b52026c91cdec3aa3dcbbe3c65356b854", "Url": "https://api.github.com/repos/BerndiVader/MythicMobsExtension", "Date": "2018-10-24T18:29:00Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.System.out.println(((((\"[DEBUG] Save note list: \" + (main.java.memoranda.util.FileStorage.JN_DOCPATH)) + (prj.getID())) + (java.io.File.separator)) + \".notes\")); main.java.memoranda.util.FileStorage.saveDocument(nl.getXMLContent(), ((((main.java.memoranda.util.FileStorage.JN_DOCPATH) + (prj.getID())) + (java.io.File.separator)) + \".notes\")); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/689/buggy-version/src.main.java.memoranda.util.FileStorage.java", "BodyUseAPI": ["main.java.memoranda.util.FileStorage.saveDocument(nl.getXMLContent(),((((main.java.memoranda.util.FileStorage.JN_DOCPATH) + (prj.getID())) + (java.io.File.separator)) + \".notes\"))", "main.java.memoranda.NoteList.getXMLContent()", "main.java.memoranda.Project.getID()", "java.io.PrintStream.println(((((\"[DEBUG] Save note list: \" + (main.java.memoranda.util.FileStorage.JN_DOCPATH)) + (prj.getID())) + (java.io.File.separator)) + \".notes\"))", "main.java.memoranda.Project.getID()"], "Fixed commit": "ca9119a60c2e255dadc445395eb6d7cc278556ec", "Url": "https://api.github.com/repos/ser316asu-2018/Ahrensburg", "Date": "2018-04-27T03:35:23Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { inputStream = new java.io.BufferedInputStream(new java.io.FileInputStream(filePath)); } catch (java.io.FileNotFoundException e) { org.springframework.core.io.ClassPathResource resource = new org.springframework.core.io.ClassPathResource(\"application.yml\"); inputStream = resource.getInputStream(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7783/buggy-version/src.main.java.com.mvc.security.procedure.config.BeanConfig.java", "BodyUseAPI": [], "Fixed commit": "2cdcbfccaad74aebf504bd59105078b22216f13f", "Url": "https://api.github.com/repos/mvchain/token-security-procedure", "Date": "2018-10-26T10:06:53Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { rightChartPanel.setChart(com.company.QHGraphBuilder.getXYChart(com.company.QHTable.defaultTableModel)); } catch (java.lang.NumberFormatException e1) { com.company.TableUtils.displayMessageOnScreen((((((((\"Can't built the graph.\" + (java.lang.System.lineSeparator())) + \"The value on \") + ((e.getFirstRow()) + 1)) + \" row\") + \" and \") + ((e.getColumn()) + 1)) + \" column is invalid\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/2145/buggy-version/src.com.company.QHTable.java", "BodyUseAPI": ["org.jfree.chart.ChartPanel.setChart(com.company.QHGraphBuilder.getXYChart(com.company.QHTable.defaultTableModel))", "com.company.QHGraphBuilder.getXYChart(javax.swing.table.DefaultTableModel)"], "Fixed commit": "3ab015c79132e5ab71ea77f14947d9737ac27c1d", "Url": "https://api.github.com/repos/tastytacos/QH-Editor", "Date": "2018-09-08T16:30:18Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { monthNumber = java.lang.Integer.valueOf(yearInput); } catch (java.lang.NumberFormatException e) { monthNumber = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/9705/buggy-version/Ivory.app.src.main.java.com.iter.ivory.AddVaccination.java", "BodyUseAPI": ["java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "eda2f71c2c3b9a4e38f9e50582c016a6c9054bd2", "Url": "https://api.github.com/repos/davidmargolin/Ivory", "Date": "2018-02-08T10:37:09Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { goal.setCompleted(true); broker.setGoalAsCompleted(goal, client); menu.updateTables(); } catch (java.lang.NullPointerException e) { java.lang.System.out.println(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/9835/buggy-version/ForeverYoung.src.foreveryoung.ClientMenuController.java", "BodyUseAPI": ["foreveryoung.Goal.setCompleted(boolean)", "foreveryoung.ClientMenu.updateTables()", "foreveryoung.Broker.setGoalAsCompleted(foreveryoung.Goal,foreveryoung.Client)"], "Fixed commit": "f09de5747c466e89e7306cd6c6373c707d6d9f82", "Url": "https://api.github.com/repos/tom-mcs/ForeverYoung", "Date": "2018-05-30T02:11:23Z"},
{"Line": "=>1084", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { origW = getDrawable().getIntrinsicWidth(); origH = getDrawable().getIntrinsicHeight(); } catch (java.lang.Exception ex) { android.util.Log.d(\"IMG Resize\", ex.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3301/buggy-version/app.src.main.java.webfreak.si.rainradar.TouchImageView.java", "BodyUseAPI": ["getDrawable().getIntrinsicWidth()", "webfreak.si.rainradar.TouchImageView.getDrawable()", "webfreak.si.rainradar.TouchImageView.getDrawable()", "getDrawable().getIntrinsicHeight()"], "Fixed commit": "f065ae957acb7a13a858bda006bc8f8c6ef3c5c2", "Url": "https://api.github.com/repos/webfrea-k/rr", "Date": "2018-08-07T20:45:59Z"},
{"Line": "=>600", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { userDao.update(userUpdatingProfile); } catch (java.lang.Exception e) { user = profileDao.showProfile(pid).getUser(); mv.addObject(\"pid\", user.getProfile().getId()); mv.addObject(\"profile\", user.getProfile()); mv.addObject(\"invalidSettingsMessage\", \"Username or Email is already taken\"); mv.setViewName(\"WEB-INF/views/settings.jsp\"); return mv; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3152/buggy-version/ideasMVC.src.main.java.com.skilldistillery.ideas.controllers.IdeaController.java", "BodyUseAPI": ["com.skilldistillery.ideas.data.UserDAO.update(com.skilldistillery.ideasjpa.entities.User)"], "Fixed commit": "03b839cc54e9497ba9ad7edaf20dc51a4d86fa2c", "Url": "https://api.github.com/repos/SvenSkoglund/ideas", "Date": "2018-05-02T23:11:31Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { json.put(\"appid\", appid); json.put(\"chid\", chid); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/2346/buggy-version/src.android.SdkProxyPlugin.java", "BodyUseAPI": ["org.json.JSONObject.put(java.lang.String,java.lang.String)", "org.json.JSONObject.put(java.lang.String,java.lang.String)"], "Fixed commit": "c416928ab3b778670fc97e957271f6a53bf28dfe", "Url": "https://api.github.com/repos/k-kbox/cordova-plugin-sdkproxy", "Date": "2018-08-29T04:51:14Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { user = userService.getUser(userId); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/9221/buggy-version/src.main.java.com.makhlouf.controller.UserController.java", "BodyUseAPI": ["com.makhlouf.service.UserService.getUser(java.lang.Long)"], "Fixed commit": "c96b52446728a7d057d2b66242aebbde81380349", "Url": "https://api.github.com/repos/Raouf25/RaoufWebApp", "Date": "2017-01-18T11:00:24Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { platformMBeanServer.registerMBean(appConfig, new javax.management.ObjectName(\"profiling\", \"name\", \"appConfig\")); } catch (javax.management.JMException e) { java.lang.System.out.println(\"Connot register profiling MBean\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7485/buggy-version/spring-ripper.src.main.java.quoters.config.ProfiledMethodAnnotationBeanPostProcessor.java", "BodyUseAPI": ["javax.management.MBeanServer.registerMBean(quoters.config.AppConfig,javax.management.ObjectName)"], "Fixed commit": "6cb29bc65589e9814bbbd29e46197fffa620d3fc", "Url": "https://api.github.com/repos/Imagooa/sandbox", "Date": "2018-02-10T10:15:25Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(10000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/9159/buggy-version/src.main.java.com.jaeksoft.searchlib.parser.htmlParser.WebDriverParserAbstract.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "06e2bcb28802bf9e2d123f63b617025b45efa4ef", "Url": "https://api.github.com/repos/devmobileaim/opensearchserver", "Date": "2018-02-20T05:56:32Z"},
{"Line": "=>768", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { rawData = result.split(\"!\")[1]; } catch (java.lang.ArrayIndexOutOfBoundsException a) { rawData = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/2474/buggy-version/app.src.main.java.net.mpross.pws.MainActivity.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "1872ce62fd010d75cf03a81500842e3076b63ffb", "Url": "https://api.github.com/repos/mpross/WU-PWS", "Date": "2018-08-17T01:08:47Z"},
{"Line": "=>486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(4000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/699/buggy-version/src.main.java.pageObjects.ProjectPage.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "53b0d025cd764d547bdf79b2a15c3e330ee1f520", "Url": "https://api.github.com/repos/mshafea/HomifyWeb", "Date": "2018-09-11T10:18:05Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return statementAdapter.apply(results.next()); } catch (java.lang.Exception e) { throw new java.util.NoSuchElementException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3449/buggy-version/commons-rdf-rdf4j.src.main.java.org.apache.commons.rdf.rdf4j.impl.ConvertedStatements.java", "BodyUseAPI": ["java.util.function.Function<org.eclipse.rdf4j.model.Statement, T>.apply(results.next())", "org.eclipse.rdf4j.repository.RepositoryResult<org.eclipse.rdf4j.model.Statement>.next()"], "Fixed commit": "5cd47999b047ae3ed633d54458c40da72dc5d774", "Url": "https://api.github.com/repos/BME-MIT-IET/Csipet-Csapat-iet-2018", "Date": "2018-05-06T19:40:13Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { lock.lock(); java.lang.String locationId = this.getTaskRepository().getTaskMetadataProp(taskInfo.getName(), org.wso2.carbon.ntask.core.impl.clustered.ClusteredTaskManager.TASK_MEMBER_LOCATION_META_PROP_ID); this.registerLocalTask(taskInfo); if (locationId != null) { this.getTaskRepository().setTaskMetadataProp(taskInfo.getName(), org.wso2.carbon.ntask.core.impl.clustered.ClusteredTaskManager.TASK_MEMBER_LOCATION_META_PROP_ID, locationId); } } finally { lock.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/5953/buggy-version/components.ntask.org.wso2.carbon.ntask.core.src.main.java.org.wso2.carbon.ntask.core.impl.clustered.ClusteredTaskManager.java", "BodyUseAPI": ["java.util.concurrent.locks.Lock.lock()", "this.getTaskRepository().getTaskMetadataProp(taskInfo.getName(),java.lang.String)", "org.wso2.carbon.ntask.core.impl.clustered.ClusteredTaskManager.getTaskRepository()", "org.wso2.carbon.ntask.core.impl.clustered.ClusteredTaskManager.getTaskRepository()", "this.getTaskRepository().setTaskMetadataProp(taskInfo.getName(),java.lang.String,java.lang.String)", "org.wso2.carbon.ntask.core.impl.clustered.TaskInfo.getName()", "org.wso2.carbon.ntask.core.impl.clustered.ClusteredTaskManager.registerLocalTask(org.wso2.carbon.ntask.core.impl.clustered.TaskInfo)", "org.wso2.carbon.ntask.core.impl.clustered.TaskInfo.getName()"], "Fixed commit": "d1c90db79dd09191204eec18e42edaac45d95136", "Url": "https://api.github.com/repos/wso2/carbon-commons", "Date": "2018-05-22T08:35:19Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (assignment != null) { java.lang.String uri = java.lang.String.format(org.openmrs.module.bedmanagement.atomfeed.BedAssignmentAdvice.TEMPLATE, assignment.getUuid()); return new org.ict4h.atomfeed.server.service.Event(java.util.UUID.randomUUID().toString(), org.openmrs.module.bedmanagement.atomfeed.BedAssignmentAdvice.TITLE, null, uri, uri, org.openmrs.module.bedmanagement.atomfeed.BedAssignmentAdvice.CATEGORY); } } catch (java.net.URISyntaxException ex) { throw new java.lang.RuntimeException(ex.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8648/buggy-version/api.src.main.java.org.openmrs.module.bedmanagement.atomfeed.BedAssignmentAdvice.java", "BodyUseAPI": ["org.openmrs.module.bedmanagement.entity.BedPatientAssignment.getUuid()", "java.lang.String.format(java.lang.String,assignment.getUuid())", "java.util.UUID.randomUUID()", "java.util.UUID.toString()"], "Fixed commit": "c7cd4c243a389e45d9f1ca72caaccf65d68c161c", "Url": "https://api.github.com/repos/sanishmaharjan/openmrs-module-bedmanagement", "Date": "2018-03-05T08:36:38Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { byte[] encodedProductImage = java.util.Base64.getEncoder().encode(org.apache.commons.io.FileUtils.readFileToByteArray(productImage)); product.setBase64ProductImage(new java.lang.String(encodedProductImage, java.nio.charset.StandardCharsets.UTF_8)); byte[] encodedProductUserManual = java.util.Base64.getEncoder().encode(org.apache.commons.io.FileUtils.readFileToByteArray(productUserManual)); product.setBase64ProductUserManual(new java.lang.String(encodedProductUserManual, java.nio.charset.StandardCharsets.UTF_8)); } catch (java.lang.Exception e) { com.packt.webstore.controller.ProductController.logger.error((\"Exception : \" + (e.getMessage())), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/6301/buggy-version/src.main.java.com.packt.webstore.controller.ProductController.java", "BodyUseAPI": ["com.packt.webstore.domain.Product.setBase64ProductImage(java.lang.String)", "java.util.Base64.Encoder.encode(org.apache.commons.io.FileUtils.readFileToByteArray(productImage))", "java.util.Base64.getEncoder()", "org.apache.commons.io.FileUtils.readFileToByteArray(java.io.File)", "com.packt.webstore.domain.Product.setBase64ProductUserManual(java.lang.String)", "java.util.Base64.getEncoder()", "org.apache.commons.io.FileUtils.readFileToByteArray(java.io.File)", "java.util.Base64.Encoder.encode(org.apache.commons.io.FileUtils.readFileToByteArray(productUserManual))"], "Fixed commit": "69f118b50c4d57e0d159c03ba67ffa3df9bbf068", "Url": "https://api.github.com/repos/stephenleow91/webstore", "Date": "2018-09-03T03:38:06Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (min > (java.lang.Integer.parseInt(args[0]))) { minecart = null; continue; } } catch (java.lang.NumberFormatException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3594/buggy-version/src.main.java.com.jaoafa.MyMaid2.Command.Cmd_Ck.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "7e5def6b07afdd5dfb380aae3c1fbe0c72ab216d", "Url": "https://api.github.com/repos/jaoafa/MyMaid2", "Date": "2018-04-21T19:01:09Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { return changeSet.getChanges().isEmpty(); } finally { lock.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3571/buggy-version/afs.afs-storage-api.src.main.java.com.powsybl.afs.storage.buffer.StorageChangeBuffer.java", "BodyUseAPI": ["com.powsybl.afs.storage.buffer.StorageChangeSet.getChanges()", "changeSet.getChanges().isEmpty()"], "Fixed commit": "db0ef7ecceded38eb19a36a63fbc89d3f5d1a13a", "Url": "https://api.github.com/repos/powsybl/powsybl-core", "Date": "2018-01-03T13:59:10Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.Map<java.lang.String, java.lang.String> map = getShaAndContent(token, contentsUrl, ref); java.lang.String content = map.get(\"content\"); dict.addAll(org.apache.commons.io.IOUtils.readLines(new java.io.StringReader(content))); } catch (org.springframework.web.client.HttpClientErrorException e) { log.debug(\"There is no typofixer.dic.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/6176/buggy-version/src.main.java.jp.aha.oretama.typoChecker.GitHubTemplate.java", "BodyUseAPI": ["jp.aha.oretama.typoChecker.GitHubTemplate.getShaAndContent(jp.aha.oretama.typoChecker.model.Token,java.lang.String,java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.List<java.lang.String>.addAll(org.apache.commons.io.IOUtils.readLines(new java.io.StringReader(content)))", "org.apache.commons.io.IOUtils.readLines(java.io.StringReader)"], "Fixed commit": "5b43368090aacdf92ac601a8445b50f35dbb2f64", "Url": "https://api.github.com/repos/aha-oretama/TypoFixer", "Date": "2018-05-13T07:51:21Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { sendLetterApi.sendLetter(authTokenGenerator.generate(), new uk.gov.hmcts.reform.sendletter.api.Letter(event.getDocuments(), uk.gov.hmcts.cmc.claimstore.documents.BulkPrintService.XEROX_TYPE_PARAMETER)); } catch (java.lang.Exception e) { e.printStackTrace(); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4218/buggy-version/src.main.java.uk.gov.hmcts.cmc.claimstore.documents.BulkPrintService.java", "BodyUseAPI": ["uk.gov.hmcts.reform.authorisation.generators.AuthTokenGenerator.generate()", "uk.gov.hmcts.reform.sendletter.api.SendLetterApi.sendLetter(authTokenGenerator.generate(),uk.gov.hmcts.reform.sendletter.api.Letter)", "uk.gov.hmcts.cmc.claimstore.events.DocumentReadyToPrintEvent.getDocuments()"], "Fixed commit": "49c7f7f2d4ff1949df592c455dd4c59020696281", "Url": "https://api.github.com/repos/hmcts/cmc-claim-store", "Date": "2018-03-13T09:25:42Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { lns.add(scan.nextLine().split(\"(?<!\\\\\\\\)#\")[0].trim()); } catch (java.lang.ArrayIndexOutOfBoundsException e) { lns.add(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/9085/buggy-version/com.blazingkin.interpreter.executor.sourcestructures.Process.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)", "java.util.Scanner.nextLine()", "java.lang.String.split(java.lang.String)", "java.lang.String.trim()"], "Fixed commit": "287fc138b7f1f6e07603b2b3e8b3d555a40f1c94", "Url": "https://api.github.com/repos/blazingkin/blz-ospl", "Date": "2018-01-26T04:24:11Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { getAppiumDriver().quit(); driver.remove(); } catch (com.joss.conductor.mobile.org.openqa exception) { org.pmw.tinylog.Logger.warn(\"WebDriverException occurred during quit method\", exception); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8058/buggy-version/src.main.java.com.joss.conductor.mobile.Locomotive.java", "BodyUseAPI": ["com.joss.conductor.mobile.Locomotive.getAppiumDriver()", "java.lang.ThreadLocal<io.appium.java_client.AppiumDriver>.remove()", "io.appium.java_client.AppiumDriver.quit()"], "Fixed commit": "b645d87d443bbf284194406d117fc1839ea45463", "Url": "https://api.github.com/repos/willowtreeapps/conductor-mobile", "Date": "2018-09-27T18:17:14Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { loader = java.net.URLClassLoader.newInstance(new java.net.URL[]{ url }, getClass().getClassLoader()); bl4ckscor3.discord.bl4ckb0t.AbstractModule module = java.lang.Class.forName(main, true, loader).asSubclass(bl4ckscor3.discord.bl4ckb0t.AbstractModule.class).getDeclaredConstructor(java.lang.String.class).newInstance(name); module.onEnable(builder); if (bl4ckscor3.discord.bl4ckb0t.ModuleManager.MODULES.contains(module)) { java.lang.System.out.println(\"Tried to load already loaded module.\"); return 0; } bl4ckscor3.discord.bl4ckb0t.ModuleManager.MODULES.add(module); java.lang.System.out.println((\" Loaded module \" + name)); return 1; } catch (java.lang.ClassCastException e) { java.lang.System.out.println(((\" \" + name) + \": Main class does not extend bl4ckscor3.bot.bl4ckb0t.AbstractModule\")); return -1; } catch (java.lang.ClassNotFoundException e) { java.lang.System.out.println((((\" \" + name) + \": Couldn't find main class \") + main)); return -1; } catch (java.lang.Exception e) { java.lang.System.out.println(((\" AbstractModule \" + name) + \" could not be loaded due to an error. Is it even a module?\")); e.printStackTrace(); return -1; } finally { if (loader != null) loader.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/476/buggy-version/src.bl4ckscor3.discord.bl4ckb0t.ModuleManager.java", "BodyUseAPI": ["java.util.ArrayList<bl4ckscor3.discord.bl4ckb0t.AbstractModule>.contains(bl4ckscor3.discord.bl4ckb0t.AbstractModule)", "bl4ckscor3.discord.bl4ckb0t.ModuleManager.getClass()", "java.util.ArrayList<bl4ckscor3.discord.bl4ckb0t.AbstractModule>.add(bl4ckscor3.discord.bl4ckb0t.AbstractModule)", "java.lang.Class<?>.asSubclass(java.lang.Class)", "bl4ckscor3.discord.bl4ckb0t.AbstractModule.onEnable(sx.blah.discord.api.ClientBuilder)", "java.io.PrintStream.println(java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "java.lang.reflect.Constructor<? extends bl4ckscor3.discord.bl4ckb0t.AbstractModule>.newInstance(java.lang.String)", "java.lang.Class.forName(java.lang.String,boolean,java.net.URLClassLoader)", "java.lang.Class<? extends bl4ckscor3.discord.bl4ckb0t.AbstractModule>.getDeclaredConstructor(java.lang.Class)", "java.net.URLClassLoader.newInstance(java.net.URL[],java.lang.ClassLoader)", "java.lang.Class<? extends bl4ckscor3.discord.bl4ckb0t.ModuleManager>.getClassLoader()"], "Fixed commit": "8c9a7b636e16471cad014666baa1a4103d782381", "Url": "https://api.github.com/repos/bl4ckscor3/bl4ckb0t-discord", "Date": "2018-07-11T18:26:51Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { number = in.nextInt(); } catch (java.util.InputMismatchException e) { java.lang.System.out.println(\"Please only enter a number\"); i--; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/5721/buggy-version/src.client.ClientCommandLine.java", "BodyUseAPI": ["java.util.Scanner.nextInt()"], "Fixed commit": "9455f689257d185451ecb4c2e539a1d130d343c1", "Url": "https://api.github.com/repos/jhanson3/RoboticsScouting", "Date": "2018-04-28T03:28:51Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ans = java.lang.Integer.parseInt(Other.in.readLine()); } catch (java.io.IOException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/2308/buggy-version/v6.Other.java", "BodyUseAPI": ["java.io.BufferedReader.readLine()", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "f4f2c5c766db12da96ada3e451d0b4c27907da63", "Url": "https://api.github.com/repos/ewong11/biolab", "Date": "2018-01-15T16:37:37Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { super.close(); } finally { org.apache.storm.metric.timed.TimedResource.getMeasured().close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/5839/buggy-version/storm-server.src.main.java.org.apache.storm.metric.timed.TimedResource.java", "BodyUseAPI": ["org.apache.storm.metric.timed.Timed<T>.close()"], "Fixed commit": "2803795118b2112f781c4298aa5a5ebe67918623", "Url": "https://api.github.com/repos/zd-project/storm", "Date": "2018-06-28T22:06:59Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { r.refactor(); } catch (refactoring.RefactoringError e) { java.lang.System.out.println((\"ERROR: \" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/9885/buggy-version/src.main.java.app.Puck2Main.java", "BodyUseAPI": ["refactoring.rename.RenameBase.refactor()"], "Fixed commit": "eb1d2c02e1613b7bf20bceba5fafa86627da62e5", "Url": "https://api.github.com/repos/geoffreycopin/puck2", "Date": "2018-05-26T16:47:55Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { service.loadTextIntroFile(); } catch (java.io.FileNotFoundException e) { view.fileError(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/9176/buggy-version/Terminal_Customization.src.main.java.com.souldj673.terminal_customization.textintro.controller.TextIntroController.java", "BodyUseAPI": ["com.souldj673.terminal_customization.textintro.service.TextIntroService.loadTextIntroFile()"], "Fixed commit": "92773d24a9a41f6d145ec9ccb55a55dfa983323e", "Url": "https://api.github.com/repos/SoulDJ673/Home-Java-Projects", "Date": "2018-10-13T21:39:03Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { icon = new javax.swing.ImageIcon(studio.visualdust.product.filechangechecktool.Resource.DataResource.class.getResource(\"WindowIcon.png\").toURI().toURL()); NFCTLauncher.mainFrame.setIconImage(icon.getImage()); } catch (java.lang.Exception e) { EventRW.Write(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1031/buggy-version/src.NFCTLauncher.java", "BodyUseAPI": ["javax.swing.ImageIcon.getImage()", "java.lang.Class.getResource(java.lang.String)", "java.net.URL.toURI()", "MainFrame.setIconImage(java.awt.Image)", "java.net.URI.toURL()"], "Fixed commit": "ef76fb2c989f81b50e3e7a2d25f7387a93d23811", "Url": "https://api.github.com/repos/visualDust/FileChangeCheckTool", "Date": "2018-07-16T03:14:00Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.futures.add(this.service.submit(new org.vitrivr.cineast.core.importer.handlers.DataImportRunner(new org.vitrivr.cineast.core.importer.JsonObjectImporter(p.toFile()), filename.replace(suffix, \"\")))); } catch (java.io.IOException e) { org.vitrivr.cineast.core.importer.handlers.JsonDataImportHandler.LOGGER.error(\"Could not start data import for file '{}'. Skipping...?\", p.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/5691/buggy-version/src.org.vitrivr.cineast.core.importer.handlers.JsonDataImportHandler.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "this.futures.add(this.service.submit(new org.vitrivr.cineast.core.importer.handlers.DataImportRunner(new org.vitrivr.cineast.core.importer.JsonObjectImporter(p.toFile()), filename.replace(suffix, \"\"))))", "this.service.submit(org.vitrivr.cineast.core.importer.handlers.DataImportRunner)", "java.nio.file.Path.toFile()"], "Fixed commit": "79012e5c554a7f1f04d5d933c11327f4e4930ff9", "Url": "https://api.github.com/repos/vitrivr/cineast", "Date": "2018-03-08T09:17:53Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { text = java.net.URLEncoder.encode(text, \"UTF-8\"); } catch (java.io.UnsupportedEncodingException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/2318/buggy-version/src.main.java.xyz.jaoafa.mymaid.Command.Report.java", "BodyUseAPI": ["java.net.URLEncoder.encode(java.lang.String,java.lang.String)"], "Fixed commit": "c978f450e726e5f08e3dc9f669482c0758ab9cdd", "Url": "https://api.github.com/repos/book000/MyMaid", "Date": "2018-01-14T19:23:33Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { loginLogDao.insertLoginLog(loginLogDo); } catch (java.lang.Exception ex) { com.ineedwhite.diancan.web.interceptor.LogginInterceptor.logger.error(\"interceptor occurs exception\", ex); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4073/buggy-version/diancan-web.src.main.java.com.ineedwhite.diancan.web.interceptor.LogginInterceptor.java", "BodyUseAPI": ["com.ineedwhite.diancan.dao.dao.LoginLogDao.insertLoginLog(com.ineedwhite.diancan.dao.domain.LoginLogDo)"], "Fixed commit": "00622505fd8d3e1f37405f520365ad30dd6bf5a1", "Url": "https://api.github.com/repos/Ruan-Xin/diancan", "Date": "2018-03-14T05:58:33Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.json.JSONObject params = args.getJSONObject(0); com.myapp.sdkproxy.SdkProxy.pay(cordova.getActivity(), params.optString(\"payid\", \"\"), new com.myapp.sdkproxy.OnPayListener() { @java.lang.Override public void onPaySuccess() { callbackContext.success(\"{\\\"code\\\":0,\\\"msg\\\":\\\"\\u652f\\u4ed8\\u6210\\u529f\\\"}\"); } @java.lang.Override public void onPayCanceled() { callbackContext.error(\"{\\\"code\\\":-1,\\\"msg\\\":\\\"\\u53d6\\u6d88\\u652f\\u4ed8\\\"}\"); } @java.lang.Override public void onPayFailure(int i, java.lang.String s) { callbackContext.error(((((\"{\\\"code\\\":\" + i) + \",\\\"msg\\\":\\\"\") + s) + \"\\\"}\")); } }); } catch (java.lang.Exception e) { e.printStackTrace(); callbackContext.error(((\"{\\\"code\\\":-1,\\\"msg\\\":\\\"\" + (e.getMessage())) + \"\\\"}\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/539/buggy-version/src.android.SdkProxyPlugin.java", "BodyUseAPI": ["org.json.JSONObject.optString(java.lang.String,java.lang.String)", "org.apache.cordova.CallbackContext.success(java.lang.String)", "org.apache.cordova.CallbackContext.error(java.lang.String)", "com.myapp.sdkproxy.SdkProxy.pay(cordova.getActivity(),params.optString(\"payid\", \"\"),com.myapp.sdkproxy.OnPayListener)", "org.json.JSONArray.getJSONObject(int)", "org.apache.cordova.CallbackContext.error(java.lang.String)", "com.cordova.plugins.sdkproxy.SdkProxyPlugin.1.getActivity()"], "Fixed commit": "f49c4997bcbcfbca189422b2952c1ce29e880229", "Url": "https://api.github.com/repos/k-kbox/cordova-plugin-sdkproxy", "Date": "2018-10-17T14:53:59Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { is.close(); return m; } catch (java.io.IOException e) { e.printStackTrace(); return m; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/520/buggy-version/src.main.java.sans.discordbot.ReactionListener.java", "BodyUseAPI": ["java.io.InputStream.close()"], "Fixed commit": "10c0d62124e0c0e80fd0eefc52daa858db0342d3", "Url": "https://api.github.com/repos/sansnickel/discordbot", "Date": "2018-05-07T08:34:13Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { relationDocModels = coreSession.query(query); } catch (org.collectionspace.services.common.document.DocumentException e) { org.collectionspace.services.listener.AbstractUpdateObjectLocationValues.logger.error(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1773/buggy-version/3rdparty.nuxeo.nuxeo-platform-listener.updateobjectlocationonmove.src.main.java.org.collectionspace.services.listener.AbstractUpdateObjectLocationValues.java", "BodyUseAPI": ["org.collectionspace.services.nuxeo.client.java.CoreSessionInterface.query(java.lang.String)"], "Fixed commit": "90930161814509aa5aef58d55a250de482b1b1c5", "Url": "https://api.github.com/repos/collectionspace/services", "Date": "2018-01-25T09:01:47Z"},
{"Line": "=>529", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { relationDocModels = session.query(query); } catch (org.collectionspace.services.common.document.DocumentException e) { org.collectionspace.services.listener.AbstractUpdateObjectLocationValues.logger.error(e); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1773/buggy-version/3rdparty.nuxeo.nuxeo-platform-listener.updateobjectlocationonmove.src.main.java.org.collectionspace.services.listener.AbstractUpdateObjectLocationValues.java", "BodyUseAPI": ["org.collectionspace.services.nuxeo.client.java.CoreSessionInterface.query(java.lang.String)"], "Fixed commit": "90930161814509aa5aef58d55a250de482b1b1c5", "Url": "https://api.github.com/repos/collectionspace/services", "Date": "2018-01-25T09:01:47Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.concurrent.TimeUnit.SECONDS.sleep(1); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3789/buggy-version/app.src.main.java.com.geotask.myapplication.EditTaskActivity.java", "BodyUseAPI": ["java.util.concurrent.TimeUnit.sleep(int)"], "Fixed commit": "8aa85463b1c6c065c79bf1d7e13dcd9aa4dfb1b5", "Url": "https://api.github.com/repos/CMPUT301W18T23/GeoTask", "Date": "2018-03-19T06:35:44Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(5000); } catch (java.lang.InterruptedException e) { com.cloud.hypervisor.kvm.resource.KVMHAMonitor.s_logger.debug(\"[ignored] interupted between heartbeat retries.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/449/buggy-version/plugins.hypervisors.kvm.src.com.cloud.hypervisor.kvm.resource.KVMHAMonitor.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "4f8bb45588bdad2d457a3b52450db3c71b060596", "Url": "https://api.github.com/repos/Slair1/cloudstack", "Date": "2018-02-28T00:36:35Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { seedu.address.logic.parser.ParserUtil.parseCompany(argContactMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY)).ifPresent(editContactDescriptor::setCompany); seedu.address.logic.parser.ParserUtil.parseDepartment(argContactMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_DEPARTMENT)).ifPresent(editContactDescriptor::setDepartment); seedu.address.logic.parser.ParserUtil.parseTitle(argContactMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_TITLE)).ifPresent(editContactDescriptor::setTitle); } catch (seedu.address.commons.exceptions.IllegalValueException ive) { throw new seedu.address.logic.parser.exceptions.ParseException(ive.getMessage(), ive); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8866/buggy-version/src.main.java.seedu.address.logic.parser.EditDetailsCommandParser.java", "BodyUseAPI": ["seedu.address.logic.parser.ArgumentMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY)", "seedu.address.logic.parser.ParserUtil.parseTitle(argContactMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_TITLE)).ifPresent(editContactDescriptor::setTitle)", "seedu.address.logic.parser.ParserUtil.parseTitle(argContactMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_TITLE))", "seedu.address.logic.parser.ArgumentMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_DEPARTMENT)", "seedu.address.logic.parser.ParserUtil.parseCompany(argContactMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY))", "seedu.address.logic.parser.ParserUtil.parseDepartment(argContactMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_DEPARTMENT)).ifPresent(editContactDescriptor::setDepartment)", "seedu.address.logic.parser.ParserUtil.parseCompany(argContactMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY)).ifPresent(editContactDescriptor::setCompany)", "seedu.address.logic.parser.ArgumentMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_TITLE)", "seedu.address.logic.parser.ParserUtil.parseDepartment(argContactMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_DEPARTMENT))"], "Fixed commit": "28760427a75339247c0688314fe465c55ea94b92", "Url": "https://api.github.com/repos/WoodyLau/main", "Date": "2018-04-11T10:42:28Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { teams = org.usfirst.frc.team25.scouting.client.data.Sorters.sortByTeamNum(new java.util.ArrayList<com.thebluealliance.api.v3.models.Team>(java.util.Arrays.asList(tba.eventRequest.getTeams(eventCode)))); } catch (java.io.IOException e) { e.printStackTrace(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/9745/buggy-version/src.main.java.org.usfirst.frc.team25.scouting.client.data.BlueAlliance.java", "BodyUseAPI": ["java.util.Arrays.asList(tba.eventRequest.getTeams(eventCode))", "org.usfirst.frc.team25.scouting.client.data.Sorters.sortByTeamNum(java.util.ArrayList<com.thebluealliance.api.v3.models.Team>)", "tba.eventRequest.getTeams(java.lang.String)"], "Fixed commit": "f85dd75bf97bdab98cf6721a8db7c94b6cc66f20", "Url": "https://api.github.com/repos/spencerng/Scouting-Client", "Date": "2018-03-07T04:14:46Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (com.thebluealliance.api.v3.models.Match match : org.usfirst.frc.team25.scouting.client.data.Sorters.sortByMatchNum(org.usfirst.frc.team25.scouting.client.data.Sorters.filterQualification(new java.util.ArrayList<com.thebluealliance.api.v3.models.Match>(java.util.Arrays.asList(tba.eventRequest.getMatches(eventCode)))))) { matchList += (match.getMatchNumber()) + \",\"; for (int i = 0; i < 2; i++) for (int j = 0; j < 3; j++) { if (i == 0) matchList += (match.getRedAlliance().getTeamKeys()[j].split(\"frc\")[1]) + \",\"; else matchList += (match.getBlueAlliance().getTeamKeys()[j].split(\"frc\")[1]) + \",\"; } matchList += \",\\n\"; } } catch (java.io.IOException e) { e.printStackTrace(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/9745/buggy-version/src.main.java.org.usfirst.frc.team25.scouting.client.data.BlueAlliance.java", "BodyUseAPI": ["match.getBlueAlliance().getTeamKeys()[j].split(java.lang.String)", "tba.eventRequest.getMatches(java.lang.String)", "org.usfirst.frc.team25.scouting.client.data.Sorters.sortByMatchNum(org.usfirst.frc.team25.scouting.client.data.Sorters.filterQualification(new java.util.ArrayList<com.thebluealliance.api.v3.models.Match>(java.util.Arrays.asList(tba.eventRequest.getMatches(eventCode)))))", "java.util.Arrays.asList(tba.eventRequest.getMatches(eventCode))", "com.thebluealliance.api.v3.models.Match.getBlueAlliance()", "com.thebluealliance.api.v3.models.Match.getMatchNumber()", "org.usfirst.frc.team25.scouting.client.data.Sorters.filterQualification(java.util.ArrayList<com.thebluealliance.api.v3.models.Match>)", "match.getRedAlliance().getTeamKeys()[j].split(java.lang.String)", "match.getBlueAlliance().getTeamKeys()", "com.thebluealliance.api.v3.models.Match.getRedAlliance()", "match.getRedAlliance().getTeamKeys()"], "Fixed commit": "f85dd75bf97bdab98cf6721a8db7c94b6cc66f20", "Url": "https://api.github.com/repos/spencerng/Scouting-Client", "Date": "2018-03-07T04:14:46Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (com.thebluealliance.api.v3.models.Team team : org.usfirst.frc.team25.scouting.client.data.Sorters.sortByTeamNum(new java.util.ArrayList<com.thebluealliance.api.v3.models.Team>(java.util.Arrays.asList(tba.eventRequest.getTeams(eventCode))))) teamList += (((team.getTeamNumber()) + \",\") + (team.getNickname())) + \",\\n\"; } catch (java.io.IOException e) { e.printStackTrace(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/9745/buggy-version/src.main.java.org.usfirst.frc.team25.scouting.client.data.BlueAlliance.java", "BodyUseAPI": ["java.util.Arrays.asList(tba.eventRequest.getTeams(eventCode))", "com.thebluealliance.api.v3.models.Team.getNickname()", "com.thebluealliance.api.v3.models.Team.getTeamNumber()", "org.usfirst.frc.team25.scouting.client.data.Sorters.sortByTeamNum(java.util.ArrayList<com.thebluealliance.api.v3.models.Team>)", "tba.eventRequest.getTeams(java.lang.String)"], "Fixed commit": "f85dd75bf97bdab98cf6721a8db7c94b6cc66f20", "Url": "https://api.github.com/repos/spencerng/Scouting-Client", "Date": "2018-03-07T04:14:46Z"},
{"Line": "=>476", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(4000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/18/buggy-version/src.main.java.pageObjects.ProjectPage.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "51ab05ddb8309ab8e4efdf4fb113334785ebdb64", "Url": "https://api.github.com/repos/mshafea/HomifyWeb", "Date": "2018-09-11T09:56:48Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { objectOutputStream = new java.io.ObjectOutputStream(socket.getOutputStream()); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7744/buggy-version/pard-main.src.main.java.cn.edu.ruc.iir.pard.server.PardQueryHandler.java", "BodyUseAPI": ["java.net.Socket.getOutputStream()"], "Fixed commit": "1aacc77f8fcaa4e8ab534ad919f7d023bab120f8", "Url": "https://api.github.com/repos/dbiir/pard", "Date": "2018-01-12T04:09:34Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { getActivity().runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { pdf.resetZoom(); pdf.zoomWithAnimation(((float) (x)), ((float) (y)), 2.5F); } }); } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/5935/buggy-version/app.src.main.java.com.cvlcondorcet.condor.MapsFragment.java", "BodyUseAPI": ["com.github.barteksc.pdfviewer.PDFView.resetZoom()", "com.cvlcondorcet.condor.MapsFragment.7.getActivity()", "java.lang.Object()", "com.github.barteksc.pdfviewer.PDFView.zoomWithAnimation(double,double,float)", "getActivity().runOnUiThread(java.lang.Runnable)"], "Fixed commit": "30f9abbab23be120fdf20205d895a38135c85ce9", "Url": "https://api.github.com/repos/Quentique/Condor", "Date": "2018-02-16T07:31:30Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return new org.springframework.http.ResponseEntity(orderService.findByReference(referenceNum), org.springframework.http.HttpStatus.OK); } catch (final com.gebarowski.bricksordersystem.controller.error.RequestedItemNotFoundException e) { logger.warn(e.getMessage(), e); return new org.springframework.http.ResponseEntity(org.springframework.http.HttpStatus.NO_CONTENT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2964/buggy-version/bricks-order-system.src.main.java.com.gebarowski.bricksordersystem.controller.OrderController.java", "BodyUseAPI": ["com.gebarowski.bricksordersystem.service.OrderService.findByReference(java.lang.String)"], "Fixed commit": "bcf1127bb36b551f08baba946f3fe5b4cd7c2921", "Url": "https://api.github.com/repos/vmaaik/brick-order-sys-spring", "Date": "2018-10-03T21:02:57Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { builder.addDisallowedApplication(\"com.android.vending\"); builder.addDisallowedApplication(\"com.google.android.apps.docs\"); builder.addDisallowedApplication(\"com.google.android.apps.photos\"); builder.addDisallowedApplication(\"com.google.android.gm\"); } catch (java.lang.Throwable e) { com.github.xfalcon.vhosts.util.LogUtils.d(com.github.xfalcon.vhosts.vservice.VhostsService.TAG, \"sdk < 21\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9694/buggy-version/app.src.main.java.com.github.xfalcon.vhosts.vservice.VhostsService.java", "BodyUseAPI": ["com.github.xfalcon.vhosts.vservice.Builder.addDisallowedApplication(java.lang.String)", "com.github.xfalcon.vhosts.vservice.Builder.addDisallowedApplication(java.lang.String)", "com.github.xfalcon.vhosts.vservice.Builder.addDisallowedApplication(java.lang.String)", "com.github.xfalcon.vhosts.vservice.Builder.addDisallowedApplication(java.lang.String)"], "Fixed commit": "80c8bfef392a790ef94fe25164a5b53963fb5da7", "Url": "https://api.github.com/repos/x-falcon/Virtual-Hosts", "Date": "2018-01-10T07:10:52Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { firstEquationFactors = solver.Factors.parse(aFactors); secondEquationFactors = solver.Factors.parse(bFactors); functionFactors = solver.Factors.parse(funFactors); for (double i : firstEquationFactors) { java.lang.System.out.print(i); java.lang.System.out.print(\" \"); } java.lang.System.out.println(); for (double i : secondEquationFactors) { java.lang.System.out.print(i); java.lang.System.out.print(\" \"); } java.lang.System.out.println(); for (double i : functionFactors) { java.lang.System.out.print(i); java.lang.System.out.print(\" \"); } } catch (java.lang.NumberFormatException e) { java.lang.System.out.println(\"Wrong factors inserted.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8237/buggy-version/src.solver.Main.java", "BodyUseAPI": ["java.io.PrintStream.print(double)", "java.io.PrintStream.print(double)", "solver.Factors.parse(java.lang.String)", "java.io.PrintStream.print(java.lang.String)", "java.io.PrintStream.print(java.lang.String)", "solver.Factors.parse(java.lang.String)", "java.io.PrintStream.println()", "solver.Factors.parse(java.lang.String)", "java.io.PrintStream.println()", "java.io.PrintStream.print(java.lang.String)", "java.io.PrintStream.print(double)"], "Fixed commit": "cc37f8603e734ca70256c95b6fa3488bbaadd7f1", "Url": "https://api.github.com/repos/heartistizio/solver", "Date": "2018-06-03T15:54:55Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.datasetTracker.close(); } catch (java.io.IOException e) { thredds.core.ConfigCatalogInitialization.logCatalogInit.error(\"There was an error closing the datasetTracker database.\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/1717/buggy-version/tds.src.main.java.thredds.core.ConfigCatalogInitialization.java", "BodyUseAPI": ["thredds.core.DatasetTracker.close()"], "Fixed commit": "9826373326b6257a341232aaf55cc736113e2475", "Url": "https://api.github.com/repos/lesserwhirls/thredds", "Date": "2018-01-20T00:40:37Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(500); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/3223/buggy-version/app.src.main.java.ygz.cutiepics.SavePhotoActivity.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "3dbdbf8ba3ec520b98b92ead5d48b8dc1960ed9c", "Url": "https://api.github.com/repos/rainagan/CutiePics", "Date": "2018-03-25T18:41:03Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { query = \"SELECT MA.passcode, MA.greeting FROM MailBox MA, Message ME WHERE MA.id=ME.idMailBox \"; java.sql.ResultSet rs = currentDBConfiguration.select(query); while (rs.next()) { java.lang.String passcode = rs.getString(\"passcode\"); java.lang.String greeting = rs.getString(\"greeting\"); } currentDBConfiguration.closeSelect(rs); return java.lang.Integer.parseInt(total); } catch (java.sql.SQLException ex) { java.lang.System.out.println((\"no se pudo obtener el total de mensajes\" + ex)); return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/4480/buggy-version/src.persistence.DBContext.java", "BodyUseAPI": ["persistence.DBConfiguration.closeSelect(java.sql.ResultSet)", "persistence.DBConfiguration.select(java.lang.String)", "java.sql.ResultSet.next()", "java.lang.Integer.parseInt(persistence.DBContext)", "java.sql.ResultSet.getString(java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)"], "Fixed commit": "d1f2fe20c74705c1915ed728d7c9108c18db9f9a", "Url": "https://api.github.com/repos/lopolafa/ArquiSoft", "Date": "2018-05-10T03:48:08Z"},
{"Line": "=>3094", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { dialogeClass.createLineWin(); } catch (java.sql.SQLException ex) { java.util.logging.Logger.getLogger(DynamicERP.frames.mainpkg.MAIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/1401/buggy-version/src.DynamicERP.frames.mainpkg.MAIN.java", "BodyUseAPI": ["DynamicERP.frames.mainpkg.MAIN.createLineWin()"], "Fixed commit": "cc6f768aec777265ceee07865e494da9c20ebd0e", "Url": "https://api.github.com/repos/PrinceLordPrime/AnonERP", "Date": "2018-05-20T19:24:09Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { propertyType = org.protempa.proposition.value.ValueType.valueOf(nextToken); } catch (java.lang.IllegalArgumentException ex) { throw new java.io.IOException((((\"Invalid data type \" + nextToken) + \" in path \") + links), ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2150/buggy-version/src.main.java.edu.emory.cci.aiw.cvrg.eureka.etl.dest.TableColumnSpecFormat.java", "BodyUseAPI": ["org.protempa.proposition.value.ValueType.valueOf(java.lang.String)"], "Fixed commit": "fb34b95664420b9185ede6fdcffb84985ede8416", "Url": "https://api.github.com/repos/eurekaclinical/eurekaclinical-protempa-service", "Date": "2018-08-31T04:57:46Z"},
{"Line": "=>493", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { distance = malcolmmaima.dishi.View.MyCart.distance(myLat, myLong, nduthiLat, nduthiLong, \"K\"); distance = (distance) * 1000; } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8964/buggy-version/app.src.main.java.malcolmmaima.dishi.View.MyCart.java", "BodyUseAPI": ["malcolmmaima.dishi.View.MyCart.distance(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.String)"], "Fixed commit": "3c76165cd258d13904fcff0990ba9100afe4c2d1", "Url": "https://api.github.com/repos/malcolmmaima/Dishi", "Date": "2018-07-04T11:14:58Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.lateroad.buber.command.CommandManager.execute(req.getParameter(\"action\"), req, resp); } catch (com.lateroad.buber.exception.BuberLogicException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6029/buggy-version/src.java.com.lateroad.buber.servlet.UserServlet.java", "BodyUseAPI": ["com.lateroad.buber.command.CommandManager.execute(req.getParameter(\"action\"),javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Fixed commit": "060c54aa61547e3f780b382a63e1b1d7cdc4f4e0", "Url": "https://api.github.com/repos/LateRoad/Buber", "Date": "2018-03-09T16:57:54Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.lateroad.buber.command.CommandManager.execute(req.getParameter(\"action\"), req, resp); } catch (com.lateroad.buber.exception.BuberLogicException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6029/buggy-version/src.java.com.lateroad.buber.servlet.UserServlet.java", "BodyUseAPI": ["com.lateroad.buber.command.CommandManager.execute(req.getParameter(\"action\"),javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Fixed commit": "060c54aa61547e3f780b382a63e1b1d7cdc4f4e0", "Url": "https://api.github.com/repos/LateRoad/Buber", "Date": "2018-03-09T16:57:54Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.sitewhere.connectors.kafka.KafkaOutboundConnectorHost host = new com.sitewhere.connectors.kafka.KafkaOutboundConnectorHost(processor); initializeNestedComponent(host, monitor, true); getConnectorHosts().add(host); } catch (com.sitewhere.spi.SiteWhereException e) { getLogger().error(\"Error initializing outbound connector.\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/4133/buggy-version/service-outbound-connectors.src.main.java.com.sitewhere.connectors.OutboundConnectorsManager.java", "BodyUseAPI": ["com.sitewhere.connectors.OutboundConnectorsManager.initializeNestedComponent(com.sitewhere.connectors.kafka.KafkaOutboundConnectorHost,com.sitewhere.spi.server.lifecycle.ILifecycleProgressMonitor,boolean)", "java.util.List<com.sitewhere.connectors.kafka.KafkaOutboundConnectorHost>.add(com.sitewhere.connectors.kafka.KafkaOutboundConnectorHost)", "com.sitewhere.connectors.OutboundConnectorsManager.getConnectorHosts()"], "Fixed commit": "aeab1065c0078691a0d4e61f7d3a9067b17bce00", "Url": "https://api.github.com/repos/sitewhere/sitewhere", "Date": "2018-06-27T22:12:14Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { stopNestedComponent(host, monitor); } catch (com.sitewhere.spi.SiteWhereException e) { getLogger().error(\"Error stopping outbound connector.\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/4133/buggy-version/service-outbound-connectors.src.main.java.com.sitewhere.connectors.OutboundConnectorsManager.java", "BodyUseAPI": ["com.sitewhere.connectors.OutboundConnectorsManager.stopNestedComponent(com.sitewhere.connectors.kafka.KafkaOutboundConnectorHost,com.sitewhere.spi.server.lifecycle.ILifecycleProgressMonitor)"], "Fixed commit": "aeab1065c0078691a0d4e61f7d3a9067b17bce00", "Url": "https://api.github.com/repos/sitewhere/sitewhere", "Date": "2018-06-27T22:12:14Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { startNestedComponent(host, monitor, true); } catch (com.sitewhere.spi.SiteWhereException e) { getLogger().error(\"Error starting outbound connector.\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/4133/buggy-version/service-outbound-connectors.src.main.java.com.sitewhere.connectors.OutboundConnectorsManager.java", "BodyUseAPI": ["com.sitewhere.connectors.OutboundConnectorsManager.startNestedComponent(com.sitewhere.connectors.kafka.KafkaOutboundConnectorHost,com.sitewhere.spi.server.lifecycle.ILifecycleProgressMonitor,boolean)"], "Fixed commit": "aeab1065c0078691a0d4e61f7d3a9067b17bce00", "Url": "https://api.github.com/repos/sitewhere/sitewhere", "Date": "2018-06-27T22:12:14Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { returnType = ((java.lang.Class<?>) (genericReturnType)); } catch (java.lang.ClassCastException ex) { if (proxyClass != null) { java.lang.reflect.Type genericSuperType = proxyClass.getGenericSuperclass(); if ((genericSuperType == null) && ((proxyClass.getGenericInterfaces().length) > 0)) { genericSuperType = proxyClass.getGenericInterfaces()[0]; } returnType = ((java.lang.Class<?>) (((java.lang.reflect.ParameterizedType) (genericSuperType)).getActualTypeArguments()[0])); }else { throw new java.lang.RuntimeException(\"Cannot extract return type of method\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/840/buggy-version/merest.src.main.java.com.teammental.merest.RestApiProxyInvocationHandler.java", "BodyUseAPI": [], "Fixed commit": "c52130d84d421aa5052c780f5050a7e6c32f7612", "Url": "https://api.github.com/repos/mental-party/meparty", "Date": "2018-02-16T18:13:05Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { jsonObject = restTemplate.getForObject(java.lang.String.format(urlFormat, appid, secret), org.json.JSONObject.class); } catch (java.lang.Exception e) { e.printStackTrace(); java.util.Calendar calendar = java.util.Calendar.getInstance(); calendar.add(java.util.Calendar.SECOND, 30); threadPoolTaskScheduler.schedule(this::updateAppToken, calendar.getTime()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/5794/buggy-version/src.main.java.team.a9043.sign_in_system.config.WxAppConfig.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.String,java.lang.String)", "org.springframework.web.client.RestTemplate.getForObject(java.lang.String,java.lang.Class)"], "Fixed commit": "59a610cd39b43ac60a5048583e8b2ab143531644", "Url": "https://api.github.com/repos/759434091/sign_in_system_v3", "Date": "2018-10-22T10:45:48Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { jsonObject = restTemplate.getForObject(java.lang.String.format(urlFormat, appid, secret), org.json.JSONObject.class); } catch (java.lang.Exception e) { e.printStackTrace(); java.util.Calendar calendar = java.util.Calendar.getInstance(); calendar.add(java.util.Calendar.SECOND, 30); threadPoolTaskScheduler.schedule(this::updateAppToken, calendar.getTime()); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/5794/buggy-version/src.main.java.team.a9043.sign_in_system.config.WxAppConfig.java", "BodyUseAPI": ["org.springframework.web.client.RestTemplate.getForObject(java.lang.String,java.lang.Class)", "java.lang.String.format(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "59a610cd39b43ac60a5048583e8b2ab143531644", "Url": "https://api.github.com/repos/759434091/sign_in_system_v3", "Date": "2018-10-22T10:45:48Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { added = serverJob.addBundle(clientBundle); } finally { if (!queued) { serverJob.getLock().unlock(); lock.lock(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/1053/buggy-version/server.src.java.org.jppf.server.queue.JPPFPriorityQueue.java", "BodyUseAPI": ["org.jppf.server.queue.ServerJob.addBundle(org.jppf.server.queue.ServerTaskBundleClient)"], "Fixed commit": "bec5468569e253fd5fcd2f694ad25694ed79d81a", "Url": "https://api.github.com/repos/jppf-grid/JPPF", "Date": "2018-05-23T20:30:09Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.apache.commons.io.FileUtils.forceMkdir(new java.io.File((((java.lang.System.getProperty(com.github.noraui.application.steps.USER_DIR)) + (java.io.File.separator)) + (DOWNLOADED_FILES_FOLDER)))); org.apache.commons.io.FileUtils.cleanDirectory(new java.io.File((((java.lang.System.getProperty(com.github.noraui.application.steps.USER_DIR)) + (java.io.File.separator)) + (DOWNLOADED_FILES_FOLDER)))); } catch (java.io.IOException e) { com.github.noraui.application.steps.FileSteps.logger.warn(\"IOException in cleanDownloadDirectory\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/4639/buggy-version/src.main.java.com.github.noraui.application.steps.FileSteps.java", "BodyUseAPI": ["org.apache.commons.io.FileUtils.forceMkdir(java.io.File)", "org.apache.commons.io.FileUtils.cleanDirectory(java.io.File)", "java.lang.System.getProperty(com.github.noraui.application.steps.USER_DIR)", "java.lang.System.getProperty(com.github.noraui.application.steps.USER_DIR)"], "Fixed commit": "2eb8b104030f4c7f3ac239e7258992e1eb89674a", "Url": "https://api.github.com/repos/NoraUi/NoraUi", "Date": "2018-05-18T21:31:32Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { } catch (java.lang.Exception e) { lastHr = 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/7995/buggy-version/src.gui.WeatherManager.java", "BodyUseAPI": [], "Fixed commit": "d504bb3d3ec8bdb8df9214ff528d61cd5fb83a13", "Url": "https://api.github.com/repos/RyanTorok/paintbrush_lms", "Date": "2018-06-12T05:27:21Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { result = validator.validate(data); } catch (io.nuls.kernel.exception.NulsException e) { io.nuls.core.tools.log.Log.error(e); return io.nuls.kernel.validate.ValidateResult.getFailedResult(this.getClass().getName(), e.getErrorCode(), e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/1874/buggy-version/core-module.kernel.src.main.java.io.nuls.kernel.validate.DataValidatorChain.java", "BodyUseAPI": ["io.nuls.kernel.validate.NulsDataValidator.validate(io.nuls.kernel.model.NulsData)"], "Fixed commit": "9089923622d7e95ded8437524202c980c7363d09", "Url": "https://api.github.com/repos/nuls-io/nuls", "Date": "2018-05-30T09:38:08Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { javax.imageio.ImageIO.write(bufferedImg, \"png\", saveFile.getSelectedFile()); } catch (java.io.IOException ex) { java.lang.System.out.println(\"Error saving file.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8762/buggy-version/TopMenu.java", "BodyUseAPI": ["javax.imageio.ImageIO.write(java.awt.image.BufferedImage,java.lang.String,java.io.File)", "javax.swing.JFileChooser.getSelectedFile()"], "Fixed commit": "2585de3301e557531ca4e50fcdb3f23d171966be", "Url": "https://api.github.com/repos/jiayang/J-J-s-Image-Factory", "Date": "2018-01-06T04:11:58Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { user.setId(resultSet.getInt(\"user_id\")); } catch (org.h2.jdbc.JdbcSQLException ex) { user.setId(resultSet.getInt(\"id\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/1566/buggy-version/src.main.java.ru.benzoback.library.mapper.UserRowMapper.java", "BodyUseAPI": ["java.sql.ResultSet.getInt(java.lang.String)", "ru.benzoback.library.model.User.setId(int)"], "Fixed commit": "335d2b32121ffeb7f945255365c85ae66a8fb3a8", "Url": "https://api.github.com/repos/zer969696/library", "Date": "2018-02-02T06:39:25Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (currentUser.clockwiseNeighbor.isConnected()) { currentUser.toClockwiseNeighbor.put(regularMessage); } if (currentUser.counterClockwiseNeighbor.isConnected()) { currentUser.toCounterClockwiseNeighbor.put(regularMessage); } } catch (java.lang.InterruptedException e) { java.lang.System.err.println(\"Couldn't send the message\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/3154/buggy-version/Assignment1.src.User.java", "BodyUseAPI": ["java.net.Socket.isConnected()", "java.net.Socket.isConnected()", "java.util.concurrent.LinkedBlockingQueue<Message>.put(Message)", "java.util.concurrent.LinkedBlockingQueue<Message>.put(Message)"], "Fixed commit": "65805d61e8598033b51da000569090104f00bb1e", "Url": "https://api.github.com/repos/agrzesiak33/Distributed-Systems", "Date": "2018-02-22T01:35:12Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.github.landyking.link.spel.SpelPair sp = com.github.landyking.link.spel.SpelUtils.getSpelPair(dc); java.lang.Boolean value = sp.getExp().parseExpression(attrName).getValue(sp.getCtx(), java.lang.Boolean.class); if (value) { doBodyRender(); } } catch (java.lang.Exception e) { throw new java.lang.RuntimeException(((\"IfTag\u5904\u7406\u5c5e\u6027\" + attrName) + \"\u5f02\u5e38\"), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8741/buggy-version/link-core.src.main.java.com.github.landyking.link.beetl.IfTag.java", "BodyUseAPI": ["com.github.landyking.link.spel.SpelUtils.getSpelPair(com.github.landyking.link.DirectiveMojo)", "com.github.landyking.link.beetl.IfTag.doBodyRender()", "com.github.landyking.link.spel.SpelPair.getCtx()", "sp.getExp().parseExpression(java.lang.String)", "com.github.landyking.link.spel.SpelPair.getExp()", "sp.getExp().parseExpression(attrName).getValue(sp.getCtx(),java.lang.Class)"], "Fixed commit": "d26b181001908b0cb2d8e3f4b829cecb1a0075b4", "Url": "https://api.github.com/repos/landyking/link", "Date": "2018-08-30T11:43:27Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (java.lang.Object i : apps) { android.content.pm.LauncherActivityInfo info = ((android.content.pm.LauncherActivityInfo) (i)); if (info.getApplicationInfo().packageName.equals(a.packageName)) { found = true; break; } } } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6284/buggy-version/src.gmail.dec.launcher81.WBListEditorActivity.java", "BodyUseAPI": ["info.getApplicationInfo().packageName.equals(a.packageName)", "android.content.pm.LauncherActivityInfo.getApplicationInfo()"], "Fixed commit": "864787d674c111add7e5f566f16547cdb08e2706", "Url": "https://api.github.com/repos/decemberpei/EdgeLauncher", "Date": "2018-08-24T07:04:47Z"},
{"Line": "=>542", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { largest = mPictureSizes.sizes(mAspectRatio).last(); } catch (java.lang.Exception e) { java.util.Iterator iterator = mPictureSizes.ratios().iterator(); com.google.android.cameraview.AspectRatio firstAspectRatio = ((com.google.android.cameraview.AspectRatio) (iterator.next())); largest = mPictureSizes.sizes(firstAspectRatio).last(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/4907/buggy-version/library.src.main.api21.com.google.android.cameraview.Camera2.java", "BodyUseAPI": ["mPictureSizes.sizes(mAspectRatio).last()", "com.google.android.cameraview.SizeMap.sizes(com.google.android.cameraview.AspectRatio)"], "Fixed commit": "afcb37fd3f1918fccb69cb40bf06a41db149c286", "Url": "https://api.github.com/repos/zoltanf/cameraview", "Date": "2018-07-30T12:54:47Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String newText = text; if (newText.contains(\",\")) if ((!(newText.startsWith(\"\\\"\"))) && (!(newText.endsWith(\"\\\"\")))) newText = (\"\\\"\" + newText) + \"\\\"\"; return newText; } catch (java.lang.Exception e) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9537/buggy-version/src.scrapper.CsvGenerator.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.endsWith(java.lang.String)"], "Fixed commit": "4ac05f3faec997d18374def46be8344cf8959325", "Url": "https://api.github.com/repos/rezatrue/LLF-V2-Practice", "Date": "2018-08-09T13:45:07Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mPlayerService.pause(); } catch (android.os.RemoteException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/4161/buggy-version/app.src.main.java.com.n0texpecterr0r.topviewplayer.online.view.OnlineActivity.java", "BodyUseAPI": ["com.n0texpecterr0r.topviewplayer.IPlayerService.pause()"], "Fixed commit": "6cd91b85efb35a51d27232461294987d659b363f", "Url": "https://api.github.com/repos/N0tExpectErr0r/TopViewPlayer", "Date": "2018-09-25T07:48:15Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (int j = 0; j < 4; j++) { out.write(((points.get(i)[j]) + \"\\t\")); } } catch (java.lang.ArrayIndexOutOfBoundsException e) { java.lang.System.out.println(\"Out of Bounds Exception\"); out.write(\"0.000\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/5798/buggy-version/src.main.java.Splitter.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String[]>.get(int)", "java.io.BufferedWriter.write(java.lang.String)"], "Fixed commit": "18dc0324e032b8d961725ddf355b90fdb2ccb964", "Url": "https://api.github.com/repos/MarcinPrzybysz/PointsSplitter", "Date": "2018-09-05T18:04:49Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { subscriptionListItems.get(_pref.getIntegerSession(ConstantClass.SUBSCRIPTION_SELECT_POSITION)).setSelected(true); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9689/buggy-version/app.src.main.java.com.fastrack.activitise.BookingActivity.java", "BodyUseAPI": ["subscriptionListItems.get(_pref.getIntegerSession(ConstantClass.SUBSCRIPTION_SELECT_POSITION)).setSelected(boolean)", "java.util.ArrayList<com.fastrack.bean.SubscriptionListItem>.get(_pref.getIntegerSession(ConstantClass.SUBSCRIPTION_SELECT_POSITION))", "com.fastrack.activitise.BookingActivity.1.getIntegerSession(ConstantClass.SUBSCRIPTION_SELECT_POSITION)"], "Fixed commit": "7e54388b60c5acd46324db7be8693e2a46f97fda", "Url": "https://api.github.com/repos/switch2webdev/FasTrack-Android", "Date": "2018-07-03T14:36:46Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { getJdbcTemplate().update(sqlCreateFlight, flightAirline, flightDepart, flightArrival, arrivalTerminal, flightConfirmation, userId, eventId, departureTerminal); } catch (org.springframework.dao.EmptyResultDataAccessException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/880/buggy-version/src.main.java.com.beigeoranges.ecms.Dao.TravelDao.java", "BodyUseAPI": ["getJdbcTemplate().update(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,java.lang.String)", "com.beigeoranges.ecms.Dao.TravelDao.getJdbcTemplate()"], "Fixed commit": "caa2ccb37ef9ab8dd73a0db8df6fb8934adb3e56", "Url": "https://api.github.com/repos/malynch7/ecms", "Date": "2018-07-16T20:51:01Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { int id = java.lang.Integer.parseInt(context.param(\"id\")); org.maestro.reports.dto.Report report = reportDao.fetch(id); org.maestro.reports.controllers.ReportController.ReportInfo reportInfo = new org.maestro.reports.controllers.ReportController.ReportInfo(); processReports(report, reportInfo); context.json(reportInfo); } catch (java.lang.Throwable t) { context.status(500); context.result(java.lang.String.format(\"Internal server error: %s\", t.getMessage())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/1327/buggy-version/maestro-reports.maestro-reports-server.src.main.java.org.maestro.reports.controllers.ReportController.java", "BodyUseAPI": ["java.lang.Integer.parseInt(context.param(\"id\"))", "org.maestro.reports.dao.ReportDao.fetch(int)", "io.javalin.Context.json(org.maestro.reports.controllers.ReportController.ReportInfo)", "org.maestro.reports.controllers.ReportController.processReports(org.maestro.reports.dto.Report,org.maestro.reports.controllers.ReportController.ReportInfo)", "io.javalin.Context.param(java.lang.String)"], "Fixed commit": "a24d6232eb4047a3d23fd73897c02321b2707750", "Url": "https://api.github.com/repos/maestro-performance/maestro-java", "Date": "2018-09-26T10:51:42Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (fis != null) { fis.close(); } } catch (java.io.IOException ex) { logger.error(\"Unable to close file\", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/7657/buggy-version/uvm.impl.com.untangle.uvm.BackupManagerImpl.java", "BodyUseAPI": ["java.io.FileInputStream.close()"], "Fixed commit": "aa6fb3904381cce335b52019fad34027b9b5b9c2", "Url": "https://api.github.com/repos/untangle/ngfw_src", "Date": "2018-06-12T20:26:50Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Integer userId = ru.hh.school.adaptation.services.auth.AuthService.sessionThreadLocal.get().getId(); return userService.getUser(userId); } catch (java.lang.Exception e) { return java.util.Optional.empty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/4557/buggy-version/backend.src.main.java.ru.hh.school.adaptation.services.auth.AuthService.java", "BodyUseAPI": ["ru.hh.school.adaptation.services.UserService.getUser(java.lang.Integer)", "ru.hh.school.adaptation.services.auth.AuthService.sessionThreadLocal.get().getId()", "java.lang.ThreadLocal<ru.hh.school.adaptation.misc.UserSession>.get()"], "Fixed commit": "797f23a0f8b719ed1ef72002bbd0b272390ec6d8", "Url": "https://api.github.com/repos/hhru/AdaptationProject", "Date": "2018-04-23T12:56:06Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { final java.util.List result = com.jayway.jsonpath.JsonPath.parse(realRequest.getBody()).read(jsonPath, java.util.List.class); return (result.size()) != 0; } catch (java.lang.Exception e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/5809/buggy-version/src.main.java.com.github.wenhao.stub.matcher.JsonPathMatcher.java", "BodyUseAPI": ["java.util.List.size()", "com.jayway.jsonpath.JsonPath.parse(realRequest.getBody())", "com.github.wenhao.common.domain.Request.getBody()", "com.jayway.jsonpath.JsonPath.parse(realRequest.getBody()).read(java.lang.String,java.lang.Class)"], "Fixed commit": "2be52ac568c6f3a72294341ed917d73a2e2ee4fe", "Url": "https://api.github.com/repos/wenhao/mushrooms", "Date": "2018-09-19T05:34:25Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { originalContext = appiumDriver.getContext(); if (((appiumDriver.getContextHandles().size()) > 1) && (!(originalContext.equalsIgnoreCase(com.applitools.eyes.selenium.EyesSeleniumUtils.NATIVE_APP)))) { appiumDriver.context(com.applitools.eyes.selenium.EyesSeleniumUtils.NATIVE_APP); }else { originalContext = null; } } catch (com.applitools.eyes.selenium.WebDriverException e) { originalContext = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8798/buggy-version/eyes.selenium.java.src.main.java.com.applitools.eyes.selenium.EyesSeleniumUtils.java", "BodyUseAPI": ["io.appium.java_client.AppiumDriver<?>.getContextHandles()", "io.appium.java_client.AppiumDriver<?>.context(java.lang.String)", "io.appium.java_client.AppiumDriver<?>.getContext()", "appiumDriver.getContextHandles().size()", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "cd67308b2bdab1335f116b9e29bce60fb980287d", "Url": "https://api.github.com/repos/applitools/eyes.sdk.java3", "Date": "2018-10-16T11:56:19Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { JISA.VISA.NativeLibrary nLib = JISA.VISA.NativeLibrary.getInstance(JISA.VISA.GPIBDriver.libName); JISA.VISA.GPIBDriver.lib.ibsta.setPointer(nLib.getGlobalVariableAddress(\"ibsta\")); JISA.VISA.GPIBDriver.lib.iberr.setPointer(nLib.getGlobalVariableAddress(\"iberr\")); JISA.VISA.GPIBDriver.lib.ibcnt.setPointer(nLib.getGlobalVariableAddress(\"ibcnt\")); JISA.VISA.GPIBDriver.lib.ibcntl.setPointer(nLib.getGlobalVariableAddress(\"ibcntl\")); } catch (java.lang.Exception | java.lang.Error e) { java.lang.System.err.println(\"GPIB driver not loaded.\"); throw new JISA.VISA.VISAException(\"Could not link global variables\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/520/buggy-version/src.JISA.VISA.GPIBDriver.java", "BodyUseAPI": ["JISA.VISA.GPIBDriver.lib.ibsta.setPointer(nLib.getGlobalVariableAddress(\"ibsta\"))", "JISA.VISA.GPIBDriver.lib.ibcnt.setPointer(nLib.getGlobalVariableAddress(\"ibcnt\"))", "JISA.VISA.NativeLibrary.getGlobalVariableAddress(java.lang.String)", "JISA.VISA.NativeLibrary.getInstance(java.lang.String)", "JISA.VISA.GPIBDriver.lib.iberr.setPointer(nLib.getGlobalVariableAddress(\"iberr\"))", "JISA.VISA.NativeLibrary.getGlobalVariableAddress(java.lang.String)", "JISA.VISA.NativeLibrary.getGlobalVariableAddress(java.lang.String)", "JISA.VISA.NativeLibrary.getGlobalVariableAddress(java.lang.String)", "JISA.VISA.GPIBDriver.lib.ibcntl.setPointer(nLib.getGlobalVariableAddress(\"ibcntl\"))"], "Fixed commit": "39406fa5984676956ea5507aa977f099a596a911", "Url": "https://api.github.com/repos/OE-FET/JISA", "Date": "2018-10-17T07:42:41Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { int maxY = chunk.getWorld().getMaxHeight(); for (int y = 1; y < maxY; y++) { for (int x = 0; x < 16; x++) { for (int z = 0; z < 16; z++) { org.bukkit.block.Block block = chunk.getBlock(x, y, z); org.bukkit.Material mat = block.getType(); if (toReplace.contains(mat)) { rep++; block.setType(replaceWith, false); } } } } if (maxY < 32) { com.github.devotedmc.hiddenore.HiddenOre.getPlugin().getLogger().log(java.util.logging.Level.WARNING, \"Chunk height abnormally low: {0} at {1}, {2}\", new java.lang.Object[]{ maxY, chunk.getX(), chunk.getZ() }); } } catch (java.lang.Exception e) { com.github.devotedmc.hiddenore.HiddenOre.getPlugin().getLogger().log(java.util.logging.Level.SEVERE, \"Failed to clear ores from chunk at {0}, {1} with error {2}\", new java.lang.Object[]{ chunk.getX(), chunk.getZ(), e.getMessage() }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/7639/buggy-version/src.main.java.com.github.devotedmc.hiddenore.listeners.WorldGenerationListener.java", "BodyUseAPI": ["org.bukkit.Chunk.getWorld()", "com.github.devotedmc.hiddenore.HiddenOre.getPlugin().getLogger().log(java.util.logging.Level,java.lang.String,java.lang.Object[])", "com.github.devotedmc.hiddenore.HiddenOre.getPlugin()", "org.bukkit.Chunk.getZ()", "org.bukkit.Chunk.getBlock(int,int,int)", "chunk.getWorld().getMaxHeight()", "org.bukkit.block.Block.getType()", "org.bukkit.block.Block.setType(org.bukkit.Material,boolean)", "com.github.devotedmc.hiddenore.HiddenOre.getPlugin().getLogger()", "java.util.Set<org.bukkit.Material>.contains(org.bukkit.Material)", "org.bukkit.Chunk.getX()"], "Fixed commit": "fc0f7a6e076251d1f239343dfa87df84da98eb29", "Url": "https://api.github.com/repos/DevotedMC/HiddenOre", "Date": "2018-06-27T17:37:00Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.json.JSONObject net = new org.json.JSONObject(); net.put(\"ssid\", wifi.SSID); net.put(\"creatorName\", creatorName); returnList.put(net); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/7503/buggy-version/src.android.src.com.pylonproducts.wifiwizard.WifiWizard.java", "BodyUseAPI": ["org.json.JSONArray.put(org.json.JSONObject)", "org.json.JSONObject.put(java.lang.String,wifi.SSID)", "org.json.JSONObject.put(java.lang.String,java.lang.String)"], "Fixed commit": "b4c264121d3ac7c5dce22d9e8a1992994fd780aa", "Url": "https://api.github.com/repos/rifat-amit-enosisbd/WifiWizard", "Date": "2018-07-22T12:35:16Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.ppandroid.app.widget.loading.Utils_DialogMetaball.dialog.get().dismiss(); com.ppandroid.app.widget.loading.Utils_DialogMetaball.dialog.clear(); com.ppandroid.app.widget.loading.Utils_DialogMetaball.dialog = null; } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/4629/buggy-version/app.src.main.java.com.ppandroid.app.widget.loading.Utils_DialogMetaball.java", "BodyUseAPI": ["com.ppandroid.app.widget.loading.Utils_DialogMetaball.dialog.get().dismiss()", "java.lang.ref.WeakReference<android.app.Dialog>.clear()", "java.lang.ref.WeakReference<android.app.Dialog>.get()"], "Fixed commit": "c52898e17405652a3e3aa45ef66c8a9c2577e4c8", "Url": "https://api.github.com/repos/yeqinfu/chartapp", "Date": "2018-01-12T06:26:24Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (int s = 0; s < (ds.length); s++) { java.lang.String oldName = ds[s].name(); java.lang.String newName = oldName.replaceAll(replaceWhat, replaceWith); ds[s].setName(newName); } } catch (java.util.regex.PatternSyntaxException pse) { javax.swing.JOptionPane.showMessageDialog(this, (\"<html>You used a regex in your search, but it contained a syntax error<br><br>\" + (pse.getLocalizedMessage())), \"Pattern error\", javax.swing.JOptionPane.ERROR_MESSAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8901/buggy-version/uk.ac.babraham.SeqMonk.Dialogs.DataSetEditor.DataSetEditor.java", "BodyUseAPI": ["ds[s].setName(java.lang.String)", "ds[s].name()", "java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "83e3e1827c0cbbf7c90cf9a060a5ee2cb16bf500", "Url": "https://api.github.com/repos/s-andrews/SeqMonk", "Date": "2018-01-29T09:26:13Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { myClusterSubmissionConfigurable.validate(); } catch (com.intellij.openapi.options.ConfigurationException e) { java.lang.String remoteRunPrefix = \"[Remotely Run in Cluster] \"; if (e instanceof com.intellij.execution.configurations.RuntimeConfigurationError) { throw new com.intellij.execution.configurations.RuntimeConfigurationError((remoteRunPrefix + (e.getMessage())), e.getQuickFix()); }else if (e instanceof com.intellij.execution.configurations.RuntimeConfigurationWarning) { throw new com.intellij.execution.configurations.RuntimeConfigurationWarning((remoteRunPrefix + (e.getMessage())), e.getQuickFix()); }else if (e instanceof com.intellij.execution.configurations.RuntimeConfigurationException) { throw new com.intellij.execution.configurations.RuntimeConfigurationException((remoteRunPrefix + (e.getMessage())), (remoteRunPrefix + (e.getTitle()))); }else { throw new com.intellij.openapi.options.ConfigurationException((remoteRunPrefix + (e.getMessage())), (remoteRunPrefix + (e.getTitle()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8684/buggy-version/PluginsAndFeatures.azure-toolkit-for-intellij.src.com.microsoft.azure.hdinsight.spark.ui.SparkBatchJobConfigurable.java", "BodyUseAPI": ["com.microsoft.azure.hdinsight.spark.ui.SparkSubmissionContentPanelConfigurable.validate()"], "Fixed commit": "0f459b15994ddb6ff0113dfd9623bdb75ae5c264", "Url": "https://api.github.com/repos/wezhang/azure-tools-for-java", "Date": "2018-10-10T11:08:08Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { database.Dao().setDone(true, newOrder.getOrderNr()); database.Dao().updatePosition(newOrder.getTargetAdress(), PersNr); database.Dao().updateDriverStatus(false, PersNr); targetPositionView.setText(\"New target...\"); } catch (java.lang.NullPointerException e) { e.printStackTrace(); android.widget.Toast.makeText(getApplicationContext(), \"You don't have an order\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/6827/buggy-version/app.src.main.java.com.example.isibell.dbprojekt.DriverActivity.java", "BodyUseAPI": ["com.example.isibell.dbprojekt.AppDatabase.Dao()", "database.Dao().setDone(boolean,newOrder.getOrderNr())", "com.example.isibell.dbprojekt.Order.getTargetAdress()", "com.example.isibell.dbprojekt.Order.getOrderNr()", "com.example.isibell.dbprojekt.AppDatabase.Dao()", "android.widget.TextView.setText(java.lang.String)", "database.Dao().updateDriverStatus(boolean,int)", "database.Dao().updatePosition(newOrder.getTargetAdress(),int)", "com.example.isibell.dbprojekt.AppDatabase.Dao()"], "Fixed commit": "3cb5cb694831fed0774a0802b8ad0bc9eb794723", "Url": "https://api.github.com/repos/oIska/DBProjekt", "Date": "2018-08-15T14:27:41Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { holder.mQuantity.setText(java.lang.String.valueOf(mcart.getQuantity(getItem(position)))); } catch (com.android.tonyvu.sc.exception.ProductNotFoundException e) { holder.mQuantity.setText(\"0\"); android.util.Log.d(\"Eatery\", e.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3920/buggy-version/app.src.main.java.com.persi.eatery.MenuListAdapter.java", "BodyUseAPI": ["com.android.tonyvu.sc.model.Cart.getQuantity(com.persi.eatery.Food_Item)", "android.widget.TextView.setText(java.lang.String)", "java.lang.String.valueOf(mcart.getQuantity(getItem(position)))", "com.persi.eatery.MenuListAdapter.getItem(int)"], "Fixed commit": "473d8ce8418a66b547292026fda2b1f463f1d3a2", "Url": "https://api.github.com/repos/parasg97/Eatery", "Date": "2018-02-09T10:04:18Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.System.out.println((\"Server IP: \" + (java.net.InetAddress.getByName(serverIP)))); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8158/buggy-version/srcS.server.udp.ServerUDPManager.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.net.InetAddress.getByName(java.lang.String)"], "Fixed commit": "1b5bc5578f2916b61ddd0e9c4767bdb7a1ab7e7d", "Url": "https://api.github.com/repos/Junasleu/ServerTests", "Date": "2018-02-10T20:30:54Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { byui.cit260.afghan_trail.controller.LoadGameController.loadGame(filename); } catch (java.lang.NullPointerException np) { byui.cit260.afghan_trail.view.ErrorView.display(this.getClass().getName(), \"Error loading file\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8532/buggy-version/Afghan_Trail.src.byui.cit260.afghan_trail.view.LoadGameView.java", "BodyUseAPI": ["byui.cit260.afghan_trail.controller.LoadGameController.loadGame(java.lang.String)"], "Fixed commit": "79d061b787d9ed3c2a69e79b70f8159c5e55f22f", "Url": "https://api.github.com/repos/Sirrine-Jonathan/Afghan_Trail", "Date": "2018-04-07T02:58:56Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { move(); do { game.nextTurn(); } while (game.getPlayers().get(game.turn).ended ); game.getPlayers().get(game.turn).startTurn(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4632/buggy-version/Backend.src.BotPlayer.java", "BodyUseAPI": ["Game.getPlayers()", "game.getPlayers().get(game.turn)", "game.getPlayers().get(game.turn).startTurn()", "BotPlayer.move()", "Game.getPlayers()", "game.getPlayers().get(game.turn)", "Game.nextTurn()"], "Fixed commit": "5cc54771b2dd0a3c5693673c6b04c305dac46986", "Url": "https://api.github.com/repos/MacMaku/chinese_checkers", "Date": "2018-01-07T19:44:10Z"},
{"Line": "=>540", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { if (javassist.offload.clang.CodeGen.codeOfInlinedExpr(this, statement.expression())) return; } finally { currentReturnType = oldReturnType; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1206/buggy-version/src.main.javassist.offload.clang.CodeGen.java", "BodyUseAPI": ["javassist.offload.ast.Return.expression()", "javassist.offload.clang.CodeGen.codeOfInlinedExpr(javassist.offload.clang.CodeGen,statement.expression())"], "Fixed commit": "28cab060b6432d9f0dd28b13390673f7342c7912", "Url": "https://api.github.com/repos/csg-tokyo/bytespresso", "Date": "2018-01-01T16:25:19Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { java.lang.Thread.currentThread().setName(((((jobDef.getName()) + \"[\") + ctName) + \"]\")); log.info(((getLogPrefix(jobDef)) + \"executing\")); jobDef.executeJob(ibisManager); log.debug(((getLogPrefix(jobDef)) + \"completed\")); } finally { java.lang.Thread.currentThread().setName(ctName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1112/buggy-version/core.src.main.java.nl.nn.adapterframework.scheduler.ConfiguredJob.java", "BodyUseAPI": ["java.lang.Thread.currentThread()", "nl.nn.adapterframework.scheduler.JobDef.executeJob(nl.nn.adapterframework.configuration.IbisManager)", "nl.nn.adapterframework.scheduler.ConfiguredJob.debug(((getLogPrefix(jobDef)) + \"completed\"))", "nl.nn.adapterframework.scheduler.JobDef.getName()", "nl.nn.adapterframework.scheduler.ConfiguredJob.getLogPrefix(nl.nn.adapterframework.scheduler.JobDef)", "nl.nn.adapterframework.scheduler.ConfiguredJob.info(((getLogPrefix(jobDef)) + \"executing\"))", "java.lang.Thread.setName(((((jobDef.getName()) + \"[\") + ctName) + \"]\"))", "nl.nn.adapterframework.scheduler.ConfiguredJob.getLogPrefix(nl.nn.adapterframework.scheduler.JobDef)"], "Fixed commit": "db756359a3b6f7c6bead3dd90c20f82e3caf71c2", "Url": "https://api.github.com/repos/ibissource/iaf", "Date": "2018-01-12T12:51:13Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { turn(switcher); } catch (java.lang.InterruptedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3660/buggy-version/Battleship.java", "BodyUseAPI": ["Battleship.turn(int)"], "Fixed commit": "2c7972d62ee0e6115de8456ab41ac9b78d1ef799", "Url": "https://api.github.com/repos/MichaelZetune/Battleship", "Date": "2018-02-06T05:35:44Z"},
{"Line": "=>492", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { dialog.get().show(); } catch (java.lang.Exception e) { android.util.Log.w(com.vorlonsoft.android.rate.TAG, \"Failed to rate app, can't show rate dialog\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1129/buggy-version/library.src.main.java.com.vorlonsoft.android.rate.AppRate.java", "BodyUseAPI": ["java.lang.ref.WeakReference<android.app.Dialog>.get()", "dialog.get().show()"], "Fixed commit": "9aeaae7781e922afb95970a256878608d7f4fbc4", "Url": "https://api.github.com/repos/Vorlonsoft/AndroidRate", "Date": "2018-08-29T13:42:06Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((version) == null) { org.jsoup.nodes.Document d = org.jsoup.Jsoup.connect(\"https://scryfall.com/blog/category/api\").timeout(0).get(); java.lang.String date = d.select(\"a.muted-n\").first().text(); java.lang.String href = d.select(\"a.muted-n\").first().attr(\"href\"); version = ((href.substring(((href.lastIndexOf('-')) + 1), href.length())) + \" \") + date; } } catch (java.io.IOException e) { logger.error(e); version = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8858/buggy-version/src.main.java.org.magic.api.providers.impl.ScryFallProvider.java", "BodyUseAPI": ["d.select(\"a.muted-n\").first()", "java.lang.String.substring(int,int)", "d.select(\"a.muted-n\").first().attr(java.lang.String)", "java.lang.String.lastIndexOf(char)", "java.lang.String.length()", "org.jsoup.Jsoup.connect(\"https://scryfall.com/blog/category/api\").timeout(0).get()", "org.jsoup.Jsoup.connect(\"https://scryfall.com/blog/category/api\").timeout(int)", "d.select(\"a.muted-n\").first().text()", "org.jsoup.nodes.Document.select(java.lang.String)", "org.jsoup.nodes.Document.select(java.lang.String)", "d.select(\"a.muted-n\").first()", "org.jsoup.Jsoup.connect(java.lang.String)"], "Fixed commit": "2e29e96163e4f6c34b8c19dbae07bec378cfdb9a", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2018-02-06T10:28:05Z"},
{"Line": "=>428", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { getFridge(id).setName(name); } catch (java.lang.RuntimeException e) { android.util.Log.d(smap_f18_24.smap_fridge.Service.ServiceUpdater.TAG, \"onFridgeName: fridge does not exist on list.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9066/buggy-version/App.app.src.main.java.smap_f18_24.smap_fridge.Service.ServiceUpdater.java", "BodyUseAPI": ["smap_f18_24.smap_fridge.ModelClasses.Fridge.setName(java.lang.String)", "smap_f18_24.smap_fridge.Service.ServiceUpdater.1.getFridge(java.lang.String)"], "Fixed commit": "2be3dc3e8516f402a9baa1855ac20226681ac035", "Url": "https://api.github.com/repos/HansEge/SMAP_Fridge", "Date": "2018-05-12T14:38:15Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.squareup.moshi.Moshi moshi = new com.squareup.moshi.Moshi.Builder().build(); com.squareup.moshi.JsonAdapter<nl.tudelft.cs4160.trustchain_android.qr.models.QRWallet> walletAdapter = moshi.adapter(nl.tudelft.cs4160.trustchain_android.qr.models.QRWallet.class); nl.tudelft.cs4160.trustchain_android.database.TrustChainDBHelper dbHelper = new nl.tudelft.cs4160.trustchain_android.database.TrustChainDBHelper(this); nl.tudelft.cs4160.trustchain_android.Util.DualKey keyPairOfC = nl.tudelft.cs4160.trustchain_android.Util.Key.createNewKeyPair(); nl.tudelft.cs4160.trustchain_android.Util.DualKey keyPairOfA = nl.tudelft.cs4160.trustchain_android.Util.Key.loadKeys(this); nl.tudelft.cs4160.trustchain_android.qr.models.QRTransaction transaction = new nl.tudelft.cs4160.trustchain_android.qr.models.QRTransaction(); try { nl.tudelft.cs4160.trustchain_android.message.MessageProto.TrustChainBlock lastBlock = dbHelper.getLatestBlock(keyPairOfA.getPublicKey().toBytes()); org.json.JSONObject object = new org.json.JSONObject(lastBlock.getTransaction().toStringUtf8()); java.lang.System.out.println(object.toString()); transaction.up = object.getLong(\"total_up\"); transaction.down = object.getLong(\"total_down\"); transaction.totalUp = (object.getLong(\"total_up\")) + (transaction.down); transaction.totalDown = (object.getLong(\"total_down\")) + (transaction.up); } catch (java.lang.Exception e) { android.util.Log.e(nl.tudelft.cs4160.trustchain_android.qr.ExportWalletQRActivity.TAG, (\"Could not export QR code, chain data might be corrupted: \" + (e.getMessage())), e); runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { displayError(\"Cannot export QR code, there are no funds in your chain data!\"); } }); } com.squareup.moshi.JsonAdapter<nl.tudelft.cs4160.trustchain_android.qr.models.QRTransaction> transactionAdapter = moshi.adapter(nl.tudelft.cs4160.trustchain_android.qr.models.QRTransaction.class); nl.tudelft.cs4160.trustchain_android.message.MessageProto.TrustChainBlock blockAtoC = createBlock(transactionAdapter.toJson(transaction).getBytes(), dbHelper, keyPairOfA.getPublicKey().toBytes(), null, keyPairOfC.getPublicKey().toBytes()); blockAtoC = sign(blockAtoC, keyPairOfA.getSigningKey()); nl.tudelft.cs4160.trustchain_android.message.MessageProto.TrustChainBlock blockCtoA = createBlock(transactionAdapter.toJson(transaction).getBytes(), dbHelper, keyPairOfC.getPublicKey().toBytes(), blockAtoC, keyPairOfA.getPublicKey().toBytes()); blockCtoA = sign(blockCtoA, keyPairOfC.getSigningKey()); dbHelper.insertInDB(blockAtoC); dbHelper.insertInDB(blockCtoA); dbHelper.insertInDB(blockAtoC); dbHelper.insertInDB(blockCtoA); nl.tudelft.cs4160.trustchain_android.qr.models.QRBlock block = new nl.tudelft.cs4160.trustchain_android.qr.models.QRBlock(); block.blockHashBase64 = java.lang.Integer.toHexString(blockCtoA.hashCode()); block.sequenceNumber = blockCtoA.getSequenceNumber(); nl.tudelft.cs4160.trustchain_android.qr.models.QRWallet wallet = new nl.tudelft.cs4160.trustchain_android.qr.models.QRWallet(); wallet.privateKeyBase64 = android.util.Base64.encodeToString(getBinaryExportKey(keyPairOfC), Base64.DEFAULT); wallet.block = block; wallet.transaction = transaction; java.lang.String jsonEncoded = walletAdapter.toJson(wallet); java.lang.System.out.println(((\"Encoding \" + jsonEncoded) + \" as QR code!\")); com.google.zxing.MultiFormatWriter writer = new com.google.zxing.MultiFormatWriter(); android.util.DisplayMetrics metrics = new android.util.DisplayMetrics(); getWindowManager().getDefaultDisplay().getMetrics(metrics); int size = metrics.widthPixels; com.google.zxing.common.BitMatrix matrix = writer.encode(jsonEncoded, BarcodeFormat.QR_CODE, size, size); final android.graphics.Bitmap image = android.graphics.Bitmap.createBitmap(size, size, Bitmap.Config.ARGB_8888); for (int i = 0; i < size; i++) { for (int j = 0; j < size; j++) { image.setPixel(i, j, (matrix.get(i, j) ? android.graphics.Color.BLACK : android.graphics.Color.WHITE)); } } runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { displayQRCode(image); } }); } catch (java.lang.Exception e) { android.util.Log.e(nl.tudelft.cs4160.trustchain_android.qr.ExportWalletQRActivity.TAG, \"Could not export QR code:\", e); final java.lang.String msg = e.getMessage(); runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { displayError((\"Export Failed: \" + msg)); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/6829/buggy-version/app.src.main.java.nl.tudelft.cs4160.trustchain_android.qr.ExportWalletQRActivity.java", "BodyUseAPI": ["com.google.zxing.MultiFormatWriter.encode(java.lang.String,BarcodeFormat.QR_CODE,int,int)", "nl.tudelft.cs4160.trustchain_android.qr.ExportWalletQRActivity.sign(MessageProto.TrustChainBlock,keyPairOfA.getSigningKey())", "keyPairOfA.getPublicKey().toBytes()", "java.lang.Exception.getMessage()", "nl.tudelft.cs4160.trustchain_android.Util.DualKey.getPublicKey()", "com.squareup.moshi.JsonAdapter<nl.tudelft.cs4160.trustchain_android.qr.models.QRTransaction>.toJson(nl.tudelft.cs4160.trustchain_android.qr.models.QRTransaction)", "com.squareup.moshi.JsonAdapter<nl.tudelft.cs4160.trustchain_android.qr.models.QRTransaction>.toJson(nl.tudelft.cs4160.trustchain_android.qr.models.QRTransaction)", "getWindowManager().getDefaultDisplay()", "org.json.JSONObject.getLong(java.lang.String)", "nl.tudelft.cs4160.trustchain_android.qr.ExportWalletQRActivity.createBlock(transactionAdapter.toJson(transaction).getBytes(),nl.tudelft.cs4160.trustchain_android.database.TrustChainDBHelper,keyPairOfA.getPublicKey().toBytes(),<nulltype>,keyPairOfC.getPublicKey().toBytes())", "com.squareup.moshi.JsonAdapter<nl.tudelft.cs4160.trustchain_android.qr.models.QRWallet>.toJson(nl.tudelft.cs4160.trustchain_android.qr.models.QRWallet)", "nl.tudelft.cs4160.trustchain_android.qr.ExportWalletQRActivity.runOnUiThread(java.lang.Runnable)", "java.io.PrintStream.println(java.lang.String)", "nl.tudelft.cs4160.trustchain_android.Util.DualKey.getPublicKey()", "nl.tudelft.cs4160.trustchain_android.database.TrustChainDBHelper.insertInDB(MessageProto.TrustChainBlock)", "org.json.JSONObject.toString()", "keyPairOfA.getPublicKey().toBytes()", "nl.tudelft.cs4160.trustchain_android.Util.Key.createNewKeyPair()", "nl.tudelft.cs4160.trustchain_android.qr.ExportWalletQRActivity.getWindowManager()", "android.graphics.Bitmap.createBitmap(int,int,Bitmap.Config.ARGB_8888)", "nl.tudelft.cs4160.trustchain_android.Util.Key.loadKeys(nl.tudelft.cs4160.trustchain_android.qr.ExportWalletQRActivity)", "java.io.PrintStream.println(object.toString())", "nl.tudelft.cs4160.trustchain_android.database.TrustChainDBHelper.insertInDB(MessageProto.TrustChainBlock)", "nl.tudelft.cs4160.trustchain_android.qr.ExportWalletQRActivity.3.displayQRCode(android.graphics.Bitmap)", "nl.tudelft.cs4160.trustchain_android.Util.DualKey.getPublicKey()", "java.lang.Object()", "android.graphics.Bitmap.setPixel(int,int,(matrix.get(i, j) ? android.graphics.Color.BLACK : android.graphics.Color.WHITE))", "keyPairOfC.getPublicKey().toBytes()", "nl.tudelft.cs4160.trustchain_android.Util.DualKey.getSigningKey()", "nl.tudelft.cs4160.trustchain_android.qr.ExportWalletQRActivity.sign(MessageProto.TrustChainBlock,keyPairOfC.getSigningKey())", "nl.tudelft.cs4160.trustchain_android.Util.DualKey.getPublicKey()", "nl.tudelft.cs4160.trustchain_android.qr.ExportWalletQRActivity.getBinaryExportKey(nl.tudelft.cs4160.trustchain_android.Util.DualKey)", "com.squareup.moshi.Moshi.Builder.build()", "com.squareup.moshi.Moshi.adapter(java.lang.Class)", "android.util.Log.e(java.lang.String,java.lang.String,java.lang.Exception)", "nl.tudelft.cs4160.trustchain_android.Util.DualKey.getPublicKey()", "transactionAdapter.toJson(transaction).getBytes()", "nl.tudelft.cs4160.trustchain_android.database.TrustChainDBHelper.insertInDB(MessageProto.TrustChainBlock)", "MessageProto.TrustChainBlock.hashCode()", "nl.tudelft.cs4160.trustchain_android.Util.DualKey.getSigningKey()", "java.lang.Object()", "java.lang.Integer.toHexString(blockCtoA.hashCode())", "com.google.zxing.common.BitMatrix.get(int,int)", "nl.tudelft.cs4160.trustchain_android.qr.ExportWalletQRActivity.runOnUiThread(java.lang.Runnable)", "com.squareup.moshi.Moshi.adapter(java.lang.Class)", "org.json.JSONObject.getLong(java.lang.String)", "nl.tudelft.cs4160.trustchain_android.qr.ExportWalletQRActivity.2.displayError(java.lang.String)", "android.util.Base64.encodeToString(byte[],Base64.DEFAULT)", "transactionAdapter.toJson(transaction).getBytes()", "lastBlock.getTransaction().toStringUtf8()", "keyPairOfA.getPublicKey().toBytes()", "nl.tudelft.cs4160.trustchain_android.database.TrustChainDBHelper.insertInDB(MessageProto.TrustChainBlock)", "MessageProto.TrustChainBlock.getSequenceNumber()", "keyPairOfC.getPublicKey().toBytes()", "nl.tudelft.cs4160.trustchain_android.qr.ExportWalletQRActivity.createBlock(transactionAdapter.toJson(transaction).getBytes(),nl.tudelft.cs4160.trustchain_android.database.TrustChainDBHelper,keyPairOfC.getPublicKey().toBytes(),MessageProto.TrustChainBlock,keyPairOfA.getPublicKey().toBytes())", "getWindowManager().getDefaultDisplay().getMetrics(android.util.DisplayMetrics)", "org.json.JSONObject.getLong(java.lang.String)", "org.json.JSONObject.getLong(java.lang.String)", "MessageProto.TrustChainBlock.getTransaction()", "nl.tudelft.cs4160.trustchain_android.database.TrustChainDBHelper.getLatestBlock(keyPairOfA.getPublicKey().toBytes())"], "Fixed commit": "c986ab11232e271fca0daa47f2a993bfba3d68bf", "Url": "https://api.github.com/repos/blockchain-storage/app", "Date": "2018-01-18T15:45:58Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.content.Intent intent = new android.content.Intent(android.content.Intent.ACTION_VIEW); intent.setData(android.net.Uri.parse(IConstants.PROJECT_SOURCE_CODE_URL)); startActivity(intent); } catch (java.lang.Exception e) { android.widget.Toast.makeText(mHomeActivity, R.string.browser_install_or_enable_prompt, Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/5568/buggy-version/app.src.main.java.com.github.tianma8023.xposed.smscode.app.SettingsFragment.java", "BodyUseAPI": ["android.content.Intent.setData(android.net.Uri.parse(IConstants.PROJECT_SOURCE_CODE_URL))", "com.github.tianma8023.xposed.smscode.app.SettingsFragment.startActivity(android.content.Intent)", "android.net.Uri.parse(IConstants.PROJECT_SOURCE_CODE_URL)"], "Fixed commit": "92887ab41adf560363f18dad73414a33c47a0d9c", "Url": "https://api.github.com/repos/tianma8023/XposedSmsCode", "Date": "2018-08-15T15:13:27Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { jp.ne.sakura.kkkon.lib.UnityMulticastTunnelHost.mSocket.getInputStream().close(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/721/buggy-version/lib-tunnel.src.main.java.jp.ne.sakura.kkkon.lib.UnityMulticastTunnelHost.java", "BodyUseAPI": ["java.net.Socket.getInputStream()", "java.io.InputStream.close()"], "Fixed commit": "5ad807c52b9f7c9531e9d90fbf7811e464578889", "Url": "https://api.github.com/repos/kkkon/unity-android-usbdebug", "Date": "2018-09-17T08:45:40Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { jp.ne.sakura.kkkon.lib.UnityMulticastTunnelHost.mSocket.getOutputStream().close(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/721/buggy-version/lib-tunnel.src.main.java.jp.ne.sakura.kkkon.lib.UnityMulticastTunnelHost.java", "BodyUseAPI": ["java.net.Socket.getOutputStream()", "java.io.OutputStream.close()"], "Fixed commit": "5ad807c52b9f7c9531e9d90fbf7811e464578889", "Url": "https://api.github.com/repos/kkkon/unity-android-usbdebug", "Date": "2018-09-17T08:45:40Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Integer result8 = findPrimeFactor.FindPrimeFactor.findPrimeFactor(a, b); } catch (java.lang.IllegalArgumentException e) { java.lang.System.out.println(\"IllegalArgumentException thrown, as expected\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4683/buggy-version/hw2.src.findPrimeFactor.Main.java", "BodyUseAPI": ["findPrimeFactor.FindPrimeFactor.findPrimeFactor(java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>)"], "Fixed commit": "3f772994d5ea1dae1aa8461797af504a656a5daf", "Url": "https://api.github.com/repos/kjacks21/swe619-fall2018", "Date": "2018-09-08T20:33:46Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mActivity.startActivityForResult(createIntent(), mRequestCode); } catch (java.lang.Exception e) { if ((mCallback) != null) { mCallback.onError(com.sw926.imagefileselector.ErrorResult.error); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3917/buggy-version/library.src.main.java.com.sw926.imagefileselector.ImagePickHelper.java", "BodyUseAPI": ["android.app.Activity.startActivityForResult(android.content.Intent,int)", "com.sw926.imagefileselector.ImagePickHelper.createIntent()"], "Fixed commit": "1ddc0c3cdd2795c5294d138d9eb939de07fb68bd", "Url": "https://api.github.com/repos/sw926/ImageFileSelector", "Date": "2018-01-22T08:28:49Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mFragment.startActivityForResult(createIntent(), mRequestCode); } catch (java.lang.Exception e) { if ((mCallback) != null) { mCallback.onError(com.sw926.imagefileselector.ErrorResult.error); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3917/buggy-version/library.src.main.java.com.sw926.imagefileselector.ImagePickHelper.java", "BodyUseAPI": ["android.support.v4.app.Fragment.startActivityForResult(android.content.Intent,int)", "com.sw926.imagefileselector.ImagePickHelper.createIntent()"], "Fixed commit": "1ddc0c3cdd2795c5294d138d9eb939de07fb68bd", "Url": "https://api.github.com/repos/sw926/ImageFileSelector", "Date": "2018-01-22T08:28:49Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { newBidAmount = java.lang.Double.parseDouble(bidAmountText.getText().toString()); } catch (java.lang.Exception e) { android.widget.Toast.makeText(getApplicationContext(), \"Please enter a valid number\", Toast.LENGTH_LONG).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2930/buggy-version/app.src.main.java.com.example.n8tech.taskcan.Views.ViewTaskActivity.java", "BodyUseAPI": ["java.lang.Double.parseDouble(bidAmountText.getText().toString())", "bidAmountText.getText().toString()", "android.widget.EditText.getText()"], "Fixed commit": "569d33b427a1c7de3f0a168c3a8dc427df7ce541", "Url": "https://api.github.com/repos/CMPUT301W18T06/TaskCan", "Date": "2018-04-08T20:27:46Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { rmsf_color = new java.awt.Color(rgb_value, rgb_value, rgb_value); } catch (java.lang.Exception e) { java.lang.System.err.println((\"Could not create color with rgb_value: \" + rgb_value)); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3446/buggy-version/src.util.RMSF.java", "BodyUseAPI": [], "Fixed commit": "4f12bac59fe4915bf65fcf41e39c68c3406a728e", "Url": "https://api.github.com/repos/JackMaguire/PhotoCompositor", "Date": "2018-04-04T20:53:02Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { subscriptionId = java.lang.Integer.parseInt(requestPath.substring(((requestPath.lastIndexOf(\"/\")) + 1)).replaceFirst(\"sub\", \"\")); } catch (java.lang.NumberFormatException ex) { throw new com.wso2telco.dep.oneapivalidation.exceptions.CustomException(com.wso2telco.dep.mediator.MSISDNConstants.SVC0002, \"\", new java.lang.String[]{ com.wso2telco.dep.mediator.ErrorConstants.INVALID_SUBSCRIPTION_ID }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7107/buggy-version/mediation-old.src.main.java.com.wso2telco.dep.mediator.impl.ussd.SouthBoundStopMOUSSDSubscriptionHandler.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.lastIndexOf(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.replaceFirst(java.lang.String,java.lang.String)"], "Fixed commit": "99bf3449e75ca513ca1d0cad99bd41f4af8bc0d4", "Url": "https://api.github.com/repos/dsulochana/mediation-dep", "Date": "2018-10-17T05:25:44Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { db.insertWithOnConflict(TaskContract.TaskEntry.TABLE_NAME, null, values, SQLiteDatabase.CONFLICT_REPLACE); db.setTransactionSuccessful(); } catch (java.lang.Exception e) { e.printStackTrace(); } finally { db.endTransaction(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8395/buggy-version/android.src.main.java.vn.hunghd.flutterdownloader.TaskDao.java", "BodyUseAPI": ["android.database.sqlite.SQLiteDatabase.insertWithOnConflict(TaskContract.TaskEntry.TABLE_NAME,<nulltype>,android.content.ContentValues,SQLiteDatabase.CONFLICT_REPLACE)", "android.database.sqlite.SQLiteDatabase.setTransactionSuccessful()"], "Fixed commit": "a8ebbad6510ec8933dcac53a090437472ade38ec", "Url": "https://api.github.com/repos/fluttercommunity/flutter_downloader", "Date": "2018-09-14T01:45:51Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { year = java.lang.Integer.parseInt(this.currInterest); stmt.setInt(3, java.lang.Integer.parseInt(this.currInterest)); } catch (java.lang.NumberFormatException e) { javax.swing.JOptionPane.showMessageDialog(null, \"Error: please enter a number\"); throw new java.sql.SQLException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/320/buggy-version/src.InterestsPanel.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.sql.CallableStatement.setInt(int,int)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "9b716967b0de2ef06cd055faa38377ed6d26b698", "Url": "https://api.github.com/repos/OliviaZY/CSSE333Project", "Date": "2018-05-17T16:57:28Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.json.JSONObject dialogObject = clientDialogs.optJSONObject(j); com.shaedar.virtualclient.Core.Dialog dialog = tryParseDialog(dialogObject); dialogs.add(dialog); } catch (com.shaedar.virtualclient.Core.WebSocket.DialogsResponseListener.JsonParsingException ex) { android.util.Log.i(com.shaedar.virtualclient.Core.WebSocket.TAG, ex.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1338/buggy-version/virtualclient.src.main.java.com.shaedar.virtualclient.Core.WebSocket.java", "BodyUseAPI": ["org.json.JSONArray.optJSONObject(int)", "java.util.List<com.shaedar.virtualclient.Core.Dialog>.add(com.shaedar.virtualclient.Core.Dialog)", "com.shaedar.virtualclient.Core.WebSocket.DialogsResponseListener.tryParseDialog(org.json.JSONObject)"], "Fixed commit": "e937231b19fb3b68f4eb17b1265d21341c7dda0e", "Url": "https://api.github.com/repos/vpribytkov/virtualclient", "Date": "2018-09-25T07:53:41Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return query.getSingleResult(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2099/buggy-version/src.main.java.com.soapboxrace.core.dao.CarClassesDAO.java", "BodyUseAPI": ["javax.persistence.TypedQuery<com.soapboxrace.core.jpa.CarClassesEntity>.getSingleResult()"], "Fixed commit": "b4239b53f9d751b629bfcf6b685cbd272c862c78", "Url": "https://api.github.com/repos/nilzao/soapbox-race-core", "Date": "2018-05-09T00:12:41Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((args.length) == 2) { if (args[0].equalsIgnoreCase(\"withdraw\")) { org.json.JSONObject json = core.JSONhandler.readJsonFromUrl((((\"https://api.coinhive.com/user/balance?name=\" + (event.getAuthor().getId())) + \"&secret=\") + (stuff.SECRETS.COINHIVESECRET))); java.lang.Long mined = json.getLong(\"total\"); java.lang.String withdrawn = core.MySQL.get(\"user\", \"id\", event.getAuthor().getId(), \"withdrawnhashes\"); java.lang.String hashes = core.MySQL.get(\"user\", \"id\", event.getAuthor().getId(), \"hashes\"); if ((mined - (java.lang.Long.parseLong(withdrawn))) > 0) { if (((mined - (java.lang.Long.parseLong(withdrawn))) - (java.lang.Long.parseLong(args[1]))) >= 0) { core.MySQL.update(\"user\", \"hashes`,`withdrawnhashes\", (((((java.lang.Long.parseLong(hashes)) + (java.lang.Long.parseLong(args[1]))) + \"','\") + (java.lang.Long.parseLong(withdrawn))) + (java.lang.Long.parseLong(args[1]))), \"id\", event.getAuthor().getId()); } } } }else event.getTextChannel().sendMessage(new net.dv8tion.jda.core.EmbedBuilder().setTitle(\"Miner - Usage\").setDescription(\"withdraw your Mined Hashes in Bot Hashes ``gb.miner withdraw [amount]`` (You see your mined hashes with gb.profile)\").build()).queue(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9795/buggy-version/src.main.java.commands.usercommands.CommandMiner.java", "BodyUseAPI": ["java.lang.Long.parseLong(java.lang.String)", "java.lang.Long.parseLong(java.lang.String)", "event.getTextChannel().sendMessage(new net.dv8tion.jda.core.EmbedBuilder().setTitle(\"Miner - Usage\").setDescription(\"withdraw your Mined Hashes in Bot Hashes ``gb.miner withdraw [amount]`` (You see your mined hashes with gb.profile)\").build()).queue()", "net.dv8tion.jda.core.events.message.MessageReceivedEvent.getAuthor()", "net.dv8tion.jda.core.events.message.MessageReceivedEvent.getTextChannel()", "core.MySQL.get(java.lang.String,java.lang.String,event.getAuthor().getId(),java.lang.String)", "core.MySQL.update(java.lang.String,java.lang.String,java.lang.String,java.lang.String,event.getAuthor().getId())", "new net.dv8tion.jda.core.EmbedBuilder().setTitle(\"Miner - Usage\").setDescription(\"withdraw your Mined Hashes in Bot Hashes ``gb.miner withdraw [amount]`` (You see your mined hashes with gb.profile)\").build()", "new net.dv8tion.jda.core.EmbedBuilder().setTitle(\"Miner - Usage\").setDescription(java.lang.String)", "event.getAuthor().getId()", "java.lang.Long.parseLong(java.lang.String)", "core.MySQL.get(java.lang.String,java.lang.String,event.getAuthor().getId(),java.lang.String)", "java.lang.Long.parseLong(java.lang.String)", "event.getAuthor().getId()", "net.dv8tion.jda.core.events.message.MessageReceivedEvent.getAuthor()", "event.getAuthor().getId()", "event.getTextChannel().sendMessage(new net.dv8tion.jda.core.EmbedBuilder().setTitle(\"Miner - Usage\").setDescription(\"withdraw your Mined Hashes in Bot Hashes ``gb.miner withdraw [amount]`` (You see your mined hashes with gb.profile)\").build())", "net.dv8tion.jda.core.EmbedBuilder.setTitle(java.lang.String)", "org.json.JSONObject.getLong(java.lang.String)", "java.lang.Long.parseLong(java.lang.String)", "net.dv8tion.jda.core.events.message.MessageReceivedEvent.getAuthor()", "core.JSONhandler.readJsonFromUrl((((\"https://api.coinhive.com/user/balance?name=\" + (event.getAuthor().getId())) + \"&secret=\") + (stuff.SECRETS.COINHIVESECRET)))", "java.lang.Long.parseLong(java.lang.String)", "net.dv8tion.jda.core.events.message.MessageReceivedEvent.getAuthor()", "java.lang.String.equalsIgnoreCase(java.lang.String)", "event.getAuthor().getId()", "java.lang.Long.parseLong(java.lang.String)"], "Fixed commit": "1315b3bc4bc66faa6b19f963a033facb3880fb70", "Url": "https://api.github.com/repos/BigBotNetwork/GottBotReloaded", "Date": "2018-03-29T09:51:51Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { m = new iso8583.Message(Msg); } catch (exceptions.WrongMessageException ex) { java.util.logging.Logger.getLogger(network.MultiThreadServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7537/buggy-version/src.network.MultiThreadServer.java", "BodyUseAPI": [], "Fixed commit": "e1d2d31903fcdbc4fbf9dd41e8d734b50b9ff700", "Url": "https://api.github.com/repos/YousifShafee/ISOMessage_project", "Date": "2018-08-01T08:13:00Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { try { mDataOutputStream.writeUTF(m.response().getMsg()); } catch (java.lang.NullPointerException e) { } } catch (exceptions.WrongMessageException ex) { java.util.logging.Logger.getLogger(network.MultiThreadServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7537/buggy-version/src.network.MultiThreadServer.java", "BodyUseAPI": ["iso8583.Message.response()", "java.io.DataOutputStream.writeUTF(m.response().getMsg())", "m.response().getMsg()"], "Fixed commit": "e1d2d31903fcdbc4fbf9dd41e8d734b50b9ff700", "Url": "https://api.github.com/repos/YousifShafee/ISOMessage_project", "Date": "2018-08-01T08:13:00Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { activityTable.getColumns().clear(); eventNameColumn.setCellValueFactory(new javafx.scene.control.cell.PropertyValueFactory<sample.Activity, java.lang.String>(\"activityName\")); eventDurationColumn.setCellValueFactory(new javafx.scene.control.cell.PropertyValueFactory<sample.Activity, java.lang.Integer>(\"activityDuration\")); eventDependenciesColumn.setCellValueFactory(new javafx.scene.control.cell.PropertyValueFactory<sample.Activity, java.lang.String>(\"dynamicString\")); activityTable.setItems(sample.Controller.product); activityTable.getColumns().addAll(eventNameColumn, eventDurationColumn, eventDependenciesColumn); } catch (java.lang.Exception e) { java.lang.System.out.println(\"yeah\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/6035/buggy-version/src.sample.Controller.java", "BodyUseAPI": ["activityTable.getColumns().clear()", "sample.TableView<sample.Activity>.getColumns()", "sample.TableView<sample.Activity>.setItems(javafx.collections.ObservableList<sample.Activity>)", "sample.TableView<sample.Activity>.getColumns()", "activityTable.getColumns().addAll(sample.TableColumn<sample.Activity, java.lang.String>,sample.TableColumn<sample.Activity, java.lang.Integer>,sample.TableColumn<sample.Activity, java.lang.String>)", "sample.TableColumn<sample.Activity, java.lang.String>.setCellValueFactory(javafx.scene.control.cell.PropertyValueFactory<sample.Activity, java.lang.String>)", "sample.TableColumn<sample.Activity, java.lang.Integer>.setCellValueFactory(javafx.scene.control.cell.PropertyValueFactory<sample.Activity, java.lang.Integer>)", "sample.TableColumn<sample.Activity, java.lang.String>.setCellValueFactory(javafx.scene.control.cell.PropertyValueFactory<sample.Activity, java.lang.String>)"], "Fixed commit": "18edbaf0cbec485bd3bc7a1086b9bf912fcc9482", "Url": "https://api.github.com/repos/Software-Engineering-sg-13/Pert-graph-and-gantt-chart-generator", "Date": "2018-02-26T21:46:08Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { transaction.commit(); } catch (java.lang.IllegalStateException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8904/buggy-version/app.src.main.java.com.bangalorebuses.MainActivity.java", "BodyUseAPI": ["android.support.v4.app.FragmentTransaction.commit()"], "Fixed commit": "c60062203684e1454365c60873857ad7a79bd788", "Url": "https://api.github.com/repos/nihar1024/bengaluru_buses", "Date": "2017-07-10T17:39:20Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ((redis.clients.jedis.JedisCluster) (connection)).close(); } catch (java.io.IOException e) { com.crossoverjie.distributed.limit.RedisLimit.logger.error(\"IOException\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/596/buggy-version/src.main.java.com.crossoverjie.distributed.limit.RedisLimit.java", "BodyUseAPI": ["java.lang.Object.close()"], "Fixed commit": "5ca3521a36d0b325525c25ea544069a2d43e432a", "Url": "https://api.github.com/repos/crossoverJie/distributed-redis-tool", "Date": "2018-05-06T10:44:32Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { int thisRow = startRow + (positions[i][0]); int thisCol = startCol + (positions[i][1]); if ((board[thisRow][thisCol]) == 0) { board[startRow][startCol] = num; solveHelp(thisRow, thisCol, (num + 1)); } board[startRow][startCol] = 0; } catch (java.lang.IndexOutOfBoundsException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4743/buggy-version/03KnightsOfNi.KnightBoard.java", "BodyUseAPI": ["KnightBoard.solveHelp(int,int,int)"], "Fixed commit": "15e5a787fadeef96a4a98a9425e48b85c762f143", "Url": "https://api.github.com/repos/wlohier/MKS22X", "Date": "2018-02-24T14:13:40Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { decks = ((int) (javax.swing.JOptionPane.showInputDialog(null, \"Enter number of decks:\", \"Number of Decks\", javax.swing.JOptionPane.PLAIN_MESSAGE, null, possibilities, 1))); } catch (java.lang.Exception e) { javax.swing.JOptionPane.showMessageDialog(null, (\"You did not pick the number of decks. \" + \"Defaulting to 1.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4454/buggy-version/cis350project.src.casinogames.BlackJackGUI.java", "BodyUseAPI": ["javax.swing.JOptionPane.showInputDialog(<nulltype>,java.lang.String,java.lang.String,int,<nulltype>,java.lang.Object[],int)"], "Fixed commit": "159684aa9d7e408e26b53eccb958511726d011b2", "Url": "https://api.github.com/repos/adnguy3n/cis350project", "Date": "2018-04-22T21:11:02Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (int i = 0; i < 16; i++) { for (int j = 0; j < 16; j++) { sbox[i][j] = validateBase(list.get(index)); index++; } } } catch (java.lang.Exception e) { javax.swing.JOptionPane.showMessageDialog(null, \"L\u1ed7i chuy\u1ec3n c\u01a1 s\u00f3 !!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4763/buggy-version/src.controller.ImageController.java", "BodyUseAPI": ["controller.ImageController.validateBase(java.lang.String)", "java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "dc5981b3e9046f3984f4e431fd6bcefe2529c037", "Url": "https://api.github.com/repos/nghiaes/Calculate", "Date": "2018-09-06T16:02:41Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.modifyTour(tempTour.getId(), tempTour.getRoute(), tempTour.getBus(), tempTour.getStartDateObject(), tempTour.getDriver()); } catch (java.lang.StackOverflowError e) { this.modifyTour(tempTour.getId(), tempTour.getRoute(), tempTour.getBus(), tempTour.getDriver()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9224/buggy-version/src.main.java.memoranda.TourCollectionImpl.java", "BodyUseAPI": ["main.java.memoranda.Tour.getDriver()", "main.java.memoranda.Tour.getRoute()", "main.java.memoranda.Tour.getStartDateObject()", "main.java.memoranda.Tour.getId()", "main.java.memoranda.Tour.getBus()", "main.java.memoranda.TourCollectionImpl.modifyTour(tempTour.getId(),tempTour.getRoute(),tempTour.getBus(),tempTour.getStartDateObject(),tempTour.getDriver())"], "Fixed commit": "df7da6dc2d678a15fa761ce7e4137050af45d90b", "Url": "https://api.github.com/repos/ser316asu-2018/Hohenzollern", "Date": "2018-04-28T05:24:36Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.modifyTour(tempTour.getId(), tempTour.getRoute(), tempTour.getBus(), tempTour.getStartDateObject(), tempTour.getDriver()); } catch (java.lang.StackOverflowError e) { this.modifyTour(tempTour.getId(), tempTour.getRoute(), tempTour.getBus(), tempTour.getDriver()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9224/buggy-version/src.main.java.memoranda.TourCollectionImpl.java", "BodyUseAPI": ["main.java.memoranda.Tour.getBus()", "main.java.memoranda.Tour.getRoute()", "main.java.memoranda.Tour.getStartDateObject()", "main.java.memoranda.Tour.getId()", "main.java.memoranda.TourCollectionImpl.modifyTour(tempTour.getId(),tempTour.getRoute(),tempTour.getBus(),tempTour.getStartDateObject(),tempTour.getDriver())", "main.java.memoranda.Tour.getDriver()"], "Fixed commit": "df7da6dc2d678a15fa761ce7e4137050af45d90b", "Url": "https://api.github.com/repos/ser316asu-2018/Hohenzollern", "Date": "2018-04-28T05:24:36Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.modifyTour(tempTour.getId(), tempTour.getRoute(), tempTour.getBus(), tempTour.getStartDateObject(), tempTour.getDriver()); } catch (java.lang.StackOverflowError e) { this.modifyTour(tempTour.getId(), tempTour.getRoute(), tempTour.getBus(), tempTour.getDriver()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9224/buggy-version/src.main.java.memoranda.TourCollectionImpl.java", "BodyUseAPI": ["main.java.memoranda.Tour.getRoute()", "main.java.memoranda.Tour.getDriver()", "main.java.memoranda.Tour.getBus()", "main.java.memoranda.TourCollectionImpl.modifyTour(tempTour.getId(),tempTour.getRoute(),tempTour.getBus(),tempTour.getStartDateObject(),tempTour.getDriver())", "main.java.memoranda.Tour.getId()", "main.java.memoranda.Tour.getStartDateObject()"], "Fixed commit": "df7da6dc2d678a15fa761ce7e4137050af45d90b", "Url": "https://api.github.com/repos/ser316asu-2018/Hohenzollern", "Date": "2018-04-28T05:24:36Z"},
{"Line": "=>788", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.apache.commons.io.FileUtils.copyFile(file, outputStream); } catch (java.io.FileNotFoundException e) { root.system.utils.Utils.log(root.system.utils.Utils.TAG, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/6172/buggy-version/app.src.main.java.root.system.utils.Utils.java", "BodyUseAPI": ["org.apache.commons.io.FileUtils.copyFile(java.io.File,java.io.BufferedOutputStream)"], "Fixed commit": "70d456734b2adfccd2596f0cf2c11b2b1a59af2c", "Url": "https://api.github.com/repos/pvasa/System", "Date": "2016-09-15T04:16:53Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { richtung = de.x8bit.Fantasya.Atlantis.Richtung.getRichtung(auftraege.get(0)); } catch (java.lang.IllegalArgumentException e) { abbruch = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1444/buggy-version/src.de.x8bit.Fantasya.Host.EVA.util.Reisen.java", "BodyUseAPI": ["de.x8bit.Fantasya.Atlantis.Richtung.getRichtung(java.lang.String)", "java.util.List<java.lang.String>.get(int)"], "Fixed commit": "61b5c7948c118d74110146b6912cb41258943913", "Url": "https://api.github.com/repos/fantasya-pbem/host", "Date": "2018-05-27T17:24:26Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { tableDataForMart = listener.getTableDataForMart(jobConfiguration.getName()); tableDataProcessor.setTableData(tableDataForMart); return tableDataProcessor; } catch (org.springframework.jdbc.BadSqlGrammarException e) { return tableDataProcessor; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/462/buggy-version/src.main.java.org.bahmni.mart.exports.template.JobTemplate.java", "BodyUseAPI": ["org.bahmni.mart.table.listener.AbstractJobListener.getTableDataForMart(jobConfiguration.getName())", "org.bahmni.mart.table.TableDataProcessor.setTableData(org.bahmni.mart.table.domain.TableData)", "org.bahmni.mart.config.job.model.JobDefinition.getName()"], "Fixed commit": "12349970f362ef91bfe401e97f5ce720e322f772", "Url": "https://api.github.com/repos/bahmni-msf/bahmni-mart", "Date": "2018-07-17T13:17:47Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { enteredRaffles = ((org.openqa.selenium.chrome.ChromeDriver) (webDriver)).findElementByXPath(\"/html/body/div[3]/div[4]/div[2]/div/i18n/var\"); } catch (java.lang.Exception e) { enteredRaffles = ((org.openqa.selenium.chrome.ChromeDriver) (webDriver)).findElementByXPath(\"/html/body/div[3]/div[3]/div[2]/div/i18n/var\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3488/buggy-version/src.Scraffle.java", "BodyUseAPI": ["org.openqa.selenium.WebDriver.findElementByXPath(java.lang.String)"], "Fixed commit": "1c595ad4ebb250452206326ab9c59b7e89e4e078", "Url": "https://api.github.com/repos/Bonfire/Scraffle", "Date": "2018-05-05T00:57:46Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { this.mp = new pmc.bll.MoviePlayer(); } catch (pmc.dal.DALException ex) { javafx.scene.control.Alert alert = new javafx.scene.control.Alert(Alert.AlertType.ERROR, ex.getMessage(), javafx.scene.control.ButtonType.OK); alert.showAndWait(); return; } catch (java.lang.SecurityException ex) { javafx.scene.control.Alert alert = new javafx.scene.control.Alert(Alert.AlertType.ERROR, ex.getMessage(), javafx.scene.control.ButtonType.OK); alert.showAndWait(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/9703/buggy-version/PMC.src.pmc.gui.model.MovieDetailsModel.java", "BodyUseAPI": [], "Fixed commit": "28231343d04fce2d25173ce9bd934b992dedc1c2", "Url": "https://api.github.com/repos/JanvanZetten/PMC-incl-preloader", "Date": "2018-01-18T11:46:04Z"},
{"Line": "=>478", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { maxPoints = java.lang.Integer.parseInt(v.getText().toString()); if ((maxPoints) < 100) { maxPoints = 100; } pointsText.setEnabled(false); pointsText.setEnabled(true); android.util.Log.i(com.martin.pictionary2.MainActivity.TAG, (\"Score set to: \" + (maxPoints))); } catch (java.lang.NumberFormatException e) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6138/buggy-version/app.src.main.java.com.martin.pictionary2.MainActivity.java", "BodyUseAPI": ["android.util.Log.i(java.lang.String,java.lang.String)", "android.widget.TextView.getText()", "android.widget.EditText.setEnabled(boolean)", "android.widget.EditText.setEnabled(boolean)", "java.lang.Integer.parseInt(v.getText().toString())", "v.getText().toString()"], "Fixed commit": "7e5323253cba19d5f29e819a82dfc4272c178a2f", "Url": "https://api.github.com/repos/mverde/Pictionary", "Date": "2018-03-15T01:55:08Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { compliant = (_value.getBytes().length) <= 127; } catch (java.lang.StackOverflowError e) { compliant = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6494/buggy-version/jhove-modules.src.main.java.edu.harvard.hul.ois.jhove.module.pdf.Name.java", "BodyUseAPI": ["edu.harvard.hul.ois.jhove.module.pdf.Name.getBytes()"], "Fixed commit": "8822aedcef237a613d46ec32717b7ca4673fc51f", "Url": "https://api.github.com/repos/cchou/jhove", "Date": "2018-05-13T20:50:01Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return dataAccess.save(server); } catch (org.apache.atlas.exception.AtlasBaseException ex) { return server; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2648/buggy-version/repository.src.main.java.org.apache.atlas.repository.impexp.AtlasServerService.java", "BodyUseAPI": ["org.apache.atlas.repository.ogm.DataAccess.save(org.apache.atlas.model.impexp.AtlasServer)"], "Fixed commit": "614415e0a7941e70cc4211ed2213b19057f02ec7", "Url": "https://api.github.com/repos/apache/atlas", "Date": "2018-10-12T05:36:01Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.springframework.http.ResponseEntity<java.lang.String> response = restTemplate.exchange((((getURI()) + \"/\") + (inv.getItemId())), HttpMethod.GET, requestheaders, java.lang.String.class); com.fasterxml.jackson.databind.JsonNode rootNode = new com.fasterxml.jackson.databind.ObjectMapper().readTree(response.getBody()); invDTO.setName(rootNode.get(\"name\").textValue()); inventory.add(invDTO); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2200/buggy-version/spring.product-inventory.src.main.java.com.redhat.productinventory.services.ProductInventoryService.java", "BodyUseAPI": ["rootNode.get(\"name\").textValue()", "java.util.List<com.redhat.productinventory.dtos.InventoryDTO>.add(com.redhat.productinventory.dtos.InventoryDTO)", "com.redhat.productinventory.entities.Inventory.getItemId()", "com.redhat.productinventory.dtos.InventoryDTO.setName(rootNode.get(\"name\").textValue())", "com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)", "org.springframework.web.client.RestTemplate.exchange((((getURI()) + \"/\") + (inv.getItemId())),HttpMethod.GET,org.springframework.http.HttpEntity<?>,java.lang.Class)", "org.springframework.http.ResponseEntity<java.lang.String>.getBody()", "com.redhat.productinventory.services.ProductInventoryService.getURI()", "com.fasterxml.jackson.databind.ObjectMapper.readTree(response.getBody())"], "Fixed commit": "5de52e51c828a12233d51f6cb3fca3d92cfb0b5d", "Url": "https://api.github.com/repos/murphye/container-native-spring-postgresql", "Date": "2018-02-01T20:44:23Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { super.keyTyped(keyinfo.getCharacter(), keyinfo.getKeyCode()); } catch (java.io.IOException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/344/buggy-version/TypeEx.src.main.java.net.icelane.typeex.book.BookInput.java", "BodyUseAPI": ["net.icelane.typeex.book.BookRender.keyTyped(keyinfo.getCharacter(),keyinfo.getKeyCode())", "net.icelane.typeex.book.io.KeyInfo.getCharacter()", "net.icelane.typeex.book.io.KeyInfo.getKeyCode()"], "Fixed commit": "e882571027041c92ad6b996bf5d9728e84514c49", "Url": "https://api.github.com/repos/MrX13415/TypeEx", "Date": "2018-08-22T14:53:05Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.likya.xsd.myra.model.wlagen.LogAnalysisDocument.LogAnalysis logAnalysis = abstractJobType.getLogAnalysis(); if ((logAnalysis != null) && (logAnalysis.getActive())) { if ((performLogAnalyze(abstractJobType)) != null) { noErrorInLog = false; } } } catch (java.lang.Throwable t) { t.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/9422/buggy-version/Myra-0.0.1.src.com.likya.myra.jef.jobs.ExecuteInShell.java", "BodyUseAPI": ["com.likya.xsd.myra.model.wlagen.LogAnalysisDocument.LogAnalysis.getActive()", "com.likya.myra.jef.jobs.ExecuteInShell.performLogAnalyze(com.likya.xsd.myra.model.joblist.AbstractJobType)", "com.likya.xsd.myra.model.joblist.AbstractJobType.getLogAnalysis()"], "Fixed commit": "c4f2ce7aeb78f965fe95e812bf88e40f7174a39a", "Url": "https://api.github.com/repos/likyateknoloji/Myra", "Date": "2018-01-21T20:48:17Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String sentryDsn = org.beiwe.app.BuildConfig.SENTRY_DSN; io.sentry.Sentry.init(sentryDsn, new io.sentry.android.AndroidSentryClientFactory(ctx)); } catch (io.sentry.dsn.InvalidDsnException ie) { io.sentry.Sentry.init(new io.sentry.android.AndroidSentryClientFactory(ctx)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3578/buggy-version/app.src.main.java.org.beiwe.app.ui.LoadingActivity.java", "BodyUseAPI": ["io.sentry.Sentry.init(java.lang.String,io.sentry.android.AndroidSentryClientFactory)"], "Fixed commit": "19642e96446035afe6b7500f727f8b862b4e9b44", "Url": "https://api.github.com/repos/onnela-lab/beiwe-android", "Date": "2018-04-26T19:30:24Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { multiClassModelCnt = ml.shifu.shifu.util.CommonUtils.getBasicModelsCnt(modelConfig, evalConfig, evalConfig.getDataSet().getSource()); } catch (java.io.FileNotFoundException e) { multiClassModelCnt = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7071/buggy-version/src.main.java.ml.shifu.shifu.core.ConfusionMatrix.java", "BodyUseAPI": ["ml.shifu.shifu.container.obj.EvalConfig.getDataSet()", "ml.shifu.shifu.util.CommonUtils.getBasicModelsCnt(ml.shifu.shifu.container.obj.ModelConfig,ml.shifu.shifu.container.obj.EvalConfig,evalConfig.getDataSet().getSource())", "evalConfig.getDataSet().getSource()"], "Fixed commit": "ddb080b375d46fb7d18e9a917b4e2c410103ea6b", "Url": "https://api.github.com/repos/MiniZhuwei/shifu", "Date": "2017-03-29T19:54:55Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { errorDto = new com.google.gson.Gson().fromJson(responseBodyBuilder.toString(), net.rithms.riot.api.request.RiotApiError.class); } catch (com.google.gson.JsonSyntaxException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/9093/buggy-version/src.main.java.net.rithms.riot.api.request.Request.java", "BodyUseAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)", "java.lang.StringBuilder.toString()"], "Fixed commit": "cad790cb4a24dc640ea5ee56c912d652f70dfa54", "Url": "https://api.github.com/repos/taycaldwell/riot-api-java", "Date": "2018-04-07T01:31:06Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { holder.textViewName.setText(((java.lang.CharSequence) (item.get(reporte.getOrder().get(0))))); } catch (java.lang.Exception e) { holder.textViewName.setText(\"...\"); android.util.Log.d(\"Error en primer\", ((\"called with: position = [\" + position) + \"]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/679/buggy-version/app.src.main.java.com.altechonduras.reportes.views.AdaptadorReportes.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Object>.get(reporte.getOrder().get(0))", "com.altechonduras.reportes.objects.Reporte.getOrder()", "reporte.getOrder().get(int)", "android.widget.TextView.setText(java.lang.Object)"], "Fixed commit": "2a2fd5cc714c714b2bce39338da25d1e1b58b4b0", "Url": "https://api.github.com/repos/neryortez/Calet", "Date": "2018-01-05T22:45:50Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { holder.textViewDescription.setText((reporte.isMostrarSegundo() ? ((java.lang.CharSequence) (item.get(this.reporte.getOrder().get(1)))) : \"\")); } catch (java.lang.Exception e) { holder.textViewDescription.setText(\"...\"); android.util.Log.d(\"Error en segundo\", ((\"called with: position = [\" + position) + \"]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/679/buggy-version/app.src.main.java.com.altechonduras.reportes.views.AdaptadorReportes.java", "BodyUseAPI": ["com.altechonduras.reportes.objects.Reporte.isMostrarSegundo()", "java.util.HashMap<java.lang.String, java.lang.Object>.get(this.reporte.getOrder().get(1))", "this.reporte.getOrder().get(int)", "android.widget.TextView.setText((reporte.isMostrarSegundo() ? ((java.lang.CharSequence) (item.get(this.reporte.getOrder().get(1)))) : \"\"))", "com.altechonduras.reportes.objects.Reporte.getOrder()"], "Fixed commit": "2a2fd5cc714c714b2bce39338da25d1e1b58b4b0", "Url": "https://api.github.com/repos/neryortez/Calet", "Date": "2018-01-05T22:45:50Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { loadVertexSetFile(new java.io.File(\"C:\\\\Users\\\\leeho\\\\Desktop\\\\ioob bug\")); } catch (java.io.FileNotFoundException ex) { dt.Utility.debugPrintln(\"File not found\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5490/buggy-version/src.dt.UI.java", "BodyUseAPI": ["dt.UI.loadVertexSetFile(java.io.File)"], "Fixed commit": "7b7a37b035e5defe31d19c4266d3fd6bf657bb9d", "Url": "https://api.github.com/repos/LeeGlendenning/Quadrilateral-Delaunay-Triangulation", "Date": "2018-08-27T00:07:33Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { value = item.getString(\"UTF-8\"); } catch (final java.io.UnsupportedEncodingException ueex) { throw new java.lang.RuntimeException(ueex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/4805/buggy-version/src.org.beanmaker.util.HttpRequestParameters.java", "BodyUseAPI": ["org.apache.commons.fileupload.FileItem.getString(java.lang.String)"], "Fixed commit": "be3565fe37b6a09ce5d423f108449588f718b59c", "Url": "https://api.github.com/repos/cpythoud/beanmaker", "Date": "2018-03-18T01:11:55Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { model.save(); } catch (java.io.FileNotFoundException e) { javafx.scene.control.Alert fnfAlert = new javafx.scene.control.Alert(javafx.scene.control.Alert.AlertType.ERROR); fnfAlert.setHeaderText(\"File Error\"); fnfAlert.setContentText(\"The file did not successfully save.\"); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5992/buggy-version/src.edu.sjsu.cs151.taskboard.LogoutController.java", "BodyUseAPI": ["edu.sjsu.cs151.taskboard.TaskBoardModel.save()"], "Fixed commit": "b58f4d3368a9844688380121cabbe1d2d4125176", "Url": "https://api.github.com/repos/cs151group/taskboard", "Date": "2018-05-09T07:03:38Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { final ch.redacted.data.remote.WhatManagerService wm = WhatManagerService.Creator.newWMApiService(mPreferencesHelper.getWmHost(), context); return wm.login(mPreferencesHelper.getWmUser(), mPreferencesHelper.getWmPassword()).flatMap(new io.reactivex.functions.Function<retrofit2.Response<okhttp3.ResponseBody>, io.reactivex.Single<retrofit2.Response<okhttp3.ResponseBody>>>() { @java.lang.Override public io.reactivex.Single<retrofit2.Response<okhttp3.ResponseBody>> apply(retrofit2.Response<okhttp3.ResponseBody> response) throws java.lang.Exception { return wm.addTorrent(id); } }); } catch (java.lang.IllegalArgumentException e) { return io.reactivex.Single.error(new java.lang.Exception(\"WM is not configured correctly\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/4199/buggy-version/app.src.main.java.ch.redacted.data.DataManager.java", "BodyUseAPI": ["ch.redacted.data.local.PreferencesHelper.getWmPassword()", "ch.redacted.data.remote.WhatManagerService.login(mPreferencesHelper.getWmUser(),mPreferencesHelper.getWmPassword())", "ch.redacted.data.local.PreferencesHelper.getWmUser()", "ch.redacted.data.local.PreferencesHelper.getWmHost()", "wm.login(mPreferencesHelper.getWmUser(), mPreferencesHelper.getWmPassword()).flatMap(io.reactivex.functions.Function<retrofit2.Response<okhttp3.ResponseBody>, io.reactivex.Single<retrofit2.Response<okhttp3.ResponseBody>>>)", "ch.redacted.data.remote.WhatManagerService.addTorrent(int)", "WhatManagerService.Creator.newWMApiService(mPreferencesHelper.getWmHost(),android.content.Context)"], "Fixed commit": "39195917d6c4df6b94cbd1b0cc53b59abaa0636c", "Url": "https://api.github.com/repos/stuxo/REDAndroid", "Date": "2018-01-26T01:39:47Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { imageInMemory = org.apache.commons.io.IOUtils.toByteArray(inputStream); } catch (java.io.IOException ex) { org.sleuthkit.autopsy.experimental.objectDetection.ObjectDetectectionFileIngestModule.logger.log(java.util.logging.Level.WARNING, (\"Unable to perform object detection on \" + (file.getName())), ex); return IngestModule.ProcessResult.ERROR; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1678/buggy-version/Experimental.src.org.sleuthkit.autopsy.experimental.objectDetection.ObjectDetectectionFileIngestModule.java", "BodyUseAPI": ["org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)"], "Fixed commit": "68aba621466dbe100fcd49e54e8428a277dd6861", "Url": "https://api.github.com/repos/wschaeferB/autopsy", "Date": "2018-06-01T19:54:35Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String GeneralInfo = edu.ucsb.cs56.projects.utilities.YelpAPI.YelpAPI.RestaurantGeneralInfo(LocalRestaurants.get(i).id); java.lang.System.out.println(GeneralInfo); java.lang.String name = ((java.lang.String) (this.RestaurantSpecificInfo(GeneralInfo, \"name\"))); java.lang.System.out.println(name); java.lang.String phone = ((java.lang.String) (this.RestaurantSpecificInfo(GeneralInfo, \"display_phone\"))); java.lang.System.out.println(phone); java.lang.String address = \"\"; java.lang.String menu = ((java.lang.String) (this.RestaurantSpecificInfo(GeneralInfo, \"menu_provider\"))); java.lang.System.out.println(menu); org.json.simple.JSONObject locationAtr = ((org.json.simple.JSONObject) (this.RestaurantSpecificInfo(GeneralInfo, \"location\"))); java.lang.System.out.println(locationAtr.toString()); java.util.List<java.lang.String> DisplayAddress = ((java.util.List<java.lang.String>) (locationAtr.get(\"display_address\"))); for (int j = 0; j < (DisplayAddress.size()); j++) { address += DisplayAddress.get(j); if (j < ((DisplayAddress.size()) - 1)) address += \", \"; java.lang.System.out.println(DisplayAddress.get(j)); } if (address.equals(\"\")) address = \"unlisted\"; java.lang.String imageURL = ((java.lang.String) (this.RestaurantSpecificInfo(GeneralInfo, \"image_url\"))); edu.ucsb.cs56.projects.utilities.restaurant_list.Place placesRestaurant = null; java.util.ArrayList<edu.ucsb.cs56.projects.utilities.restaurant_list.Review> reviews = new java.util.ArrayList<edu.ucsb.cs56.projects.utilities.restaurant_list.Review>(); if (phone != null) { java.lang.String comparableYelpPhoneNumber = phone.replaceAll(\"\\\\D\", \"\").substring(1); for (edu.ucsb.cs56.projects.utilities.restaurant_list.Place restaurant : detailedRestaurantResults) { if ((restaurant.getPhoneNumber()) != null) { java.lang.String comparableGooglePlacesPhoneNumber = restaurant.getPhoneNumber().replaceAll(\"\\\\D\", \"\"); if (comparableYelpPhoneNumber.equals(comparableGooglePlacesPhoneNumber)) { placesRestaurant = restaurant; java.lang.System.out.println((\"NUMBER OF REVIEWS : \" + (restaurant.getReviews().size()))); reviews = new java.util.ArrayList<edu.ucsb.cs56.projects.utilities.restaurant_list.Review>(restaurant.getReviews()); edu.ucsb.cs56.projects.utilities.restaurant_list.Hours operatingHoursWeekly = restaurant.getHours(); java.util.List<edu.ucsb.cs56.projects.utilities.restaurant_list.Hours.Period> operatingHoursByDay = operatingHoursWeekly.getPeriods(); if ((operatingHoursByDay.size()) > 0) { edu.ucsb.cs56.projects.utilities.restaurant_list.Hours.Period dailyHours = operatingHoursByDay.get(0); java.lang.String nonCleanedOpenTime = dailyHours.getOpeningTime(); java.lang.String nonCleanedCloseTime = dailyHours.getClosingTime(); openTime = nonCleanedOpenTime.substring(0, 2); closeTime = nonCleanedCloseTime.substring(0, 2); } } } } } edu.ucsb.cs56.projects.utilities.restaurant_list.Restaurant restaurant; if (placesRestaurant != null) { restaurant = new edu.ucsb.cs56.projects.utilities.restaurant_list.Restaurant(openTime, closeTime, name, phone, address, cuisine, imageURL, menu, placesRestaurant); }else { restaurant = new edu.ucsb.cs56.projects.utilities.restaurant_list.Restaurant(openTime, closeTime, name, phone, address, cuisine, imageURL, menu); } this.addNew(restaurant); } catch (java.io.UnsupportedEncodingException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/9767/buggy-version/src.RestaurantList.Food.java", "BodyUseAPI": ["edu.ucsb.cs56.projects.utilities.restaurant_list.Place.getHours()", "java.util.ArrayList<edu.ucsb.cs56.projects.utilities.YelpAPI.NameAndID>.get(int)", "java.util.List<java.lang.String>.get(int)", "java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.size()", "java.io.PrintStream.println(java.lang.String)", "edu.ucsb.cs56.projects.utilities.restaurant_list.Food.RestaurantSpecificInfo(java.lang.String,java.lang.String)", "java.lang.String.replaceAll(java.lang.String,java.lang.String)", "restaurant.getReviews().size()", "edu.ucsb.cs56.projects.utilities.restaurant_list.Place.getReviews()", "edu.ucsb.cs56.projects.utilities.restaurant_list.Food.addNew(edu.ucsb.cs56.projects.utilities.restaurant_list.Restaurant)", "org.json.simple.JSONObject.get(java.lang.String)", "java.io.PrintStream.println((\"NUMBER OF REVIEWS : \" + (restaurant.getReviews().size())))", "Hours.Period.getClosingTime()", "restaurant.getPhoneNumber().replaceAll(java.lang.String,java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "edu.ucsb.cs56.projects.utilities.restaurant_list.Hours.getPeriods()", "java.lang.String.substring(int)", "java.util.List<java.lang.String>.get(int)", "java.util.List<Hours.Period>.size()", "edu.ucsb.cs56.projects.utilities.YelpAPI.YelpAPI.RestaurantGeneralInfo(LocalRestaurants.get(i).id)", "java.util.List<Hours.Period>.get(int)", "edu.ucsb.cs56.projects.utilities.restaurant_list.Food.RestaurantSpecificInfo(java.lang.String,java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "edu.ucsb.cs56.projects.utilities.restaurant_list.Place.getPhoneNumber()", "edu.ucsb.cs56.projects.utilities.restaurant_list.Food.RestaurantSpecificInfo(java.lang.String,java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)", "edu.ucsb.cs56.projects.utilities.restaurant_list.Food.RestaurantSpecificInfo(java.lang.String,java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "java.io.PrintStream.println(locationAtr.toString())", "java.lang.String.equals(java.lang.String)", "edu.ucsb.cs56.projects.utilities.restaurant_list.Place.getPhoneNumber()", "edu.ucsb.cs56.projects.utilities.restaurant_list.Food.RestaurantSpecificInfo(java.lang.String,java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "Hours.Period.getOpeningTime()", "org.json.simple.JSONObject.toString()", "edu.ucsb.cs56.projects.utilities.restaurant_list.Place.getReviews()"], "Fixed commit": "e1e5cd0aafac2cee9ac0481fabbc9d8b1baf577f", "Url": "https://api.github.com/repos/ucsb-cs56-projects/cs56-utilities-restaurant-list", "Date": "2018-02-23T02:45:27Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.reactContext.unregisterReceiver(mReceiver); } catch (java.lang.Exception e) { android.util.Log.e(studio.bb.rnlib.RNHceReaderModule.TAG, (\"Error unregisterReceiver: \" + (e.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1822/buggy-version/android.src.main.java.studio.bb.rnlib.RNHceReaderModule.java", "BodyUseAPI": ["com.facebook.react.bridge.ReactApplicationContext.unregisterReceiver(android.content.BroadcastReceiver)"], "Fixed commit": "09ababfaa9df3a303437951ac1e17e097e9b66bc", "Url": "https://api.github.com/repos/DoubeBlue/react-native-nfc-hce-reader", "Date": "2018-09-28T06:37:44Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { root = visitor.getQueryPlan(select); App.SQLInterpreter.writeToFile(index, root); } catch (java.lang.Exception e) { java.lang.System.err.println((\"Exception occurred during paring query\" + index)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1929/buggy-version/src.App.SQLInterpreter.java", "BodyUseAPI": ["App.SQLInterpreter.writeToFile(int,operators.Operator)", "visitors.BasicVisitor.getQueryPlan(net.sf.jsqlparser.statement.select.Select)"], "Fixed commit": "f10bdbc3e29cabb19e643b848d2b283361dd6536", "Url": "https://api.github.com/repos/yj373/CS5321_p1", "Date": "2018-10-02T07:38:31Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.content.Intent serviceIntent = new android.content.Intent(context, com.cpjd.robluscouter.sync.cloud.Service.class); if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.O)) context.startForegroundService(serviceIntent); else context.startService(serviceIntent); } catch (java.lang.Exception e) { android.util.Log.d(\"RSBS\", \"Failed to auto-start RobluScouter service.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7016/buggy-version/app.src.main.java.com.cpjd.robluscouter.utils.BootBroadcastReceiver.java", "BodyUseAPI": ["android.content.Context.startForegroundService(android.content.Intent)", "android.content.Context.startService(android.content.Intent)"], "Fixed commit": "8ea6a25a9fa98f1be828e74d4599335c7d136809", "Url": "https://api.github.com/repos/wdavies973/RobluScouter", "Date": "2018-10-03T18:04:33Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { BotUtils.CLIENT = new sx.blah.discord.api.ClientBuilder().withToken(args[0]).withRecommendedShardCount().build(); } catch (sx.blah.discord.util.DiscordException e) { java.lang.System.out.println(\"Invalid token, aborting...\"); java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6635/buggy-version/src.main.java.com.nickolasgupton.beepsky.Main.java", "BodyUseAPI": ["sx.blah.discord.api.ClientBuilder.withToken(java.lang.String)", "new sx.blah.discord.api.ClientBuilder().withToken(args[0]).withRecommendedShardCount().build()", "new sx.blah.discord.api.ClientBuilder().withToken(args[0]).withRecommendedShardCount()"], "Fixed commit": "77701d8eff2d34a27f1e5998e3d2478b338bb50d", "Url": "https://api.github.com/repos/CorruptComputer/Officer-Beepsky", "Date": "2018-04-30T00:34:39Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mdx = new uk.bl.wa.hadoop.mapreduce.mdx.MDX(values.next().toString()); } catch (org.json.JSONException e) { e.printStackTrace(); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2838/buggy-version/warc-nlp.src.main.java.uk.bl.wa.hadoop.mapreduce.nlp.Word2VecReducer.java", "BodyUseAPI": ["values.next().toString()", "java.util.Iterator<org.apache.hadoop.io.Text>.next()"], "Fixed commit": "f17a6941e833690eb79ed59f7a47f5e4e875785f", "Url": "https://api.github.com/repos/netarchivesuite/webarchive-discovery", "Date": "2018-10-16T20:56:49Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { rmdxw.setRecordType(\"reduplicated\"); } catch (org.json.JSONException e) { e.printStackTrace(); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2838/buggy-version/warc-nlp.src.main.java.uk.bl.wa.hadoop.mapreduce.nlp.Word2VecReducer.java", "BodyUseAPI": ["uk.bl.wa.hadoop.mapreduce.mdx.MDX.setRecordType(java.lang.String)"], "Fixed commit": "f17a6941e833690eb79ed59f7a47f5e4e875785f", "Url": "https://api.github.com/repos/netarchivesuite/webarchive-discovery", "Date": "2018-10-16T20:56:49Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mdx = new uk.bl.wa.hadoop.mapreduce.mdx.MDX(solr.toString()); } catch (org.json.JSONException e) { e.printStackTrace(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2838/buggy-version/warc-nlp.src.main.java.uk.bl.wa.hadoop.mapreduce.nlp.WARCSentenceMapper.java", "BodyUseAPI": ["uk.bl.wa.solr.SolrRecord.toString()"], "Fixed commit": "f17a6941e833690eb79ed59f7a47f5e4e875785f", "Url": "https://api.github.com/repos/netarchivesuite/webarchive-discovery", "Date": "2018-10-16T20:56:49Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.alibaba.otter.canal.parse.driver.mysql.packets.server.ResultSetPacket packet = connection.query((\"show create table \" + (getFullName(schema, table)))); if ((packet.getFieldValues().size()) > 1) { createDDL = packet.getFieldValues().get(1); tableMetaFromDB.setFields(com.alibaba.otter.canal.parse.inbound.mysql.dbsync.TableMetaCache.parseTableMeta(schema, table, packet)); } } catch (java.lang.Throwable e) { try { connection.reconnect(); com.alibaba.otter.canal.parse.driver.mysql.packets.server.ResultSetPacket packet = connection.query((\"show create table \" + (getFullName(schema, table)))); if ((packet.getFieldValues().size()) > 1) { createDDL = packet.getFieldValues().get(1); tableMetaFromDB.setFields(com.alibaba.otter.canal.parse.inbound.mysql.dbsync.TableMetaCache.parseTableMeta(schema, table, packet)); } } catch (java.io.IOException e1) { if (e.getMessage().contains(\"errorNumber=1146\")) { com.alibaba.otter.canal.parse.inbound.mysql.tsdb.DatabaseTableMeta.logger.error((((\"table not exist in db , pls check :\" + (getFullName(schema, table))) + \" , mem : \") + tableMetaFromMem)); return false; } throw new com.alibaba.otter.canal.parse.exception.CanalParseException(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/9029/buggy-version/parse.src.main.java.com.alibaba.otter.canal.parse.inbound.mysql.tsdb.DatabaseTableMeta.java", "BodyUseAPI": ["com.alibaba.otter.canal.parse.driver.mysql.packets.server.ResultSetPacket.getFieldValues()", "packet.getFieldValues().get(int)", "com.alibaba.otter.canal.parse.inbound.mysql.MysqlConnection.query(java.lang.String)", "com.alibaba.otter.canal.parse.inbound.TableMeta.setFields(com.alibaba.otter.canal.parse.inbound.mysql.dbsync.TableMetaCache.parseTableMeta(schema, table, packet))", "com.alibaba.otter.canal.parse.inbound.mysql.dbsync.TableMetaCache.parseTableMeta(java.lang.String,java.lang.String,com.alibaba.otter.canal.parse.driver.mysql.packets.server.ResultSetPacket)", "com.alibaba.otter.canal.parse.driver.mysql.packets.server.ResultSetPacket.getFieldValues()", "packet.getFieldValues().size()", "com.alibaba.otter.canal.parse.inbound.mysql.tsdb.DatabaseTableMeta.getFullName(java.lang.String,java.lang.String)"], "Fixed commit": "3efd589cb169f8f5f70c856427a905cda8c7ee57", "Url": "https://api.github.com/repos/wwjiang007/canal", "Date": "2018-07-16T14:45:16Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { clientSocket.close(); java.lang.System.out.println(\"Helloooooooo\"); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2245/buggy-version/src.main.java.ThreadServer.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.net.Socket.close()"], "Fixed commit": "6866c881e9ab58f609a1da2fc94693785ff448e6", "Url": "https://api.github.com/repos/Ryan-Jiang-MYOB/JavaServerRedesigned", "Date": "2018-03-23T05:58:52Z"},
{"Line": "=>614", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(1000); } catch (java.lang.InterruptedException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2913/buggy-version/Application.src.main.java.com.example.android.bluetoothlegatt.CalibrationActivity.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "c481942e163e6887605e8fb229d89b53a65fa218", "Url": "https://api.github.com/repos/equipohar/Training-Application", "Date": "2018-03-13T13:36:26Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { retriever = new android.media.MediaMetadataRetriever(); retriever.setDataSource(song.filePath); } catch (java.lang.Exception e) { e.printStackTrace(); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2694/buggy-version/app.src.main.java.buddybox.io.MediaInfoRetriever.java", "BodyUseAPI": ["android.media.MediaMetadataRetriever.setDataSource(song.filePath)"], "Fixed commit": "f00c243827f9082940eafb45148942f64a6a96a5", "Url": "https://api.github.com/repos/sovteam/buddybox", "Date": "2018-03-07T18:25:05Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.System.out.println(\"Input is closing\"); input.close(); java.lang.System.out.println(\"Output is closing\"); output.close(); java.lang.System.out.println(\"Socket is closing\"); socket.close(); return; } catch (java.io.IOException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1341/buggy-version/src.Server.ClientThread.java", "BodyUseAPI": ["java.io.DataOutputStream.close()", "java.io.PrintStream.println(java.lang.String)", "java.io.DataInputStream.close()", "java.net.Socket.close()", "java.io.PrintStream.println(java.lang.String)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "912019603392bdd490fe2c7f42fd8ab27c1e7c3b", "Url": "https://api.github.com/repos/DefaultV/PCSS2018---TheRealGroup1-Server", "Date": "2018-10-12T12:15:57Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.System.out.println(\"Input is closing\"); input.close(); java.lang.System.out.println(\"Output is closing\"); output.close(); java.lang.System.out.println(\"Socket is closing\"); socket.close(); java.lang.Thread.currentThread().interrupt(); } catch (java.io.IOException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1341/buggy-version/src.Server.ClientThread.java", "BodyUseAPI": ["java.io.DataInputStream.close()", "java.lang.Thread.currentThread()", "java.io.DataOutputStream.close()", "java.io.PrintStream.println(java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "java.net.Socket.close()", "java.io.PrintStream.println(java.lang.String)", "java.lang.Thread.interrupt()"], "Fixed commit": "912019603392bdd490fe2c7f42fd8ab27c1e7c3b", "Url": "https://api.github.com/repos/DefaultV/PCSS2018---TheRealGroup1-Server", "Date": "2018-10-12T12:15:57Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { userIdList.add(org.openbase.bco.registry.unit.core.plugin.UnitUserCreationPlugin.findUser(message.getId(), userRegistry).getId()); } catch (org.openbase.jul.exception.NotAvailableException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7198/buggy-version/unit-registry.core.src.main.java.org.openbase.bco.registry.unit.core.consistency.authorizationgroup.AuthorizationGroupClassGroupConsistencyHandler.java", "BodyUseAPI": ["org.openbase.bco.registry.unit.core.plugin.UnitUserCreationPlugin.findUser(message.getId(), userRegistry).getId()", "org.openbase.bco.registry.unit.core.plugin.UnitUserCreationPlugin.findUser(message.getId(),org.openbase.jul.storage.registry.ProtoBufRegistry<java.lang.String, rst.domotic.unit.UnitConfigType.UnitConfig, rst.domotic.unit.UnitConfigType.UnitConfig.Builder>)", "rst.domotic.unit.UnitConfigType.UnitConfig.getId()", "java.util.List<java.lang.String>.add(org.openbase.bco.registry.unit.core.plugin.UnitUserCreationPlugin.findUser(message.getId(), userRegistry).getId())"], "Fixed commit": "8a68c2461679e9137b4898912e466bc21eb45aac", "Url": "https://api.github.com/repos/openbase/bco.registry", "Date": "2018-08-01T13:29:00Z"},
{"Line": "=>448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.util.Date validToDate = formatter.parse(eionet.rod.util.RODUtil.str2Date(obligation.getValidTo())); parameters.put(\"VALID_TO\", validToDate); } catch (java.text.ParseException e) { parameters.put(\"VALID_TO\", null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7859/buggy-version/src.main.java.eionet.rod.dao.ObligationsDaoImpl.java", "BodyUseAPI": ["java.text.SimpleDateFormat.parse(eionet.rod.util.RODUtil.str2Date(obligation.getValidTo()))", "eionet.rod.util.RODUtil.str2Date(obligation.getValidTo())", "eionet.rod.model.Obligations.getValidTo()", "java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.util.Date)"], "Fixed commit": "febb3ffd0e5c2c987a91c431067cc9c33ce939fa", "Url": "https://api.github.com/repos/eea/eionet.rod3", "Date": "2018-02-10T10:07:11Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { currentVideoTime = youTubePlayer.getCurrentTimeMillis(); youTubePlayer.release(); isMinimized = true; } catch (java.lang.IllegalStateException exception) { isMinimized = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7203/buggy-version/app.src.main.java.com.wordpress.dnvsoft.android.shenryyr.VideoActivity.java", "BodyUseAPI": ["com.google.android.youtube.player.YouTubePlayer.release()", "com.google.android.youtube.player.YouTubePlayer.getCurrentTimeMillis()"], "Fixed commit": "7a98c2ec3cec1eeb6dc93a452171ba0fd0f1975a", "Url": "https://api.github.com/repos/jdinkov/Shenryyr", "Date": "2018-04-17T17:52:24Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String jwt = com.datapipe.jenkins.vault.credentials.VaultGCPCredential.retrieveGoogleJWT(); } catch (java.net.URISyntaxException e) { throw new com.datapipe.jenkins.vault.exception.VaultPluginException(\"could not get JWT from GCP metdata\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2643/buggy-version/src.main.java.com.datapipe.jenkins.vault.credentials.VaultGCPCredential.java", "BodyUseAPI": ["com.datapipe.jenkins.vault.credentials.VaultGCPCredential.retrieveGoogleJWT()"], "Fixed commit": "3faa6948ebc7b51c3bab4917dc91d429e6954770", "Url": "https://api.github.com/repos/KohlsTechnology/hashicorp-vault-plugin", "Date": "2018-07-17T04:57:22Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.bumptech.glide.Glide.with(context).load(commit.getAuthor().getAvatarUrl()).into(holder.commitAvatarImageView); } catch (java.lang.NullPointerException npe) { android.content.Context context = holder.commitAvatarImageView.getContext(); holder.commitAvatarImageView.setImageDrawable(android.support.v4.content.ContextCompat.getDrawable(context, R.drawable.ic_github)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9500/buggy-version/app.src.main.java.mb00.android.codehub.ui.adapter.CommitAdapter.java", "BodyUseAPI": ["com.bumptech.glide.Glide.with(context).load(commit.getAuthor().getAvatarUrl())", "mb00.android.codehub.api.model.Commit.getAuthor()", "commit.getAuthor().getAvatarUrl()", "com.bumptech.glide.Glide.with(android.content.Context)", "com.bumptech.glide.Glide.with(context).load(commit.getAuthor().getAvatarUrl()).into(android.widget.ImageView)"], "Fixed commit": "1106e3561276cd877a1c18adad0c2e26b5dd4afd", "Url": "https://api.github.com/repos/MB00/CodeHub", "Date": "2018-02-27T04:11:39Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { retValue = com.tn.wechat.rest.HttpsUtil.httpsRequestToString(templateMessageUrl, \"POST\", body.toString()); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/391/buggy-version/src.main.java.com.tn.wechat.util.WechatUtils.java", "BodyUseAPI": ["com.tn.wechat.rest.HttpsUtil.httpsRequestToString(java.lang.String,java.lang.String,body.toString())", "org.json.JSONObject.toString()"], "Fixed commit": "991435a668f9d9e064968f1d4c189b4dc904a6ca", "Url": "https://api.github.com/repos/todaynowork/wechat", "Date": "2018-01-25T13:55:24Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.Set<java.lang.String> addressSet = io.nuls.kernel.script.SignatureUtil.getAddressFromTX(this); if (addressSet.contains(io.nuls.kernel.utils.AddressTool.getStringAddressByBytes(address))) { return \"-\" + (to1.getNa().add(getFee()).toCoinString()); }else { return \"0\"; } } catch (io.nuls.kernel.exception.NulsException e) { io.nuls.core.tools.log.Log.error(e); return \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8369/buggy-version/contract-module.contract.src.main.java.io.nuls.contract.entity.tx.CallContractTransaction.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.contains(io.nuls.kernel.utils.AddressTool.getStringAddressByBytes(address))", "io.nuls.kernel.utils.AddressTool.getStringAddressByBytes(byte[])", "to1.getNa().add(io.nuls.kernel.model.Na)", "io.nuls.kernel.script.SignatureUtil.getAddressFromTX(io.nuls.contract.entity.tx.CallContractTransaction)", "io.nuls.kernel.model.Coin.getNa()", "io.nuls.contract.entity.tx.CallContractTransaction.getFee()", "to1.getNa().add(getFee()).toCoinString()"], "Fixed commit": "bb3ded93e79b0208f999f503b8f2fd7e33e1c034", "Url": "https://api.github.com/repos/nuls-io/nuls", "Date": "2018-10-29T15:15:03Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { steps = reader.loadSteps(getBuildIdentifier().getBranchName(), getBuildIdentifier().getBuildName(), usecase.getName(), scenario.getName()); } catch (org.scenarioo.api.exception.ResourceNotFoundException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/7842/buggy-version/scenarioo-server.src.main.java.org.scenarioo.business.aggregator.ScenarioDocuAggregator.java", "BodyUseAPI": ["org.scenarioo.model.docu.entities.Scenario.getName()", "org.scenarioo.rest.base.BuildIdentifier.getBuildName()", "org.scenarioo.rest.base.BuildIdentifier.getBranchName()", "org.scenarioo.model.docu.entities.UseCase.getName()", "org.scenarioo.api.ScenarioDocuReader.loadSteps(getBuildIdentifier().getBranchName(),getBuildIdentifier().getBuildName(),usecase.getName(),scenario.getName())", "org.scenarioo.business.aggregator.ScenarioDocuAggregator.getBuildIdentifier()", "org.scenarioo.business.aggregator.ScenarioDocuAggregator.getBuildIdentifier()"], "Fixed commit": "1acdf111e2f3e888324e50fe828e16873bae72b6", "Url": "https://api.github.com/repos/scenarioo/scenarioo", "Date": "2018-05-10T18:06:33Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return getResults().getJSONObject(index).getInt(name); } catch (java.lang.NumberFormatException e) { android.util.Log.d(\"number format\", \"Exception\", e); return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/652/buggy-version/UniLife-v1.app.src.main.java.integratedproject.unilife_v1.JSONParser.java", "BodyUseAPI": ["org.json.JSONArray.getJSONObject(int)", "getResults().getJSONObject(index).getInt(java.lang.String)", "integratedproject.unilife_v1.JSONParser.getResults()"], "Fixed commit": "60d760620609244d3d614839bb1ddc5d4b085c7a", "Url": "https://api.github.com/repos/xkyf1akez/UniLife", "Date": "2018-03-29T14:50:48Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return java.lang.Integer.parseInt(java.util.Arrays.asList(str.trim().split(\" \")).get(mobStackerConfig.indexLocation)); } catch (java.lang.NumberFormatException e) { return me.jet315.stacker.manager.StackEntity.INVALID_STACK; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/742/buggy-version/src.me.jet315.stacker.manager.StackEntity.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.trim()", "java.util.Arrays.asList(java.lang.String[])", "java.lang.Integer.parseInt(java.lang.String)", "java.util.List<java.lang.String>.get(mobStackerConfig.indexLocation)"], "Fixed commit": "9738ef47194b499a595278f38ab1c9f25196dfb1", "Url": "https://api.github.com/repos/Jet315/MobStacker", "Date": "2018-03-20T19:08:03Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.hibernate.search.v6poc.backend.elasticsearch.gson.impl.GsonProvider dialectSpecificGsonProvider = org.hibernate.search.v6poc.backend.elasticsearch.gson.impl.DefaultGsonProvider.create(this::createES5GsonBuilderBase, logPrettyPrinting); client.init(dialectSpecificGsonProvider); org.hibernate.search.v6poc.backend.elasticsearch.work.impl.ElasticsearchWorkFactory workFactory = new org.hibernate.search.v6poc.backend.elasticsearch.work.impl.StubElasticsearchWorkFactory(dialectSpecificGsonProvider); return new org.hibernate.search.v6poc.backend.elasticsearch.impl.ElasticsearchBackendImpl(client, name, workFactory, getMultiTenancyStrategy(name, propertySource)); } catch (java.lang.RuntimeException e) { new org.hibernate.search.v6poc.util.impl.common.SuppressingCloser(e).push(ElasticsearchClientImplementor::close, client); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/7458/buggy-version/backend-elasticsearch.src.main.java.org.hibernate.search.v6poc.backend.elasticsearch.impl.ElasticsearchBackendFactory.java", "BodyUseAPI": ["org.hibernate.search.v6poc.backend.elasticsearch.client.impl.ElasticsearchClientImplementor.init(org.hibernate.search.v6poc.backend.elasticsearch.gson.impl.GsonProvider)", "org.hibernate.search.v6poc.backend.elasticsearch.gson.impl.DefaultGsonProvider.create(this::createES5GsonBuilderBase,boolean)", "org.hibernate.search.v6poc.backend.elasticsearch.impl.ElasticsearchBackendFactory.getMultiTenancyStrategy(java.lang.String,org.hibernate.search.v6poc.cfg.ConfigurationPropertySource)"], "Fixed commit": "19e5ffd134dc6a0a2ba6729776db077cd28986c3", "Url": "https://api.github.com/repos/yrodiere/hibernate-search-6-poc", "Date": "2018-05-22T11:55:26Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.userProfileList = bll.searchUserProfileList(toSearchUserProfile); java.lang.System.out.println((\"Individuals list size :: \" + (this.userProfileList.size()))); } catch (java.lang.Exception e) { com.baseerah.utils.MessageUtils.error(e.getMessage()); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4696/buggy-version/src.com.baseerah.ui.beans.search.SearchBean.java", "BodyUseAPI": ["java.io.PrintStream.println((\"Individuals list size :: \" + (this.userProfileList.size())))", "com.baseerah.bll.SearchBll.searchUserProfileList(com.baseerah.dal.dao.UserProfile)", "java.util.List<com.baseerah.dal.dao.UserProfile>.size()"], "Fixed commit": "19333c80d36b55f90d3fb1f21f4d726c5782ede1", "Url": "https://api.github.com/repos/azeemirshad/baseerah", "Date": "2018-05-22T07:35:14Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(200); } catch (final java.lang.InterruptedException ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2088/buggy-version/src.com.valkryst.VTerminal.Screen.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "1dad01e579712f68b3bfbfab4e3765935e6f2464", "Url": "https://api.github.com/repos/Valkryst/VTerminal", "Date": "2018-08-08T14:42:23Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(200); } catch (final java.lang.InterruptedException ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2088/buggy-version/src.com.valkryst.VTerminal.Screen.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "1dad01e579712f68b3bfbfab4e3765935e6f2464", "Url": "https://api.github.com/repos/Valkryst/VTerminal", "Date": "2018-08-08T14:42:23Z"},
{"Line": "=>467", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.writeMemory(br.org.certi.jocd.coresight.CortexM.NVIC_AIRCR, ((br.org.certi.jocd.coresight.CortexM.NVIC_AIRCR_VECTKEY) | (br.org.certi.jocd.coresight.CortexM.NVIC_AIRCR_SYSRESETREQ)), null); this.dp.flush(); } catch (java.lang.Exception e) { this.dp.flush(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8560/buggy-version/jocd.src.br.org.certi.jocd.coresight.CortexM.java", "BodyUseAPI": ["br.org.certi.jocd.coresight.CortexM.writeMemory(long,long,<nulltype>)", "br.org.certi.jocd.coresight.DebugPort.flush()"], "Fixed commit": "2e5366b95238fc33a59c3f408fbbccf575172fbc", "Url": "https://api.github.com/repos/fundacaocerti/jOCD", "Date": "2018-06-05T18:13:01Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { temperature = ((micdoodle8.mods.galacticraft.api.prefab.world.gen.WorldProviderSpace) (temp)).getThermalLevelModifier(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/978/buggy-version/src.main.java.com.mjr.extraplanets.client.gui.screen.CustomCelestialSelection.java", "BodyUseAPI": ["net.minecraft.world.WorldProvider.getThermalLevelModifier()"], "Fixed commit": "c59712250778518100989897f356ff0dfc7b2c40", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-01-04T19:50:11Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((temp != null) && (!((this.selectedBody) instanceof micdoodle8.mods.galacticraft.api.galaxies.Satellite))) breathable = ((micdoodle8.mods.galacticraft.api.prefab.world.gen.WorldProviderSpace) (temp)).hasBreathableAtmosphere(); if (this.selectedBody.getUnlocalizedName().contains(\"overworld\")) breathable = true; } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/978/buggy-version/src.main.java.com.mjr.extraplanets.client.gui.screen.CustomCelestialSelection.java", "BodyUseAPI": ["net.minecraft.world.WorldProvider.hasBreathableAtmosphere()", "this.selectedBody.getUnlocalizedName()", "this.selectedBody.getUnlocalizedName().contains(java.lang.String)"], "Fixed commit": "c59712250778518100989897f356ff0dfc7b2c40", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-01-04T19:50:11Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { currentPoemStringL.appendString(\" \"); currentPoemStringR.appendString(\" \"); } catch (io.github.skepter.poemcreator.PoemStringLengthException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/1191/buggy-version/PoemCreator.src.io.github.skepter.poemcreator.PoemBuilder.java", "BodyUseAPI": ["io.github.skepter.poemcreator.PoemString.appendString(java.lang.String)", "io.github.skepter.poemcreator.PoemString.appendString(java.lang.String)"], "Fixed commit": "173e7858ba369a1735f24a8799b7c546156414fd", "Url": "https://api.github.com/repos/JorelAli/PoemCreator", "Date": "2018-02-18T13:54:29Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { startService(new android.content.Intent(this, ca.farrelltonsolar.classic.PVOutputService.class)); } catch (java.lang.Exception ex) { android.util.Log.w(getClass().getName(), \"Failed to start PVOutput service\"); android.widget.Toast.makeText(getApplicationContext(), \"Failed to start PVOutput service\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6584/buggy-version/app.src.main.java.ca.farrelltonsolar.classic.MonitorApplication.java", "BodyUseAPI": ["ca.farrelltonsolar.classic.MonitorApplication.startService(android.content.Intent)"], "Fixed commit": "55b1f1586538d326a2d1deb50188c5e390d68231", "Url": "https://api.github.com/repos/graham22/Classic", "Date": "2018-10-12T16:05:22Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.reflect.Constructor<T> constructor = clazz.getDeclaredConstructor(java.lang.String.class, java.lang.Boolean.TYPE); constructor.setAccessible(true); return constructor.newInstance(value, true); } catch (java.lang.NoSuchMethodException e) { java.lang.reflect.Constructor<T> constructor = clazz.getDeclaredConstructor(java.lang.String.class); constructor.setAccessible(true); return constructor.newInstance(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9006/buggy-version/src.main.java.ezvcard.parameter.VCardParameterCaseClasses.java", "BodyUseAPI": ["java.lang.reflect.Constructor<T>.newInstance(java.lang.String,boolean)", "ezvcard.parameter.VCardParameterCaseClasses.getDeclaredConstructor(java.lang.Class,java.lang.Class<java.lang.Boolean>)", "java.lang.reflect.Constructor<T>.setAccessible(boolean)"], "Fixed commit": "42c61a362c869978ff6316f106f72367991bc8e1", "Url": "https://api.github.com/repos/izicomms/ez-vcard", "Date": "2018-06-10T08:53:48Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.bartuart.android.gangsterkill.GangsterKillGame.mediaPlayer.prepare(); } catch (java.io.IOException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2206/buggy-version/app.src.main.java.com.bartuart.android.gangsterkill.GangsterKillGame.java", "BodyUseAPI": ["android.media.MediaPlayer.prepare()"], "Fixed commit": "5d07340c4555fe3777a4f95f0b96b0436c4b451b", "Url": "https://api.github.com/repos/bartuart/GangsterKill", "Date": "2018-10-12T16:35:06Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { token = lexer.getToken(); } catch (io.github.wysohn.triggerreactor.core.script.lexer.LexerException lex) { io.github.wysohn.triggerreactor.core.script.parser.ParserException pex = new io.github.wysohn.triggerreactor.core.script.parser.ParserException((\"Error occured while processing a token after \" + (token))); pex.initCause(lex); throw pex; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/3637/buggy-version/src.main.java.io.github.wysohn.triggerreactor.core.script.parser.Parser.java", "BodyUseAPI": ["io.github.wysohn.triggerreactor.core.script.lexer.Lexer.getToken()"], "Fixed commit": "d55decb2e46a6fed52889eba24c3c91b9ba7cb24", "Url": "https://api.github.com/repos/wysohn/TriggerReactor", "Date": "2018-08-24T03:39:53Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { promptToSave(); } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6782/buggy-version/FinalProject.DataViLiJ.src.actions.AppActions.java", "BodyUseAPI": ["actions.AppActions.promptToSave()"], "Fixed commit": "b4aa244bc1cd61e63c54a4d2dfc6e920a7775233", "Url": "https://api.github.com/repos/TanWeixin98/Algorithm-Visualizer", "Date": "2018-04-09T04:43:01Z"},
{"Line": "=>1368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.highLowContainer.deserialize(in); } catch (org.roaringbitmap.InvalidRoaringFormat cookie) { throw cookie.toIOException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/1110/buggy-version/roaringbitmap.src.main.java.org.roaringbitmap.RoaringBitmap.java", "BodyUseAPI": ["org.roaringbitmap.RoaringArray.deserialize(java.io.DataInput)"], "Fixed commit": "50515ad921d2c2c2232d7b8a5ffff7af36218696", "Url": "https://api.github.com/repos/ppiotrow/RoaringBitmap", "Date": "2018-04-09T17:41:33Z"},
{"Line": "=>899", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { getMappeableRoaringArray().deserialize(in); } catch (org.roaringbitmap.InvalidRoaringFormat cookie) { throw cookie.toIOException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/1110/buggy-version/roaringbitmap.src.main.java.org.roaringbitmap.buffer.MutableRoaringBitmap.java", "BodyUseAPI": ["org.roaringbitmap.buffer.MutableRoaringBitmap.getMappeableRoaringArray()", "org.roaringbitmap.buffer.MutableRoaringArray.deserialize(java.io.DataInput)"], "Fixed commit": "50515ad921d2c2c2232d7b8a5ffff7af36218696", "Url": "https://api.github.com/repos/ppiotrow/RoaringBitmap", "Date": "2018-04-09T17:41:33Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { chemin = java.nio.file.Paths.get(\"commandes.txt\"); } catch (java.nio.file.InvalidPathException errNomFichier) { java.lang.System.out.println(\"\\nUne erreur au niveau du nom du fichier a \\ufffdt\\ufffd attrap\\ufffd\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/85/buggy-version/main.Facture.java", "BodyUseAPI": ["java.nio.file.Paths.get(java.lang.String)"], "Fixed commit": "e0efb48c7887bace22515aa7a01e78d52a5493eb", "Url": "https://api.github.com/repos/ChaseYUL99/Projet1_3-4B4", "Date": "2018-03-22T21:41:15Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(2000); } catch (java.lang.InterruptedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/290/buggy-version/Player.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "9ffa5702f3f557c4c85afc9cf16c081aea27b325", "Url": "https://api.github.com/repos/MCMZ5/endlessrunningtcf", "Date": "2018-01-02T20:41:19Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { image = message.getUser().fetchIfNeeded().getParseFile(\"image\"); } catch (com.parse.ParseException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2132/buggy-version/app.src.main.java.com.example.cassandrakane.goalz.adapters.ChatAdapter.java", "BodyUseAPI": ["message.getUser().fetchIfNeeded()", "message.getUser().fetchIfNeeded().getParseFile(java.lang.String)", "com.example.cassandrakane.goalz.models.Message.getUser()"], "Fixed commit": "1185617c5b3b3e14a25e42e7c9eba6e19468f0b5", "Url": "https://api.github.com/repos/FBX-2018-TeamTBD/goals", "Date": "2018-08-06T21:13:42Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.currentQuote = stockQuoteSource.getCurrentQuote(); } catch (java.lang.Exception e) { this.currentQuote = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/7020/buggy-version/src.StockQuoteAnalyzer.java", "BodyUseAPI": ["StockQuoteGeneratorInterface.getCurrentQuote()"], "Fixed commit": "ede002f5cf99b6dbb05e7e83c2414cd1295e44d2", "Url": "https://api.github.com/repos/se2832/ay18-lab-07-larsonme-and-langdk", "Date": "2018-04-24T17:13:42Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String response = serverInteraction.get(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } catch (java.util.concurrent.ExecutionException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2015/buggy-version/app.src.main.java.popovvad.findme.MapActivity.java", "BodyUseAPI": ["popovvad.findme.ServerInteraction.get()"], "Fixed commit": "39e721355c6fbadc580052983a451c3e61d97121", "Url": "https://api.github.com/repos/PopovVA/FindMe", "Date": "2018-09-04T14:40:30Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.concurrent.TimeUnit.SECONDS.sleep(1); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/5365/buggy-version/src.Main.java", "BodyUseAPI": ["java.util.concurrent.TimeUnit.sleep(int)"], "Fixed commit": "f976686478c3257b7fda458e0c4a70a22a634281", "Url": "https://api.github.com/repos/WarPG/WarPG-Reeks", "Date": "2018-07-21T18:20:11Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { arena.placeTetromino(tetromino, currTetrY, currTetrX); } finally { newNextTetromino(); arena.clearLines(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2830/buggy-version/server.src.at.dropical.server.game.OnePlayer.java", "BodyUseAPI": ["at.dropical.server.gamefield.TetrisArena.placeTetromino(at.dropical.server.gamefield.Tetromino,int,int)"], "Fixed commit": "aa744eff4b2cf892501c49f7f3fcbb1d25fa86b4", "Url": "https://api.github.com/repos/CrazyChaoz/Dropical", "Date": "2018-05-14T06:24:36Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { super.setSeedInternal(seed); } finally { advancementLock.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8314/buggy-version/betterrandom.src.main.java.io.github.pr0methean.betterrandom.prng.Pcg128Random.java", "BodyUseAPI": ["io.github.pr0methean.betterrandom.prng.BaseRandom.setSeedInternal(byte[])"], "Fixed commit": "31579c9170c2c581f676b43d1794ae174daadd52", "Url": "https://api.github.com/repos/Pr0methean/BetterRandom", "Date": "2018-09-08T04:30:45Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mMediaPlayer = mediaPlayer; playMusic(playEnglishAudio.getCurrSong()); } catch (java.lang.Exception e) { com.blankj.utilcode.util.LogUtils.e(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6700/buggy-version/app.src.main.java.com.yc.english.speak.presenter.LyricViewPresenter.java", "BodyUseAPI": ["com.yc.english.speak.utils.PlayEnglishAudio.getCurrSong()", "com.yc.english.speak.presenter.LyricViewPresenter.playMusic(playEnglishAudio.getCurrSong())"], "Fixed commit": "087c71344ff80d20b5c6f6a00ea2e74db9f7e832", "Url": "https://api.github.com/repos/feiyouAndroidTeam/english", "Date": "2018-02-28T02:21:50Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (((_challengeFileList) != null) || ((_challengeFileList) != null)) { for (int i = 0; i < (_challengeFileList.size()); i++) { java.lang.String name = _challengeList.get(i); if (name != null) { Model.Challenges.getInstance().deleteChallenge(name, _challengeFileList.get(i)); } } } } catch (java.lang.Exception e) { java.lang.System.out.println(\"error\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6552/buggy-version/src.Model.ChallengeSession.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.get(int)", "Model.Challenges.getInstance()", "java.util.List<java.lang.String>.get(int)", "Model.Challenges.getInstance().deleteChallenge(java.lang.String,java.lang.String)"], "Fixed commit": "6ac61326feda7b0c9284bc118614726ef387219f", "Url": "https://api.github.com/repos/206TEAM/Project", "Date": "2018-10-20T07:24:33Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return jsonFactory.looseDeserialize(defaultDDMFormFieldParameterValue, java.lang.String[].class); } catch (java.lang.Exception e) { return com.liferay.portal.kernel.util.StringUtil.split(defaultDDMFormFieldParameterValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5381/buggy-version/modules.apps.forms-and-workflow.dynamic-data-mapping.dynamic-data-mapping-type-checkbox-multiple.src.main.java.com.liferay.dynamic.data.mapping.type.checkbox.multiple.internal.CheckboxMultipleDDMFormFieldValueRequestParameterRetriever.java", "BodyUseAPI": ["com.liferay.portal.kernel.json.JSONFactory.looseDeserialize(java.lang.String,java.lang.Class)"], "Fixed commit": "7a30cc1e0cd468cbe4765dba08cae11b54c288fc", "Url": "https://api.github.com/repos/brandizzi/liferay-portal", "Date": "2018-02-20T22:56:39Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { holder.mImgPlay.setVisibility(View.INVISIBLE); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5439/buggy-version/app.src.main.java.com.narmware.canvera.adapter.GridImageAdapter.java", "BodyUseAPI": ["android.widget.ImageView.setVisibility(View.INVISIBLE)"], "Fixed commit": "c30654596f60fc94083255adec2896aa87ab79e7", "Url": "https://api.github.com/repos/narmware/canvera", "Date": "2018-03-23T14:06:24Z"},
{"Line": "=>420", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { syncReturn = exec.executeBukalapak(UPDATE_PRICE_STOCK_URL, paramMap, \"PATCH\", accessToken); com.birumerah.deli.service.ProductService.logger.debug((\">>> syncReturn : \" + syncReturn)); } catch (org.springframework.web.client.HttpClientErrorException e) { response = e.getResponseBodyAsString(); responseMap = gson.fromJson(response, java.util.Map.class); } catch (org.springframework.web.client.HttpServerErrorException e) { response = e.getResponseBodyAsString(); responseMap = gson.fromJson(response, java.util.Map.class); } catch (java.lang.Exception e) { response = e.getMessage(); responseMap.put(\"error\", response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/4997/buggy-version/src.main.java.com.birumerah.deli.service.ProductService.java", "BodyUseAPI": ["com.birumerah.deli.helper.RestExecutor.executeBukalapak(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String)", "org.slf4j.Logger.debug(java.lang.String)"], "Fixed commit": "f4f96c5dc0a9ae73a729a1c1cf0f5d099f3b6ee3", "Url": "https://api.github.com/repos/kangwawan/dni-backend", "Date": "2018-09-21T10:34:34Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { report = new module7.Report(splitLine[7], splitLine[1], splitLine[15], splitLine[21]); } catch (java.lang.ArrayIndexOutOfBoundsException exception) { report = new module7.Report(splitLine[7], splitLine[1], splitLine[15], \"N/A\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/8063/buggy-version/src.module7.Main.java", "BodyUseAPI": [], "Fixed commit": "00e1529a55d253dcf683949db849909d0ef2550f", "Url": "https://api.github.com/repos/yixie1/CCSF_Adv_Java", "Date": "2018-10-17T05:47:32Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(2000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/7087/buggy-version/Raymond.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "b1fde88443d72dee06153c1ada0390653e34f7da", "Url": "https://api.github.com/repos/cboin/sid-raymond-algorithm", "Date": "2018-10-07T18:27:57Z"},
{"Line": "=>606", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { temperature = ((micdoodle8.mods.galacticraft.api.prefab.world.gen.WorldProviderSpace) (temp)).getThermalLevelModifier(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5997/buggy-version/src.main.java.com.mjr.extraplanets.client.gui.screen.CustomCelestialSelection.java", "BodyUseAPI": ["net.minecraft.world.WorldProvider.getThermalLevelModifier()"], "Fixed commit": "5401a53e1b423f20a972a5266c0d8d50b19899f0", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-01-04T19:40:07Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { service.wipeAllOneTimeOrders(); } catch (io.swagger.api.NotFoundException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/961/buggy-version/src.main.java.io.swagger.api.ExecuteApiController.java", "BodyUseAPI": ["io.swagger.services.OrderService.wipeAllOneTimeOrders()"], "Fixed commit": "8fb71faff19abebce5d6820545175f7eaef61276", "Url": "https://api.github.com/repos/markd315/CryptoPayroll-API", "Date": "2018-06-18T19:49:45Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { pauseRecognition(); } catch (java.lang.Exception ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/4368/buggy-version/app.src.main.java.com.helpaigrow.ExpOneActivity.java", "BodyUseAPI": ["com.helpaigrow.ExpOneActivity.pauseRecognition()"], "Fixed commit": "a3c29fd432a3c63a6de6a8a97232a28b3695f230", "Url": "https://api.github.com/repos/saffarizadeh/HelpAIGrow", "Date": "2018-08-02T18:39:37Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { music.play(); } catch (java.lang.Exception e) { com.bladecoder.engine.util.EngineLogger.error((\"Error Playing music: \" + s), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9442/buggy-version/blade-engine.src.com.bladecoder.engine.ui.CreditsScreen.java", "BodyUseAPI": ["com.badlogic.gdx.audio.Music.play()"], "Fixed commit": "d0101d3acbd7c03341248249717087810a37c52b", "Url": "https://api.github.com/repos/bladecoder/bladecoder-adventure-engine", "Date": "2018-01-25T11:28:55Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.apache.commons.io.IOUtils.copy(iis, fos); } catch (java.lang.Exception e) { throw new java.lang.RuntimeException(\"Error copying file\", e); } finally { fis.close(); fos.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9350/buggy-version/src.main.java.gov.ca.cwds.rest.util.jni.CmsPKCompressor.java", "BodyUseAPI": ["org.apache.commons.io.IOUtils.copy(java.io.InputStream,java.io.FileOutputStream)"], "Fixed commit": "5bd2f23c86827947f42192187786f0c47120cb67", "Url": "https://api.github.com/repos/ca-cwds/API", "Date": "2018-02-06T21:49:33Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.apache.commons.io.IOUtils.copy(fis, fos); } catch (java.lang.RuntimeException e) { throw new java.lang.RuntimeException(\"Unable to copy file\", e); } finally { fis.close(); fos.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9350/buggy-version/src.main.java.gov.ca.cwds.rest.util.jni.CmsPKCompressor.java", "BodyUseAPI": ["org.apache.commons.io.IOUtils.copy(java.io.FileInputStream,java.io.OutputStream)"], "Fixed commit": "5bd2f23c86827947f42192187786f0c47120cb67", "Url": "https://api.github.com/repos/ca-cwds/API", "Date": "2018-02-06T21:49:33Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { regressLineOrder = java.lang.Integer.parseInt(prefs.getString(\"regressionLineOrder\", \"1\")); } catch (java.lang.NumberFormatException e) { android.widget.Toast.makeText(getContext(), (((getString(R.string.error_value_required)) + \":\") + (e.getMessage())), Toast.LENGTH_LONG).show(); prefs.edit().putString(\"regressionLineOrder\", \"1\").commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/4492/buggy-version/android_app.app.src.main.java.com.health.openscale.gui.fragments.GraphFragment.java", "BodyUseAPI": ["java.lang.Integer.parseInt(prefs.getString(\"regressionLineOrder\", \"1\"))", "android.content.SharedPreferences.getString(java.lang.String,java.lang.String)"], "Fixed commit": "fd0b5e6f9b13bb7407af1df4e54ab4ceb0091f2f", "Url": "https://api.github.com/repos/erijo/openScale", "Date": "2018-07-18T18:30:38Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((currentParentSquare.getClass().getName().equals(\"SafetyEntrySquare\")) && ((color) == (((SafetyEntrySquare) (currentParentSquare)).getNextSafetySquare().getColor()))) { landingSquare = ((SafetyEntrySquare) (currentParentSquare)).getNextSafetySquare(); } for (int i = 1; i < numSpaces; i++) { if ((landingSquare.getClass().getName().equals(\"SafetyEntrySquare\")) && ((color) == (((SafetyEntrySquare) (landingSquare)).getNextSafetySquare().getColor()))) { landingSquare = ((SafetyEntrySquare) (landingSquare)).getNextSafetySquare(); }else { landingSquare = landingSquare.getImmediateNextSquare(); } } if ((landingSquare.isOccupied()) && ((landingSquare.getPawn().getColor()) == (color))) { throw new LandedOnSquareOccupiedByPlayersOwnPawnException(\"Cannot move on top of yourself\"); } } catch (java.lang.NullPointerException e) { throw new OvershotHomeException(\"Overshot home\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/141/buggy-version/Pawn.java", "BodyUseAPI": ["((SafetyEntrySquare) (currentParentSquare)).getNextSafetySquare().getColor()", "Square.getNextSafetySquare()", "currentParentSquare.getClass().getName().equals(java.lang.String)", "Square.getNextSafetySquare()", "Square.getClass()", "Square.getNextSafetySquare()", "Square.getClass()", "((SafetyEntrySquare) (landingSquare)).getNextSafetySquare().getColor()", "landingSquare.getPawn().getColor()", "landingSquare.getClass().getName().equals(java.lang.String)", "Square.getPawn()", "currentParentSquare.getClass().getName()", "Square.getNextSafetySquare()", "landingSquare.getClass().getName()", "Square.getImmediateNextSquare()", "Square.isOccupied()"], "Fixed commit": "d43ccb8412b12f409083e365ac39906d22627b09", "Url": "https://api.github.com/repos/SleekPanther/sorry-game", "Date": "2018-04-09T21:42:34Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((java.lang.Integer.parseInt(penaltyBuffer)) < 0) { int[] forcedList = new int[]{ }; commons.OutputWriter.writeFile(forcedList, 0, \"Invalid Penalty\"); java.lang.System.exit(0); } tooNearPenalties.add(java.lang.Integer.parseInt(penaltyBuffer)); } catch (java.lang.Exception e) { int[] forcedList = new int[]{ }; commons.OutputWriter.writeFile(forcedList, 0, \"Invalid Penalty\"); java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/7063/buggy-version/Java449Final.src.parse.FileParser.java", "BodyUseAPI": ["java.lang.System.exit(int)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.util.ArrayList<java.lang.Integer>.add(int)", "commons.OutputWriter.writeFile(int[],int,java.lang.String)"], "Fixed commit": "a9cd06e557d35eced713ee09012abdca9edf3050", "Url": "https://api.github.com/repos/njimz/449JavaFinal", "Date": "2018-02-15T08:37:46Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { return this.getNannySessionManager().get(dbconn, sess_id, true); } finally { dbconn.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/2965/buggy-version/src.gubo.http.grizzly.NannyHttpHandler.java", "BodyUseAPI": ["gubo.session.SessonManager.get(java.sql.Connection,java.lang.String,boolean)", "gubo.http.grizzly.NannyHttpHandler.getNannySessionManager()"], "Fixed commit": "47fc868d793785d0be633a39bc980b07221fd7d3", "Url": "https://api.github.com/repos/coopci/coopci-webframework", "Date": "2018-02-15T02:34:02Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { cachedResource.checkImmutability(); } catch (java.lang.IllegalStateException ex) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/601/buggy-version/provisioning.provisioning-impl.src.main.java.com.evolveum.midpoint.provisioning.impl.ResourceCache.java", "BodyUseAPI": ["com.evolveum.midpoint.prism.PrismObject<com.evolveum.midpoint.xml.ns._public.common.common_3.ResourceType>.checkImmutability()"], "Fixed commit": "39845d37888b8e993f76b68ce4cf8b2be69efcb0", "Url": "https://api.github.com/repos/Evolveum/midpoint", "Date": "2018-04-26T15:29:31Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { categories = vega.getCategoryService().getAllCategories(); } catch (org.gmnz.vega.VegaException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/8578/buggy-version/src.main.java.org.gmnz.vega.ui.web.report.ReportController.java", "BodyUseAPI": ["vega.getCategoryService().getAllCategories()", "org.gmnz.vega.Vega.getCategoryService()"], "Fixed commit": "6449f3e6189993de7896624d83b6b60019c1dd72", "Url": "https://api.github.com/repos/s3lvatico/vega", "Date": "2018-08-01T10:13:16Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.util.List<org.gmnz.vega.domain.Category> categories = vega.getCategoryService().getAllCategories(); req.setAttribute(\"categories\", categories); } catch (org.gmnz.vega.VegaException e) { e.printStackTrace(); resp.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, \"exception thrown while retrieving the categories\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/8578/buggy-version/src.main.java.org.gmnz.vega.ui.web.allergen.AllergenController.java", "BodyUseAPI": ["vega.getCategoryService().getAllCategories()", "javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,java.util.List<org.gmnz.vega.domain.Category>)", "org.gmnz.vega.Vega.getCategoryService()"], "Fixed commit": "6449f3e6189993de7896624d83b6b60019c1dd72", "Url": "https://api.github.com/repos/s3lvatico/vega", "Date": "2018-08-01T10:13:16Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.google.firebase.database.DatabaseReference user = com.google.firebase.database.FirebaseDatabase.getInstance().getReference().child(\"users\").child(java.lang.Integer.toString(userID)); user.addListenerForSingleValueEvent(new com.example.jam.pandaroo_convo.FocusGroupListChangeListener(listData)); user.addValueEventListener(new com.example.jam.pandaroo_convo.FocusGroupListChangeListener(listData)); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6179/buggy-version/convo-android.app.src.main.java.com.example.jam.pandaroo_convo.MainActivity.java", "BodyUseAPI": ["com.google.firebase.database.FirebaseDatabase.getInstance().getReference()", "com.google.firebase.database.FirebaseDatabase.getInstance().getReference().child(java.lang.String)", "com.google.firebase.database.FirebaseDatabase.getInstance()", "com.google.firebase.database.DatabaseReference.addListenerForSingleValueEvent(com.example.jam.pandaroo_convo.FocusGroupListChangeListener)", "com.google.firebase.database.FirebaseDatabase.getInstance().getReference().child(\"users\").child(java.lang.String)", "com.google.firebase.database.DatabaseReference.addValueEventListener(com.example.jam.pandaroo_convo.FocusGroupListChangeListener)", "java.lang.Integer.toString(java.lang.Integer)"], "Fixed commit": "17c0630c4827fcf98c8b801303c4f65e37d2bac6", "Url": "https://api.github.com/repos/SummerProgram2018/Pandaroo-convo", "Date": "2018-07-11T03:01:46Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { uri = new java.net.URI(redirectLocation); } catch (java.net.URISyntaxException e) { url = new java.net.URL(redirectLocation); uri = new java.net.URI(url.getProtocol(), url.getUserInfo(), url.getHost(), url.getPort(), url.getPath(), url.getQuery(), url.getRef()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/300/buggy-version/src.main.java.vazkii.cmpdl.CMPDL.java", "BodyUseAPI": [], "Fixed commit": "cf22fb7af8eb6b14c8848f69993e09539e2fdd48", "Url": "https://api.github.com/repos/MrLavender/CMPDL", "Date": "2018-07-18T15:18:49Z"},
{"Line": "=>1172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { type = com.laytonsmith.abstraction.enums.MCPotionType.valueOf(pd.get(\"type\", t).val().toUpperCase()); } catch (java.lang.IllegalArgumentException ex) { throw new com.laytonsmith.core.exceptions.CRE.CREFormatException((\"Invalid potion type: \" + (pd.get(\"type\", t).val())), t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/4345/buggy-version/src.main.java.com.laytonsmith.core.ObjectGenerator.java", "BodyUseAPI": ["com.laytonsmith.abstraction.enums.MCPotionType.valueOf(pd.get(\"type\", t).val().toUpperCase())", "pd.get(\"type\", t).val().toUpperCase()", "pd.get(\"type\", t).val()", "com.laytonsmith.core.constructs.CArray.get(java.lang.String,com.laytonsmith.core.constructs.Target)"], "Fixed commit": "88a131aa912c66fab82b1064c9b345f221dc21a8", "Url": "https://api.github.com/repos/EngineHub/CommandHelper", "Date": "2018-05-31T02:12:12Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { checkPosition(position); setPWM(id, 0, ((int) ((min_pulse) + (position * ((max_pulse) - (min_pulse)))))); this.actualPosition = position; actualPositionChanged(); } finally { org.apache.log4j.NDC.pop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3473/buggy-version/servomaster-raspberry-pi.src.main.java.net.sf.servomaster.device.impl.i2c.pca9685.PCA9685ServoController.java", "BodyUseAPI": ["net.sf.servomaster.device.impl.i2c.pca9685.PCA9685ServoController.PCA9685Servo.actualPositionChanged()", "net.sf.servomaster.device.impl.i2c.pca9685.PCA9685ServoController.PCA9685Servo.checkPosition(double)", "net.sf.servomaster.device.impl.i2c.pca9685.PCA9685ServoController.PCA9685Servo.setPWM(net.sf.servomaster.device.impl.i2c.pca9685.PCA9685ServoController.PCA9685Servo,int,double)"], "Fixed commit": "0392cb7069840a797356555e7f6b4595ddf4e1a3", "Url": "https://api.github.com/repos/climategadgets/servomaster", "Date": "2018-01-23T04:44:40Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { clearcontrol.stack.StackInterface stack = rawFileStackSource.getStack(mDatasetNames[i], mReadTimePoint); if ((stack == null) && (mRestartFromBeginningWhenReachingEnd.get())) { mReadTimePoint = mTimepointOffset.get(); stack = rawFileStackSource.getStack(mDatasetNames[i], mReadTimePoint); } if (stack == null) { warning(((((((\"Error: could not load file \" + lRootFolder) + \" \") + lDatasetname) + \" \") + (mDatasetNames[i])) + \"!\")); continue; } lContainer.put(mDatasetNames[i], stack); } catch (java.lang.NullPointerException e) { e.printStackTrace(); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/7222/buggy-version/src.clearcontrol.microscope.lightsheet.warehouse.containers.io.ReadStackInterfaceContainerFromDiscInstruction.java", "BodyUseAPI": ["clearcontrol.core.variable.Variable<java.lang.Boolean>.get()", "clearcontrol.microscope.lightsheet.warehouse.containers.io.ReadStackInterfaceContainerFromDiscInstruction.warning(java.lang.String)", "clearcontrol.stack.sourcesink.source.RawFileStackSource.getStack(java.lang.String,long)", "clearcontrol.core.variable.bounded.BoundedVariable<java.lang.Integer>.get()", "clearcontrol.stack.sourcesink.source.RawFileStackSource.getStack(java.lang.String,long)", "clearcontrol.microscope.lightsheet.warehouse.containers.StackInterfaceContainer.put(java.lang.String,clearcontrol.stack.StackInterface)"], "Fixed commit": "3fd8594684eb36a61310e2902db166ba5efa91ad", "Url": "https://api.github.com/repos/ClearControl/clearcontrol-lightsheet", "Date": "2018-09-11T09:44:23Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.jnativehook.GlobalScreen.registerNativeHook(); } catch (org.jnativehook.NativeHookException ex) { java.lang.System.err.println(\"There was a problem registering the native hook.\"); java.lang.System.err.println(ex.getMessage()); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/4636/buggy-version/CorsairColorManager.src.main.java.de.foobar.common.BasicProgram.java", "BodyUseAPI": ["org.jnativehook.GlobalScreen.registerNativeHook()"], "Fixed commit": "e05d2ca5ff9f643b6d3ea44b9cdd1bdad963bbf5", "Url": "https://api.github.com/repos/VanFanelia/CorsairColorManager", "Date": "2018-09-17T21:13:18Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.json.JSONArray previousCycleArray = root.getJSONArray(\"Previous Cycle Dates\"); for (int index = 0; index < (previousCycleArray.length()); index++) { org.json.JSONObject cycleDates = previousCycleArray.getJSONObject(index); long startDate = cycleDates.getLong(\"Start Date\"); long endDate = cycleDates.getLong(\"End Date\"); previousCycleDateList.add(new com.example.akav.atom.OtCycleDateObject(startDate, endDate)); } } catch (org.json.JSONException e) { android.util.Log.e(com.example.akav.atom.MainActivity.class.getName(), \"Error in Parsing\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/7042/buggy-version/app.src.main.java.com.example.akav.atom.AdminOvertimeActivity.java", "BodyUseAPI": ["org.json.JSONArray.length()", "org.json.JSONObject.getLong(java.lang.String)", "org.json.JSONObject.getJSONArray(java.lang.String)", "org.json.JSONArray.getJSONObject(int)", "java.util.ArrayList<com.example.akav.atom.OtCycleDateObject>.add(com.example.akav.atom.OtCycleDateObject)", "org.json.JSONObject.getLong(java.lang.String)"], "Fixed commit": "9e590044d85d9bfae5f860f3a0fca0d98d94ad4a", "Url": "https://api.github.com/repos/ATOMWR/ATOM", "Date": "2018-02-23T06:51:26Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.spiel = new Backend.Spiel(); spielername.setText(spiel.getUsername()); highlightingButton.setSelected(spiel.isHighlightingAus()); } catch (Backend.SpielException ex) { java.util.logging.Logger.getLogger(Frontend.EinstellungenFXMLController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3674/buggy-version/Schach.src.Frontend.EinstellungenFXMLController.java", "BodyUseAPI": ["com.jfoenix.controls.JFXTextField.setText(spiel.getUsername())", "Backend.Spiel.isHighlightingAus()", "com.jfoenix.controls.JFXToggleButton.setSelected(spiel.isHighlightingAus())", "Backend.Spiel.getUsername()"], "Fixed commit": "dd218b4bc4260896c2409a380db98ac00e74a323", "Url": "https://api.github.com/repos/jojmhghg/SchachProjekt", "Date": "2018-05-19T21:32:06Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String[] temp = date.split(\"-\"); java.lang.String month = com.singular.barrister.Util.Utils.getMonth(temp[1]); java.lang.String dateOfMonth = temp[2].substring(0, 2); java.lang.String time = temp[2].substring(3); java.lang.String formattedDate = (((((dateOfMonth + \" \") + (com.singular.barrister.Util.Utils.getMonth(temp[1]))) + \" \") + (temp[0])) + \" \") + time; return formattedDate; } catch (java.lang.Exception e) { return com.singular.barrister.Util.Utils.getDateFormatTime(date); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/1476/buggy-version/app.src.main.java.com.singular.barrister.Util.Utils.java", "BodyUseAPI": ["com.singular.barrister.Util.Utils.getMonth(java.lang.String)", "java.lang.String.substring(int,int)", "com.singular.barrister.Util.Utils.getMonth(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "c197469c7b549cf5b75fb0e2ac44128c4522dc08", "Url": "https://api.github.com/repos/rahulkalamkar/Barrister", "Date": "2018-01-08T09:41:23Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { result = lhs.divide(rhs); } catch (java.lang.ArithmeticException e) { result = lhs.divide(rhs, 15, java.math.RoundingMode.HALF_UP); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/862/buggy-version/src.main.java.rpnCalc.RpnCalc.java", "BodyUseAPI": ["java.math.BigDecimal.divide(java.math.BigDecimal)"], "Fixed commit": "7ef98c925f7aa08b7f215c569794fae96238d4ce", "Url": "https://api.github.com/repos/jeremywatkins/rpnCalc", "Date": "2018-10-18T04:49:31Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return AppendFile(projectFile.getParentFile(), relativePath).getCanonicalFile(); } catch (java.io.IOException e) { e.printStackTrace(); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6800/buggy-version/src.main.java.orxanimeditor.data.v1.Project.java", "BodyUseAPI": ["orxanimeditor.data.v1.Project.RelativeFile.AppendFile(java.io.File,java.io.File)", "java.io.File.getParentFile()", "java.io.File.getCanonicalFile()"], "Fixed commit": "1da6f466fc7ea22dd5f1b0266caa3ced1569e6f4", "Url": "https://api.github.com/repos/enobayram/OrxAnimationEditor", "Date": "2014-12-21T18:40:13Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.net.Uri dbUri = android.net.Uri.parse(URL); android.database.Cursor cursor = context.getContentResolver().query(dbUri, null, null, null, null); if ((cursor != null) && (cursor.moveToFirst())) { java.lang.String debugValue = cursor.getString(cursor.getColumnIndex(\"debug\")); cursor.close(); return debugValue.equals(\"true\"); } } catch (java.lang.SecurityException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/4922/buggy-version/spilsdk.src.main.java.com.spilgames.spilsdk.utils.device.DeviceUtil.java", "BodyUseAPI": ["android.net.Uri.parse(java.lang.String)", "android.database.Cursor.moveToFirst()", "android.database.Cursor.close()", "android.content.Context.getContentResolver()", "java.lang.String.equals(java.lang.String)", "android.database.Cursor.getString(cursor.getColumnIndex(\"debug\"))", "android.database.Cursor.getColumnIndex(java.lang.String)", "context.getContentResolver().query(android.net.Uri,<nulltype>,<nulltype>,<nulltype>,<nulltype>)"], "Fixed commit": "0101f464dcede4dd1e1e173c878a0d7c4ae661b5", "Url": "https://api.github.com/repos/spilgames/spil-android-sdk", "Date": "2018-01-12T14:06:10Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (file.exists()) loadPicks(file); } catch (java.lang.NumberFormatException ex) { java.lang.System.out.println(((\"Can't load \" + (file.getAbsolutePath())) + \" so bailing!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/1194/buggy-version/src.main.java.dta.ncaa.scoreTeam.java", "BodyUseAPI": ["java.io.File.exists()", "dta.ncaa.scoreTeam.loadPicks(java.io.File)"], "Fixed commit": "3b8b2b42fe2869abbfab3fde568e0ec48a70ab6f", "Url": "https://api.github.com/repos/dadcox/home", "Date": "2018-03-14T05:11:59Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { setUpvsIdentifier(this.getString(\"upvs_identifier\")); log.trace((\"upvsIdentifier=\" + (upvsIdentifier))); } catch (org.json.JSONException e) { log.trace(\"upvsIdentifier undefined\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6051/buggy-version/generator.src.main.java.sk.trilobit.esmo.orbeon.form.MetaData.java", "BodyUseAPI": ["sk.trilobit.esmo.orbeon.form.MetaData.trace(java.lang.String)", "sk.trilobit.esmo.orbeon.form.MetaData.getString(java.lang.String)", "sk.trilobit.esmo.orbeon.form.MetaData.setUpvsIdentifier(this.getString(\"upvs_identifier\"))"], "Fixed commit": "0dfc91c65f9c3abb966a1fd633d014dbd4818a8f", "Url": "https://api.github.com/repos/fecom/generate-documentation", "Date": "2018-03-15T13:00:42Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.nio.file.Files.delete(java.nio.file.Paths.get(tmp)); } catch (java.io.IOException e) { java.lang.System.err.println(e.getMessage()); java.lang.System.err.println(e.getStackTrace()); java.lang.System.err.println(\"BatchMeshi failed in step 4, deleting tmp files.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/41/buggy-version/programs.BatchMeshi.java", "BodyUseAPI": ["java.nio.file.Paths.get(java.lang.String)", "java.nio.file.Files.delete(java.nio.file.Path)"], "Fixed commit": "3b209dc12b12500b8e780325c87891f3bb56121b", "Url": "https://api.github.com/repos/meshiprot/meshi", "Date": "2018-03-15T13:21:14Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { stdModelMap.put(jsonobj.getString(\"name\"), jsonobj.getDouble(\"p\")); } catch (org.json.JSONException e) { stdModelMap.put(jsonobj.getString(\"name\"), 1.0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/668/buggy-version/bn_general.src.UpdateStudentModel.java", "BodyUseAPI": ["org.json.JSONObject.getDouble(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.Double>.put(jsonobj.getString(\"name\"),jsonobj.getDouble(\"p\"))", "org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "90eb22ecee45f1419ac11bbd39825dfad4353888", "Url": "https://api.github.com/repos/rhosseini/bn_general", "Date": "2018-02-13T19:54:35Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return cards.get(((card.getContainingPile().getCards().indexOf(card)) - 1)); } catch (java.lang.ArrayIndexOutOfBoundsException e) { return cards.get(card.getContainingPile().getCards().indexOf(card)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/3476/buggy-version/src.com.codecool.klondike.Pile.java", "BodyUseAPI": ["card.getContainingPile().getCards().indexOf(com.codecool.klondike.Card)", "card.getContainingPile().getCards()", "javafx.collections.ObservableList<com.codecool.klondike.Card>.get(((card.getContainingPile().getCards().indexOf(card)) - 1))", "com.codecool.klondike.Card.getContainingPile()"], "Fixed commit": "e876a3233ee25f332317bc85b4a4dbbe976620ae", "Url": "https://api.github.com/repos/CodecoolBP20173/oop-klondike-solitaire-backenddecker", "Date": "2018-03-22T14:16:10Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { setSeedInternal(shortenedSeed); } finally { lock.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/2127/buggy-version/betterrandom.src.main.java.io.github.pr0methean.betterrandom.prng.CellularAutomatonRandom.java", "BodyUseAPI": ["io.github.pr0methean.betterrandom.prng.CellularAutomatonRandom.setSeedInternal(byte[])"], "Fixed commit": "6b876fa70fdc35e79d7f21495484befc0ba5f720", "Url": "https://api.github.com/repos/Pr0methean/BetterRandom", "Date": "2018-05-22T03:16:06Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { value = ((com.zf.zson.result.ZsonResult) (params)).getValue(replace); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/1404/buggy-version/src.main.java.com.zf.mock.AbstractRequestService.java", "BodyUseAPI": ["java.lang.Object.getValue(java.lang.String)"], "Fixed commit": "92ee56408643f3184cfa1337afd94cdb98e1addd", "Url": "https://api.github.com/repos/zhangfei19841004/zmock", "Date": "2018-05-08T08:26:32Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { value = ((com.zf.zson.result.ZsonResult) (params)).getValue(replace); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/1404/buggy-version/src.main.java.com.zf.mock.AbstractRequestService.java", "BodyUseAPI": ["java.lang.Object.getValue(java.lang.String)"], "Fixed commit": "92ee56408643f3184cfa1337afd94cdb98e1addd", "Url": "https://api.github.com/repos/zhangfei19841004/zmock", "Date": "2018-05-08T08:26:32Z"},
{"Line": "=>658", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { judul = data.getJudul().toUpperCase(); } catch (java.lang.Exception e) { judul = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/9912/buggy-version/app.src.main.java.com.example.cyberpegasus.news.activity.DashboardActivity.java", "BodyUseAPI": ["com.example.cyberpegasus.news.model.Data.getJudul()", "data.getJudul().toUpperCase()"], "Fixed commit": "a6cd661c1a4ef186230a2f12a790b2b2d01bb7c4", "Url": "https://api.github.com/repos/kurniawan15/Mobile-News", "Date": "2018-09-13T09:53:07Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return handle(content).toString(); } catch (java.lang.Exception e) { e.printStackTrace(); return \"\u67e5\u8be2\u5931\u8d25\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/3669/buggy-version/src.main.java.com.github.pengpan.wechat.controller.CoreController.java", "BodyUseAPI": ["com.github.pengpan.wechat.entity.AppleInfo.toString()", "com.github.pengpan.wechat.controller.CoreController.handle(java.lang.String)"], "Fixed commit": "e4914dc6bc1303b946652cda56ee4933a413ad9e", "Url": "https://api.github.com/repos/pengpan/wechat-public-number", "Date": "2018-09-21T05:09:12Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String preLaunchStr = ((java.lang.String) (android.taobao.atlas.runtime.RuntimeVariables.getFrameworkProperty(\"preLaunch\"))); if (!(android.text.TextUtils.isEmpty(preLaunchStr))) { android.taobao.atlas.runtime.AtlasPreLauncher launcher = ((android.taobao.atlas.runtime.AtlasPreLauncher) (java.lang.Class.forName(preLaunchStr).newInstance())); if (launcher != null) { launcher.initBeforeAtlas(mRawApplication.getBaseContext()); } } } catch (java.lang.Throwable e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6519/buggy-version/atlas-core.src.main.java.android.taobao.atlas.bridge.BridgeApplicationDelegate.java", "BodyUseAPI": ["java.lang.Class<?>.newInstance()", "java.lang.Class.forName(java.lang.String)", "android.taobao.atlas.runtime.AtlasPreLauncher.initBeforeAtlas(mRawApplication.getBaseContext())", "android.text.TextUtils.isEmpty(java.lang.String)", "android.app.Application.getBaseContext()", "android.taobao.atlas.runtime.RuntimeVariables.getFrameworkProperty(java.lang.String)"], "Fixed commit": "12dea510a69e7e761b070b4fb1c5274d70840167", "Url": "https://api.github.com/repos/alibaba/atlas", "Date": "2018-05-08T07:49:59Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { newFriend = ((com.pusheenicorn.safetyapp.models.Friend) (currentUser.fetch().getList(\"friends\").get(i))); } catch (com.parse.ParseException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/9653/buggy-version/app.src.main.java.com.pusheenicorn.safetyapp.FriendsActivity.java", "BodyUseAPI": ["currentUser.fetch().getList(\"friends\").get(int)", "currentUser.fetch().getList(java.lang.String)", "com.pusheenicorn.safetyapp.models.User.fetch()"], "Fixed commit": "854b5fe319c1cbbce236944eab32bddb98ded970", "Url": "https://api.github.com/repos/appsur/SurApp", "Date": "2018-08-03T18:41:19Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { if (!(executionQueue.contains(computation))) { executionQueue.add(computation); }else { org.cat.eye.engine.common.service.impl.SimpleComputationContextService.LOGGER.info(\"++++++++ It's double computation +++++++\"); } } finally { lock.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/1776/buggy-version/modules.cat-eye-engine.cat-eye-engine-common.src.main.java.org.cat.eye.engine.common.service.impl.SimpleComputationContextService.java", "BodyUseAPI": ["java.util.Queue<org.cat.eye.engine.common.model.Computation>.contains(org.cat.eye.engine.common.model.Computation)", "org.slf4j.Logger.info(java.lang.String)", "java.util.Queue<org.cat.eye.engine.common.model.Computation>.add(org.cat.eye.engine.common.model.Computation)"], "Fixed commit": "24ba31cf2a851ca2f02cc65a18c615835197652c", "Url": "https://api.github.com/repos/catkotov/cat-eye", "Date": "2018-02-16T17:10:09Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { return doMove(resultOs, logOs); } finally { moveExecutor.shutdown(); moveExecutor = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6493/buggy-version/smart-hadoop-support.smart-hadoop.src.main.java.org.smartdata.hdfs.action.move.MoverExecutor.java", "BodyUseAPI": ["org.smartdata.hdfs.action.move.MoverExecutor.doMove(java.io.PrintStream,java.io.PrintStream)"], "Fixed commit": "d317928e48db35f33cd56570b45d898380f9aa11", "Url": "https://api.github.com/repos/fztfztfztfzt/SSM", "Date": "2018-03-02T05:15:25Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { qR = this.item.getMethod().execute(startingPoint, possibleResults, iCommandContext); } finally { iCommandContext.setVariable(\"$current\", prevCurrent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/9493/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.executor.MatchEdgeTraverser.java", "BodyUseAPI": ["com.orientechnologies.orient.core.sql.parser.OMatchPathItem.getMethod()", "this.item.getMethod().execute(com.orientechnologies.orient.core.db.record.OIdentifiable,java.lang.Iterable,com.orientechnologies.orient.core.command.OCommandContext)"], "Fixed commit": "049e957aa02b2082919b4a66e853e100a7c20e61", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2018-02-12T15:04:58Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.os.Message message = android.os.Message.obtain(activity.getHandler(), R.id.decode_failed); message.sendToTarget(); } catch (java.lang.Exception e) { com.blankj.utilcode.util.LogUtils.e(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/2048/buggy-version/quicklib.src.main.java.com.sdwfqin.quicklib.module.qrbarscan.DecodeHandler.java", "BodyUseAPI": ["android.os.Message.sendToTarget()", "com.sdwfqin.quicklib.module.qrbarscan.QrBarScanActivity.getHandler()", "android.os.Message.obtain(activity.getHandler(),R.id.decode_failed)"], "Fixed commit": "db28094bcffd47986c1f5a5dd10322949bbbe7fb", "Url": "https://api.github.com/repos/sdwfqin/AndroidQuick", "Date": "2018-02-24T06:46:09Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.hibernate.Criteria cr = db.DBBooking.session.createCriteria(models.Bill.class); cr.add(org.hibernate.criterion.Restrictions.eq(\"booking\", booking)); result = ((models.Bill) (cr.uniqueResult())); } catch (org.hibernate.HibernateException e) { e.printStackTrace(); } finally { db.DBBooking.session.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/5882/buggy-version/java_project_restaurant.src.main.java.db.DBBooking.java", "BodyUseAPI": ["org.hibernate.Session.createCriteria(java.lang.Class)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,models.Booking)", "org.hibernate.Criteria.add(org.hibernate.criterion.Restrictions.eq(\"booking\", booking))", "org.hibernate.Criteria.uniqueResult()"], "Fixed commit": "db25555978e980b42885be8b7367686dcccc39da", "Url": "https://api.github.com/repos/mattbryce93/Java_Pair_Project", "Date": "2018-07-18T10:14:53Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { title = new com.example.simone.whatwatch.JSONParsingClasses.TitleParsing(type).execute(url).get(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } catch (java.util.concurrent.ExecutionException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/2732/buggy-version/app.src.main.java.com.example.simone.whatwatch.ChatGroup.ChatGroup.java", "BodyUseAPI": ["com.example.simone.whatwatch.JSONParsingClasses.TitleParsing.execute(java.lang.String)", "new com.example.simone.whatwatch.JSONParsingClasses.TitleParsing(type).execute(url).get()"], "Fixed commit": "4e4c84f8030f533b5563a33b88f9cf2ed35bb32e", "Url": "https://api.github.com/repos/sGraffione/WhatWatch", "Date": "2017-08-23T09:33:25Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { init(); org.jppf.management.diagnostics.CloseableHandler.addResetCloseable(closeableType, this); } catch (final java.lang.RuntimeException e) { org.jppf.management.diagnostics.Diagnostics.log.error(e.getMessage(), e); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/8027/buggy-version/common.src.java.org.jppf.management.diagnostics.Diagnostics.java", "BodyUseAPI": ["org.jppf.management.diagnostics.Diagnostics.init()", "org.jppf.management.diagnostics.CloseableHandler.addResetCloseable(java.lang.String,org.jppf.management.diagnostics.Diagnostics)"], "Fixed commit": "f21f7c87ef4034b82ddf03f72847a067b36b27ba", "Url": "https://api.github.com/repos/jppf-grid/JPPF", "Date": "2018-05-10T22:39:07Z"},
{"Line": "=>595", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { response = restTemplate.exchange(builder.build().encode().toUri(), HttpMethod.GET, null, new org.springframework.core.ParameterizedTypeReference<java.util.List<org.lockss.laaws.rs.model.Artifact>>() {}); } catch (org.springframework.web.client.HttpClientErrorException e) { org.lockss.laaws.rs.core.HttpStatus status = e.getStatusCode(); if ((status.value()) == 404) { return null; } org.lockss.laaws.rs.core.RestLockssRepository.log.error(java.lang.String.format(\"Unexpected error getting artifact: %s\", status)); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/5473/buggy-version/src.main.java.org.lockss.laaws.rs.core.RestLockssRepository.java", "BodyUseAPI": ["builder.build().encode().toUri()", "org.springframework.web.util.UriComponentsBuilder.build()", "org.springframework.web.client.RestTemplate.exchange(builder.build().encode().toUri(),HttpMethod.GET,<nulltype>,org.springframework.core.ParameterizedTypeReference<java.util.List<org.lockss.laaws.rs.model.Artifact>>)", "builder.build().encode()"], "Fixed commit": "af4009d670e21815593346941d6558f74ae61f14", "Url": "https://api.github.com/repos/lockss/laaws-repository-core", "Date": "2018-05-04T08:22:58Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { if (resourceManaged()) { daris.transcode.DarisTranscodeImpl.ResourceManager.start(inputSize); resourceManagerStarted = true; } try { transcode(tmpDir, fromType, toType, params); } catch (java.lang.Throwable e) { try (java.io.PrintWriter w = new java.io.PrintWriter(new java.io.File(tmpDir, \"error.txt\"))) { e.printStackTrace(w); } } } finally { if ((resourceManaged()) && resourceManagerStarted) { daris.transcode.DarisTranscodeImpl.ResourceManager.stop(inputSize); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/9167/buggy-version/daris-transcoders.src.main.java.daris.transcode.DarisTranscodeImpl.java", "BodyUseAPI": ["java.lang.Throwable.printStackTrace(java.io.PrintWriter)", "daris.transcode.DarisTranscodeImpl.transcode(java.io.File,arc.mime.MimeType,arc.mime.MimeType,java.util.Map<java.lang.String, java.lang.String>)", "daris.transcode.DarisTranscodeImpl.ResourceManager.start(long)", "daris.transcode.DarisTranscodeImpl.resourceManaged()"], "Fixed commit": "b119638dccc4d0ff5ea2c0bebf5d161fb5274735", "Url": "https://api.github.com/repos/uom-daris/daris", "Date": "2018-02-07T03:57:12Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { view.animate().setDuration(500).alpha(((float) (0.5))).withEndAction(new java.lang.Runnable() { @java.lang.Override public void run() { org.secuso.privacyfriendlynetmonitor.ConnectionAnalysis.Collector.provideDetail(r.uid, r.remoteAddHex); android.content.Intent intent = new android.content.Intent(getApplicationContext(), org.secuso.privacyfriendlynetmonitor.Activities.ReportDetailActivity.class); startActivity(intent); } }); } catch (java.lang.Exception e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/7751/buggy-version/app.src.main.java.org.secuso.privacyfriendlynetmonitor.Activities.MainActivity.java", "BodyUseAPI": ["view.animate().setDuration(500).alpha(((float) (0.5))).withEndAction(java.lang.Runnable)", "view.animate().setDuration(500).alpha(double)", "view.animate().setDuration(int)", "2.getApplicationContext()", "java.lang.Object()", "android.view.View.animate()", "org.secuso.privacyfriendlynetmonitor.ConnectionAnalysis.Collector.provideDetail(r.uid,r.remoteAddHex)", "2.startActivity(android.content.Intent)"], "Fixed commit": "f2a22a00cf66fb9099b11a2a28005d3b5b6ff6a9", "Url": "https://api.github.com/repos/SecUSo/privacy-friendly-netmonitor", "Date": "2018-03-08T16:43:47Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { numberOfStopsWanted = java.lang.Integer.parseInt(data[2]); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6855/buggy-version/src.logic.gateway.TelegramGateway.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "ddaebb95465c145ef7ba95c4ccdd0cf03c275910", "Url": "https://api.github.com/repos/bernardyip/BusTimeBot", "Date": "2018-02-22T10:23:02Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { dataSource.dropSequence(seqName); } catch (java.sql.SQLException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/174/buggy-version/datasource.database-tool.src.main.java.org.xipki.dbi.OcspCertStoreDbImporter.java", "BodyUseAPI": ["org.xipki.dbi.OcspCertStoreDbImporter.dropSequence(java.lang.String)"], "Fixed commit": "ba7c0a85e278ccc236f2125239b91cf2a44a0dad", "Url": "https://api.github.com/repos/xipki/xipki", "Date": "2014-09-22T09:03:22Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { username = client.ComponentFactory.fixName(com.sun.jna.platform.win32.Secur32Util.getUserNameEx(Secur32.EXTENDED_NAME_FORMAT.NameDisplay)); } catch (java.lang.Exception e) { username = java.lang.System.getProperty(\"user.name\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/4830/buggy-version/src.client.ClientUI.java", "BodyUseAPI": ["client.ComponentFactory.fixName(com.sun.jna.platform.win32.Secur32Util.getUserNameEx(Secur32.EXTENDED_NAME_FORMAT.NameDisplay))", "com.sun.jna.platform.win32.Secur32Util.getUserNameEx(Secur32.EXTENDED_NAME_FORMAT.NameDisplay)"], "Fixed commit": "6a01eeb4cac1f9febabe40e558190033ba2ee9b7", "Url": "https://api.github.com/repos/Peter-DeJong/BHS_PC_PROJECT", "Date": "2018-01-07T05:18:07Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return delegate.extract(format, carrier); } catch (java.lang.NumberFormatException e) { org.stagemonitor.tracing.wrapper.SpanWrappingTracer.logger.error((\"error parsing span id, possible XSS attack: \" + (e.getMessage())), e); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/7781/buggy-version/stagemonitor-tracing.src.main.java.org.stagemonitor.tracing.wrapper.SpanWrappingTracer.java", "BodyUseAPI": ["io.opentracing.Tracer.extract(io.opentracing.propagation.Format<C>,C)"], "Fixed commit": "18920e7b016086c3234053422cbfd5f6eb0c4902", "Url": "https://api.github.com/repos/thaarbach/stagemonitor", "Date": "2018-04-25T09:50:13Z"},
{"Line": "=>529", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { timer_song = android.media.MediaPlayer.create(this, preferences.getInt(\"tune\", 0)); } catch (java.lang.Exception e) { timer_song = android.media.MediaPlayer.create(this, R.raw.down_stream); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/9440/buggy-version/app.src.main.java.com.example.gerin.alarm.MainActivity.java", "BodyUseAPI": ["android.media.MediaPlayer.create(com.example.gerin.alarm.MainActivity,preferences.getInt(\"tune\", 0))", "android.content.SharedPreferences.getInt(java.lang.String,int)"], "Fixed commit": "97168ddbc75964b0aadd721e18777763a7130033", "Url": "https://api.github.com/repos/gerin98/Alarm", "Date": "2018-06-18T15:52:10Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { timer_song = android.media.MediaPlayer.create(this, timer_tune); } catch (java.lang.Exception e) { timer_song = android.media.MediaPlayer.create(this, R.raw.down_stream); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/9440/buggy-version/app.src.main.java.com.example.gerin.alarm.MainActivity.java", "BodyUseAPI": ["android.media.MediaPlayer.create(com.example.gerin.alarm.MainActivity,int)"], "Fixed commit": "97168ddbc75964b0aadd721e18777763a7130033", "Url": "https://api.github.com/repos/gerin98/Alarm", "Date": "2018-06-18T15:52:10Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (dc == (org.bukkit.DyeColor.LIGHT_GRAY)) { getConfig().addDefault((\"sheep.name.\" + (dc.name())), new java.util.ArrayList(java.util.Collections.singleton(\"HP#silver_sheep\"))); }else { getConfig().addDefault((\"sheep.name.\" + (dc.name())), new java.util.ArrayList(java.util.Collections.singleton(((\"HP#\" + (dc.name().toLowerCase())) + \"_sheep\")))); } } catch (java.lang.NoSuchFieldError ex) { getConfig().addDefault((\"sheep.name.\" + (dc.name())), new java.util.ArrayList(java.util.Collections.singleton(\"HP#silver_sheep\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/3581/buggy-version/main.java.io.github.thatsmusic99.headsplus.config.HeadsPlusConfigHeads.java", "BodyUseAPI": ["io.github.thatsmusic99.headsplus.config.HeadsPlusConfigHeads.getConfig()", "getConfig().addDefault((\"sheep.name.\" + (dc.name())),java.util.ArrayList)", "io.github.thatsmusic99.headsplus.config.HeadsPlusConfigHeads.getConfig()", "java.util.Collections.singleton(((\"HP#\" + (dc.name().toLowerCase())) + \"_sheep\"))", "dc.name().toLowerCase()", "org.bukkit.DyeColor.name()", "java.util.Collections.singleton(java.lang.String)", "org.bukkit.DyeColor.name()", "org.bukkit.DyeColor.name()", "getConfig().addDefault((\"sheep.name.\" + (dc.name())),java.util.ArrayList)"], "Fixed commit": "1b7193f495155b34cb7dfc649e474cbfaf50b4e8", "Url": "https://api.github.com/repos/steve4744/HeadsPlus", "Date": "2018-10-20T06:30:55Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName()); } catch (java.lang.Exception ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/7193/buggy-version/src.jblockmain.JBlock.java", "BodyUseAPI": ["javax.swing.UIManager.getSystemLookAndFeelClassName()", "javax.swing.UIManager.setLookAndFeel(java.lang.String)"], "Fixed commit": "7681542b1cae2a07ab06ea626ba6b11e887fa8b0", "Url": "https://api.github.com/repos/aharwood2/JBlockCreator", "Date": "2018-07-20T14:17:28Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.apple.eawt.Application.getApplication().setDockIconImage(ii.getImage()); } catch (java.lang.RuntimeException ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/5521/buggy-version/src.main.java.sinalgo.gui.GuiHelper.java", "BodyUseAPI": ["com.apple.eawt.Application.getApplication().setDockIconImage(java.awt.Image)", "com.apple.eawt.Application.getApplication()", "javax.swing.ImageIcon.getImage()"], "Fixed commit": "486a6e48e1411d08120a9943abbc29ed5bd86f3f", "Url": "https://api.github.com/repos/Sinalgo/sinalgo", "Date": "2018-04-23T17:04:07Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.apple.eawt.Application.getApplication().setDockIconImage(ii.getImage()); } catch (java.lang.RuntimeException ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/5521/buggy-version/src.main.java.sinalgo.gui.GuiHelper.java", "BodyUseAPI": ["com.apple.eawt.Application.getApplication()", "com.apple.eawt.Application.getApplication().setDockIconImage(java.awt.Image)", "javax.swing.ImageIcon.getImage()"], "Fixed commit": "486a6e48e1411d08120a9943abbc29ed5bd86f3f", "Url": "https://api.github.com/repos/Sinalgo/sinalgo", "Date": "2018-04-23T17:04:07Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.conedot.aland.training.model.Pedia pedia = pediaManager.getPediaPure(userLession.getLessionId()); userLession.setPediaData(pedia); } catch (com.conedot.aland.training.exception.PediaNotFoundException e2) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/366/buggy-version/AlandTrainingService.src.main.java.com.conedot.aland.training.manager.UserLessionManager.java", "BodyUseAPI": ["com.conedot.aland.training.model.UserLession.setPediaData(com.conedot.aland.training.model.Pedia)", "com.conedot.aland.training.manager.PediaManager.getPediaPure(userLession.getLessionId())", "com.conedot.aland.training.model.UserLession.getLessionId()"], "Fixed commit": "58b4305e01257803556aa893ef2fcd1fc58582e1", "Url": "https://api.github.com/repos/victorwang0526/AlandTraining", "Date": "2018-08-16T14:46:02Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.conedot.aland.training.model.Course course = courseManager.getCourse(userLession.getLessionId()); userLession.setCourseData(course); } catch (com.conedot.aland.training.exception.CourseNotFoundException e1) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/366/buggy-version/AlandTrainingService.src.main.java.com.conedot.aland.training.manager.UserLessionManager.java", "BodyUseAPI": ["com.conedot.aland.training.model.UserLession.setCourseData(com.conedot.aland.training.model.Course)", "com.conedot.aland.training.manager.CourseManager.getCourse(userLession.getLessionId())", "com.conedot.aland.training.model.UserLession.getLessionId()"], "Fixed commit": "58b4305e01257803556aa893ef2fcd1fc58582e1", "Url": "https://api.github.com/repos/victorwang0526/AlandTraining", "Date": "2018-08-16T14:46:02Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { hlr.receive(mi.nid, mi.nsid, mi.msg); } catch (java.lang.Exception e) { java.lang.System.out.println(\"Exception during kernel message handling:\"); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/7994/buggy-version/modP2pImpl.src.org.aion.p2p.impl1.P2pMgr.java", "BodyUseAPI": ["org.aion.p2p.impl1.Handler.receive(int,java.lang.String,byte[])"], "Fixed commit": "2419947e9403c3f377b914d6b4cfbe6dc03e1818", "Url": "https://api.github.com/repos/aionnetwork/aion", "Date": "2018-04-06T16:51:32Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.google.gson.JsonElement je = jp.parse(json); return gson.toJson(je); } catch (java.lang.Exception e) { return json; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/4454/buggy-version/src.main.java.LazyBurro.Helper.JSON.java", "BodyUseAPI": ["com.google.gson.Gson.toJson(com.google.gson.JsonElement)", "com.google.gson.JsonParser.parse(java.lang.String)"], "Fixed commit": "492033bb89026a547fb832f7c48ad50de542f6ee", "Url": "https://api.github.com/repos/blh0021/LazyBurro", "Date": "2018-01-10T13:04:53Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(speed); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6667/buggy-version/Plankton.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "0aa2f9e20dc13a6d5432fd9927abab587daed44f", "Url": "https://api.github.com/repos/king48/MyCreation", "Date": "2018-03-29T04:48:52Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { fos = new java.io.FileOutputStream(\"src/com/wishlist/resources/database/database.json\"); } catch (java.io.FileNotFoundException e) { new java.io.File(\"src/com/wishlist/resources/database\").mkdirs(); fos = new java.io.FileOutputStream(\"src/com/wishlist/resources/database/database.json\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/3054/buggy-version/src.com.wishlist.wish.DatabaseAllGames.java", "BodyUseAPI": [], "Fixed commit": "b7e9185a9144de597733f751c22d1bd35085ca77", "Url": "https://api.github.com/repos/MantasVis/GameWishlist", "Date": "2018-07-17T18:18:17Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.tron.program.GetAccountBalance.client.shutdown(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/5452/buggy-version/src.main.java.org.tron.program.GetAccountBalance.java", "BodyUseAPI": ["org.tron.service.WalletGrpcClient.shutdown()"], "Fixed commit": "9bedbb906e2936387135f46910e42521da699234", "Url": "https://api.github.com/repos/tronprotocol/lever", "Date": "2018-08-15T12:58:29Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.nio.file.Files.deleteIfExists(new java.io.File(filepath).toPath()); } catch (java.io.IOException e) { e.printStackTrace(); edu.stanford.muse.index.Lexicon.log.debug(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/7701/buggy-version/src.java.edu.stanford.muse.index.Lexicon.java", "BodyUseAPI": ["java.io.File.toPath()", "java.nio.file.Files.deleteIfExists(java.nio.file.Path)"], "Fixed commit": "abbf5b9e5de214a030314d165c3aca0e8096ac2e", "Url": "https://api.github.com/repos/ePADD/epadd", "Date": "2018-10-17T11:09:55Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { schoolService.updatePassword(schoolId, newPassword, oldPassword); } catch (cn.wqisland.exception.WqIslandException e) { return fail(e.getMessage()).json(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6079/buggy-version/src.main.java.cn.wqisland.web.SchoolController.java", "BodyUseAPI": ["cn.wqisland.service.ISchoolService.updatePassword(java.lang.Integer,java.lang.String,java.lang.String)"], "Fixed commit": "70d94f380ddc27533dc64daced3d4ce1fd434459", "Url": "https://api.github.com/repos/nihao17546/wq-island", "Date": "2018-01-18T06:40:52Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { cube.stop(); } catch (final java.lang.Throwable e) { java.util.logging.Logger.getLogger(org.arquillian.cube.impl.client.ForceStopDockerContainersShutdownHook.class.getName()).log(java.util.logging.Level.WARNING, (\"Failed to stop container: \" + (cube.getId())), e); } finally { try { cube.destroy(); } catch (final java.lang.Throwable ignore) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6836/buggy-version/core.src.main.java.org.arquillian.cube.impl.client.ForceStopDockerContainersShutdownHook.java", "BodyUseAPI": ["org.arquillian.cube.spi.Cube.stop()"], "Fixed commit": "0680c3a49c07d968287b653140469a220727cc4e", "Url": "https://api.github.com/repos/AndyGee/arquillian-cube", "Date": "2018-07-03T13:37:29Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { pageNumber = intent.getInt(com.elementary.tasks.core.app_widgets.calendar.CalendarThemeFragment.ARGUMENT_PAGE_NUMBER); java.util.List<com.elementary.tasks.core.app_widgets.calendar.CalendarTheme> list = intent.getParcelableArrayList(com.elementary.tasks.core.app_widgets.calendar.CalendarThemeFragment.ARGUMENT_DATA); if (list != null) this.list = list; } catch (android.os.BadParcelableException ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9172/buggy-version/app.src.main.java.com.elementary.tasks.core.app_widgets.calendar.CalendarThemeFragment.java", "BodyUseAPI": ["android.os.Bundle.getParcelableArrayList(java.lang.String)", "android.os.Bundle.getInt(java.lang.String)"], "Fixed commit": "bf762fa58f9763bd22814b177b3f1e0375202148", "Url": "https://api.github.com/repos/naz013/Reminder", "Date": "2018-06-13T17:05:22Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return com.netflix.discovery.DiscoveryClient.class.cast(targetSource.getTarget()); } catch (final java.lang.Exception e) { throw new java.lang.IllegalStateException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/87/buggy-version/evcache-client-spring-cloud-autoconfigure.src.main.java.com.github.aafwu00.evcache.client.spring.cloud.EVCacheCloudAutoConfiguration.java", "BodyUseAPI": ["java.lang.Class.cast(targetSource.getTarget())", "org.springframework.aop.TargetSource.getTarget()"], "Fixed commit": "736ca5392f8176f299ff0ba31a0ba40cf56018e7", "Url": "https://api.github.com/repos/aafwu00/netflix-evcache-spring", "Date": "2018-07-04T02:54:36Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { bluetooth.discoverable(student.getFirstName()); } catch (java.lang.Exception e) { new com.example.marta.blueteeth.DialogBox(e.toString(), this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/8052/buggy-version/app.src.main.java.com.example.marta.blueteeth.StudentConnectScreen.java", "BodyUseAPI": ["com.example.marta.domain.Student.getFirstName()", "com.example.marta.domain.Bluetooth.discoverable(student.getFirstName())"], "Fixed commit": "34b76d67a3649626aa526b3baa0493a1041c6ad7", "Url": "https://api.github.com/repos/Martydude15/BlueTeeth", "Date": "2018-04-19T18:36:33Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((remoteMessage.getNotification()) != null) { android.util.Log.d(com.softwaresaturdays.app.arcade.services.MyFirebaseMessagingService.TAG, (\"Message Notification Body: \" + (remoteMessage.getNotification().getBody()))); }else { if ((com.softwaresaturdays.app.arcade.MyApplication.currUser) != null) { if ((userId.equals(MyApplication.currUser.getUid())) || (com.softwaresaturdays.app.arcade.MyApplication.isForeground)) { }else { sendNotification(message); } } } } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/3570/buggy-version/app.src.main.java.com.softwaresaturdays.app.arcade.services.MyFirebaseMessagingService.java", "BodyUseAPI": ["MyApplication.currUser.getUid()", "remoteMessage.getNotification().getBody()", "java.lang.String.equals(MyApplication.currUser.getUid())", "com.softwaresaturdays.app.arcade.services.MyFirebaseMessagingService.sendNotification(java.lang.String)", "android.util.Log.d(java.lang.String,(\"Message Notification Body: \" + (remoteMessage.getNotification().getBody())))", "com.google.firebase.messaging.RemoteMessage.getNotification()", "com.google.firebase.messaging.RemoteMessage.getNotification()"], "Fixed commit": "e8c083c2cec6f60cf47b0491c50a7ece374c1cc4", "Url": "https://api.github.com/repos/SoftwareSaturdays/Arcade", "Date": "2018-10-27T02:47:28Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { messageBody = jdbcTemplate.queryForObject(sql, org.forum.api.dto.MessageBody.class, id); } catch (org.springframework.dao.DataAccessException dataAccessException) { throw new org.forum.api.exception.DataNotFoundException(org.forum.api.commons.ErrorUtility.getDataNotFoundExceptionMessage(id)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5700/buggy-version/src.main.java.org.forum.api.jdbc.dao.MessageDAOImpl.java", "BodyUseAPI": ["org.springframework.jdbc.core.JdbcTemplate.queryForObject(java.lang.String,java.lang.Class,java.lang.Long)"], "Fixed commit": "4d5312ddd32e9b63dc90c0851d26f6ce091a2444", "Url": "https://api.github.com/repos/muradbax/forum-rest-api", "Date": "2018-04-14T19:27:54Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { feedValidator.complete(validationResult); } catch (java.lang.Exception e) { java.lang.String badValue = java.lang.String.join(\":\", feedValidator.getClass().getSimpleName(), e.toString()); errorStorage.storeError(com.conveyal.gtfs.error.NewGTFSError.forFeed(com.conveyal.gtfs.loader.VALIDATOR_FAILED, badValue)); com.conveyal.gtfs.loader.Feed.LOG.error(\"Validator failed completion stage.\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/7877/buggy-version/src.main.java.com.conveyal.gtfs.loader.Feed.java", "BodyUseAPI": ["com.conveyal.gtfs.loader.FeedValidator.complete(com.conveyal.gtfs.loader.ValidationResult)"], "Fixed commit": "9fc6bc1120be6e7defd8686670235b4096a68075", "Url": "https://api.github.com/repos/conveyal/gtfs-lib", "Date": "2017-12-15T18:39:01Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.nio.file.Files.move(tempMDF.toPath(), this.mdf.toPath(), java.nio.file.StandardCopyOption.REPLACE_EXISTING); } catch (java.io.IOException e) { java.lang.System.err.println(\"Error renaming .tmp file. Download failed.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/7359/buggy-version/DownloadableMetadata.java", "BodyUseAPI": ["java.io.File.toPath()", "java.io.File.toPath()", "java.nio.file.Files.move(java.nio.file.Path,java.nio.file.Path,java.nio.file.StandardCopyOption)"], "Fixed commit": "fbfe755256aea83e6b338a65561c4e44be54289c", "Url": "https://api.github.com/repos/tomerbrk/DownloadManager", "Date": "2018-01-16T14:30:34Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (((dao.impl.DBConnection.instance) == null) || (dao.impl.DBConnection.connection.isClosed())) { dao.impl.DBConnection.instance = new dao.impl.DBConnection(); } } catch (java.sql.SQLException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4151/buggy-version/src.main.java.dao.impl.DBConnection.java", "BodyUseAPI": ["java.sql.Connection.isClosed()"], "Fixed commit": "2175b0bfab92ec71d565a291fe6a6f2063247665", "Url": "https://api.github.com/repos/stefashkaa/shop", "Date": "2018-04-07T11:51:52Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { paramsCheck(customerInfo); } catch (cn.aegisa.project.exception.DuplicatedIdNumberException e) { if (id == null) { throw e; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/3837/buggy-version/project-provider.src.main.java.cn.aegisa.project.service.impl.CustomerServiceImpl.java", "BodyUseAPI": ["cn.aegisa.project.service.impl.CustomerServiceImpl.paramsCheck(cn.aegisa.project.model.CustomerInfo)"], "Fixed commit": "35123c3186e9b3e4e6a581eaa3847d07d9e9a8b0", "Url": "https://api.github.com/repos/daegis/project-soa", "Date": "2018-02-13T03:59:28Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String updateRule = \"update businessrule set status = \\'complete\\' where name = \" + (arr.get(5)); con.connect(); con.insert(updateRule); con.disconnect(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/1618/buggy-version/src.main.java.com.vogella.jersey.first.Resources.DatabaseResource.java", "BodyUseAPI": ["com.vogella.jersey.first.repDatabase.RepConnector.insert(java.lang.String)", "com.vogella.jersey.first.repDatabase.RepConnector.disconnect()", "com.vogella.jersey.first.repDatabase.RepConnector.connect()", "java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "54f2139a4576524afbe947cb4056622723c010d4", "Url": "https://api.github.com/repos/1704102/tosad_2017_2b_team5_heroku", "Date": "2018-01-28T18:55:19Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String version = getPackageManager().getPackageInfo(getPackageName(), 0).versionName; ((android.widget.TextView) (tmpView.findViewById(R.id.Setting_Version))).setText(version); } catch (android.content.pm.PackageManager e) { e.printStackTrace(); new android.support.v7.app.AlertDialog.Builder(Me).setMessage(\"\u83b7\u53d6\u7248\u672c\u53f7\u5931\u8d25\").setCancelable(true).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/7718/buggy-version/app.src.main.java.d.o.JackMyth.HEUSuperHelper.Helper_Main.java", "BodyUseAPI": ["android.view.View.findViewById(R.id.Setting_Version)", "d.o.JackMyth.HEUSuperHelper.Helper_Main.6.getPackageName()", "((android.widget.TextView) (tmpView.findViewById(R.id.Setting_Version))).setText(java.lang.String)", "getPackageManager().getPackageInfo(getPackageName(),int)", "d.o.JackMyth.HEUSuperHelper.Helper_Main.6.getPackageManager()"], "Fixed commit": "6a3be3ffa39f151783fdc6afdc9630571c4930a3", "Url": "https://api.github.com/repos/Jack-Myth/HEUSuperHelper", "Date": "2018-03-10T08:33:34Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { segNum2 = java.lang.Integer.parseUnsignedInt(segNum, 16); } catch (java.lang.NumberFormatException e) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9183/buggy-version/src.ca.noxid.lab.gameinfo.CSExe.java", "BodyUseAPI": ["java.lang.Integer.parseUnsignedInt(java.lang.String,int)"], "Fixed commit": "2120ac1f18ecc9a7d5faea561d3eb5b95ac87a46", "Url": "https://api.github.com/repos/Leo40Git/boosters-lab", "Date": "2018-04-19T16:52:30Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { hero = heroService.get(pet.getHeroid()); } catch (java.lang.Exception e) { hero = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4635/buggy-version/pets.pets-web.src.main.java.hu.javanetacademy.hoe.pets.pets.web.PetDeleteServlet.java", "BodyUseAPI": ["hu.javanetacademy.hoe.pets.dao.model.Pet.getHeroid()", "hu.javanetacademy.hoe.hero.service.object.HeroService.get(pet.getHeroid())"], "Fixed commit": "cfa88f242ae779f3d5351e4639f785618cfd6fb1", "Url": "https://api.github.com/repos/JavaNetAcademy/due-prog3-corr-2018-19-I", "Date": "2018-10-22T09:06:03Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { io.github.adriangnot.resource.archiver.JmxReader jmxReader = jmxReaderProvider.getJmxReader(pid); processes.put(pid, new io.github.adriangnot.resource.archiver.JmxProcessResourceReader(jmxReader)); } catch (io.github.adriangnot.resource.archiver.ResourceAccessException ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/3154/buggy-version/src.main.java.io.github.adriangnot.resource.archiver.JmxProcessResourceReaderProvider.java", "BodyUseAPI": ["io.github.adriangnot.resource.archiver.JmxReaderProvider.getJmxReader(io.github.adriangnot.resource.archiver.Pid)", "java.util.Map<io.github.adriangnot.resource.archiver.Pid, io.github.adriangnot.resource.archiver.JmxProcessResourceReader>.put(io.github.adriangnot.resource.archiver.Pid,io.github.adriangnot.resource.archiver.JmxProcessResourceReader)"], "Fixed commit": "42b0dad450634f142c092fb69be7efe7c1cf85ef", "Url": "https://api.github.com/repos/adriangnot/resource-archiver", "Date": "2018-02-18T20:21:37Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (((java.lang.Integer.valueOf(msg)) >= 100000) && ((msg.length()) == 6)) { return true; } } catch (java.lang.Exception e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/1993/buggy-version/app.src.main.java.com.hsu.webot.XposedAdapter.java", "BodyUseAPI": ["java.lang.Integer.valueOf(java.lang.String)", "java.lang.String.length()"], "Fixed commit": "c60791a8a8452a7cc12782243109a81ee96c8259", "Url": "https://api.github.com/repos/wellshsu/Webot", "Date": "2018-03-05T05:47:30Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { args = matcher.group(\"args\").split(\" \"); } catch (java.lang.IllegalArgumentException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6436/buggy-version/src.main.java.com.uhd.client.commands.RequestCommand.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.util.regex.Matcher.group(java.lang.String)"], "Fixed commit": "bbc9dbf02fd72b33367b48eb861844e915561b3a", "Url": "https://api.github.com/repos/JSextonn/restaurant-management", "Date": "2018-04-20T06:42:04Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { resources = loader.getResources(relPath); } catch (java.io.IOException e) { java.lang.String err = \"Unexpected error loading resources\"; throw new jmo.util.Reflector.ReflectorException(err, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5192/buggy-version/src.main.java.jmo.util.Reflector.java", "BodyUseAPI": ["java.lang.ClassLoader.getResources(java.lang.String)"], "Fixed commit": "879167032f171b9006cceb447a90e684fb9d2b44", "Url": "https://api.github.com/repos/Aelphaeis/Jmo", "Date": "2018-04-09T11:47:38Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return robot.finder().findByName(name, type, org.assertj.swing.fixture.AbstractComponentFixture.requireShowing(robot)); } catch (org.assertj.swing.exception.ComponentLookupException e) { robot.cleanUp(); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5045/buggy-version/assertj-swing.src.main.java.org.assertj.swing.fixture.AbstractComponentFixture.java", "BodyUseAPI": ["robot.finder().findByName(java.lang.String,java.lang.Class<? extends C>,boolean)", "org.assertj.swing.core.Robot.finder()", "org.assertj.swing.fixture.AbstractComponentFixture.requireShowing(org.assertj.swing.core.Robot)"], "Fixed commit": "104ca465d116cf755ea36eeae55922049669bbd3", "Url": "https://api.github.com/repos/andrewauclair/assertj-swing", "Date": "2018-03-23T00:51:30Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.util.Scanner reader = new java.util.Scanner(java.lang.System.in); int n = reader.nextInt(); if (n == 0) { playerHit(); if ((playerNum) > 21) { compare(); } }else { reader.close(); break; } } catch (java.lang.Exception e) { java.lang.System.out.println(\"(That's not 0 or 1.)\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/7760/buggy-version/src.simpleBlackjack.Game.java", "BodyUseAPI": ["simpleBlackjack.Game.playerHit()", "java.util.Scanner.close()", "java.util.Scanner.nextInt()", "simpleBlackjack.Game.compare()"], "Fixed commit": "633cec10c128ef7f29272030eadd17ea07629c13", "Url": "https://api.github.com/repos/Frank-Lancaster/SimpleBlackjack", "Date": "2018-08-23T19:07:57Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { xmlInput.close(); } catch (java.lang.Exception ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6427/buggy-version/chpl.chpl-service.src.main.java.gov.healthit.chpl.util.CertificationResultRules.java", "BodyUseAPI": ["java.io.InputStream.close()"], "Fixed commit": "39ecda83bae9e2503f0c759d4a4dc05fe0f12062", "Url": "https://api.github.com/repos/kekey1/chpl-api", "Date": "2018-10-11T16:14:26Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { reader.close(); } catch (java.lang.Exception ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6427/buggy-version/chpl.chpl-service.src.main.java.gov.healthit.chpl.util.FileUtils.java", "BodyUseAPI": ["java.io.BufferedReader.close()"], "Fixed commit": "39ecda83bae9e2503f0c759d4a4dc05fe0f12062", "Url": "https://api.github.com/repos/kekey1/chpl-api", "Date": "2018-10-11T16:14:26Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { cpOldStyle = cpDao.getByChplNumber(muu.getProductNumber()); } catch (java.lang.Exception ex) { gov.healthit.chpl.job.MeaningfulUseUploadJob.LOGGER.warn((((\"Searching for CHPL ID \" + (muu.getProductNumber())) + \" as old style ID and got exception: \") + (ex.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6427/buggy-version/chpl.chpl-service.src.main.java.gov.healthit.chpl.job.MeaningfulUseUploadJob.java", "BodyUseAPI": ["gov.healthit.chpl.dao.CertifiedProductDAO.getByChplNumber(muu.getProductNumber())", "gov.healthit.chpl.domain.MeaningfulUseUserRecord.getProductNumber()"], "Fixed commit": "39ecda83bae9e2503f0c759d4a4dc05fe0f12062", "Url": "https://api.github.com/repos/kekey1/chpl-api", "Date": "2018-10-11T16:14:26Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { cpNewStyle = cpDao.getByChplUniqueId(muu.getProductNumber()); } catch (java.lang.Exception ex) { gov.healthit.chpl.job.MeaningfulUseUploadJob.LOGGER.warn((((\"Searching for CHPL ID \" + (muu.getProductNumber())) + \" as new style ID and got exception: \") + (ex.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6427/buggy-version/chpl.chpl-service.src.main.java.gov.healthit.chpl.job.MeaningfulUseUploadJob.java", "BodyUseAPI": ["gov.healthit.chpl.dao.CertifiedProductDAO.getByChplUniqueId(muu.getProductNumber())", "gov.healthit.chpl.domain.MeaningfulUseUserRecord.getProductNumber()"], "Fixed commit": "39ecda83bae9e2503f0c759d4a4dc05fe0f12062", "Url": "https://api.github.com/repos/kekey1/chpl-api", "Date": "2018-10-11T16:14:26Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { dp = new at.ac.tuwien.sepm.assignment.groupphase.application.dto.DietPlan(dietPlanNameTextField.getText(), kcal.doubleValue(), fats, protein, carbohydrate); dietPlanService.create(dp); } catch (java.lang.Exception ex) { dp = null; throw ex; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5409/buggy-version/src.main.java.at.ac.tuwien.sepm.assignment.groupphase.application.ui.DietPlanController.java", "BodyUseAPI": ["javafx.scene.control.TextField.getText()", "at.ac.tuwien.sepm.assignment.groupphase.application.service.DietPlanService.create(at.ac.tuwien.sepm.assignment.groupphase.application.dto.DietPlan)", "java.lang.Integer.doubleValue()"], "Fixed commit": "f364bfc02c74d48ef66529e8c5946291ab6050b3", "Url": "https://api.github.com/repos/Bernhard-St/sepm-group-assignment", "Date": "2018-06-06T17:49:17Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { notifyGradebookByScoringType(ag, timedAG.getPublishedAssessment()); } catch (org.sakaiproject.tool.assessment.services.GradebookServiceException e) { e.printStackTrace(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/3715/buggy-version/samigo.samigo-app.src.java.org.sakaiproject.tool.assessment.ui.queue.delivery.SubmitTimedAssessmentThread.java", "BodyUseAPI": ["org.sakaiproject.tool.assessment.ui.queue.delivery.SubmitTimedAssessmentThread.notifyGradebookByScoringType(org.sakaiproject.tool.assessment.data.dao.grading.AssessmentGradingData,timedAG.getPublishedAssessment())", "org.sakaiproject.tool.assessment.ui.model.delivery.TimedAssessmentGradingModel.getPublishedAssessment()"], "Fixed commit": "25615b04028010630585c604b0d930b0cffbd1e0", "Url": "https://api.github.com/repos/txstate-etc/sakai", "Date": "2018-01-09T23:03:47Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { final android.graphics.drawable.Drawable d = decorView.getResources().getDrawable(a.resourceId); logD((\"background drawable opacity: \" + (java.lang.Integer.toString(d.getOpacity())))); logD(\"set opaque background drawable\"); drawable = d; } catch (java.lang.Throwable t) { drawable = new android.graphics.drawable.ColorDrawable(android.graphics.Color.BLACK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/3003/buggy-version/app.src.main.java.cn.zhougy0717.xposed.niwatori.ModActivity.java", "BodyUseAPI": ["decorView.getResources().getDrawable(a.resourceId)", "cn.zhougy0717.xposed.niwatori.ModActivity.logD(java.lang.String)", "android.view.View.getResources()", "android.graphics.drawable.Drawable.getOpacity()", "java.lang.Integer.toString(d.getOpacity())", "cn.zhougy0717.xposed.niwatori.ModActivity.logD((\"background drawable opacity: \" + (java.lang.Integer.toString(d.getOpacity()))))"], "Fixed commit": "5f7da40fd520c08c436a250dde7c78b6cbd60451", "Url": "https://api.github.com/repos/zhougy0717/Niwatori", "Date": "2018-03-21T05:54:45Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return decodeJsonMessage(topic, payload); } catch (com.google.protobuf.InvalidProtocolBufferException e) { com.pinterest.secor.util.ProtobufUtil.LOG.info(\"Trying to write protobuf message\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5588/buggy-version/src.main.java.com.pinterest.secor.util.ProtobufUtil.java", "BodyUseAPI": ["com.pinterest.secor.util.ProtobufUtil.decodeJsonMessage(java.lang.String,byte[])"], "Fixed commit": "51e099c4a917bb4f93fbe71359980879d725c241", "Url": "https://api.github.com/repos/sailthru/secor", "Date": "2018-01-17T00:09:28Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { calendar.User user = new calendar.User(this.usernameTextField.getText(), new java.lang.String(this.passwordTextField.getPassword())); calendar.ObjectOutputStream oOS = new calendar.ObjectOutputStream(new calendar.FileOutputStream((((folder + \"\\\\\") + (this.usernameTextField.getText())) + \".bin\"))); oOS.writeObject(user); oOS.close(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/3713/buggy-version/ProDuc.src.calendar.NewUserPanel.java", "BodyUseAPI": ["calendar.ObjectOutputStream.close()", "javax.swing.JTextField.getText()", "calendar.ObjectOutputStream.writeObject(calendar.User)", "javax.swing.JTextField.getText()", "javax.swing.JPasswordField.getPassword()"], "Fixed commit": "48ad7b3f2393f27c1a678821ffb769669be01b0c", "Url": "https://api.github.com/repos/atoverman592/Calendar", "Date": "2018-04-05T02:26:25Z"},
{"Line": "=>835", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { location = spp.getCurrentPosition(); } catch (com.applitools.eyes.selenium.exceptions.EyesDriverOperationException e) { logger.log((\"WARNING: \" + (e.getMessage()))); logger.log(\"Assuming position is 0,0\"); location = new com.applitools.eyes.selenium.Location(0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/3674/buggy-version/eyes.selenium.java.src.main.java.com.applitools.eyes.selenium.Eyes.java", "BodyUseAPI": ["com.applitools.eyes.selenium.ScrollPositionProvider.getCurrentPosition()"], "Fixed commit": "0cbe7998c04e473a96ada5db22c71532c85658bf", "Url": "https://api.github.com/repos/itaibh/eyes.sdk.java3", "Date": "2018-03-09T10:47:24Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { journal.setDateRet(com.model.JournalDAO.convertTimestampToString(rs.getTimestamp(\"DATE_RET\"))); } catch (java.lang.NullPointerException e) { journal.setDateRet(\"NULL\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9243/buggy-version/src.com.model.JournalDAO.java", "BodyUseAPI": ["java.sql.ResultSet.getTimestamp(java.lang.String)", "com.model.JournalDAO.convertTimestampToString(java.sql.Timestamp)", "com.model.Journal.setDateRet(java.lang.String)"], "Fixed commit": "73609b625a5552d44f8c2f8a14f4671d2eacba7e", "Url": "https://api.github.com/repos/ponomareva1/LibraryDB", "Date": "2018-05-19T20:11:18Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { execute(); session.save(); } catch (java.lang.Exception e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/1143/buggy-version/bundle.src.main.java.com.adobe.acs.commons.ondeploy.impl.OnDeployScriptBase.java", "BodyUseAPI": ["javax.jcr.Session.save()", "com.adobe.acs.commons.ondeploy.impl.OnDeployScriptBase.execute()"], "Fixed commit": "a1dc059b7db4e63766dafdbb44683bac3f154dff", "Url": "https://api.github.com/repos/joerghoh/acs-aem-commons", "Date": "2018-02-02T22:10:52Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { myClassLoader.initialize(theModules); } catch (java.lang.Throwable ex) { throw new org.apache.catalina.LifecycleException(\"Failed to initialize TomcatWebAppClassLoader\", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/1486/buggy-version/diet4j-tomcat.src.main.java.org.diet4j.tomcat.TomcatModuleLoader.java", "BodyUseAPI": ["org.diet4j.tomcat.TomcatWebAppClassLoader.initialize(java.lang.Module[])"], "Fixed commit": "4e8e29d0ac024043531d61969959b1166f210125", "Url": "https://api.github.com/repos/diet4j/diet4j", "Date": "2018-03-26T03:31:42Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { eventService.createEvent(event, loggedUser); } catch (java.lang.IllegalArgumentException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6792/buggy-version/src.main.java.com.sap.controllers.MemberController.java", "BodyUseAPI": ["com.sap.service.EventService.createEvent(com.sap.dtos.EventDto,com.sap.models.User)"], "Fixed commit": "711bc3e1eca5ee3d4210bce37e203a023acbb762", "Url": "https://api.github.com/repos/tiagonmello/poc_spring", "Date": "2018-10-08T16:15:52Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { creditSum = ((double) (query.getSingleResult())); } catch (java.lang.NullPointerException e) { creditSum = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/943/buggy-version/data-be.src.main.java.at.accounting_otter.DatabaseAdapterImpl.java", "BodyUseAPI": ["javax.persistence.Query.getSingleResult()"], "Fixed commit": "251e33f386b0faf144e47996d6bf0a1b0c722bc8", "Url": "https://api.github.com/repos/georg-un/Accounting-Otter", "Date": "2018-10-02T19:38:27Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { liabilitySum = ((double) (query.getSingleResult())); } catch (java.lang.NullPointerException e) { liabilitySum = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/943/buggy-version/data-be.src.main.java.at.accounting_otter.DatabaseAdapterImpl.java", "BodyUseAPI": ["javax.persistence.Query.getSingleResult()"], "Fixed commit": "251e33f386b0faf144e47996d6bf0a1b0c722bc8", "Url": "https://api.github.com/repos/georg-un/Accounting-Otter", "Date": "2018-10-02T19:38:27Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { bookThumbnail.loadImageUrl(book.getVolumeInfo().getImageLinks().getSmallThumbnail()); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/7523/buggy-version/app.src.main.java.com.ssilva.task.booklistscreen.adapter.BooksAdapter.java", "BodyUseAPI": ["book.getVolumeInfo().getImageLinks().getSmallThumbnail()", "com.master.glideimageview.GlideImageView.loadImageUrl(book.getVolumeInfo().getImageLinks().getSmallThumbnail())", "book.getVolumeInfo().getImageLinks()", "com.ssilva.task.model.Book.getVolumeInfo()"], "Fixed commit": "9543e58a03c0cddd3a198de08f7274cda4cc6d31", "Url": "https://api.github.com/repos/SergioSilvaLeon/Task", "Date": "2018-04-30T22:41:42Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mNM.cancelAll(); } catch (java.lang.SecurityException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/8154/buggy-version/app.src.main.java.org.noise_planet.noisecapture.MeasurementService.java", "BodyUseAPI": ["android.app.NotificationManager.cancelAll()"], "Fixed commit": "21d8b639dd9864d5927b110ebc2fc473785a97fd", "Url": "https://api.github.com/repos/Ifsttar/NoiseCapture", "Date": "2018-10-19T07:15:56Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.talend.core.runtime.process.ITalendProcessJavaProject codeProject = org.talend.designer.maven.tools.AggregatorPomsHelper.getCodesProject(codeType); org.talend.designer.maven.tools.AggregatorPomsHelper.updateCodeProjectPom(monitor, codeType, codeProject.getProjectPom()); org.eclipse.core.runtime.jobs.Job job = new org.eclipse.core.runtime.jobs.Job((\"Install \" + (codeType.getLabel()))) { @java.lang.Override protected org.eclipse.core.runtime.IStatus run(org.eclipse.core.runtime.IProgressMonitor monitor) { try { org.talend.designer.maven.tools.AggregatorPomsHelper.buildAndInstallCodesProject(monitor, codeType); return org.eclipse.core.runtime.Status.OK_STATUS; } catch (java.lang.Exception e) { return new org.eclipse.core.runtime.Status(org.eclipse.core.runtime.IStatus.ERROR, org.talend.designer.maven.DesignerMavenPlugin.PLUGIN_ID, 1, e.getMessage(), e); } } }; job.setUser(false); job.setPriority(Job.INTERACTIVE); job.schedule(); } catch (java.lang.Exception e) { org.talend.commons.exception.ExceptionHandler.process(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4692/buggy-version/main.plugins.org.talend.designer.maven.src.main.java.org.talend.designer.maven.tools.AggregatorPomsHelper.java", "BodyUseAPI": ["org.talend.designer.maven.tools.AggregatorPomsHelper.buildAndInstallCodesProject(org.eclipse.core.runtime.IProgressMonitor,org.talend.core.model.repository.ERepositoryObjectType)", "org.talend.core.runtime.process.ITalendProcessJavaProject.getProjectPom()", "org.talend.core.model.repository.ERepositoryObjectType.getLabel()", "org.eclipse.core.runtime.jobs.Job.schedule()", "org.talend.designer.maven.tools.AggregatorPomsHelper.updateCodeProjectPom(org.eclipse.core.runtime.IProgressMonitor,org.talend.core.model.repository.ERepositoryObjectType,codeProject.getProjectPom())", "org.eclipse.core.runtime.jobs.Job.setPriority(Job.INTERACTIVE)", "org.talend.designer.maven.tools.AggregatorPomsHelper.getCodesProject(org.talend.core.model.repository.ERepositoryObjectType)", "java.lang.Exception.getMessage()", "org.eclipse.core.runtime.jobs.Job.setUser(boolean)"], "Fixed commit": "798dd0a31780bd925f3df9fd80e69f9725a71c02", "Url": "https://api.github.com/repos/Talend/tcommon-studio-se", "Date": "2018-01-28T06:05:41Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { tmpDoc = builder.parse(musicXmlFile); } catch (org.xml.sax.SAXParseException e) { try { java.io.BufferedReader br = new java.io.BufferedReader(new java.io.FileReader(musicXmlFile)); java.io.BufferedWriter bw = new java.io.BufferedWriter(new java.io.FileWriter(new java.io.File(((musicXmlFile.getAbsolutePath()) + \"fixed\")))); java.lang.String line; int lineNum = 0; while ((line = br.readLine()) != null) { if ((lineNum == 0) || (lineNum > 2)) { bw.write(line); } lineNum++; } br.close(); bw.close(); } catch (java.io.IOException e2) { throw e2; } tmpDoc = builder.parse(new java.io.File(((musicXmlFile.getAbsolutePath()) + \"fixed\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4816/buggy-version/src.metalign.parsing.XMLParser.java", "BodyUseAPI": ["javax.xml.parsers.DocumentBuilder.parse(java.io.File)"], "Fixed commit": "e5e77fe44af9c8a48c79e63622caea345b7c46ed", "Url": "https://api.github.com/repos/apmcleod/met-align", "Date": "2018-10-10T06:45:18Z"},
{"Line": "=>635", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return result.getBoolean(search); } catch (java.lang.NullPointerException ignored) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2941/buggy-version/src.main.java.it.mineblock.mbcore.MySQL.java", "BodyUseAPI": ["java.sql.ResultSet.getBoolean(java.lang.String)"], "Fixed commit": "3c70fa9748a7025328ef8820515650dbfe3be045", "Url": "https://api.github.com/repos/LoreSchaeffer/MBCore", "Date": "2018-01-21T23:33:50Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { type = es.pollitoyeye.vehicles.enums.VehicleType.valueOf(event.getLine(2)); } catch (java.lang.IllegalArgumentException e) { Messages.CMD_INVALID_TYPE.sendTo(player); event.getBlock().breakNaturally(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/1733/buggy-version/src.Vehicraft.Events.SignEvents.java", "BodyUseAPI": ["es.pollitoyeye.vehicles.enums.VehicleType.valueOf(event.getLine(2))", "org.bukkit.event.block.SignChangeEvent.getLine(int)"], "Fixed commit": "d26b6cf6d5c2be5b5d301bdb7c1261bc7c3ef187", "Url": "https://api.github.com/repos/SirCodalot/Vehicraft", "Date": "2018-02-02T14:11:30Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { itemMeta.setDisplayName(((((((me.therealdan.elevators.Elevators.MAIN) + \"Door: \") + (me.therealdan.elevators.Elevators.SECOND)) + (elevator.getDoorMaterial().toString())) + \":\") + (elevator.getDoorData()))); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/549/buggy-version/src.me.therealdan.elevators.mechanics.ElevatorHandler.java", "BodyUseAPI": ["org.bukkit.inventory.meta.ItemMeta.setDisplayName(((((((me.therealdan.elevators.Elevators.MAIN) + \"Door: \") + (me.therealdan.elevators.Elevators.SECOND)) + (elevator.getDoorMaterial().toString())) + \":\") + (elevator.getDoorData())))", "me.therealdan.elevators.mechanics.Elevator.getDoorData()", "elevator.getDoorMaterial().toString()", "me.therealdan.elevators.mechanics.Elevator.getDoorMaterial()"], "Fixed commit": "0093aa9ae6102261c788972a8a470b71516c4ab0", "Url": "https://api.github.com/repos/TheRealDan/Elevators", "Date": "2018-05-23T07:15:56Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { dialog.show(manager, null); } catch (java.lang.IllegalStateException ex) { com.gianlu.commonutils.Logging.log(ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/9702/buggy-version/utils.src.main.java.com.gianlu.commonutils.Dialogs.DialogUtils.java", "BodyUseAPI": ["android.support.v4.app.DialogFragment.show(android.support.v4.app.FragmentManager,<nulltype>)"], "Fixed commit": "291ce64f25562766103429a9b5bc04e4e1433913", "Url": "https://api.github.com/repos/devgianlu/CommonUtils", "Date": "2018-05-26T20:38:17Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { content = getTextFromMessage(m); } catch (java.io.IOException e) { e.printStackTrace(); } catch (Engine.MessagingException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/6450/buggy-version/src.main.java.Engine.Email.java", "BodyUseAPI": ["Engine.Email.getTextFromMessage(Engine.Message)"], "Fixed commit": "7c81e24f36b12f4347cc5701a9b8a40b45f9afba", "Url": "https://api.github.com/repos/CSC480-18F/DataMea", "Date": "2018-10-11T02:28:07Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(fieldName); java.util.regex.Matcher matcher = pattern.matcher(key); if (matcher.matches()) { return entry; } } catch (java.util.regex.PatternSyntaxException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/981/buggy-version/src.main.java.ro.skyah.comparator.matcher.JsonObjectMatcher.java", "BodyUseAPI": ["java.util.regex.Pattern.matcher(java.lang.String)", "java.util.regex.Pattern.compile(java.lang.String)", "java.util.regex.Matcher.matches()"], "Fixed commit": "8bd7df249b635d452978a43cfe8ebee00e4e03a3", "Url": "https://api.github.com/repos/fslev/json-compare", "Date": "2018-07-09T14:51:31Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { model.addAttribute(\"customerPhoneInfo\", engineInfoService.getCustomerPhoneInf(processId)); model.addAttribute(\"processId\", processId); model.addAttribute(\"invalidCode\", invalid); generateCode(processId); } catch (java.lang.Exception e) { return \"error\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/6516/buggy-version/src.main.java.bpmnproject.bpmn.api.RepairController.java", "BodyUseAPI": ["org.springframework.ui.Model.addAttribute(java.lang.String,engineInfoService.getCustomerPhoneInf(processId))", "org.springframework.ui.Model.addAttribute(java.lang.String,java.lang.String)", "org.springframework.ui.Model.addAttribute(java.lang.String,boolean)", "bpmnproject.bpmn.EngineInfoService.getCustomerPhoneInf(java.lang.String)", "bpmnproject.bpmn.api.RepairController.generateCode(java.lang.String)"], "Fixed commit": "473bead512b526d62a7879cfc63bf72e202fb4c9", "Url": "https://api.github.com/repos/weeia-bpmn/bpmn", "Date": "2018-06-11T22:19:28Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { connection = java.sql.DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test\", \"root\", \"\"); } catch (java.sql.SQLException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/2753/buggy-version/src.com.guru.servletwebapp.DBConnection.java", "BodyUseAPI": ["java.sql.DriverManager.getConnection(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "53a08d25cd75e5d7e1681315916d0ef987ed01a4", "Url": "https://api.github.com/repos/Gurubalan-GIT/ServletWebApp", "Date": "2018-06-13T18:34:13Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { return seaMap[x][y]; } catch (java.lang.ArrayIndexOutOfBoundsException e) { return 100; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5058/buggy-version/src.code.Map.java", "BodyUseAPI": [], "Fixed commit": "3182b27db3d857bfef9de84fbf5a407505d292ce", "Url": "https://api.github.com/repos/Ryan-Campbell-PT/ColumbusGame", "Date": "2018-03-16T11:22:31Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { super.paintComponent(g); } catch (com.jogamp.opengl.GLException ex) { if (!(reportedException)) { ex.printStackTrace(); reportedException = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8635/buggy-version/src.main.java.eu.mihosoft.vrl.vrljoglplugin.JOGLCanvas3D.java", "BodyUseAPI": ["com.jogamp.opengl.awt.GLJPanel.paintComponent(java.awt.Graphics)"], "Fixed commit": "a8578479c8e0be6f03491c00c509d05940d140d0", "Url": "https://api.github.com/repos/miho/VRL-JOGL", "Date": "2018-04-21T19:01:44Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.apache.servicecomb.foundation.vertx.metrics.DefaultHttpClientMetrics clientMetrics = ((org.apache.servicecomb.foundation.vertx.metrics.DefaultHttpClientMetrics) (((io.vertx.core.http.impl.HttpClientImpl) (client)).getMetrics())); org.apache.servicecomb.foundation.vertx.metrics.metric.DefaultClientEndpointMetric clientEndpointMetric = clientMetrics.clientEndpointMetricManager.getClientEndpointMetricMap().get(remoteAddress); socketMetric.setEndpointMetric(clientEndpointMetric); } catch (java.lang.Exception e) { org.apache.servicecomb.foundation.vertx.metrics.DefaultHttpClientMetrics.LOGGER.warn(\"if you use http2, there may cause a null pointer exception. {}/{}\", remoteAddress, remoteName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/2571/buggy-version/foundations.foundation-vertx.src.main.java.org.apache.servicecomb.foundation.vertx.metrics.DefaultHttpClientMetrics.java", "BodyUseAPI": ["clientMetrics.clientEndpointMetricManager.getClientEndpointMetricMap().get(io.vertx.core.net.SocketAddress)", "org.apache.servicecomb.foundation.vertx.metrics.metric.DefaultClientEndpointMetricManager.getClientEndpointMetricMap()", "io.vertx.core.http.HttpClient.getMetrics()", "org.apache.servicecomb.foundation.vertx.metrics.metric.DefaultHttpSocketMetric.setEndpointMetric(org.apache.servicecomb.foundation.vertx.metrics.metric.DefaultClientEndpointMetric)"], "Fixed commit": "ec96894c803b76801d69a5386422c07b3d74e47f", "Url": "https://api.github.com/repos/heyile/incubator-servicecomb-java-chassis", "Date": "2018-10-10T09:39:56Z"},
{"Line": "=>1046", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { listFileIndex = fileIndexService.getFileIndexesByTaskId(meeting.getTaskId()); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8515/buggy-version/src.main.java.com.ginkgocap.ywxt.service.meeting.impl.MeetingServiceImpl.java", "BodyUseAPI": ["com.ginkgocap.ywxt.service.meeting.impl.Meeting.getTaskId()", "com.ginkgocap.parasol.file.service.FileIndexService.getFileIndexesByTaskId(meeting.getTaskId())"], "Fixed commit": "3f98568b547a81651615ef7993432e25b873d44a", "Url": "https://api.github.com/repos/ximenfeixue/phoenix-hyserver", "Date": "2018-01-10T08:31:02Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { defaultValue = bundle.getString(key); } catch (java.util.MissingResourceException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/3336/buggy-version/src.main.java.x1.hiking.utils.ConfigurationValueProducer.java", "BodyUseAPI": ["java.util.ResourceBundle.getString(java.lang.String)"], "Fixed commit": "4f3a0c0eac547f8efb75191fe84343ab1d5d7c46", "Url": "https://api.github.com/repos/kifj/hikingtracks", "Date": "2018-05-10T18:39:47Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { for (int i = 0; i < (aryObjectNames.length); i++) { aryObjectNames[i] = new javax.management.ObjectName(objectNames[i]); } } catch (javax.management.MalformedObjectNameException | java.lang.NullPointerException e) { org.exist.management.client.JMXtoXML.LOG.warn((\"Error in initialization: \" + (e.getMessage())), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/3555/buggy-version/src.org.exist.management.client.JMXtoXML.java", "BodyUseAPI": [], "Fixed commit": "b1b4af6c91775cdb45366ec1deab96ecbbb3a43a", "Url": "https://api.github.com/repos/eXist-db/exist", "Date": "2018-09-02T11:52:35Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.io.BufferedReader br = new java.io.BufferedReader(new java.io.FileReader(f)); java.lang.String line = \"\"; while ((line = br.readLine()) != null) { try { java.lang.String[] p = line.split(\";\"); add(new Schueler(p[0], java.time.LocalDate.parse(p[1]))); } catch (java.lang.Exception ex) { java.lang.System.out.println(line); } } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/2078/buggy-version/SeriellizeIntro.src.SchuelerBl.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "SchuelerBl.add(Schueler)", "java.time.LocalDate.parse(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.io.BufferedReader.readLine()"], "Fixed commit": "106edc8af81684fe62e0d8ae014ae0288d25e450", "Url": "https://api.github.com/repos/gradoc15/Jg3_005_SerializeIntro", "Date": "2018-09-26T10:57:48Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { bl.save(f); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/2078/buggy-version/SeriellizeIntro.src.SchuelerBl.java", "BodyUseAPI": ["SchuelerBl.save(java.io.File)"], "Fixed commit": "106edc8af81684fe62e0d8ae014ae0288d25e450", "Url": "https://api.github.com/repos/gradoc15/Jg3_005_SerializeIntro", "Date": "2018-09-26T10:57:48Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return javax.ws.rs.core.Response.temporaryRedirect(new java.net.URI(((((((edu.virginia.lib.content.ContentMediator.getHost()) + ((authpath != null) && (!(authpath.equals(\"\"))) ? \"/\" + authpath : \"\")) + \"/\") + id) + \"/\") + (java.net.URLEncoder.encode(files[0].getName(), \"UTF-8\"))))).build(); } catch (java.io.UnsupportedEncodingException e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7055/buggy-version/src.main.java.edu.virginia.lib.content.ContentMediator.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "javax.ws.rs.core.Response.temporaryRedirect(new java.net.URI(((((((edu.virginia.lib.content.ContentMediator.getHost()) + ((authpath != null) && (!(authpath.equals(\"\"))) ? \"/\" + authpath : \"\")) + \"/\") + id) + \"/\") + (java.net.URLEncoder.encode(files[0].getName(), \"UTF-8\"))))).build()", "edu.virginia.lib.content.ContentMediator.getHost()", "java.io.File.getName()", "java.net.URLEncoder.encode(java.lang.String,java.lang.String)", "javax.ws.rs.core.Response.temporaryRedirect(java.net.URI)"], "Fixed commit": "03a38123b0988436696247bb725718212ebc704e", "Url": "https://api.github.com/repos/uvalib/digital-content", "Date": "2018-05-31T15:32:36Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return new cc.zengtian.game.baodatui.vm.GameVM(gameService.reconnectGame(getUserId())); } catch (java.lang.Exception e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/3421/buggy-version/src.main.java.cc.zengtian.game.baodatui.controller.GameController.java", "BodyUseAPI": ["cc.zengtian.game.baodatui.service.GameService.reconnectGame(getUserId())", "cc.zengtian.game.baodatui.controller.GameController.getUserId()"], "Fixed commit": "b74ee76b23666c7d9056f8d3559e5f1e66a6c1a3", "Url": "https://api.github.com/repos/zt1106/baodatui", "Date": "2018-08-19T09:30:56Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { sex = java.lang.Boolean.parseBoolean(java.lang.String.valueOf(userDataSnapshot.child(\"userSex\").getValue())); } catch (java.lang.Exception e) { sex = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/4282/buggy-version/app.src.main.java.max.convives.UsersActivity.java", "BodyUseAPI": ["java.lang.Boolean.parseBoolean(java.lang.String)", "java.lang.String.valueOf(userDataSnapshot.child(\"userSex\").getValue())", "userDataSnapshot.child(\"userSex\").getValue()", "com.google.firebase.database.DataSnapshot.child(java.lang.String)"], "Fixed commit": "e55b9db353d7b2622590aada9634884a151ffe1d", "Url": "https://api.github.com/repos/MaximSt85/convives", "Date": "2018-03-09T10:57:05Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { userLatitude = java.lang.Double.parseDouble(java.lang.String.valueOf(userDataSnapshot.child(\"userLatitude\").getValue())); } catch (java.lang.Exception e) { userLatitude = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/4282/buggy-version/app.src.main.java.max.convives.UsersActivity.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)", "com.google.firebase.database.DataSnapshot.child(java.lang.String)", "java.lang.String.valueOf(userDataSnapshot.child(\"userLatitude\").getValue())", "userDataSnapshot.child(\"userLatitude\").getValue()"], "Fixed commit": "e55b9db353d7b2622590aada9634884a151ffe1d", "Url": "https://api.github.com/repos/MaximSt85/convives", "Date": "2018-03-09T10:57:05Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { userLongitude = java.lang.Double.parseDouble(java.lang.String.valueOf(userDataSnapshot.child(\"userLongitude\").getValue())); } catch (java.lang.Exception e) { userLongitude = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/4282/buggy-version/app.src.main.java.max.convives.UsersActivity.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)", "java.lang.String.valueOf(userDataSnapshot.child(\"userLongitude\").getValue())", "userDataSnapshot.child(\"userLongitude\").getValue()", "com.google.firebase.database.DataSnapshot.child(java.lang.String)"], "Fixed commit": "e55b9db353d7b2622590aada9634884a151ffe1d", "Url": "https://api.github.com/repos/MaximSt85/convives", "Date": "2018-03-09T10:57:05Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { isUserOnline = java.lang.Boolean.parseBoolean(java.lang.String.valueOf(userDataSnapshot.child(\"isUserOnline\").getValue())); } catch (java.lang.Exception e) { isUserOnline = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/4282/buggy-version/app.src.main.java.max.convives.UsersActivity.java", "BodyUseAPI": ["java.lang.Boolean.parseBoolean(java.lang.String)", "com.google.firebase.database.DataSnapshot.child(java.lang.String)", "java.lang.String.valueOf(userDataSnapshot.child(\"isUserOnline\").getValue())", "userDataSnapshot.child(\"isUserOnline\").getValue()"], "Fixed commit": "e55b9db353d7b2622590aada9634884a151ffe1d", "Url": "https://api.github.com/repos/MaximSt85/convives", "Date": "2018-03-09T10:57:05Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { declaredField = pojoType.getDeclaredField(pojoFields[i]); } catch (java.lang.NoSuchFieldException e) { throw new java.lang.IllegalArgumentException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/9329/buggy-version/flink-java.src.main.java.org.apache.flink.api.java.io.CsvReader.java", "BodyUseAPI": ["java.lang.Class<T>.getDeclaredField(java.lang.String)"], "Fixed commit": "88f7772eb609656ddfbc25ca7ebea3ec4fef1d9d", "Url": "https://api.github.com/repos/DmitryKober/flink", "Date": "2018-04-09T17:25:53Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return jsonFactory.looseDeserialize(defaultDDMFormFieldParameterValue, java.lang.String[].class); } catch (java.lang.Exception e) { return com.liferay.portal.kernel.util.StringUtil.split(defaultDDMFormFieldParameterValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/4212/buggy-version/dynamic-data-mapping-type-checkbox-multiple.src.main.java.com.liferay.dynamic.data.mapping.type.checkbox.multiple.internal.CheckboxMultipleDDMFormFieldValueRequestParameterRetriever.java", "BodyUseAPI": ["com.liferay.portal.kernel.json.JSONFactory.looseDeserialize(java.lang.String,java.lang.Class)"], "Fixed commit": "e8ae6a5951717d94d285b00fc7cb284beb41b828", "Url": "https://api.github.com/repos/SamZiemer/com-liferay-dynamic-data-mapping", "Date": "2018-02-20T22:56:39Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (com.company.Product product : productArray) { java.lang.System.out.println((((((((((\"Name:\" + (product.getProductName())) + \"\\n\") + \"Price: $\") + (product.getQuantity())) + \"\\n\") + \"Quantity: \") + (product.getQuantity())) + \"Description: \") + (product.getDescription()))); } this.totalPrice(productArray); } catch (java.lang.Exception e) { java.lang.System.out.println(\"Your shopping cart is currently empty.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5837/buggy-version/src.com.company.ShoppingCart.java", "BodyUseAPI": ["com.company.Product.getDescription()", "com.company.Product.getProductName()", "com.company.Product.getQuantity()", "com.company.Product.getQuantity()", "java.io.PrintStream.println((((((((((\"Name:\" + (product.getProductName())) + \"\\n\") + \"Price: $\") + (product.getQuantity())) + \"\\n\") + \"Quantity: \") + (product.getQuantity())) + \"Description: \") + (product.getDescription())))", "com.company.ShoppingCart.totalPrice(java.util.ArrayList<com.company.Product>)"], "Fixed commit": "533279438990d1556061690581239fd349f72512", "Url": "https://api.github.com/repos/02-2018GroupRepo/ShoppingCart-tcampb-utahrim", "Date": "2018-03-01T17:48:21Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { activity.startActivityForResult(preference.getIntent(), com.labs.dm.auto_tethering.activity.MainActivity.ON_CHANGE_SSID); } catch (android.content.ActivityNotFoundException ex) { android.widget.Toast.makeText(activity, R.string.cannot_load_wifihotspot, Toast.LENGTH_LONG).show(); com.labs.dm.auto_tethering.MyLog.e(\"Hotspot\", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/6373/buggy-version/auto-tethering-app.src.main.java.com.labs.dm.auto_tethering.activity.helpers.RegisterGeneralListenerHelper.java", "BodyUseAPI": ["android.preference.Preference.getIntent()", "com.labs.dm.auto_tethering.activity.helpers.RegisterGeneralListenerHelper.5.startActivityForResult(preference.getIntent(),com.labs.dm.auto_tethering.activity.MainActivity.ON_CHANGE_SSID)"], "Fixed commit": "bb66bc7c136c10df361f0c617c86d2009085cf5c", "Url": "https://api.github.com/repos/danielmroczka/auto-tethering", "Date": "2018-09-17T00:51:18Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { gui.GrimmLauncher.isSolverExisting(\"abssol.jar\"); } catch (exceptions.CSPSolverNotFoundException e) { java.lang.System.out.println(e.getMessage()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/2411/buggy-version/src.gui.GrimmLauncher.java", "BodyUseAPI": ["gui.GrimmLauncher.isSolverExisting(java.lang.String)"], "Fixed commit": "8b860ba640fe6b1db5235f9e2385fe3a5475ebc9", "Url": "https://api.github.com/repos/ferdjoukh/grimm", "Date": "2018-09-27T08:27:16Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.opsmatters.core.provider.NewRelicManager.logger.info(\"Getting the key transactions\"); cache.applications().addKeyTransactions(apiClient.keyTransactions().list()); } catch (com.opsmatters.newrelic.api.exceptions.ErrorResponseException e) { if ((e.getStatus()) == 403) com.opsmatters.core.provider.NewRelicManager.logger.warning((\"Error in get key transactions: \" + (e.getMessage()))); else throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7749/buggy-version/src.main.java.com.opsmatters.core.provider.NewRelicManager.java", "BodyUseAPI": ["apiClient.keyTransactions().list()", "com.opsmatters.newrelic.api.NewRelicApi.keyTransactions()", "java.util.logging.Logger.info(java.lang.String)", "cache.applications().addKeyTransactions(apiClient.keyTransactions().list())", "com.opsmatters.core.provider.NewRelicCache.applications()"], "Fixed commit": "5c3b1c518fb43bb4a2713099f4b81aef21a7a0cd", "Url": "https://api.github.com/repos/opsmatters/opsmatters-core", "Date": "2018-04-13T20:51:30Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { company.updatePercentageChange(java.lang.Double.parseDouble(boxes.get(5).html())); } catch (java.lang.Exception e) { company.updatePercentageChange(0.0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/1806/buggy-version/virtualassistant.data.stocks.Scrapper.java", "BodyUseAPI": ["virtualassistant.data.stocks.Company.updatePercentageChange(double)", "boxes.get(5).html()", "java.lang.Double.parseDouble(boxes.get(5).html())", "org.jsoup.select.Elements.get(int)"], "Fixed commit": "473b28d940b57f13b53521973df1c1be23bbdea8", "Url": "https://api.github.com/repos/matthewnoyes/pink-fluffy-unicorns", "Date": "2018-02-27T11:39:51Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { data = new io.github.binaryoverload.JSONConfig(parser.parse(json).getAsJsonObject()); } catch (java.lang.Exception e1) { FlareBot.LOGGER.error(Markers.TAG_DEVELOPER, ((((((((\"Failed to load GuildWrapper!!\\n\" + \"Guild ID: \") + id) + \"\\n\") + \"Guild JSON: \") + json) + \"\\n\") + \"Error: \") + (e.getMessage())), e); throw new java.lang.IllegalArgumentException(((\"Invalid JSON! '\" + json) + \"'\"), e1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8966/buggy-version/src.main.java.stream.flarebot.flarebot.objects.GuildWrapperLoader.java", "BodyUseAPI": ["com.google.gson.JsonParser.parse(java.lang.String)", "parser.parse(json).getAsJsonObject()"], "Fixed commit": "ce28fe267e9d178e0e69e8b3d9299e2e63bfd6e0", "Url": "https://api.github.com/repos/FlareBot/FlareBot", "Date": "2018-03-16T13:35:58Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mBeanServer = org.jboss.mx.util.MBeanServerLocator.locateJBoss(); } catch (java.lang.NoClassDefFoundError e) { mBeanServer = java.lang.management.ManagementFactory.getPlatformMBeanServer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/2537/buggy-version/resources.smpp.ra.src.main.java.org.restcomm.slee.resource.smpp.SmppServerResourceAdaptor.java", "BodyUseAPI": ["org.jboss.mx.util.MBeanServerLocator.locateJBoss()"], "Fixed commit": "741811a3a796031d6dcdfd69ef76221acd15491a", "Url": "https://api.github.com/repos/vetss/jain-slee.smpp", "Date": "2018-01-09T13:14:46Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (org.pixeltime.enchantmentsenhance.version.VersionManager.isUpToDate()) { getLogger().info(SettingsManager.lang.getString(\"update.updateToDate\")); }else { getLogger().warning(SettingsManager.lang.getString(\"update.outdated\")); new org.bukkit.scheduler.BukkitRunnable() { @java.lang.Override public void run() { for (org.bukkit.entity.Player p : org.bukkit.Bukkit.getOnlinePlayers()) { if (((p.hasPermission(\"Enchantments.*\")) || (p.hasPermission(\"*\"))) || (p.isOp())) { org.pixeltime.enchantmentsenhance.Main.getNotifierManager().call(new org.pixeltime.enchantmentsenhance.Notification(p, SettingsManager.lang.getString(\"update.updateToDate\"))); } } } }.runTaskTimer(this, 120L, 36000L); } } catch (java.lang.IllegalArgumentException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/3719/buggy-version/EnchantmentsEnhance-Core.src.main.java.org.pixeltime.enchantmentsenhance.Main.java", "BodyUseAPI": ["org.pixeltime.enchantmentsenhance.Main.getNotifierManager()", "org.pixeltime.enchantmentsenhance.Main.getLogger()", "SettingsManager.lang.getString(java.lang.String)", "SettingsManager.lang.getString(java.lang.String)", "org.bukkit.scheduler.BukkitRunnable.runTaskTimer(org.pixeltime.enchantmentsenhance.Main,long,long)", "getLogger().warning(SettingsManager.lang.getString(\"update.outdated\"))", "org.bukkit.entity.Player.hasPermission(java.lang.String)", "org.bukkit.entity.Player.hasPermission(java.lang.String)", "org.bukkit.entity.Player.isOp()", "getLogger().info(SettingsManager.lang.getString(\"update.updateToDate\"))", "org.pixeltime.enchantmentsenhance.Main.getLogger()", "org.bukkit.Bukkit.getOnlinePlayers()", "SettingsManager.lang.getString(java.lang.String)", "org.pixeltime.enchantmentsenhance.NotifierManager.call(org.pixeltime.enchantmentsenhance.Notification)", "org.pixeltime.enchantmentsenhance.version.VersionManager.isUpToDate()"], "Fixed commit": "05de3dfee25fc367c20f3372cd2ffbf4fabf30a5", "Url": "https://api.github.com/repos/25/EnchantmentsEnhance", "Date": "2018-09-02T23:43:10Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { docName.setText(displayName); } catch (java.lang.NullPointerException ex) { docName.setText(\"Name not specified\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/6326/buggy-version/app.src.main.java.edu.cnm.deepdive.heydoc.fragments.ProfileFragment.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "cba40b622527873eee697ffe29fae2f44382bae3", "Url": "https://api.github.com/repos/deep-dive-coding-java-cohort-3/HeyDoc", "Date": "2018-04-02T19:50:29Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((result.getImageRef()) == null) { docPic.setImageResource(R.drawable.userman); }else { docPic.setImageResource(R.drawable.doclogo); } } catch (java.lang.NullPointerException ex) { docPic.setImageResource(R.drawable.userman); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/6326/buggy-version/app.src.main.java.edu.cnm.deepdive.heydoc.fragments.ProfileFragment.java", "BodyUseAPI": ["android.widget.ImageView.setImageResource(R.drawable.userman)", "edu.cnm.deepdive.heydoc.db.models.Profile.getImageRef()", "android.widget.ImageView.setImageResource(R.drawable.doclogo)"], "Fixed commit": "cba40b622527873eee697ffe29fae2f44382bae3", "Url": "https://api.github.com/repos/deep-dive-coding-java-cohort-3/HeyDoc", "Date": "2018-04-02T19:50:29Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (com.synet.tool.rsc.util.CheckEntityUtils.check(obj)) { save(obj); }else { return 0; } } catch (java.lang.Exception e) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/3125/buggy-version/com.synet.tool.rsc.src.com.synet.tool.rsc.service.BaseService.java", "BodyUseAPI": ["com.synet.tool.rsc.service.BaseService.save(java.lang.Object)", "com.synet.tool.rsc.util.CheckEntityUtils.check(java.lang.Object)"], "Fixed commit": "c8ef7deb5a586f6e6137935ce10fd9e1281b45b0", "Url": "https://api.github.com/repos/ChalmersA/RSC50", "Date": "2018-10-09T03:25:00Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { activity.getContentResolver().registerContentObserver(co.tinode.tindroid.ContactListFragment.ContactsQuery.CONTENT_URI, true, mContactsObserver); getLoaderManager().initLoader(co.tinode.tindroid.ContactListFragment.ContactsQuery.PHEMIM_QUERY_ID, null, mPhEmImLoaderCallback); } catch (java.lang.SecurityException ex) { android.util.Log.d(co.tinode.tindroid.ContactListFragment.TAG, \"Missing permission\", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/4139/buggy-version/app.src.main.java.co.tinode.tindroid.ContactListFragment.java", "BodyUseAPI": ["getLoaderManager().initLoader(int,<nulltype>,co.tinode.tindroid.ContactListFragment.PhEmImLoaderCallback)", "android.app.Activity.getContentResolver()", "co.tinode.tindroid.ContactListFragment.getLoaderManager()", "activity.getContentResolver().registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)"], "Fixed commit": "9fde8cef696ca5bd9b60ebcfedbc925f14589e5a", "Url": "https://api.github.com/repos/tinode/tindroid", "Date": "2018-08-24T05:38:48Z"},
{"Line": "=>1067", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { this.root = tree.root; } finally { write.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/558/buggy-version/core.org.wso2.carbon.user.core.src.main.java.org.wso2.carbon.user.core.authorization.PermissionTree.java", "BodyUseAPI": [], "Fixed commit": "c6320feb95808988005e810c4e5f3f249e777688", "Url": "https://api.github.com/repos/dushansilva/carbon-kernel", "Date": "2018-06-26T05:29:42Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { uri = android.support.v4.content.FileProvider.getUriForFile(this, BuildConfig.APPLICATION_ID, createImageFile()); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/9310/buggy-version/08_ImageCropper_Starter_Oreo.app.src.main.java.android.mi.ur.de.imagecropper.MainActivity.java", "BodyUseAPI": ["android.mi.ur.de.imagecropper.MainActivity.createImageFile()", "android.support.v4.content.FileProvider.getUriForFile(android.mi.ur.de.imagecropper.MainActivity,BuildConfig.APPLICATION_ID,java.io.File)"], "Fixed commit": "df2b4aa2c5363a4ca05e1b0f51265d9be594052c", "Url": "https://api.github.com/repos/cetceeve/uni_android_course", "Date": "2018-06-05T21:36:04Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.apache.http.HttpHost proxy = getProxy(); httpclient = getHttpClient(proxy); requestConfig = getRequestConfig(proxy); getOptions().setRequestConfig(requestConfig); } catch (java.io.IOException e) { jenkinsci.plugins.telegrambot.telegram.TelegramBot.LOGGER.log(java.util.logging.Level.SEVERE, \"TelegramBot: Failed to set proxy\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7094/buggy-version/src.main.java.jenkinsci.plugins.telegrambot.telegram.TelegramBot.java", "BodyUseAPI": ["jenkinsci.plugins.telegrambot.telegram.TelegramBot.getRequestConfig(org.apache.http.HttpHost)", "jenkinsci.plugins.telegrambot.telegram.TelegramBot.getOptions()", "jenkinsci.plugins.telegrambot.telegram.TelegramBot.getHttpClient(org.apache.http.HttpHost)", "getOptions().setRequestConfig(org.apache.http.client.config.RequestConfig)", "jenkinsci.plugins.telegrambot.telegram.TelegramBot.getProxy()"], "Fixed commit": "904227feba5280780a9fbc76ab70a354f2917868", "Url": "https://api.github.com/repos/nikitabelonogov/telegram-notifications-plugin", "Date": "2018-03-21T15:19:03Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.actions.execute(); } catch (java.lang.InterruptedException e) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7979/buggy-version/src.main.java.uk.co.jpawlak.clicker.threads.WorkingThread.java", "BodyUseAPI": ["uk.co.jpawlak.clicker.actions.Actions.execute()"], "Fixed commit": "605bc96e0b74975a2401862fbcbdf6d1642bdb1f", "Url": "https://api.github.com/repos/Jarcionek/Clicker", "Date": "2018-06-09T10:52:19Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(20); } catch (java.lang.InterruptedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/6963/buggy-version/src.main.java.jive3.TangoNode.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "3fae8a0179728349cdeb8e8d4357dca526294e65", "Url": "https://api.github.com/repos/tango-controls/jive", "Date": "2018-10-29T13:48:18Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.craftercms.studio.impl.v1.repository.job.RebuildRepositoryMetadata.logger.debug((\"Deleting git log data for site \" + site)); contentRepository.deleteGitLogForSite(site); } catch (java.lang.Exception error) { org.craftercms.studio.impl.v1.repository.job.RebuildRepositoryMetadata.logger.error((\"Failed to delete git log data for site \" + site)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/8676/buggy-version/src.main.java.org.craftercms.studio.impl.v1.repository.job.RebuildRepositoryMetadata.java", "BodyUseAPI": ["org.craftercms.studio.api.v1.repository.ContentRepository.deleteGitLogForSite(java.lang.String)", "org.craftercms.studio.api.v1.log.Logger.debug(java.lang.String)"], "Fixed commit": "224f87a0d853ce926469c48998e1181a553c8fae", "Url": "https://api.github.com/repos/dejan-brkic/studio", "Date": "2018-05-15T17:42:00Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { register(lob_key); } catch (java.io.IOException ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6083/buggy-version/src.main.java.fileTree.models.NewWatchService.java", "BodyUseAPI": ["fileTree.models.NewWatchService.register(java.nio.file.Path)"], "Fixed commit": "981b55049de8ac879db91827f24636095b59d0ff", "Url": "https://api.github.com/repos/Alexander-Lukacs/VFS_GUI", "Date": "2018-02-13T15:16:31Z"},
{"Line": "=>919", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.List<com.easyfitness.DAO.Profile> lList = mDbProfils.getAllProfils(); mCurrentProfile = lList.get(0); setCurrentProfil(mCurrentProfile.getName()); } catch (java.lang.IndexOutOfBoundsException e) { this.CreateNewProfil(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/5542/buggy-version/app.src.main.java.com.easyfitness.MainActivity.java", "BodyUseAPI": ["com.easyfitness.MainActivity.setCurrentProfil(mCurrentProfile.getName())", "com.easyfitness.DAO.DAOProfil.getAllProfils()", "com.easyfitness.DAO.Profile.getName()", "java.util.List<com.easyfitness.DAO.Profile>.get(int)"], "Fixed commit": "c079b17f4971a86ab5609b5ef848073a4acd2430", "Url": "https://api.github.com/repos/brodeurlv/fastnfitness", "Date": "2018-02-11T13:05:31Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { restTemplate.postForObject(\"//beersupplier/order\", new de.innogy.emobility.springtraining.beershop.controller.OrderDTO(clientName, 1000, beerItem.getName()), de.innogy.emobility.springtraining.beershop.controller.DeliveryDTO.class); } catch (java.lang.Exception e) { log.error(\"Exception\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/3731/buggy-version/beershop.src.main.java.de.innogy.emobility.springtraining.beershop.service.SupplyService.java", "BodyUseAPI": ["org.springframework.web.client.RestTemplate.postForObject(java.lang.String,de.innogy.emobility.springtraining.beershop.controller.OrderDTO,java.lang.Class)", "de.innogy.emobility.springtraining.beershop.model.BeerItem.getName()"], "Fixed commit": "1987f998709e56ebd96f408ee6478c4069194751", "Url": "https://api.github.com/repos/dwanaki/spring_boot_training", "Date": "2018-07-11T14:43:49Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { con.close(); } catch (java.lang.Exception e) { fr.guiet.automationserver.dataaccess.DbManager._logger.error(\"Error while closing PG connection\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/8947/buggy-version/automationserver.ASDataAccess.src.main.java.fr.guiet.automationserver.dataaccess.DbManager.java", "BodyUseAPI": ["java.sql.Connection.close()"], "Fixed commit": "53a19c41f18e42e3e634a206680b698135aa3b03", "Url": "https://api.github.com/repos/fguiet/AutomationServer", "Date": "2018-04-16T13:25:13Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { graphCache.closeGraph(graphPath); } catch (java.lang.Throwable t) { org.jboss.windup.web.services.service.WindupExecutionService.LOG.log(java.util.logging.Level.FINE, (((\"Could not close the graph at: \" + graphPath) + \" due to: \") + (t.getMessage())), t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6816/buggy-version/services.src.main.java.org.jboss.windup.web.services.service.WindupExecutionService.java", "BodyUseAPI": ["org.jboss.windup.web.addons.websupport.rest.graph.GraphCache.closeGraph(java.nio.file.Path)"], "Fixed commit": "2208f57f29734e5f78f52194fea8104edb498ee8", "Url": "https://api.github.com/repos/jsight/windup-web", "Date": "2018-02-08T03:27:02Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { baos.close(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/2286/buggy-version/core.src.main.java.unice.miage.pa.engine.ClassLoader.java", "BodyUseAPI": ["java.io.ByteArrayOutputStream.close()"], "Fixed commit": "9e8eca0b1bdfaaea8b6d5510ab19c15d8df547f2", "Url": "https://api.github.com/repos/alisonTemin/Projet_PA", "Date": "2018-01-10T19:48:24Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.amazonaws.auth.AWSCredentials credentials = org.pentaho.amazon.s3.S3CredentialsProvider.getAWSCredentials(); if (credentials != null) { org.apache.commons.vfs2.auth.StaticUserAuthenticator userAuthenticator = new org.apache.commons.vfs2.auth.StaticUserAuthenticator(null, credentials.getAWSAccessKeyId(), credentials.getAWSSecretKey()); org.apache.commons.vfs2.impl.DefaultFileSystemConfigBuilder.getInstance().setUserAuthenticator(opts, userAuthenticator); } } catch (com.amazonaws.SdkClientException e) { throw new org.apache.commons.vfs2.FileSystemException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/8132/buggy-version/legacy.src.main.java.org.pentaho.amazon.s3.S3NVfsFileChooserDialog.java", "BodyUseAPI": ["com.amazonaws.auth.AWSCredentials.getAWSSecretKey()", "org.apache.commons.vfs2.impl.DefaultFileSystemConfigBuilder.getInstance()", "org.apache.commons.vfs2.impl.DefaultFileSystemConfigBuilder.getInstance().setUserAuthenticator(org.apache.commons.vfs2.FileSystemOptions,org.apache.commons.vfs2.auth.StaticUserAuthenticator)", "com.amazonaws.auth.AWSCredentials.getAWSAccessKeyId()", "org.pentaho.amazon.s3.S3CredentialsProvider.getAWSCredentials()"], "Fixed commit": "8b71e8bc3335cbff6512fde7a6675705243bc2d3", "Url": "https://api.github.com/repos/pentaho/big-data-plugin", "Date": "2018-10-11T13:22:03Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { loadMIDlet(); } catch (java.lang.Exception e) { android.widget.Toast.makeText(this, R.string.error, Toast.LENGTH_SHORT).show(); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/8194/buggy-version/app.src.main.java.javax.microedition.shell.MicroActivity.java", "BodyUseAPI": ["javax.microedition.shell.MicroActivity.loadMIDlet()"], "Fixed commit": "f4559fa2cbd94435bc2b563d735ce0195cbe4650", "Url": "https://api.github.com/repos/nikita36078/J2ME-Loader", "Date": "2018-01-28T16:04:20Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { redskyResponse = restTemplate.getForObject(url, com.johnbwhitejr.target.casestudy.beans.RedskyResponse.class); } catch (org.springframework.web.client.HttpClientErrorException e) { throw new com.johnbwhitejr.target.casestudy.exceptions.RedskyException(\"Unable to get product info from Redsky\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/8951/buggy-version/src.main.java.com.johnbwhitejr.target.casestudy.utils.RedskyClient.java", "BodyUseAPI": ["org.springframework.web.client.RestTemplate.getForObject(java.lang.String,java.lang.Class)"], "Fixed commit": "c0931fddefeb70a8b9c3abe15806a3867ef9a1fb", "Url": "https://api.github.com/repos/jimbo831/TargetCaseStudy", "Date": "2018-07-26T04:08:11Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { setSeedInternal(shortenedSeed); } finally { lock.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6768/buggy-version/betterrandom.src.main.java.io.github.pr0methean.betterrandom.prng.CellularAutomatonRandom.java", "BodyUseAPI": ["io.github.pr0methean.betterrandom.prng.CellularAutomatonRandom.setSeedInternal(byte[])"], "Fixed commit": "82192b958c637ccc68238d54c27208b8416aef99", "Url": "https://api.github.com/repos/Pr0methean/BetterRandom", "Date": "2018-05-22T03:17:05Z"},
{"Line": "=>1984", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { final go_spatial.com.github.tegola.mobile.android.ux.TegolaCapabilities tegolaCapabilities = parse_tegola_capabilities_json(s_tegola_url_root, json); switch (purpose) { case Constants.Strings.INTENT.ACTION.NOTIFICATION.MVT_SERVER.HTTP_URL_API.READ_JSON.EXTRA_KEY.PURPOSE.VALUE.LOAD_MAP.STRING : { if ((tegolaCapabilities.parsed.maps.length) > 0) { mbgl_map_start(tegolaCapabilities); if (!(s_tegola_url_root.contains(\"localhost\"))) m_btn_stream_tiles.setText(getString(R.string.close_tile_stream)); } break; } } } catch (org.json.JSONException e) { OnMVTServerJSONReadFailed(s_tegola_url_root, json_url_endpoint, purpose, e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9112/buggy-version/android.TMHarness.TMHarnessUX.src.main.java.go_spatial.com.github.tegola.mobile.android.ux.MainActivity.java", "BodyUseAPI": ["go_spatial.com.github.tegola.mobile.android.ux.MainActivity.parse_tegola_capabilities_json(java.lang.String,java.lang.String)", "java.lang.String.contains(java.lang.String)", "go_spatial.com.github.tegola.mobile.android.ux.MainActivity.getString(R.string.close_tile_stream)", "go_spatial.com.github.tegola.mobile.android.ux.MainActivity.mbgl_map_start(go_spatial.com.github.tegola.mobile.android.ux.TegolaCapabilities)", "android.widget.Button.setText(getString(R.string.close_tile_stream))"], "Fixed commit": "d16ed0796ea7d0e869165c3eb4a0fa553e345298", "Url": "https://api.github.com/repos/go-spatial/tegola-mobile", "Date": "2018-06-05T07:57:49Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { v.performClick(); int pixelColor = colorWheelBM.getPixel(((int) (event.getX())), ((int) (event.getY()))); appData.edit().putInt(\"redValue\", android.graphics.Color.red(pixelColor)).apply(); appData.edit().putInt(\"greenValue\", android.graphics.Color.green(pixelColor)).apply(); appData.edit().putInt(\"blueValue\", android.graphics.Color.blue(pixelColor)).apply(); return true; } catch (java.lang.Exception e) { e.printStackTrace(); appData.edit().putInt(\"redValue\", 255).apply(); appData.edit().putInt(\"greenValue\", 255).apply(); appData.edit().putInt(\"blueValue\", 255).apply(); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7525/buggy-version/app.src.main.java.com.pinar.controladorled.ledControler.java", "BodyUseAPI": ["android.graphics.Bitmap.getPixel(((int) (event.getX())),((int) (event.getY())))", "android.graphics.Color.red(int)", "android.view.View.performClick()", "android.view.MotionEvent.getY()", "appData.edit().putInt(java.lang.String,android.graphics.Color.red(pixelColor))", "appData.edit().putInt(\"blueValue\", android.graphics.Color.blue(pixelColor)).apply()", "appData.edit().putInt(\"redValue\", android.graphics.Color.red(pixelColor)).apply()", "appData.edit().putInt(java.lang.String,android.graphics.Color.blue(pixelColor))", "appData.edit().putInt(\"greenValue\", android.graphics.Color.green(pixelColor)).apply()", "android.graphics.Color.blue(int)", "android.content.SharedPreferences.edit()", "appData.edit().putInt(java.lang.String,android.graphics.Color.green(pixelColor))", "android.view.MotionEvent.getX()", "android.content.SharedPreferences.edit()", "android.graphics.Color.green(int)", "android.content.SharedPreferences.edit()"], "Fixed commit": "0a04784140a2b6f2d3c24372ebf13a5a0fbc2473", "Url": "https://api.github.com/repos/pinarruiz/controladorLed", "Date": "2018-09-27T18:37:14Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return com.elementary.tasks.core.utils.TimeUtil.GMT_DATE_FORMAT.format(new java.util.Date()); } catch (java.lang.Exception e) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/4891/buggy-version/app.src.main.java.com.elementary.tasks.core.utils.TimeUtil.java", "BodyUseAPI": ["java.text.SimpleDateFormat.format(java.util.Date)"], "Fixed commit": "04a24173ec4a602a35fcd26d6961c6608b60c3f7", "Url": "https://api.github.com/repos/naz013/Reminder", "Date": "2018-06-13T16:50:54Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return com.elementary.tasks.core.utils.TimeUtil.GMT_DATE_FORMAT.format(calendar.getTime()); } catch (java.lang.Exception e) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/4891/buggy-version/app.src.main.java.com.elementary.tasks.core.utils.TimeUtil.java", "BodyUseAPI": ["java.util.Calendar.getTime()", "java.text.SimpleDateFormat.format(java.util.Date)"], "Fixed commit": "04a24173ec4a602a35fcd26d6961c6608b60c3f7", "Url": "https://api.github.com/repos/naz013/Reminder", "Date": "2018-06-13T16:50:54Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { s.sendMessage(new org.springframework.web.socket.TextMessage(jsonInString.getBytes(java.nio.charset.StandardCharsets.UTF_8))); } catch (java.lang.Exception ex) { com.web.service.imp.WebSocketServiceImpl.logger.info((((\"Error sent message session id = \" + (s.getId())) + \", exception: \") + (ex.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9631/buggy-version/src.main.java.com.web.service.imp.WebSocketServiceImpl.java", "BodyUseAPI": ["org.springframework.web.socket.WebSocketSession.sendMessage(org.springframework.web.socket.TextMessage)", "java.lang.String.getBytes(java.nio.charset.Charset)"], "Fixed commit": "952b8e85a30cf819f0c0de50acc3d4f882b77484", "Url": "https://api.github.com/repos/alex-krugliak/remote-monitor", "Date": "2018-03-13T14:38:16Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(_heartBeatUpdateRetrySleep); } catch (java.lang.InterruptedException e) { com.cloud.hypervisor.kvm.resource.KVMHAMonitor.s_logger.debug(\"[ignored] interupted between heartbeat retries.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/942/buggy-version/plugins.hypervisors.kvm.src.com.cloud.hypervisor.kvm.resource.KVMHAMonitor.java", "BodyUseAPI": ["java.lang.Thread.sleep(com.cloud.hypervisor.kvm.resource.KVMHAMonitor.Monitor)"], "Fixed commit": "9797754e47ab63ca6b833ec9deaa065de4130f72", "Url": "https://api.github.com/repos/Slair1/cloudstack", "Date": "2018-02-28T00:36:35Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { recipeListViewModel = android.arch.lifecycle.ViewModelProviders.of(this).get(com.avivamiriammandel.bakeme.aac.RecipeListViewModel.class); } catch (java.lang.NullPointerException e) { throw new java.lang.NullPointerException((e + \"null\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6297/buggy-version/app.src.main.java.com.avivamiriammandel.bakeme.ui.RecipeActivity.java", "BodyUseAPI": ["android.arch.lifecycle.ViewModelProviders.of(this).get(java.lang.Class)", "android.arch.lifecycle.ViewModelProviders.of(com.avivamiriammandel.bakeme.ui.RecipeActivity)"], "Fixed commit": "85edfa9307f0ad84be359d09cd9e9c04a3af6086", "Url": "https://api.github.com/repos/AvivaMiriam/BakeMe", "Date": "2018-07-08T15:11:51Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { recipeDao.insertRecipe(recipeForInsert); android.util.Log.d(android.support.constraint.Constraints.TAG, \"run: Insert\"); } catch (java.lang.NullPointerException e) { throw new java.lang.NullPointerException((e + \"null Insert\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6297/buggy-version/app.src.main.java.com.avivamiriammandel.bakeme.aac.RecipeRepository.java", "BodyUseAPI": ["com.avivamiriammandel.bakeme.aac.RecipeDao.insertRecipe(com.avivamiriammandel.bakeme.model.Recipe)", "android.util.Log.d(android.support.constraint.Constraints.TAG,java.lang.String)"], "Fixed commit": "85edfa9307f0ad84be359d09cd9e9c04a3af6086", "Url": "https://api.github.com/repos/AvivaMiriam/BakeMe", "Date": "2018-07-08T15:11:51Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { recipeDao.deleteRecipe(recipeForDelete); } catch (java.lang.NullPointerException e) { throw new java.lang.NullPointerException((e + \"null Delete\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6297/buggy-version/app.src.main.java.com.avivamiriammandel.bakeme.aac.RecipeRepository.java", "BodyUseAPI": ["com.avivamiriammandel.bakeme.aac.RecipeDao.deleteRecipe(com.avivamiriammandel.bakeme.model.Recipe)"], "Fixed commit": "85edfa9307f0ad84be359d09cd9e9c04a3af6086", "Url": "https://api.github.com/repos/AvivaMiriam/BakeMe", "Date": "2018-07-08T15:11:51Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { long start = java.lang.System.currentTimeMillis(); org.springframework.vault.support.VaultResponse response = template.read(path); com.sequenceiq.cloudbreak.service.VaultService.LOGGER.debug(\"Vault read took {} ms\", ((java.lang.System.currentTimeMillis()) - start)); if ((response != null) && ((response.getData()) != null)) { return java.lang.String.valueOf(response.getData().get(\"secret\")); } } catch (java.lang.IllegalArgumentException ie) { com.sequenceiq.cloudbreak.service.VaultService.LOGGER.info(\"Failed to fetch the secret, because it's an invalid path. Return the path.\"); } catch (java.lang.Exception e) { com.sequenceiq.cloudbreak.service.VaultService.LOGGER.error(\"Failed to fetch the secret\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/4494/buggy-version/cloud-common.src.main.java.com.sequenceiq.cloudbreak.service.VaultService.java", "BodyUseAPI": ["java.lang.System.currentTimeMillis()", "org.springframework.vault.support.VaultResponse.getData()", "org.springframework.vault.core.VaultTemplate.read(java.lang.String)", "java.lang.System.currentTimeMillis()", "org.springframework.vault.support.VaultResponse.getData()", "response.getData().get(java.lang.String)", "org.slf4j.Logger.debug(java.lang.String,long)", "java.lang.String.valueOf(response.getData().get(\"secret\"))"], "Fixed commit": "ba1ba1431c5c0532c39009269279e45a600b303b", "Url": "https://api.github.com/repos/hortonworks/cloudbreak", "Date": "2018-10-31T16:20:11Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { if ((msg instanceof io.netty.handler.codec.http.HttpResponse) && (msg instanceof io.netty.handler.codec.http.HttpContent)) { responseStatus = ((io.netty.handler.codec.http.HttpResponse) (msg)).status(); responseContent = ((io.netty.handler.codec.http.HttpContent) (msg)).content().toString(CharsetUtil.UTF_8); }else { unexpectedErrorMessage = \"Unexpected response message class: \" + (msg.getClass()); } } finally { io.netty.util.ReferenceCountUtil.release(msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/4609/buggy-version/common2.src.main.java.org.glowroot.common2.repo.util.HttpClient.java", "BodyUseAPI": ["java.lang.Object.content()", "java.lang.Object.getClass()", "((io.netty.handler.codec.http.HttpContent) (msg)).content().toString(CharsetUtil.UTF_8)", "java.lang.Object.status()"], "Fixed commit": "aa257a2a6c29cc093805dcbd538aefa0f02400d9", "Url": "https://api.github.com/repos/trask/glowroot", "Date": "2018-05-09T23:03:25Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { getActivity().finish(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/3402/buggy-version/opensrp-app.src.main.java.org.ei.opensrp.view.fragment.SecuredFragment.java", "BodyUseAPI": ["org.ei.opensrp.view.fragment.SecuredFragment.1.getActivity()", "getActivity().finish()"], "Fixed commit": "a152b4453a88526132a2cde05993e1158c3a5cae", "Url": "https://api.github.com/repos/OpenSRP/opensrp-client", "Date": "2018-02-06T06:57:55Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { CONFIDENCE_THRESHOLD = java.lang.Double.parseDouble(confidence); } catch (java.lang.NumberFormatException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/1424/buggy-version/src.main.java.at.ac.oeaw.routes.Distanbol.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "8e0da8bfcd76660bd6c7a4fb5dbffa639b92b6a1", "Url": "https://api.github.com/repos/acdh-oeaw/Distanbol", "Date": "2018-09-07T14:16:57Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((DDinput.getText().length()) == 1) { inputDate = df.parse((((0 + (DDinput.getText())) + (MMinput.getText())) + (YYYYinput.getText()))); }else if ((MMinput.getText().length()) == 1) { inputDate = df.parse(((((DDinput.getText()) + 0) + (MMinput.getText())) + (YYYYinput.getText()))); }else if (((DDinput.getText().length()) == 1) && ((MMinput.getText().length()) == 1)) { inputDate = df.parse(((((0 + (DDinput.getText())) + 0) + (MMinput.getText())) + (YYYYinput.getText()))); } } catch (java.lang.Exception e) { e.getStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6360/buggy-version/src.sample.Checking.java", "BodyUseAPI": ["javafx.scene.control.TextField.getText()", "DDinput.getText().length()", "javafx.scene.control.TextField.getText()", "javafx.scene.control.TextField.getText()", "MMinput.getText().length()", "javafx.scene.control.TextField.getText()", "javafx.scene.control.TextField.getText()", "DDinput.getText().length()", "java.text.DateFormat.parse((((0 + (DDinput.getText())) + (MMinput.getText())) + (YYYYinput.getText())))", "java.text.DateFormat.parse(((((DDinput.getText()) + 0) + (MMinput.getText())) + (YYYYinput.getText())))", "javafx.scene.control.TextField.getText()", "javafx.scene.control.TextField.getText()", "javafx.scene.control.TextField.getText()", "javafx.scene.control.TextField.getText()", "javafx.scene.control.TextField.getText()", "MMinput.getText().length()", "java.text.DateFormat.parse(((((0 + (DDinput.getText())) + 0) + (MMinput.getText())) + (YYYYinput.getText())))", "javafx.scene.control.TextField.getText()", "javafx.scene.control.TextField.getText()", "javafx.scene.control.TextField.getText()"], "Fixed commit": "5189de1895bab76bbfff4df29238921dd2738bc3", "Url": "https://api.github.com/repos/PatrykDz95/Card-Checker", "Date": "2018-01-30T15:07:59Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (data != null) { if ((data[0]) != null) { if ((data[0].cities) != null) { for (com.example.eliavmenachi.myapplication.Entities.City currCity : data[0].cities) { if (currCity != null) { MainAppLocalDb.db.CityMallAndStoreDao().insertCities(currCity); } } for (com.example.eliavmenachi.myapplication.Entities.Mall currMall : data[0].malls) { if (currMall != null) { MainAppLocalDb.db.CityMallAndStoreDao().insertMalls(currMall); } } for (com.example.eliavmenachi.myapplication.Entities.Store currStore : data[0].stores) { if (currStore != null) { MainAppLocalDb.db.CityMallAndStoreDao().insertStores(currStore); } } } } } } catch (java.lang.Exception e) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/2989/buggy-version/app.src.main.java.com.example.eliavmenachi.myapplication.Models.CityMallAndStore.CityMallAndStoreAsyncDao.java", "BodyUseAPI": ["MainAppLocalDb.db.CityMallAndStoreDao()", "MainAppLocalDb.db.CityMallAndStoreDao().insertStores(com.example.eliavmenachi.myapplication.Entities.Store)", "MainAppLocalDb.db.CityMallAndStoreDao()", "MainAppLocalDb.db.CityMallAndStoreDao()", "MainAppLocalDb.db.CityMallAndStoreDao().insertCities(com.example.eliavmenachi.myapplication.Entities.City)", "MainAppLocalDb.db.CityMallAndStoreDao().insertMalls(com.example.eliavmenachi.myapplication.Entities.Mall)"], "Fixed commit": "63c45ab58b8c6e295afaf6cf70755255aee7dcf8", "Url": "https://api.github.com/repos/OrForte/Sale-App", "Date": "2018-08-07T22:06:09Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { super.close(); } finally { org.apache.storm.metric.timed.TimedResource.getMeasured().close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/5823/buggy-version/storm-server.src.main.java.org.apache.storm.metric.timed.TimedResource.java", "BodyUseAPI": ["org.apache.storm.metric.timed.Timed<T>.close()"], "Fixed commit": "fcd8ca9a44014e9f02d51d018285752baaf8d8b0", "Url": "https://api.github.com/repos/zd-project/storm", "Date": "2018-06-28T22:06:59Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mailboxManager.createMailbox(path, session); } catch (org.apache.james.mailbox.exception.MailboxExistsException e) { org.apache.james.transport.mailets.delivery.MailboxAppender.LOGGER.info(\"Mailbox {} have been created concurrently\", path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6188/buggy-version/server.mailet.mailets.src.main.java.org.apache.james.transport.mailets.delivery.MailboxAppender.java", "BodyUseAPI": ["org.apache.james.mailbox.MailboxManager.createMailbox(org.apache.james.mailbox.model.MailboxPath,org.apache.james.mailbox.MailboxSession)"], "Fixed commit": "2cc467f11ae9320dce79137fae0b934933360d28", "Url": "https://api.github.com/repos/linagora/james-project", "Date": "2018-07-12T03:58:29Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { names = com.gmail.therealkingvictoria.factions.FactionHandler.factionConfig.getConfigurationSection(\"factions\").getKeys(false); } catch (java.lang.Exception e) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9024/buggy-version/src.main.java.com.gmail.therealkingvictoria.factions.FactionHandler.java", "BodyUseAPI": ["com.gmail.therealkingvictoria.factions.FactionHandler.factionConfig.getConfigurationSection(\"factions\").getKeys(boolean)", "org.bukkit.configuration.file.FileConfiguration.getConfigurationSection(java.lang.String)"], "Fixed commit": "2d137f8ff07a833be202db9074685ec0f2ba3d57", "Url": "https://api.github.com/repos/KingVictoria/CivFactions", "Date": "2018-04-29T22:25:39Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { obj.put(\"alert\", \"phone\"); java.lang.String payLoad = obj.toString(); aws.publish(payLoad, \"sensors/info\"); } catch (org.json.JSONException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/3053/buggy-version/SmartApp.app.src.main.java.com.example.oitzh.myapplication.MainActivity.java", "BodyUseAPI": ["org.json.JSONObject.toString()", "org.json.JSONObject.put(java.lang.String,java.lang.String)", "com.example.oitzh.myapplication.Aws.publish(java.lang.String,java.lang.String)"], "Fixed commit": "a3f80ac453a8ae6852cf561bd3ca90a40e73d8b6", "Url": "https://api.github.com/repos/oitzhaky/Project2_Smart_Home", "Date": "2018-01-21T20:16:41Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { shuffles = java.lang.Integer.parseInt(commandArray.get(1)); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/1590/buggy-version/src.main.java.com.puzzle15.command.api.CommandFactory.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.util.List<java.lang.String>.get(int)"], "Fixed commit": "3619e7425aa900c189cec0936486bbe9d3dbe6f6", "Url": "https://api.github.com/repos/yavivi/puzzle-15", "Date": "2018-03-25T22:56:25Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.getCallback().onHandleError(message, ((com.mario.entity.message.DecodingErrorMessage) (message)).getDecodingFailedCause()); } catch (java.lang.Exception ex) { getLogger().error(\"Message decode error, but cannnot send error response to client\", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3419/buggy-version/Mario.src.main.java.com.mario.worker.MessageHandlingWorker.java", "BodyUseAPI": ["com.mario.worker.MessageHandlingWorker.getCallback()", "com.mario.entity.MessageHandleCallback.onHandleError(com.mario.entity.message.Message,((com.mario.entity.message.DecodingErrorMessage) (message)).getDecodingFailedCause())", "com.mario.entity.message.Message.getDecodingFailedCause()"], "Fixed commit": "edd4cd22a0facf82fd5579c93da49e876b5376dc", "Url": "https://api.github.com/repos/bachden/mario3", "Date": "2018-05-03T09:14:52Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.getCallback().onHandleError(message, e); } catch (java.lang.Exception ex) { getLogger().error(\"Message handling error, but cannnot send error response to client\", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3419/buggy-version/Mario.src.main.java.com.mario.worker.MessageHandlingWorker.java", "BodyUseAPI": ["com.mario.worker.MessageHandlingWorker.getCallback()", "com.mario.entity.MessageHandleCallback.onHandleError(com.mario.entity.message.Message,java.lang.Exception)"], "Fixed commit": "edd4cd22a0facf82fd5579c93da49e876b5376dc", "Url": "https://api.github.com/repos/bachden/mario3", "Date": "2018-05-03T09:14:52Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.getCallback().onHandleComplete(message, result); } catch (java.lang.Exception ex) { getLogger().error(\"Error while handling complete on message: {}\", message.getData(), ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3419/buggy-version/Mario.src.main.java.com.mario.worker.MessageHandlingWorker.java", "BodyUseAPI": ["com.mario.worker.MessageHandlingWorker.getCallback()", "com.mario.entity.MessageHandleCallback.onHandleComplete(com.mario.entity.message.Message,com.nhb.common.data.PuElement)"], "Fixed commit": "edd4cd22a0facf82fd5579c93da49e876b5376dc", "Url": "https://api.github.com/repos/bachden/mario3", "Date": "2018-05-03T09:14:52Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { answer = answers.get(i).getElementsByClass(\"answercell post-layout--right\").first(); commands = answer.getElementsByTag(\"pre\"); } catch (java.lang.Exception e) { JSON.setCommand(null, i); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/2117/buggy-version/NL2BashWebScraper.src.main.java.client.ScrapingUtilities.java", "BodyUseAPI": ["org.jsoup.nodes.Element.getElementsByTag(java.lang.String)", "org.jsoup.select.Elements.get(int)", "answers.get(i).getElementsByClass(\"answercell post-layout--right\").first()", "answers.get(i).getElementsByClass(java.lang.String)"], "Fixed commit": "aa39c0124282b698cd472ac9e6117b26b3088f22", "Url": "https://api.github.com/repos/oisindoherty/nl2bash", "Date": "2018-06-03T02:13:39Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String infohash = com.alibaba.fastjson.JSON.parseObject(metadata).getString(\"infohash\"); request.add(new org.elasticsearch.action.index.IndexRequest(index, type, infohash).source(metadata, XContentType.JSON)); } catch (java.lang.Throwable t) { com.killxdcj.aiyawocao.ops.ESUtils.LOGGER.error(\"index error, {}\", metadata); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/1605/buggy-version/aiyawocao.ops.src.main.java.com.killxdcj.aiyawocao.ops.ESUtils.java", "BodyUseAPI": ["org.elasticsearch.action.index.IndexRequest.source(java.lang.String,XContentType.JSON)", "com.alibaba.fastjson.JSON.parseObject(metadata).getString(java.lang.String)", "com.alibaba.fastjson.JSON.parseObject(java.lang.String)", "org.elasticsearch.action.bulk.BulkRequest.add(new org.elasticsearch.action.index.IndexRequest(index, type, infohash).source(metadata, XContentType.JSON))"], "Fixed commit": "61b33e960f36d3bdeff9f37b8b738c41e597dd65", "Url": "https://api.github.com/repos/killxdcj/aiyawocao", "Date": "2018-09-28T13:37:35Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.squareup.picasso.Picasso.get().load(url).into(image); } catch (java.lang.Exception e) { android.util.Log.e(\"picasso\", e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/2750/buggy-version/app.src.main.java.com.company.mat.Fragments.RestaurantBannerFragment.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.get().load(url).into(android.widget.ImageView)", "com.squareup.picasso.Picasso.get()", "com.squareup.picasso.Picasso.get().load(java.lang.String)"], "Fixed commit": "14b88e116a1e120d1d792cfc69df101755fd84d9", "Url": "https://api.github.com/repos/alassadi/Mat", "Date": "2018-03-19T22:32:52Z"},
{"Line": "=>615", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { currentTemperatureField.setAlpha(0); currentTemperatureField.animate().alpha(1).setDuration(400); cityField.setAlpha(0); cityField.animate().alpha(1).setDuration(400); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/9861/buggy-version/app.src.main.java.app.ys.weather_ping21.Main.java", "BodyUseAPI": ["android.widget.TextView.setAlpha(int)", "currentTemperatureField.animate().alpha(1).setDuration(int)", "android.widget.TextView.animate()", "android.widget.TextView.setAlpha(int)", "cityField.animate().alpha(int)", "currentTemperatureField.animate().alpha(int)", "android.widget.TextView.animate()", "cityField.animate().alpha(1).setDuration(int)"], "Fixed commit": "1299f90efb27251b748d3ab2abeb144decf6d9b2", "Url": "https://api.github.com/repos/ys-git/Weather_ping2.1", "Date": "2018-08-18T22:11:08Z"},
{"Line": "=>844", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.location.LocationManager locationManager = ((android.location.LocationManager) (getSystemService(app.ys.weather_ping21.LOCATION_SERVICE))); if (locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)) { if ((mCurrentLocation) != null) { lat = mCurrentLocation.getLatitude(); lon = mCurrentLocation.getLongitude(); android.util.Log.i(\"WP\", \"Location Fetched\"); s = java.lang.String.valueOf(lat); q = java.lang.String.valueOf(lon); android.util.Log.i(\"WP\", ((((\"Getting Lat nad Lon\" + \"Lat= \") + (s)) + \" Long= \") + (q))); final java.lang.String URL = (((\"https://api.waqi.info/feed/geo:\" + (lat)) + \";\") + (lon)) + \"/?token=7b119f79e8a4e507e6f9719a1015f4ac0a0cb3d4\"; ex(); new app.ys.weather_ping21.Main.FetchDataTask().execute(URL); if ((switches.getInt(\"Toggle2\", (-1))) == 1) { stopService(new android.content.Intent(this, app.ys.weather_ping21.ForegroundService.class)); android.content.Intent startIntent = new android.content.Intent(this, app.ys.weather_ping21.ForegroundService.class); startIntent.setAction(Constants.ACTION.STARTFOREGROUND_ACTION); startService(startIntent); } } }else { android.support.design.widget.Snackbar.make(findViewById(android.R.id.content), \"Please Enable Location\", Snackbar.LENGTH_LONG).show(); } } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/9861/buggy-version/app.src.main.java.app.ys.weather_ping21.Main.java", "BodyUseAPI": ["android.location.Location.getLatitude()", "android.location.Location.getLongitude()", "android.util.Log.i(java.lang.String,java.lang.String)", "android.support.design.widget.Snackbar.make(findViewById(android.R.id.content), \"Please Enable Location\", Snackbar.LENGTH_LONG).show()", "app.ys.weather_ping21.Main.startService(android.content.Intent)", "app.ys.weather_ping21.Main.FetchDataTask.execute(java.lang.String)", "android.content.SharedPreferences.getInt(java.lang.String,int)", "android.util.Log.i(java.lang.String,java.lang.String)", "app.ys.weather_ping21.Main.ex()", "app.ys.weather_ping21.Main.stopService(android.content.Intent)", "app.ys.weather_ping21.Main.getSystemService(app.ys.weather_ping21.LOCATION_SERVICE)", "android.location.LocationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)", "java.lang.String.valueOf(double)", "android.support.design.widget.Snackbar.make(findViewById(android.R.id.content),java.lang.String,Snackbar.LENGTH_LONG)", "java.lang.String.valueOf(double)", "app.ys.weather_ping21.Main.findViewById(android.R.id.content)", "android.content.Intent.setAction(Constants.ACTION.STARTFOREGROUND_ACTION)"], "Fixed commit": "1299f90efb27251b748d3ab2abeb144decf6d9b2", "Url": "https://api.github.com/repos/ys-git/Weather_ping2.1", "Date": "2018-08-18T22:11:08Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.wso2.carbon.secvault.internal.SecureVaultDataHolder.getInstance().setBundleContext(bundleContext); org.wso2.carbon.secvault.internal.SecureVaultActivator.logger.debug(\"Starting Secure Vault bundle\"); org.wso2.carbon.secvault.internal.SecureVaultActivator.logger.debug(\"Initializing Secure Vault config...\"); java.nio.file.Path secureVaultYAMLPath = org.wso2.carbon.utils.Utils.getRuntimeConfigPath().resolve(Constants.DEPLOYMENT_CONFIG_YAML); org.wso2.carbon.secvault.internal.SecureVaultDataHolder.getInstance().setSecureVaultConfiguration(org.wso2.carbon.secvault.SecureVaultUtils.getSecureVaultConfig(secureVaultYAMLPath).orElseThrow(() -> new org.wso2.carbon.secvault.exception.SecureVaultException((\"Error occurred when obtaining \" + \"secure vault configuration.\")))); org.wso2.carbon.secvault.internal.SecureVaultActivator.logger.debug(\"Secure vault config successfully initialized\"); } catch (java.lang.Throwable throwable) { org.wso2.carbon.secvault.internal.SecureVaultActivator.logger.error((\"Error occurred when initializing secure vault \" + (throwable.getMessage())), throwable); throw new org.wso2.carbon.secvault.exception.SecureVaultException((\"Error occurred when initializing secure vault \" + (throwable.getMessage())), throwable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8738/buggy-version/components.org.wso2.carbon.secvault.src.main.java.org.wso2.carbon.secvault.internal.SecureVaultActivator.java", "BodyUseAPI": ["org.wso2.carbon.secvault.internal.SecureVaultDataHolder.getInstance().setBundleContext(org.osgi.framework.BundleContext)", "org.wso2.carbon.secvault.internal.SecureVaultDataHolder.getInstance()", "org.slf4j.Logger.debug(java.lang.String)", "org.slf4j.Logger.debug(java.lang.String)", "org.slf4j.Logger.debug(java.lang.String)", "org.wso2.carbon.secvault.internal.SecureVaultDataHolder.getInstance()", "org.wso2.carbon.secvault.internal.SecureVaultDataHolder.getInstance().setSecureVaultConfiguration(org.wso2.carbon.secvault.SecureVaultUtils.getSecureVaultConfig(secureVaultYAMLPath).orElseThrow(() -> new org.wso2.carbon.secvault.exception.SecureVaultException((\"Error occurred when obtaining \" + \"secure vault configuration.\"))))", "org.wso2.carbon.utils.Utils.getRuntimeConfigPath()", "org.wso2.carbon.secvault.SecureVaultUtils.getSecureVaultConfig(secureVaultYAMLPath).orElseThrow(() -> new org.wso2.carbon.secvault.exception.SecureVaultException((\"Error occurred when obtaining \" + \"secure vault configuration.\")))", "org.wso2.carbon.secvault.SecureVaultUtils.getSecureVaultConfig(java.nio.file.Path)", "org.wso2.carbon.utils.Utils.getRuntimeConfigPath().resolve(Constants.DEPLOYMENT_CONFIG_YAML)"], "Fixed commit": "dbfd48fed615dfa169557cf8ee0ef111d423e4ea", "Url": "https://api.github.com/repos/ksdperera/carbon-secvault", "Date": "2018-09-10T19:46:50Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { value2 = amount.getValue(); } catch (java.lang.NullPointerException npe) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4331/buggy-version/src.Utilities.Purse.java", "BodyUseAPI": ["Valuables.Valuable.getValue()"], "Fixed commit": "e35f9ce01c588c0c5bbeab440bbca92642a517e5", "Url": "https://api.github.com/repos/OOP2018/coinpurse-bankkeez", "Date": "2018-02-22T03:33:06Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { process.waitFor(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/7302/buggy-version/src.main.java.com.objectcomputing.greenloader.GreenLoader.java", "BodyUseAPI": ["java.lang.Process.waitFor()"], "Fixed commit": "3d43082a143bb1cd500831ab55e13108f37f5d7a", "Url": "https://api.github.com/repos/oci-pronghorn/GreenLoader", "Date": "2018-05-17T14:06:55Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { words = scnr.next(); toNum = scnr.nextInt(); } catch (java.util.NoSuchElementException e) { java.lang.System.out.println((\"Incorrect command, please ente\" + \"r b followed by separate numbers\")); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8035/buggy-version/src.Project4.Mix.java", "BodyUseAPI": ["java.util.Scanner.next()", "java.util.Scanner.nextInt()"], "Fixed commit": "3162c16e2a7da74e59ca69984728086ae8cec7c0", "Url": "https://api.github.com/repos/Rand3rino/MixandUnMixPrj4", "Date": "2018-04-12T02:55:51Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { dataPoints.add(new com.jjoe64.graphview.series.DataPoint(datelist.get(i), java.lang.Double.parseDouble(templist.get(i)))); series.appendData(dataPoints.get(i), true, 220); } catch (java.lang.Exception ex) { android.util.Log.d(\"ProcessFinish\", (\"ERROR : \" + (ex.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/729/buggy-version/app.src.main.java.byob.beersnob6.DataAnalyticsActivity.java", "BodyUseAPI": ["com.jjoe64.graphview.series.LineGraphSeries<com.jjoe64.graphview.series.DataPoint>.appendData(dataPoints.get(i),boolean,int)", "java.util.ArrayList<java.util.Date>.get(int)", "java.util.ArrayList<java.lang.String>.get(int)", "java.util.ArrayList<com.jjoe64.graphview.series.DataPoint>.add(com.jjoe64.graphview.series.DataPoint)", "java.lang.Double.parseDouble(java.lang.String)", "java.util.ArrayList<com.jjoe64.graphview.series.DataPoint>.get(int)"], "Fixed commit": "4dec11315fa54161c07bdf3841691015be9c5767", "Url": "https://api.github.com/repos/nmofid/BeerSnobOfficial", "Date": "2018-01-31T22:11:43Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { cloudEventSource.select(new io.streamzi.cloudevents.cdi.EventTypeQualifier(eventType)).fire(ce); io.streamzi.cloudevents.kafka.KafkaCloudEventConsumer.logger.info(\"Dispatched to CDI event system\"); } catch (java.lang.Exception e) { io.streamzi.cloudevents.kafka.KafkaCloudEventConsumer.logger.log(java.util.logging.Level.SEVERE, \"Error submitting CDI event\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/15/buggy-version/kafka.src.main.java.io.streamzi.cloudevents.kafka.KafkaCloudEventConsumer.java", "BodyUseAPI": ["javax.enterprise.event.Event<io.streamzi.cloudevents.CloudEvent<?>>.select(io.streamzi.cloudevents.cdi.EventTypeQualifier)", "cloudEventSource.select(new io.streamzi.cloudevents.cdi.EventTypeQualifier(eventType)).fire(io.streamzi.cloudevents.CloudEvent<?>)", "java.util.logging.Logger.info(java.lang.String)"], "Fixed commit": "d0e3209f254f4f9e7dba9d1387dcf5213941eb25", "Url": "https://api.github.com/repos/sjwoodman/jcloudevents", "Date": "2018-06-19T13:29:08Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { toTopic(config.failedTopic(), event.mid(), event.getJson()); } catch (java.lang.Exception ex) { org.ekstep.ep.samza.task.TelemetryValidatorSink.LOGGER.error(null, java.text.MessageFormat.format(\"EXCEPTION. PASSING EVENT MID {0} THROUGH FROM FAILED TOPIC. EXCEPTION: \", event.mid()), ex.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6206/buggy-version/data-pipeline.telemetry-validator.src.main.java.org.ekstep.ep.samza.task.TelemetryValidatorSink.java", "BodyUseAPI": ["org.ekstep.ep.samza.task.TelemetryValidatorSink.toTopic(config.failedTopic(),event.mid(),event.getJson())", "org.ekstep.ep.samza.domain.Event.mid()", "org.ekstep.ep.samza.task.TelemetryValidatorConfig.failedTopic()", "org.ekstep.ep.samza.domain.Event.getJson()"], "Fixed commit": "292320fd8494f2f4d233941deacff97962441ba1", "Url": "https://api.github.com/repos/project-sunbird/sunbird-data-pipeline", "Date": "2018-10-17T18:10:06Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { toTopic(config.failedTopic(), event.mid(), event.getJson()); } catch (java.lang.Exception ex) { org.ekstep.ep.samza.task.TelemetryValidatorSink.LOGGER.error(null, java.text.MessageFormat.format(\"EXCEPTION. PASSING EVENT MID {0} THROUGH FROM FAILED TOPIC. EXCEPTION: \", event.mid()), ex.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6206/buggy-version/data-pipeline.telemetry-validator.src.main.java.org.ekstep.ep.samza.task.TelemetryValidatorSink.java", "BodyUseAPI": ["org.ekstep.ep.samza.task.TelemetryValidatorSink.toTopic(config.failedTopic(),event.mid(),event.getJson())", "org.ekstep.ep.samza.domain.Event.getJson()", "org.ekstep.ep.samza.task.TelemetryValidatorConfig.failedTopic()", "org.ekstep.ep.samza.domain.Event.mid()"], "Fixed commit": "292320fd8494f2f4d233941deacff97962441ba1", "Url": "https://api.github.com/repos/project-sunbird/sunbird-data-pipeline", "Date": "2018-10-17T18:10:06Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { formattedConversionValue = (mDecimalFormatter.format(conversionValue).equals(((\"0\" + (mDecimalSeparator)) + \"00\"))) ? \"0\" : mDecimalFormatter.format(conversionValue); } catch (java.lang.IllegalArgumentException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6891/buggy-version/app.src.main.java.com.nicoqueijo.android.currencyconverter.adapters.ActiveCurrenciesAdapter.java", "BodyUseAPI": ["java.text.DecimalFormat.format(java.math.BigDecimal)", "java.lang.String.equals(java.lang.String)", "java.text.DecimalFormat.format(java.math.BigDecimal)"], "Fixed commit": "768da1f786fe3c981e314113d8aa51019f7a5c15", "Url": "https://api.github.com/repos/nicoqueijo/Android-Currency-Converter", "Date": "2018-09-23T20:09:32Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { bundle = resultObj.get(\"them\").getAsJsonObject().get(\"public_keys\").getAsJsonObject().get(\"primary\").getAsJsonObject().get(\"bundle\").getAsString(); } catch (java.lang.NullPointerException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4087/buggy-version/src.main.java.org.keychat.net.client.KeyChatClientApp.java", "BodyUseAPI": ["resultObj.get(\"them\").getAsJsonObject().get(\"public_keys\").getAsJsonObject().get(java.lang.String)", "resultObj.get(\"them\").getAsJsonObject().get(\"public_keys\").getAsJsonObject().get(\"primary\").getAsJsonObject()", "resultObj.get(\"them\").getAsJsonObject()", "resultObj.get(\"them\").getAsJsonObject().get(\"public_keys\").getAsJsonObject()", "com.google.gson.JsonObject.get(java.lang.String)", "resultObj.get(\"them\").getAsJsonObject().get(\"public_keys\").getAsJsonObject().get(\"primary\").getAsJsonObject().get(\"bundle\").getAsString()", "resultObj.get(\"them\").getAsJsonObject().get(java.lang.String)", "resultObj.get(\"them\").getAsJsonObject().get(\"public_keys\").getAsJsonObject().get(\"primary\").getAsJsonObject().get(java.lang.String)"], "Fixed commit": "609cd4738aaf92069d1accdec22c559bff476c48", "Url": "https://api.github.com/repos/Keychat/KeyChat-Java-App", "Date": "2018-01-04T04:05:53Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { reframer.push(response); } catch (java.lang.Throwable t) { if ((error) == null) { shoudCancelStream = true; error = t; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4128/buggy-version/google-cloud-bigtable.src.main.java.com.google.cloud.bigtable.gaxx.reframing.ReframingResponseObserver.java", "BodyUseAPI": ["com.google.cloud.bigtable.gaxx.reframing.Reframer<OuterT, InnerT>.push(InnerT)"], "Fixed commit": "525f9169c84fada6d16b11a471781e82cbddf2c4", "Url": "https://api.github.com/repos/ElliottBrossard/google-cloud-java", "Date": "2018-02-21T01:02:00Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.untangle.uvm.UvmContextFactory.context().execManager().execOutput(((\"mkdir -p \" + (com.untangle.app.directory_connector.GoogleManagerImpl.GOOGLE_DRIVE_PATH)) + \".gd/\")); fw = new java.io.FileWriter(new java.io.File(((com.untangle.app.directory_connector.GoogleManagerImpl.GOOGLE_DRIVE_PATH) + \".gd/credentials.json\"))); bw = new java.io.BufferedWriter(fw); bw.write(credentialsJson); bw.close(); } catch (java.lang.Exception ex) { logger.warn(\"Error writing credentials.json.\", ex); } finally { try { if (fw != null) { fw.close(); } if (bw != null) { bw.close(); } } catch (java.io.IOException ex) { logger.error(\"Unable to close file\", ex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/7429/buggy-version/directory-connector.src.com.untangle.app.directory_connector.GoogleManagerImpl.java", "BodyUseAPI": ["java.io.BufferedWriter.write(java.lang.String)", "com.untangle.uvm.UvmContextFactory.context()", "com.untangle.uvm.UvmContextFactory.context().execManager()", "java.io.BufferedWriter.close()", "com.untangle.uvm.UvmContextFactory.context().execManager().execOutput(java.lang.String)"], "Fixed commit": "bb49bff154d49811626f6eaef2dbb81379423739", "Url": "https://api.github.com/repos/untangle/ngfw_src", "Date": "2018-05-31T16:54:03Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.inspur.da.dsw.utils.DockerUtil.dockerClient.removeContainerCmd(containerId).exec(); } catch (com.github.dockerjava.api.exception.NotFoundException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3341/buggy-version/src.main.java.com.inspur.da.dsw.utils.DockerUtil.java", "BodyUseAPI": ["com.github.dockerjava.api.DockerClient.removeContainerCmd(java.lang.String)", "com.inspur.da.dsw.utils.DockerUtil.dockerClient.removeContainerCmd(containerId).exec()"], "Fixed commit": "b216fbac372d9996a1541bc91f779fa02b9bda21", "Url": "https://api.github.com/repos/xuande/idsw", "Date": "2018-03-26T09:39:55Z"},
{"Line": "=>862", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { i = java.lang.Integer.valueOf(value); } catch (java.lang.Exception e) { e.printStackTrace(); com.sun.electric.tool.autotracing.Accessory.showMessage(\"Not valid in/out number.\"); throw new com.sun.electric.tool.autotracing.FunctionalException(\"Not valid in/out number.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/9588/buggy-version/com.sun.electric.tool.autotracing.AuxilarySimpleAutotracing.java", "BodyUseAPI": ["java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "003a5dacb2d11082f04b0851789f2b14e2097304", "Url": "https://api.github.com/repos/Lightarsi/dcs-electric-with-autotracing", "Date": "2018-02-06T13:16:46Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mISLoadingDialog.dismiss(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/7835/buggy-version/app.src.main.java.com.agmbat.meetyou.settings.IdentityAuthenticationActivity.java", "BodyUseAPI": ["com.agmbat.isdialog.ISLoadingDialog.dismiss()"], "Fixed commit": "f54e262cc956944e60034e70967df9c993890a95", "Url": "https://api.github.com/repos/hustpeng/meet", "Date": "2018-10-16T15:03:27Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mISLoadingDialog.show(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/7835/buggy-version/app.src.main.java.com.agmbat.meetyou.settings.IdentityAuthenticationActivity.java", "BodyUseAPI": ["com.agmbat.isdialog.ISLoadingDialog.show()"], "Fixed commit": "f54e262cc956944e60034e70967df9c993890a95", "Url": "https://api.github.com/repos/hustpeng/meet", "Date": "2018-10-16T15:03:27Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { DewPoint = row.getLong(\"DewPoint\"); } catch (java.lang.Exception ex) { DewPoint = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/1036/buggy-version/domoticzapi.src.main.java.nl.hnogames.domoticzapi.Containers.WeatherInfo.java", "BodyUseAPI": ["org.json.JSONObject.getLong(java.lang.String)"], "Fixed commit": "992c2eebaf0e5b2c0d8eb7c39413cd845c32fb47", "Url": "https://api.github.com/repos/domoticz/domoticz-android", "Date": "2018-10-30T11:48:01Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(2000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/717/buggy-version/src.main.java.com.kuaizhan.controller.UserController.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "e0ae333af3e12c054af6420f42cca1a2d27c32e2", "Url": "https://api.github.com/repos/lzhpku/easy-view", "Date": "2018-04-13T03:43:21Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { value = cache.get(fileUrl).get(java.lang.Integer.valueOf(index)); } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/71/buggy-version/src.main.java.clients.FileLineReaderCache.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Integer, java.lang.String>.get(java.lang.Integer)", "java.lang.Integer.valueOf(int)", "java.util.HashMap<java.lang.String, java.util.HashMap<java.lang.Integer, java.lang.String>>.get(java.lang.String)"], "Fixed commit": "8b9d8369db38540bac249b2c882be85e1b1c8359", "Url": "https://api.github.com/repos/LostHawkGSW/FileLineServer", "Date": "2018-05-09T03:54:55Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { seekbarProgress = mBinding.mapFilter.filterDistanceSeekBar.getProgress(); } catch (java.lang.NullPointerException npe) { npe.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4581/buggy-version/app.src.main.java.sfotakos.anightout.map.MapFragment.java", "BodyUseAPI": ["mBinding.mapFilter.filterDistanceSeekBar.getProgress()"], "Fixed commit": "c2e3dec85597e1f975b29b7bcbab4b71a238b566", "Url": "https://api.github.com/repos/SFotakos/A-Night-Out", "Date": "2018-06-03T21:47:35Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.io.ByteArrayInputStream byteArrayInputStream = new java.io.ByteArrayInputStream(statusEntitySerialized); java.io.ObjectInputStream objectInputStream = new java.io.ObjectInputStream(byteArrayInputStream); statusEntity = ((io.lozzikit.servicestatus.entities.StatusEntity) (objectInputStream.readObject())); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4052/buggy-version/service-status-server.src.main.java.io.lozzikit.servicestatus.checker.jobs.JobListener.java", "BodyUseAPI": ["java.io.ObjectInputStream.readObject()"], "Fixed commit": "c3fc25d8e6a26441522747215bab5172cd0c3a71", "Url": "https://api.github.com/repos/LozziKit/microservice-service-status", "Date": "2018-01-23T01:47:12Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.io.ObjectOutputStream objectOutputStream = new java.io.ObjectOutputStream(byteArrayOutputStream); objectOutputStream.writeObject(statusToAdd); objectOutputStream.close(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4052/buggy-version/service-status-server.src.main.java.io.lozzikit.servicestatus.checker.jobs.CheckTask.java", "BodyUseAPI": ["java.io.ObjectOutputStream.close()", "java.io.ObjectOutputStream.writeObject(io.lozzikit.servicestatus.entities.StatusEntity)"], "Fixed commit": "c3fc25d8e6a26441522747215bab5172cd0c3a71", "Url": "https://api.github.com/repos/LozziKit/microservice-service-status", "Date": "2018-01-23T01:47:12Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return org.kframework.backend.java.builtins.IntToken.of(term1.bigIntegerValue().shiftRight(term2.bigIntegerValue().intValueExact())); } catch (java.lang.ArithmeticException e) { if ((term1.bigIntegerValue().compareTo(java.math.BigInteger.ZERO)) >= 0) { return org.kframework.backend.java.builtins.IntToken.of(0); }else { return org.kframework.backend.java.builtins.IntToken.of((-1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/2017/buggy-version/java-backend.src.main.java.org.kframework.backend.java.builtins.BuiltinIntOperations.java", "BodyUseAPI": ["org.kframework.backend.java.builtins.IntToken.of(term1.bigIntegerValue().shiftRight(term2.bigIntegerValue().intValueExact()))", "term2.bigIntegerValue().intValueExact()", "org.kframework.backend.java.builtins.IntToken.bigIntegerValue()", "org.kframework.backend.java.builtins.IntToken.bigIntegerValue()", "term1.bigIntegerValue().shiftRight(term2.bigIntegerValue().intValueExact())"], "Fixed commit": "412a06c558b173d2650dfb4b6dd23f61b6d2b2c1", "Url": "https://api.github.com/repos/kframework/k", "Date": "2018-06-15T15:45:09Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { jsonV = row.toJson(value); } catch (java.lang.UnsupportedOperationException e) { cc.dhandho.report.query.JsonMetricQueryResultHandler.LOG.error(\"\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/7776/buggy-version/dhandho-core.src.main.java.cc.dhandho.report.query.JsonMetricQueryResultHandler.java", "BodyUseAPI": ["com.orientechnologies.orient.core.sql.executor.OResult.toJson(java.lang.Object)"], "Fixed commit": "1b1542e5cedb29c46020169989e8da51b6115c18", "Url": "https://api.github.com/repos/stockbrother/dhandho", "Date": "2018-03-27T13:55:46Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { final android.net.Uri contentUri = android.content.ContentUris.withAppendedId(android.net.Uri.parse(\"content://downloads/public_downloads\"), java.lang.Long.valueOf(id)); return com.filepicker.FilePickerModule.getDataColumn(context, contentUri, null, null); } catch (java.lang.NumberFormatException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5472/buggy-version/android.src.main.java.com.filepicker.FilePickerModule.java", "BodyUseAPI": ["android.content.ContentUris.withAppendedId(android.net.Uri.parse(\"content://downloads/public_downloads\"),java.lang.Long)", "android.net.Uri.parse(java.lang.String)", "java.lang.Long.valueOf(java.lang.String)", "com.filepicker.FilePickerModule.getDataColumn(android.content.Context,android.net.Uri,<nulltype>,<nulltype>)"], "Fixed commit": "967e32c7632c19d1b27efd820e4a21bccdfcd517", "Url": "https://api.github.com/repos/larissagaulia/react-native-file-picker", "Date": "2018-02-02T13:39:41Z"},
{"Line": "=>606", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { temperature = ((micdoodle8.mods.galacticraft.api.prefab.world.gen.WorldProviderSpace) (temp)).getThermalLevelModifier(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5661/buggy-version/src.main.java.com.mjr.extraplanets.client.gui.screen.CustomCelestialSelection.java", "BodyUseAPI": ["net.minecraft.world.WorldProvider.getThermalLevelModifier()"], "Fixed commit": "bfb14db370337594af0bcff507ec38b13e8cb06d", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-01-04T19:40:07Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { hasTag = detectTag(temp.getAbsolutePath(), args[(i + 1)]); SIT.notifyUser((\"Error: Invalid path: \" + (f.getAbsolutePath()))); } catch (java.lang.ArrayIndexOutOfBoundsException ab) { hasTag = detectTag(temp.getAbsolutePath(), \" \"); SIT.notifyUser((\"Error: Invalid path: \" + (f.getAbsolutePath()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4027/buggy-version/src.Input.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()", "Input.detectTag(java.lang.String,java.lang.String)", "SIT.notifyUser(java.lang.String)", "java.io.File.getAbsolutePath()"], "Fixed commit": "a3071dfd6e369819747c6e61b973b18d9c01364b", "Url": "https://api.github.com/repos/TeamEmuRU/SWIntegrity", "Date": "2018-04-02T22:38:36Z"},
{"Line": "=>2802", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.sun.tools.javac.util.Assert.checkNonNull(a.type, (\"annotation tree hasn't been attributed yet: \" + a)); } catch (java.lang.AssertionError e) { log.rawError(a.pos, (\"[COLUMBUS HACK] Catch an AssertionError: \" + e)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/724/buggy-version/src.share.classes.com.sun.tools.javac.comp.Check.java", "BodyUseAPI": ["com.sun.tools.javac.util.Assert.checkNonNull(com.sun.tools.javac.code.Type,java.lang.String)"], "Fixed commit": "260c1b6c40faa2c7d5770104e601ffd08a799aa2", "Url": "https://api.github.com/repos/sed-inf-u-szeged/langtools", "Date": "2018-01-16T16:16:51Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { query = entityManager.createQuery(\"Select u from User u where u.username = :username\"); query.setParameter(\"username\", username); return ((com.fis.model.User) (query.getSingleResult())); } catch (javax.persistence.NoResultException e) { return null; } catch (javax.persistence.NonUniqueResultException nure) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/9540/buggy-version/src.com.fis.services.UserDao.java", "BodyUseAPI": ["com.fis.services.UserDao.createQuery(java.lang.String)", "com.fis.services.UserDao.setParameter(java.lang.String,java.lang.String)", "com.fis.services.UserDao.getSingleResult()"], "Fixed commit": "c38ff41af880dd451ed32b8ef1bf6865e424897a", "Url": "https://api.github.com/repos/LukasBosse/Fluginformationssystem", "Date": "2018-03-26T11:10:35Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((com.elementary.tasks.core.utils.RealmDb.getInstance().getAllGroups().size()) == 0) { com.elementary.tasks.core.utils.RealmDb.getInstance().setDefaultGroups(this); } } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8812/buggy-version/app.src.main.java.com.elementary.tasks.core.SplashScreen.java", "BodyUseAPI": ["com.elementary.tasks.core.utils.RealmDb.getInstance().setDefaultGroups(com.elementary.tasks.core.SplashScreen)", "com.elementary.tasks.core.utils.RealmDb.getInstance()", "com.elementary.tasks.core.utils.RealmDb.getInstance().getAllGroups().size()", "com.elementary.tasks.core.utils.RealmDb.getInstance().getAllGroups()", "com.elementary.tasks.core.utils.RealmDb.getInstance()"], "Fixed commit": "f5950718b87d1d6db9a6d3c392bd5a05fb7f85cd", "Url": "https://api.github.com/repos/naz013/Reminder", "Date": "2018-06-06T11:30:43Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { externalOrderCallbacks.onOrderFailed(e.getResponseBody().getError()); } catch (java.lang.Exception e) { externalOrderCallbacks.onOrderFailed(\"Could not create order\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5557/buggy-version/kin-ecosystem-sdk.src.main.java.com.kin.ecosystem.data.order.CreateExternalOrderCall.java", "BodyUseAPI": ["com.kin.ecosystem.data.order.CreateExternalOrderCall.ExternalOrderCallbacks.onOrderFailed(e.getResponseBody().getError())", "com.kin.ecosystem.network.ApiException.getResponseBody()", "e.getResponseBody().getError()"], "Fixed commit": "dfc2651a555641275b3d98664ba9aff8a57a38f6", "Url": "https://api.github.com/repos/kinecosystem/kin-ecosystem-android-sdk", "Date": "2018-05-03T11:38:57Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { getSystemMessage(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6599/buggy-version/SillyChildGuide.app.src.main.java.com.yinglan.scg.main.service.MainService.java", "BodyUseAPI": ["com.yinglan.scg.main.service.MainService.getSystemMessage()"], "Fixed commit": "85fa3983c83ed816ad2e0319b1bed0c7dfa4cb53", "Url": "https://api.github.com/repos/921668753/SillyChildGuide-Android", "Date": "2018-10-08T08:16:05Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { rollValue = java.lang.Integer.parseInt(rollInput.getText().toString()); } catch (java.lang.NumberFormatException e) { resultText.setText(\"Please enter a valid percentile roll.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/7972/buggy-version/PocketDM.app.src.main.java.com.skeletor.pocketdm.CriticalHitTablesActivity.java", "BodyUseAPI": ["rollInput.getText().toString()", "java.lang.Integer.parseInt(rollInput.getText().toString())", "android.widget.EditText.getText()"], "Fixed commit": "a9e969d73207d3de2630d670f191be98b8a106c1", "Url": "https://api.github.com/repos/skeletor261/PocketDM", "Date": "2018-01-16T20:56:43Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.content.Intent wallpaperIntent = android.app.WallpaperManager.getInstance(this).getCropAndSetWallpaperIntent(imageUri); wallpaperIntent.setDataAndType(imageUri, AppConstants.DATA_TYPE); wallpaperIntent.putExtra(AppConstants.MIME_TYPE, AppConstants.DATA_TYPE); startActivityForResult(wallpaperIntent, AppConstants.WALLPAPER_INTENT_REQUEST_CODE); } catch (java.lang.Exception e) { try { android.graphics.Bitmap bitmap = MediaStore.Images.Media.getBitmap(this.getContentResolver(), imageUri); android.app.WallpaperManager.getInstance(this).setBitmap(bitmap); hideProgress(); } catch (java.lang.Exception exceptionn) { hideProgress(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/1431/buggy-version/app.src.main.java.com.tbg.pixtr.detail.view.DetailActivity.java", "BodyUseAPI": ["android.app.WallpaperManager.getInstance(com.tbg.pixtr.detail.view.DetailActivity)", "com.tbg.pixtr.detail.view.DetailActivity.1.startActivityForResult(android.content.Intent,AppConstants.WALLPAPER_INTENT_REQUEST_CODE)", "android.app.WallpaperManager.getInstance(this).getCropAndSetWallpaperIntent(android.net.Uri)", "android.content.Intent.setDataAndType(android.net.Uri,AppConstants.DATA_TYPE)", "android.content.Intent.putExtra(AppConstants.MIME_TYPE,AppConstants.DATA_TYPE)"], "Fixed commit": "a2f321100bd13d5d096b453bf4750b49690055d1", "Url": "https://api.github.com/repos/tbglabs/Pixtr", "Date": "2018-08-09T08:04:23Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { shadowBuffer.moveToDevice(); } catch (java.io.IOException e) { throw new org.apache.sysml.runtime.DMLRuntimeException(\"Error moving the data from shadow buffer to the device\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/449/buggy-version/src.main.java.org.apache.sysml.runtime.instructions.gpu.context.GPUObject.java", "BodyUseAPI": ["org.apache.sysml.runtime.instructions.gpu.context.ShadowBuffer.moveToDevice()"], "Fixed commit": "f39344642e0d5d4f3b0d865ea43b26d685c0b519", "Url": "https://api.github.com/repos/niketanpansare/systemml", "Date": "2018-09-17T20:14:32Z"},
{"Line": "=>952", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { shadowBuffer.moveFromDevice(instName); } catch (java.io.IOException e) { throw new org.apache.sysml.runtime.DMLRuntimeException(\"Error moving the data from the device to the shadow buffer\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/449/buggy-version/src.main.java.org.apache.sysml.runtime.instructions.gpu.context.GPUObject.java", "BodyUseAPI": ["org.apache.sysml.runtime.instructions.gpu.context.ShadowBuffer.moveFromDevice(java.lang.String)"], "Fixed commit": "f39344642e0d5d4f3b0d865ea43b26d685c0b519", "Url": "https://api.github.com/repos/niketanpansare/systemml", "Date": "2018-09-17T20:14:32Z"},
{"Line": "=>942", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { shadowBuffer.moveToHost(); } catch (java.io.IOException e) { throw new org.apache.sysml.runtime.DMLRuntimeException(\"Error moving the data from shadow buffer to the host memory\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/449/buggy-version/src.main.java.org.apache.sysml.runtime.instructions.gpu.context.GPUObject.java", "BodyUseAPI": ["org.apache.sysml.runtime.instructions.gpu.context.ShadowBuffer.moveToHost()"], "Fixed commit": "f39344642e0d5d4f3b0d865ea43b26d685c0b519", "Url": "https://api.github.com/repos/niketanpansare/systemml", "Date": "2018-09-17T20:14:32Z"},
{"Line": "=>1012", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { assert lvalue instanceof Mstar.Worker.BackEnd.Address; } catch (java.lang.Error e) { e.getStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6587/buggy-version/src.Mstar.Worker.BackEnd.IRBuilder.java", "BodyUseAPI": [], "Fixed commit": "77ff484839a162896be784a6d652e0437cbb29cc", "Url": "https://api.github.com/repos/idy002/mstar-compiler", "Date": "2018-06-04T18:02:04Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { NViewModel = new com.example.charl.gamingnewz.Activities.Room.ViewModel.NewsViewModel(getActivity().getApplication()); Swipe.setRefreshing(false); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/171/buggy-version/app.src.main.java.com.example.charl.gamingnewz.Activities.Fragments.MainNews.java", "BodyUseAPI": ["getActivity().getApplication()", "1.getActivity()", "android.support.v4.widget.SwipeRefreshLayout.setRefreshing(boolean)"], "Fixed commit": "86d72685f11359668b00ec1f0c06d27911081d2d", "Url": "https://api.github.com/repos/00198216/GamingNewZ", "Date": "2018-06-16T22:04:33Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { NViewModel = new com.example.charl.gamingnewz.Activities.Room.ViewModel.PlayersViewModel(getActivity().getApplication()); Swipe.setRefreshing(false); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/171/buggy-version/app.src.main.java.com.example.charl.gamingnewz.Activities.Fragments.PlayerFragment.java", "BodyUseAPI": ["getActivity().getApplication()", "android.support.v4.widget.SwipeRefreshLayout.setRefreshing(boolean)", "1.getActivity()"], "Fixed commit": "86d72685f11359668b00ec1f0c06d27911081d2d", "Url": "https://api.github.com/repos/00198216/GamingNewZ", "Date": "2018-06-16T22:04:33Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { NViewModel = new com.example.charl.gamingnewz.Activities.Room.ViewModel.NewsViewModel(getActivity().getApplication()); Swipe.setRefreshing(false); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/171/buggy-version/app.src.main.java.com.example.charl.gamingnewz.Activities.Fragments.PictureFragment.java", "BodyUseAPI": ["getActivity().getApplication()", "1.getActivity()", "android.support.v4.widget.SwipeRefreshLayout.setRefreshing(boolean)"], "Fixed commit": "86d72685f11359668b00ec1f0c06d27911081d2d", "Url": "https://api.github.com/repos/00198216/GamingNewZ", "Date": "2018-06-16T22:04:33Z"},
{"Line": "=>1067", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { this.root = tree.root; } finally { write.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/6422/buggy-version/core.org.wso2.carbon.user.core.src.main.java.org.wso2.carbon.user.core.authorization.PermissionTree.java", "BodyUseAPI": [], "Fixed commit": "f869cdb7281e5ad9ed6a24a208d0cfd436366a8a", "Url": "https://api.github.com/repos/dushansilva/carbon-kernel", "Date": "2018-06-26T05:29:42Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.apache.http.HttpHost proxy = getProxy(); httpclient = getHttpClient(proxy); requestConfig = getRequestConfig(proxy); getOptions().setRequestConfig(requestConfig); } catch (java.io.IOException e) { jenkinsci.plugins.telegrambot.telegram.TelegramBot.LOGGER.log(java.util.logging.Level.SEVERE, \"TelegramBot: Failed to set proxy\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/6440/buggy-version/src.main.java.jenkinsci.plugins.telegrambot.telegram.TelegramBot.java", "BodyUseAPI": ["getOptions().setRequestConfig(org.apache.http.client.config.RequestConfig)", "jenkinsci.plugins.telegrambot.telegram.TelegramBot.getRequestConfig(org.apache.http.HttpHost)", "jenkinsci.plugins.telegrambot.telegram.TelegramBot.getOptions()", "jenkinsci.plugins.telegrambot.telegram.TelegramBot.getProxy()", "jenkinsci.plugins.telegrambot.telegram.TelegramBot.getHttpClient(org.apache.http.HttpHost)"], "Fixed commit": "3790109aaef6397391eeb71413d4fc4677c7ec07", "Url": "https://api.github.com/repos/nikitabelonogov/telegram-notifications-plugin", "Date": "2018-03-21T11:28:43Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((getIntent().getStringExtra(\"image\").length()) != 0) { com.squareup.picasso.Picasso.get().load(getIntent().getStringExtra(\"image\")).resize(400, 400).centerCrop().into(renterImage); } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/8488/buggy-version/app.src.main.java.com.example.tanvir.to_letapp.activity.renterActivity.RenterUpdateActivity.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.get().load(getIntent().getStringExtra(\"image\")).resize(400, 400).centerCrop()", "com.squareup.picasso.Picasso.get().load(getIntent().getStringExtra(\"image\")).resize(int,int)", "com.example.tanvir.to_letapp.activity.renterActivity.RenterUpdateActivity.getIntent()", "getIntent().getStringExtra(\"image\").length()", "getIntent().getStringExtra(java.lang.String)", "com.example.tanvir.to_letapp.activity.renterActivity.RenterUpdateActivity.getIntent()", "com.squareup.picasso.Picasso.get()", "com.squareup.picasso.Picasso.get().load(getIntent().getStringExtra(\"image\")).resize(400, 400).centerCrop().into(android.widget.ImageView)", "com.squareup.picasso.Picasso.get().load(getIntent().getStringExtra(\"image\"))", "getIntent().getStringExtra(java.lang.String)"], "Fixed commit": "9aaa026cf0db7a0dbfed10fed1ac78d6eb1f1a5e", "Url": "https://api.github.com/repos/Alpha-1Soft/Toletapp", "Date": "2018-09-30T10:05:33Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { lat = java.lang.Double.parseDouble(request.getParameter(\"lat\")); lon = java.lang.Double.parseDouble(request.getParameter(\"lon\")); } catch (java.lang.Exception e) { lat = 37.38; lon = -122.08; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/9003/buggy-version/src.rpc.SearchItem.java", "BodyUseAPI": ["java.lang.Double.parseDouble(request.getParameter(\"lat\"))", "java.lang.Double.parseDouble(request.getParameter(\"lon\"))", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Fixed commit": "ab1d92811f8e747f60eb370a01afb97a1ab9eb65", "Url": "https://api.github.com/repos/chen4393c/Jupiter", "Date": "2018-07-23T05:37:21Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (((conn) == null) || (!(conn.isOpen()))) { com.rabbitmq.client.ConnectionFactory factory = new com.rabbitmq.client.ConnectionFactory(); factory.setUri(uri); conn = factory.newConnection(); } return conn; } catch (java.lang.Exception e) { throw new br.net.eventstore.publisher.rabbitmq.ConnectionException(\"Can not create connection with rabbitmq\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/7324/buggy-version/src.main.java.br.net.eventstore.publisher.rabbitmq.ChannelPool.java", "BodyUseAPI": ["com.rabbitmq.client.ConnectionFactory.setUri(java.lang.String)", "com.rabbitmq.client.ConnectionFactory.newConnection()", "com.rabbitmq.client.Connection.isOpen()"], "Fixed commit": "5d418b363c5defcd9018f924f71d7cb785937a4d", "Url": "https://api.github.com/repos/biharck/eventstore", "Date": "2018-09-13T12:33:21Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { hostName = java.net.InetAddress.getLocalHost().getHostName(); } catch (java.net.UnknownHostException e) { com.gearcode.brush.client.util.ClientConfigUtil.logger.error(e.getLocalizedMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3578/buggy-version/brush-client.src.main.java.com.gearcode.brush.client.util.ClientConfigUtil.java", "BodyUseAPI": ["java.net.InetAddress.getHostName()", "java.net.InetAddress.getLocalHost()"], "Fixed commit": "2a254e126a203e6f8c786b4e1115b56e0d7f52c3", "Url": "https://api.github.com/repos/gearcode/brush", "Date": "2018-05-15T12:01:42Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (data != null) { java.lang.Object[] pdus = ((java.lang.Object[]) (data.get(\"pdus\"))); for (int i = 0; i < (pdus.length); i++) { android.telephony.SmsMessage smsMessage = android.telephony.SmsMessage.createFromPdu(((byte[]) (pdus[i]))); java.lang.String sender = smsMessage.getDisplayOriginatingAddress(); java.lang.String messageBody = smsMessage.getMessageBody(); example.com.messageretrieve.SmsReceiver.mListener.messageReceived(sender, messageBody); } } } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2730/buggy-version/app.src.main.java.example.com.messageretrieve.SmsReceiver.java", "BodyUseAPI": ["android.telephony.SmsMessage.getMessageBody()", "android.os.Bundle.get(java.lang.String)", "android.telephony.SmsMessage.getDisplayOriginatingAddress()", "android.telephony.SmsMessage.createFromPdu(java.lang.Object)", "example.com.messageretrieve.SmsListener.messageReceived(java.lang.String,java.lang.String)"], "Fixed commit": "9148fb76bb7494da377b1b83b7ccb7c607830e0c", "Url": "https://api.github.com/repos/imranraad07/Message-Receiver", "Date": "2018-04-18T08:59:00Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String className = getAttribute(node, com.ctrip.platform.dal.dao.configure.FACTORY); if (className != null) { return idGenFactoryManager.getOrCreateFactory(className); }else { return idGenFactoryManager.getOrCreateDefaultFactory(); } } catch (java.lang.NullPointerException e) { return idGenFactoryManager.getOrCreateDefaultFactory(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/8985/buggy-version/dal-client.src.main.java.com.ctrip.platform.dal.dao.configure.DalConfigureFactory.java", "BodyUseAPI": ["com.ctrip.platform.dal.sharding.idgen.IdGeneratorFactoryManager.getOrCreateDefaultFactory()", "com.ctrip.platform.dal.sharding.idgen.IdGeneratorFactoryManager.getOrCreateFactory(java.lang.String)", "com.ctrip.platform.dal.dao.configure.DalConfigureFactory.getAttribute(org.w3c.dom.Node,com.ctrip.platform.dal.dao.configure.FACTORY)"], "Fixed commit": "80ebd3fdddc2a41a2d07b895c32ba5619bbcf8c3", "Url": "https://api.github.com/repos/ctripcorp/dal", "Date": "2018-09-29T09:25:02Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String html = com.jinshuai.utils.HttpUtils.getSingleInstance().getContent(urlSeed.getUrl()); org.jsoup.nodes.Document document = org.jsoup.Jsoup.parse(html, urlSeed.getUrl()); page = new com.jinshuai.entity.Page(urlSeed, document); return page; } catch (java.lang.Exception e) { LOGGER.error((\"\u4e0b\u8f7d\u5668\u5904\u7684\u89e3\u6790\u5668\u89e3\u6790\u76f8\u5e94\u6587\u672c\u51fa\u9519 \" + (e.getMessage()))); } finally { return page; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/7653/buggy-version/src.main.java.com.jinshuai.core.downloader.impl.HttpClientPoolDownloader.java", "BodyUseAPI": ["com.jinshuai.utils.HttpUtils.getSingleInstance().getContent(urlSeed.getUrl())", "org.jsoup.Jsoup.parse(java.lang.String,urlSeed.getUrl())", "com.jinshuai.entity.UrlSeed.getUrl()", "com.jinshuai.utils.HttpUtils.getSingleInstance()", "com.jinshuai.entity.UrlSeed.getUrl()"], "Fixed commit": "af63bf04322483e1e3c1d7c21bd0c1de3df4ef23", "Url": "https://api.github.com/repos/jinshuai86/Spider", "Date": "2018-03-29T11:29:13Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.nd4j.linalg.api.ndarray.INDArray inferredVectorA = vectors.inferVector(a); org.nd4j.linalg.api.ndarray.INDArray inferredVectorB = vectors.inferVector(b); return org.nd4j.linalg.ops.transforms.Transforms.cosineSim(inferredVectorA, inferredVectorB); } catch (java.lang.RuntimeException e) { return 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/7821/buggy-version/limes-core.src.main.java.org.aksw.limes.core.measures.measure.string.Doc2VecMeasure.java", "BodyUseAPI": ["org.deeplearning4j.models.paragraphvectors.ParagraphVectors.inferVector(java.lang.String)", "org.deeplearning4j.models.paragraphvectors.ParagraphVectors.inferVector(java.lang.String)", "org.nd4j.linalg.ops.transforms.Transforms.cosineSim(org.nd4j.linalg.api.ndarray.INDArray,org.nd4j.linalg.api.ndarray.INDArray)"], "Fixed commit": "8a80995e470c428f6eec5305c86bd2ea81b6dced", "Url": "https://api.github.com/repos/dice-group/LIMES", "Date": "2018-04-22T03:42:45Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { activeTextureUnit = me.semx11.autotip.util.ReflectionUtil.getPrivateValue(net.minecraft.client.renderer.GlStateManager.class, null, \"activeTextureUnit\", \"field_179162_o\"); } catch (me.semx11.autotip.util.ReflectionUtil.UnableToAccessFieldException rip) { activeTextureUnit = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4276/buggy-version/src.main.java.cc.hyperium.mixinsimp.client.GlStateModifier.java", "BodyUseAPI": ["me.semx11.autotip.util.ReflectionUtil.getPrivateValue(java.lang.Class,<nulltype>,java.lang.String,java.lang.String)"], "Fixed commit": "7ae9111b52be778f61ca0f95034b6ebb68793739", "Url": "https://api.github.com/repos/HyperiumClient/Hyperium", "Date": "2018-07-30T06:59:13Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { charset = org.apache.http.entity.ContentType.getOrDefault(entity).getCharset(); } catch (java.lang.Exception e) { edu.uci.ics.crawler4j.crawler.Page.logger.warn(\"parse charset failed\", e); charset = java.nio.charset.Charset.forName(\"UTF-8\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/9122/buggy-version/src.main.java.edu.uci.ics.crawler4j.crawler.Page.java", "BodyUseAPI": ["org.apache.http.entity.ContentType.getOrDefault(entity).getCharset()", "org.apache.http.entity.ContentType.getOrDefault(org.apache.http.HttpEntity)"], "Fixed commit": "86596490d61f18034252ce395c0b6e1857f82720", "Url": "https://api.github.com/repos/yasserg/crawler4j", "Date": "2017-06-12T08:55:09Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { link = followerListItem.findElement(org.openqa.selenium.By.xpath(xpath1)); } catch (java.lang.Exception e) { link = followerListItem.findElement(org.openqa.selenium.By.xpath(xpath2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2029/buggy-version/src.main.java.com.instagram.SeleniumWorker.java", "BodyUseAPI": ["org.openqa.selenium.By.xpath(java.lang.String)", "org.openqa.selenium.WebElement.findElement(org.openqa.selenium.By.xpath(xpath1))"], "Fixed commit": "8594e383ca4e50eac5a66cfff88a4fd4c2ea2c28", "Url": "https://api.github.com/repos/thenextfreelancer/instaautomation-git", "Date": "2018-10-18T15:40:23Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { us.setText(userr); } catch (java.lang.NullPointerException e) { us.setText(\"Error\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/9579/buggy-version/app.src.main.java.net.kaparray.velp.fragments.TaskFragment.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "484781585498032ce3be4badfbb4722c8264a3bd", "Url": "https://api.github.com/repos/kaparray/Velp", "Date": "2018-05-24T15:13:32Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { name.setText(title); } catch (java.lang.NullPointerException e) { name.setText(\"Error\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/9579/buggy-version/app.src.main.java.net.kaparray.velp.fragments.TaskFragment.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "484781585498032ce3be4badfbb4722c8264a3bd", "Url": "https://api.github.com/repos/kaparray/Velp", "Date": "2018-05-24T15:13:32Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { val.setText(value); } catch (java.lang.NullPointerException e) { val.setText(\"Error\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/9579/buggy-version/app.src.main.java.net.kaparray.velp.fragments.TaskFragment.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "484781585498032ce3be4badfbb4722c8264a3bd", "Url": "https://api.github.com/repos/kaparray/Velp", "Date": "2018-05-24T15:13:32Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { len = calMaxRandomLen(rs); } catch (java.lang.Exception e) { log.error(\"table : {}, columnName : {} calMaxRandomLen error\", tableName, columnName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/8418/buggy-version/src.main.java.com.flyer.maker.parser.impl.MySQLParser.java", "BodyUseAPI": ["com.flyer.maker.parser.impl.MySQLParser.calMaxRandomLen(java.sql.ResultSet)"], "Fixed commit": "1154c37914d2716a00aa6bdc60ca46dff0cc5af3", "Url": "https://api.github.com/repos/vancefantasy/flyer-maker", "Date": "2018-10-19T10:10:40Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { networkManager.sendMessageSignIn(viewAutenticacio.getJtfName(), viewAutenticacio.getJtfPassword()); } catch (java.io.IOException e1) { java.lang.System.err.println(e1.getMessage()); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/820/buggy-version/src.Controller.AutenticacioListener.java", "BodyUseAPI": ["Network.NetworkManager.sendMessageSignIn(viewAutenticacio.getJtfName(),viewAutenticacio.getJtfPassword())", "view.AutenticacioView.getJtfPassword()", "view.AutenticacioView.getJtfName()"], "Fixed commit": "7ddd7950946106af55b2f57bf34f9814841fddce", "Url": "https://api.github.com/repos/oscarfava22/reservaClientProject", "Date": "2018-04-05T21:54:02Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (assignment != null) { java.lang.String uri = java.lang.String.format(org.openmrs.module.bedmanagement.atomfeed.BedAssignmentAdvice.TEMPLATE, assignment.getUuid()); return new org.ict4h.atomfeed.server.service.Event(java.util.UUID.randomUUID().toString(), org.openmrs.module.bedmanagement.atomfeed.BedAssignmentAdvice.TITLE, null, uri, uri, org.openmrs.module.bedmanagement.atomfeed.BedAssignmentAdvice.CATEGORY); } } catch (java.net.URISyntaxException ex) { throw new java.lang.RuntimeException(ex.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1811/buggy-version/api.src.main.java.org.openmrs.module.bedmanagement.atomfeed.BedAssignmentAdvice.java", "BodyUseAPI": ["java.util.UUID.toString()", "java.lang.String.format(java.lang.String,assignment.getUuid())", "org.openmrs.module.bedmanagement.entity.BedPatientAssignment.getUuid()", "java.util.UUID.randomUUID()"], "Fixed commit": "8c267790a244e32d02d3cd6d257e5e8ac7a1969c", "Url": "https://api.github.com/repos/sanishmaharjan/openmrs-module-bedmanagement", "Date": "2018-03-05T08:36:38Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.content.Intent myIntent = new android.content.Intent(android.provider.Settings.ACTION_MANAGE_OVERLAY_PERMISSION); startActivity(myIntent); } catch (java.lang.Exception e) { e.printStackTrace(); android.widget.Toast.makeText(this, \"Your Android does not support Feedback feature. It will be disabled.\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1006/buggy-version/whitelabel_v2.app.src.main.java.br.com.zup.rwwhitelabel.view.BaseActivity.java", "BodyUseAPI": ["br.com.zup.rwwhitelabel.view.BaseActivity<T, V>.startActivity(android.content.Intent)"], "Fixed commit": "eb5a5c993479e2de9682a3d6c64f2c6c30289679", "Url": "https://api.github.com/repos/ZupIT/realwave-white-label-android", "Date": "2018-04-20T17:05:08Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (new java.text.SimpleDateFormat(\"dd/MM/yyyy\").parse(date).before(new java.util.Date())) { return false; } } catch (java.lang.Exception e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1373/buggy-version/src.main.java.seedu.address.model.leave.Date.java", "BodyUseAPI": ["java.util.Date.before(java.util.Date)", "java.text.SimpleDateFormat.parse(java.lang.String)"], "Fixed commit": "0ada3a2431daf4715cb889439aae924dbf049795", "Url": "https://api.github.com/repos/Hafizuddin-NUS/main", "Date": "2018-10-29T07:14:07Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(_heartBeatUpdateRetrySleep); } catch (java.lang.InterruptedException e) { com.cloud.hypervisor.kvm.resource.KVMHAMonitor.s_logger.debug(\"[ignored] interupted between heartbeat retries.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/8470/buggy-version/plugins.hypervisors.kvm.src.com.cloud.hypervisor.kvm.resource.KVMHAMonitor.java", "BodyUseAPI": ["java.lang.Thread.sleep(com.cloud.hypervisor.kvm.resource.KVMHAMonitor.Monitor)"], "Fixed commit": "1ec2604e10e1338f41566e2561f134d0098df3f0", "Url": "https://api.github.com/repos/Slair1/cloudstack", "Date": "2018-02-28T00:36:35Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { locationManager.requestLocationUpdates(org.traccar.client.PositionProvider.getProvider(preferences.getString(MainFragment.KEY_ACCURACY, \"medium\")), (((distance) > 0) || ((angle) > 0) ? org.traccar.client.PositionProvider.MINIMUM_INTERVAL : interval), 0, this); } catch (java.lang.RuntimeException e) { android.widget.Toast.makeText(context, e.getMessage(), Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4651/buggy-version/app.src.main.java.org.traccar.client.PositionProvider.java", "BodyUseAPI": ["android.location.LocationManager.requestLocationUpdates(java.lang.String,long,int,org.traccar.client.PositionProvider)", "android.content.SharedPreferences.getString(MainFragment.KEY_ACCURACY,java.lang.String)", "org.traccar.client.PositionProvider.getProvider(preferences.getString(MainFragment.KEY_ACCURACY, \"medium\"))"], "Fixed commit": "2e0e7ea4539ef998d1430a5ba1a3fd794630e1a8", "Url": "https://api.github.com/repos/traccar/traccar-client-android", "Date": "2018-10-18T02:44:58Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.location.Location location = locationManager.getLastKnownLocation(LocationManager.PASSIVE_PROVIDER); if (location != null) { sendAlarmLocation(location); }else { locationManager.requestSingleUpdate(provider, new android.location.LocationListener() { @java.lang.Override public void onLocationChanged(android.location.Location location) { sendAlarmLocation(location); } @java.lang.Override public void onStatusChanged(java.lang.String provider, int status, android.os.Bundle extras) { } @java.lang.Override public void onProviderEnabled(java.lang.String provider) { } @java.lang.Override public void onProviderDisabled(java.lang.String provider) { } }, android.os.Looper.myLooper()); } } catch (java.lang.RuntimeException e) { android.widget.Toast.makeText(this, e.getMessage(), Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4651/buggy-version/app.src.main.java.org.traccar.client.ShortcutActivity.java", "BodyUseAPI": ["android.location.LocationManager.getLastKnownLocation(LocationManager.PASSIVE_PROVIDER)", "android.location.LocationManager.requestSingleUpdate(java.lang.String,android.location.LocationListener,android.os.Looper.myLooper())", "org.traccar.client.ShortcutActivity.sendAlarmLocation(android.location.Location)", "org.traccar.client.ShortcutActivity.2.sendAlarmLocation(android.location.Location)", "android.os.Looper.myLooper()"], "Fixed commit": "2e0e7ea4539ef998d1430a5ba1a3fd794630e1a8", "Url": "https://api.github.com/repos/traccar/traccar-client-android", "Date": "2018-10-18T02:44:58Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.graphics.Matrix matrix = new android.graphics.Matrix(); matrix.postRotate(com.guards.attendance.utils.AppUtils.getImageOrientation(mUser.image_path)); android.graphics.Bitmap bitmap = android.graphics.BitmapFactory.decodeFile(mUser.image_path); android.graphics.Bitmap rotatedBitmap = android.graphics.Bitmap.createBitmap(bitmap, 0, 0, bitmap.getWidth(), bitmap.getHeight(), matrix, true); mHolder.profileImage.setImageBitmap(rotatedBitmap); } catch (java.lang.Exception e) { mHolder.profileImage.setImageResource(R.drawable.user); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1934/buggy-version/app.src.main.java.com.guards.attendance.fragments.GuardHomeFragment.java", "BodyUseAPI": ["android.graphics.Bitmap.createBitmap(android.graphics.Bitmap,int,int,bitmap.getWidth(),bitmap.getHeight(),android.graphics.Matrix,boolean)", "android.graphics.Matrix.postRotate(com.guards.attendance.utils.AppUtils.getImageOrientation(mUser.image_path))", "android.widget.ImageView.setImageBitmap(android.graphics.Bitmap)", "android.graphics.Bitmap.getWidth()", "com.guards.attendance.utils.AppUtils.getImageOrientation(mUser.image_path)", "android.graphics.BitmapFactory.decodeFile(mUser.image_path)", "android.graphics.Bitmap.getHeight()"], "Fixed commit": "5d10bfd50a0a5a10f738996d13a4fca5f2eef8db", "Url": "https://api.github.com/repos/bilal-rashid/BeGreat", "Date": "2018-01-24T17:34:14Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.auth0.jwt.interfaces.DecodedJWT jwt = com.vuebackend.security.JWTTokenUtils.verify(tokenRequest.getToken()); java.lang.String username = jwt.getSubject(); return org.springframework.http.ResponseEntity.ok(userRepository.findByUsername(username).isPresent()); } catch (java.lang.Exception e) { return org.springframework.http.ResponseEntity.ok(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1503/buggy-version/vue-backend-auth.src.main.java.com.vuebackend.controllers.UserController.java", "BodyUseAPI": ["userRepository.findByUsername(username).isPresent()", "org.springframework.http.ResponseEntity.ok(userRepository.findByUsername(username).isPresent())", "com.vuebackend.communication.TokenRequest.getToken()", "com.vuebackend.security.JWTTokenUtils.verify(tokenRequest.getToken())", "com.vuebackend.dbrepositories.UserRepository.findByUsername(java.lang.String)", "com.auth0.jwt.interfaces.DecodedJWT.getSubject()"], "Fixed commit": "4be0259b186c87214515831e5295ba286fb3ddfe", "Url": "https://api.github.com/repos/ValerianWeiss/IoT-Monitor", "Date": "2018-06-24T17:44:14Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.appium.manager.AppiumManagerFactory.getAppiumManager(hostName).destoryIOSWebKitProxy(hostName); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/8096/buggy-version/src.main.java.com.appium.manager.AppiumDriverManager.java", "BodyUseAPI": ["com.appium.manager.AppiumManagerFactory.getAppiumManager(hostName).destoryIOSWebKitProxy(java.lang.String)", "com.appium.manager.AppiumManagerFactory.getAppiumManager(java.lang.String)"], "Fixed commit": "a4e846aa77d417af45d06b54661db7e8d4529be0", "Url": "https://api.github.com/repos/shridharkalagi/AppiumTestDistribution", "Date": "2018-04-09T09:07:27Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { try (java.io.FileInputStream in = fileIoProvider.getFileInputStream(getVolume(), file)) { try (java.io.FileOutputStream out = fileIoProvider.getFileOutputStream(getVolume(), tmpFile)) { org.apache.hadoop.io.IOUtils.copyBytes(in, out, (16 * 1024)); } if ((file.length()) != (tmpFile.length())) { throw new java.io.IOException((((((((\"Copy of file \" + file) + \" size \") + (file.length())) + \" into file \") + tmpFile) + \" resulted in a size of \") + (tmpFile.length()))); } } fileIoProvider.replaceFile(getVolume(), tmpFile, file); } catch (java.io.IOException e) { DataNode.LOG.error((\"Cannot breakHardlinks for file \" + file), e); if (!(fileIoProvider.delete(getVolume(), tmpFile))) { DataNode.LOG.info((\"detachFile failed to delete temporary file \" + tmpFile)); } throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/6680/buggy-version/hadoop-hdfs-project.hadoop-hdfs.src.main.java.org.apache.hadoop.hdfs.server.datanode.ReplicaInfo.java", "BodyUseAPI": ["java.io.File.length()", "org.apache.hadoop.hdfs.server.datanode.FileIoProvider.getFileInputStream(org.apache.hadoop.hdfs.server.datanode.fsdataset.FsVolumeSpi,java.io.File)", "org.apache.hadoop.hdfs.server.datanode.ReplicaInfo.getVolume()", "java.io.File.length()", "org.apache.hadoop.hdfs.server.datanode.ReplicaInfo.getVolume()", "org.apache.hadoop.hdfs.server.datanode.ReplicaInfo.getVolume()", "java.io.File.length()", "org.apache.hadoop.hdfs.server.datanode.FileIoProvider.replaceFile(org.apache.hadoop.hdfs.server.datanode.fsdataset.FsVolumeSpi,java.io.File,java.io.File)", "org.apache.hadoop.io.IOUtils.copyBytes(java.io.FileInputStream,java.io.FileOutputStream,int)", "org.apache.hadoop.hdfs.server.datanode.FileIoProvider.getFileOutputStream(org.apache.hadoop.hdfs.server.datanode.fsdataset.FsVolumeSpi,java.io.File)", "java.io.File.length()"], "Fixed commit": "c0c788aafc892373b23ae0c7905d913fd788c3a6", "Url": "https://api.github.com/repos/apache/hadoop", "Date": "2018-04-28T16:07:56Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { map = mapper.readValue(json, java.util.Map.class); if (map.containsKey(\"outputStage\")) { map.remove(\"outputStage\"); } if (map.containsKey(\"session\")) { map.remove(\"session\"); } } catch (java.io.IOException e) { map = new java.util.HashMap(); map.put(\"state\", \"FAILED\"); map.put(\"failureInfo\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1675/buggy-version/src.main.java.yanagishima.servlet.QueryStatusServlet.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.ObjectMapper.readValue(java.lang.String,java.lang.Class)", "java.util.Map.containsKey(java.lang.String)", "java.util.Map.containsKey(java.lang.String)", "java.util.Map.remove(java.lang.String)", "java.util.Map.remove(java.lang.String)"], "Fixed commit": "f1952375d70911e811c6d662b14efa5889f8097a", "Url": "https://api.github.com/repos/yanagishima/yanagishima", "Date": "2018-07-02T03:35:10Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { G = EquationSolver.evaluateEqn2(0, 0, 0, 0); java.lang.System.out.println((\"Value of G: \" + G)); } catch (java.lang.IllegalArgumentException e) { e.printStackTrace(); java.lang.System.out.println(\"Can't divide by zero!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4042/buggy-version/LearningObjects.src.EquationSolver.java", "BodyUseAPI": ["EquationSolver.evaluateEqn2(int,int,int,int)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "6f8d26b1d8057d5b521562db0058abe099ae4897", "Url": "https://api.github.com/repos/Beesham/OOP-with-Java", "Date": "2018-01-19T20:55:36Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { journal = applicationContext.getBean(org.talend.daikon.content.journal.ResourceJournal.class); } catch (org.springframework.beans.BeansException e) { throw new org.talend.daikon.content.journal.configuration.JournalizedConfiguration.MissingJournalBean(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2634/buggy-version/daikon-content-service.content-service-journal.src.main.java.org.talend.daikon.content.journal.configuration.JournalizedConfiguration.java", "BodyUseAPI": ["org.springframework.context.ApplicationContext.getBean(java.lang.Class)"], "Fixed commit": "272477aa5fa012911f37d520317eb596cb099dce", "Url": "https://api.github.com/repos/Talend/daikon", "Date": "2018-06-14T13:41:36Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (((null == (expressOrder.getNeederId())) || (null == (expressOrder.getProviderId()))) || (null == (expressOrder.getPrice()))) { rd.setMsg(\"\u5173\u952e\u4fe1\u606f\u4e0d\u80fd\u4e3a\u7a7a\"); logger.info((methodDesc + \"\u5931\u8d25 + expressOrder : {}\"), expressOrder); return rd; } expressOrderMapper.insertSelective(expressOrder); rd.setMsg(\"\u5b8c\u6210\"); rd.setCode(Constants.SUCCESS_CODE); logger.info((methodDesc + \"\u5b8c\u6210\")); } catch (java.lang.Exception e) { rd.setMsg(\"\u672a\u77e5\u9519\u8bef\"); logger.error((methodDesc + \"\u5931\u8d25\uff0c \u672a\u77e5\u9519\u8bef e \uff1a{}\"), e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/7319/buggy-version/src.main.java.com.heo.service.impl.ExpressOrderService.java", "BodyUseAPI": ["com.heo.entity.vo.ReturnData.setCode(Constants.SUCCESS_CODE)", "com.heo.entity.mapper.ExpressOrder.getNeederId()", "com.heo.entity.vo.ReturnData.setMsg(java.lang.String)", "org.slf4j.Logger.info(java.lang.String,com.heo.entity.mapper.ExpressOrder)", "com.heo.service.impl.ExpressOrderService.insertSelective(com.heo.entity.mapper.ExpressOrder)", "com.heo.entity.mapper.ExpressOrder.getProviderId()", "com.heo.entity.mapper.ExpressOrder.getPrice()", "com.heo.entity.vo.ReturnData.setMsg(java.lang.String)", "org.slf4j.Logger.info(java.lang.String)"], "Fixed commit": "0c086705cbc706366f107d8dce19786afa3b57cc", "Url": "https://api.github.com/repos/nullbull/helpeachother", "Date": "2018-09-21T08:44:42Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(3450); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/5771/buggy-version/src.lab2.LoanCalculator.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "93200fdf1021d874f9b890aa7f83709f808fb064", "Url": "https://api.github.com/repos/koennjb/CS141_Lab2", "Date": "2018-01-10T07:25:43Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder builder = performInitialized(\"onFindDevice\"); byte[] testSignaling = new byte[]{ nodomain.freeyourgadget.gadgetbridge.devices.zetime.ZeTimeConstants.CMD_PREAMBLE, nodomain.freeyourgadget.gadgetbridge.devices.zetime.ZeTimeConstants.CMD_TEST_SIGNALING, nodomain.freeyourgadget.gadgetbridge.devices.zetime.ZeTimeConstants.CMD_SEND, ((byte) (1)), ((byte) (0)), ((byte) (start ? 1 : 0)), nodomain.freeyourgadget.gadgetbridge.devices.zetime.ZeTimeConstants.CMD_END }; sendMsgToWatch(builder, testSignaling); builder.queue(getQueue()); } catch (java.io.IOException e) { nodomain.freeyourgadget.gadgetbridge.util.GB.toast(getContext(), (\"Error on function onFindDevice: \" + (e.getLocalizedMessage())), Toast.LENGTH_LONG, GB.ERROR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/7799/buggy-version/app.src.main.java.nodomain.freeyourgadget.gadgetbridge.service.devices.zetime.ZeTimeDeviceSupport.java", "BodyUseAPI": ["nodomain.freeyourgadget.gadgetbridge.service.devices.zetime.ZeTimeDeviceSupport.performInitialized(java.lang.String)", "nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder.queue(getQueue())", "nodomain.freeyourgadget.gadgetbridge.service.devices.zetime.ZeTimeDeviceSupport.sendMsgToWatch(nodomain.freeyourgadget.gadgetbridge.service.btle.TransactionBuilder,byte[])", "nodomain.freeyourgadget.gadgetbridge.service.devices.zetime.ZeTimeDeviceSupport.getQueue()"], "Fixed commit": "bc20db44f449e559111b6df01155639ec4262e34", "Url": "https://api.github.com/repos/Lightwars/gadgetbridge", "Date": "2018-09-17T12:43:09Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((param = c.getParamByName(t.replace('_', ' '))) != null) { param.load(s); }else { engine.base.Logger.logWarning(null, ((\" loading of param \" + t) + \" failed.\")); } } catch (java.lang.Exception ex) { engine.base.Logger.logWarning(null, ((\" loading of param \" + t) + \" failed.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1014/buggy-version/src.engine.graphics.synthesis.texture.Channel.java", "BodyUseAPI": ["engine.parameters.AbstractParam.load(java.util.Scanner)", "engine.graphics.synthesis.texture.Channel.getParamByName(java.lang.String)", "java.lang.String.replace(char,char)", "engine.base.Logger.logWarning(<nulltype>,java.lang.String)"], "Fixed commit": "8a28ca159c4903804afd368364f3a182c5be5efb", "Url": "https://api.github.com/repos/Nielk1/NeoTextureEdit", "Date": "2018-08-16T17:25:16Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { startActivityForResult(intent, com.PATHomi.xmsf.RemoveDozeActivity.RC_REQUEST); } catch (com.PATHomi.xmsf.android e) { android.util.Log.e(com.PATHomi.xmsf.RemoveDozeActivity.TAG, e.getLocalizedMessage(), e); android.widget.Toast.makeText(this, this.getString(R.string.common_err, e.getMessage()), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4340/buggy-version/push.src.main.java.com.PATHomi.xmsf.RemoveDozeActivity.java", "BodyUseAPI": ["com.PATHomi.xmsf.RemoveDozeActivity.startActivityForResult(android.content.Intent,int)"], "Fixed commit": "f850762462ba8b7c2b2aa5dc9eeba2905468f3bf", "Url": "https://api.github.com/repos/Trumeet/MiPushFramework", "Date": "2018-07-16T13:52:06Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(_heartBeatUpdateRetrySleep); } catch (java.lang.InterruptedException e) { com.cloud.hypervisor.kvm.resource.KVMHAMonitor.s_logger.debug(\"[ignored] interupted between heartbeat retries.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/9476/buggy-version/plugins.hypervisors.kvm.src.com.cloud.hypervisor.kvm.resource.KVMHAMonitor.java", "BodyUseAPI": ["java.lang.Thread.sleep(com.cloud.hypervisor.kvm.resource.KVMHAMonitor.Monitor)"], "Fixed commit": "27fc2171abfaf80306cd28effc8b3256a8c4efae", "Url": "https://api.github.com/repos/Slair1/cloudstack", "Date": "2018-02-28T00:36:35Z"},
{"Line": "=>637", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { player.setDataSource(context, uri); player.setAudioStreamType(AudioManager.STREAM_ALARM); player.prepare(); } catch (java.io.IOException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2348/buggy-version/app.src.main.java.com.example.masato.guruguru2.WebViewActivity.java", "BodyUseAPI": ["android.media.MediaPlayer.setAudioStreamType(AudioManager.STREAM_ALARM)", "android.media.MediaPlayer.setDataSource(android.content.Context,android.net.Uri)", "android.media.MediaPlayer.prepare()"], "Fixed commit": "2c67a3766ffa845c8b394803d4003f833d4218de", "Url": "https://api.github.com/repos/masato1252/guruguru2", "Date": "2018-02-25T12:15:31Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { if (unknownSeed) { throw new java.lang.UnsupportedOperationException(); } return (wrapped) instanceof io.github.pr0methean.betterrandom.RepeatableRandom ? ((io.github.pr0methean.betterrandom.RepeatableRandom) (wrapped)).getSeed() : seed.clone(); } finally { lock.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/561/buggy-version/betterrandom.src.main.java.io.github.pr0methean.betterrandom.prng.RandomWrapper.java", "BodyUseAPI": ["java.util.Random.getSeed()", "io.github.pr0methean.betterrandom.prng.RandomWrapper.clone()"], "Fixed commit": "acfb620f38a5c1b228a78c762e6be95f221ab14b", "Url": "https://api.github.com/repos/Pr0methean/BetterRandom", "Date": "2018-08-18T00:18:35Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { sc = java.nio.channels.SocketChannel.open(); sc.connect(new java.net.InetSocketAddress(java.net.InetAddress.getByName(ip), port)); int bs = request.length; java.nio.ByteBuffer writebb = java.nio.ByteBuffer.allocate((11 + bs)); writebb.put(java.lang.String.format(\"%011d\", bs).getBytes()); writebb.put(request); writebb.flip(); sc.write(writebb); if (requests != null) { try { byte[] readb = new byte[10240]; bs = 0; while ((bs = requests.read(readb)) != (-1)) { writebb.clear(); writebb = java.nio.ByteBuffer.allocate((11 + bs)); writebb.put(java.lang.String.format(\"%011d\", bs).getBytes()); if (bs != (readb.length)) { readb = java.util.Arrays.copyOf(readb, bs); } writebb.put(readb); writebb.flip(); sc.write(writebb); } } finally { requests.close(); } } writebb.clear(); writebb = java.nio.ByteBuffer.allocate(11); writebb.put(java.lang.String.format(\"%011d\", 0).getBytes()); writebb.flip(); sc.write(writebb); sc.shutdownOutput(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/5023/buggy-version/bigexclient.src.com.zdd.bdc.ex.Theclient.java", "BodyUseAPI": ["java.nio.ByteBuffer.put(byte[])", "java.nio.channels.SocketChannel.connect(java.net.InetSocketAddress)", "java.lang.String.format(java.lang.String,int)", "java.nio.ByteBuffer.put(byte[])", "java.nio.ByteBuffer.flip()", "java.lang.String.getBytes()", "java.nio.ByteBuffer.allocate(int)", "java.util.Arrays.copyOf(byte[],int)", "java.nio.channels.SocketChannel.write(java.nio.ByteBuffer)", "java.nio.ByteBuffer.flip()", "java.net.InetAddress.getByName(java.lang.String)", "java.nio.ByteBuffer.allocate(int)", "java.nio.channels.SocketChannel.shutdownOutput()", "java.nio.ByteBuffer.clear()", "java.nio.ByteBuffer.put(byte[])", "java.io.InputStream.read(byte[])", "java.nio.ByteBuffer.put(byte[])", "java.nio.channels.SocketChannel.open()", "java.lang.String.getBytes()", "java.nio.ByteBuffer.allocate(int)", "java.nio.ByteBuffer.put(byte[])", "java.nio.ByteBuffer.flip()", "java.lang.String.format(java.lang.String,int)", "java.nio.ByteBuffer.clear()", "java.nio.channels.SocketChannel.write(java.nio.ByteBuffer)", "java.lang.String.format(java.lang.String,int)", "java.nio.channels.SocketChannel.write(java.nio.ByteBuffer)", "java.lang.String.getBytes()", "java.io.InputStream.close()"], "Fixed commit": "2d0345e6a977f8c586df922beb373bbe09d33bcb", "Url": "https://api.github.com/repos/mchangeoutlook/zdd", "Date": "2018-08-13T03:34:26Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { activity.startActivity(intent); } catch (android.content.ActivityNotFoundException ex) { android.widget.Toast.makeText(activity, \"Cannot open system Data Roaming settings!\", Toast.LENGTH_LONG).show(); com.labs.dm.auto_tethering.MyLog.e(\"Data Roaming\", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4369/buggy-version/auto-tethering-app.src.main.java.com.labs.dm.auto_tethering.activity.helpers.RegisterGeneralListenerHelper.java", "BodyUseAPI": ["1.startActivity(android.content.Intent)"], "Fixed commit": "c0c5c4780c83b2bf177ad2d5b4bf61592824abf4", "Url": "https://api.github.com/repos/danielmroczka/auto-tethering", "Date": "2018-09-17T20:50:27Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/5571/buggy-version/src.it.dax.futjavaapi.main.Main.java", "BodyUseAPI": [], "Fixed commit": "6ec9e1fb7c3011d5d53f253ab22dbd8fe1fff4a7", "Url": "https://api.github.com/repos/DomenicoAngri/fut-java-api", "Date": "2018-01-18T13:49:22Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { responseEntity = gitlabServiceClient.listBranches(projectId, userId); } catch (java.lang.Exception e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/950/buggy-version/src.main.java.io.choerodon.devops.infra.persistence.impl.GitlabProjectRepositoryImpl.java", "BodyUseAPI": ["io.choerodon.devops.infra.feign.GitlabServiceClient.listBranches(java.lang.Integer,java.lang.Integer)"], "Fixed commit": "99a9e77910487fa2d6088dbb88e3b0a988dad878", "Url": "https://api.github.com/repos/choerodon/devops-service", "Date": "2018-06-08T13:13:47Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { result = indexationRepository.findAll(); } catch (org.elasticsearch.index.IndexNotFoundException e) { logger.error(\"Index not found : try to create it\"); indexationRepository.deleteIndex(); return findAll(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1145/buggy-version/src.main.java.com.gyd.photosearch.service.IndexationServiceImpl.java", "BodyUseAPI": ["com.gyd.photosearch.repository.IndexationRepository.findAll()"], "Fixed commit": "1f19330ee71000c0a6e9f7d6dbbec2dc3adf1147", "Url": "https://api.github.com/repos/Bambi69/photosearch", "Date": "2018-05-25T21:40:49Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.updatePerson(); return new seedu.addressbook.commands.CommandResult(java.lang.String.format(seedu.addressbook.commands.EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, this.nric)); } catch (seedu.addressbook.commands.UniquePersonList pnfe) { return new seedu.addressbook.commands.CommandResult(seedu.addressbook.common.Messages.MESSAGE_PERSON_NOT_IN_ADDRESSBOOK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/853/buggy-version/src.seedu.addressbook.commands.EditCommand.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.String)", "seedu.addressbook.commands.EditCommand.updatePerson()"], "Fixed commit": "bb686209baf2505e88f1d8c9a3ab2251a0b8dcce", "Url": "https://api.github.com/repos/CS2113-AY1819S1-F10-3/main", "Date": "2018-10-19T04:59:51Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { val = eval.evaluate(c); } catch (java.lang.NullPointerException npe) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4484/buggy-version/fineract-provider.src.main.java.org.apache.fineract.infrastructure.bulkimport.importhandler.ImportHandlerUtils.java", "BodyUseAPI": ["org.apache.fineract.infrastructure.bulkimport.importhandler.FormulaEvaluator.evaluate(org.apache.fineract.infrastructure.bulkimport.importhandler.Cell)"], "Fixed commit": "d7418ecec537e6ca5008698caa886c716e419b1b", "Url": "https://api.github.com/repos/wkk91193/incubator-fineract", "Date": "2018-06-15T13:30:07Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { val = eval.evaluate(c); } catch (java.lang.NullPointerException npe) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4484/buggy-version/fineract-provider.src.main.java.org.apache.fineract.infrastructure.bulkimport.importhandler.ImportHandlerUtils.java", "BodyUseAPI": ["org.apache.fineract.infrastructure.bulkimport.importhandler.FormulaEvaluator.evaluate(org.apache.fineract.infrastructure.bulkimport.importhandler.Cell)"], "Fixed commit": "d7418ecec537e6ca5008698caa886c716e419b1b", "Url": "https://api.github.com/repos/wkk91193/incubator-fineract", "Date": "2018-06-15T13:30:07Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { val = eval.evaluate(c); } catch (java.lang.NullPointerException npe) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4484/buggy-version/fineract-provider.src.main.java.org.apache.fineract.infrastructure.bulkimport.importhandler.ImportHandlerUtils.java", "BodyUseAPI": ["org.apache.fineract.infrastructure.bulkimport.importhandler.FormulaEvaluator.evaluate(org.apache.fineract.infrastructure.bulkimport.importhandler.Cell)"], "Fixed commit": "d7418ecec537e6ca5008698caa886c716e419b1b", "Url": "https://api.github.com/repos/wkk91193/incubator-fineract", "Date": "2018-06-15T13:30:07Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { val = eval.evaluate(c); } catch (java.lang.NullPointerException npe) { return 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4484/buggy-version/fineract-provider.src.main.java.org.apache.fineract.infrastructure.bulkimport.importhandler.ImportHandlerUtils.java", "BodyUseAPI": ["org.apache.fineract.infrastructure.bulkimport.importhandler.FormulaEvaluator.evaluate(org.apache.fineract.infrastructure.bulkimport.importhandler.Cell)"], "Fixed commit": "d7418ecec537e6ca5008698caa886c716e419b1b", "Url": "https://api.github.com/repos/wkk91193/incubator-fineract", "Date": "2018-06-15T13:30:07Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { val = eval.evaluate(c); } catch (java.lang.NullPointerException npe) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4484/buggy-version/fineract-provider.src.main.java.org.apache.fineract.infrastructure.bulkimport.importhandler.ImportHandlerUtils.java", "BodyUseAPI": ["org.apache.fineract.infrastructure.bulkimport.importhandler.FormulaEvaluator.evaluate(org.apache.fineract.infrastructure.bulkimport.importhandler.Cell)"], "Fixed commit": "d7418ecec537e6ca5008698caa886c716e419b1b", "Url": "https://api.github.com/repos/wkk91193/incubator-fineract", "Date": "2018-06-15T13:30:07Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { nvidia = java.lang.Runtime.getRuntime().exec(new java.lang.String[]{ \"nvidia-smi\", \"--list-gpus\" }); } catch (java.io.IOException e) { return new int[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1615/buggy-version/src.commons.src.main.java.eu.modernmt.hw.Graphics.java", "BodyUseAPI": ["java.lang.Runtime.getRuntime()", "java.lang.Runtime.exec(java.lang.String[])"], "Fixed commit": "0920bab14d028f790121be9f2c7c4a6a46804c4d", "Url": "https://api.github.com/repos/ModernMT/MMT", "Date": "2018-01-11T09:37:10Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { Calculator window = new Calculator(); window.frame.setVisible(true); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/656/buggy-version/src.Main.java", "BodyUseAPI": ["window.frame.setVisible(boolean)"], "Fixed commit": "4858a2241adffc43ec740f87bce86cd5b2c4070e", "Url": "https://api.github.com/repos/ApocArkhesir/javaSimpleCalculator", "Date": "2018-01-19T00:21:59Z"},
{"Line": "=>620", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { main.java.de.htwsaar.dfs.model.Peer.saveImageContainer(ic); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1473/buggy-version/src.main.java.main.java.de.htwsaar.dfs.model.Peer.java", "BodyUseAPI": ["main.java.de.htwsaar.dfs.model.Peer.saveImageContainer(main.java.de.htwsaar.dfs.model.ImageContainer)"], "Fixed commit": "4747ceeccac9089d895a1bd7c1b620c132914a42", "Url": "https://api.github.com/repos/Projekt-DFS/DFS_v2", "Date": "2018-08-03T08:54:02Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { val = eval.evaluate(c); } catch (java.lang.NullPointerException npe) { return 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1620/buggy-version/fineract-provider.src.main.java.org.apache.fineract.infrastructure.bulkimport.importhandler.ImportHandlerUtils.java", "BodyUseAPI": ["org.apache.fineract.infrastructure.bulkimport.importhandler.FormulaEvaluator.evaluate(org.apache.fineract.infrastructure.bulkimport.importhandler.Cell)"], "Fixed commit": "b4ae828f96b5950be2fe0ebf6ac9145fed50a1c6", "Url": "https://api.github.com/repos/wkk91193/incubator-fineract", "Date": "2018-06-15T13:30:07Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { val = eval.evaluate(c); } catch (java.lang.NullPointerException npe) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1620/buggy-version/fineract-provider.src.main.java.org.apache.fineract.infrastructure.bulkimport.importhandler.ImportHandlerUtils.java", "BodyUseAPI": ["org.apache.fineract.infrastructure.bulkimport.importhandler.FormulaEvaluator.evaluate(org.apache.fineract.infrastructure.bulkimport.importhandler.Cell)"], "Fixed commit": "b4ae828f96b5950be2fe0ebf6ac9145fed50a1c6", "Url": "https://api.github.com/repos/wkk91193/incubator-fineract", "Date": "2018-06-15T13:30:07Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { val = eval.evaluate(c); } catch (java.lang.NullPointerException npe) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1620/buggy-version/fineract-provider.src.main.java.org.apache.fineract.infrastructure.bulkimport.importhandler.ImportHandlerUtils.java", "BodyUseAPI": ["org.apache.fineract.infrastructure.bulkimport.importhandler.FormulaEvaluator.evaluate(org.apache.fineract.infrastructure.bulkimport.importhandler.Cell)"], "Fixed commit": "b4ae828f96b5950be2fe0ebf6ac9145fed50a1c6", "Url": "https://api.github.com/repos/wkk91193/incubator-fineract", "Date": "2018-06-15T13:30:07Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { val = eval.evaluate(c); } catch (java.lang.NullPointerException npe) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1620/buggy-version/fineract-provider.src.main.java.org.apache.fineract.infrastructure.bulkimport.importhandler.ImportHandlerUtils.java", "BodyUseAPI": ["org.apache.fineract.infrastructure.bulkimport.importhandler.FormulaEvaluator.evaluate(org.apache.fineract.infrastructure.bulkimport.importhandler.Cell)"], "Fixed commit": "b4ae828f96b5950be2fe0ebf6ac9145fed50a1c6", "Url": "https://api.github.com/repos/wkk91193/incubator-fineract", "Date": "2018-06-15T13:30:07Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { val = eval.evaluate(c); } catch (java.lang.NullPointerException npe) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1620/buggy-version/fineract-provider.src.main.java.org.apache.fineract.infrastructure.bulkimport.importhandler.ImportHandlerUtils.java", "BodyUseAPI": ["org.apache.fineract.infrastructure.bulkimport.importhandler.FormulaEvaluator.evaluate(org.apache.fineract.infrastructure.bulkimport.importhandler.Cell)"], "Fixed commit": "b4ae828f96b5950be2fe0ebf6ac9145fed50a1c6", "Url": "https://api.github.com/repos/wkk91193/incubator-fineract", "Date": "2018-06-15T13:30:07Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { doClientStartup(client); } catch (java.lang.Exception e) { org.maestro.worker.jms.JMSSenderWorker.logger.error(\"Unable to start the sender worker: {}\", e.getMessage(), e); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8709/buggy-version/maestro-workers.maestro-worker-jms.src.main.java.org.maestro.worker.jms.JMSSenderWorker.java", "BodyUseAPI": ["org.maestro.worker.jms.JMSSenderWorker.doClientStartup(org.maestro.common.jms.SenderClient)"], "Fixed commit": "0da898db7a521fe0059b0306805b27f1b9d96d25", "Url": "https://api.github.com/repos/maestro-performance/maestro-java", "Date": "2018-10-26T06:26:25Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { doClientStartup(client); } catch (java.lang.Exception e) { org.maestro.worker.jms.JMSReceiverWorker.logger.error(\"Unable to start the receiver worker: {}\", e.getMessage(), e); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8709/buggy-version/maestro-workers.maestro-worker-jms.src.main.java.org.maestro.worker.jms.JMSReceiverWorker.java", "BodyUseAPI": ["org.maestro.worker.jms.JMSReceiverWorker.doClientStartup(org.maestro.common.jms.ReceiverClient)"], "Fixed commit": "0da898db7a521fe0059b0306805b27f1b9d96d25", "Url": "https://api.github.com/repos/maestro-performance/maestro-java", "Date": "2018-10-26T06:26:25Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return carRepository.getById(o); } catch (java.lang.NullPointerException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8395/buggy-version/sample.src.main.java.io.ermdev.mapfierj.sample.sample1.IntegerCarConverter.java", "BodyUseAPI": ["io.ermdev.mapfierj.sample.sample1.CarRepository.getById(java.lang.Integer)"], "Fixed commit": "a6baec5f53a7aa9ca92943165b9ea01ea10de860", "Url": "https://api.github.com/repos/erafaelmanuel/mappyfy", "Date": "2018-01-25T14:50:45Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { event = children.getValue(com.dohman.sdur.Event.class); mEventList.add(event); } catch (com.google.firebase.database.DatabaseException e) { android.util.Log.e(com.dohman.sdur.Tab2Events.TAG, \"onDataChange: Children don't exist.\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/7170/buggy-version/app.src.main.java.com.dohman.sdur.Tab2Events.java", "BodyUseAPI": ["java.util.List<com.dohman.sdur.Event>.add(com.dohman.sdur.Event)", "com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Fixed commit": "1e29c012d08f17873acbb2d225107a537a163191", "Url": "https://api.github.com/repos/Dohmanlechx/sdur", "Date": "2018-09-13T19:51:52Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.resumptionToken = listIdentifiers.getResumptionToken(); } catch (javax.xml.transform.TransformerException | java.lang.NoSuchFieldException e) { throw new java.util.NoSuchElementException(\"didn't find resumptiontoken\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4825/buggy-version/back-end.src.main.java.ee.hm.dop.service.synchronizer.oaipmh.IdentifierIterator.java", "BodyUseAPI": ["ORG.oclc.oai.harvester2.verb.ListIdentifiers.getResumptionToken()"], "Fixed commit": "bb6147cc3eb5efb58ee8a1519c0c0309bdfe9cf9", "Url": "https://api.github.com/repos/hariduspilv/koolikott", "Date": "2018-03-13T12:51:01Z"},
{"Line": "=>905", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { filePath = (java.net.URLDecoder.decode(resource.getPath(), \"UTF-8\")) + (io.nuls.account.constant.AccountConstant.ACCOUNTKEYSTORE_FOLDER_NAME); } catch (java.io.UnsupportedEncodingException e) { e.printStackTrace(); filePath = (resource.getPath()) + (io.nuls.account.constant.AccountConstant.ACCOUNTKEYSTORE_FOLDER_NAME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4309/buggy-version/account-module.base.account-rpc.src.main.java.io.nuls.account.rpc.resource.AccountResource.java", "BodyUseAPI": ["java.net.URLDecoder.decode(java.lang.String,java.lang.String)", "java.net.URL.getPath()"], "Fixed commit": "4f102c317f9f95e8a18ffdc5fd7a17401e1751b6", "Url": "https://api.github.com/repos/nuls-io/nuls", "Date": "2018-10-31T06:13:32Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { loginCode = dataProvider.login(java.lang.Integer.valueOf(name.getText().toString()), java.lang.Integer.valueOf(pwd.getText().toString())); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/7946/buggy-version/jnidemo.src.main.java.com.liuhe.jnidemo.MainActivity.java", "BodyUseAPI": ["name.getText().toString()", "com.liuhe.jnidemo.DataProvider.login(java.lang.Integer,java.lang.Integer)", "pwd.getText().toString()", "java.lang.Integer.valueOf(name.getText().toString())", "java.lang.Integer.valueOf(pwd.getText().toString())", "android.widget.EditText.getText()", "android.widget.EditText.getText()"], "Fixed commit": "2bdff40e303305a54bc7ca9e62600a1d8c2c17b6", "Url": "https://api.github.com/repos/liuhea/DailyPractice", "Date": "2018-04-06T14:31:10Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { final java.util.Iterator<org.exist.dom.persistent.DocumentImpl> iterator = modifiedDocuments.getDocumentIterator(); while (iterator.hasNext()) { finishTrigger(transaction, iterator.next()); } } finally { triggers.clear(); modifiedDocuments.clear(); lockedDocuments.unlock(); lockedDocuments = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/6797/buggy-version/src.org.exist.xupdate.Modification.java", "BodyUseAPI": ["org.exist.dom.persistent.MutableDocumentSet.getDocumentIterator()", "java.util.Iterator<org.exist.dom.persistent.DocumentImpl>.hasNext()", "org.exist.xupdate.Modification.finishTrigger(org.exist.storage.txn.Txn,iterator.next())", "java.util.Iterator<org.exist.dom.persistent.DocumentImpl>.next()"], "Fixed commit": "5aae00f6bf94189df847193f54b6efc8cea043de", "Url": "https://api.github.com/repos/wsalesky/exist", "Date": "2017-07-13T23:21:51Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { doPost(restTemplate, resourceServerProperties.getTokenInfoUri(), restTemplate.getAccessToken().getValue()); } catch (java.lang.Exception e) { doPost(restTemplate, resourceServerProperties.getTokenInfoUri(), restTemplate.getAccessToken().getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/6172/buggy-version/src.main.java.gov.ca.cwds.service.sso.OAuth2Service.java", "BodyUseAPI": ["gov.ca.cwds.service.sso.OAuth2Service.doPost(org.springframework.security.oauth2.client.OAuth2RestTemplate,resourceServerProperties.getTokenInfoUri(),restTemplate.getAccessToken().getValue())", "restTemplate.getAccessToken().getValue()", "org.springframework.security.oauth2.client.OAuth2RestTemplate.getAccessToken()", "org.springframework.boot.autoconfigure.security.oauth2.resource.ResourceServerProperties.getTokenInfoUri()"], "Fixed commit": "a7bf3334079ffc4690c9d2a638f4db5a270c47ce", "Url": "https://api.github.com/repos/ca-cwds/perry", "Date": "2018-05-02T23:09:38Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { configuredMemory = org.apache.flink.configuration.MemorySize.parse(configuration.getString(TaskManagerOptions.MANAGED_MEMORY_SIZE)).getMebiBytes(); } catch (java.lang.IllegalArgumentException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/791/buggy-version/flink-runtime.src.main.java.org.apache.flink.runtime.taskexecutor.TaskManagerServicesConfiguration.java", "BodyUseAPI": ["org.apache.flink.configuration.Configuration.getString(TaskManagerOptions.MANAGED_MEMORY_SIZE)", "org.apache.flink.configuration.MemorySize.parse(configuration.getString(TaskManagerOptions.MANAGED_MEMORY_SIZE)).getMebiBytes()", "org.apache.flink.configuration.MemorySize.parse(configuration.getString(TaskManagerOptions.MANAGED_MEMORY_SIZE))"], "Fixed commit": "5dc2e6094814f552cfeeb7b33532f88858d17c7d", "Url": "https://api.github.com/repos/yanghua/flink", "Date": "2018-02-10T08:34:17Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { id = java.lang.Long.valueOf(target_id); } catch (java.lang.Exception e) { return \"\u683c\u5f0f\u9519\u8bef,\u8bf7\u91cd\u65b0\u8f93\u5165(#\u67e5\u8be2\u767d\u540d QQ)\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/355/buggy-version/src.lol.clann.whitelist.listener.WhitelistListner.java", "BodyUseAPI": ["java.lang.Long.valueOf(java.lang.String)"], "Fixed commit": "c66b6ff6550852f82b82734d7f8f6a09599ab878", "Url": "https://api.github.com/repos/azbh111/QQHelper", "Date": "2018-02-13T07:46:08Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { posts.add(new randyngo.myreddit.Post(entrys.get(i).getTitle(), entrys.get(i).getAuthor().getName(), entrys.get(i).getUpdated(), postContent.get(0), postContent.get(lastPostIndex))); } catch (java.lang.NullPointerException e) { posts.add(new randyngo.myreddit.Post(entrys.get(i).getTitle(), \"None\", entrys.get(i).getUpdated(), postContent.get(0), postContent.get(lastPostIndex))); android.util.Log.e(randyngo.myreddit.MainActivity.TAG, (\"onResponse: NullPointerException: \" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9278/buggy-version/app.src.main.java.randyngo.myreddit.MainActivity.java", "BodyUseAPI": ["entrys.get(i).getUpdated()", "java.util.ArrayList<randyngo.myreddit.Post>.add(randyngo.myreddit.Post)", "entrys.get(i).getTitle()", "entrys.get(i).getAuthor()", "java.util.List<java.lang.String>.get(int)", "entrys.get(i).getAuthor().getName()", "java.util.List<randyngo.myreddit.model.entry.Entry>.get(int)", "java.util.List<randyngo.myreddit.model.entry.Entry>.get(int)", "java.util.List<randyngo.myreddit.model.entry.Entry>.get(int)", "java.util.List<java.lang.String>.get(int)"], "Fixed commit": "1e7ca1f12dc86414ec94e17cb3870bc8521c6071", "Url": "https://api.github.com/repos/rngo1214/MyReddit", "Date": "2018-09-28T01:43:15Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mAntChannel.release(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7775/buggy-version/autosense.src.main.java.org.md2k.autosense.antradio.connection.ChannelController.java", "BodyUseAPI": ["com.dsi.ant.channel.AntChannel.release()"], "Fixed commit": "973dc1f1e045ce1cfa273063132e50cba4f1fed0", "Url": "https://api.github.com/repos/MD2Korg/mCerebrum-AutoSense", "Date": "2018-03-23T19:08:41Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { startDate = deparatureDate.parse(deparaturedate); } catch (java.text.ParseException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/2596/buggy-version/app.src.main.java.com.group.avengers.tourmate.Fragments.EventRegisterFragment.java", "BodyUseAPI": ["java.text.SimpleDateFormat.parse(java.lang.String)"], "Fixed commit": "af8f15f313d6341f87f35ceaef05aaf261e35051", "Url": "https://api.github.com/repos/aqibmehedi007/PakhiPakaPapeKhai", "Date": "2018-05-25T17:06:04Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { db2versuch3.datenhaltung.couchdb.entites.Lager lager = steu.lagerLesenById(id); db2versuch3.konsole.lagerkonsole.Hauptprogramm.wechselLagerDaten(lager); if (steu.lagerUpdate(lager)) java.lang.System.out.print(\"Datensatz wurde ge\u00e4ndert\"); else java.lang.System.out.print(\"Fehler\"); } catch (java.lang.Exception e) { java.lang.System.err.println(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7320/buggy-version/DB2Versuch3.src.db2versuch3.konsole.lagerkonsole.Hauptprogramm.java", "BodyUseAPI": ["db2versuch3.konsole.lagerkonsole.Hauptprogramm.wechselLagerDaten(db2versuch3.datenhaltung.couchdb.entites.Lager)", "db2versuch3.fachlogik.lagersteuerung.services.ILagerCouchSteuerung.lagerUpdate(db2versuch3.datenhaltung.couchdb.entites.Lager)", "java.io.PrintStream.print(java.lang.String)", "java.io.PrintStream.print(java.lang.String)", "db2versuch3.fachlogik.lagersteuerung.services.ILagerCouchSteuerung.lagerLesenById(java.lang.String)"], "Fixed commit": "c5886985022b72cfef3ffc915bf1472513a1b01d", "Url": "https://api.github.com/repos/Densk12/DBRepo", "Date": "2018-06-27T18:16:35Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { user = query.getSingleResult(); } catch (java.lang.NullPointerException e) { throw new exceptions.UserNotFoundException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4653/buggy-version/persistence.src.main.java.repositories.UserRepository.java", "BodyUseAPI": ["javax.persistence.TypedQuery<models.User>.getSingleResult()"], "Fixed commit": "098a7102a2f413ef6b1aa2bb0df76bc52a8b12b1", "Url": "https://api.github.com/repos/KusiakK/WebLibraryServlets", "Date": "2018-10-03T12:33:58Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mDefaultUserAgent = new android.webkit.WebView(appContext).getSettings().getUserAgentString(); } catch (java.lang.RuntimeException re) { mDefaultUserAgent = \"Mozilla/5.0 (Linux; Android 6.0; default FluxC UA; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/44.0.2403.119 Mobile Safari/537.36\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6208/buggy-version/fluxc.src.main.java.org.wordpress.android.fluxc.network.UserAgent.java", "BodyUseAPI": ["new android.webkit.WebView(appContext).getSettings().getUserAgentString()", "android.webkit.WebView.getSettings()"], "Fixed commit": "a50f9e5ff34f921113f0df744fe61d543f6d632a", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android", "Date": "2018-01-26T16:08:15Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(100); } catch (java.lang.InterruptedException ex) { java.lang.System.err.println(\"Interrupted\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/5441/buggy-version/SimpleChessServer.src.simplechessserver.TimeControl.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "02a6545cc92f3adf1c699442053771453384cd68", "Url": "https://api.github.com/repos/LeftistTachyon/SimpleChess", "Date": "2018-05-04T13:08:08Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { employeeId = (txtEdit.getText().trim().equals(\"\")) ? 0 : java.lang.Integer.parseInt(txtEdit.getText().trim()); } catch (java.lang.NumberFormatException e) { employeeId = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7948/buggy-version/src.com.gaurabdahal.ui.EmployeeFrame.java", "BodyUseAPI": ["javax.swing.JTextField.getText()", "java.lang.String.equals(java.lang.String)", "java.lang.String.trim()", "java.lang.String.trim()", "javax.swing.JTextField.getText()", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "c9f326a29ef79e88639b06808dcd92ec5c7e1085", "Url": "https://api.github.com/repos/gaurabdahal/employee-directory", "Date": "2018-10-03T03:53:20Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { myClusterSubmissionConfigurable.validate(); } catch (com.intellij.openapi.options.ConfigurationException e) { java.lang.String remoteRunPrefix = \"[Remotely Run in Cluster] \"; if (e instanceof com.intellij.execution.configurations.RuntimeConfigurationError) { throw new com.intellij.execution.configurations.RuntimeConfigurationError((remoteRunPrefix + (e.getMessage())), e.getQuickFix()); }else if (e instanceof com.intellij.execution.configurations.RuntimeConfigurationWarning) { throw new com.intellij.execution.configurations.RuntimeConfigurationWarning((remoteRunPrefix + (e.getMessage())), e.getQuickFix()); }else if (e instanceof com.intellij.execution.configurations.RuntimeConfigurationException) { throw new com.intellij.execution.configurations.RuntimeConfigurationException((remoteRunPrefix + (e.getMessage())), (remoteRunPrefix + (e.getTitle()))); }else { throw new com.intellij.openapi.options.ConfigurationException((remoteRunPrefix + (e.getMessage())), (remoteRunPrefix + (e.getTitle()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/5857/buggy-version/PluginsAndFeatures.azure-toolkit-for-intellij.src.com.microsoft.azure.hdinsight.spark.ui.SparkBatchJobConfigurable.java", "BodyUseAPI": ["com.microsoft.azure.hdinsight.spark.ui.SparkSubmissionContentPanelConfigurable.validate()"], "Fixed commit": "e90255717d62fb63bd7f3233a4c53ba34ce1d235", "Url": "https://api.github.com/repos/wezhang/azure-tools-for-java", "Date": "2018-10-10T11:08:08Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { jobScheduler.cancelAll(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/254/buggy-version/app.src.main.java.hu.kfg.naplo.JobManagerService.java", "BodyUseAPI": ["android.app.job.JobScheduler.cancelAll()"], "Fixed commit": "3fdf4ef2bf916574966160023b47d17c8069829c", "Url": "https://api.github.com/repos/hexadec/KFGnaplo", "Date": "2018-01-20T18:12:55Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(100); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/2983/buggy-version/src.main.java.com.ginkgocap.ywxt.controller.meeting.MeetingController.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "429f0b70d84e8c651ee6360570df2b18750ea353", "Url": "https://api.github.com/repos/ximenfeixue/phoenix-hyserver", "Date": "2018-01-11T10:06:40Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.client = createClient(context); if ((this.client) == null) throw new org.apache.nifi.reporting.InitializationException(\"Unable to create Pulsar Client\"); } catch (org.apache.pulsar.client.api.PulsarClientException pEx) { throw new org.apache.nifi.reporting.InitializationException(\"Unable to create Pulsar Client\", pEx); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9474/buggy-version/nifi-pulsar-client-service.src.main.java.org.apache.nifi.pulsar.StandardPulsarClientService.java", "BodyUseAPI": ["org.apache.nifi.pulsar.StandardPulsarClientService.createClient(org.apache.nifi.controller.ConfigurationContext)"], "Fixed commit": "82d9aa8507bcb0319801ffcafdc4a3acd270c292", "Url": "https://api.github.com/repos/openconnectors/nifi-pulsar-client-services", "Date": "2018-01-22T19:00:25Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { long contentLength = in.available(); meta.setContentLength(contentLength); } catch (java.io.IOException e) { throw new org.onetwo.common.exception.BaseException(\"store stream to cos error.\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7046/buggy-version/core.modules.boot.src.main.java.org.onetwo.boot.module.cos.CosClientWrapper.java", "BodyUseAPI": ["com.qcloud.cos.model.ObjectMetadata.setContentLength(long)", "java.io.InputStream.available()"], "Fixed commit": "734ae6b18e9b4e2f240bcd700ee7f2a3d287f61f", "Url": "https://api.github.com/repos/wayshall/onetwo", "Date": "2018-01-10T09:43:52Z"},
{"Line": "=>386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { new org.controller.BookingController(org.storage.SqlStorage.getInstance()).checkOut(currentUser.get(chatId).getCardNumber(), \"avmaterial\", avMaterialCursor.get(chatId).getId()); showMainMenuKeyboard(chatId, ((avMaterialCursor.get(chatId).getTitle()) + \" checked out successfully!\")); } catch (org.controller.BookingController e) { showMainMenuKeyboard(chatId, \"Sorry, but you cannot check out this item now.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/8254/buggy-version/src.main.java.org.user_interface.ui.Bot.java", "BodyUseAPI": ["org.controller.BookingController.checkOut(currentUser.get(chatId).getCardNumber(),java.lang.String,avMaterialCursor.get(chatId).getId())", "java.util.Map<java.lang.Long, org.user_interface.ui.User>.get(java.lang.Long)", "java.util.Map<java.lang.Long, org.user_interface.ui.AvMaterial>.get(java.lang.Long)", "org.storage.SqlStorage.getInstance()", "currentUser.get(chatId).getCardNumber()", "avMaterialCursor.get(chatId).getId()", "avMaterialCursor.get(chatId).getTitle()", "java.util.Map<java.lang.Long, org.user_interface.ui.AvMaterial>.get(java.lang.Long)", "org.user_interface.ui.Bot.showMainMenuKeyboard(java.lang.Long,((avMaterialCursor.get(chatId).getTitle()) + \" checked out successfully!\"))"], "Fixed commit": "be189ea41d5d077bb5c37860ae457e10898b0892", "Url": "https://api.github.com/repos/Harrm/LibrarySystem", "Date": "2018-03-05T10:40:11Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.System.out.println((\"File path:\" + (savedFile.getName()))); if (!(checkIsAvaliableDiskSpace((savedFile + \"\")))) { UserInterface.Controllers.PopUpWindow errorWindow = new UserInterface.Controllers.ErrorWindow((\"Not enough space to save \" + (savedFile.getName()))); errorWindow.display(); }else { } } catch (java.lang.NullPointerException nullPointer) { java.lang.System.out.println(\"Saving file window closed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/2080/buggy-version/src.UserInterface.Controllers.SaveFileController.java", "BodyUseAPI": ["java.io.File.getName()", "UserInterface.Controllers.PopUpWindow.display()", "java.io.PrintStream.println(java.lang.String)", "UserInterface.Controllers.SaveFileController.checkIsAvaliableDiskSpace(java.lang.String)", "java.io.File.getName()"], "Fixed commit": "b77592882bfe99ee5bde220fc33f0d69c93fb77d", "Url": "https://api.github.com/repos/KamilKwapisz/Wireworld", "Date": "2018-05-26T18:23:28Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return (((android.os.Build.VERSION.SDK_INT) >= 23) && (mFingerprintManager.isHardwareDetected())) && (mFingerprintManager.hasEnrolledFingerprints()); } catch (java.lang.SecurityException ex) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/8707/buggy-version/android.src.main.java.com.rnfingerprint.FingerprintHandler.java", "BodyUseAPI": ["android.hardware.fingerprint.FingerprintManager.hasEnrolledFingerprints()", "android.hardware.fingerprint.FingerprintManager.isHardwareDetected()"], "Fixed commit": "18ec1f15e25505447cbbbd00bf0084b03fcc237c", "Url": "https://api.github.com/repos/1debit/react-native-touch-id", "Date": "2018-04-09T12:14:32Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { unmute = (sql.SqlConnect.getUnmute().getTime()) - (java.lang.System.currentTimeMillis()); } catch (java.lang.NullPointerException npe) { unmute = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1985/buggy-version/src.threads.RoleExtend.java", "BodyUseAPI": ["sql.SqlConnect.getUnmute().getTime()", "sql.SqlConnect.getUnmute()", "java.lang.System.currentTimeMillis()"], "Fixed commit": "719357ebd35a13e4464e86203dd6fbb1217c3237", "Url": "https://api.github.com/repos/xHelixStorm/Azrael", "Date": "2018-08-28T18:11:51Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { calculate(); } catch (java.lang.Exception e) { display.setText(\"ERR\"); android.util.Log.d(\"There is an error\", \"ERROR\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1148/buggy-version/app.src.main.java.graphingcaculator.lcpsdysy.android.apps.com.graphingcalculator.CalcActivity.java", "BodyUseAPI": ["graphingcaculator.lcpsdysy.android.apps.com.graphingcalculator.CalcActivity.3.calculate()"], "Fixed commit": "6ea2ef428530cd3f69bf395bc40ee371b445d6d6", "Url": "https://api.github.com/repos/PrasannS/GraphingCalculatorPSLCDYSY", "Date": "2018-10-21T20:54:18Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { draftResponse = aDraftResponse().withId(getDraft.getId()).withDocument(uk.gov.hmcts.ccd.data.draft.DefaultDraftGateway.MAPPER.treeToValue(getDraft.getDocument(), uk.gov.hmcts.ccd.data.draft.CaseDraft.class)).withType(getDraft.getType()).withCreated(getDraft.getCreated().toLocalDateTime()).withUpdated(getDraft.getUpdated().toLocalDateTime()).build(); } catch (java.io.IOException e) { uk.gov.hmcts.ccd.data.draft.DefaultDraftGateway.LOG.warn(\"Error while deserializing draft data content\", e); throw new uk.gov.hmcts.ccd.endpoint.exceptions.ServiceException(uk.gov.hmcts.ccd.data.draft.DefaultDraftGateway.DRAFT_STORE_DESERIALIZATION_ERR_MESSAGE, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/3028/buggy-version/src.main.java.uk.gov.hmcts.ccd.data.draft.DefaultDraftGateway.java", "BodyUseAPI": ["getDraft.getUpdated().toLocalDateTime()", "aDraftResponse().withId(getDraft.getId()).withDocument(uk.gov.hmcts.ccd.data.draft.DefaultDraftGateway.MAPPER.treeToValue(getDraft.getDocument(), uk.gov.hmcts.ccd.data.draft.CaseDraft.class))", "uk.gov.hmcts.ccd.data.draft.Draft.getType()", "aDraftResponse().withId(getDraft.getId()).withDocument(uk.gov.hmcts.ccd.data.draft.DefaultDraftGateway.MAPPER.treeToValue(getDraft.getDocument(), uk.gov.hmcts.ccd.data.draft.CaseDraft.class)).withType(getDraft.getType()).withCreated(getDraft.getCreated().toLocalDateTime())", "aDraftResponse().withId(getDraft.getId()).withDocument(uk.gov.hmcts.ccd.data.draft.DefaultDraftGateway.MAPPER.treeToValue(getDraft.getDocument(), uk.gov.hmcts.ccd.data.draft.CaseDraft.class)).withType(getDraft.getType())", "aDraftResponse().withId(getDraft.getId())", "uk.gov.hmcts.ccd.data.draft.DefaultDraftGateway.aDraftResponse()", "aDraftResponse().withId(getDraft.getId()).withDocument(uk.gov.hmcts.ccd.data.draft.DefaultDraftGateway.MAPPER.treeToValue(getDraft.getDocument(), uk.gov.hmcts.ccd.data.draft.CaseDraft.class)).withType(getDraft.getType()).withCreated(getDraft.getCreated().toLocalDateTime()).withUpdated(getDraft.getUpdated().toLocalDateTime())", "uk.gov.hmcts.ccd.data.draft.Draft.getDocument()", "uk.gov.hmcts.ccd.data.draft.Draft.getUpdated()", "aDraftResponse().withId(getDraft.getId()).withDocument(uk.gov.hmcts.ccd.data.draft.DefaultDraftGateway.MAPPER.treeToValue(getDraft.getDocument(), uk.gov.hmcts.ccd.data.draft.CaseDraft.class)).withType(getDraft.getType()).withCreated(getDraft.getCreated().toLocalDateTime()).withUpdated(getDraft.getUpdated().toLocalDateTime()).build()", "getDraft.getCreated().toLocalDateTime()", "com.fasterxml.jackson.databind.ObjectMapper.treeToValue(getDraft.getDocument(),java.lang.Class)", "uk.gov.hmcts.ccd.data.draft.Draft.getCreated()", "uk.gov.hmcts.ccd.data.draft.Draft.getId()"], "Fixed commit": "6630e867e08f593fcaf5591d3a3fbf67ff947d03", "Url": "https://api.github.com/repos/hmcts/ccd-data-store-api", "Date": "2018-08-03T16:31:54Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { batchId = java.lang.Integer.parseInt(((java.lang.String) (context.getJobDetail().getKey().getName()))); } catch (java.lang.NumberFormatException e) { throw new org.quartz.JobExecutionException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6393/buggy-version/src.community.taskmanager.src.main.java.org.geoserver.taskmanager.schedule.impl.BatchJobImpl.java", "BodyUseAPI": ["context.getJobDetail().getKey()", "java.lang.Integer.parseInt(((java.lang.String) (context.getJobDetail().getKey().getName())))", "org.quartz.JobExecutionContext.getJobDetail()", "context.getJobDetail().getKey().getName()"], "Fixed commit": "a52e3abe55f835aaa9fb22e0c52b05e056150923", "Url": "https://api.github.com/repos/DOV-Vlaanderen/geoserver", "Date": "2018-04-06T12:21:02Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { myArray = new main.java.Item[n]; } catch (java.lang.Exception e) { throw new java.lang.NegativeArraySizeException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1145/buggy-version/Sorting_given_Review.src.main.java.SortDemoData.java", "BodyUseAPI": [], "Fixed commit": "67dc91cdd8a31da811695204deae08fb1a5812d7", "Url": "https://api.github.com/repos/pgpandit/pgpandit_review", "Date": "2018-02-18T19:19:40Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { entity = org.apache.http.util.EntityUtils.toString(res.getEntity()); } catch (java.lang.Exception e) { com.creamsugardonut.kibanaproxy.service.CacheService.logger.info(\"exception occurred\"); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/8225/buggy-version/src.main.java.com.creamsugardonut.kibanaproxy.service.CacheService.java", "BodyUseAPI": ["org.apache.http.util.EntityUtils.toString(res.getEntity())", "org.apache.http.HttpResponse.getEntity()"], "Fixed commit": "3798393c615e3407d717ca73deb4b13dccdeaf37", "Url": "https://api.github.com/repos/lks21c/elastic-proxy", "Date": "2018-01-02T01:42:49Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { resultAsList = c.criteriaResult(new com.box.l10n.mojito.service.tm.search.TextUnitDTONativeObjectMapper()); } catch (java.lang.Exception e) { com.box.l10n.mojito.service.tm.search.TextUnitSearcher.logger.error(\"Unexcepted error when searching for text units, try once more\", e); try { resultAsList = c.criteriaResult(new com.box.l10n.mojito.service.tm.search.TextUnitDTONativeObjectMapper()); } catch (java.lang.Exception e2) { com.box.l10n.mojito.service.tm.search.TextUnitSearcher.logger.error(\"Retry didn't work\", e2); throw e2; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/2351/buggy-version/webapp.src.main.java.com.box.l10n.mojito.service.tm.search.TextUnitSearcher.java", "BodyUseAPI": ["com.github.pnowy.nc.core.NativeCriteria.criteriaResult(com.box.l10n.mojito.service.tm.search.TextUnitDTONativeObjectMapper)"], "Fixed commit": "e16202fbfab21f832f18d6ed9c69665f81bda620", "Url": "https://api.github.com/repos/box/mojito", "Date": "2018-05-02T19:49:39Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { byte[] imageBytes = com.metrobit.parentalcontrol.activity.ChildMainActivity.getByteArrayFromImageView(appimgsend); imageString = android.util.Base64.encodeToString(imageBytes, Base64.DEFAULT); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/242/buggy-version/app.src.main.java.com.metrobit.parentalcontrol.activity.ChildMainActivity.java", "BodyUseAPI": ["android.util.Base64.encodeToString(byte[],Base64.DEFAULT)", "com.metrobit.parentalcontrol.activity.ChildMainActivity.getByteArrayFromImageView(android.widget.ImageView)"], "Fixed commit": "e294ed6add53ce3d86fe8f490163766043acd36d", "Url": "https://api.github.com/repos/AnkitRana56/parental_control", "Date": "2018-04-11T14:09:06Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { srsDescription = srsDescription.substring(srsDescription.indexOf(\"EPSG\"), srsDescription.indexOf(\"&\")).replace(\"/0/\", \":\"); } catch (java.lang.StringIndexOutOfBoundsException e) { srsDescription = srsDescription.substring(srsDescription.indexOf(\"EPSG\")).replace(\"/0/\", \":\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6351/buggy-version/src.main.java.eu.openeo.api.impl.DataApiServiceImpl.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "1f8bce44d794223b71350b9096fb40de950bbf69", "Url": "https://api.github.com/repos/Open-EO/openeo-wcps-driver", "Date": "2018-03-02T10:45:27Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { convertedDate = dateFormatter.parse(justDate); } catch (java.text.ParseException e) { android.util.Log.e(com.example.android.booklit.ArticleAdapter.LOG_TAG, \"Error parsing date String into Date\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/300/buggy-version/app.src.main.java.com.example.android.booklit.ArticleAdapter.java", "BodyUseAPI": ["java.text.SimpleDateFormat.parse(java.lang.String)"], "Fixed commit": "0c4a5daa3b89026296f01bac0e3fe70203ac19fb", "Url": "https://api.github.com/repos/kangarruu/Booklit", "Date": "2018-08-22T04:13:15Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return ((com.android.ide.common.repository.GradleCoordinate) (finders.invoke(gradleProjectSystem, coordinate, includePreview))); } catch (java.lang.IllegalAccessException | java.lang.reflect.InvocationTargetException e) { io.flutter.project.FlutterProjectSystem.LOG.error(e); throw new java.lang.IllegalArgumentException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4803/buggy-version/flutter-studio.src.io.flutter.project.FlutterProjectSystem.java", "BodyUseAPI": ["java.lang.reflect.Method.invoke(com.android.tools.idea.projectsystem.gradle.GradleProjectSystem,com.android.ide.common.repository.GradleCoordinate,boolean)"], "Fixed commit": "2c9e924df7a8afcf0e2327ec0188ce76e54c7e86", "Url": "https://api.github.com/repos/flutter/flutter-intellij", "Date": "2018-07-09T21:31:55Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { simRequest = gov.pnnl.goss.gridappsd.dto.RequestSimulation.parse(request.toString()); } catch (com.google.gson.JsonSyntaxException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/2130/buggy-version/gov.pnnl.goss.gridappsd.src.gov.pnnl.goss.gridappsd.process.ProcessEvent.java", "BodyUseAPI": ["gov.pnnl.goss.gridappsd.dto.RequestSimulation.parse(java.lang.String)", "java.io.Serializable.toString()"], "Fixed commit": "898559b9e51ab4cd928055aa7a7dcb3b13fe889d", "Url": "https://api.github.com/repos/tdtalbot/GOSS-GridAPPS-D", "Date": "2018-08-09T21:56:34Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ko = koRepo.loadSimpleKnowledgeObject(arkId); } catch (java.net.URISyntaxException e) { log.warn((((\"URI error fpr getting object with ark id \" + arkId) + \" \") + e)); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9193/buggy-version/activator.src.main.java.edu.umich.lhs.activator.services.ActivationService.java", "BodyUseAPI": ["edu.umich.lhs.activator.repository.KnowledgeObjectRepository.loadSimpleKnowledgeObject(edu.umich.lhs.activator.domain.ArkId)"], "Fixed commit": "971336acf23828c7ffec1d7340d877f43c9e8985", "Url": "https://api.github.com/repos/kgrid/kgrid-activator", "Date": "2018-03-28T19:04:16Z"},
{"Line": "=>432", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { nextLugerAfterNextOnTrack = order.nextStartNumber(nextStartNumber, rte_st.currentCompetition); } catch (pl.jeleniagora.mks.exceptions.LugerDoesntExist e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/2804/buggy-version/src.pl.jeleniagora.mks.events.UpdateCurrentAndNextLuger.java", "BodyUseAPI": ["pl.jeleniagora.mks.start.order.StartOrderInterface.nextStartNumber(java.lang.Short,rte_st.currentCompetition)"], "Fixed commit": "bd182baea05225ecf54aad2f204194d5ddebcf06", "Url": "https://api.github.com/repos/SP8EBC/MKS_JG", "Date": "2018-10-13T10:28:57Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Double tempSubscribe = ((java.lang.Double) (result.get(\"subscribe\"))); if (tempSubscribe != null) { subscribe = tempSubscribe.intValue(); } } catch (java.lang.Exception e1) { logger.error(e1.getLocalizedMessage(), e1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/8976/buggy-version/confucius-biz.src.main.java.com.iquanwai.confucius.biz.domain.weixin.api.WeiXinApiServiceImpl.java", "BodyUseAPI": ["java.lang.Double.intValue()", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "b4a6257a06571f75d3634b4b75ab8402b765a904", "Url": "https://api.github.com/repos/sfwind/confucius", "Date": "2018-03-28T07:39:13Z"},
{"Line": "=>494", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(1500); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/2204/buggy-version/app.src.main.java.io.github.teamseven.myvirtualplanner.MainActivity.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "6c17e26e73f67ef93e52769b6e71ae40b66eca43", "Url": "https://api.github.com/repos/phantom-5/MyVirtualPlanner-Android", "Date": "2018-04-16T04:50:32Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.Iterator it = map.entrySet().iterator(); while (it.hasNext()) { java.util.Map.Entry pair = ((java.util.Map.Entry) (it.next())); writeMap.putString(((java.lang.String) (pair.getKey())), ((java.lang.String) (pair.getValue()))); it.remove(); } } catch (java.lang.Throwable e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9315/buggy-version/android.src.main.java.com.taplytics.react.TaplyticsReactModule.java", "BodyUseAPI": ["com.facebook.react.bridge.WritableMap.putString(java.lang.Object,java.lang.Object)", "java.util.Iterator.remove()", "java.util.Map.Entry.getKey()", "java.util.Iterator.hasNext()", "java.util.Iterator.next()", "java.util.Map<java.lang.String, java.lang.String>.entrySet()", "java.util.Set<java.util.Map.Entry<java.lang.String, java.lang.String>>.iterator()", "java.util.Map.Entry.getValue()"], "Fixed commit": "aa668cf8fd1a5b7b56da4c11458324d4106e5d44", "Url": "https://api.github.com/repos/taplytics/taplytics-react-native", "Date": "2018-04-23T19:34:42Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { createDirectoryIfMissing(downloadTempFolder); createDirectoryIfMissing(notesFolder); } catch (java.lang.Exception e) { throw new seedu.address.logic.commands.exceptions.CommandException(\"Failed to create new folders\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/8953/buggy-version/src.main.java.seedu.address.logic.commands.ClearNotesCommand.java", "BodyUseAPI": ["seedu.address.logic.commands.ClearNotesCommand.createDirectoryIfMissing(java.nio.file.Path)", "seedu.address.logic.commands.ClearNotesCommand.createDirectoryIfMissing(java.nio.file.Path)"], "Fixed commit": "2eeaec15261a6629cb7403850d43120a65c164e7", "Url": "https://api.github.com/repos/auskure/main", "Date": "2018-10-30T10:56:07Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (((this.userID) != null) && ((this.userID) != \"\")) { mDatabase.child(\"issues\").child(issueID).child(\"board_user\").setValue((((this.boardID) + \"_\") + (this.userID))); } } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6668/buggy-version/app.src.main.java.io.juismi.RegisterIssue.java", "BodyUseAPI": ["mDatabase.child(\"issues\").child(issueID).child(\"board_user\").setValue(java.lang.String)", "mDatabase.child(\"issues\").child(issueID).child(java.lang.String)", "mDatabase.child(\"issues\").child(java.lang.String)", "com.google.firebase.database.DatabaseReference.child(java.lang.String)"], "Fixed commit": "936c115446e6ff54421e8a9414238d906f720569", "Url": "https://api.github.com/repos/MikeSagnelli/JUISMI", "Date": "2018-05-05T02:30:19Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.util.Log.d(LOGTAG, (\"Quantity_txt: \" + (quantityBox.getText().toString()))); quantity = java.lang.Integer.parseInt(quantityBox.getText().toString()); android.util.Log.d(LOGTAG, (\"Quantity_int: \" + quantity)); android.util.Log.d(LOGTAG, (\"Quantity_txt: \" + (quantityBox.getText().toString()))); if (quantity < 0) { android.widget.Toast.makeText(this, \"Error, quantity must be at least 0\", Toast.LENGTH_LONG).show(); quantityBox.setError(\"quantity must be greater or equal 0\"); return; } } catch (java.lang.NumberFormatException ex) { quantityBox.setError(\"quantity must be greater or equal 0\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5424/buggy-version/app.src.main.java.com.green_orca.android.demo2018a2.MainActivity.java", "BodyUseAPI": ["android.widget.Toast.makeText(this, \"Error, quantity must be at least 0\", Toast.LENGTH_LONG).show()", "android.util.Log.d(java.lang.String,java.lang.String)", "android.util.Log.d(java.lang.String,(\"Quantity_txt: \" + (quantityBox.getText().toString())))", "android.widget.EditText.getText()", "quantityBox.getText().toString()", "android.widget.Toast.makeText(com.green_orca.android.demo2018a2.MainActivity,java.lang.String,Toast.LENGTH_LONG)", "android.widget.EditText.setError(java.lang.String)", "android.widget.EditText.getText()", "quantityBox.getText().toString()", "android.util.Log.d(java.lang.String,(\"Quantity_txt: \" + (quantityBox.getText().toString())))", "java.lang.Integer.parseInt(quantityBox.getText().toString())", "android.widget.EditText.getText()", "quantityBox.getText().toString()"], "Fixed commit": "81f5c8781d790170f9ce4179bea166685aff32bd", "Url": "https://api.github.com/repos/greenorca/SimpleSQLiteApp", "Date": "2018-05-09T19:57:16Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { TextView.setText(java.lang.String.valueOf(solution)); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7113/buggy-version/app.src.main.java.com.example.jl.myapplication.Basiccalculator.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)", "java.lang.String.valueOf(double)"], "Fixed commit": "9e97ace9e57b01d6f05c35bc525c4ad41693bdba", "Url": "https://api.github.com/repos/JohnsonLu3/AndroidCalculator", "Date": "2018-01-27T01:59:48Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { menu.findItem(R.id.action_delete).setVisible(((CURRENT_NOTIFICATION_ID) != 0)); } catch (java.lang.NullPointerException ex) { android.util.Log.w(\"ActivityTime\", \"Not found menuItem menu\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3783/buggy-version/app.src.main.java.com.rodgersdevelop.listsformagazine.ActivityTime2.java", "BodyUseAPI": ["menu.findItem(R.id.action_delete).setVisible(boolean)", "android.view.Menu.findItem(R.id.action_delete)"], "Fixed commit": "0109cc85374da7941ffff681a5a15d2d38d74bd4", "Url": "https://api.github.com/repos/RodGerses/List", "Date": "2018-08-08T09:52:48Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { setChanged(); notifyObservers(node); clearChanged(); } catch (java.lang.Exception e) { co.edu.uniquindio.chord.node.StableRing.logger.error(\"Stable ring error\", e); throw new java.lang.IllegalStateException(((\" node \" + (node.getKey())) + \"could not be stabilized\"), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3669/buggy-version/p2p.chord.src.main.java.co.edu.uniquindio.chord.node.StableRing.java", "BodyUseAPI": ["co.edu.uniquindio.chord.node.StableRing.notifyObservers(co.edu.uniquindio.chord.node.ChordNode)", "co.edu.uniquindio.chord.node.StableRing.setChanged()", "co.edu.uniquindio.chord.node.StableRing.clearChanged()"], "Fixed commit": "821814cb6136773b5811fa19f7fef53c7c178bfd", "Url": "https://api.github.com/repos/estigma88/jdhtuq", "Date": "2018-02-25T21:00:34Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mergedRes.append(com.elasticsearchcache.util.JsonUtil.convertAsString(respes.get((responseCnt++)))); } catch (com.fasterxml.jackson.core.JsonProcessingException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6646/buggy-version/src.main.java.com.elasticsearchcache.service.QueryPlanService.java", "BodyUseAPI": ["java.lang.StringBuilder.append(com.elasticsearchcache.util.JsonUtil.convertAsString(respes.get((responseCnt++))))", "com.elasticsearchcache.util.JsonUtil.convertAsString(java.util.Map<java.lang.String, java.lang.Object>)", "java.util.List<java.util.Map<java.lang.String, java.lang.Object>>.get(int)"], "Fixed commit": "e9b03a5e6b76de22b4b0de3c48c90bf407a9b681", "Url": "https://api.github.com/repos/lks21c/elasticsearch-cache", "Date": "2018-01-10T10:11:44Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { list.clear(); } catch (java.lang.Exception e) { list = new java.util.ArrayList<com.sillykid.app.entity.mine.myrelease.mydynamic.MyDynamicBean.DataBean.ResultBean>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7973/buggy-version/SillyChildClient.app.src.main.java.com.sillykid.app.mine.myrelease.mydynamic.MyDynamicFragment.java", "BodyUseAPI": ["java.util.List<MyDynamicBean.DataBean.ResultBean>.clear()"], "Fixed commit": "c56322c9776141528e0d1168ea037fc740bd5b01", "Url": "https://api.github.com/repos/921668753/SillyChildClient2-Android", "Date": "2018-10-08T03:44:11Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { list.add(goodsListBean.getData().get(i)); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7973/buggy-version/SillyChildClient.app.src.main.java.com.sillykid.app.mall.goodslist.GoodsListActivity.java", "BodyUseAPI": ["java.util.List<GoodsListBean.DataBean>.add(goodsListBean.getData().get(i))", "com.sillykid.app.entity.mall.goodslist.GoodsListBean.getData()", "goodsListBean.getData().get(int)"], "Fixed commit": "c56322c9776141528e0d1168ea037fc740bd5b01", "Url": "https://api.github.com/repos/921668753/SillyChildClient2-Android", "Date": "2018-10-08T03:44:11Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { list.add(shopHomePageBean.getData().get(i)); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7973/buggy-version/SillyChildClient.app.src.main.java.com.sillykid.app.mall.goodslist.shop.ShopHomePageFragment.java", "BodyUseAPI": ["com.sillykid.app.entity.mall.goodslist.shop.ShopHomePageBean.getData()", "shopHomePageBean.getData().get(int)", "java.util.List<ShopHomePageBean.DataBean>.add(shopHomePageBean.getData().get(i))"], "Fixed commit": "c56322c9776141528e0d1168ea037fc740bd5b01", "Url": "https://api.github.com/repos/921668753/SillyChildClient2-Android", "Date": "2018-10-08T03:44:11Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { Resources.Packet currentPacket = Server.Server.messageQueue.pop(); for (Server.ClientHandler client : Server.Server.clients) { send(client, currentPacket); } } catch (java.lang.Exception e) { java.lang.System.err.println(\"No more messages to send.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4512/buggy-version/src.Server.ServerThread.java", "BodyUseAPI": ["Server.ServerThread.send(Server.ClientHandler,Resources.Packet)", "Server.Server.messageQueue.pop()"], "Fixed commit": "190ec1006476daa58d372f2a9dd77a3d31533eac", "Url": "https://api.github.com/repos/Kjelldg/Chatroom", "Date": "2018-10-18T20:34:10Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { amount = java.lang.Integer.valueOf(params[((params.length) - 1)].toString()); } catch (java.lang.NumberFormatException e) { amount = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6875/buggy-version/src.MyFavoriteCommandsProcessor.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "82f7663510fe05b791fe0246cde73b4e60cec280", "Url": "https://api.github.com/repos/LieberLois/CommandScanner", "Date": "2018-04-22T21:54:01Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { field = stencyl.sw.lnf.Theme.class.getDeclaredField(color); } catch (java.lang.NoSuchFieldException e) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2771/buggy-version/src.com.torcado.themes.ThemeLoader.java", "BodyUseAPI": ["java.lang.Class.getDeclaredField(java.lang.String)"], "Fixed commit": "fd1bf7301cc6c5da3787621b63cfaf21b23c07a2", "Url": "https://api.github.com/repos/torcado194/stencyl-themes", "Date": "2018-07-21T22:10:32Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { field = stencyl.sw.editors.snippet.designer.block.BlockTheme.class.getDeclaredField(color); } catch (java.lang.NoSuchFieldException e) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2771/buggy-version/src.com.torcado.themes.ThemeLoader.java", "BodyUseAPI": ["java.lang.Class.getDeclaredField(java.lang.String)"], "Fixed commit": "fd1bf7301cc6c5da3787621b63cfaf21b23c07a2", "Url": "https://api.github.com/repos/torcado194/stencyl-themes", "Date": "2018-07-21T22:10:32Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { fileName = java.net.URLDecoder.decode(fileName, \"UTF-8\"); } catch (java.io.UnsupportedEncodingException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/8606/buggy-version/src.android.Downloader.java", "BodyUseAPI": ["java.net.URLDecoder.decode(java.lang.String,java.lang.String)"], "Fixed commit": "88ec950c31e8f33b275419ff1860691c581fd455", "Url": "https://api.github.com/repos/shougao/Cordova-plugin-downloader", "Date": "2018-07-04T03:31:55Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { final org.thryft.native_.InternetDomainName referralParsed = org.thryft.native_.InternetDomainName.from(record.getParsed().getReferral().get().toLowerCase()); if (queriedWhoisServers.contains(referralParsed)) { io.github.minorg.whoisclient.WhoisClient.logger.warn(\"referral loop: {}\", record.getParsed().getReferral().get()); break; } } catch (final java.lang.IllegalArgumentException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6277/buggy-version/java.src.main.java.io.github.minorg.whoisclient.WhoisClient.java", "BodyUseAPI": ["record.getParsed().getReferral().get()", "io.github.minorg.whoisclient.WhoisRecord.getParsed()", "java.util.List<org.thryft.native_.InternetDomainName>.contains(org.thryft.native_.InternetDomainName)", "org.thryft.native_.InternetDomainName.from(record.getParsed().getReferral().get().toLowerCase())", "record.getParsed().getReferral().get()", "io.github.minorg.whoisclient.WhoisRecord.getParsed()", "record.getParsed().getReferral().get().toLowerCase()", "org.slf4j.Logger.warn(java.lang.String,record.getParsed().getReferral().get())", "record.getParsed().getReferral()", "record.getParsed().getReferral()"], "Fixed commit": "402f68eeae8557b79cfdea4a80e100631204b09a", "Url": "https://api.github.com/repos/minorg/whoisclient", "Date": "2018-01-23T22:33:34Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { switch (responseCode) { case 200 : return new java.lang.String(clientDecrypt(com.biyong.open.server.utils.Utils.readInputStream(connection.getInputStream()), r.aes), com.biyong.open.server.utils.Utils.CHARSET_UTF_8); default : java.lang.System.out.println(new java.lang.String(com.biyong.open.server.utils.Utils.readInputStream(connection.getErrorStream()), com.biyong.open.server.utils.Utils.CHARSET_UTF_8)); return wrapErrorMessage(responseCode); } } finally { wr.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/9250/buggy-version/src.main.java.com.biyong.open.server.utils.HttpClient.java", "BodyUseAPI": ["com.biyong.open.server.utils.HttpClient.wrapErrorMessage(int)", "com.biyong.open.server.utils.HttpClient.clientDecrypt(com.biyong.open.server.utils.Utils.readInputStream(connection.getInputStream()),r.aes)", "com.biyong.open.server.utils.Utils.readInputStream(java.io.InputStream)", "com.biyong.open.server.utils.Utils.readInputStream(java.io.InputStream)", "java.net.HttpURLConnection.getErrorStream()", "java.io.PrintStream.println(java.lang.String)", "java.net.HttpURLConnection.getInputStream()"], "Fixed commit": "964d2f47a86eacd5ae9b4ec48a31323932ec36e3", "Url": "https://api.github.com/repos/openbiyong/merchant-server-demo-java", "Date": "2018-10-18T08:36:31Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.net.URL url = new java.net.URL(audioInfo.getMediaArt()); albumArt = android.graphics.BitmapFactory.decodeStream(url.openConnection().getInputStream()); } catch (java.io.IOException ee) { java.lang.System.out.println(ee); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1335/buggy-version/dmaudiostreamer.src.main.java.dm.audiostreamer.AudioStreamingService.java", "BodyUseAPI": ["android.graphics.BitmapFactory.decodeStream(java.io.InputStream)", "java.net.URLConnection.getInputStream()", "dm.audiostreamer.MediaMetaData.getMediaArt()", "java.net.URL.openConnection()"], "Fixed commit": "9a708ee6bacc60d4c6eab1067a8e2ba8cc544d05", "Url": "https://api.github.com/repos/sachinvarma/DMAudioStreamer", "Date": "2018-09-14T07:13:53Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (java.lang.String URLPart : URLParts[1].split(FORWARD_SLASH_DELIM)) { forwardSlashParts.add(URLPart); } } catch (java.lang.ArrayIndexOutOfBoundsException e) { forwardSlashParts.add(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5884/buggy-version/src.SHoxy.Cache.CachedItem.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "706c0946c488deedec5000b38b8d5eec88b89968", "Url": "https://api.github.com/repos/SJB4386/SHoxy", "Date": "2018-04-22T19:52:53Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { getPortalUserData().getUserCodes().setImgSigId(((java.lang.Integer) (getCustomEntityManagerFactory().getLportalMemOrgEntityManagerFactory().createEntityManager().createQuery((\"\" + ((\"SELECT i.imgSigId.imgSigId \" + \"FROM CoopImgSigMem i \") + \"WHERE i.memNo.memNo = :memNo\"))).setParameter(\"memNo\", getMembers().get(i).getMemNo()).getResultList().get(0)))); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5915/buggy-version/src.java.bean.MemberPortalAccountData.java", "BodyUseAPI": ["java.util.List<model.CoopMember>.get(int)", "bean.MemberPortalAccountData.getMembers()", "getCustomEntityManagerFactory().getLportalMemOrgEntityManagerFactory().createEntityManager().createQuery(java.lang.String)", "getPortalUserData().getUserCodes().setImgSigId(((java.lang.Integer) (getCustomEntityManagerFactory().getLportalMemOrgEntityManagerFactory().createEntityManager().createQuery((\"\" + ((\"SELECT i.imgSigId.imgSigId \" + \"FROM CoopImgSigMem i \") + \"WHERE i.memNo.memNo = :memNo\"))).setParameter(\"memNo\", getMembers().get(i).getMemNo()).getResultList().get(0))))", "getCustomEntityManagerFactory().getLportalMemOrgEntityManagerFactory().createEntityManager()", "getCustomEntityManagerFactory().getLportalMemOrgEntityManagerFactory().createEntityManager().createQuery((\"\" + ((\"SELECT i.imgSigId.imgSigId \" + \"FROM CoopImgSigMem i \") + \"WHERE i.memNo.memNo = :memNo\"))).setParameter(java.lang.String,getMembers().get(i).getMemNo())", "getCustomEntityManagerFactory().getLportalMemOrgEntityManagerFactory().createEntityManager().createQuery((\"\" + ((\"SELECT i.imgSigId.imgSigId \" + \"FROM CoopImgSigMem i \") + \"WHERE i.memNo.memNo = :memNo\"))).setParameter(\"memNo\", getMembers().get(i).getMemNo()).getResultList()", "getMembers().get(i).getMemNo()", "getCustomEntityManagerFactory().getLportalMemOrgEntityManagerFactory().createEntityManager().createQuery((\"\" + ((\"SELECT i.imgSigId.imgSigId \" + \"FROM CoopImgSigMem i \") + \"WHERE i.memNo.memNo = :memNo\"))).setParameter(\"memNo\", getMembers().get(i).getMemNo()).getResultList().get(int)", "bean.PortalUserData.getUserCodes()", "bean.MemberPortalAccountData.getPortalUserData()", "bean.CustomEntityManagerFactory.getLportalMemOrgEntityManagerFactory()", "bean.MemberPortalAccountData.getCustomEntityManagerFactory()"], "Fixed commit": "ae70486562387f520a55be28ecba592e5967bd24", "Url": "https://api.github.com/repos/sdcc-i-coop-portal/zoom01", "Date": "2018-07-17T09:37:45Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { getPortalUserData().getUserCodes().setImgSigId(((java.lang.Integer) (getCustomEntityManagerFactory().getLportalMemOrgEntityManagerFactory().createEntityManager().createQuery((\"\" + ((\"SELECT i.imgSigId.imgSigId \" + \"FROM CoopImgSigAssoc i \") + \"WHERE i.memNo.memNo = :memNo\"))).setParameter(\"memNo\", getAssociates().get(i).getMemNo()).getResultList().get(0)))); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5915/buggy-version/src.java.bean.AssociatePortalAccountData.java", "BodyUseAPI": ["getPortalUserData().getUserCodes().setImgSigId(((java.lang.Integer) (getCustomEntityManagerFactory().getLportalMemOrgEntityManagerFactory().createEntityManager().createQuery((\"\" + ((\"SELECT i.imgSigId.imgSigId \" + \"FROM CoopImgSigAssoc i \") + \"WHERE i.memNo.memNo = :memNo\"))).setParameter(\"memNo\", getAssociates().get(i).getMemNo()).getResultList().get(0))))", "bean.PortalUserData.getUserCodes()", "getAssociates().get(i).getMemNo()", "bean.CustomEntityManagerFactory.getLportalMemOrgEntityManagerFactory()", "getCustomEntityManagerFactory().getLportalMemOrgEntityManagerFactory().createEntityManager().createQuery((\"\" + ((\"SELECT i.imgSigId.imgSigId \" + \"FROM CoopImgSigAssoc i \") + \"WHERE i.memNo.memNo = :memNo\"))).setParameter(\"memNo\", getAssociates().get(i).getMemNo()).getResultList().get(int)", "bean.AssociatePortalAccountData.getPortalUserData()", "getCustomEntityManagerFactory().getLportalMemOrgEntityManagerFactory().createEntityManager()", "getCustomEntityManagerFactory().getLportalMemOrgEntityManagerFactory().createEntityManager().createQuery(java.lang.String)", "getCustomEntityManagerFactory().getLportalMemOrgEntityManagerFactory().createEntityManager().createQuery((\"\" + ((\"SELECT i.imgSigId.imgSigId \" + \"FROM CoopImgSigAssoc i \") + \"WHERE i.memNo.memNo = :memNo\"))).setParameter(java.lang.String,getAssociates().get(i).getMemNo())", "bean.AssociatePortalAccountData.getAssociates()", "java.util.List<model.CoopAssociate>.get(int)", "bean.AssociatePortalAccountData.getCustomEntityManagerFactory()", "getCustomEntityManagerFactory().getLportalMemOrgEntityManagerFactory().createEntityManager().createQuery((\"\" + ((\"SELECT i.imgSigId.imgSigId \" + \"FROM CoopImgSigAssoc i \") + \"WHERE i.memNo.memNo = :memNo\"))).setParameter(\"memNo\", getAssociates().get(i).getMemNo()).getResultList()"], "Fixed commit": "ae70486562387f520a55be28ecba592e5967bd24", "Url": "https://api.github.com/repos/sdcc-i-coop-portal/zoom01", "Date": "2018-07-17T09:37:45Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((currentPlayer.getDuration()) < 0) return -1; return ((int) (currentPlayer.getDuration())); } catch (java.lang.Exception e) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/9766/buggy-version/hybridmediaplayer.src.main.java.hybridmediaplayer.ExoMediaPlayer.java", "BodyUseAPI": ["com.google.android.exoplayer2.Player.getDuration()", "com.google.android.exoplayer2.Player.getDuration()"], "Fixed commit": "75b12f15de54da044d56e242f71492251b9d2d50", "Url": "https://api.github.com/repos/mkaflowski/HybridMediaPlayer", "Date": "2018-07-23T13:05:57Z"},
{"Line": "=>561", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return (!(currentTimeline.isEmpty())) && (currentTimeline.getWindow(((getCurrentWindowIndex()) < 0 ? 0 : getCurrentWindowIndex()), window).isSeekable); } catch (java.lang.ArrayIndexOutOfBoundsException e) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/9766/buggy-version/hybridmediaplayer.src.main.java.hybridmediaplayer.CastPlayer.java", "BodyUseAPI": ["hybridmediaplayer.CastPlayer.getCurrentWindowIndex()", "hybridmediaplayer.CastPlayer.getCurrentWindowIndex()", "hybridmediaplayer.CastTimeline.getWindow(int,Timeline.Window)", "hybridmediaplayer.CastTimeline.isEmpty()"], "Fixed commit": "75b12f15de54da044d56e242f71492251b9d2d50", "Url": "https://api.github.com/repos/mkaflowski/HybridMediaPlayer", "Date": "2018-07-23T13:05:57Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (d.isSupported(java.awt.Desktop.Action.BROWSE)) { d.browse(new java.net.URI(url)); return; } } catch (java.lang.RuntimeException ex) { if (com.jidesoft.utils.SystemInfo.isMacOSX()) { try { final java.lang.ProcessBuilder builder = new java.lang.ProcessBuilder(\"/usr/bin/osascript\", \"-e\"); java.lang.String command = (\"tell application \\\"Safari\\\" to open location \\\"\" + url) + '\"'; builder.command().add(command); command = \"-e tell application \\\"Safari\\\" to activate\"; builder.command().add(command); builder.start(); return; } catch (java.lang.Exception ignored) { } } } catch (java.io.IOException ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6019/buggy-version/src.main.java.mediathek.gui.actions.UrlHyperlinkAction.java", "BodyUseAPI": ["java.awt.Desktop.browse(java.net.URI)", "java.awt.Desktop.isSupported(java.awt.Desktop.Action)"], "Fixed commit": "51e2dea5856898e58bfd428e74a2c0495f6c8cfd", "Url": "https://api.github.com/repos/mediathekview/MediathekView", "Date": "2018-05-05T23:03:16Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.aesh.command.container.CommandContainer<?, ?> container = registry.getCommand(command.get(0), null); if ((command.size()) > 1) { if ((container.getParser().getChildParser(command.get(1))) == null) { throw new org.jboss.galleon.cli.CommandExecutionException(org.jboss.galleon.cli.cmd.CliErrors.commandNotFound(cmd)); } } } catch (org.aesh.command.CommandNotFoundException ex) { throw new org.jboss.galleon.cli.CommandExecutionException(org.jboss.galleon.cli.cmd.CliErrors.commandNotFound(cmd)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/594/buggy-version/cli.src.main.java.org.jboss.galleon.cli.cmd.HelpCommand.java", "BodyUseAPI": ["org.jboss.galleon.cli.cmd.CliErrors.commandNotFound(java.lang.String)", "java.util.List<java.lang.String>.get(int)", "org.aesh.command.container.CommandContainer<?, ?>.getParser()", "org.aesh.command.registry.CommandRegistry<? extends org.aesh.command.Command, ? extends org.aesh.command.invocation.CommandInvocation>.getCommand(java.lang.String,<nulltype>)", "container.getParser().getChildParser(java.lang.String)", "java.util.List<java.lang.String>.get(int)", "java.util.List<java.lang.String>.size()"], "Fixed commit": "6541fe7defb06a0c15656306bafbd519e6c8d3bd", "Url": "https://api.github.com/repos/wildfly/galleon", "Date": "2018-10-09T11:37:49Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { list = neg.getEventos(crt.getUsuario()); } catch (negocio.NegocioException ex) { java.util.logging.Logger.getLogger(vista.accionEvento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6011/buggy-version/TareaScouts3-war.src.java.vista.accionEvento.java", "BodyUseAPI": ["vista.ControlAutorizacion.getUsuario()", "negocio.Negocio.getEventos(crt.getUsuario())"], "Fixed commit": "4488d14814c27b336665172e0a006147e9a80dae", "Url": "https://api.github.com/repos/samuelbaltanas/EntregaScouts3", "Date": "2018-06-02T17:11:50Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mFingerPrintManager = ((android.hardware.fingerprint.FingerprintManager) (com.codename1.impl.android.AndroidNativeUtil.getActivity().getSystemService(Activity.FINGERPRINT_SERVICE))); response[0] = (mFingerPrintManager.isHardwareDetected()) && (mFingerPrintManager.hasEnrolledFingerprints()); } catch (java.lang.Throwable t) { com.codename1.io.Log.p(\"This exception could be 100% valid on old devices, we're logging it just to be safe. Older devices might throw NoClassDefFoundError...\"); com.codename1.io.Log.e(t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4925/buggy-version/native.android.com.codename1.fingerprint.impl.InternalFingerprintImpl.java", "BodyUseAPI": ["com.codename1.impl.android.AndroidNativeUtil.getActivity().getSystemService(Activity.FINGERPRINT_SERVICE)", "com.codename1.impl.android.AndroidNativeUtil.getActivity()", "android.hardware.fingerprint.FingerprintManager.isHardwareDetected()", "android.hardware.fingerprint.FingerprintManager.hasEnrolledFingerprints()"], "Fixed commit": "7c7e039b6487b19d882652b46ae9cb212f3b055b", "Url": "https://api.github.com/repos/codenameone/FingerprintScanner", "Date": "2018-02-02T15:23:07Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { team = teamRepository.save(team); } catch (org.springframework.dao.DataIntegrityViolationException e) { throw new ch.fhnw.edu.wodss.tippspielapi.exception.UniqueTeamNameException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4641/buggy-version/src.main.java.ch.fhnw.edu.wodss.tippspielapi.service.TeamService.java", "BodyUseAPI": ["ch.fhnw.edu.wodss.tippspielapi.persistence.TeamRepository.save(ch.fhnw.edu.wodss.tippspielapi.model.Team)"], "Fixed commit": "53c80bc81adf0cee54fe0da0b336744ef065bce7", "Url": "https://api.github.com/repos/fhnw-students/wodss-tippspiel-api", "Date": "2018-05-27T15:47:21Z"},
{"Line": "=>439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { response.setContentType(content.getProperty(\"jcr:mimeType\").getString()); } catch (java.lang.Exception ex) { com.ozguryazilim.telve.jcr.ui.JcrController.LOG.warn(\"MimeType not found\", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/8865/buggy-version/telve-jcr.src.main.java.com.ozguryazilim.telve.jcr.ui.JcrController.java", "BodyUseAPI": ["content.getProperty(\"jcr:mimeType\").getString()", "javax.jcr.Node.getProperty(java.lang.String)", "javax.servlet.http.HttpServletResponse.setContentType(content.getProperty(\"jcr:mimeType\").getString())"], "Fixed commit": "dc0a83ad9b39c869026067021b82918482d8f412", "Url": "https://api.github.com/repos/ozguryazilimas/telve4", "Date": "2018-04-17T14:52:14Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { fm.setMimeType(cn.getProperty(\"jcr:mimeType\").getString()); } catch (java.lang.Exception ex) { com.ozguryazilim.telve.jcr.ui.JcrController.LOG.warn(\"MimeType not found\", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/8865/buggy-version/telve-jcr.src.main.java.com.ozguryazilim.telve.jcr.ui.JcrController.java", "BodyUseAPI": ["javax.jcr.Node.getProperty(java.lang.String)", "cn.getProperty(\"jcr:mimeType\").getString()", "com.ozguryazilim.telve.jcr.ui.FileInfo.setMimeType(cn.getProperty(\"jcr:mimeType\").getString())"], "Fixed commit": "dc0a83ad9b39c869026067021b82918482d8f412", "Url": "https://api.github.com/repos/ozguryazilimas/telve4", "Date": "2018-04-17T14:52:14Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.restcomm.connect.dao.entities.Profile profile = profilesDao.getProfile(profileSid); if (profile != null) { return profile; }else { throw new org.restcomm.connect.http.exceptions.OperatedAccountMissing((\"Profile not found:\" + profileSid)); } } catch (java.lang.Exception ex) { throw new org.restcomm.connect.dao.exceptions.AccountHierarchyDepthCrossed(\"issue getting profile\", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6900/buggy-version/restcomm.restcomm.http.src.main.java.org.restcomm.connect.http.ProfileEndpoint.java", "BodyUseAPI": ["org.restcomm.connect.dao.ProfilesDao.getProfile(java.lang.String)"], "Fixed commit": "bad6395fc5bae0ffe5e2da58a02ef93f94480249", "Url": "https://api.github.com/repos/RestComm/Restcomm-Connect", "Date": "2018-01-23T01:42:57Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.time.ZonedDateTime usDate = java.time.LocalDate.parse(date, formatter).atStartOfDay(java.time.ZoneId.of(Constants.SHERDOG_TIME_ZONE)); return usDate.withZoneSameInstant(zoneId); } catch (java.time.format.DateTimeParseException e2) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4172/buggy-version/src.main.java.com.ftpix.sherdogparser.parsers.ParserUtils.java", "BodyUseAPI": ["java.time.LocalDate.atStartOfDay(java.time.ZoneId)", "java.time.ZonedDateTime.withZoneSameInstant(java.time.ZoneId)", "java.time.LocalDate.parse(java.lang.String,java.time.format.DateTimeFormatter)", "java.time.ZoneId.of(Constants.SHERDOG_TIME_ZONE)"], "Fixed commit": "f785208b67f0967ebc051a8c6786578f8c7ff525", "Url": "https://api.github.com/repos/lamarios/sherdog-parser", "Date": "2018-03-09T11:31:11Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { reader = new java.io.BufferedReader(new java.io.FileReader(FILENAME)); jsonwrapper = new com.google.gson.Gson().fromJson(reader, zarvis.bakery.utils.BakeryJsonWrapper.class); } catch (java.io.FileNotFoundException e) { e.printStackTrace(); } finally { try { reader.close(); } catch (java.io.IOException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2914/buggy-version/src.main.java.zarvis.bakery.utils.Util.java", "BodyUseAPI": ["com.google.gson.Gson.fromJson(java.io.BufferedReader,java.lang.Class)"], "Fixed commit": "b7d1747ad0dadc0a46c99a6700dad3f0ea4e7be6", "Url": "https://api.github.com/repos/bouknify/project-zarvis", "Date": "2018-01-25T14:17:39Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { registeredUser = mapper.readValue(userJson, entities.User.class); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/421/buggy-version/MVCProject.src.controllers.AuthController.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.ObjectMapper.readValue(java.lang.String,java.lang.Class)"], "Fixed commit": "cc71d51f75e0364ec4028526f64c7f480b567ed0", "Url": "https://api.github.com/repos/RosanneUssery/WorkIt", "Date": "2018-01-12T19:07:26Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mSerialManager.matchList(); } catch (android.os.RemoteException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7967/buggy-version/app.src.main.java.com.iot.zhs.guanwuyou.LoginActivity.java", "BodyUseAPI": ["com.iot.zhs.guanwuyou.ISerialPort.matchList()"], "Fixed commit": "7b26fb0ad2d1245122efe7ca3796e2e0fcb7e21b", "Url": "https://api.github.com/repos/zhangjie201412/Guanwuyou", "Date": "2018-05-09T14:38:17Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (assignment != null) { java.lang.String uri = java.lang.String.format(org.openmrs.module.bedmanagement.atomfeed.BedAssignmentAdvice.TEMPLATE, assignment.getUuid()); return new org.ict4h.atomfeed.server.service.Event(java.util.UUID.randomUUID().toString(), org.openmrs.module.bedmanagement.atomfeed.BedAssignmentAdvice.TITLE, null, uri, uri, org.openmrs.module.bedmanagement.atomfeed.BedAssignmentAdvice.CATEGORY); } } catch (java.net.URISyntaxException ex) { throw new java.lang.RuntimeException(ex.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7864/buggy-version/api.src.main.java.org.openmrs.module.bedmanagement.atomfeed.BedAssignmentAdvice.java", "BodyUseAPI": ["java.util.UUID.randomUUID()", "org.openmrs.module.bedmanagement.entity.BedPatientAssignment.getUuid()", "java.util.UUID.toString()", "java.lang.String.format(java.lang.String,assignment.getUuid())"], "Fixed commit": "844eacf324ae9392cbeb7085998c8082882917f3", "Url": "https://api.github.com/repos/sanishmaharjan/openmrs-module-bedmanagement", "Date": "2018-03-05T08:36:38Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { reply = k.uninterruptibleGet(timeout); } catch (java.util.concurrent.TimeoutException ex) { _continuationMap.remove(replyId); throw ex; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2354/buggy-version/src.main.java.com.rabbitmq.client.RpcClient.java", "BodyUseAPI": ["com.rabbitmq.utility.BlockingCell<java.lang.Object>.uninterruptibleGet(int)"], "Fixed commit": "d3ff8efb8f0e555194a971c35fd56c14fb28ba2a", "Url": "https://api.github.com/repos/rabbitmq/rabbitmq-java-client", "Date": "2018-06-27T18:07:01Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ret = OS.getWorkLogs(employeeID); } catch (java.lang.Exception e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4086/buggy-version/src.Model.OdinModel.java", "BodyUseAPI": ["Model.OdinServer.getWorkLogs(int)"], "Fixed commit": "14916d497b52658bccf67fcbf6bb96e9f575a21f", "Url": "https://api.github.com/repos/CSUS-CSC-131-Spring2018/S3T3TM2", "Date": "2018-04-17T23:39:18Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { name = cursor.getString(cursor.getColumnIndex(ContactsContract.Contacts.DISPLAY_NAME)); id = cursor.getString(cursor.getColumnIndex(ContactsContract.Contacts._ID)); photo = retrieveContactPhoto(context, id); } catch (android.database.CursorIndexOutOfBoundsException e) { name = sender; id = sender; photo = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1136/buggy-version/app.src.main.java.louisgautier.com.smsproject.receiver.SmsReceiver.java", "BodyUseAPI": ["android.database.Cursor.getColumnIndex(ContactsContract.Contacts.DISPLAY_NAME)", "android.database.Cursor.getString(cursor.getColumnIndex(ContactsContract.Contacts.DISPLAY_NAME))", "louisgautier.com.smsproject.receiver.SmsReceiver.retrieveContactPhoto(android.content.Context,java.lang.String)", "android.database.Cursor.getColumnIndex(ContactsContract.Contacts._ID)", "android.database.Cursor.getString(cursor.getColumnIndex(ContactsContract.Contacts._ID))"], "Fixed commit": "9a92e5e98e9015042da8be1805dd8b80c18c8d47", "Url": "https://api.github.com/repos/LouisGautierTransway/SmsProject", "Date": "2018-06-04T07:08:08Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { priceTo.setText(java.lang.String.valueOf(new java.math.BigDecimal(filterValues.get(com.bobo.gmargiani.bobo.ui.activites.FilterActivity.FILTER_PARAM_POS_PRICE_TO)))); } catch (java.lang.Exception ignored) { filterValues.set(com.bobo.gmargiani.bobo.ui.activites.FilterActivity.FILTER_PARAM_POS_PRICE_TO, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4597/buggy-version/app.src.main.java.com.bobo.gmargiani.bobo.ui.activites.FilterActivity.java", "BodyUseAPI": ["java.lang.String.valueOf(java.math.BigDecimal)", "java.util.ArrayList<java.lang.String>.get(int)", "android.widget.EditText.setText(java.lang.String)"], "Fixed commit": "cd0e372591ca58a23577c6759821e327e2098578", "Url": "https://api.github.com/repos/svaney/bobo", "Date": "2018-04-26T12:04:38Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return layout.getOffsetForHorizontal(line, x); } catch (java.lang.Throwable e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/754/buggy-version/widget.FastTextView.src.main.java.com.lsjwzh.widget.text.ClickableSpanUtil.java", "BodyUseAPI": ["android.text.Layout.getOffsetForHorizontal(int,int)"], "Fixed commit": "e315df5bdde2ea56c4cd48d53e5bc6a15300a3f8", "Url": "https://api.github.com/repos/lsjwzh/FastTextView", "Date": "2018-09-27T03:47:23Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { healthfacilityPatientId = referralClientService.saveClient(patient, ancClientDTO.getHealthFacilityCode(), \"\"); } catch (java.lang.Exception e) { e.printStackTrace(); return new org.springframework.http.ResponseEntity(PRECONDITION_FAILED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3016/buggy-version/opensrp-web.src.main.java.org.opensrp.web.controller.ReferralPatientsController.java", "BodyUseAPI": ["org.opensrp.service.ReferralPatientsService.saveClient(org.opensrp.web.controller.ANCClients,ancClientDTO.getHealthFacilityCode(),java.lang.String)", "org.opensrp.web.controller.AncClientDTO.getHealthFacilityCode()"], "Fixed commit": "75ce0596264068c45690ddcf8663977997c7e90d", "Url": "https://api.github.com/repos/SoftmedTanzania/UNFPA_UzaziSalama_Backend", "Date": "2018-09-16T18:00:45Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { duration = java.lang.Integer.parseInt(durationString); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3378/buggy-version/src.cinemasystem.AddFilm.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "375bda133d2a3d85fb600c439555b548f436e2f0", "Url": "https://api.github.com/repos/caoimhemcteague/CSDF-Group-1-Cinema", "Date": "2018-04-09T20:17:24Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.elasticsearch.action.search.SearchResponse response = fr.uha.ensisa.projet2A.monitoring.ElasticSearchUtil.client.prepareSearch(\"update\").setTypes(\"MachineUpdate\").setQuery(org.elasticsearch.index.query.QueryBuilders.termsQuery(\"machineID\", java.lang.Integer.toString(machineID))).setSize(1).addSort(\"time\", SortOrder.DESC).get(); org.elasticsearch.search.SearchHits hits = response.getHits(); java.lang.String lastState = hits.getAt(0).getSourceAsMap().get(\"state\").toString(); return java.lang.Integer.parseInt(lastState); } catch (java.lang.Exception e) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/9260/buggy-version/src.main.java.fr.uha.ensisa.projet2A.monitoring.ElasticSearchUtil.java", "BodyUseAPI": ["org.elasticsearch.search.SearchHits.getAt(int)", "java.lang.Integer.toString(int)", "fr.uha.ensisa.projet2A.monitoring.ElasticSearchUtil.client.prepareSearch(\"update\").setTypes(\"MachineUpdate\").setQuery(org.elasticsearch.index.query.QueryBuilders.termsQuery(\"machineID\", java.lang.Integer.toString(machineID))).setSize(int)", "hits.getAt(0).getSourceAsMap()", "fr.uha.ensisa.projet2A.monitoring.ElasticSearchUtil.client.prepareSearch(\"update\").setTypes(java.lang.String)", "org.elasticsearch.index.query.QueryBuilders.termsQuery(java.lang.String,java.lang.String)", "org.elasticsearch.action.search.SearchResponse.getHits()", "hits.getAt(0).getSourceAsMap().get(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "fr.uha.ensisa.projet2A.monitoring.ElasticSearchUtil.client.prepareSearch(\"update\").setTypes(\"MachineUpdate\").setQuery(org.elasticsearch.index.query.QueryBuilders.termsQuery(\"machineID\", java.lang.Integer.toString(machineID))).setSize(1).addSort(java.lang.String,SortOrder.DESC)", "fr.uha.ensisa.projet2A.monitoring.ElasticSearchUtil.client.prepareSearch(\"update\").setTypes(\"MachineUpdate\").setQuery(org.elasticsearch.index.query.QueryBuilders.termsQuery(\"machineID\", java.lang.Integer.toString(machineID)))", "fr.uha.ensisa.projet2A.monitoring.ElasticSearchUtil.client.prepareSearch(\"update\").setTypes(\"MachineUpdate\").setQuery(org.elasticsearch.index.query.QueryBuilders.termsQuery(\"machineID\", java.lang.Integer.toString(machineID))).setSize(1).addSort(\"time\", SortOrder.DESC).get()", "hits.getAt(0).getSourceAsMap().get(\"state\").toString()", "org.elasticsearch.client.Client.prepareSearch(java.lang.String)"], "Fixed commit": "e9559049428c78f64d47e30399aafee4c7ba184b", "Url": "https://api.github.com/repos/Ahp06/Monitoring", "Date": "2018-06-08T12:50:45Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return java.util.Optional.ofNullable(io.qameta.allure.util.NamingUtils.extractProperties(param, parts, 1)); } catch (org.joor.ReflectException ex) { return java.util.Optional.of(((((\"{\" + pattern) + \", field not found\") + (ex.getMessage().substring(ex.getMessage().lastIndexOf(\": \")))) + \"}\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6480/buggy-version/allure-java-commons.src.main.java.io.qameta.allure.util.NamingUtils.java", "BodyUseAPI": ["io.qameta.allure.util.NamingUtils.extractProperties(java.lang.Object,java.lang.String[],int)", "java.util.Optional.ofNullable(java.lang.String)"], "Fixed commit": "be7f437fdaf2459faf6272e485002be1a331da8a", "Url": "https://api.github.com/repos/sspotanin/allure-java", "Date": "2018-08-20T10:48:01Z"},
{"Line": "=>1848", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Class.forName(\"com.sk89q.worldguard.WorldGuard\"); this.consoleMessage(\"WorldGuard7\"); worldGuardUtil = new com.bekvon.bukkit.residence.selection.WorldGuard7Util(this); } catch (java.lang.Exception e) { worldGuardUtil = new com.bekvon.bukkit.residence.selection.WorldGuardUtil(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/65/buggy-version/src.com.bekvon.bukkit.residence.Residence.java", "BodyUseAPI": ["java.lang.Class.forName(java.lang.String)", "com.bekvon.bukkit.residence.Residence.consoleMessage(java.lang.String)"], "Fixed commit": "d6ede1db1e4c097fba10393f923c4a08a975db55", "Url": "https://api.github.com/repos/sync667/Residence", "Date": "2018-10-11T14:31:30Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String bidText = bidEditText.getText().toString(); bidText = bidText.replaceAll(\"[^0-9.,]\", \"\"); bid = java.lang.Double.parseDouble(bidText); } catch (java.lang.Exception e) { e.printStackTrace(); android.widget.Toast.makeText(getApplicationContext(), \"Bid must be a monetary value\", Toast.LENGTH_LONG).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5519/buggy-version/app.src.main.java.com.cmput301w18t07.taskasker.BidOnTaskActivity.java", "BodyUseAPI": ["bidEditText.getText().toString()", "java.lang.Double.parseDouble(java.lang.String)", "java.lang.String.replaceAll(java.lang.String,java.lang.String)", "android.widget.EditText.getText()"], "Fixed commit": "7d22eec0b8efae9d68e94c799189bbb0917da19c", "Url": "https://api.github.com/repos/CMPUT301W18T07/TaskAsker", "Date": "2018-04-09T05:34:28Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return com.wurmcraft.serveressentials.common.rest.utils.RequestHelper.client.target(((com.wurmcraft.serveressentials.common.rest.utils.RequestHelper.getBaseURL()) + \"rank/find/\")).request(MediaType.APPLICATION_JSON).get(new javax.ws.rs.core.GenericType<java.util.ArrayList<com.wurmcraft.serveressentials.api.json.user.Rank>>() {}).toArray(new com.wurmcraft.serveressentials.api.json.user.Rank[0]); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2512/buggy-version/src.main.java.com.wurmcraft.serveressentials.common.rest.utils.RequestHelper.java", "BodyUseAPI": ["com.wurmcraft.serveressentials.common.rest.utils.RequestHelper.client.target(((com.wurmcraft.serveressentials.common.rest.utils.RequestHelper.getBaseURL()) + \"rank/find/\")).request(MediaType.APPLICATION_JSON).get(javax.ws.rs.core.GenericType<java.util.ArrayList<com.wurmcraft.serveressentials.api.json.user.Rank>>)", "com.wurmcraft.serveressentials.common.rest.utils.RequestHelper.client.target(((com.wurmcraft.serveressentials.common.rest.utils.RequestHelper.getBaseURL()) + \"rank/find/\")).request(MediaType.APPLICATION_JSON).get(new javax.ws.rs.core.GenericType<java.util.ArrayList<com.wurmcraft.serveressentials.api.json.user.Rank>>() {}).toArray(com.wurmcraft.serveressentials.api.json.user.Rank[])", "javax.ws.rs.client.Client.target(java.lang.String)", "com.wurmcraft.serveressentials.common.rest.utils.RequestHelper.getBaseURL()", "com.wurmcraft.serveressentials.common.rest.utils.RequestHelper.client.target(((com.wurmcraft.serveressentials.common.rest.utils.RequestHelper.getBaseURL()) + \"rank/find/\")).request(MediaType.APPLICATION_JSON)"], "Fixed commit": "943d5df1c05423a7c383052afe65cd52c59332bd", "Url": "https://api.github.com/repos/Wurmcraft/Server-Essentials", "Date": "2018-07-09T23:55:34Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { staff.add(java.lang.Long.valueOf(s)); } catch (java.lang.NumberFormatException ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2788/buggy-version/src.main.java.com.novamaday.ticketbird.objects.guild.GuildSettings.java", "BodyUseAPI": ["java.util.List<java.lang.Long>.add(java.lang.Long)", "java.lang.Long.valueOf(java.lang.String)"], "Fixed commit": "91109a7847ed062a62bbcece2cc8978e23a8682c", "Url": "https://api.github.com/repos/DreamExposure/TicketBird-Discord-Bot", "Date": "2018-06-12T21:10:44Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String ticketAssignmentIDsWithChangesWhereClause = \"\"; java.lang.StringBuilder assignmentIDs = new java.lang.StringBuilder(); java.util.Map<java.lang.Integer, java.lang.Integer> ticketAssignmentIDsWithChanges = GlobalVariables.ticketsWithMinorChangesController.getTicketAssignmentIDsWithChanges(); if (ticketAssignmentIDsWithChanges != null) { for (int i = 0; i < (ticketAssignmentIDsWithChanges.keySet().size()); i++) { if (!(assignmentIDs.toString().isEmpty())) { assignmentIDs.append(\", \"); } assignmentIDs.append(((int) (ticketAssignmentIDsWithChanges.keySet().toArray()[i]))); } } if (!(assignmentIDs.toString().isEmpty())) { ticketAssignmentIDsWithChangesWhereClause = (\" tbCompletions_Assignments.AssignmentID IN (\" + (assignmentIDs.toString())) + \") OR \"; } new com.competers.app.utilocatecompanion.Database.Resources.QueryThread().selectLocalQuery(\"tbCompletions_Assignments\", (((((\" SELECT PrimaryID FROM \" + ((((((((((\" tbCompletions_Assignments \" + \" left join tbCompletions_Primary using (AssignmentID) \") + \" left join tbCompletions_PrimaryDetails using (PrimaryID) \") + \" left join tbCompletions_Documents using (AssignmentID) \") + \" left join tbCompletions_Autolog using (AssignmentID) \") + \" left join tbCompletions_AuxiliaryDetails using (PrimaryID) \") + \" left join tbCompletions_Billing using (AuxiliaryDetailID) \") + \" where \") + \" tbCompletions_Assignments.LocateStatusID = 20 OR \") + \" tbCompletions_Documents.bFieldAdded = 1 OR \") + \" tbCompletions_PrimaryDetails.bFieldAdded = 1 OR \")) + ticketAssignmentIDsWithChangesWhereClause) + \" tbCompletions_Autolog.bFieldAdded = 1 OR \") + \" tbCompletions_Billing.bFieldAdded = 1 \") + \" Group By PrimaryID \"), new android.os.Handler(new android.os.Handler.Callback() { @java.lang.Override public boolean handleMessage(android.os.Message msg) { try { if (msg != null) { com.competers.app.utilocatecompanion.Database.Resources.QueryThread curQueryAsyncTask = ((com.competers.app.utilocatecompanion.Database.Resources.QueryThread) (msg.obj)); android.database.Cursor cursor = curQueryAsyncTask.getLocalQueryResult(); if (cursor != null) { java.lang.StringBuilder primaryIDs = new java.lang.StringBuilder(); while (cursor.moveToNext()) { if (!(primaryIDs.toString().isEmpty())) { primaryIDs.append(\", \"); } primaryIDs.append(cursor.getInt(cursor.getColumnIndex(\"PrimaryID\"))); } if (!(getPartialTicketTablesToUpload(primaryIDs.toString()))) { throw new java.lang.Exception(\"failed to start getPartialTicketTablesToUpload\"); } }else { throw new java.lang.Exception(\"cursor is null\"); } }else { throw new java.lang.Exception(\"Msg is null\"); } } catch (java.lang.Exception ex) { finish(ex); } return false; } })); } catch (java.lang.Exception ex) { android.util.Log.d(\"Error\", \"getIndividualTicketsToBeUploaded: failed to separate tickets to be uploaded\"); ex.printStackTrace(); hasStarted = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4979/buggy-version/app.src.main.java.com.competers.app.utilocatecompanion.Database.Resources.GatherTicketsToUpload.java", "BodyUseAPI": ["com.competers.app.utilocatecompanion.Database.Resources.QueryThread.selectLocalQuery(java.lang.String,java.lang.String,android.os.Handler)", "java.lang.StringBuilder.append(cursor.getInt(cursor.getColumnIndex(\"PrimaryID\")))", "android.database.Cursor.getInt(cursor.getColumnIndex(\"PrimaryID\"))", "GlobalVariables.ticketsWithMinorChangesController.getTicketAssignmentIDsWithChanges()", "java.util.Set<java.lang.Integer>.size()", "java.lang.String.isEmpty()", "com.competers.app.utilocatecompanion.Database.Resources.GatherTicketsToUpload.1.finish(java.lang.Exception)", "java.util.Map<java.lang.Integer, java.lang.Integer>.keySet()", "java.lang.String.isEmpty()", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.toString()", "java.lang.StringBuilder.toString()", "com.competers.app.utilocatecompanion.Database.Resources.QueryThread.getLocalQueryResult()", "java.lang.StringBuilder.append(java.lang.String)", "android.database.Cursor.getColumnIndex(java.lang.String)", "java.util.Map<java.lang.Integer, java.lang.Integer>.keySet()", "java.lang.StringBuilder.append(java.lang.Object)", "java.lang.StringBuilder.toString()", "java.lang.StringBuilder.toString()", "com.competers.app.utilocatecompanion.Database.Resources.GatherTicketsToUpload.1.getPartialTicketTablesToUpload(java.lang.String)", "android.database.Cursor.moveToNext()", "java.lang.String.isEmpty()", "java.lang.StringBuilder.toString()", "java.util.Set<java.lang.Integer>.toArray()"], "Fixed commit": "910496d539135fc9ed054699de89d9e3fe58959a", "Url": "https://api.github.com/repos/ElliottHurykCompeters/U2PhotoAppAaronsVersion", "Date": "2018-08-15T20:06:19Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.bukkit.inventory.meta.ItemMeta meta = is.getItemMeta(); meta.setUnbreakable(unbreakable); is.setItemMeta(meta); } catch (java.lang.NoSuchMethodError e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1934/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Util.Item.ItemBuilder.java", "BodyUseAPI": ["org.bukkit.inventory.ItemStack.setItemMeta(org.bukkit.inventory.meta.ItemMeta)", "org.bukkit.inventory.ItemStack.getItemMeta()", "org.bukkit.inventory.meta.ItemMeta.setUnbreakable(boolean)"], "Fixed commit": "b7478b126fd904f99e9ce15f886e8e2f070216a0", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2018-02-06T21:51:24Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { tvTemp.setText(((weatherData.getTemp()) + \" deg C\")); tvPressure.setText(((weatherData.getPressure()) + \"millibars\")); tvHumidity.setText(((weatherData.getHumidity()) + \"\")); tvVisibility.setText(((weatherData.getVisibility()) + \" km\")); tvWind.setText(((weatherData.getWind()) + \"km/hr\")); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4880/buggy-version/app.src.main.java.com.sada.blight.HomeActivity.java", "BodyUseAPI": ["com.sada.blight.WeatherData.getTemp()", "android.widget.TextView.setText(((weatherData.getHumidity()) + \"\"))", "android.widget.TextView.setText(((weatherData.getWind()) + \"km/hr\"))", "android.widget.TextView.setText(((weatherData.getPressure()) + \"millibars\"))", "com.sada.blight.WeatherData.getHumidity()", "android.widget.TextView.setText(((weatherData.getVisibility()) + \" km\"))", "android.widget.TextView.setText(((weatherData.getTemp()) + \" deg C\"))", "com.sada.blight.WeatherData.getPressure()", "com.sada.blight.WeatherData.getWind()", "com.sada.blight.WeatherData.getVisibility()"], "Fixed commit": "34f9b3e7bd2c7ec4b8f4a31dafb1c9019616fc40", "Url": "https://api.github.com/repos/shantanu0323/Blight", "Date": "2018-03-19T10:57:27Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((mediaPlayer) == null) { initilizeMediaPlayer(); } mediaPlayer.setLooping(true); if (mediaPlayer.isPlaying()) { mediaPlayer.stop(); mediaPlayer.prepare(); mediaPlayer.start(); }else { mediaPlayer.start(); } } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/7150/buggy-version/app.src.main.java.com.sawant.floating_widget_view.FloatingViewService.java", "BodyUseAPI": ["com.sawant.floating_widget_view.FloatingViewService.2.initilizeMediaPlayer()", "android.media.MediaPlayer.start()", "android.media.MediaPlayer.stop()", "android.media.MediaPlayer.isPlaying()", "android.media.MediaPlayer.prepare()", "android.media.MediaPlayer.setLooping(boolean)", "android.media.MediaPlayer.start()"], "Fixed commit": "585da6b10f76f443968138bdcccb13621854365c", "Url": "https://api.github.com/repos/saish123/floating-widget-view", "Date": "2018-08-23T14:13:13Z"},
{"Line": "=>474", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { dao.create(klass, force); } catch (java.lang.Exception e) { es.add(new java.lang.RuntimeException((\"class=\" + (klass.getName())), e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5285/buggy-version/src.org.nutz.dao.util.Daos.java", "BodyUseAPI": ["org.nutz.dao.Dao.create(java.lang.Class<?>,boolean)"], "Fixed commit": "3532a9e3a1bbca0d00d6738a51dc839b6c5d729f", "Url": "https://api.github.com/repos/nutzam/nutz", "Date": "2018-01-10T05:09:02Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { charset = org.apache.http.entity.ContentType.getOrDefault(entity).getCharset(); } catch (java.lang.Exception e) { edu.uci.ics.crawler4j.crawler.Page.logger.warn(\"parse charset failed\", e); charset = java.nio.charset.Charset.forName(\"UTF-8\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/9463/buggy-version/src.main.java.edu.uci.ics.crawler4j.crawler.Page.java", "BodyUseAPI": ["org.apache.http.entity.ContentType.getOrDefault(org.apache.http.HttpEntity)", "org.apache.http.entity.ContentType.getOrDefault(entity).getCharset()"], "Fixed commit": "d699add0f631e44472f3d0a48db743977d2d6b00", "Url": "https://api.github.com/repos/yasserg/crawler4j", "Date": "2017-06-12T08:55:09Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(_heartBeatUpdateRetrySleep); } catch (java.lang.InterruptedException e) { com.cloud.hypervisor.kvm.resource.KVMHAMonitor.s_logger.debug(\"[ignored] interupted between heartbeat retries.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3589/buggy-version/plugins.hypervisors.kvm.src.com.cloud.hypervisor.kvm.resource.KVMHAMonitor.java", "BodyUseAPI": ["java.lang.Thread.sleep(com.cloud.hypervisor.kvm.resource.KVMHAMonitor.Monitor)"], "Fixed commit": "c42cb9f39ac565556080947bb443197537d2f5f9", "Url": "https://api.github.com/repos/Slair1/cloudstack", "Date": "2018-02-28T00:36:35Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(250); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6553/buggy-version/src.caris.framework.basereactions.MultiReaction.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "5ee675c5b1e3bcd27cd49d0f7ccb00207fb454ae", "Url": "https://api.github.com/repos/InfinityPhase/CARIS", "Date": "2018-09-06T12:23:49Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { result.createNewFile(); } catch (java.io.IOException ex) { java.util.logging.Logger.getLogger(uk.ac.leeds.ccg.andyt.generic.memory.Generic_OutOfMemoryErrorHandler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/7801/buggy-version/src.main.java.uk.ac.leeds.ccg.andyt.generic.memory.Generic_OutOfMemoryErrorHandler.java", "BodyUseAPI": ["java.io.File.createNewFile()"], "Fixed commit": "02982a7bd2de9c9f21b07eeba8eefc9a92b495a0", "Url": "https://api.github.com/repos/agdturner/generic", "Date": "2018-01-09T10:00:22Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { result.createNewFile(); } catch (java.io.IOException ex) { java.util.logging.Logger.getLogger(uk.ac.leeds.ccg.andyt.generic.memory.Generic_OutOfMemoryErrorHandler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/7801/buggy-version/src.main.java.uk.ac.leeds.ccg.andyt.generic.memory.Generic_OutOfMemoryErrorHandler.java", "BodyUseAPI": ["java.io.File.createNewFile()"], "Fixed commit": "02982a7bd2de9c9f21b07eeba8eefc9a92b495a0", "Url": "https://api.github.com/repos/agdturner/generic", "Date": "2018-01-09T10:00:22Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { java.lang.Thread.currentThread().setContextClassLoader(historyClass.getClassLoader()); list = new java.util.ArrayList(((java.util.List) (query.execute(objId)))); } finally { java.lang.Thread.currentThread().setContextClassLoader(oldClassLoader); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1939/buggy-version/platform.mds.mds.src.main.java.org.motechproject.mds.service.impl.history.HistoryServiceImpl.java", "BodyUseAPI": ["javax.jdo.Query.execute(java.lang.Long)", "java.lang.Thread.setContextClassLoader(java.lang.ClassLoader)", "java.lang.Class<?>.getClassLoader()", "java.lang.Thread.currentThread()"], "Fixed commit": "841a8a74abdecb7a13071ea2122fc7d280c955a0", "Url": "https://api.github.com/repos/pkornowski/motech", "Date": "2018-04-24T15:18:46Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { transactionHandler.execute(); } catch (org.dotwebstack.framework.transaction.flow.step.StepFailureException e) { return javax.ws.rs.core.Response.status(Status.BAD_REQUEST).entity(e.getMessage()).build(); } catch (java.lang.RuntimeException e) { return javax.ws.rs.core.Response.status(Status.INTERNAL_SERVER_ERROR).entity(e.getMessage()).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6585/buggy-version/frontend.ld.src.main.java.org.dotwebstack.framework.frontend.ld.handlers.TransactionRequestHandler.java", "BodyUseAPI": ["org.dotwebstack.framework.transaction.TransactionHandler.execute()"], "Fixed commit": "7f61fc80e361b9cec2cc9828bf41b29dbdea3bde", "Url": "https://api.github.com/repos/dotwebstack/dotwebstack-framework", "Date": "2018-03-21T10:06:47Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(((long) (1000 / (_UpdateFrequency_Hz)))); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/9170/buggy-version/src.redcore.Course.java", "BodyUseAPI": ["java.lang.Thread.sleep(double)"], "Fixed commit": "9a220bc254806829a9da0f4ba44ce75d9e9163a0", "Url": "https://api.github.com/repos/RedNationRobotics/PowerUp2018", "Date": "2018-02-06T17:41:10Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { image.setImageBitmap(values[0]); } catch (java.lang.Exception e) { if (openHist) { dbAccessHelper.deleteImageData(url.toString()); }else { dbAccessHelper.insertImageData(url.toString(), 2); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/7511/buggy-version/app.src.main.java.com.example.komputer.app_b.HTTPReqService.java", "BodyUseAPI": ["android.widget.ImageView.setImageBitmap(values[0])"], "Fixed commit": "d2750e32631f6b1bca2c8fac06f8a3d70930511f", "Url": "https://api.github.com/repos/Arragoniks/Test-project-App-B", "Date": "2018-07-09T18:36:13Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { swizzleStr = msg.getContentRaw().substring(msg.getContentRaw().indexOf(\" \")).trim(); } catch (java.lang.StringIndexOutOfBoundsException e) { swizzleStr = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/472/buggy-version/src.main.java.bot.LookupCommands.java", "BodyUseAPI": ["net.dv8tion.jda.core.entities.Message.getContentRaw()", "msg.getContentRaw().substring(msg.getContentRaw().indexOf(\" \")).trim()", "msg.getContentRaw().indexOf(java.lang.String)", "net.dv8tion.jda.core.entities.Message.getContentRaw()", "msg.getContentRaw().substring(msg.getContentRaw().indexOf(\" \"))"], "Fixed commit": "0efdabc8b23f4acfa931994f96dffa7ea005dc88", "Url": "https://api.github.com/repos/EndlessSkyCommunity/EndlessSky-Discord-Bot", "Date": "2018-05-12T06:40:42Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.springframework.web.context.request.RequestAttributes requestAttributes = org.springframework.web.context.request.RequestContextHolder.currentRequestAttributes(); javax.servlet.http.HttpServletRequest request = (requestAttributes == null) ? null : ((org.springframework.web.context.request.ServletRequestAttributes) (requestAttributes)).getRequest(); groupId = (request == null) ? null : request.getHeader(CommonConstant.TX_TRANSACTION_GROUP); } catch (java.lang.IllegalStateException e) { log.error(\"Not Http request ,can't get RequestContextHolder!\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/4842/buggy-version/raincat-springcloud.src.main.java.com.raincat.springcloud.interceptor.SpringCloudTxTransactionInterceptor.java", "BodyUseAPI": ["org.springframework.web.context.request.RequestAttributes.getRequest()", "javax.servlet.http.HttpServletRequest.getHeader(CommonConstant.TX_TRANSACTION_GROUP)", "org.springframework.web.context.request.RequestContextHolder.currentRequestAttributes()"], "Fixed commit": "8951fbc1fdae8a2fc8be59179f495eecff6cd764", "Url": "https://api.github.com/repos/yu199195/Raincat", "Date": "2018-08-23T03:41:18Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { cz.jcu.uaidoklad.Model.Faktura fa = new cz.jcu.uaidoklad.Model.Faktura(101, 2001, firmaMock.getFirmy().get(0), ZakaznikComboBox.getSelectionModel().getSelectedItem(), polozky, datumSplatnostiDate.getValue().toString(), ZpusobUhradyComboBox.getValue(), 1); c.exportAsPDF(fa, db); c.createFaktura(fa); alert = new javafx.scene.control.Alert(javafx.scene.control.Alert.AlertType.INFORMATION, ((\"Faktura \u010d.\" + (fa.getCislo())) + \" byla vygenerov\u00e1na\"), javafx.scene.control.ButtonType.OK); alert.showAndWait(); if ((alert.getResult()) == (javafx.scene.control.ButtonType.OK)) { alert.close(); } } catch (java.lang.Exception e) { alert = new javafx.scene.control.Alert(javafx.scene.control.Alert.AlertType.ERROR, \"Chyba p\\u0159i vytv\\u00e1\\u0159en\\u00ed PDF.\\n Zkontrolujte, zda jste vyplnili v\\u0161echny pole\", javafx.scene.control.ButtonType.OK); if ((alert.getResult()) == (javafx.scene.control.ButtonType.OK)) { alert.close(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/4906/buggy-version/src.main.java.cz.jcu.uaidoklad.HlavniOknoController.java", "BodyUseAPI": ["firmaMock.getFirmy().get(int)", "javafx.scene.control.Alert.getResult()", "javafx.scene.control.Alert.close()", "javafx.scene.control.Alert.showAndWait()", "ZakaznikComboBox.getSelectionModel().getSelectedItem()", "datumSplatnostiDate.getValue().toString()", "javafx.scene.control.ComboBox<cz.jcu.uaidoklad.Model.Firma>.getSelectionModel()", "javafx.scene.control.DatePicker.getValue()", "javafx.scene.control.ComboBox<java.lang.String>.getValue()", "cz.jcu.uaidoklad.Model.FirmaRepositoryMock.getFirmy()", "cz.jcu.uaidoklad.Controller.Controller.createFaktura(cz.jcu.uaidoklad.Model.Faktura)", "cz.jcu.uaidoklad.Model.Faktura.getCislo()", "cz.jcu.uaidoklad.Controller.Controller.exportAsPDF(cz.jcu.uaidoklad.Model.Faktura,cz.jcu.uaidoklad.Model.FakturaRepositoryImpl)"], "Fixed commit": "6f795abd359f6d0c4d5b7ffd6c35b3438cb42e89", "Url": "https://api.github.com/repos/michbart/Fakturacni-system", "Date": "2018-06-29T07:09:32Z"},
{"Line": "=>1430", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { pj.print(); } catch (java.awt.print.PrinterException ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/9350/buggy-version/src.dialog_salesOrder.SalesOrder_Tender.java", "BodyUseAPI": ["java.awt.print.PrinterJob.print()"], "Fixed commit": "fd724b49e6acc225eaea6894fde4da046e76f2d3", "Url": "https://api.github.com/repos/rochiey/ICMCommercial", "Date": "2018-05-31T19:08:04Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((internalAPI != null) && (org.objectweb.proactive.core.mop.MOP.isReifiedObject(internalAPI))) { internalAPIUrls = org.objectweb.proactive.api.PAActiveObject.getUrls(internalAPI); } } catch (java.lang.Exception e) { org.ow2.proactive.scheduler.synchronization.SynchronizationWrapper.logger.warn((\"Could not initialize the SynchronizationWrapper for taskId \" + taskId), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6483/buggy-version/scheduler.scheduler-node.src.main.java.org.ow2.proactive.scheduler.synchronization.SynchronizationWrapper.java", "BodyUseAPI": ["org.objectweb.proactive.core.mop.MOP.isReifiedObject(org.ow2.proactive.scheduler.synchronization.SynchronizationInternal)", "org.objectweb.proactive.api.PAActiveObject.getUrls(org.ow2.proactive.scheduler.synchronization.SynchronizationInternal)"], "Fixed commit": "1ae046501e103a2ad036b5fcd508633cedc1db20", "Url": "https://api.github.com/repos/pedrovelho/scheduling", "Date": "2018-10-04T09:31:18Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.terasology.math.geom.Rect2i region = getRegion(target, canvas); loopDetectionId = \"\"; return region; } catch (java.lang.StackOverflowError e) { org.terasology.rendering.nui.layouts.relative.RelativeLayout.logger.error(\"Stack Overflow detected resolving layout of element {}, unable to render\", loopDetectionId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/881/buggy-version/engine.src.main.java.org.terasology.rendering.nui.layouts.relative.RelativeLayout.java", "BodyUseAPI": ["org.terasology.rendering.nui.layouts.relative.RelativeLayout.getRegion(org.terasology.rendering.nui.layouts.relative.RelativeLayout.WidgetInfo,org.terasology.rendering.nui.Canvas)"], "Fixed commit": "83fb6f6a5f3dbfd88c5ae3af00bf5fc334501817", "Url": "https://api.github.com/repos/Inei1/Terasology", "Date": "2018-03-17T20:16:53Z"},
{"Line": "=>677", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String temp = java.lang.Double.valueOf(walkDistance).toString(); editor.putString(com.maricia.mybikeparks.MapsActivity.mywalkDistance, temp.substring(0, ((temp.indexOf(\".\")) + 3))); temp = java.lang.Double.valueOf(walkSpeed).toString(); editor.putString(com.maricia.mybikeparks.MapsActivity.myWalkSpeed, temp.substring(0, ((temp.indexOf(\".\")) + 3))); } catch (java.lang.IndexOutOfBoundsException e) { editor.putString(com.maricia.mybikeparks.MapsActivity.mywalkDistance, \"0.0\"); editor.putString(com.maricia.mybikeparks.MapsActivity.myWalkSpeed, \"0.0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1744/buggy-version/app.src.main.java.com.maricia.mybikeparks.MapsActivity.java", "BodyUseAPI": ["SharedPreferences.Editor.putString(java.lang.String,java.lang.String)", "java.lang.String.indexOf(java.lang.String)", "java.lang.Double.valueOf(double)", "java.lang.Double.toString()", "java.lang.String.substring(int,int)", "SharedPreferences.Editor.putString(java.lang.String,java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.Double.toString()", "java.lang.Double.valueOf(double)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "954c8048ee9304a8784909f0e37c84c6f83a8095", "Url": "https://api.github.com/repos/JoeWolfe0527/MyBikeParks", "Date": "2018-04-19T04:16:25Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.masterinformatica.bingo.messages.BingoNumber numb = bombo.generate(); java.lang.Thread.sleep(1000); graWindow.setNumberGenerate(numb.getValue(), true); graWindow.repaint(); java.lang.System.out.println(java.lang.String.format(\"El: %d\", numb.getValue())); getSender().tell(numb, getSelf()); } catch (com.masterinformatica.bingo.exceptions.ExceptionBombo e) { sendExitEmptyBombo(); } catch (java.lang.InterruptedException e) { java.lang.System.err.println(\"Interrumped thread sleep...\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/9797/buggy-version/src.main.java.com.masterinformatica.bingo.actors.Diller.java", "BodyUseAPI": ["getSender().tell(com.masterinformatica.bingo.messages.BingoNumber,getSelf())", "com.masterinformatica.bingo.messages.BingoNumber.getValue()", "java.lang.String.format(java.lang.String,numb.getValue())", "java.lang.Thread.sleep(int)", "com.masterinformatica.bingo.entities.Bombo.generate()", "java.io.PrintStream.println(java.lang.String)", "com.masterinformatica.bingo.actors.Diller.getSelf()", "com.masterinformatica.bingo.views.ViewBombo.setNumberGenerate(numb.getValue(),boolean)", "com.masterinformatica.bingo.messages.BingoNumber.getValue()", "com.masterinformatica.bingo.views.ViewBombo.repaint()", "com.masterinformatica.bingo.actors.Diller.getSender()"], "Fixed commit": "3c2370fd9394c17db8fdf077c23b3450a2592fd8", "Url": "https://api.github.com/repos/jgmatu/BingoAkka", "Date": "2018-03-22T20:32:52Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mOverlayChartLine.setXdots(mXdots).setYAxisMaxValue(mMax).setAnimationOpen(true).setListDisDots(mMulListDisDots).reDraw(); } catch (wellijohn.org.varchart.exception.YCoordinateException e) { android.util.Log.d(\"MainActivity\", \"onCreate: \"); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/7063/buggy-version/app.src.main.java.wellijohn.org.charts.LineActivity.java", "BodyUseAPI": ["mOverlayChartLine.setXdots(mXdots).setYAxisMaxValue(mMax).setAnimationOpen(true).setListDisDots(mMulListDisDots).reDraw()", "mOverlayChartLine.setXdots(mXdots).setYAxisMaxValue(double)", "wellijohn.org.varchart.overlay_bar_with_line_chart.OverLayBarChartLine.setXdots(java.lang.String[])", "mOverlayChartLine.setXdots(mXdots).setYAxisMaxValue(mMax).setAnimationOpen(true).setListDisDots(java.util.List<java.util.List<wellijohn.org.varchart.vo.DotVo>>)", "mOverlayChartLine.setXdots(mXdots).setYAxisMaxValue(mMax).setAnimationOpen(boolean)"], "Fixed commit": "7a70cff68f5ccc4a8d5601ad597e6f5e770eeca5", "Url": "https://api.github.com/repos/WelliJohn/charts", "Date": "2018-01-24T02:46:06Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.io.File installationDir = fsp.getProjectInstallationFolder(project, false); final java.util.Set<java.io.File> files = project.getFiles(fsp); for (java.io.File file : files) { java.lang.String relativePath = uk.ac.ucl.excites.sapelli.shared.io.FileHelpers.getRelativePath(installationDir, file); java.io.File missingFile = new java.io.File(((sapelliProjectDir) + relativePath)); log.info(\"Check if '{}' is missing.\", missingFile); if ((!(missingFile.exists())) || (!(missingFile.isFile()))) missing.add(missingFile.toString()); } } catch (java.lang.Exception e) { log.error(\"Cannot get missing files: \", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/4805/buggy-version/CollectorPackager.src.main.java.uk.ac.ucl.excites.sapelli.packager.sapelli.ProjectChecker.java", "BodyUseAPI": ["java.io.File.exists()", "java.util.List<java.lang.String>.add(java.lang.String)", "uk.ac.ucl.excites.sapelli.shared.io.FileHelpers.getRelativePath(java.io.File,java.io.File)", "uk.ac.ucl.excites.sapelli.collector.io.FileStorageProvider.getProjectInstallationFolder(uk.ac.ucl.excites.sapelli.collector.model.Project,boolean)", "java.io.File.toString()", "java.io.File.isFile()", "uk.ac.ucl.excites.sapelli.packager.sapelli.ProjectChecker.info(java.lang.String,java.io.File)", "uk.ac.ucl.excites.sapelli.collector.model.Project.getFiles(uk.ac.ucl.excites.sapelli.collector.io.FileStorageProvider)"], "Fixed commit": "0dc0e4ab315d5d51ca2cf492e704eb0889efea0a", "Url": "https://api.github.com/repos/ExCiteS/Sapelli", "Date": "2018-03-15T15:16:49Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { result = getJdbcTemplate().queryForObject(sqlCheck, new java.lang.Object[]{ eventId, userId }, java.lang.Integer.class); } catch (org.springframework.dao.EmptyResultDataAccessException e) { result = 5; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/4714/buggy-version/src.main.java.com.beigeoranges.ecms.Dao.EventDao.java", "BodyUseAPI": ["com.beigeoranges.ecms.Dao.EventDao.getJdbcTemplate()", "getJdbcTemplate().queryForObject(java.lang.String,java.lang.Object[],java.lang.Class)"], "Fixed commit": "af7cc5ea9a7b97684c490331e7b15dd6a7192606", "Url": "https://api.github.com/repos/malynch7/ecms", "Date": "2018-07-15T23:51:40Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { hook = new com.bergerkiller.bukkit.common.internal.hooks.ChunkProviderServerHook(); cps = hook.hook(cps); com.bergerkiller.bukkit.common.internal.hooks.ChunkProviderServerHook.setCPS(world, com.bergerkiller.generated.net.minecraft.server.ChunkProviderServerHandle.createHandle(cps)); } catch (java.lang.Throwable t) { t.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1645/buggy-version/src.main.java.com.bergerkiller.bukkit.common.internal.hooks.ChunkProviderServerHook.java", "BodyUseAPI": ["com.bergerkiller.bukkit.common.internal.hooks.ChunkProviderServerHook.setCPS(org.bukkit.World,com.bergerkiller.generated.net.minecraft.server.ChunkProviderServerHandle.createHandle(cps))", "com.bergerkiller.bukkit.common.internal.hooks.ChunkProviderServerHook.hook(java.lang.Object)", "com.bergerkiller.generated.net.minecraft.server.ChunkProviderServerHandle.createHandle(java.lang.Object)"], "Fixed commit": "a3203577befd411fda6de26df5f0a14240b327d4", "Url": "https://api.github.com/repos/bergerhealer/BKCommonLib", "Date": "2018-10-06T12:12:53Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { cps = com.bergerkiller.bukkit.common.internal.hooks.ChunkProviderServerHook.unhook(cps); com.bergerkiller.bukkit.common.internal.hooks.ChunkProviderServerHook.setCPS(world, com.bergerkiller.generated.net.minecraft.server.ChunkProviderServerHandle.createHandle(cps)); } catch (java.lang.Throwable t) { t.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1645/buggy-version/src.main.java.com.bergerkiller.bukkit.common.internal.hooks.ChunkProviderServerHook.java", "BodyUseAPI": ["com.bergerkiller.generated.net.minecraft.server.ChunkProviderServerHandle.createHandle(java.lang.Object)", "com.bergerkiller.bukkit.common.internal.hooks.ChunkProviderServerHook.unhook(java.lang.Object)", "com.bergerkiller.bukkit.common.internal.hooks.ChunkProviderServerHook.setCPS(org.bukkit.World,com.bergerkiller.generated.net.minecraft.server.ChunkProviderServerHandle.createHandle(cps))"], "Fixed commit": "a3203577befd411fda6de26df5f0a14240b327d4", "Url": "https://api.github.com/repos/bergerhealer/BKCommonLib", "Date": "2018-10-06T12:12:53Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { select.selectByValue(value); } catch (org.openqa.selenium.NoSuchElementException e) { throw new com.codeborne.selenide.ex.ElementNotFound((\"Cannot locate option with value: @\" + value), com.codeborne.selenide.Condition.exist, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8042/buggy-version/src.main.java.com.codeborne.selenide.commands.SelectOptionByValue.java", "BodyUseAPI": ["org.openqa.selenium.support.ui.Select.selectByValue(java.lang.String)"], "Fixed commit": "535dc412212bc36cc672d9b408d133d13f42480c", "Url": "https://api.github.com/repos/selenide/selenide", "Date": "2018-08-17T03:02:05Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { select.selectByValue(((java.lang.String) (args[0]))); } catch (org.openqa.selenium.NoSuchElementException e) { throw new com.codeborne.selenide.ex.ElementNotFound((\"Cannot locate option with value: @\" + ((java.lang.String) (args[0]))), com.codeborne.selenide.Condition.exist, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8042/buggy-version/src.main.java.com.codeborne.selenide.commands.SelectOptionByValue.java", "BodyUseAPI": ["org.openqa.selenium.support.ui.Select.selectByValue(java.lang.Object)"], "Fixed commit": "535dc412212bc36cc672d9b408d133d13f42480c", "Url": "https://api.github.com/repos/selenide/selenide", "Date": "2018-08-17T03:02:05Z"},
{"Line": "=>3923", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { startedAtTime = fmt.parseDateTime(((uk.ac.ncl.intbio.core.datatree.Literal<javax.xml.namespace.QName>) (namedProperty.getValue())).getValue().toString()); } catch (java.lang.IllegalArgumentException e) { throw new org.sbolstandard.core2.SBOLValidationException(\"sbol-12402\", topLevel.getIdentity()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/9376/buggy-version/core2.src.main.java.org.sbolstandard.core2.SBOLReader.java", "BodyUseAPI": ["uk.ac.ncl.intbio.core.datatree.NamedProperty<javax.xml.namespace.QName>.getValue()", "((uk.ac.ncl.intbio.core.datatree.Literal<javax.xml.namespace.QName>) (namedProperty.getValue())).getValue()", "org.joda.time.format.DateTimeFormatter.parseDateTime(((uk.ac.ncl.intbio.core.datatree.Literal<javax.xml.namespace.QName>) (namedProperty.getValue())).getValue().toString())", "((uk.ac.ncl.intbio.core.datatree.Literal<javax.xml.namespace.QName>) (namedProperty.getValue())).getValue().toString()"], "Fixed commit": "d0b17ecbbabb5e543433c1855bcd2df8e0296b5e", "Url": "https://api.github.com/repos/SynBioDex/libSBOLj", "Date": "2018-03-12T14:56:34Z"},
{"Line": "=>3936", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { endedAtTime = fmt.parseDateTime(((uk.ac.ncl.intbio.core.datatree.Literal<javax.xml.namespace.QName>) (namedProperty.getValue())).getValue().toString()); } catch (java.lang.IllegalArgumentException e) { throw new org.sbolstandard.core2.SBOLValidationException(\"sbol-12403\", topLevel.getIdentity()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/9376/buggy-version/core2.src.main.java.org.sbolstandard.core2.SBOLReader.java", "BodyUseAPI": ["((uk.ac.ncl.intbio.core.datatree.Literal<javax.xml.namespace.QName>) (namedProperty.getValue())).getValue()", "uk.ac.ncl.intbio.core.datatree.NamedProperty<javax.xml.namespace.QName>.getValue()", "((uk.ac.ncl.intbio.core.datatree.Literal<javax.xml.namespace.QName>) (namedProperty.getValue())).getValue().toString()", "org.joda.time.format.DateTimeFormatter.parseDateTime(((uk.ac.ncl.intbio.core.datatree.Literal<javax.xml.namespace.QName>) (namedProperty.getValue())).getValue().toString())"], "Fixed commit": "d0b17ecbbabb5e543433c1855bcd2df8e0296b5e", "Url": "https://api.github.com/repos/SynBioDex/libSBOLj", "Date": "2018-03-12T14:56:34Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { conn.setTransactionIsolation(til); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3022/buggy-version/src.org.executequery.databasemediators.spi.DefaultStatementExecutor.java", "BodyUseAPI": ["java.sql.Connection.setTransactionIsolation(int)"], "Fixed commit": "9d67c05f339599e2175d27c77b00485c9b1f495c", "Url": "https://api.github.com/repos/red-soft-ru/redexpert", "Date": "2018-02-12T08:21:49Z"},
{"Line": "=>1523", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { conn.setTransactionIsolation(connectionTil); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3022/buggy-version/src.org.executequery.databasemediators.spi.DefaultStatementExecutor.java", "BodyUseAPI": ["java.sql.Connection.setTransactionIsolation(int)"], "Fixed commit": "9d67c05f339599e2175d27c77b00485c9b1f495c", "Url": "https://api.github.com/repos/red-soft-ru/redexpert", "Date": "2018-02-12T08:21:49Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { parentIsVersioned = clientManager.getStatusClient().doStatus(parent.getLocation().toFile(), false).isVersioned(); } catch (org.tmatesoft.svn.core.SVNException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1795/buggy-version/ContextQuickie.TeamProvider.src.contextquickie.teamprovider.svn.ResourceDeltaVisitor.java", "BodyUseAPI": ["org.tmatesoft.svn.core.wc.SVNClientManager.getStatusClient()", "clientManager.getStatusClient().doStatus(parent.getLocation().toFile(), false).isVersioned()", "clientManager.getStatusClient().doStatus(parent.getLocation().toFile(),boolean)", "org.eclipse.core.resources.IResource.getLocation()", "parent.getLocation().toFile()"], "Fixed commit": "845d67f782ca5fbdc788cab3f03bcd58a6282280", "Url": "https://api.github.com/repos/ContextQuickie/ContextQuickie", "Date": "2018-09-30T12:10:00Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { symbols.addLast(java.lang.String.valueOf(r[i].charAt(1))); } catch (java.lang.StringIndexOutOfBoundsException e) { symbols.addLast(java.lang.String.valueOf(r[i].charAt(0))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/795/buggy-version/T1.Automaton.java", "BodyUseAPI": ["java.util.LinkedList<java.lang.String>.addLast(java.lang.String)", "java.lang.String.valueOf(char)", "java.lang.String.charAt(int)"], "Fixed commit": "8a7cf4ab90a7df5655e4187e81537d9ec3700f0c", "Url": "https://api.github.com/repos/jzatta/INE5421", "Date": "2018-05-15T20:45:00Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { root = javafx.fxml.FXMLLoader.load(getClass().getResource(\"FXMLDocument.fxml\")); } catch (java.lang.Exception e) { java.lang.System.out.println(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/265/buggy-version/src.GUI.app.java", "BodyUseAPI": ["javafx.fxml.FXMLLoader.load(java.net.URL)", "java.lang.Class<? extends GUI.app>.getResource(java.lang.String)", "GUI.app.getClass()"], "Fixed commit": "b3ad191141fd377a25bbb2e32b05d847101faa22", "Url": "https://api.github.com/repos/keronagy/Regaletna", "Date": "2018-04-20T06:47:37Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { session.disconnect(); session = null; } catch (java.lang.Exception e) { com.mmz.specs.application.gui.client.ClientMainWindow.log.warn(\"Could not disconnect\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/7385/buggy-version/src.main.java.com.mmz.specs.application.gui.client.ClientMainWindow.java", "BodyUseAPI": ["org.hibernate.Session.disconnect()"], "Fixed commit": "238fe521418ac9bb319575c85f90092e31fde30b", "Url": "https://api.github.com/repos/benchdoos/Specs", "Date": "2018-07-02T14:47:38Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(5); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6278/buggy-version/impl.androidApp.api.src.main.java.org.mindroid.impl.robot.DifferentialPilot.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "84b233c31528a6855d77ac2353613f48d0804e90", "Url": "https://api.github.com/repos/Echtzeitsysteme/mindroid", "Date": "2018-05-25T14:32:54Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.util.Collection<com.opsmatters.newrelic.api.model.synthetics.Monitor> monitors = syntheticsApiClient.monitors().list(label); for (com.opsmatters.newrelic.api.model.synthetics.Monitor monitor : monitors) cache.monitors().labels(monitor.getId()).add(label); } catch (java.lang.NullPointerException e) { com.opsmatters.core.provider.NewRelicManager.logger.severe((((\"Unable to get monitor labels: \" + (e.getClass().getName())) + \": \") + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/7543/buggy-version/src.main.java.com.opsmatters.core.provider.NewRelicManager.java", "BodyUseAPI": ["syntheticsApiClient.monitors().list(com.opsmatters.newrelic.api.model.labels.Label)", "com.opsmatters.core.provider.NewRelicCache.monitors()", "cache.monitors().labels(monitor.getId())", "com.opsmatters.newrelic.api.NewRelicSyntheticsApi.monitors()", "cache.monitors().labels(monitor.getId()).add(com.opsmatters.newrelic.api.model.labels.Label)", "com.opsmatters.newrelic.api.model.synthetics.Monitor.getId()"], "Fixed commit": "e432b81729b37524b68738547cf8e2f6a016aa8c", "Url": "https://api.github.com/repos/opsmatters/opsmatters-core", "Date": "2018-02-09T02:38:36Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { markerState.marker.setIcon(buildingIcon); if ((markerState.buildingZoneCircle) != null) { markerState.buildingZoneCircle.remove(); markerState.buildingZoneCircle = null; } createCircle(markerState); } catch (java.lang.IllegalArgumentException ex) { android.util.Log.e(com.playposse.landoftherooster.map.MarkerState.LOG_TAG, \"onPostExecute: Couldn't update map marker.\", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/9407/buggy-version/app.src.main.java.com.playposse.landoftherooster.map.MarkerState.java", "BodyUseAPI": ["com.google.android.gms.maps.model.Marker.setIcon(com.google.android.gms.maps.model.BitmapDescriptor)", "com.google.android.gms.maps.model.Circle.remove()", "com.playposse.landoftherooster.map.MarkerState.UpdateMapAsyncTask.createCircle(com.playposse.landoftherooster.map.MarkerState)"], "Fixed commit": "65db69f48bab36c7c55003e74543654ad4b4d4f9", "Url": "https://api.github.com/repos/thomasfischersm/LandOfTheRooster", "Date": "2018-06-29T22:30:13Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { throw new java.lang.Exception(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8121/buggy-version/src.perl.aaron.TruthTrees.logic.AtomicStatement.java", "BodyUseAPI": [], "Fixed commit": "2a9a9586a764f76d8672207aa52d76cc7e3d770f", "Url": "https://api.github.com/repos/amacnair/TFTrees", "Date": "2018-04-27T02:49:41Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { hasAuthentication = !(response.getStatusCode().equals(HttpStatus.UNAUTHORIZED)); } catch (org.springframework.web.client.HttpClientErrorException e) { io.metro.measurables.MeasurableClient.logger.error(e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6368/buggy-version/src.main.java.io.metro.measurables.MeasurableClient.java", "BodyUseAPI": ["io.metro.measurables.ResponseEntity.getStatusCode()", "response.getStatusCode().equals(HttpStatus.UNAUTHORIZED)"], "Fixed commit": "4731c8452e135b6cd4cee5de29ea031ffd060f6e", "Url": "https://api.github.com/repos/metrolabs/metro-measurables-client", "Date": "2018-05-10T18:25:58Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ircMessageRepository.save(message); } catch (java.lang.Exception e) { ru.bvn13.jircbot.database.services.IrcMessageService.logger.error((\"Could not save message! \" + message), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2668/buggy-version/src.main.java.ru.bvn13.jircbot.database.services.IrcMessageService.java", "BodyUseAPI": ["ru.bvn13.jircbot.database.repositories.IrcMessageRepository.save(ru.bvn13.jircbot.database.entities.IrcMessage)"], "Fixed commit": "29c11a7b1b07f4553b973776f74846454ed463e1", "Url": "https://api.github.com/repos/bvn13/JIrcBot", "Date": "2018-03-21T09:43:44Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { resJson = new org.json.JSONObject(resStr); } catch (org.json.JSONException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/7241/buggy-version/src.main.java.com.centaurstech.utils.ChatApi.java", "BodyUseAPI": [], "Fixed commit": "be85d00ce71da250e3fbd67492f515c0abccdebc", "Url": "https://api.github.com/repos/noahzark/centaurstech-common", "Date": "2018-07-05T02:18:46Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { matchesForPendingQueryReceived.await(); } catch (java.lang.InterruptedException e) { client.Client.LOGGER.log(java.util.logging.Level.SEVERE, ((\"Client \" + (getId())) + \"interrupted while waiting to retrieve matches to query.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5947/buggy-version/src.main.java.client.Client.java", "BodyUseAPI": ["java.util.concurrent.locks.Condition.await()"], "Fixed commit": "02140582be61ea32ce95b1f92235700734d48908", "Url": "https://api.github.com/repos/jengelhart0/distributed-bulletin-board-csci-5105", "Date": "2018-03-20T01:35:27Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mCameraSource.start(mSurfaceView.getHolder()); } catch (java.io.IOException e) { android.util.Log.e(com.google.android.gms.samples.vision.face.facetracker.ui.camera.CameraSourcePreview.TAG, \"Could not start camera source.\", e); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/4890/buggy-version/app.src.main.java.com.google.android.gms.samples.vision.face.facetracker.ui.camera.CameraSourcePreview.java", "BodyUseAPI": ["android.view.SurfaceView.getHolder()", "com.google.android.gms.vision.CameraSource.start(mSurfaceView.getHolder())"], "Fixed commit": "1d0cc47bd34695ba1dee495a077605451ec10736", "Url": "https://api.github.com/repos/raymondlo84/FaceChat", "Date": "2018-04-10T05:55:04Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.util.List<java.lang.String> result = getParamValue(tslDoc, navajoScript); for (java.lang.String res : result) { addScriptDependency(scriptFile, scriptTenant, deps, res, scriptFolder, getLineNr(expression), Dependency.NAVAJO_DEPENDENCY); } } catch (javax.xml.xpath.XPathExpressionException e) { com.dexels.navajo.dependency.TslPreCompiler.logger.debug(\"Unable to resolve param {} in script {}\", navajoScript, scriptFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2202/buggy-version/core.com.dexels.navajo.core.src.com.dexels.navajo.dependency.TslPreCompiler.java", "BodyUseAPI": ["com.dexels.navajo.dependency.TslPreCompiler.getParamValue(org.w3c.dom.Document,java.lang.String)", "com.dexels.navajo.dependency.TslPreCompiler.addScriptDependency(java.lang.String,java.lang.String,java.util.List<com.dexels.navajo.dependency.Dependency>,java.lang.String,java.lang.String,int,Dependency.NAVAJO_DEPENDENCY)", "com.dexels.navajo.dependency.TslPreCompiler.getLineNr(org.w3c.dom.Element)"], "Fixed commit": "0aecabcecf1c4b68fe0422d6ff644e428f5e755f", "Url": "https://api.github.com/repos/Dexels/navajo", "Date": "2018-01-26T15:31:11Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { resultSet = statement.executeQuery(\"select * from Data WHERE Data='Lyser'\"); } catch (java.sql.SQLException e) { e.printStackTrace(); statement = connect.createStatement(); return handle(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2878/buggy-version/src.main.java.Main.java", "BodyUseAPI": ["java.sql.Statement.executeQuery(java.lang.String)"], "Fixed commit": "2aba6f8aab6f03518e564ee8226e65f856423c95", "Url": "https://api.github.com/repos/jakobbjorns/pajsida", "Date": "2018-01-18T20:30:23Z"},
{"Line": "=>650", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { accountCreated = accountManager.addAccountExplicitly(account, password, null); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3850/buggy-version/appV2.src.main.java.mobile.tiis.appV2.LoginActivity.java", "BodyUseAPI": ["android.accounts.AccountManager.addAccountExplicitly(android.accounts.Account,java.lang.String,<nulltype>)"], "Fixed commit": "f1f91e61dd9eff125ee01f5cfc3571f0fd62150f", "Url": "https://api.github.com/repos/BIDMOH/TIIS2-Android-Mobile-Client-Application", "Date": "2017-11-14T09:20:25Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { amount = java.lang.Double.parseDouble(value); } catch (java.lang.IllegalArgumentException e) { java.lang.System.out.println(((\"Sorry, \" + value) + \" is not a valid amount.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5193/buggy-version/src.coinpurse.MoneyFactory.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "4002627bb1d4b7b11c39ecd0e641dc5622ee2801", "Url": "https://api.github.com/repos/OOP2018/coinpurse-pawan1235", "Date": "2018-02-21T03:52:15Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { conn.close(); } catch (java.sql.SQLException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/841/buggy-version/src.main.java.sg.edu.sutd.bank.webapp.service.ClientAccountDAOImpl.java", "BodyUseAPI": ["java.sql.Connection.close()"], "Fixed commit": "8d753e50b89a82eaea1f0d6a33b8347dd08a6157", "Url": "https://api.github.com/repos/mqf20/bankwebapp", "Date": "2018-04-21T14:33:15Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { new etu.swing.UI().setVisible(true); } catch (java.io.FileNotFoundException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/9709/buggy-version/HeapSort.src.etu.swing.UI.java", "BodyUseAPI": ["etu.swing.UI.setVisible(boolean)"], "Fixed commit": "7a5577aae858fa5ba55238bc4bf1a54989b26871", "Url": "https://api.github.com/repos/cherowl/java-project", "Date": "2018-07-04T12:53:18Z"},
{"Line": "=>456", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return debugLogicController.suggestInputValue(inputVariableId, range, type); } catch (dibugger.debuglogic.exceptions.DIbuggerLogicException e) { exceptionHandler.handle(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/4812/buggy-version/Iplementierung.DIbugger.src.dibugger.control.ControlFacade.java", "BodyUseAPI": ["dibugger.control.DebugLogicController.suggestInputValue(java.lang.String,java.lang.String,int)"], "Fixed commit": "e5c9f39c2f63229164c90a38ae13a63b22d0ff23", "Url": "https://api.github.com/repos/JoanaP1997/PSE", "Date": "2018-03-14T13:46:52Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { setProfileWidgets(mFirebaseMethods.getUserAccountSettings(dataSnapshot)); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9478/buggy-version/app.src.main.java.to.rent.rentto.Profile.ProfileFragment.java", "BodyUseAPI": ["to.rent.rentto.Utils.FirebaseMethods.getUserAccountSettings(com.google.firebase.database.DataSnapshot)", "to.rent.rentto.Profile.ProfileFragment.3.setProfileWidgets(mFirebaseMethods.getUserAccountSettings(dataSnapshot))"], "Fixed commit": "02c0cc336555efab673394ee44f8e895a255e2a6", "Url": "https://api.github.com/repos/minhwebc/Rent.To", "Date": "2018-04-11T04:25:17Z"},
{"Line": "=>700", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { prefVersion = preferences.getInt(Constants.KEY_PREFERENCES_VERSION, 0); } catch (java.lang.ClassCastException e) { prefVersion = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/4117/buggy-version/corekit.src.main.java.com.midtrans.sdk.corekit.core.SdkUtil.java", "BodyUseAPI": ["com.securepreferences.SecurePreferences.getInt(Constants.KEY_PREFERENCES_VERSION,int)"], "Fixed commit": "1f63dfe443a0d51c21971fc910c8f8a97116d311", "Url": "https://api.github.com/repos/veritrans/veritrans-android", "Date": "2018-03-19T12:11:42Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { properties.putAll(io.fabric8.maven.core.util.SpringBootUtil.getFlattenedMap(source)); } catch (java.lang.IllegalArgumentException e) { throw new java.lang.IllegalArgumentException(java.lang.String.format(\"Spring Boot configuration file %s is not formatted correctly. %s\", resource.toString(), e.getMessage())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3611/buggy-version/core.src.main.java.io.fabric8.maven.core.util.SpringBootUtil.java", "BodyUseAPI": ["java.util.Properties.putAll(java.util.Map<java.lang.String, java.lang.Object>)", "io.fabric8.maven.core.util.SpringBootUtil.getFlattenedMap(java.util.SortedMap<java.lang.String, java.lang.Object>)"], "Fixed commit": "656d2d84ec2663d36f00ea29bf7e3945c38acf18", "Url": "https://api.github.com/repos/lordofthejars/fabric8-maven-plugin", "Date": "2018-09-21T10:31:21Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { table.setRowSorter(new javax.swing.table.TableRowSorter(modStandard)); ((javax.swing.table.TableRowSorter) (table.getRowSorter())).setSortKeys(keys); ((javax.swing.table.TableRowSorter) (table.getRowSorter())).sort(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/5777/buggy-version/src.main.java.org.magic.gui.dashlet.TrendingDashlet.java", "BodyUseAPI": ["((javax.swing.table.TableRowSorter) (table.getRowSorter())).sort()", "org.jdesktop.swingx.JXTable.getRowSorter()", "((javax.swing.table.TableRowSorter) (table.getRowSorter())).setSortKeys(java.util.List<javax.swing.RowSorter.SortKey>)", "org.jdesktop.swingx.JXTable.setRowSorter(javax.swing.table.TableRowSorter)", "org.jdesktop.swingx.JXTable.getRowSorter()"], "Fixed commit": "8062796139a1543b8eaa050d0662403a0a284b58", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2018-01-13T15:27:20Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.addTransition(inEdge.getSource().getIdentifier(), unitedState, inEdge.getIdentifier()); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/2511/buggy-version/Trunk.src.org.processmining.plugins.FSMTransitionSystem.java", "BodyUseAPI": ["org.processmining.plugins.FSMTransitionSystem.addTransition(inEdge.getSource().getIdentifier(),java.lang.Object,inEdge.getIdentifier())", "org.processmining.models.graphbased.directed.transitionsystem.Transition.getIdentifier()", "inEdge.getSource().getIdentifier()", "org.processmining.models.graphbased.directed.transitionsystem.Transition.getSource()"], "Fixed commit": "48f8af49e1b5f6450e9e9db01eae8e7f4d8aeb3a", "Url": "https://api.github.com/repos/Fox0117/Coursework_2017-2018", "Date": "2018-05-07T14:23:45Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.addTransition(fromPrefix, toPrefix, trace.get(j).getAttributes().get(keyName).toString()); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/2511/buggy-version/Trunk.src.org.processmining.plugins.FSMTransitionSystem.java", "BodyUseAPI": ["trace.get(j).getAttributes().get(java.lang.String)", "org.processmining.plugins.FSMTransitionSystem.addTransition(java.lang.String,java.lang.String,trace.get(j).getAttributes().get(keyName).toString())", "trace.get(j).getAttributes()", "trace.get(j).getAttributes().get(keyName).toString()", "org.deckfour.xes.model.XTrace.get(int)"], "Fixed commit": "48f8af49e1b5f6450e9e9db01eae8e7f4d8aeb3a", "Url": "https://api.github.com/repos/Fox0117/Coursework_2017-2018", "Date": "2018-05-07T14:23:45Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.addTransition(unitedState, outEdge.getTarget().getIdentifier(), outEdge.getIdentifier()); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/2511/buggy-version/Trunk.src.org.processmining.plugins.FSMTransitionSystem.java", "BodyUseAPI": ["org.processmining.models.graphbased.directed.transitionsystem.Transition.getTarget()", "outEdge.getTarget().getIdentifier()", "org.processmining.plugins.FSMTransitionSystem.addTransition(java.lang.Object,outEdge.getTarget().getIdentifier(),outEdge.getIdentifier())", "org.processmining.models.graphbased.directed.transitionsystem.Transition.getIdentifier()"], "Fixed commit": "48f8af49e1b5f6450e9e9db01eae8e7f4d8aeb3a", "Url": "https://api.github.com/repos/Fox0117/Coursework_2017-2018", "Date": "2018-05-07T14:23:45Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.addTransition(fromState.getIdentifier(), toState.getIdentifier(), identifier); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/2511/buggy-version/Trunk.src.org.processmining.plugins.DictionaryTransitionSystem.java", "BodyUseAPI": ["org.processmining.plugins.DictionaryTransitionSystem.addTransition(fromState.getIdentifier(),toState.getIdentifier(),java.lang.Object)", "org.processmining.models.graphbased.directed.transitionsystem.State.getIdentifier()", "org.processmining.models.graphbased.directed.transitionsystem.State.getIdentifier()"], "Fixed commit": "48f8af49e1b5f6450e9e9db01eae8e7f4d8aeb3a", "Url": "https://api.github.com/repos/Fox0117/Coursework_2017-2018", "Date": "2018-05-07T14:23:45Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { result = sdf.format(date); } catch (java.lang.Exception e) { e.printStackTrace(); result = value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9708/buggy-version/src.main.java.seedu.address.model.activity.DateTime.java", "BodyUseAPI": ["java.text.SimpleDateFormat.format(java.util.Date)"], "Fixed commit": "8f588bc78168c4460bc3774a3284dccbb6c57e9c", "Url": "https://api.github.com/repos/Kyomian/main", "Date": "2018-03-12T15:32:23Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { sdf.parse(test); return true; } catch (java.text.ParseException e) { e.printStackTrace(); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9708/buggy-version/src.main.java.seedu.address.model.activity.DateTime.java", "BodyUseAPI": ["java.text.SimpleDateFormat.parse(java.lang.String)"], "Fixed commit": "8f588bc78168c4460bc3774a3284dccbb6c57e9c", "Url": "https://api.github.com/repos/Kyomian/main", "Date": "2018-03-12T15:32:23Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(_heartBeatUpdateRetrySleep); } catch (java.lang.InterruptedException e) { com.cloud.hypervisor.kvm.resource.KVMHAMonitor.s_logger.debug(\"[ignored] interupted between heartbeat retries.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/799/buggy-version/plugins.hypervisors.kvm.src.com.cloud.hypervisor.kvm.resource.KVMHAMonitor.java", "BodyUseAPI": ["java.lang.Thread.sleep(com.cloud.hypervisor.kvm.resource.KVMHAMonitor.Monitor)"], "Fixed commit": "023dcec5ef2e38091c0aacda1e0fae67fd6c4553", "Url": "https://api.github.com/repos/GabrielBrascher/cloudstack", "Date": "2018-08-20T08:28:03Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { layoutManager.scrollToPositionWithOffset(((spanCount * exactItemPos) / (scrollPosState.rowHeight)), (-(exactItemPos % (scrollPosState.rowHeight)))); } catch (java.lang.ArithmeticException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/7668/buggy-version/lib.src.main.java.com.turingtechnologies.materialscrollbar.ScrollingUtilities.java", "BodyUseAPI": ["android.support.v7.widget.LinearLayoutManager.scrollToPositionWithOffset(int,int)"], "Fixed commit": "d9403af1c56fbab5b8aac9d81002abb2a4070ad2", "Url": "https://api.github.com/repos/turing-tech/MaterialScrollBar", "Date": "2018-07-06T03:59:56Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { it.polito.verigraph.service.NodeService.validateNodeConfigurationAgainstSchemaFile(node, configurationJsonNode); } catch (it.polito.verigraph.exception.ForbiddenException e) { node.setFunctional_type(\"fieldmodifier\"); java.lang.String FieldModifierJsonString = \"{[]}\"; com.fasterxml.jackson.databind.ObjectMapper mapper = new com.fasterxml.jackson.databind.ObjectMapper(); com.fasterxml.jackson.databind.JsonNode FieldModifierConfigurationNode = null; try { FieldModifierConfigurationNode = mapper.readTree(FieldModifierJsonString); } catch (java.io.IOException e1) { } configuration.setConfiguration(FieldModifierConfigurationNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1747/buggy-version/src.it.polito.verigraph.service.NodeService.java", "BodyUseAPI": ["it.polito.verigraph.service.NodeService.validateNodeConfigurationAgainstSchemaFile(it.polito.verigraph.model.Node,com.fasterxml.jackson.databind.JsonNode)"], "Fixed commit": "1f65815c9677416e41b0a74116d5a495bcc3b3f2", "Url": "https://api.github.com/repos/netgroup-polito/verigraph", "Date": "2018-02-17T15:36:27Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { table = page.getHtmlElementById(\"sortable_0\"); } catch (com.gargoylesoftware.htmlunit.ElementNotFoundException ex) { if (pageAsXml.contains(\"(Empty)\")) { com.rca.parseplanroom.Worker.log.info(((\".................................... No project for status [\" + statusString) + \"]\")); return 0; } com.rca.parseplanroom.Worker.log.info(((((\"can't open projects for status [\" + statusString) + \"] [\") + (ex.getMessage())) + \"]\")); throw ex; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/7356/buggy-version/05_src.ParsePlanRoom.src.com.rca.parseplanroom.Worker.java", "BodyUseAPI": ["com.gargoylesoftware.htmlunit.html.HtmlPage.getHtmlElementById(java.lang.String)"], "Fixed commit": "accfbc565dfb0886356436a82bf0511ddea1a859", "Url": "https://api.github.com/repos/shihangnk/TestPlanRoom", "Date": "2018-08-08T16:08:09Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { userController.tagService.updateTag(tag.getIdent(), tag.getName()); } catch (org.springframework.dao.DataIntegrityViolationException e) { model.addAttribute(\"message\", \"Cannot update, this tag already exists.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/2553/buggy-version/src.main.java.server.controller.ForumController.java", "BodyUseAPI": ["forum.entity.Tag.getIdent()", "userController.tagService.updateTag(tag.getIdent(),tag.getName())", "forum.entity.Tag.getName()"], "Fixed commit": "e9abb3230530051536ddcfa98735194d4abf3b4c", "Url": "https://api.github.com/repos/jrjsnc/forum", "Date": "2018-02-14T07:48:56Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { logFile.read(); } catch (java.io.FileNotFoundException f) { } catch (java.lang.ClassNotFoundException el) { } catch (java.io.IOException e1) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/4940/buggy-version/src.toCSV.java", "BodyUseAPI": ["LOG.read()"], "Fixed commit": "482536a17bb2889ef5df8fea147c67aeb4e95a2e", "Url": "https://api.github.com/repos/CSUS-CSC-131-Spring2018/S4T4TM2", "Date": "2018-05-02T17:08:10Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.content.Intent myIntent = new android.content.Intent(); myIntent.putExtra(\"email\", etemail.getText().toString()); startActivity(myIntent); } catch (java.lang.Exception e) { java.lang.System.out.println(\"Class not found exception\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9220/buggy-version/app.src.main.java.com.example.randikawann.findhelper.RegisterActivity.java", "BodyUseAPI": ["android.widget.EditText.getText()", "etemail.getText().toString()", "com.example.randikawann.findhelper.RegisterActivity.1.startActivity(android.content.Intent)", "android.content.Intent.putExtra(java.lang.String,etemail.getText().toString())"], "Fixed commit": "0946a1475daffc1d64ba0f4aeb93b483a99e5f20", "Url": "https://api.github.com/repos/randikawann/Android-domestic-service-app", "Date": "2018-05-22T04:16:45Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { val = eval.evaluate(c); } catch (java.lang.NullPointerException npe) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1465/buggy-version/fineract-provider.src.main.java.org.apache.fineract.infrastructure.bulkimport.importhandler.ImportHandlerUtils.java", "BodyUseAPI": ["org.apache.fineract.infrastructure.bulkimport.importhandler.FormulaEvaluator.evaluate(org.apache.fineract.infrastructure.bulkimport.importhandler.Cell)"], "Fixed commit": "650e1ddd8b5dfaf4c6eb2a44512390e9011d4be4", "Url": "https://api.github.com/repos/wkk91193/incubator-fineract", "Date": "2018-06-15T17:43:38Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { val = eval.evaluate(c); } catch (java.lang.NullPointerException npe) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1465/buggy-version/fineract-provider.src.main.java.org.apache.fineract.infrastructure.bulkimport.importhandler.ImportHandlerUtils.java", "BodyUseAPI": ["org.apache.fineract.infrastructure.bulkimport.importhandler.FormulaEvaluator.evaluate(org.apache.fineract.infrastructure.bulkimport.importhandler.Cell)"], "Fixed commit": "650e1ddd8b5dfaf4c6eb2a44512390e9011d4be4", "Url": "https://api.github.com/repos/wkk91193/incubator-fineract", "Date": "2018-06-15T17:43:38Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { val = eval.evaluate(c); } catch (java.lang.NullPointerException npe) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1465/buggy-version/fineract-provider.src.main.java.org.apache.fineract.infrastructure.bulkimport.importhandler.ImportHandlerUtils.java", "BodyUseAPI": ["org.apache.fineract.infrastructure.bulkimport.importhandler.FormulaEvaluator.evaluate(org.apache.fineract.infrastructure.bulkimport.importhandler.Cell)"], "Fixed commit": "650e1ddd8b5dfaf4c6eb2a44512390e9011d4be4", "Url": "https://api.github.com/repos/wkk91193/incubator-fineract", "Date": "2018-06-15T17:43:38Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { val = eval.evaluate(c); } catch (java.lang.NullPointerException npe) { return 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1465/buggy-version/fineract-provider.src.main.java.org.apache.fineract.infrastructure.bulkimport.importhandler.ImportHandlerUtils.java", "BodyUseAPI": ["org.apache.fineract.infrastructure.bulkimport.importhandler.FormulaEvaluator.evaluate(org.apache.fineract.infrastructure.bulkimport.importhandler.Cell)"], "Fixed commit": "650e1ddd8b5dfaf4c6eb2a44512390e9011d4be4", "Url": "https://api.github.com/repos/wkk91193/incubator-fineract", "Date": "2018-06-15T17:43:38Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { val = eval.evaluate(c); } catch (java.lang.NullPointerException npe) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1465/buggy-version/fineract-provider.src.main.java.org.apache.fineract.infrastructure.bulkimport.importhandler.ImportHandlerUtils.java", "BodyUseAPI": ["org.apache.fineract.infrastructure.bulkimport.importhandler.FormulaEvaluator.evaluate(org.apache.fineract.infrastructure.bulkimport.importhandler.Cell)"], "Fixed commit": "650e1ddd8b5dfaf4c6eb2a44512390e9011d4be4", "Url": "https://api.github.com/repos/wkk91193/incubator-fineract", "Date": "2018-06-15T17:43:38Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { int intCheck = java.lang.Integer.parseInt(args); } catch (java.lang.Exception e) { throw new seedu.address.logic.parser.exceptions.ParseException(java.lang.String.format(seedu.address.logic.parser.MESSAGE_INVALID_COMMAND_FORMAT, CalendarDeleteCommand.MESSAGE_USAGE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3712/buggy-version/src.main.java.seedu.address.logic.parser.CalendarDeleteCommandParser.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "650c8f216fdce05f36c22e62d3bacac0f5d1e26c", "Url": "https://api.github.com/repos/CS2103JAN2018-T11-B2/main", "Date": "2018-04-15T16:12:38Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { int attributeCounter = java.lang.Integer.parseInt(propertyCounterString); correlation.setMaximum(maximum); correlation.setAttributeCounter(attributeCounter); return correlation; } catch (java.lang.NumberFormatException e) { throw new edu.kit.ipd.dbis.correlation.exceptions.InvalidCorrelationInputException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8196/buggy-version/src.main.java.edu.kit.ipd.dbis.correlation.CorrelationRequest.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "edu.kit.ipd.dbis.correlation.Correlation.setMaximum(boolean)", "edu.kit.ipd.dbis.correlation.Correlation.setAttributeCounter(int)"], "Fixed commit": "084a77109fc912cd65b41d8efdf5490ebff503ee", "Url": "https://api.github.com/repos/DifferentLink/Grape", "Date": "2018-03-06T10:51:32Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return beziers[((int) (java.lang.Math.floor(t)))].at((t % 1.0)); } catch (java.lang.ArrayIndexOutOfBoundsException e) { return beziers[((beziers.length) - 1)].at((t % 1.0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/7673/buggy-version/src.robot.pathfinder.bezier.BezierPath.java", "BodyUseAPI": ["beziers[((int) (java.lang.Math.floor(t)))].at(double)", "java.lang.Math.floor(double)"], "Fixed commit": "5ebcfa0be203466f1d2dc13c29aec83e98e6f838", "Url": "https://api.github.com/repos/Arctos6135/RobotPathfinder", "Date": "2018-04-29T22:36:22Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.System.out.println((((score) + \", \") + playerName)); scoreList.add(new Score(score, playerName)); sortScores(); flappyScoreHandler.writeFile(); } catch (java.lang.Exception e) { java.lang.System.out.println(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8428/buggy-version/src.FlappyBird.java", "BodyUseAPI": ["ScoreHandler.writeFile()", "java.util.ArrayList<Score>.add(Score)", "FlappyBird.sortScores()", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "9d6370aa8ec0b53e4274c00bed95935b397b7728", "Url": "https://api.github.com/repos/KenGrossman/FloatyBird", "Date": "2018-08-22T20:52:36Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { final org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor sch = applicationContext.getBean(org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor.class); sch.setEmbeddedValueResolver(resolver); } catch (final org.springframework.beans.factory.NoSuchBeanDefinitionException e) { org.apereo.cas.util.LOGGER.warn(\"Unable to locate [ScheduledAnnotationBeanPostProcessor] as a bean. Support for duration syntax (i.e. PT2S) may not be available\"); org.apereo.cas.util.LOGGER.trace(e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3235/buggy-version/core.cas-server-core-util-api.src.main.java.org.apereo.cas.util.SchedulingUtils.java", "BodyUseAPI": ["org.springframework.context.ApplicationContext.getBean(java.lang.Class)", "org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor.setEmbeddedValueResolver(org.springframework.util.StringValueResolver)"], "Fixed commit": "5783c4ac5a23d809ef18b3eb64460fc6aedb6907", "Url": "https://api.github.com/repos/apereo/cas", "Date": "2018-06-11T15:56:25Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { youTubeItem.setItemCount(item.getString(\"itemCount\")); } catch (org.json.JSONException e) { arrayList.add(youTubeItem); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8208/buggy-version/app.src.main.java.com.wordpress.dnvsoft.youtubelite.models.YouTubeItemJsonHelper.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)", "T.setItemCount(item.getString(\"itemCount\"))"], "Fixed commit": "5048d451f08910d31fa0f2bb208c71358e07fa73", "Url": "https://api.github.com/repos/jdinkov/YouTubeLite", "Date": "2018-07-05T21:25:21Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { processor.process(batch); } catch (com.fasterxml.jackson.core.JsonProcessingException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1724/buggy-version/src.main.java.com.myreward.engine.audit.AuditProcessOuptutStream.java", "BodyUseAPI": ["com.myreward.engine.audit.AuditEventProcessor.process(com.myreward.engine.audit.EventBatch<com.myreward.engine.audit.AuditEvent>)"], "Fixed commit": "3d16a2b5c8bd7d53b095cd05b38d87a20ff6072f", "Url": "https://api.github.com/repos/vippulpanditgit/myrewardengine", "Date": "2018-03-16T03:08:15Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { processor.process(event); } catch (com.fasterxml.jackson.core.JsonProcessingException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1724/buggy-version/src.main.java.com.myreward.engine.audit.AuditProcessOuptutStream.java", "BodyUseAPI": ["com.myreward.engine.audit.AuditEventProcessor.process(com.myreward.engine.audit.AuditEvent)"], "Fixed commit": "3d16a2b5c8bd7d53b095cd05b38d87a20ff6072f", "Url": "https://api.github.com/repos/vippulpanditgit/myrewardengine", "Date": "2018-03-16T03:08:15Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { connection(); } catch (java.lang.ClassNotFoundException e) { e.printStackTrace(); } catch (java.sql.SQLException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8857/buggy-version/src.main.java.com.athina.hexagonal.microservice.integration.PostgresRepository.java", "BodyUseAPI": ["com.athina.hexagonal.microservice.integration.PostgresRepository.connection()"], "Fixed commit": "6ef61d36ba1eb477d84c82df16397a3b50d6cf7e", "Url": "https://api.github.com/repos/A8ina/Simple-Microservice", "Date": "2018-01-10T09:00:29Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String body = \"{\\\"request\\\":{\\\"filters\\\":{\\\"identifier\\\":\\\"test\\\"}}}\"; java.util.Map<java.lang.String, java.lang.String> headers = new java.util.HashMap<>(); headers.put(JsonKey.AUTHORIZATION, ((org.sunbird.common.models.util.JsonKey.BEARER) + (java.lang.System.getenv(JsonKey.EKSTEP_AUTHORIZATION)))); if (org.sunbird.common.models.util.ProjectUtil.isStringNullOREmpty(((java.lang.String) (headers.get(JsonKey.AUTHORIZATION))))) { headers.put(JsonKey.AUTHORIZATION, org.sunbird.common.models.util.PropertiesCache.getInstance().getProperty(JsonKey.EKSTEP_AUTHORIZATION)); headers.put(\"Content_Type\", \"application/json; charset=utf-8\"); } java.lang.String ekStepBaseUrl = java.lang.System.getenv(JsonKey.EKSTEP_BASE_URL); if (org.sunbird.common.models.util.ProjectUtil.isStringNullOREmpty(ekStepBaseUrl)) { ekStepBaseUrl = org.sunbird.common.models.util.PropertiesCache.getInstance().getProperty(JsonKey.EKSTEP_BASE_URL); } java.lang.String response = org.sunbird.common.models.util.HttpUtil.sendPostRequest((ekStepBaseUrl + (org.sunbird.common.models.util.PropertiesCache.getInstance().getProperty(JsonKey.EKSTEP_CONTENT_SEARCH_URL))), body, headers); if (response.contains(\"OK\")) { responseList.add(org.sunbird.common.models.util.ProjectUtil.createCheckResponse(JsonKey.EKSTEP_SERVICE, false, null)); }else { responseList.add(org.sunbird.common.models.util.ProjectUtil.createCheckResponse(JsonKey.EKSTEP_SERVICE, true, null)); } } catch (java.lang.Exception e) { responseList.add(org.sunbird.common.models.util.ProjectUtil.createCheckResponse(JsonKey.EKSTEP_SERVICE, true, null)); isallHealthy = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/6998/buggy-version/actors.src.main.java.org.sunbird.learner.actors.badges.BadgesActor.java", "BodyUseAPI": ["java.lang.System.getenv(JsonKey.EKSTEP_BASE_URL)", "org.sunbird.common.models.util.PropertiesCache.getInstance().getProperty(JsonKey.EKSTEP_CONTENT_SEARCH_URL)", "java.util.Map<java.lang.String, java.lang.String>.put(JsonKey.AUTHORIZATION,org.sunbird.common.models.util.PropertiesCache.getInstance().getProperty(JsonKey.EKSTEP_AUTHORIZATION))", "org.sunbird.common.models.util.PropertiesCache.getInstance().getProperty(JsonKey.EKSTEP_AUTHORIZATION)", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "org.sunbird.common.models.util.ProjectUtil.createCheckResponse(JsonKey.EKSTEP_SERVICE,boolean,<nulltype>)", "org.sunbird.common.models.util.PropertiesCache.getInstance()", "org.sunbird.common.models.util.PropertiesCache.getInstance()", "java.lang.String.contains(java.lang.String)", "org.sunbird.common.models.util.ProjectUtil.isStringNullOREmpty(java.lang.String)", "org.sunbird.common.models.util.ProjectUtil.isStringNullOREmpty(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.put(JsonKey.AUTHORIZATION,((org.sunbird.common.models.util.JsonKey.BEARER) + (java.lang.System.getenv(JsonKey.EKSTEP_AUTHORIZATION))))", "org.sunbird.common.models.util.PropertiesCache.getInstance()", "org.sunbird.common.models.util.PropertiesCache.getInstance().getProperty(JsonKey.EKSTEP_BASE_URL)", "org.sunbird.common.models.util.HttpUtil.sendPostRequest((ekStepBaseUrl + (org.sunbird.common.models.util.PropertiesCache.getInstance().getProperty(JsonKey.EKSTEP_CONTENT_SEARCH_URL))),java.lang.String,java.util.Map<java.lang.String, java.lang.String>)", "java.util.List<java.util.Map<java.lang.String, java.lang.Object>>.add(org.sunbird.common.models.util.ProjectUtil.createCheckResponse(JsonKey.EKSTEP_SERVICE, true, null))", "java.util.List<java.util.Map<java.lang.String, java.lang.Object>>.add(org.sunbird.common.models.util.ProjectUtil.createCheckResponse(JsonKey.EKSTEP_SERVICE, false, null))", "org.sunbird.common.models.util.ProjectUtil.createCheckResponse(JsonKey.EKSTEP_SERVICE,boolean,<nulltype>)", "java.lang.System.getenv(JsonKey.EKSTEP_AUTHORIZATION)", "java.util.Map<java.lang.String, java.lang.String>.get(JsonKey.AUTHORIZATION)"], "Fixed commit": "bdadfc619ef1943d09a25f0f059716ce5091ed3a", "Url": "https://api.github.com/repos/project-sunbird/sunbird-lms-mw", "Date": "2018-03-02T07:15:05Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { multiClassModelCnt = ml.shifu.shifu.util.CommonUtils.getBasicModelsCnt(modelConfig, evalConfig, evalConfig.getDataSet().getSource()); } catch (java.io.FileNotFoundException e) { multiClassModelCnt = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3187/buggy-version/src.main.java.ml.shifu.shifu.core.ConfusionMatrix.java", "BodyUseAPI": ["ml.shifu.shifu.util.CommonUtils.getBasicModelsCnt(ml.shifu.shifu.container.obj.ModelConfig,ml.shifu.shifu.container.obj.EvalConfig,evalConfig.getDataSet().getSource())", "evalConfig.getDataSet().getSource()", "ml.shifu.shifu.container.obj.EvalConfig.getDataSet()"], "Fixed commit": "b13d1db537753ca24a4d95fd12e686680b098668", "Url": "https://api.github.com/repos/ShifuML/shifu", "Date": "2017-03-29T19:54:55Z"},
{"Line": "=>577", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { offHeapSize = java.lang.Long.valueOf(managedMemorySizeDefaultVal); if (!(config.getString(TaskManagerOptions.MANAGED_MEMORY_SIZE).equals(managedMemorySizeDefaultVal))) { offHeapSize = org.apache.flink.configuration.MemorySize.parse(config.getString(TaskManagerOptions.MANAGED_MEMORY_SIZE)).getMebiBytes(); } } catch (java.lang.IllegalArgumentException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3605/buggy-version/flink-runtime.src.main.java.org.apache.flink.runtime.taskexecutor.TaskManagerServices.java", "BodyUseAPI": ["org.apache.flink.configuration.Configuration.getString(TaskManagerOptions.MANAGED_MEMORY_SIZE)", "config.getString(TaskManagerOptions.MANAGED_MEMORY_SIZE).equals(java.lang.String)", "org.apache.flink.configuration.MemorySize.parse(config.getString(TaskManagerOptions.MANAGED_MEMORY_SIZE)).getMebiBytes()", "org.apache.flink.configuration.MemorySize.parse(config.getString(TaskManagerOptions.MANAGED_MEMORY_SIZE))", "org.apache.flink.configuration.Configuration.getString(TaskManagerOptions.MANAGED_MEMORY_SIZE)", "java.lang.Long.valueOf(java.lang.String)"], "Fixed commit": "99bd7f21e3297623a6369108bc692c72ea1415ac", "Url": "https://api.github.com/repos/yanghua/flink", "Date": "2018-02-10T12:58:44Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { this.binaryVersion = new java.lang.String(binaryVersionBytes, \"UTF-8\"); } catch (java.io.UnsupportedEncodingException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8558/buggy-version/modP2pImpl.src.org.aion.p2p.impl.zero.msg.ResHandshake1.java", "BodyUseAPI": [], "Fixed commit": "6482a2c2fc584ca24e38b8c095892f23b6583f77", "Url": "https://api.github.com/repos/aionnetwork/aion", "Date": "2018-05-18T18:36:42Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { binaryVersionBytes = this.binaryVersion.getBytes(\"UTF-8\"); } catch (java.io.UnsupportedEncodingException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8558/buggy-version/modP2pImpl.src.org.aion.p2p.impl.zero.msg.ResHandshake1.java", "BodyUseAPI": ["java.lang.String.getBytes(java.lang.String)"], "Fixed commit": "6482a2c2fc584ca24e38b8c095892f23b6583f77", "Url": "https://api.github.com/repos/aionnetwork/aion", "Date": "2018-05-18T18:36:42Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { show = file.getFileType().getName().equals(\"JAVA\"); } catch (java.lang.Exception exc) { e.getPresentation().setVisible(false); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9795/buggy-version/src.Actions.RunWithArguments.java", "BodyUseAPI": ["Actions.PsiFile.getFileType()", "file.getFileType().getName().equals(java.lang.String)", "file.getFileType().getName()"], "Fixed commit": "525621e2647b60f60ca31f703c3b8f859f57b9ff", "Url": "https://api.github.com/repos/chrispan68/Run-With-Arguments", "Date": "2018-07-26T21:54:36Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mod = LangDataKeys.MODULE.getData(e.getDataContext()); } catch (java.lang.Exception exc) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9795/buggy-version/src.Actions.RunWithArguments.java", "BodyUseAPI": ["com.intellij.openapi.actionSystem.AnActionEvent.getDataContext()", "LangDataKeys.MODULE.getData(e.getDataContext())"], "Fixed commit": "525621e2647b60f60ca31f703c3b8f859f57b9ff", "Url": "https://api.github.com/repos/chrispan68/Run-With-Arguments", "Date": "2018-07-26T21:54:36Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { filename += file.getName().substring(0, file.getName().lastIndexOf('.')); } catch (java.lang.Exception exc) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9795/buggy-version/src.Actions.RunWithArguments.java", "BodyUseAPI": ["file.getName().lastIndexOf(char)", "Actions.PsiJavaFile.getName()", "Actions.PsiJavaFile.getName()", "file.getName().substring(int,file.getName().lastIndexOf('.'))"], "Fixed commit": "525621e2647b60f60ca31f703c3b8f859f57b9ff", "Url": "https://api.github.com/repos/chrispan68/Run-With-Arguments", "Date": "2018-07-26T21:54:36Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { file = ((Actions.PsiJavaFile) (e.getData(PlatformDataKeys.PSI_FILE))); } catch (java.lang.Exception exc) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9795/buggy-version/src.Actions.RunWithArguments.java", "BodyUseAPI": ["com.intellij.openapi.actionSystem.AnActionEvent.getData(PlatformDataKeys.PSI_FILE)"], "Fixed commit": "525621e2647b60f60ca31f703c3b8f859f57b9ff", "Url": "https://api.github.com/repos/chrispan68/Run-With-Arguments", "Date": "2018-07-26T21:54:36Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { file = ((Actions.PsiJavaFile) (e.getData(PlatformDataKeys.PSI_FILE))); } catch (java.lang.Exception exc) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9795/buggy-version/src.Actions.DebugWithArguments.java", "BodyUseAPI": ["com.intellij.openapi.actionSystem.AnActionEvent.getData(PlatformDataKeys.PSI_FILE)"], "Fixed commit": "525621e2647b60f60ca31f703c3b8f859f57b9ff", "Url": "https://api.github.com/repos/chrispan68/Run-With-Arguments", "Date": "2018-07-26T21:54:36Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { filename += file.getName().substring(0, file.getName().lastIndexOf('.')); } catch (java.lang.Exception exc) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9795/buggy-version/src.Actions.DebugWithArguments.java", "BodyUseAPI": ["Actions.PsiJavaFile.getName()", "file.getName().lastIndexOf(char)", "file.getName().substring(int,file.getName().lastIndexOf('.'))", "Actions.PsiJavaFile.getName()"], "Fixed commit": "525621e2647b60f60ca31f703c3b8f859f57b9ff", "Url": "https://api.github.com/repos/chrispan68/Run-With-Arguments", "Date": "2018-07-26T21:54:36Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { show = file.getFileType().getName().equals(\"JAVA\"); } catch (java.lang.Exception exc) { e.getPresentation().setVisible(false); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9795/buggy-version/src.Actions.DebugWithArguments.java", "BodyUseAPI": ["file.getFileType().getName().equals(java.lang.String)", "file.getFileType().getName()", "Actions.PsiFile.getFileType()"], "Fixed commit": "525621e2647b60f60ca31f703c3b8f859f57b9ff", "Url": "https://api.github.com/repos/chrispan68/Run-With-Arguments", "Date": "2018-07-26T21:54:36Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.currentThread().sleep(2000); minesweeper.Game_Driver.mGame.dispose(); } catch (java.lang.InterruptedException ie) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/5432/buggy-version/minesweeper.Game_Driver.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)", "java.lang.Thread.currentThread()", "javax.swing.JFrame.dispose()"], "Fixed commit": "5760144b913978c7742ece91bc93c4978fc5ba72", "Url": "https://api.github.com/repos/connorpawar/Project_2_448", "Date": "2018-10-08T02:41:31Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String senderNumber = app.util.ExternalProperties.getAppConfig(\"sms.sender.number\"); twilioMessage = com.twilio.rest.api.v2010.account.Message.creator(new com.twilio.type.PhoneNumber(receiverMobNumber), new com.twilio.type.PhoneNumber(senderNumber), actualMessage).create(); } catch (com.twilio.exception.ApiException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/4943/buggy-version/src.main.java.app.service.thirdparty.TwilioSmsClient.java", "BodyUseAPI": ["com.twilio.rest.api.v2010.account.Message.creator(new com.twilio.type.PhoneNumber(receiverMobNumber), new com.twilio.type.PhoneNumber(senderNumber), actualMessage).create()", "app.util.ExternalProperties.getAppConfig(java.lang.String)", "com.twilio.rest.api.v2010.account.Message.creator(com.twilio.type.PhoneNumber,com.twilio.type.PhoneNumber,java.lang.String)"], "Fixed commit": "1af6dc7354d0921305c4610c15aa4025ed1a48e9", "Url": "https://api.github.com/repos/amolpol92/dlp-ps", "Date": "2018-09-03T15:51:19Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ivBatteryCharging.setImageResource(R.drawable.ic_low_battery); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/4309/buggy-version/app.src.main.java.com.quixom.apps.deviceinfo.fragments.BatteryFragment.java", "BodyUseAPI": ["android.widget.ImageView.setImageResource(R.drawable.ic_low_battery)"], "Fixed commit": "44d21a2ff06d0cd7866d947a8cde4ccc4b0a8810", "Url": "https://api.github.com/repos/Mehul450/DeviceInfo", "Date": "2018-10-11T04:53:32Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { int level = top.trumeet.common.override.ActivityManagerOverride.getPackageImportance(packageName, ((android.app.ActivityManager) (context.getSystemService(android.content.Context.ACTIVITY_SERVICE)))); me.pqpo.librarylog4a.Log4a.d(com.PATHomi.helper.impl.ActivityUsageStatsImpl.TAG, (\"Importance flag: \" + level)); return level == (ActivityManager.RunningAppProcessInfo.IMPORTANCE_FOREGROUND); } catch (java.lang.RuntimeException e) { android.widget.Toast.makeText(context, top.trumeet.common.R.string.error_usage_stats, Toast.LENGTH_LONG).show(); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1214/buggy-version/push.src.main.java.com.PATHomi.helper.impl.ActivityUsageStatsImpl.java", "BodyUseAPI": ["me.pqpo.librarylog4a.Log4a.d(java.lang.String,java.lang.String)", "top.trumeet.common.override.ActivityManagerOverride.getPackageImportance(java.lang.String,((android.app.ActivityManager) (context.getSystemService(android.content.Context.ACTIVITY_SERVICE))))", "android.content.Context.getSystemService(android.content.Context.ACTIVITY_SERVICE)"], "Fixed commit": "bc332ee4d44af291b9886e355559b1e153e9f487", "Url": "https://api.github.com/repos/Trumeet/MiPushFramework", "Date": "2018-07-16T13:40:28Z"},
{"Line": "=>2303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return driver.getRemoteWebDriver().getSessionId().toString(); } catch (java.lang.Exception e) { logger.log((\"WARNING: Failed to get AUT session ID! (maybe driver is not available?). Error: \" + (e.getMessage()))); return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/2143/buggy-version/eyes.selenium.java.src.main.java.com.applitools.eyes.selenium.Eyes.java", "BodyUseAPI": ["driver.getRemoteWebDriver().getSessionId().toString()", "com.applitools.eyes.selenium.wrappers.EyesWebDriver.getRemoteWebDriver()", "driver.getRemoteWebDriver().getSessionId()"], "Fixed commit": "e89f54ef2ab15179589b57d5bb9d5d81ecf270bc", "Url": "https://api.github.com/repos/applitools/eyes.sdk.java3", "Date": "2018-09-11T22:26:59Z"},
{"Line": "=>3630", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { br.com.carlosrafaelgn.fplay.playback.Player.notificationManager.notify(1, br.com.carlosrafaelgn.fplay.playback.Player.getNotification()); } catch (java.lang.Throwable ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/2512/buggy-version/src.br.com.carlosrafaelgn.fplay.playback.Player.java", "BodyUseAPI": ["android.app.NotificationManager.notify(int,android.app.Notification)", "br.com.carlosrafaelgn.fplay.playback.Player.getNotification()"], "Fixed commit": "764a739c58565354a79fdc563b7fef1ca0cda1ab", "Url": "https://api.github.com/repos/carlosrafaelgn/FPlayAndroid", "Date": "2018-07-04T20:55:50Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { result = buffer.getBytes(\"GBK\"); } catch (java.lang.Exception e) { result = new byte[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/7772/buggy-version/app.src.main.java.com.async.davidconsole.serial.command.PrintCommand.java", "BodyUseAPI": ["java.lang.String.getBytes(java.lang.String)"], "Fixed commit": "14b985ceeb6cef29b3aff47dee23d0e0e33e9031", "Url": "https://api.github.com/repos/deeplin/DavidConsole", "Date": "2018-01-22T03:39:27Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { longitude = java.lang.Float.valueOf(mLongitude.getText().toString()); } catch (java.lang.NumberFormatException exception) { mLongitude.setError(getString(R.string.error_1017)); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1322/buggy-version/app.src.main.java.de.p72b.mocklation.dialog.EditLocationItemDialog.java", "BodyUseAPI": ["java.lang.Float.valueOf(mLongitude.getText().toString())", "mLongitude.getText().toString()", "android.widget.EditText.getText()"], "Fixed commit": "627e7cca0607131de9d9ff48066df40dec97fb2a", "Url": "https://api.github.com/repos/P72B/Mocklation", "Date": "2018-01-20T12:32:01Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return delegate.extract(format, carrier); } catch (java.lang.NumberFormatException e) { org.stagemonitor.tracing.wrapper.SpanWrappingTracer.logger.error((\"error parsing span id, possible XSS attack: \" + (e.getMessage())), e); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3825/buggy-version/stagemonitor-tracing.src.main.java.org.stagemonitor.tracing.wrapper.SpanWrappingTracer.java", "BodyUseAPI": ["io.opentracing.Tracer.extract(io.opentracing.propagation.Format<C>,C)"], "Fixed commit": "168c8e5317b95a7efd1d04f76fe1b56963f601da", "Url": "https://api.github.com/repos/stagemonitor/stagemonitor", "Date": "2018-04-25T09:50:13Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { dalclassbagger.Baggui.profiles = getProfiles(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4290/buggy-version/src.dalclassbagger.Baggui.java", "BodyUseAPI": ["dalclassbagger.Baggui.getProfiles()"], "Fixed commit": "7463ac2c2c637cdbaf6cbfcf3d2cbcb8569c30c1", "Url": "https://api.github.com/repos/DetectiveBurb/DalClassBaggingTool", "Date": "2018-07-06T13:21:44Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.support.customtabs.CustomTabsIntent.Builder builder = new android.support.customtabs.CustomTabsIntent.Builder(); builder.setToolbarColor(android.support.v4.content.ContextCompat.getColor(_activity, R.color.primary)); android.support.customtabs.CustomTabsIntent customTabsIntent = builder.build(); customTabsIntent.launchUrl(_activity, android.net.Uri.parse(url)); } catch (java.lang.Exception e) { net.gsantner.markor.util.ContextUtils.get().openWebpageInExternalBrowser(url); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3988/buggy-version/app.src.main.java.net.gsantner.markor.util.MarkorWebViewClient.java", "BodyUseAPI": ["android.support.v4.content.ContextCompat.getColor(android.app.Activity,R.color.primary)", "android.net.Uri.parse(java.lang.String)", "CustomTabsIntent.Builder.setToolbarColor(android.support.v4.content.ContextCompat.getColor(_activity, R.color.primary))", "android.support.customtabs.CustomTabsIntent.launchUrl(android.app.Activity,android.net.Uri.parse(url))", "CustomTabsIntent.Builder.build()"], "Fixed commit": "cbcf27e1755367546796a062c7deed56473cbf69", "Url": "https://api.github.com/repos/gsantner/markor", "Date": "2018-10-04T11:07:43Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.System.loadLibrary(\"webrtcvadwrapper\"); } catch (java.lang.UnsatisfiedLinkError e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7496/buggy-version/src.main.java.org.jitsi.webrtcvadwrapper.WebRTCVad.java", "BodyUseAPI": ["java.lang.System.loadLibrary(java.lang.String)"], "Fixed commit": "fc1e5c81c936519791a5d90a5073de1eb800b2b7", "Url": "https://api.github.com/repos/nikvaessen/jitsi-webrtc-vad-wrapper", "Date": "2018-10-11T16:03:18Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { flushPage(entry.getKey()); } catch (java.io.IOException e) { throw new simpledb.DbException((\"can't flush page with pid: \" + (entry.getKey()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3621/buggy-version/src.main.java.simpledb.BufferPool.java", "BodyUseAPI": ["java.util.Map.Entry<simpledb.PageId, simpledb.Page>.getKey()", "simpledb.BufferPool.flushPage(entry.getKey())"], "Fixed commit": "1312285dedea3e133064b61695552e13c318c948", "Url": "https://api.github.com/repos/835919230/simple-db", "Date": "2018-02-26T12:40:18Z"},
{"Line": "=>571", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.bukkit.Effect effect = org.bukkit.Effect.valueOf(effectName); for (int i = 0; i < particles; i++) { player.getWorld().playEffect(player.getLocation(), effect, data, radius); } } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7121/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.UserManager.User.java", "BodyUseAPI": ["player.getWorld().playEffect(player.getLocation(),org.bukkit.Effect,int,int)", "org.bukkit.entity.Player.getWorld()", "org.bukkit.entity.Player.getLocation()", "org.bukkit.Effect.valueOf(java.lang.String)"], "Fixed commit": "4ea2225d761ec4f5023fdabcd4c3d9823007bb44", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2018-10-20T20:40:21Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { edu.ecnu.touchstone.run.RemoteShell.exec(configurations.getIps().get(i), \"root\", configurations.getRootPassword(), (\"sync; sync; sync; echo 3 > /proc/sys/vm/drop_caches \\n \" + \"echo 0 > /proc/sys/vm/drop_caches\")); } catch (java.lang.Exception e) { rootPasswdError = true; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3064/buggy-version/src.edu.ecnu.touchstone.run.Touchstone.java", "BodyUseAPI": ["edu.ecnu.touchstone.run.RemoteShell.exec(configurations.getIps().get(i),java.lang.String,configurations.getRootPassword(),java.lang.String)", "edu.ecnu.touchstone.run.Configurations.getRootPassword()", "edu.ecnu.touchstone.run.Configurations.getIps()", "configurations.getIps().get(int)"], "Fixed commit": "c2ae6c38c0bf7f456a1492c3babeee905701bee2", "Url": "https://api.github.com/repos/daseECNU/Touchstone", "Date": "2018-07-18T09:16:58Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { command.execute(); } catch (com.pollerexpress.models.CommandFailed e) { java.lang.System.out.println(\"temporary line to fix error\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/576/buggy-version/app.src.main.java.cs340.pollerexpress.PollerExpress.java", "BodyUseAPI": ["com.pollerexpress.models.Command.execute()"], "Fixed commit": "9b771a066304266091b461b0230005d9d8f979d3", "Url": "https://api.github.com/repos/JOTworks/pollerexpress", "Date": "2018-10-08T19:52:52Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { DetailsActivity.detailsActivity.finish(); } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/921/buggy-version/app.src.main.java.com.example.android.inventoryapp.EditorActivity.java", "BodyUseAPI": ["DetailsActivity.detailsActivity.finish()"], "Fixed commit": "885d53bea9037d1a1e01880fc67e30a1579fec13", "Url": "https://api.github.com/repos/lukim89/InventoryApp", "Date": "2018-08-20T13:47:36Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { pitch = event.sound.getPitch(); } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/8698/buggy-version/src.main.java.com.chattriggers.ctjs.minecraft.listeners.WorldListener.java", "BodyUseAPI": ["event.sound.getPitch()"], "Fixed commit": "ca3cae17959c3a2d468428aa233ef3d28cf07892", "Url": "https://api.github.com/repos/ChatTriggers/ct.js", "Date": "2018-08-12T18:49:54Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.yumu.hexie.model.promotion.coupon.Coupon coupon = couponService.addCouponFromSeed(couponArr[i], user); list.add(coupon); } catch (java.lang.Exception e) { com.yumu.hexie.web.user.UserController.log.error(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3262/buggy-version/hexie.src.main.java.com.yumu.hexie.web.user.UserController.java", "BodyUseAPI": ["com.yumu.hexie.service.user.CouponService.addCouponFromSeed(java.lang.String,com.yumu.hexie.model.user.User)", "java.util.List<com.yumu.hexie.model.promotion.coupon.Coupon>.add(com.yumu.hexie.model.promotion.coupon.Coupon)"], "Fixed commit": "6688c1df174a1ffb0a6b22f6656d831a6849f248", "Url": "https://api.github.com/repos/linknabor/chunhui", "Date": "2016-07-01T08:24:26Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.bumptech.glide.Glide.with(getBaseActivity()).load(viewModel.getUserProfile().getImageUrl()).diskCacheStrategy(DiskCacheStrategy.SOURCE).into(binding.ivUserProfile); } catch (java.lang.Exception e) { com.orhanobut.logger.Logger.e(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/5245/buggy-version/app.src.main.java.com.team.mamba.atlas.userInterface.dashBoard.profile.user_individual.UserProfileFragment.java", "BodyUseAPI": ["com.team.mamba.atlas.userInterface.dashBoard.profile.user_individual.UserProfileViewModel.getUserProfile()", "com.bumptech.glide.Glide.with(getBaseActivity()).load(viewModel.getUserProfile().getImageUrl()).diskCacheStrategy(DiskCacheStrategy.SOURCE)", "com.bumptech.glide.Glide.with(getBaseActivity()).load(viewModel.getUserProfile().getImageUrl()).diskCacheStrategy(DiskCacheStrategy.SOURCE).into(binding.ivUserProfile)", "viewModel.getUserProfile().getImageUrl()", "com.bumptech.glide.Glide.with(getBaseActivity())", "com.bumptech.glide.Glide.with(getBaseActivity()).load(viewModel.getUserProfile().getImageUrl())", "com.team.mamba.atlas.userInterface.dashBoard.profile.user_individual.UserProfileFragment.getBaseActivity()"], "Fixed commit": "f9903f2b075020b0662523154f38c2e42e5b682f", "Url": "https://api.github.com/repos/jacqueterrell/atlas", "Date": "2018-09-12T17:17:22Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.view.View view = inflater.inflate(R.layout.fragment_layout_home, container, false); init(); listView = ((android.widget.ListView) (view.findViewById(R.id.listViewHomeShare))); io.github.onursevket.instagramcloneui.Adaptor.ListViewAdaptor adaptor = new io.github.onursevket.instagramcloneui.Adaptor.ListViewAdaptor(getContext(), userShareList); listView.setAdapter(adaptor); return view; } catch (java.lang.Exception e) { android.util.Log.e(\"Test\", \"onCreateView\", e); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6548/buggy-version/app.src.main.java.io.github.onursevket.instagramcloneui.Fragment.FragmentHome.java", "BodyUseAPI": ["android.widget.ListView.setAdapter(io.github.onursevket.instagramcloneui.Adaptor.ListViewAdaptor)", "android.view.LayoutInflater.inflate(R.layout.fragment_layout_home,android.view.ViewGroup,boolean)", "io.github.onursevket.instagramcloneui.Fragment.FragmentHome.getContext()", "android.view.View.findViewById(R.id.listViewHomeShare)", "io.github.onursevket.instagramcloneui.Fragment.FragmentHome.init()"], "Fixed commit": "757a71045c6369bbc08a5355a497855d8b11401c", "Url": "https://api.github.com/repos/OnurSevket/Instagram-CloneApp", "Date": "2018-09-21T18:47:38Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { utf8Bytes = jsonResponse.getBytes(\"UTF8\"); return new java.lang.String(utf8Bytes, \"UTF8\"); } catch (java.io.UnsupportedEncodingException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/447/buggy-version/src.main.java.it.sella.QnaResponse.java", "BodyUseAPI": ["java.lang.String.getBytes(java.lang.String)"], "Fixed commit": "c791cb4fcf1fc8472acb9ac2801eab4eaae9cfef", "Url": "https://api.github.com/repos/udayanid/sella-chatbot", "Date": "2018-10-22T03:40:16Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { resourceManagerField = net.minecraft.client.Minecraft.class.getDeclaredField(\"field_110451_am\"); } catch (java.lang.NoSuchFieldException e) { resourceManagerField = net.minecraft.client.Minecraft.class.getDeclaredField(\"mcResourceManager\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3544/buggy-version/src.main.java.co.bugg.quickplay.client.render.PlayerGlyph.java", "BodyUseAPI": ["java.lang.Class.getDeclaredField(java.lang.String)"], "Fixed commit": "5b0efb069cb0774f867f5344ba0ab9c13fa9e4f3", "Url": "https://api.github.com/repos/robere2/Quickplay2.0", "Date": "2018-03-08T01:23:44Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return (((isSolved) || ((workingNodes.size()) == 1)) || (workingNodes.get(0).loc.equals(workingNodes.get(1).loc))) || (workingNodes.get(0).loc.getNeighbors(false, false, false, false, this.colorCode, f).contains(workingNodes.get(1).loc)); } catch (java.lang.Exception e) { int i = 0; return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/342/buggy-version/src.sample.Flow.java", "BodyUseAPI": ["java.util.LinkedList<sample.Node>.get(int)", "java.util.LinkedList<sample.Node>.get(int)", "java.util.LinkedList<sample.Node>.size()", "java.util.LinkedList<sample.Node>.get(int)", "workingNodes.get(0).loc.getNeighbors(false, false, false, false, this.colorCode, f).contains(workingNodes.get(1).loc)", "workingNodes.get(0).loc.getNeighbors(boolean,boolean,boolean,boolean,byte,sample.FlowBoard)", "java.util.LinkedList<sample.Node>.get(int)", "workingNodes.get(0).loc.equals(workingNodes.get(1).loc)"], "Fixed commit": "733449bf59c5375c49367b89280d71036a55503f", "Url": "https://api.github.com/repos/kierandavidmccormick/Flow-Solver", "Date": "2018-04-21T01:18:31Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { init(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/5427/buggy-version/app.src.main.java.com.android.anorthenrailway.activity.root.fragment.FragmentMore.java", "BodyUseAPI": ["com.android.anorthenrailway.activity.root.fragment.FragmentMore.init()"], "Fixed commit": "12f7c98f2d589bc9a74cd6659cb6809e00a18a7e", "Url": "https://api.github.com/repos/ottolewis8/nrail", "Date": "2018-09-12T14:32:30Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { while ((str = txtReader.readLine()) != null) txt.append((str + \"\\n\")); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4721/buggy-version/Checkers.src.checkers.Help.java", "BodyUseAPI": ["javax.swing.JTextArea.append(java.lang.String)", "java.io.BufferedReader.readLine()"], "Fixed commit": "573ad36790a4c783a343b854b2dc4e441d1be89a", "Url": "https://api.github.com/repos/newhandle/216Checkers", "Date": "2018-04-28T23:41:39Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { recipedata = gson.fromJson(jsonString, com.matthewcannefax.menuplanner.utils.ShareHelper.Recipes.class); } catch (com.google.gson.JsonSyntaxException e) { android.widget.Toast.makeText(context, \"Invalid File\", Toast.LENGTH_SHORT).show(); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4679/buggy-version/app.src.main.java.com.matthewcannefax.menuplanner.utils.ShareHelper.java", "BodyUseAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Fixed commit": "925a9009ee58467b2404dd411bb60d6bd26ee70c", "Url": "https://api.github.com/repos/MatthewCannefax/MenuPlanner", "Date": "2018-05-11T13:07:36Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String d = getDiagramBody(editor, selection); diagram = java.util.Optional.of(d); } catch (java.lang.Exception e) { org.moflon.core.ui.visualisation.EMoflonVisualiser.logger.error((e + (org.moflon.core.utilities.ExceptionUtil.displayExceptionAsString(e)))); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7401/buggy-version/org.moflon.core.ui.src.org.moflon.core.ui.visualisation.EMoflonVisualiser.java", "BodyUseAPI": ["org.moflon.core.ui.visualisation.EMoflonVisualiser.getDiagramBody(org.eclipse.ui.IEditorPart,org.eclipse.jface.viewers.ISelection)", "java.util.Optional.of(java.lang.String)"], "Fixed commit": "93dacb3e57d98628146276ed30448e130bc7792f", "Url": "https://api.github.com/repos/eMoflon/emoflon-core", "Date": "2018-03-19T10:38:21Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { newTask.setName(nameText.getText().toString()); newTask.setDescription(descText.getText().toString()); price = priceText.getText().toString().replaceAll(\"[.]\", \"\"); } catch (java.lang.IllegalArgumentException e) { android.support.design.widget.Snackbar errorMsg = android.support.design.widget.Snackbar.make(findViewById(R.id.mainConstraint), R.string.name_error, Snackbar.LENGTH_SHORT); end = false; price = \"0\"; errorMsg.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1142/buggy-version/app.src.main.java.com.c301t3.c301t3app.NewTaskActivity.java", "BodyUseAPI": ["com.c301t3.c301t3app.Task.setDescription(descText.getText().toString())", "android.widget.EditText.getText()", "descText.getText().toString()", "android.widget.EditText.getText()", "nameText.getText().toString()", "priceText.getText().toString().replaceAll(java.lang.String,java.lang.String)", "priceText.getText().toString()", "com.c301t3.c301t3app.Task.setName(nameText.getText().toString())", "android.widget.EditText.getText()"], "Fixed commit": "25ac674d1ff02aa9c59cbca7e2bbc435a03856be", "Url": "https://api.github.com/repos/CMPUT301W18T03/isItMayYet", "Date": "2018-03-19T08:38:51Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { repo.setId(((repoRepository.findWithMaxId().getId()) + 1)); } catch (java.lang.NullPointerException e) { repo.setId(1L); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3452/buggy-version/backend.mongo.src.main.java.org.vno.mongo.rest.RepoController.java", "BodyUseAPI": ["org.vno.mongo.domain.Repo.setId(((repoRepository.findWithMaxId().getId()) + 1))", "org.vno.mongo.repository.RepoRepository.findWithMaxId()", "repoRepository.findWithMaxId().getId()"], "Fixed commit": "2d03e23d69ab6a8a756b33736ebf6eb81c411a2e", "Url": "https://api.github.com/repos/ValeriyKr/vno", "Date": "2018-04-27T22:11:34Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { new model.GameDriver(numberOfPlayers).start(); } catch (exceptions.PlayerException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/356/buggy-version/src.controller.GameController.java", "BodyUseAPI": ["model.GameDriver.start()"], "Fixed commit": "47b368a5f1a8cc4acd72d7bf5b674d7cfb1b2212", "Url": "https://api.github.com/repos/hnalpha323/RiskGame20", "Date": "2018-10-18T16:51:49Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mainModel.setXFrom(java.lang.Integer.parseInt(((android.widget.EditText) (findViewById(R.id.xFrom))).getText().toString())); mainModel.setXTo(java.lang.Integer.parseInt(((android.widget.EditText) (findViewById(R.id.xTo))).getText().toString())); } catch (java.lang.Exception e) { throw new com.github.siggel.coordinatejoker.ParseException(getString(R.string.string_parse_integer_exception)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3809/buggy-version/app.src.main.java.com.github.siggel.coordinatejoker.MainActivity.java", "BodyUseAPI": ["((android.widget.EditText) (findViewById(R.id.xTo))).getText()", "((android.widget.EditText) (findViewById(R.id.xFrom))).getText().toString()", "com.github.siggel.coordinatejoker.MainActivity.findViewById(R.id.xTo)", "com.github.siggel.coordinatejoker.MainModel.setXFrom(int)", "com.github.siggel.coordinatejoker.MainActivity.findViewById(R.id.xFrom)", "java.lang.Integer.parseInt(((android.widget.EditText) (findViewById(R.id.xTo))).getText().toString())", "((android.widget.EditText) (findViewById(R.id.xTo))).getText().toString()", "java.lang.Integer.parseInt(((android.widget.EditText) (findViewById(R.id.xFrom))).getText().toString())", "((android.widget.EditText) (findViewById(R.id.xFrom))).getText()", "com.github.siggel.coordinatejoker.MainModel.setXTo(int)"], "Fixed commit": "aa608afc143b093b3b9a5dfbffefa079c9f7475e", "Url": "https://api.github.com/repos/siggel/coordinatejoker", "Date": "2018-05-04T21:41:16Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { fillModelFromGui(); } catch (java.lang.Exception e) { showWarning(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3809/buggy-version/app.src.main.java.com.github.siggel.coordinatejoker.MainActivity.java", "BodyUseAPI": ["com.github.siggel.coordinatejoker.MainActivity.fillModelFromGui()"], "Fixed commit": "aa608afc143b093b3b9a5dfbffefa079c9f7475e", "Url": "https://api.github.com/repos/siggel/coordinatejoker", "Date": "2018-05-04T21:41:16Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.reflect.Constructor<?> c = java.lang.Class.forName((prefix + className)).getConstructor(net.minecraft.server.MinecraftServer.class, net.minecraft.src.INetworkManager.class, net.minecraft.src.EntityPlayerMP.class); net.minecraft.src.CustomBTWAddonNetServerHandler nsh = ((net.minecraft.src.CustomBTWAddonNetServerHandler) (c.newInstance(aServer, aNetManager, aPlayer))); customHandlers.add(nsh); } catch (java.lang.Throwable e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6991/buggy-version/src.minecraft_server.net.minecraft.src.GenericBTWAddonNetServerHandler.java", "BodyUseAPI": ["java.lang.reflect.Constructor<?>.newInstance(net.minecraft.server.MinecraftServer,net.minecraft.src.INetworkManager,net.minecraft.src.EntityPlayerMP)", "java.lang.Class.forName(java.lang.String)", "java.lang.Class<?>.getConstructor(java.lang.Class,java.lang.Class,java.lang.Class)", "java.util.ArrayList<net.minecraft.src.CustomBTWAddonNetServerHandler>.add(net.minecraft.src.CustomBTWAddonNetServerHandler)"], "Fixed commit": "edea1a6560ad5f80138a8897c307018541b0f06e", "Url": "https://api.github.com/repos/jorgebonafe/btw-deco", "Date": "2018-05-06T17:25:49Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.reflect.Constructor<?> c = java.lang.Class.forName((prefix + className)).getConstructor(net.minecraft.server.MinecraftServer.class, net.minecraft.src.INetworkManager.class, net.minecraft.src.EntityPlayerMP.class); net.minecraft.src.CustomBTWAddonNetServerHandler nsh = ((net.minecraft.src.CustomBTWAddonNetServerHandler) (c.newInstance(aServer, aNetManager, aPlayer))); customHandlers.add(nsh); } catch (java.lang.Throwable e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6991/buggy-version/src.minecraft.net.minecraft.src.GenericBTWAddonNetServerHandler.java", "BodyUseAPI": ["java.lang.reflect.Constructor<?>.newInstance(net.minecraft.server.MinecraftServer,net.minecraft.src.INetworkManager,net.minecraft.src.EntityPlayerMP)", "java.lang.Class<?>.getConstructor(java.lang.Class,java.lang.Class,java.lang.Class)", "java.util.ArrayList<net.minecraft.src.CustomBTWAddonNetServerHandler>.add(net.minecraft.src.CustomBTWAddonNetServerHandler)", "java.lang.Class.forName(java.lang.String)"], "Fixed commit": "edea1a6560ad5f80138a8897c307018541b0f06e", "Url": "https://api.github.com/repos/jorgebonafe/btw-deco", "Date": "2018-05-06T17:25:49Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Class.forName(\"net.minecraft.server.dedicated.DedicatedServer\"); if (sender instanceof net.minecraft.server.dedicated.DedicatedServer) { return true; } } catch (java.lang.ClassNotFoundException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/5609/buggy-version/src.main.java.com.monkeyinabucket.forge.blink.command.BaseCommand.java", "BodyUseAPI": ["java.lang.Class.forName(java.lang.String)"], "Fixed commit": "72a3887b1dfd3c2aeb0a6c92e11b6e167df5ec63", "Url": "https://api.github.com/repos/Chekote/Blink", "Date": "2018-01-27T20:29:48Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { repository = sqlDataManager.load(); } catch (logic.LoadDataException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4724/buggy-version/src.view.MainMenu.java", "BodyUseAPI": ["logic.SqlDataManager.load()"], "Fixed commit": "ecbf7924542f8299ff13fb7bfcac08d6329e873f", "Url": "https://api.github.com/repos/qba97/PK-Projekt", "Date": "2018-05-31T16:10:24Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.io.File fileImageProfile = new java.io.File(dtoImageLogin.getPath()); android.net.Uri imageUri; if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.N)) { imageUri = android.support.v4.content.FileProvider.getUriForFile(activity, ((net.gshp.observatoriociudadano.BuildConfig.APPLICATION_ID) + \".provider\"), fileImageProfile); }else { imageUri = android.net.Uri.fromFile(fileImageProfile); } imgTBPerson.setImageURI(imageUri); } catch (java.lang.NullPointerException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4655/buggy-version/app.src.main.java.net.gshp.observatoriociudadano.model.ModelInfoPerson.java", "BodyUseAPI": ["android.support.v4.content.FileProvider.getUriForFile(android.app.Activity,((net.gshp.observatoriociudadano.BuildConfig.APPLICATION_ID) + \".provider\"),java.io.File)", "android.net.Uri.fromFile(java.io.File)", "net.gshp.observatoriociudadano.dto.DtoImageLogin.getPath()", "de.hdodenhof.circleimageview.CircleImageView.setImageURI(android.net.Uri)"], "Fixed commit": "84080e3465c0e1086c9f93fd2dddf2760228c517", "Url": "https://api.github.com/repos/antoniunix/ObservatorioCiudadano", "Date": "2018-02-17T01:16:36Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { eventService.deleteEventTimeSlotsByEventId(event.getEventId()); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4941/buggy-version/src.main.java.com.cg.events.controller.EventController.java", "BodyUseAPI": ["com.cg.service.EventService.deleteEventTimeSlotsByEventId(event.getEventId())", "com.cg.events.bo.Event.getEventId()"], "Fixed commit": "a02aef397ab7ca5d6e61991d080581fb480c3d40", "Url": "https://api.github.com/repos/TechieSouls/gooday", "Date": "2018-07-04T17:14:42Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { out.close(); } catch (java.io.IOException ioex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4896/buggy-version/app.src.main.java.com.example.andrea.lab11.MyUser.java", "BodyUseAPI": ["java.io.OutputStream.close()"], "Fixed commit": "7e1dbf06ee56809a536df7b6477c059ecdc368cc", "Url": "https://api.github.com/repos/filippocupolo/MADProject", "Date": "2018-04-05T15:17:58Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.google.android.gms.security.ProviderInstaller.installIfNeeded(getApplicationContext()); } catch (java.lang.Exception e) { timber.log.Timber.e(e, \"Google Play ProviderInstaller exception\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/8612/buggy-version/app.src.main.java.me.devsaki.hentoid.HentoidApp.java", "BodyUseAPI": ["com.google.android.gms.security.ProviderInstaller.installIfNeeded(getApplicationContext())", "me.devsaki.hentoid.HentoidApp.getApplicationContext()"], "Fixed commit": "2e9d5c8724e99091074ec7d0f31aaea93a71a724", "Url": "https://api.github.com/repos/RobbWatershed/Hentoid", "Date": "2018-09-30T08:35:46Z"},
{"Line": "=>654", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { deelnemersModel.wis(); } catch (java.lang.Exception ex) { nl.detoren.ijsco.ui.Mainscreen.logger.log(java.util.logging.Level.INFO, ((\"DeelnemersModel kan niet gewist worden : \" + (ex.getMessage())) + \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/2328/buggy-version/IJSCO_app.src.nl.detoren.ijsco.ui.Mainscreen.java", "BodyUseAPI": ["nl.detoren.ijsco.ui.model.DeelnemersModel.wis()"], "Fixed commit": "fcf2f29b2ce12db3be1136b0feb386843f8ae771", "Url": "https://api.github.com/repos/lmeulen/IJSCO_UI", "Date": "2018-10-07T09:07:28Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { o = s3service.putObject(getBucketName(), so); } catch (java.lang.Exception e) { allobjs.remove(fi.getHash256().toLowerCase()); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6014/buggy-version/photoweb.src.main.java.com.backend.sync.s3.AbstractSyncS3Service.java", "BodyUseAPI": ["com.backend.sync.s3.AbstractSyncS3Service.getBucketName()", "org.jets3t.service.S3Service.putObject(java.lang.String,org.jets3t.service.model.S3Object)"], "Fixed commit": "21d68480e1566198f6223d2ae5a54009493238b5", "Url": "https://api.github.com/repos/shentar/jAlbum", "Date": "2018-05-30T13:29:32Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { myBitmap = android.graphics.BitmapFactory.decodeStream(input); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/8911/buggy-version/dmaudiostreamer.src.main.java.dm.audiostreamer.AudioStreamingService.java", "BodyUseAPI": ["android.graphics.BitmapFactory.decodeStream(java.io.InputStream)"], "Fixed commit": "43f219870d4754d08ce2f08315f44e44ffd70683", "Url": "https://api.github.com/repos/sachinvarma/DMAudioStreamer", "Date": "2018-09-22T04:36:02Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (!(file.getAbsoluteFile().createNewFile())) { if (!(file.getAbsoluteFile().canWrite())) return respondError(\"Cannot write to specified file\", 6); } fileController = java.nio.channels.AsynchronousFileChannel.open(file.toPath(), java.nio.file.StandardOpenOption.WRITE); java.nio.channels.FileLock lock; dataBuffer = java.nio.ByteBuffer.allocate(512); dataBuffer.putShort(((short) (3))); int block = 0; byte[] data = new byte[516]; ++block; int rc = 512; byte[] ack = new byte[4]; ack[0] = ((byte) (0)); ack[1] = ((byte) (4)); ack[2] = ((byte) (0)); ack[3] = ((byte) (0)); ACKPacket = new java.net.DatagramPacket(ack, 4, clientRequest.getSocketAddress()); sendRecieveSocket.send(ACKPacket); while (rc == 512) { dataPacket = new java.net.DatagramPacket(data, 516); sendRecieveSocket.receive(dataPacket); dataBuffer.allocate(512); dataBuffer.put(java.util.Arrays.copyOfRange(data, 4, dataPacket.getLength())); block = (data[2]) << 8; block += data[3]; ack[2] = data[2]; ack[3] = data[3]; while (true) { try { lock = fileController.lock().get(); break; } catch (java.nio.channels.NonWritableChannelException e) { return respondError(\"Cannot read from file\", 1); } catch (java.lang.IllegalArgumentException e) { printMessage(e.getCause().toString()); return respondError(\"Illegal Argument\", 5); } catch (java.lang.Exception e) { printMessage(e.getCause().toString()); e.printStackTrace(); } } fileController.write(dataBuffer, (block * 512)).get(); lock.release(); try { sendRecieveSocket.send(ACKPacket); } catch (java.io.IOException e) { printMessage(\"IOException while trying to send data packet\"); e.printStackTrace(); } } fileController.close(); return 2; } catch (java.io.IOException | java.lang.InterruptedException | java.util.concurrent.ExecutionException e) { printMessage(e.getCause().toString()); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9478/buggy-version/iteration1.src.Main.ClientConnectionThread.java", "BodyUseAPI": ["Main.ClientConnectionThread.printMessage(java.lang.String)", "java.util.concurrent.Future<java.nio.channels.FileLock>.get()", "java.io.File.getAbsoluteFile()", "java.nio.channels.AsynchronousFileChannel.open(java.nio.file.Path,java.nio.file.StandardOpenOption)", "java.net.DatagramSocket.send(java.net.DatagramPacket)", "java.net.DatagramPacket.getLength()", "java.lang.Exception.printStackTrace()", "java.nio.channels.AsynchronousFileChannel.write(java.nio.ByteBuffer,int)", "Main.ClientConnectionThread.printMessage(java.lang.String)", "Main.ClientConnectionThread.printMessage(java.lang.String)", "java.net.DatagramPacket.getSocketAddress()", "java.nio.channels.AsynchronousFileChannel.close()", "java.nio.channels.FileLock.release()", "Main.ClientConnectionThread.respondError(java.lang.String,int)", "java.net.DatagramSocket.receive(java.net.DatagramPacket)", "java.nio.channels.AsynchronousFileChannel.lock()", "java.lang.Throwable.toString()", "java.io.File.toPath()", "java.nio.ByteBuffer.allocate(int)", "java.nio.ByteBuffer.put(byte[])", "java.io.File.getAbsoluteFile()", "java.io.IOException.printStackTrace()", "java.lang.Throwable.toString()", "java.nio.ByteBuffer.allocate(int)", "java.nio.ByteBuffer.putShort(int)", "java.io.File.canWrite()", "java.lang.IllegalArgumentException.getCause()", "java.net.DatagramSocket.send(java.net.DatagramPacket)", "Main.ClientConnectionThread.respondError(java.lang.String,int)", "java.io.File.createNewFile()", "java.util.Arrays.copyOfRange(byte[],int,int)", "java.lang.Exception.getCause()", "java.util.concurrent.Future<java.lang.Integer>.get()", "Main.ClientConnectionThread.respondError(java.lang.String,int)"], "Fixed commit": "534d91bbffb194df26d3cfea9de5494539fa4f8c", "Url": "https://api.github.com/repos/hemfic/SYSC3303", "Date": "2018-02-06T18:30:37Z"},
{"Line": "=>769", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { s = com.sonicle.commons.MailUtils.getText(m); } catch (java.lang.Exception e) { java.lang.System.out.println(e); s = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6843/buggy-version/src.main.java.com.sonicle.commons.MailUtils.java", "BodyUseAPI": ["com.sonicle.commons.MailUtils.getText(com.sun.mail.imap.IMAPMessage)"], "Fixed commit": "890c40d9606c85972f54a17981c5a8119fb7aa52", "Url": "https://api.github.com/repos/sonicle-webtop/sonicle-commons", "Date": "2018-03-26T16:01:47Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { job.setNumReduceTasks(1); org.apache.hadoop.mapreduce.lib.output.FileOutputFormat.setOutputPath(job, outputDir); job.setInputFormatClass(org.apache.hadoop.mapreduce.lib.input.SequenceFileInputFormat.class); job.setOutputFormatClass(org.apache.hadoop.mapreduce.lib.output.SequenceFileOutputFormat.class); job.setOutputKeyClass(au.edu.rmit.bdp.model.Centroid.class); job.setOutputValueClass(au.edu.rmit.bdp.model.DataPoint.class); job.waitForCompletion(true); long counter = job.getCounters().findCounter(KmeansReducing.Counter.CONVERGED).getValue(); iteration++; while (counter > 0) { conf = new org.apache.hadoop.conf.Configuration(); conf.set(\"centroid.path\", centroidDataPath.toString()); conf.set(\"num.iteration\", (iteration + \"\")); job = org.apache.hadoop.mapreduce.Job.getInstance(conf, (\"KMeans App \" + iteration)); job.setMapperClass(au.edu.rmit.bdp.ClusteringIMC.KmeansMapping.class); job.setReducerClass(au.edu.rmit.bdp.ClusteringIMC.KmeansReducing.class); job.setJarByClass(au.edu.rmit.bdp.ClusteringIMC.KmeansMapping.class); pointDataPath = new org.apache.hadoop.fs.Path(((((args[1]) + \"/clustering/depth_\") + (iteration - 1)) + \"/\")); outputDir = new org.apache.hadoop.fs.Path((((args[1]) + \"/clustering/depth_\") + iteration)); org.apache.hadoop.mapreduce.lib.input.FileInputFormat.addInputPath(job, pointDataPath); if (fs.exists(outputDir)) fs.delete(outputDir, true); org.apache.hadoop.mapreduce.lib.output.FileOutputFormat.setOutputPath(job, outputDir); job.setInputFormatClass(org.apache.hadoop.mapreduce.lib.input.SequenceFileInputFormat.class); job.setOutputFormatClass(org.apache.hadoop.mapreduce.lib.output.SequenceFileOutputFormat.class); job.setOutputKeyClass(au.edu.rmit.bdp.model.Centroid.class); job.setOutputValueClass(au.edu.rmit.bdp.model.DataPoint.class); job.setNumReduceTasks(1); job.waitForCompletion(true); iteration++; counter = job.getCounters().findCounter(KmeansReducing.Counter.CONVERGED).getValue(); } org.apache.hadoop.fs.Path result = new org.apache.hadoop.fs.Path(((((args[1]) + \"/clustering/depth_\") + (iteration - 1)) + \"/\")); org.apache.hadoop.fs.FileStatus[] stati = fs.listStatus(result); for (org.apache.hadoop.fs.FileStatus status : stati) { if (!(status.isDirectory())) { org.apache.hadoop.fs.Path path = status.getPath(); if (!(path.getName().equals(\"_SUCCESS\"))) { au.edu.rmit.bdp.ClusteringIMC.App.LOG.info((\"FOUND \" + (path.toString()))); org.apache.hadoop.io.SequenceFile.Reader.Option opPath = SequenceFile.Reader.file(path); try (org.apache.hadoop.io.SequenceFile.Reader reader = new org.apache.hadoop.io.SequenceFile.Reader(conf, opPath)) { au.edu.rmit.bdp.model.Centroid key = new au.edu.rmit.bdp.model.Centroid(); au.edu.rmit.bdp.model.DataPoint v = new au.edu.rmit.bdp.model.DataPoint(); while (reader.next(key, v)) { au.edu.rmit.bdp.ClusteringIMC.App.LOG.info(((key + \" / \") + v)); } } } } } } catch (java.lang.Exception e) { au.edu.rmit.bdp.ClusteringIMC.App.printLongerTrace(e); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5451/buggy-version/src.main.java.au.edu.rmit.bdp.ClusteringIMC.App.java", "BodyUseAPI": ["org.apache.hadoop.mapreduce.Job.setOutputFormatClass(java.lang.Class)", "path.getName().equals(java.lang.String)", "org.apache.hadoop.mapreduce.Job.setInputFormatClass(java.lang.Class)", "org.apache.hadoop.mapreduce.Job.waitForCompletion(boolean)", "org.apache.hadoop.fs.FileStatus.isDirectory()", "SequenceFile.Reader.file(org.apache.hadoop.fs.Path)", "org.apache.hadoop.mapreduce.Job.setJarByClass(java.lang.Class)", "java.io.Reader.next(au.edu.rmit.bdp.model.Centroid,au.edu.rmit.bdp.model.DataPoint)", "org.apache.hadoop.fs.Path.toString()", "job.getCounters().findCounter(KmeansReducing.Counter.CONVERGED)", "org.apache.hadoop.mapreduce.Job.getCounters()", "org.apache.hadoop.mapreduce.Job.setOutputValueClass(java.lang.Class)", "org.apache.hadoop.mapreduce.Job.setReducerClass(java.lang.Class)", "org.apache.hadoop.mapreduce.lib.input.FileInputFormat.addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)", "org.apache.hadoop.conf.Configuration.set(java.lang.String,centroidDataPath.toString())", "org.apache.hadoop.mapreduce.Job.setInputFormatClass(java.lang.Class)", "org.apache.hadoop.mapreduce.Job.getInstance(org.apache.hadoop.conf.Configuration,java.lang.String)", "org.apache.hadoop.fs.Path.toString()", "job.getCounters().findCounter(KmeansReducing.Counter.CONVERGED).getValue()", "org.apache.hadoop.fs.FileSystem.delete(org.apache.hadoop.fs.Path,boolean)", "org.apache.hadoop.mapreduce.Job.setOutputKeyClass(java.lang.Class)", "org.apache.hadoop.mapreduce.lib.output.FileOutputFormat.setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)", "org.apache.hadoop.mapreduce.lib.output.FileOutputFormat.setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)", "org.apache.hadoop.mapreduce.Job.waitForCompletion(boolean)", "org.apache.hadoop.conf.Configuration.set(java.lang.String,java.lang.String)", "org.apache.commons.logging.Log.info(((key + \" / \") + v))", "job.getCounters().findCounter(KmeansReducing.Counter.CONVERGED)", "org.apache.hadoop.mapreduce.Job.getCounters()", "org.apache.hadoop.fs.Path.getName()", "org.apache.hadoop.mapreduce.Job.setNumReduceTasks(int)", "org.apache.hadoop.mapreduce.Job.setOutputFormatClass(java.lang.Class)", "org.apache.commons.logging.Log.info((\"FOUND \" + (path.toString())))", "org.apache.hadoop.mapreduce.Job.setOutputValueClass(java.lang.Class)", "org.apache.hadoop.mapreduce.Job.setOutputKeyClass(java.lang.Class)", "org.apache.hadoop.fs.FileSystem.listStatus(org.apache.hadoop.fs.Path)", "org.apache.hadoop.fs.FileStatus.getPath()", "job.getCounters().findCounter(KmeansReducing.Counter.CONVERGED).getValue()", "org.apache.hadoop.fs.FileSystem.exists(org.apache.hadoop.fs.Path)", "org.apache.hadoop.mapreduce.Job.setMapperClass(java.lang.Class)", "org.apache.hadoop.mapreduce.Job.setNumReduceTasks(int)"], "Fixed commit": "dbcdbc05c05b78029d3323d44d6a63e03912c727", "Url": "https://api.github.com/repos/robertwt7/BDPKmeans", "Date": "2018-10-08T11:10:28Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { de.cketti.library.changelog.ChangeLog cl = new de.cketti.library.changelog.ChangeLog(this); if (cl.isFirstRun()) { cl.getLogDialog().show(); } } catch (java.lang.Exception ex) { android.widget.Toast.makeText(this, \"Failed to load changelog\", Toast.LENGTH_LONG).show(); com.labs.dm.auto_tethering.MyLog.e(\"ChangeLog\", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3782/buggy-version/auto-tethering-app.src.main.java.com.labs.dm.auto_tethering.activity.MainActivity.java", "BodyUseAPI": ["de.cketti.library.changelog.ChangeLog.getLogDialog()", "de.cketti.library.changelog.ChangeLog.isFirstRun()", "cl.getLogDialog().show()"], "Fixed commit": "f08aa09508fec7653e2a9d99b31387dcc4cacf04", "Url": "https://api.github.com/repos/danielmroczka/auto-tethering", "Date": "2018-10-28T06:24:55Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { br.com.moip.mockkid.model.Response matchedResponse = responseMatcher.getResponse(matchedConfig, request); return responseEntityFactory.fromResponse(matchedResponse); } catch (java.lang.IllegalStateException ise) { return org.springframework.http.ResponseEntity.status(HttpStatus.BAD_REQUEST).body(ise.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7548/buggy-version/src.main.java.br.com.moip.mockkid.facade.MockKidFacade.java", "BodyUseAPI": ["br.com.moip.mockkid.service.ResponseMatcher.getResponse(br.com.moip.mockkid.model.Configuration,br.com.moip.mockkid.model.MockkidRequest)", "br.com.moip.mockkid.service.ResponseEntityFactory.fromResponse(br.com.moip.mockkid.model.Response)"], "Fixed commit": "f57cafbfdabd19e8924de1e60b8979cee9f26ffc", "Url": "https://api.github.com/repos/wirecardBrasil/mockkid", "Date": "2018-01-15T17:49:44Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { tripList = com.remo.material.bluetoothprinter.model.Trip.listAll(com.remo.material.bluetoothprinter.model.Trip.class); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/1022/buggy-version/app.src.main.java.com.remo.material.bluetoothprinter.activity.CollectionReportActivity.java", "BodyUseAPI": ["com.remo.material.bluetoothprinter.model.Trip.listAll(java.lang.Class)"], "Fixed commit": "13dd97d436e6551ffbe848e31cce519dd5adfdfc", "Url": "https://api.github.com/repos/remohanock/BT_Printer", "Date": "2018-09-25T15:50:33Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return un.unifies(jason.stdlib.add_nested_source.addAnnotToList(args[0], args[1]), args[2]); } catch (java.lang.Exception e) { throw new jason.JasonException((((\"Error adding nest source '\" + (args[1])) + \"' to \") + (args[0])), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/1533/buggy-version/src.main.java.jason.stdlib.add_nested_source.java", "BodyUseAPI": ["jason.asSemantics.Unifier.unifies(jason.asSyntax.Term,args[2])", "jason.stdlib.add_nested_source.addAnnotToList(args[0],args[1])"], "Fixed commit": "5e4eeae9f59b11a78017028e933ad9268f4b31ca", "Url": "https://api.github.com/repos/agentspeakers/jason-er", "Date": "2018-04-24T18:16:00Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (java.io.File file : files.listFiles()) { if (file.getName().endsWith(\".jar\")) { dk.sdu.projectframeworklauncher.BundleObj bundleobj = new dk.sdu.projectframeworklauncher.BundleObj(file, bndlCtxt); obs.add(bundleobj); } } } catch (java.lang.Exception ex) { java.lang.System.out.println(ex.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/1626/buggy-version/src.main.java.dk.sdu.projectframeworklauncher.FXMLController.java", "BodyUseAPI": ["javafx.collections.ObservableList<dk.sdu.projectframeworklauncher.BundleObj>.add(dk.sdu.projectframeworklauncher.BundleObj)", "java.io.File.getName()", "java.io.File.listFiles()", "java.lang.String.endsWith(java.lang.String)"], "Fixed commit": "a21538ba6b9fbd263b28605da8d3add1792a23af", "Url": "https://api.github.com/repos/Zebraged/4semesterprojject", "Date": "2018-03-19T12:45:45Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { packet eot_ack = packet.createEOT(received_packet.getSeqNum()); } catch (java.lang.Exception e) { java.lang.System.err.println(\"Receiver_Class: cannot make EOT package\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/4844/buggy-version/src.Receiver_Class.java", "BodyUseAPI": ["packet.getSeqNum()", "Receiver_Class.createEOT(received_packet.getSeqNum())"], "Fixed commit": "495cbb974c9232e8d0aa7e2d0dbb338249769345", "Url": "https://api.github.com/repos/KnightArthurRen/CS456A2Receiver", "Date": "2018-03-13T19:41:01Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { builder = factory.newDocumentBuilder(); } catch (javax.xml.parsers.ParserConfigurationException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5446/buggy-version/XMLParser.java", "BodyUseAPI": ["javax.xml.parsers.DocumentBuilderFactory.newDocumentBuilder()"], "Fixed commit": "0114793651d91d2900b522e9b1341db3e246affb", "Url": "https://api.github.com/repos/CodecoolKRK20173/expert-system-razdwatrzy-1", "Date": "2018-04-30T18:42:42Z"},
{"Line": "=>1363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { type = obj.getString(\"type\"); } catch (net.sf.json.JSONException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/8514/buggy-version/src.com.ppm.integration.agilesdk.connector.octane.client.ClientPublicAPI.java", "BodyUseAPI": ["net.sf.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "2d79cd25b4ec85e34462919219cff22c3826aa0f", "Url": "https://api.github.com/repos/MicroFocus/ppm-octane-connector", "Date": "2018-04-25T08:34:56Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (ChessBoard.colorOfSquare(i, j).equals(color)) { Computer.piecesAI.add(ChessBoard.getPiece(i, j)); } } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/719/buggy-version/Working.Computer.java", "BodyUseAPI": ["java.util.ArrayList<ChessPiece>.add(ChessBoard.getPiece(i, j))", "ChessBoard.colorOfSquare(int,int)", "ChessBoard.colorOfSquare(i, j).equals(java.lang.String)", "ChessBoard.getPiece(int,int)"], "Fixed commit": "74a38d2f539c771c9ce856df9fd7048af450f6ea", "Url": "https://api.github.com/repos/mhowlader/Brogrammers", "Date": "2018-01-17T10:05:22Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { obj1 = extract.find(query); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7063/buggy-version/src.main.java.Main1.java", "BodyUseAPI": ["goal_1.ExtractWords.find(java.lang.String)"], "Fixed commit": "dee8b36b78b63361264e7fe799c6d2affb48a560", "Url": "https://api.github.com/repos/dineshv1234567/DatabaseEngine", "Date": "2018-02-23T00:00:49Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { exe.exequery(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7063/buggy-version/src.main.java.Main1.java", "BodyUseAPI": ["goal_5.Execute.exequery()"], "Fixed commit": "dee8b36b78b63361264e7fe799c6d2affb48a560", "Url": "https://api.github.com/repos/dineshv1234567/DatabaseEngine", "Date": "2018-02-23T00:00:49Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { Arr = querySplit.split1(query); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7063/buggy-version/src.main.java.Main1.java", "BodyUseAPI": ["goal_1.QuerySplit.split1(java.lang.String)"], "Fixed commit": "dee8b36b78b63361264e7fe799c6d2affb48a560", "Url": "https://api.github.com/repos/dineshv1234567/DatabaseEngine", "Date": "2018-02-23T00:00:49Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { map = mp.FileRead(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7063/buggy-version/src.main.java.Main1.java", "BodyUseAPI": ["goal_3.MakeMap.FileRead()"], "Fixed commit": "dee8b36b78b63361264e7fe799c6d2affb48a560", "Url": "https://api.github.com/repos/dineshv1234567/DatabaseEngine", "Date": "2018-02-23T00:00:49Z"},
{"Line": "=>606", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { temperature = ((micdoodle8.mods.galacticraft.api.prefab.world.gen.WorldProviderSpace) (temp)).getThermalLevelModifier(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/4991/buggy-version/src.main.java.com.mjr.extraplanets.client.gui.screen.CustomCelestialSelection.java", "BodyUseAPI": ["net.minecraft.world.WorldProvider.getThermalLevelModifier()"], "Fixed commit": "104012811aafd05683130a92fa41884d898336fc", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-01-04T19:40:07Z"},
{"Line": "=>479", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.bukkit.inventory.ItemStack item = reward.getItemStack(com.Ben12345rocks.AdvancedCore.UserManager.UserManager.getInstance().getUser(player), name); lore.add((((((item.getType().toString()) + \":\") + (item.getData().getData())) + \" \") + (item.getAmount()))); } catch (java.lang.Exception e) { lore.add((\"&cInvalid item \" + name)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7266/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Commands.GUI.RewardEditGUI.java", "BodyUseAPI": ["org.bukkit.inventory.ItemStack.getData()", "com.Ben12345rocks.AdvancedCore.UserManager.UserManager.getInstance().getUser(org.bukkit.entity.Player)", "com.Ben12345rocks.AdvancedCore.Rewards.Reward.getItemStack(com.Ben12345rocks.AdvancedCore.UserManager.UserManager.getInstance().getUser(player),java.lang.String)", "org.bukkit.inventory.ItemStack.getType()", "item.getData().getData()", "item.getType().toString()", "com.Ben12345rocks.AdvancedCore.UserManager.UserManager.getInstance()", "org.bukkit.inventory.ItemStack.getAmount()", "java.util.ArrayList<java.lang.String>.add((((((item.getType().toString()) + \":\") + (item.getData().getData())) + \" \") + (item.getAmount())))"], "Fixed commit": "6a3cfce93de84231b59949bbe70a0d0eceb75856", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2018-09-16T00:26:24Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((phoneBook.get(name)) == phone) { java.lang.System.out.println(\"Record already exists\"); return; } } catch (java.lang.Exception ex) { java.lang.System.out.println(\"No duplicate record\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/4623/buggy-version/PA07.PhoneBook.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"], "Fixed commit": "e1ca0e1001658018afeeed7bab8d2b0501469c6d", "Url": "https://api.github.com/repos/xumr0x/COSI12B", "Date": "2018-04-23T02:56:18Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { reader.close(); } catch (java.lang.Exception e) { data.RTAIO.LOG.error(\"Unable to close reader\"); data.RTAIO.LOG.debug(\"\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5065/buggy-version/src.data.RTAIO.java", "BodyUseAPI": ["java.io.BufferedReader.close()"], "Fixed commit": "7fe050c0e85c831a7208eae447afed7be595dc07", "Url": "https://api.github.com/repos/AdminOfThis/Frequent", "Date": "2018-07-04T19:15:07Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.apache.servicecomb.foundation.vertx.metrics.DefaultHttpClientMetrics clientMetrics = ((org.apache.servicecomb.foundation.vertx.metrics.DefaultHttpClientMetrics) (((io.vertx.core.http.impl.HttpClientImpl) (client)).getMetrics())); org.apache.servicecomb.foundation.vertx.metrics.metric.DefaultClientEndpointMetric clientEndpointMetric = clientMetrics.clientEndpointMetricManager.getClientEndpointMetricMap().get(remoteAddress); socketMetric.setEndpointMetric(clientEndpointMetric); } catch (java.lang.Exception e) { org.apache.servicecomb.foundation.vertx.metrics.DefaultHttpClientMetrics.LOGGER.warn(\"if you use http2, there may cause a null pointer exception. {}/{}\", remoteAddress, remoteName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6779/buggy-version/foundations.foundation-vertx.src.main.java.org.apache.servicecomb.foundation.vertx.metrics.DefaultHttpClientMetrics.java", "BodyUseAPI": ["org.apache.servicecomb.foundation.vertx.metrics.metric.DefaultHttpSocketMetric.setEndpointMetric(org.apache.servicecomb.foundation.vertx.metrics.metric.DefaultClientEndpointMetric)", "io.vertx.core.http.HttpClient.getMetrics()", "org.apache.servicecomb.foundation.vertx.metrics.metric.DefaultClientEndpointMetricManager.getClientEndpointMetricMap()", "clientMetrics.clientEndpointMetricManager.getClientEndpointMetricMap().get(io.vertx.core.net.SocketAddress)"], "Fixed commit": "ac75fce6cd9aa7fc46281fd7cf7a4488f8c577f0", "Url": "https://api.github.com/repos/weichao666/incubator-servicecomb-java-chassis", "Date": "2018-10-10T09:39:56Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { while (iter.hasNext()) { org.projectislands.game.village.Building b = iter.next(); g.drawImage(Building.building_images[b.getBuildingID()], ((b.getPositionX()) - (game_ref.getGameCamera().getxOffset())), ((b.getPositionY()) - (game_ref.getGameCamera().getyOffset())), TileSet.TILEWIDTH, TileSet.TILEHEIGHT, null); } } catch (java.util.ConcurrentModificationException cme) { cme.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6242/buggy-version/src.org.projectislands.game.village.Village.java", "BodyUseAPI": ["java.util.Iterator<org.projectislands.game.village.Building>.hasNext()", "game_ref.getGameCamera().getxOffset()", "game_ref.getGameCamera().getyOffset()", "org.projectislands.game.village.Building.getBuildingID()", "org.projectislands.game.village.Building.getPositionX()", "org.projectislands.game.village.Building.getPositionY()", "org.projectislands.game.Game.getGameCamera()", "java.util.Iterator<org.projectislands.game.village.Building>.next()", "org.projectislands.game.Game.getGameCamera()", "java.awt.Graphics.drawImage(Building.building_images[b.getBuildingID()],((b.getPositionX()) - (game_ref.getGameCamera().getxOffset())),((b.getPositionY()) - (game_ref.getGameCamera().getyOffset())),TileSet.TILEWIDTH,TileSet.TILEHEIGHT,<nulltype>)"], "Fixed commit": "c0cd6912589382e0fd77b80d0447f3364b341c3b", "Url": "https://api.github.com/repos/Jumagoro/Project-Islands", "Date": "2018-08-30T21:41:37Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return xfy.fakeview.library.text.utils.MeasureTextUtils.nativeMeasureText(flag, left, right, widths); } catch (java.lang.Throwable t) { xfy.fakeview.library.text.utils.MeasureTextUtils.libraryLoaded = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7073/buggy-version/library.src.main.java.xfy.fakeview.library.text.utils.MeasureTextUtils.java", "BodyUseAPI": ["xfy.fakeview.library.text.utils.MeasureTextUtils.nativeMeasureText(long,int,int,float[])"], "Fixed commit": "658a317683ef488bf9a055068c8f95c9a4b2c4f6", "Url": "https://api.github.com/repos/fangyuxiong/FakeView", "Date": "2018-04-17T07:40:56Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.ineedwhite.diancan.dao.domain.OrderDo orderDo = orderDao.selectOrdByOrdIdAndSts(orderId, OrderStatus.UM.getOrderStatus()); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7042/buggy-version/diancan-biz.src.main.java.com.ineedwhite.diancan.biz.impl.OrderServiceImpl.java", "BodyUseAPI": ["com.ineedwhite.diancan.dao.dao.OrderDao.selectOrdByOrdIdAndSts(java.lang.String,OrderStatus.UM.getOrderStatus())", "OrderStatus.UM.getOrderStatus()"], "Fixed commit": "42706d42a076078e760c8839cb5fe13f88967916", "Url": "https://api.github.com/repos/Ruan-Xin/diancan", "Date": "2018-03-15T02:36:18Z"},
{"Line": "=>1642", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return configuration.getSchemaMediator().copyOrUpdate(this, object, update, cache, flags); } catch (java.lang.IllegalStateException e) { if (e.getMessage().startsWith(\"Attempting to create an object of type\")) { throw new io.realm.exceptions.RealmPrimaryKeyConstraintException(e.getMessage()); }else { throw e; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5260/buggy-version/realm.realm-library.src.main.java.io.realm.Realm.java", "BodyUseAPI": ["configuration.getSchemaMediator().copyOrUpdate(io.realm.Realm,E,boolean,java.util.Map<io.realm.RealmModel, io.realm.internal.RealmObjectProxy>,java.util.Set<io.realm.ImportFlag>)", "io.realm.Realm.getSchemaMediator()"], "Fixed commit": "5b7d40086458cfe04573cf4a00861fc6cdb3f5f4", "Url": "https://api.github.com/repos/realm/realm-java", "Date": "2018-10-09T15:22:45Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { Save.savePlate(frame.getAddPlateMenu().getAllPlates()); } catch (java.io.IOException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/4800/buggy-version/src.PlateItem.java", "BodyUseAPI": ["Save.savePlate(frame.getAddPlateMenu().getAllPlates())", "frame.getAddPlateMenu().getAllPlates()", "Frame.getAddPlateMenu()"], "Fixed commit": "46c842af7dca78141a5c62b9f883aeb5a3487dac", "Url": "https://api.github.com/repos/garciaizcoa/MiOmbligoCreceMelones", "Date": "2018-07-12T00:28:38Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.datasetTracker.close(); } catch (java.io.IOException e) { thredds.core.ConfigCatalogInitialization.logCatalogInit.error(\"There was an error closing the datasetTracker database.\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/1804/buggy-version/tds.src.main.java.thredds.core.ConfigCatalogInitialization.java", "BodyUseAPI": ["thredds.core.DatasetTracker.close()"], "Fixed commit": "ea5d0fea38e3a853e4c6554b5a453aba52504470", "Url": "https://api.github.com/repos/metno/thredds", "Date": "2018-01-20T00:40:37Z"},
{"Line": "=>725", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { json.put(\"changed\", \"changed\"); json.put(\"name2\", device.getName()); } catch (org.json.JSONException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8499/buggy-version/src.android.BLECentralPlugin.java", "BodyUseAPI": ["org.json.JSONObject.put(java.lang.String,java.lang.String)", "android.bluetooth.BluetoothDevice.getName()", "org.json.JSONObject.put(java.lang.String,device.getName())"], "Fixed commit": "b1aebb06a7f15bf8c038a6c29dbd63cd931633f1", "Url": "https://api.github.com/repos/lulumahot/cordova-plugin-ble-central", "Date": "2018-05-22T12:54:42Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { domainParticipant.get_discovered_participant_data(participantData, ((com.rti.dds.infrastructure.InstanceHandle_t) (participantHandle))); } catch (com.rti.dds.infrastructure.RETCODE_PRECONDITION_NOT_MET ex) { if (com.github.aguther.dds.util.BuiltinTopicHelper.LOGGER.isInfoEnabled()) { com.github.aguther.dds.util.BuiltinTopicHelper.LOGGER.info(\"Ignoring participant ({}) that got lost between call get_discovered_participants() and get_discovered_participant_data()\", (participantHandle == null ? \"null\" : participantHandle)); } continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/5901/buggy-version/src.main.java.com.github.aguther.dds.util.BuiltinTopicHelper.java", "BodyUseAPI": ["com.rti.dds.domain.DomainParticipant.get_discovered_participant_data(com.rti.dds.domain.builtin.ParticipantBuiltinTopicData,java.lang.Object)"], "Fixed commit": "2dc9b3e616c0b9357a65cbbd0b79c793f8e219a2", "Url": "https://api.github.com/repos/aguther/dds-examples", "Date": "2018-09-19T12:55:47Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { while (!(p.peek().equals('('))) { result += \" \" + (p.peek()); p.pop(); } p.pop(); } catch (java.lang.NullPointerException e) { java.lang.System.out.println(\"Warning while parsing expression: Empty Stack, too many closing parentheses\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2038/buggy-version/src.Postfix.java", "BodyUseAPI": ["Stack<java.lang.Character>.pop()", "Stack<java.lang.Character>.peek()", "Stack<java.lang.Character>.pop()", "p.peek().equals(char)", "Stack<java.lang.Character>.peek()"], "Fixed commit": "14ce7485f95e93937db76388d141014192e64067", "Url": "https://api.github.com/repos/potatoTVnet/reverse-polish-notation", "Date": "2018-06-05T17:33:32Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (au.edu.rmit.bdp.model.Centroid a : assocArray.keySet()) { context.write(a, assocArray.get(a)); } } catch (java.io.IOException a) { au.edu.rmit.bdp.ClusteringIMC.KmeansMapping.printLongerTrace(a); throw a; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3731/buggy-version/src.main.java.au.edu.rmit.bdp.ClusteringIMC.KmeansMapping.java", "BodyUseAPI": ["au.edu.rmit.bdp.ClusteringIMC.Context.write(au.edu.rmit.bdp.model.Centroid,assocArray.get(a))", "java.util.Map<au.edu.rmit.bdp.model.Centroid, java.util.List<au.edu.rmit.bdp.model.DataPoint>>.keySet()", "java.util.Map<au.edu.rmit.bdp.model.Centroid, java.util.List<au.edu.rmit.bdp.model.DataPoint>>.get(au.edu.rmit.bdp.model.Centroid)"], "Fixed commit": "9495a526d61e4bf2048d457c2b31c3c69e8a56f4", "Url": "https://api.github.com/repos/robertwt7/BDPKmeans", "Date": "2018-10-08T11:02:46Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { tps = plugin.getServer().getTPS()[0]; } catch (java.lang.NoSuchMethodError e) { return super.getTPS(diff, now, cpuUsage, usedMemory, entityCount, chunksLoaded, playersOnline); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3680/buggy-version/Plan.src.main.java.com.djrapitops.plan.system.tasks.bukkit.PaperTPSCountTimer.java", "BodyUseAPI": ["com.djrapitops.plan.system.tasks.bukkit.PaperTPSCountTimer.getServer()", "plugin.getServer().getTPS()"], "Fixed commit": "bb5e0969ca6e3c7b2d394af83c65f6bd85577fa1", "Url": "https://api.github.com/repos/Rsl1122/Plan-PlayerAnalytics", "Date": "2018-02-19T09:34:33Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { transactions = ((java.util.HashMap<java.lang.String, java.util.ArrayList<com.example.wgwong.budgettracker.Transaction>>) (loadFile(getString(R.string.transactions_filename)))); android.support.design.widget.Snackbar.make(findViewById(coordinator_layout), R.string.loaded_transactions_message, Snackbar.LENGTH_SHORT).show(); } catch (java.lang.Exception e) { android.util.Log.w(\"warn\", \"No transactions file found, initializing new transactions list\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8765/buggy-version/app.src.main.java.com.example.wgwong.budgettracker.BudgetActivity.java", "BodyUseAPI": ["android.support.design.widget.Snackbar.make(findViewById(coordinator_layout), R.string.loaded_transactions_message, Snackbar.LENGTH_SHORT).show()", "com.example.wgwong.budgettracker.BudgetActivity.getString(R.string.transactions_filename)", "com.example.wgwong.budgettracker.BudgetActivity.findViewById(com.example.wgwong.budgettracker.BudgetActivity)", "android.support.design.widget.Snackbar.make(findViewById(coordinator_layout),R.string.loaded_transactions_message,Snackbar.LENGTH_SHORT)", "com.example.wgwong.budgettracker.BudgetActivity.loadFile(getString(R.string.transactions_filename))"], "Fixed commit": "84022d35fcac573f6908004e6e1e27827b7b06a1", "Url": "https://api.github.com/repos/wgwong/BudgetTracker", "Date": "2018-02-27T00:54:00Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.aefyr.apheleia.custom.ApheleiaRequest.ejIdExpirationTime = (java.lang.System.currentTimeMillis()) + ((java.lang.Long.parseLong(cookieMeta[2].split(\"=\")[1])) * 1000L); android.util.Log.d(com.aefyr.apheleia.custom.ApheleiaRequest.TAG, (((\"Got ejId cookie \" + (com.aefyr.apheleia.custom.ApheleiaRequest.ejId)) + \", expires at \") + (com.aefyr.apheleia.custom.ApheleiaRequest.ejIdExpirationTime))); } catch (java.lang.Exception e) { android.util.Log.e(com.aefyr.apheleia.custom.ApheleiaRequest.TAG, \"Unable to parse ejId cookie expiration time:\"); e.printStackTrace(); com.crashlytics.android.Crashlytics.logException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3292/buggy-version/app.src.main.java.com.aefyr.apheleia.custom.ApheleiaRequest.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "android.util.Log.d(java.lang.String,java.lang.String)", "java.lang.System.currentTimeMillis()", "java.lang.Long.parseLong(java.lang.String)"], "Fixed commit": "0e099cd7a4a310cdfb3ca651c9e0ad39e009da4e", "Url": "https://api.github.com/repos/Aefyr/Apheleia", "Date": "2018-04-30T19:28:00Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { arduinoPort = new edu.wpi.first.wpilibj.SerialPort(9600, SerialPort.Port.kUSB); } catch (java.lang.Exception e) { arduinoPort = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/1310/buggy-version/src.util.ArduinoSerialRead.java", "BodyUseAPI": [], "Fixed commit": "db70a530ce1b1ca6489672013b44492ba24a0b77", "Url": "https://api.github.com/repos/SkylineSpartabots/FRC-2018", "Date": "2018-02-21T04:58:57Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { if ((msg instanceof io.netty.handler.codec.http.HttpResponse) && (msg instanceof io.netty.handler.codec.http.HttpContent)) { responseStatus = ((io.netty.handler.codec.http.HttpResponse) (msg)).status(); responseContent = ((io.netty.handler.codec.http.HttpContent) (msg)).content().toString(CharsetUtil.UTF_8); }else { unexpectedErrorMessage = \"Unexpected response message class: \" + (msg.getClass()); } } finally { io.netty.util.ReferenceCountUtil.release(msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/1519/buggy-version/common2.src.main.java.org.glowroot.common2.repo.util.HttpClient.java", "BodyUseAPI": ["((io.netty.handler.codec.http.HttpContent) (msg)).content().toString(CharsetUtil.UTF_8)", "java.lang.Object.content()", "java.lang.Object.getClass()", "java.lang.Object.status()"], "Fixed commit": "401472049f2ae175f98130df9fffa445f1ae5a4f", "Url": "https://api.github.com/repos/glowroot/glowroot", "Date": "2018-05-09T23:03:25Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { iso7816Tag.selectById(16384); } catch (java.io.FileNotFoundException e) { android.util.Log.d(au.id.micolous.metrodroid.card.cepas.CEPASApplication.TAG, \"CEPAS file not found -- this is expected for non-CEPAS ISO7816 cards\", e); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/413/buggy-version/src.main.java.au.id.micolous.metrodroid.card.cepas.CEPASApplication.java", "BodyUseAPI": ["au.id.micolous.metrodroid.card.iso7816.ISO7816Protocol.selectById(int)"], "Fixed commit": "8ef6c8c302a74e15eab8c747b6ffd7d8a3180748", "Url": "https://api.github.com/repos/micolous/metrodroid", "Date": "2018-09-23T05:54:35Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { intendedPlaceImg.setImageDrawable(getResources().getDrawable(imgResource)); } catch (java.lang.Exception e) { intendedPlaceImg.setImageResource(R.drawable.default_pic); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/5955/buggy-version/app.src.main.java.com.explaineverythingelse.accessu.InfoScreen.java", "BodyUseAPI": ["getResources().getDrawable(int)", "com.explaineverythingelse.accessu.InfoScreen.getResources()", "android.widget.ImageView.setImageDrawable(getResources().getDrawable(imgResource))"], "Fixed commit": "e3833c52db75a0b385816d670d3bbbc00850b656", "Url": "https://api.github.com/repos/4lefac/AccessU", "Date": "2018-10-28T08:43:09Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.akvo.caddisfly.helper.FileHelper.migrateFolders(); } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/1174/buggy-version/caddisfly-app.app.src.main.java.org.akvo.caddisfly.helper.FileHelper.java", "BodyUseAPI": ["org.akvo.caddisfly.helper.FileHelper.migrateFolders()"], "Fixed commit": "ed39f6b831e5522ec84d21c8efd73fc19ef7a19e", "Url": "https://api.github.com/repos/foundation-for-environmental-monitoring/ffem-app", "Date": "2018-06-19T23:07:37Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { imageTitle = java.net.URLEncoder.encode(imageTitle, \"UTF-8\"); } catch (java.io.UnsupportedEncodingException e) { java.lang.System.err.println(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8707/buggy-version/OsmAnd.src.net.osmand.plus.wikivoyage.data.TravelArticle.java", "BodyUseAPI": ["java.net.URLEncoder.encode(java.lang.String,java.lang.String)"], "Fixed commit": "18a8449fd83d65c192008a0537b03bfce8bf0624", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2018-05-16T14:07:44Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { klass = java.lang.Class.forName(metaModel.getFullName()); } catch (java.lang.ClassNotFoundException e) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8546/buggy-version/axelor-admin.src.main.java.com.axelor.apps.base.service.app.AppServiceImpl.java", "BodyUseAPI": ["com.axelor.meta.db.MetaModel.getFullName()", "java.lang.Class.forName(metaModel.getFullName())"], "Fixed commit": "996bbd67bd83cf2d2e6d3a3777537d3ea465160e", "Url": "https://api.github.com/repos/man-axelor/axelor-business-suite", "Date": "2018-05-23T10:36:52Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { cursor = contentResolver.query(CalendarContract.Events.CONTENT_URI, new java.lang.String[]{ com.paulvarry.intra42.api.model.Events.CUSTOM_APP_URI }, selection, selectionArgs, null); } catch (java.lang.IllegalAccessError e) { e.printStackTrace(); cursor = contentResolver.query(CalendarContract.Events.CONTENT_URI, null, selection, selectionArgs, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2285/buggy-version/app.src.main.java.com.paulvarry.intra42.utils.Calendar.java", "BodyUseAPI": ["android.content.ContentResolver.query(CalendarContract.Events.CONTENT_URI,java.lang.String[],java.lang.String,java.lang.String[],<nulltype>)"], "Fixed commit": "749cd9d524ac35ef9ee84860f9aef333a93c419b", "Url": "https://api.github.com/repos/pvarry/intra42", "Date": "2018-03-06T22:06:38Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Long orgId = java.lang.Long.valueOf(orgIdString); restRequestThreadLocalService.setRequestedOrgId(orgId); } catch (java.lang.NumberFormatException e) { com.sequenceiq.cloudbreak.filter.OrganizationConfiguratorFilter.LOGGER.error(java.lang.String.format(\"OrganizationID couldn't be parsed from the V3 request URI: %s\", requestURI), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/711/buggy-version/core.src.main.java.com.sequenceiq.cloudbreak.filter.OrganizationConfiguratorFilter.java", "BodyUseAPI": ["java.lang.Long.valueOf(java.lang.String)", "com.sequenceiq.cloudbreak.service.RestRequestThreadLocalService.setRequestedOrgId(java.lang.Long)"], "Fixed commit": "dcff477efe72a7abeb256a5c2a4567e5bfa42b03", "Url": "https://api.github.com/repos/hortonworks/cloudbreak", "Date": "2018-08-22T13:59:57Z"},
{"Line": "=>679", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { exampleList[i].remove(java.lang.Integer.toString(f)); } catch (java.lang.Exception e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7450/buggy-version/src.main.java.eus.ehu.tss.Trainable_Superpixel_Segmentation.java", "BodyUseAPI": ["java.awt.List.remove(java.lang.String)", "java.lang.Integer.toString(int)"], "Fixed commit": "fa16dde0beffd8503addd1fcce62a9ade3dc5e91", "Url": "https://api.github.com/repos/CVPD/Trainable_Superpixel_Segmentation", "Date": "2018-05-12T12:41:17Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { measurement = ingredientMeasurements[i]; } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7897/buggy-version/src.main.java.model.Recipe.java", "BodyUseAPI": [], "Fixed commit": "8fdf988c1ae26fff1fd20d025a5c91c60f76363a", "Url": "https://api.github.com/repos/PeterThorsen/WhichCocktailsCanIMake", "Date": "2018-06-17T17:20:11Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(1500); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/5411/buggy-version/app.src.main.java.com.example.matrix_yang.cloudcontact.LoginActivity.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "50c5f5533ebcfade610051e98623765830d3a033", "Url": "https://api.github.com/repos/matrix-yang/cloudcontact", "Date": "2018-07-15T11:05:20Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.json.JSONObject job = new org.json.JSONObject(mResponse); java.lang.String range = job.optString(\"range\"); java.lang.String end = range.split(\"-\")[0]; java.lang.String all = range.split(\"-\")[1]; if (((java.lang.Long.parseLong(end)) - 1) >= (java.lang.Long.parseLong(all))) { return true; } } catch (org.json.JSONException e) { e.printStackTrace(); com.scott.transer.utils.Debugger.error(TAG, e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/301/buggy-version/transer.src.main.java.com.scott.transer.task.DefaultHttpUploadHandler.java", "BodyUseAPI": ["java.lang.Long.parseLong(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.Long.parseLong(java.lang.String)", "org.json.JSONObject.optString(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "13e0f269d580197274007ab7e6e23a37d6ae3482", "Url": "https://api.github.com/repos/shilec/Transer", "Date": "2018-01-02T09:51:39Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { speed = java.lang.Integer.valueOf(parts[0]); } catch (java.lang.NumberFormatException exception) { speed = (roadtype != null) ? maxSpeedForRoadType(roadtype) : org.laas.osm2graph.model.WayToArc.DEFAULT_MAXIMUM_SPEED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/6320/buggy-version/src.main.org.laas.osm2graph.model.WayToArc.java", "BodyUseAPI": ["java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "277783ae119530d039923baa16313490e5435fd2", "Url": "https://api.github.com/repos/Holt59/OSM2Graph", "Date": "2018-02-23T11:16:34Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (caseListElem.executeBoolean(frame)) { for (com.oracle.app.nodes.GoStatementNode executeBody : body) { executeBody.executeVoid(frame); } return true; } } catch (com.oracle.truffle.api.nodes.UnexpectedResultException e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/5122/buggy-version/golang.src.main.java.com.oracle.app.nodes.controlflow.GoCaseClauseNode.java", "BodyUseAPI": ["com.oracle.app.nodes.GoExpressionNode.executeBoolean(com.oracle.truffle.api.frame.VirtualFrame)", "com.oracle.app.nodes.GoStatementNode.executeVoid(com.oracle.truffle.api.frame.VirtualFrame)"], "Fixed commit": "ab36d51efb32400a716b076768e1914aaebe3141", "Url": "https://api.github.com/repos/PDZaninov/GoLang-Compiler", "Date": "2018-03-07T20:31:01Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return em.createQuery(\"SELECT r FROM Room r WHERE r.hotel = :hotel AND r.number = :number\", cz.muni.fi.pa165.entity.Room.class).setParameter(\"hotel\", hotel).setParameter(\"number\", number).getSingleResult(); } catch (javax.persistence.NoResultException ignore) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/48/buggy-version/persistence.src.main.java.cz.muni.fi.pa165.dao.RoomDaoImpl.java", "BodyUseAPI": ["em.createQuery(\"SELECT r FROM Room r WHERE r.hotel = :hotel AND r.number = :number\", cz.muni.fi.pa165.entity.Room.class).setParameter(\"hotel\", hotel).setParameter(\"number\", number).getSingleResult()", "em.createQuery(\"SELECT r FROM Room r WHERE r.hotel = :hotel AND r.number = :number\", cz.muni.fi.pa165.entity.Room.class).setParameter(\"hotel\", hotel).setParameter(java.lang.String,java.lang.Integer)", "em.createQuery(\"SELECT r FROM Room r WHERE r.hotel = :hotel AND r.number = :number\", cz.muni.fi.pa165.entity.Room.class).setParameter(java.lang.String,cz.muni.fi.pa165.entity.Hotel)", "javax.persistence.EntityManager.createQuery(java.lang.String,java.lang.Class)"], "Fixed commit": "314689efa13aaf4ac5a976fcb759af18ae894112", "Url": "https://api.github.com/repos/zezulka/PA165_Booking_Manager", "Date": "2018-10-28T18:50:27Z"},
{"Line": "=>5363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((com.ge.research.sadl.reasoner.utils.SadlUtils.getLiteralMatchingDataPropertyRange(theJenaModel, ptype, val.getValue())) != null) { return true; } } catch (com.ge.research.sadl.reasoner.TranslationException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/1286/buggy-version/sadl3.com.ge.research.sadl.parent.com.ge.research.sadl.jena.src.com.ge.research.sadl.jena.JenaBasedSadlModelValidator.java", "BodyUseAPI": ["com.hp.hpl.jena.rdf.model.Literal.getValue()", "com.ge.research.sadl.reasoner.utils.SadlUtils.getLiteralMatchingDataPropertyRange(com.hp.hpl.jena.ontology.OntModel,java.lang.String,val.getValue())"], "Fixed commit": "7a58f3424052588abdbed5f8d3334b4719945a60", "Url": "https://api.github.com/repos/crapo/sadlos2", "Date": "2018-07-25T12:35:38Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { int index = java.lang.Integer.parseInt(savedValue); this.value = availableValues[index]; } catch (java.lang.NumberFormatException e) { this.value = value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/5809/buggy-version/src.org.executequery.gui.prefs.UserPreference.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "ab935af98df7b2f58df9291467bdd0fd2138af60", "Url": "https://api.github.com/repos/red-soft-ru/redexpert", "Date": "2018-05-14T09:31:33Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (action == null) { if (userID != (-1)) { if (hasOpenGame(userID, session)) { qb = getNextQuestion(gameID, categoryID); request.setAttribute(\"QuestionBean\", qb); final javax.servlet.RequestDispatcher dispatcher = request.getRequestDispatcher(quiz); dispatcher.forward(request, response); }else { final javax.servlet.RequestDispatcher dispatcher = request.getRequestDispatcher(landing); dispatcher.forward(request, response); } }else { final javax.servlet.RequestDispatcher dispatcher = request.getRequestDispatcher(login); dispatcher.forward(request, response); } }else { java.lang.String password = request.getParameter(\"password\"); java.lang.String userName = request.getParameter(\"userName\"); final javax.servlet.RequestDispatcher dispatcher; switch (action) { case \"login\" : java.lang.Integer id = checkUser(userName, password); if (id != (-1)) { session.setAttribute(\"userID\", id); if (hasOpenGame(id, session)) { gameID = ((java.lang.Integer) (session.getAttribute(\"gameID\"))); categoryID = ((java.lang.Integer) (session.getAttribute(\"categoryID\"))); qb = getNextQuestion(gameID, categoryID); request.setAttribute(\"QuestionBean\", qb); dispatcher = request.getRequestDispatcher(quiz); dispatcher.forward(request, response); }else { dispatcher = request.getRequestDispatcher(landing); dispatcher.forward(request, response); } }else { dispatcher = request.getRequestDispatcher(login); dispatcher.forward(request, response); } break; case \"register\" : java.lang.String vName = request.getParameter(\"vName\"); java.lang.String nName = request.getParameter(\"nName\"); java.lang.String mail = request.getParameter(\"mail\"); java.lang.Integer result = registerUser(vName, nName, userName, password, mail); session.setAttribute(\"userID\", result); dispatcher = request.getRequestDispatcher(landing); dispatcher.forward(request, response); break; case \"registerForm\" : dispatcher = request.getRequestDispatcher(register); dispatcher.forward(request, response); break; case \"checkUsername\" : if (checkUsername(userName)) { response.getWriter().append(\"true\"); }else { response.getWriter().append(\"false\"); } break; case \"startGame2\" : session.setAttribute(\"categoryID\", 2); gameID = startGame(userID, 2); session.setAttribute(\"gameID\", gameID); qb = getNextQuestion(gameID, 2); qb.setQ_Number(1); request.setAttribute(\"QuestionBean\", qb); dispatcher = request.getRequestDispatcher(quiz); dispatcher.forward(request, response); break; case \"startGame1\" : session.setAttribute(\"categoryID\", 1); gameID = startGame(userID, 1); session.setAttribute(\"gameID\", gameID); qb = getNextQuestion(gameID, 1); qb.setQ_Number(1); request.setAttribute(\"QuestionBean\", qb); dispatcher = request.getRequestDispatcher(quiz); dispatcher.forward(request, response); break; case \"startGame3\" : session.setAttribute(\"categoryID\", 3); gameID = startGame(userID, 3); session.setAttribute(\"gameID\", gameID); qb = getNextQuestion(gameID, categoryID); qb.setQ_Number(1); request.setAttribute(\"QuestionBean\", qb); dispatcher = request.getRequestDispatcher(quiz); dispatcher.forward(request, response); break; case \"setAnswer\" : java.lang.Integer q_ID = java.lang.Integer.parseInt(request.getParameter(\"question\")); java.lang.Integer a_ID = java.lang.Integer.parseInt(request.getParameter(\"answer\")); if (checkAnswer(q_ID, a_ID, gameID)) { response.getWriter().append(\"true\"); }else { response.getWriter().append(\"false\"); } break; case \"getNextQuestion\" : java.lang.Integer qNumber = ((java.lang.Integer) (request.getAttribute(\"questionNumber\"))); qb = getNextQuestion(gameID, categoryID); qb.setQ_Number(qNumber); request.setAttribute(\"QuestionBean\", qb); dispatcher = request.getRequestDispatcher(quiz); dispatcher.forward(request, response); break; } } } catch (java.lang.Exception ex) { java.lang.System.out.println(ex.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8106/buggy-version/quiz.src.web.servlets.QuizManagement.java", "BodyUseAPI": ["web.servlets.QuizManagement.getNextQuestion(java.lang.Integer,int)", "web.servlets.QuizManagement.getNextQuestion(java.lang.Integer,int)", "javax.servlet.http.HttpSession.setAttribute(java.lang.String,int)", "javax.servlet.http.HttpSession.setAttribute(java.lang.String,java.lang.Integer)", "javax.servlet.http.HttpServletRequest.getRequestDispatcher(java.lang.String)", "web.bean.QuestionBean.setQ_Number(int)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "javax.servlet.http.HttpServletRequest.getRequestDispatcher(java.lang.String)", "web.servlets.QuizManagement.getNextQuestion(java.lang.Integer,java.lang.Integer)", "javax.servlet.RequestDispatcher.forward(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,web.bean.QuestionBean)", "javax.servlet.RequestDispatcher.forward(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "javax.servlet.http.HttpServletRequest.getRequestDispatcher(java.lang.String)", "javax.servlet.RequestDispatcher.forward(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,web.bean.QuestionBean)", "javax.servlet.http.HttpServletResponse.getWriter()", "javax.servlet.http.HttpServletRequest.getRequestDispatcher(java.lang.String)", "web.servlets.QuizManagement.checkAnswer(java.lang.Integer,java.lang.Integer,java.lang.Integer)", "javax.servlet.http.HttpServletRequest.getRequestDispatcher(java.lang.String)", "javax.servlet.http.HttpServletRequest.getRequestDispatcher(java.lang.String)", "javax.servlet.http.HttpServletRequest.getRequestDispatcher(java.lang.String)", "javax.servlet.http.HttpSession.setAttribute(java.lang.String,java.lang.Integer)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "web.bean.QuestionBean.setQ_Number(int)", "javax.servlet.RequestDispatcher.forward(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "javax.servlet.http.HttpServletRequest.getRequestDispatcher(java.lang.String)", "javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,web.bean.QuestionBean)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "web.servlets.QuizManagement.checkUser(java.lang.String,java.lang.String)", "javax.servlet.http.HttpSession.setAttribute(java.lang.String,java.lang.Integer)", "javax.servlet.RequestDispatcher.forward(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "javax.servlet.http.HttpSession.setAttribute(java.lang.String,java.lang.Integer)", "javax.servlet.RequestDispatcher.forward(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "javax.servlet.http.HttpSession.setAttribute(java.lang.String,int)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "javax.servlet.RequestDispatcher.forward(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "web.servlets.QuizManagement.startGame(java.lang.Integer,int)", "web.servlets.QuizManagement.getNextQuestion(java.lang.Integer,java.lang.Integer)", "javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,web.bean.QuestionBean)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "java.lang.Integer.parseInt(request.getParameter(\"answer\"))", "javax.servlet.http.HttpServletResponse.getWriter()", "web.servlets.QuizManagement.hasOpenGame(java.lang.Integer,javax.servlet.http.HttpSession)", "javax.servlet.RequestDispatcher.forward(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "web.servlets.QuizManagement.checkUsername(java.lang.String)", "javax.servlet.http.HttpSession.setAttribute(java.lang.String,int)", "javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,web.bean.QuestionBean)", "web.servlets.QuizManagement.getNextQuestion(java.lang.Integer,java.lang.Integer)", "web.bean.QuestionBean.setQ_Number(int)", "javax.servlet.http.HttpServletRequest.getRequestDispatcher(java.lang.String)", "javax.servlet.http.HttpServletRequest.getRequestDispatcher(java.lang.String)", "web.servlets.QuizManagement.hasOpenGame(java.lang.Integer,javax.servlet.http.HttpSession)", "response.getWriter().append(java.lang.String)", "javax.servlet.http.HttpSession.setAttribute(java.lang.String,java.lang.Integer)", "javax.servlet.RequestDispatcher.forward(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "javax.servlet.http.HttpServletResponse.getWriter()", "javax.servlet.http.HttpServletRequest.getAttribute(java.lang.String)", "javax.servlet.http.HttpServletRequest.getRequestDispatcher(java.lang.String)", "javax.servlet.http.HttpServletResponse.getWriter()", "javax.servlet.http.HttpServletRequest.getRequestDispatcher(java.lang.String)", "javax.servlet.RequestDispatcher.forward(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "web.servlets.QuizManagement.startGame(java.lang.Integer,int)", "web.bean.QuestionBean.setQ_Number(java.lang.Integer)", "javax.servlet.RequestDispatcher.forward(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "response.getWriter().append(java.lang.String)", "javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,web.bean.QuestionBean)", "response.getWriter().append(java.lang.String)", "javax.servlet.http.HttpSession.getAttribute(java.lang.String)", "javax.servlet.http.HttpSession.getAttribute(java.lang.String)", "web.servlets.QuizManagement.getNextQuestion(java.lang.Integer,java.lang.Integer)", "web.servlets.QuizManagement.registerUser(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)", "javax.servlet.RequestDispatcher.forward(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "response.getWriter().append(java.lang.String)", "web.servlets.QuizManagement.startGame(java.lang.Integer,int)", "java.lang.Integer.parseInt(request.getParameter(\"question\"))", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Fixed commit": "9bb9f70acd4fc84b4bf543fc3a0ef3dcc45a1190", "Url": "https://api.github.com/repos/domdadon/THI_Project_Quiz", "Date": "2018-07-03T21:00:26Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { multiStageCoprocessor.reset(); } catch (java.lang.Throwable t) { logger.debug(\"multi processor rejected:\", t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/5959/buggy-version/parse.src.main.java.com.alibaba.otter.canal.parse.inbound.AbstractEventParser.java", "BodyUseAPI": ["com.alibaba.otter.canal.parse.inbound.MultiStageCoprocessor.reset()"], "Fixed commit": "ccd1e52411809a796dccc13fd5b91f3557d9a1e7", "Url": "https://api.github.com/repos/alibaba/canal", "Date": "2018-07-25T08:38:38Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.facebook.share.model.SharePhoto photo = new com.facebook.share.model.SharePhoto.Builder().setBitmap(((android.graphics.drawable.BitmapDrawable) (holder.ivPost.getDrawable())).getBitmap()).setImageUrl(android.net.Uri.parse(postsDetails.imageURL)).setCaption(postsDetails.postInfo).build(); com.facebook.share.model.ShareContent content = new com.facebook.share.model.SharePhotoContent.Builder().addPhoto(photo).build(); shareDialog.show(content); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2303/buggy-version/app.src.main.java.com.pend.adapters.HomePostsAdapter.java", "BodyUseAPI": ["new com.facebook.share.model.SharePhoto.Builder().setBitmap(((android.graphics.drawable.BitmapDrawable) (holder.ivPost.getDrawable())).getBitmap()).setImageUrl(android.net.Uri.parse(postsDetails.imageURL))", "android.net.Uri.parse(postsDetails.imageURL)", "new com.facebook.share.model.SharePhotoContent.Builder().addPhoto(photo).build()", "com.facebook.share.model.SharePhotoContent.Builder.addPhoto(com.facebook.share.model.SharePhoto)", "new com.facebook.share.model.SharePhoto.Builder().setBitmap(((android.graphics.drawable.BitmapDrawable) (holder.ivPost.getDrawable())).getBitmap()).setImageUrl(android.net.Uri.parse(postsDetails.imageURL)).setCaption(postsDetails.postInfo)", "((android.graphics.drawable.BitmapDrawable) (holder.ivPost.getDrawable())).getBitmap()", "com.facebook.share.widget.ShareDialog.show(com.facebook.share.model.ShareContent)", "android.widget.ImageView.getDrawable()", "com.facebook.share.model.SharePhoto.Builder.setBitmap(((android.graphics.drawable.BitmapDrawable) (holder.ivPost.getDrawable())).getBitmap())", "new com.facebook.share.model.SharePhoto.Builder().setBitmap(((android.graphics.drawable.BitmapDrawable) (holder.ivPost.getDrawable())).getBitmap()).setImageUrl(android.net.Uri.parse(postsDetails.imageURL)).setCaption(postsDetails.postInfo).build()"], "Fixed commit": "e94da85e576f2165c97c56caade4a2fd8c02f567", "Url": "https://api.github.com/repos/VermaManish1990/Pendulum", "Date": "2018-09-06T17:14:11Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return delegate.extract(format, carrier); } catch (java.lang.NumberFormatException e) { org.stagemonitor.tracing.wrapper.SpanWrappingTracer.logger.error((\"error parsing span id, possible XSS attack: \" + (e.getMessage())), e); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/4924/buggy-version/stagemonitor-tracing.src.main.java.org.stagemonitor.tracing.wrapper.SpanWrappingTracer.java", "BodyUseAPI": ["io.opentracing.Tracer.extract(io.opentracing.propagation.Format<C>,C)"], "Fixed commit": "148968bd64d47f4651e65bd6ffe1f525f38b4659", "Url": "https://api.github.com/repos/stagemonitor/stagemonitor", "Date": "2018-04-25T09:50:13Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (((java.lang.System.currentTimeMillis()) - (lastHealthCheckTs)) > 30000) { log.info(\"Haven't received health check from spawner in a while. Stopping instance...\"); close(); } } catch (java.lang.Exception e) { log.error(\"Error occurred when checking for latest health check\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3356/buggy-version/pulsar-functions.runtime.src.main.java.org.apache.pulsar.functions.runtime.JavaInstanceMain.java", "BodyUseAPI": ["org.apache.pulsar.functions.runtime.JavaInstanceMain.2.info(java.lang.String)", "org.apache.pulsar.functions.runtime.JavaInstanceMain.2.close()", "java.lang.System.currentTimeMillis()"], "Fixed commit": "bccb36cd7a324aca958c15b16fa9ca3a8aeeae49", "Url": "https://api.github.com/repos/jerrypeng/incubator-pulsar", "Date": "2018-05-23T00:11:05Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((result.data.extendedEtities.media.get(0).videoInfo.variants.get(i)) != null) { url = result.data.extendedEtities.media.get(0).videoInfo.variants.get(i).url; i += 1; } } catch (java.lang.IndexOutOfBoundsException e) { com.kehinde.twittasave.utils.ServiceUtil.downloadVideo(url, filename); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/9462/buggy-version/app.src.main.java.com.kehinde.twittasave.utils.ServiceUtil.java", "BodyUseAPI": ["result.data.extendedEtities.media.get(0).videoInfo.variants.get(int)", "result.data.extendedEtities.media.get(int)", "result.data.extendedEtities.media.get(0).videoInfo.variants.get(int)", "result.data.extendedEtities.media.get(int)"], "Fixed commit": "8aeeb3aa8894326c7dbcfacad78f4a3d1d0074ab", "Url": "https://api.github.com/repos/emmanuelkehinde/TwittaSave-Android", "Date": "2018-05-04T23:15:08Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((result.data.extendedEtities.media.get(0).videoInfo.variants.get(i)) != null) { url = result.data.extendedEtities.media.get(0).videoInfo.variants.get(i).url; i += 1; } } catch (java.lang.IndexOutOfBoundsException e) { downloadVideo(url, filename); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/9462/buggy-version/app.src.main.java.com.kehinde.twittasave.activities.MainActivity.java", "BodyUseAPI": ["result.data.extendedEtities.media.get(0).videoInfo.variants.get(int)", "result.data.extendedEtities.media.get(int)", "result.data.extendedEtities.media.get(int)", "result.data.extendedEtities.media.get(0).videoInfo.variants.get(int)"], "Fixed commit": "8aeeb3aa8894326c7dbcfacad78f4a3d1d0074ab", "Url": "https://api.github.com/repos/emmanuelkehinde/TwittaSave-Android", "Date": "2018-05-04T23:15:08Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { iv = com.prsuhas.cordova.plugins.encryptedexoplayer.ExoplayerActivity.getKeyBytes(key); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/1423/buggy-version/src.android.com.prsuhas.cordova.plugins.encryptedexoplayer.ExoplayerActivity.java", "BodyUseAPI": ["com.prsuhas.cordova.plugins.encryptedexoplayer.ExoplayerActivity.getKeyBytes(byte[])"], "Fixed commit": "7457472ce47befcdbed6ab3d07f3963d0ef2c9b9", "Url": "https://api.github.com/repos/prsuhas/cordova-plugin-encrypted-exoplayer", "Date": "2018-07-15T06:17:06Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { key = mKey.getBytes(); iv = com.prsuhas.cordova.plugins.encryptedexoplayer.EncryptedExoplayer.getKeyBytes(key); mSecretKeySpec = new javax.crypto.spec.SecretKeySpec(key, com.prsuhas.cordova.plugins.encryptedexoplayer.EncryptedExoplayer.AES_ALGORITHM); mIvParameterSpec = new javax.crypto.spec.IvParameterSpec(iv); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/1423/buggy-version/src.android.com.prsuhas.cordova.plugins.encryptedexoplayer.EncryptedExoplayer.java", "BodyUseAPI": ["com.prsuhas.cordova.plugins.encryptedexoplayer.EncryptedExoplayer.getKeyBytes(byte[])", "java.lang.String.getBytes()"], "Fixed commit": "7457472ce47befcdbed6ab3d07f3963d0ef2c9b9", "Url": "https://api.github.com/repos/prsuhas/cordova-plugin-encrypted-exoplayer", "Date": "2018-07-15T06:17:06Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { extractedValue = java.lang.Integer.parseInt(candidateSupStr); } catch (java.lang.NumberFormatException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/5724/buggy-version/src.main.java.onethreeseven.spm.data.SPMFParser.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "7e6435181e3da7020740d259564eb22c249d89a4", "Url": "https://api.github.com/repos/lukehb/137-SPM", "Date": "2017-06-15T04:54:04Z"},
{"Line": "=>526", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { geoResult = cmput301w18t09.orbid.MapActivity.getAddress(location, getResources()); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } catch (com.google.maps.errors.ApiException e) { e.printStackTrace(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2745/buggy-version/app.src.main.java.cmput301w18t09.orbid.AddEditTaskActivity.java", "BodyUseAPI": ["cmput301w18t09.orbid.MapActivity.getAddress(com.google.maps.model.LatLng,getResources())", "cmput301w18t09.orbid.AddEditTaskActivity.getResources()"], "Fixed commit": "7502af3ed9694d36d4621fd8fafd954d7160e854", "Url": "https://api.github.com/repos/CMPUT301W18T09/CDProjektBlue", "Date": "2018-04-05T23:08:44Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.logWriter.close(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4939/buggy-version/src.egit.firewall.config.gen.neu.Logger.java", "BodyUseAPI": ["java.io.BufferedWriter.close()"], "Fixed commit": "ad76a21b4b0cd46973d98a27ae4b43af4f30f58c", "Url": "https://api.github.com/repos/Logfro/FirewallConnectionGenerator", "Date": "2018-07-11T07:34:40Z"},
{"Line": "=>848", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { workbench.getMappingFromColumn(col).getWorkbenchDataItems().add(wbdi); } catch (org.hibernate.LazyInitializationException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3477/buggy-version/src.edu.ku.brc.specify.datamodel.WorkbenchRow.java", "BodyUseAPI": ["workbench.getMappingFromColumn(col).getWorkbenchDataItems()", "workbench.getMappingFromColumn(col).getWorkbenchDataItems().add(edu.ku.brc.specify.datamodel.WorkbenchDataItem)", "edu.ku.brc.specify.datamodel.Workbench.getMappingFromColumn(short)"], "Fixed commit": "8131e4f90edf218596d082b030197ec157bb5359", "Url": "https://api.github.com/repos/specify/specify6", "Date": "2018-03-22T20:28:41Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String prefix = token.substring(0, (i + length)); guessed_lemma = prefix + postfix; } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/9330/buggy-version/tint-digimorph-annotator.src.main.java.eu.fbk.dh.tint.digimorph.annotator.GuessModel.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "d89d2ca466f8bcfc833b1427fe6316fd28df596b", "Url": "https://api.github.com/repos/dhfbk/tint", "Date": "2018-02-06T11:32:11Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (((isAdded()) && ((mDownloadActionProvider) != null)) && (count > 0)) { mDownloadActionProvider.setBadgeNumber(count); } } catch (java.lang.Throwable e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/5205/buggy-version/app.src.main.java.com.kabouzeid.gramophone.ui.fragments.mainactivity.library.LibraryFragment.java", "BodyUseAPI": ["com.kabouzeid.gramophone.views.DownloadBadgeActionProvider.setBadgeNumber(int)", "1.isAdded()"], "Fixed commit": "46829b00c3ca373aa374f5f431205f3cb2b5946d", "Url": "https://api.github.com/repos/LIYANJU2015/MusicDownloader", "Date": "2018-01-27T03:33:19Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { driver.get(url); } catch (java.lang.Exception e) { throw new BrowserException((\"Illegal URL: \" + url)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/6883/buggy-version/src.Browser.java", "BodyUseAPI": ["org.openqa.selenium.WebDriver.get(java.lang.String)"], "Fixed commit": "5e78316a6692ebb767df75c74097d7ec81aa7e46", "Url": "https://api.github.com/repos/Zaf1ro/webauto4j", "Date": "2018-05-10T02:04:55Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((employee.getFingerprint().length) > 0) { com.machinezoo.sourceafis.FingerprintTemplate probe = new com.machinezoo.sourceafis.FingerprintTemplate().dpi(500).create(rs.getBytes(\"fingerprint\")); employee.setFinger(probe); } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4364/buggy-version/src.main.java.com.evodream.payroll.database.DatabaseClass.java", "BodyUseAPI": ["com.machinezoo.sourceafis.FingerprintTemplate.dpi(int)", "com.evodream.payroll.model.Employee.getFingerprint()", "java.sql.ResultSet.getBytes(java.lang.String)", "com.evodream.payroll.model.Employee.setFinger(com.machinezoo.sourceafis.FingerprintTemplate)", "new com.machinezoo.sourceafis.FingerprintTemplate().dpi(500).create(byte[])"], "Fixed commit": "1d78843f28108d0c5c7ed07fb11cd0f2f8e59845", "Url": "https://api.github.com/repos/lukaskris/payroll", "Date": "2018-03-11T14:41:46Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { Testcases.Testcase testcase = new Testcases.Testcase(database, loggingService, notifyService, bookingService, librarianService, patronService, documentService); testcase.testcase1(); loggingService.getPrintWriter().close(); } catch (java.lang.Exception e) { loggingService.getPrintWriter().close(); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/967/buggy-version/src.Main.java", "BodyUseAPI": ["loggingService.getPrintWriter().close()", "LoggingService.getPrintWriter()", "Testcases.Testcase.testcase1()"], "Fixed commit": "e0dc80c598dc62efe3800a5c7817e107e0bdd118", "Url": "https://api.github.com/repos/adilyas/lms", "Date": "2018-04-24T11:36:52Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { holder.tvPropietario.setText(apartamento.getProprietario().getNome()); } catch (java.lang.Exception e) { holder.tvPropietario.setText(\"Apartamento vazio\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4685/buggy-version/Condominio.app.src.main.java.com.example.roberthsantos.condominio.adapters.ListaApartamentosAdapter.java", "BodyUseAPI": ["apartamento.getProprietario().getNome()", "android.widget.TextView.setText(apartamento.getProprietario().getNome())", "com.example.roberthsantos.condominio.model.Apartamento.getProprietario()"], "Fixed commit": "e1fd2516e2d3eaa78a66b758c8849281e8ffcba2", "Url": "https://api.github.com/repos/vikvik98/Atividade-F", "Date": "2018-06-01T08:55:11Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { f = java.util.UUID.class.getDeclaredField(\"$jacocoAccess\"); } catch (java.lang.Exception e) { f = java.lang.UnknownError.class.getDeclaredField(\"$jacocoAccess\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/6367/buggy-version/src.main.java.org.jboss.arquillian.extension.jacoco.client.CoverageDataReceiver.java", "BodyUseAPI": ["java.lang.Class.getDeclaredField(java.lang.String)"], "Fixed commit": "27a343cd103f24a70685082c3ad0d69af4d75d2f", "Url": "https://api.github.com/repos/tobiasstadler/arquillian-extension-jacoco", "Date": "2018-07-12T17:48:25Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { doInsertOrEdit(java.lang.Long.valueOf(j), cityid, locationName, value, dataTime, cityPics); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/372/buggy-version/weatherquery.app.src.main.java.com.jack.aqi_query.MainActivity.java", "BodyUseAPI": ["com.jack.aqi_query.MainActivity.doInsertOrEdit(java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)", "java.lang.Long.valueOf(int)"], "Fixed commit": "d8fe2be8c8c74eca17f71444b9fd2a67264863ce", "Url": "https://api.github.com/repos/jack610336/AQI-app", "Date": "2018-05-18T02:37:39Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { resultCode = con.getResponseCode(); } catch (java.io.IOException ioException) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8997/buggy-version/app.src.main.java.edu.sdsc.neurores.network.RequestWrapper.java", "BodyUseAPI": ["javax.net.ssl.HttpsURLConnection.getResponseCode()"], "Fixed commit": "ac27d09e8ebf96a71fbc8b0a25efdfc7c8a2fc65", "Url": "https://api.github.com/repos/c1mckay/NeuroResAndroid", "Date": "2018-03-20T22:59:30Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { jadx.gui.ui.MainWindow window = new jadx.gui.ui.MainWindow(jadxArgs); window.open(); } catch (jadx.core.utils.exceptions.JadxException e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/2296/buggy-version/jadx-gui.src.main.java.jadx.gui.JadxGUI.java", "BodyUseAPI": ["jadx.gui.ui.MainWindow.open()"], "Fixed commit": "9614929f7732828510e9ce89cce849831f01b3e7", "Url": "https://api.github.com/repos/mgh33/jadx", "Date": "2018-01-16T17:54:52Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { pushThread.join(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/2849/buggy-version/wear.src.main.java.com.example.filipe.socketcontroller.MainActivity.java", "BodyUseAPI": ["com.example.filipe.socketcontroller.MainActivity.PushThread.join()"], "Fixed commit": "76a3100b49d49be5f5c17d6b2d6f7b385dc16b42", "Url": "https://api.github.com/repos/perezjquim/SocketController", "Date": "2018-02-06T20:01:54Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.sql.Statement statement = connection.createStatement(); java.lang.String sql = (((((((\"INSERT INTO prescription (name, client_id, is_validated, price, paid, warnings) VALUES ('\" + inName) + \"', \") + userid) + \", 0, \") + inPrice) + \", 0, '\") + inWarnings) + \"')\"; statement.execute(sql); return getOrderByNameAndUsername(\"inName\", \"username\"); } catch (java.sql.SQLException e) { e.printStackTrace(); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/1993/buggy-version/src.main.java.edu.ithaca.group5.SQLConnector.java", "BodyUseAPI": ["edu.ithaca.group5.SQLConnector.getOrderByNameAndUsername(java.lang.String,java.lang.String)", "java.sql.Connection.createStatement()", "java.sql.Statement.execute(java.lang.String)"], "Fixed commit": "285fb03de0d75f8d82afd400e0c925f4741b4e0b", "Url": "https://api.github.com/repos/martypv/Drug-Dispenser", "Date": "2018-04-30T21:41:44Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { currency = java.util.Currency.getInstance(locale); } catch (java.lang.NullPointerException | java.lang.IllegalArgumentException e) { currency = java.util.Currency.getInstance(new java.util.Locale(\"en\", \"US\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7349/buggy-version/android.src.main.java.com.reactlibrary.RNSystemLanguageModule.java", "BodyUseAPI": ["java.util.Currency.getInstance(java.util.Locale)"], "Fixed commit": "567ac8d8aa62eb79704b777af94643ae54b62f07", "Url": "https://api.github.com/repos/patrickgalbraith/react-native-system-language", "Date": "2018-09-25T07:37:15Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return agileServiceClient.queryIssue(projectId, issueId).getBody(); } catch (java.lang.Exception e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/5538/buggy-version/src.main.java.io.choerodon.devops.infra.persistence.impl.AgileRepositoryImpl.java", "BodyUseAPI": ["agileServiceClient.queryIssue(projectId, issueId).getBody()", "io.choerodon.devops.infra.feign.AgileServiceClient.queryIssue(java.lang.Long,java.lang.Long)"], "Fixed commit": "fc0aa49503be2446a3081d43679e8ff34b3b31cb", "Url": "https://api.github.com/repos/choerodon/devops-service", "Date": "2018-08-17T06:25:39Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (tumultGui.getAudioRecorder().isRecording()) { tumultGui.getAudioRecorder().stopRecordingAndGetTumultRecord(); tumultGui.getAudioRecorder().enlivenAudio(); } } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/2900/buggy-version/app.src.main.java.de.hs_hannover.emerker.tumultimate.MainActivity.java", "BodyUseAPI": ["de.hs_hannover.emerker.tumultimate.TumultGui.getAudioRecorder()", "de.hs_hannover.emerker.tumultimate.TumultGui.getAudioRecorder()", "de.hs_hannover.emerker.tumultimate.TumultGui.getAudioRecorder()", "tumultGui.getAudioRecorder().isRecording()", "tumultGui.getAudioRecorder().enlivenAudio()", "tumultGui.getAudioRecorder().stopRecordingAndGetTumultRecord()"], "Fixed commit": "bb33e2ea5972c13dc75f7848f046cfb7407e1b31", "Url": "https://api.github.com/repos/YertleTurtleGit/Tumultimate", "Date": "2018-01-10T20:36:18Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.projectislands.game.village.Building b = iter.next(); g.drawImage(Building.building_images[b.getBuildingID()], ((b.getPositionX()) - (game_ref.getGameCamera().getxOffset())), ((b.getPositionY()) - (game_ref.getGameCamera().getyOffset())), TileSet.TILEWIDTH, TileSet.TILEHEIGHT, null); } catch (java.util.ConcurrentModificationException cme) { cme.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/6911/buggy-version/src.org.projectislands.game.village.Village.java", "BodyUseAPI": ["game_ref.getGameCamera().getyOffset()", "java.util.Iterator<org.projectislands.game.village.Building>.next()", "org.projectislands.game.Game.getGameCamera()", "game_ref.getGameCamera().getxOffset()", "org.projectislands.game.village.Building.getPositionY()", "java.awt.Graphics.drawImage(Building.building_images[b.getBuildingID()],((b.getPositionX()) - (game_ref.getGameCamera().getxOffset())),((b.getPositionY()) - (game_ref.getGameCamera().getyOffset())),TileSet.TILEWIDTH,TileSet.TILEHEIGHT,<nulltype>)", "org.projectislands.game.Game.getGameCamera()", "org.projectislands.game.village.Building.getBuildingID()", "org.projectislands.game.village.Building.getPositionX()"], "Fixed commit": "0c4c8e6e4d80e74d7113620877434682736f1651", "Url": "https://api.github.com/repos/Jumagoro/Project-Islands", "Date": "2018-08-30T21:49:48Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { io.sentry.RNSentryModule.sentryClient = io.sentry.Sentry.init(dsnString, new io.sentry.android.AndroidSentryClientFactory(this.getReactApplicationContext())); } catch (java.lang.Exception e) { io.sentry.RNSentryModule.logger.info(java.lang.String.format((\"Catching on startWithDsnString, calling callback\" + (e.getMessage())))); errorCallback.invoke(e.getMessage()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8106/buggy-version/android.src.main.java.io.sentry.RNSentryModule.java", "BodyUseAPI": ["io.sentry.Sentry.init(java.lang.String,io.sentry.android.AndroidSentryClientFactory)", "io.sentry.RNSentryModule.getReactApplicationContext()"], "Fixed commit": "f2177322c1d34c729caa69599003d8e705367959", "Url": "https://api.github.com/repos/scootnetworks/react-native-sentry", "Date": "2018-02-15T00:45:41Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { final java.lang.Class<?> slideTouchEvent = classLoader.loadClass(\"com.android.systemui.singlehandmode.SlideTouchEvent\"); de.robv.android.xposed.XposedHelpers.findAndHookMethod(slideTouchEvent, \"startSingleHandMode\", float.class, new de.robv.android.xposed.XC_MethodReplacement() { @java.lang.Override protected java.lang.Object replaceHookedMethod(com.egguncle.xposednavigationbar.hook.hookutil.MethodHookParam param) throws java.lang.Throwable { return null; } }); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4309/buggy-version/app.src.main.java.com.egguncle.xposednavigationbar.hook.hookutil.MoKeeUtil.java", "BodyUseAPI": ["de.robv.android.xposed.XposedHelpers.findAndHookMethod(java.lang.Class<?>,java.lang.String,java.lang.Class,de.robv.android.xposed.XC_MethodReplacement)", "java.lang.ClassLoader.loadClass(java.lang.String)"], "Fixed commit": "93cfb0c544026aa1de49359ca5798958440dab08", "Url": "https://api.github.com/repos/EggUncle/XposedNavigationBar", "Date": "2018-01-18T15:43:23Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (int m = 0; m < (dataList.size()); m++) { T bean = dataList.get(m); try { java.lang.reflect.Field uuidField = bean.getClass().getSuperclass().getDeclaredField(\"uuid\"); uuidField.setAccessible(true); java.lang.String uuid = java.util.UUID.randomUUID().toString(); android.content.ContentValues values = new android.content.ContentValues(); values.put(uuidField.getName(), uuid); java.lang.reflect.Field[] subclass = bean.getClass().getDeclaredFields(); for (int i = 0; i < (subclass.length); i++) { java.lang.reflect.Field valField = subclass[i]; valField.setAccessible(true); java.lang.String valFieldType = valField.getType().toString(); if (\"class java.lang.String\".equals(valFieldType)) { values.put(valField.getName(), ((java.lang.String) (valField.get(bean)))); }else if ((\"long\".equals(valFieldType)) || (\"Long\".equals(valFieldType))) { values.put(valField.getName(), ((java.lang.Long) (valField.get(bean)))); }else if ((\"int\".equals(valFieldType)) || (\"Int\".equals(valFieldType))) { values.put(valField.getName(), ((java.lang.Integer) (valField.get(bean)))); }else if ((\"double\".equals(valFieldType)) || (\"Double\".equals(valFieldType))) { values.put(valField.getName(), ((java.lang.Double) (valField.get(bean)))); } } if (values != null) { db.insert(bean.getClass().getSimpleName(), null, values); } } catch (java.lang.Exception e) { e.printStackTrace(); return 0; } } db.setTransactionSuccessful(); } catch (java.lang.Exception e) { e.printStackTrace(); return 0; } finally { if ((db != null) && (db.isOpen())) { db.close(); db = null; } db.endTransaction(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/9717/buggy-version/app.src.main.java.commondb.db.DaoImpl.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.util.ArrayList<T>.size()", "android.content.ContentValues.put(java.lang.String,java.lang.String)", "java.lang.Exception.printStackTrace()", "java.lang.reflect.Field.setAccessible(boolean)", "T.getClass()", "java.lang.String.equals(java.lang.String)", "java.lang.reflect.Field.getName()", "java.util.ArrayList<T>.get(int)", "java.util.UUID.toString()", "android.content.ContentValues.put(java.lang.String,java.lang.Object)", "android.content.ContentValues.put(java.lang.String,java.lang.Object)", "java.lang.reflect.Field.get(T)", "java.lang.String.equals(java.lang.String)", "java.lang.reflect.Field.getType()", "java.lang.reflect.Field.getName()", "android.content.ContentValues.put(java.lang.String,java.lang.Object)", "java.lang.String.equals(java.lang.String)", "java.lang.Class<? extends java.lang.Object>.getSimpleName()", "java.lang.Class<? extends java.lang.Object>.getSuperclass()", "T.getClass()", "java.lang.reflect.Field.setAccessible(boolean)", "java.lang.reflect.Field.get(T)", "java.lang.reflect.Field.getName()", "java.lang.Class<? super ? extends java.lang.Object>.getDeclaredField(java.lang.String)", "java.lang.Class<?>.toString()", "java.lang.reflect.Field.getName()", "T.getClass()", "java.lang.String.equals(java.lang.String)", "java.util.UUID.randomUUID()", "java.lang.String.equals(java.lang.String)", "android.database.sqlite.SQLiteDatabase.insert(java.lang.String,<nulltype>,android.content.ContentValues)", "java.lang.reflect.Field.get(T)", "java.lang.Class<? extends java.lang.Object>.getDeclaredFields()", "java.lang.reflect.Field.getName()", "android.content.ContentValues.put(java.lang.String,java.lang.Object)", "java.lang.reflect.Field.get(T)", "java.lang.String.equals(java.lang.String)", "android.database.sqlite.SQLiteDatabase.setTransactionSuccessful()"], "Fixed commit": "1420a47b03d12c6a3d85d0f0515920a260880ee4", "Url": "https://api.github.com/repos/Wt1987/commonDB", "Date": "2018-07-19T03:31:15Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(1000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8311/buggy-version/src.main.java.runnable.TrainSequence.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "8cfefa0490fed3f617689c3a69bd483921c8fe2a", "Url": "https://api.github.com/repos/InventiveCogs/simplifiedMojo", "Date": "2018-03-14T15:48:39Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { iyek_widget_touch(); } catch (java.lang.Exception e) { android.widget.Toast.makeText(this, \"Oops Something Bad is happened!\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/2092/buggy-version/app.src.main.java.com.unbi.kangleiiyek.GlobalActionBarService.java", "BodyUseAPI": ["com.unbi.kangleiiyek.GlobalActionBarService.iyek_widget_touch()"], "Fixed commit": "03891ed58123974c0b695479eb36898074fd0012", "Url": "https://api.github.com/repos/ProjectUNBI/KangleiIyek", "Date": "2018-04-29T23:40:22Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { iyekshake(); } catch (java.lang.Exception e) { android.widget.Toast.makeText(this, \"Oops Something Bad is happened!\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/2092/buggy-version/app.src.main.java.com.unbi.kangleiiyek.GlobalActionBarService.java", "BodyUseAPI": ["com.unbi.kangleiiyek.GlobalActionBarService.iyekshake()"], "Fixed commit": "03891ed58123974c0b695479eb36898074fd0012", "Url": "https://api.github.com/repos/ProjectUNBI/KangleiIyek", "Date": "2018-04-29T23:40:22Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (!(clipboard.hasPrimaryClip())) { }else if (!(clipboard.getPrimaryClipDescription().hasMimeType(com.unbi.kangleiiyek.MIMETYPE_TEXT_PLAIN))) { }else { android.content.ClipData.Item item = clipboard.getPrimaryClip().getItemAt(0); if (item != null) { cliphistory = item.getText().toString(); }else { cliphistory = \"\"; } } } catch (java.lang.Exception e) { android.widget.Toast.makeText(this, \"Clipboard was emptied\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/2092/buggy-version/app.src.main.java.com.unbi.kangleiiyek.GlobalActionBarService.java", "BodyUseAPI": ["clipboard.getPrimaryClipDescription().hasMimeType(com.unbi.kangleiiyek.MIMETYPE_TEXT_PLAIN)", "android.content.ClipboardManager.hasPrimaryClip()", "ClipData.Item.getText()", "item.getText().toString()", "android.content.ClipboardManager.getPrimaryClipDescription()", "android.content.ClipboardManager.getPrimaryClip()", "clipboard.getPrimaryClip().getItemAt(int)"], "Fixed commit": "03891ed58123974c0b695479eb36898074fd0012", "Url": "https://api.github.com/repos/ProjectUNBI/KangleiIyek", "Date": "2018-04-29T23:40:22Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (assignment != null) { java.lang.String uri = java.lang.String.format(org.openmrs.module.bedmanagement.atomfeed.BedAssignmentAdvice.TEMPLATE, assignment.getUuid()); return new org.ict4h.atomfeed.server.service.Event(java.util.UUID.randomUUID().toString(), org.openmrs.module.bedmanagement.atomfeed.BedAssignmentAdvice.TITLE, null, uri, uri, org.openmrs.module.bedmanagement.atomfeed.BedAssignmentAdvice.CATEGORY); } } catch (java.net.URISyntaxException ex) { throw new java.lang.RuntimeException(ex.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/5476/buggy-version/api.src.main.java.org.openmrs.module.bedmanagement.atomfeed.BedAssignmentAdvice.java", "BodyUseAPI": ["java.util.UUID.randomUUID()", "java.util.UUID.toString()", "org.openmrs.module.bedmanagement.entity.BedPatientAssignment.getUuid()", "java.lang.String.format(java.lang.String,assignment.getUuid())"], "Fixed commit": "aaf92e2264514e15436d11788a85001c1b226e64", "Url": "https://api.github.com/repos/sanishmaharjan/openmrs-module-bedmanagement", "Date": "2018-03-05T14:28:37Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(2000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4681/buggy-version/app.src.main.java.io.intelehealth.client.services.DownloadMindmapsTask.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "8b92220f2c62e51ad27e274c392ced0a1b082409", "Url": "https://api.github.com/repos/Intelehealth/Android-Mobile-Client", "Date": "2018-01-08T12:57:40Z"},
{"Line": "=>494", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { if (outbuf.hasData()) { outbuf.flush(ioSession.channel()); }else { ioSession.clearEvent(java.nio.channels.SelectionKey.OP_WRITE); } } finally { outputLock.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/5296/buggy-version/httpcore5.src.main.java.org.apache.hc.core5.http.impl.nio.AbstractHttp1StreamDuplexer.java", "BodyUseAPI": ["org.apache.hc.core5.reactor.ProtocolIOSession.clearEvent(int)", "org.apache.hc.core5.http.impl.nio.SessionOutputBufferImpl.hasData()", "org.apache.hc.core5.reactor.ProtocolIOSession.channel()", "org.apache.hc.core5.http.impl.nio.SessionOutputBufferImpl.flush(ioSession.channel())"], "Fixed commit": "a915f30ae36043d16f74cc094659f60890c17c2d", "Url": "https://api.github.com/repos/rschmitt/httpcomponents-core", "Date": "2018-10-09T12:07:03Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.nio.file.Files.move(new java.io.File(originalArtifactPath).toPath(), new java.io.File(artifactPath).toPath(), java.nio.file.StandardCopyOption.REPLACE_EXISTING); if ((run.getActions(io.snyk.plugins.SnykSecurityAction.class).size()) <= 0) { run.addAction(new io.snyk.plugins.SnykSecurityAction(run, artifactName)); } archiveArtifacts(run, launcher, listener, workspace); } catch (java.lang.Exception e) { listener.getLogger().println((\"Failed to create report artifact \" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3789/buggy-version/src.main.java.io.snyk.plugins.SnykSecurityBuilder.java", "BodyUseAPI": ["io.snyk.plugins.SnykSecurityBuilder.archiveArtifacts(io.snyk.plugins.Run<?, ?>,io.snyk.plugins.Launcher,io.snyk.plugins.TaskListener,io.snyk.plugins.FilePath)", "java.nio.file.Files.move(java.nio.file.Path,java.nio.file.Path,java.nio.file.StandardCopyOption)", "io.snyk.plugins.Run<?, ?>.addAction(io.snyk.plugins.SnykSecurityAction)", "java.io.File.toPath()", "io.snyk.plugins.Run<?, ?>.getActions(java.lang.Class)", "run.getActions(io.snyk.plugins.SnykSecurityAction.class).size()", "java.io.File.toPath()"], "Fixed commit": "29d9843d06182e146089323625519da17d76b89b", "Url": "https://api.github.com/repos/jenkinsci/snyk-security-scanner-plugin", "Date": "2018-08-23T10:03:54Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mContext = nContext; mTypedarray = nContext.obtainStyledAttributes(nAttrs, R.styleable.CustomInput); inflate(nContext, R.layout.custom_spinner, this); } catch (java.lang.Exception e) { android.util.Log.wtf(\"asdadaadtest123\", (\"ERR2 : \" + (e.getMessage()))); android.util.Log.wtf(\"asdadaadtest123\", (\"ERR2 : \" + (e.getLocalizedMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/1835/buggy-version/personalstylerlib.src.main.java.com.themejunky.personalstylerlib.customviews.CustomSpinner.java", "BodyUseAPI": ["com.themejunky.personalstylerlib.customviews.CustomSpinner.inflate(android.content.Context,R.layout.custom_spinner,com.themejunky.personalstylerlib.customviews.CustomSpinner)", "android.content.Context.obtainStyledAttributes(android.util.AttributeSet,R.styleable.CustomInput)"], "Fixed commit": "719e4d86132b53f67a491096a12d4d5e578584b3", "Url": "https://api.github.com/repos/themejunky/PersonalStylerLib", "Date": "2018-08-02T09:54:45Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (int i = 1; i <= (resultList.size()); i++) { int x = resultList.get((i - 1)).getX(); int y = resultList.get((i - 1)).getY(); writer.append(((((java.lang.Integer.toString(x)) + ',') + (java.lang.Integer.toString(y))) + '\\n')); } } catch (java.lang.Exception e) { java.lang.System.out.println(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8096/buggy-version/src.main.java.mars.out.FileOutput.java", "BodyUseAPI": ["mars.out.FileOutput.get(int)", "java.lang.Integer.toString(int)", "java.lang.Integer.toString(int)", "resultList.get((i - 1)).getX()", "mars.out.FileOutput.size()", "java.io.FileWriter.append(java.lang.String)", "mars.out.FileOutput.get(int)", "resultList.get((i - 1)).getY()"], "Fixed commit": "071ff5d655f7bf121598652f0cd497fc791dd772", "Url": "https://api.github.com/repos/RossBlassingame/JPL-CUSeniorProjects", "Date": "2018-02-16T02:14:43Z"},
{"Line": "=>465", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (theUser.isPasswordLocked()) { showUnlockAction = true; } } catch (com.novell.ldapchai.exception.ChaiException e) { password.pwm.http.servlet.forgottenpw.ForgottenPasswordUtil.LOGGER.debug(pwmRequest, (\"unexpected error checking if user's password is locked: \" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7595/buggy-version/server.src.main.java.password.pwm.http.servlet.forgottenpw.ForgottenPasswordUtil.java", "BodyUseAPI": ["com.novell.ldapchai.ChaiUser.isPasswordLocked()"], "Fixed commit": "7da937cf82a58e14f34e75e0a069579667e43797", "Url": "https://api.github.com/repos/pwm-project/pwm", "Date": "2017-11-30T16:20:06Z"},
{"Line": "=>754", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { currentRule = ((app.service.tasks.RoutingSmsRule) (q.getSingleResult())); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/1829/buggy-version/src.main.java.app.service.tasks.SoftswitchUpdateTask.java", "BodyUseAPI": ["javax.persistence.Query.getSingleResult()"], "Fixed commit": "5cd0b0913892f396611292c894c2cfc0495b35dc", "Url": "https://api.github.com/repos/Artem76/Billing", "Date": "2018-10-05T06:56:40Z"},
{"Line": "=>884", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return env.getProperty(\"asyncEnabled\").equalsIgnoreCase(\"true\"); } catch (java.lang.NullPointerException e) { gov.healthit.chpl.manager.impl.CertifiedProductDetailsManagerImpl.LOGGER.debug(\"Unable to read asyncEnabled property flag\"); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/355/buggy-version/chpl.chpl-service.src.main.java.gov.healthit.chpl.manager.impl.CertifiedProductDetailsManagerImpl.java", "BodyUseAPI": ["org.springframework.core.env.Environment.getProperty(java.lang.String)", "env.getProperty(\"asyncEnabled\").equalsIgnoreCase(java.lang.String)"], "Fixed commit": "4351d2ff3dff5bbb4562e103b049955e1dd9c9ee", "Url": "https://api.github.com/repos/kekey1/chpl-api", "Date": "2018-05-07T14:40:31Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { prefs.updateLastUsedGuiSetting(mainWindow.getCurrentGuiSetting()); mainWindow.hide(); mainWindow.releaseResources(); } catch (java.lang.NullPointerException npe) { seedu.investigapptor.ui.UiManager.logger.info(\"Closing program without inputting password.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/7468/buggy-version/src.main.java.seedu.investigapptor.ui.UiManager.java", "BodyUseAPI": ["seedu.investigapptor.ui.MainWindow.hide()", "seedu.investigapptor.model.UserPrefs.updateLastUsedGuiSetting(mainWindow.getCurrentGuiSetting())", "seedu.investigapptor.ui.MainWindow.getCurrentGuiSetting()", "seedu.investigapptor.ui.MainWindow.releaseResources()"], "Fixed commit": "87648f5b1791d7a479d66d81b9317ac32d9ff88b", "Url": "https://api.github.com/repos/leowweiching/main", "Date": "2018-03-27T12:38:36Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (!(outputFile.exists())) { outputFile.createNewFile(); } } catch (java.io.IOException exc) { throw new picocli.CommandLine.ParameterException(spec.commandLine(), (\"A problem occurred while creating the output file. Details: \" + (exc.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/2097/buggy-version/src.main.java.eu.stamp_project.inspector.MethodInspectorMain.java", "BodyUseAPI": ["java.io.File.exists()", "java.io.File.createNewFile()"], "Fixed commit": "cf9382dca4f3178c40fb54bf110e5dfbbcad650c", "Url": "https://api.github.com/repos/STAMP-project/method-inspector", "Date": "2018-10-10T12:15:49Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { preSettlement = java.lang.Float.parseFloat(quoteEntity.getPre_settlement()); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9710/buggy-version/app.src.main.java.com.shinnytech.futures.view.fragment.CurrentDayFragment.java", "BodyUseAPI": ["java.lang.Float.parseFloat(quoteEntity.getPre_settlement())", "com.shinnytech.futures.model.bean.futureinfobean.QuoteEntity.getPre_settlement()"], "Fixed commit": "f986846ccf17d1eb279c911fb4158090cc5c0606", "Url": "https://api.github.com/repos/shinnytech/shinny-futures-android", "Date": "2018-09-25T12:45:17Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.lemmechekuntappd.imageconversion.GoogleVisionSample.sample(); } catch (java.lang.Exception e) { int a = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5767/buggy-version/src.main.java.com.lemmechekuntappd.imageconversion.ConvertedTextList.java", "BodyUseAPI": ["com.lemmechekuntappd.imageconversion.GoogleVisionSample.sample()"], "Fixed commit": "2b2eeaed1785fbc3d7bfd5bedece5e3cc492ca71", "Url": "https://api.github.com/repos/johncrider/imageconversion", "Date": "2018-10-16T13:16:54Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.HashMap<java.lang.String, java.util.HashMap<java.lang.String, java.lang.String>> allPosts = dataSnapshot.getValue(hashMapGenericTypeIndicator); collectPosts(allPosts); } catch (java.lang.Exception e) { java.util.ArrayList<java.util.HashMap<java.lang.String, java.lang.String>> allPostsList = dataSnapshot.getValue(arrayListGenericTypeIndicator); collectPostsList(allPostsList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5223/buggy-version/app.src.main.java.chub45.benson.hitch.MapFragment.java", "BodyUseAPI": ["chub45.benson.hitch.MapFragment.3.collectPosts(java.util.HashMap<java.lang.String, java.util.HashMap<java.lang.String, java.lang.String>>)", "com.google.firebase.database.DataSnapshot.getValue(com.google.firebase.database.GenericTypeIndicator<java.util.HashMap<java.lang.String, java.util.HashMap<java.lang.String, java.lang.String>>>)"], "Fixed commit": "2b4058e2a7b565364c623696324e998146d07b4d", "Url": "https://api.github.com/repos/lnguyent01/Hitch", "Date": "2018-03-09T21:50:58Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { cal.set(java.lang.Integer.parseInt(dateString.substring(0, 3)), java.lang.Integer.parseInt(dateString.substring(4, 5)), java.lang.Integer.parseInt(dateString.substring(6, 7))); } catch (java.lang.IndexOutOfBoundsException | java.lang.NumberFormatException e) { throw new seedu.address.logic.commands.exceptions.CommandException(MESSAGE_IO_ERROR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3704/buggy-version/src.main.java.seedu.address.commons.util.IcsUtil.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.substring(int,int)", "java.util.Calendar.set(int,int,int)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "36e66b0abba206c26ec88ff5600dbf925441e9ad", "Url": "https://api.github.com/repos/nianfei97/addressbook-level4", "Date": "2018-10-15T02:09:19Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { icsDay = seedu.address.commons.util.IcsUtil.icsDateToDay(startdate); } catch (seedu.address.logic.commands.exceptions.CommandException e) { throw new seedu.address.logic.commands.exceptions.CommandException(MESSAGE_IO_ERROR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3704/buggy-version/src.main.java.seedu.address.commons.util.IcsUtil.java", "BodyUseAPI": ["seedu.address.commons.util.IcsUtil.icsDateToDay(java.lang.String)"], "Fixed commit": "36e66b0abba206c26ec88ff5600dbf925441e9ad", "Url": "https://api.github.com/repos/nianfei97/addressbook-level4", "Date": "2018-10-15T02:09:19Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mService.startService(i); } catch (java.lang.Exception e) { mService.getPlaybackManager().handlePauseRequest(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/1434/buggy-version/nuclei-android.src.main.java.nuclei3.media.playback.ExoPlayerPlayback.java", "BodyUseAPI": ["nuclei3.media.MediaService.startService(android.content.Intent)"], "Fixed commit": "4bdb547bd51d064f83acbe2761ef01478cc0399a", "Url": "https://api.github.com/repos/lifechurch/nuclei-android", "Date": "2018-07-30T16:06:29Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { infoObject = this.loadPipelineConfiguration(junitSubmitterRequest, junitSubmitterRequest.getJenkinsProjectName(), junitSubmitterRequest.getJenkinsServerURL()); } catch (java.lang.Exception ex) { storeWhenNotSuccess(junitSubmitterRequest, junitSubmitter, build, runWrapper.getCurrentResult(), logger, JunitSubmitterResult.STATUS_FAILED); throw new java.lang.Exception(ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/961/buggy-version/src.main.java.com.qasymphony.ci.plugin.action.SubmitJUnitStep.java", "BodyUseAPI": ["com.qasymphony.ci.plugin.action.SubmitJUnitStep.SubmitJUnitStepExecution.loadPipelineConfiguration(com.qasymphony.ci.plugin.submitter.JunitSubmitterRequest,junitSubmitterRequest.getJenkinsProjectName(),junitSubmitterRequest.getJenkinsServerURL())", "com.qasymphony.ci.plugin.submitter.JunitSubmitterRequest.getJenkinsProjectName()", "com.qasymphony.ci.plugin.submitter.JunitSubmitterRequest.getJenkinsServerURL()"], "Fixed commit": "d938e1fe1255312902b2685162b7e5d3b255544a", "Url": "https://api.github.com/repos/QASymphony/jenkin-qtest-plugin", "Date": "2018-03-01T03:21:16Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { val = eval.evaluate(c); } catch (java.lang.NullPointerException npe) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6194/buggy-version/fineract-provider.src.main.java.org.apache.fineract.infrastructure.bulkimport.importhandler.ImportHandlerUtils.java", "BodyUseAPI": ["org.apache.fineract.infrastructure.bulkimport.importhandler.FormulaEvaluator.evaluate(org.apache.fineract.infrastructure.bulkimport.importhandler.Cell)"], "Fixed commit": "11676e22fbaab36a16ba1db203e142698f00510a", "Url": "https://api.github.com/repos/wkk91193/incubator-fineract", "Date": "2018-06-15T17:30:04Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { val = eval.evaluate(c); } catch (java.lang.NullPointerException npe) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6194/buggy-version/fineract-provider.src.main.java.org.apache.fineract.infrastructure.bulkimport.importhandler.ImportHandlerUtils.java", "BodyUseAPI": ["org.apache.fineract.infrastructure.bulkimport.importhandler.FormulaEvaluator.evaluate(org.apache.fineract.infrastructure.bulkimport.importhandler.Cell)"], "Fixed commit": "11676e22fbaab36a16ba1db203e142698f00510a", "Url": "https://api.github.com/repos/wkk91193/incubator-fineract", "Date": "2018-06-15T17:30:04Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { val = eval.evaluate(c); } catch (java.lang.NullPointerException npe) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6194/buggy-version/fineract-provider.src.main.java.org.apache.fineract.infrastructure.bulkimport.importhandler.ImportHandlerUtils.java", "BodyUseAPI": ["org.apache.fineract.infrastructure.bulkimport.importhandler.FormulaEvaluator.evaluate(org.apache.fineract.infrastructure.bulkimport.importhandler.Cell)"], "Fixed commit": "11676e22fbaab36a16ba1db203e142698f00510a", "Url": "https://api.github.com/repos/wkk91193/incubator-fineract", "Date": "2018-06-15T17:30:04Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { val = eval.evaluate(c); } catch (java.lang.NullPointerException npe) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6194/buggy-version/fineract-provider.src.main.java.org.apache.fineract.infrastructure.bulkimport.importhandler.ImportHandlerUtils.java", "BodyUseAPI": ["org.apache.fineract.infrastructure.bulkimport.importhandler.FormulaEvaluator.evaluate(org.apache.fineract.infrastructure.bulkimport.importhandler.Cell)"], "Fixed commit": "11676e22fbaab36a16ba1db203e142698f00510a", "Url": "https://api.github.com/repos/wkk91193/incubator-fineract", "Date": "2018-06-15T17:30:04Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { val = eval.evaluate(c); } catch (java.lang.NullPointerException npe) { return 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6194/buggy-version/fineract-provider.src.main.java.org.apache.fineract.infrastructure.bulkimport.importhandler.ImportHandlerUtils.java", "BodyUseAPI": ["org.apache.fineract.infrastructure.bulkimport.importhandler.FormulaEvaluator.evaluate(org.apache.fineract.infrastructure.bulkimport.importhandler.Cell)"], "Fixed commit": "11676e22fbaab36a16ba1db203e142698f00510a", "Url": "https://api.github.com/repos/wkk91193/incubator-fineract", "Date": "2018-06-15T17:30:04Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.example.android.thebakingapp.RecipeAndIngredient.deleteAll(com.example.android.thebakingapp.RecipeAndIngredient.class); } catch (android.database.sqlite.SQLiteException e) { android.util.Log.e(LOG_TAG, \"First time addition to DB\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8973/buggy-version/app.src.main.java.com.example.android.thebakingapp.RecipeFragment.java", "BodyUseAPI": ["com.example.android.thebakingapp.RecipeAndIngredient.deleteAll(java.lang.Class)"], "Fixed commit": "0fa0b5b829d1762bac7e5479e52c95aea94f0372", "Url": "https://api.github.com/repos/aleronarjun/The-Baking-App", "Date": "2018-03-21T20:05:33Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.email = object.getString(\"email\"); } catch (org.json.JSONException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9218/buggy-version/giveitforward.src.main.java.giveitforward.models.User.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "03c1f0d972e70f3c901d2917beb5141e61190d45", "Url": "https://api.github.com/repos/GiveItForward/Server", "Date": "2018-03-06T06:11:29Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.bio = object.getString(\"bio\"); } catch (org.json.JSONException e) { this.bio = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9218/buggy-version/giveitforward.src.main.java.giveitforward.models.User.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "03c1f0d972e70f3c901d2917beb5141e61190d45", "Url": "https://api.github.com/repos/GiveItForward/Server", "Date": "2018-03-06T06:11:29Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.username = object.getString(\"username\"); } catch (org.json.JSONException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9218/buggy-version/giveitforward.src.main.java.giveitforward.models.User.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "03c1f0d972e70f3c901d2917beb5141e61190d45", "Url": "https://api.github.com/repos/GiveItForward/Server", "Date": "2018-03-06T06:11:29Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { la.handle(channel, user, s); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6074/buggy-version/bl4ckb0t.src.bl4ckscor3.bot.bl4ckb0t.modules.LinkManager.java", "BodyUseAPI": ["bl4ckscor3.bot.bl4ckb0t.util.LinkAction.handle(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "2acc659034c72a0075c7b893193d66cfdeb6ab37", "Url": "https://api.github.com/repos/bl4ckscor3/bl4ckb0t", "Date": "2018-05-14T19:41:39Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { c = javax.xml.bind.DatatypeConverter.parseDateTime(fc); } catch (java.lang.Exception e) { org.cowjumping.FitsUtils.QuickHeaderInfo.myLogger.warn(\"While converting DATE-OBS: \", e); c = null; } finally { if (c != null) return c.getTime(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/1106/buggy-version/src.main.java.org.cowjumping.FitsUtils.QuickHeaderInfo.java", "BodyUseAPI": ["javax.xml.bind.DatatypeConverter.parseDateTime(java.lang.String)"], "Fixed commit": "2fc8848497a7b064c09af40797b638148ebed5f9", "Url": "https://api.github.com/repos/drhaz/VisualFitsBrowser", "Date": "2018-03-02T21:01:48Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { javafx.stage.Stage stage = new javafx.stage.Stage(); com.rshu.lab.BooksCatalogueController controller = ((com.rshu.lab.BooksCatalogueController) (getController(\"/view/books_catalogue_view.fxml\", \"Books Catalogue\", false, stage))); controller.setDialogStage(stage); controller.setMainApp(this); stage.showAndWait(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6568/buggy-version/src.main.java.com.rshu.lab.App.java", "BodyUseAPI": ["javafx.stage.Stage.showAndWait()", "com.rshu.lab.BooksCatalogueController.setMainApp(com.rshu.lab.App)", "com.rshu.lab.BooksCatalogueController.setDialogStage(javafx.stage.Stage)", "com.rshu.lab.App.getController(java.lang.String,java.lang.String,boolean,javafx.stage.Stage)"], "Fixed commit": "5abc1c0a938c519bbb130b3f8160b327386a595f", "Url": "https://api.github.com/repos/OchedinValannor/SpringJDBC-Practice", "Date": "2018-06-17T08:53:02Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.google.zxing.PlanarYUVLuminanceSource source = buildLuminanceSource(mData, mSize.width, mSize.height); if (source != null) { com.google.zxing.BinaryBitmap bitmap = new com.google.zxing.BinaryBitmap(new com.google.zxing.common.HybridBinarizer(source)); com.google.zxing.Result rawResult = multiFormatReader.decodeWithState(bitmap); return rawResult == null ? null : rawResult.getText(); } } catch (com.google.zxing.ReaderException re) { } catch (java.lang.IllegalArgumentException e) { } catch (java.lang.Exception e) { } finally { multiFormatReader.reset(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5089/buggy-version/qrlib.src.main.java.com.qr.decode.AllDecode.java", "BodyUseAPI": ["com.google.zxing.Result.getText()", "com.google.zxing.MultiFormatReader.decodeWithState(com.google.zxing.BinaryBitmap)", "com.qr.decode.AllDecode.buildLuminanceSource(byte[],mSize.width,mSize.height)"], "Fixed commit": "72a271c13c898f1d8202beb02037f2c8c4c68671", "Url": "https://api.github.com/repos/sltpaya/qrcode", "Date": "2018-01-31T07:50:01Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.io.BufferedReader logfile = new java.io.BufferedReader(new java.io.FileReader(file)); do { str = logfile.readLine(); } while (str != null ); logfile.close(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6939/buggy-version/src.main.java.mojo.GameLogger.java", "BodyUseAPI": ["java.io.BufferedReader.readLine()", "java.io.BufferedReader.close()"], "Fixed commit": "236b0f94b712248a5233fd279ca66f04e7da741f", "Url": "https://api.github.com/repos/mikePanagos/risky", "Date": "2018-10-05T00:04:09Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { values[i] = manifest.getMainAttributes().getValue(names[i]); if ((values[i]) != null) { found++; } } catch (java.lang.IllegalArgumentException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/2638/buggy-version/src.main.java.org.foxlabs.util.resource.ResourceHelper.java", "BodyUseAPI": ["java.util.jar.Attributes.getValue(java.lang.String)", "java.util.jar.Manifest.getMainAttributes()"], "Fixed commit": "76cfcbd342fe6f4f60a0c82cf7a34126d9d31685", "Url": "https://api.github.com/repos/foxinboxx/foxlabs-common", "Date": "2018-10-25T18:33:42Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { image = new javafx.scene.image.Image(((PRODUCT_IMAGE_DIR_NAME) + (this.product.getImagePath()))); } catch (java.lang.IllegalArgumentException e) { image = new javafx.scene.image.Image(DEFAULT_IMAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/332/buggy-version/src.main.java.app.controllers.sale.DescriptionViewController.java", "BodyUseAPI": ["app.entities.Product.getImagePath()"], "Fixed commit": "00002ba4d1d1f167d56c1b721b3c508050009f05", "Url": "https://api.github.com/repos/VelislavaRogleva/BarPOS", "Date": "2018-01-14T09:51:15Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String profilePic = currentUser.getParseFile(\"profilePic\").getUrl(); if (profilePic != null) { com.bumptech.glide.Glide.with(getContext()).load(profilePic).apply(com.bumptech.glide.request.RequestOptions.circleCropTransform()).into(ivProfilePic); } } catch (java.lang.NullPointerException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9888/buggy-version/app.src.main.java.me.kathyhuang.instagram.ProfileFragment.java", "BodyUseAPI": ["me.kathyhuang.instagram.ProfileFragment.getContext()", "com.bumptech.glide.Glide.with(getContext()).load(profilePic).apply(com.bumptech.glide.request.RequestOptions.circleCropTransform())", "com.bumptech.glide.request.RequestOptions.circleCropTransform()", "com.bumptech.glide.Glide.with(getContext())", "currentUser.getParseFile(\"profilePic\").getUrl()", "com.bumptech.glide.Glide.with(getContext()).load(profilePic).apply(com.bumptech.glide.request.RequestOptions.circleCropTransform()).into(com.parse.ParseImageView)", "com.bumptech.glide.Glide.with(getContext()).load(java.lang.String)", "com.parse.ParseUser.getParseFile(java.lang.String)"], "Fixed commit": "a4be2b49674caff60f3ba19c881cffd485d43dc5", "Url": "https://api.github.com/repos/khuang/Instagram", "Date": "2018-07-12T21:31:26Z"},
{"Line": "=>637", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((pause != null) && ((java.lang.Integer.parseInt(pause)) >= 0)) { enamel.Authoring.scenarioReader.append(((\"/~pause:\" + pause) + \"\\n\")); }else { javax.swing.JOptionPane.showMessageDialog(null, \"Error, Please Make Sure Pause Time is Greater than 0.\"); } } catch (java.lang.Exception e2) { javax.swing.JOptionPane.showMessageDialog(null, ((\"Error, Please Make Sure Pause Time Is a Valid Time (less than \" + (java.lang.Integer.MAX_VALUE)) + \") and is an Integer.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/904/buggy-version/Enamel.src.enamel.Authoring.java", "BodyUseAPI": ["javax.swing.JOptionPane.showMessageDialog(<nulltype>,java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "javax.swing.JTextArea.append(java.lang.String)"], "Fixed commit": "a69bd5c7b738b509fd1d0436caf9c822a95a2e7d", "Url": "https://api.github.com/repos/samank3/CRS_Group3", "Date": "2018-03-11T02:27:26Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { eventType = net.diespendendose.obsremotejava.events.EventType.valueOf(elem.getAsJsonObject().get(\"update-type\").getAsString()); } catch (java.lang.Exception e) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5602/buggy-version/src.main.java.net.diespendendose.obsremotejava.OBSCommunicator.java", "BodyUseAPI": ["com.google.gson.JsonElement.getAsJsonObject()", "elem.getAsJsonObject().get(\"update-type\").getAsString()", "net.diespendendose.obsremotejava.events.EventType.valueOf(elem.getAsJsonObject().get(\"update-type\").getAsString())", "elem.getAsJsonObject().get(java.lang.String)"], "Fixed commit": "0316ee6c8dcc43981025bc1c6481351c1799a861", "Url": "https://api.github.com/repos/Twasi/websocket-obs-java", "Date": "2018-08-09T16:15:43Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { listOfDates = new java.util.ArrayList<java.lang.String>(entries.keySet()); } catch (java.lang.Exception e) { java.lang.System.out.println(\"Bug\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/79/buggy-version/app.src.main.java.com.example.robertchung.journalapp.FragmentHistory.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.keySet()"], "Fixed commit": "59ff4694835c61f847ce64743549b042ed13fd4b", "Url": "https://api.github.com/repos/Altrum/JournalApp", "Date": "2018-03-14T15:36:04Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return org.magic.services.MTGControler.getInstance().getLangService().getCapitalize(columns[column]); } catch (java.lang.Exception e) { return columns[column]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6910/buggy-version/src.main.java.org.magic.gui.models.MagicCardTableModel.java", "BodyUseAPI": ["org.magic.services.MTGControler.getInstance()", "org.magic.services.MTGControler.getInstance().getLangService().getCapitalize(java.lang.String)", "org.magic.services.MTGControler.getInstance().getLangService()"], "Fixed commit": "86d81ceee2fc47e67d82fba57d65afd5201e962a", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2018-07-13T14:06:55Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return org.magic.services.MTGControler.getInstance().getLangService().getCapitalize(org.magic.gui.models.BoostersTableModel.COLUMNS[column]); } catch (java.lang.Exception e) { return org.magic.gui.models.BoostersTableModel.COLUMNS[column]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6910/buggy-version/src.main.java.org.magic.gui.models.BoostersTableModel.java", "BodyUseAPI": ["org.magic.services.MTGControler.getInstance().getLangService().getCapitalize(java.lang.String)", "org.magic.services.MTGControler.getInstance().getLangService()", "org.magic.services.MTGControler.getInstance()"], "Fixed commit": "86d81ceee2fc47e67d82fba57d65afd5201e962a", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2018-07-13T14:06:55Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { connectDB(\"hibernate.cfg.xml\"); } catch (org.hibernate.HibernateException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/4238/buggy-version/src.com.application.word.WordLearnApp.java", "BodyUseAPI": ["com.application.word.WordLearnApp.connectDB(java.lang.String)"], "Fixed commit": "5dda17afc596804b5072b6b76f9753b7e843d97e", "Url": "https://api.github.com/repos/Saidar/wordlearn", "Date": "2018-08-17T22:34:39Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { boolean result = matrixMul.gpuMatrixMul(wa, wb, wa); android.util.Log.i(eu.project.rapid.demo.DemoActivity.TAG, (\"Finished GVirtuS matrixMul with DFE: isResultValid=\" + result)); } catch (java.lang.Exception e) { android.util.Log.e(eu.project.rapid.demo.DemoActivity.TAG, (\"CUDA offloading failed: \" + e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3677/buggy-version/rapidDemoApp.src.main.java.eu.project.rapid.demo.DemoActivity.java", "BodyUseAPI": ["android.util.Log.i(java.lang.String,java.lang.String)", "eu.project.rapid.gvirtus.MatrixMul.gpuMatrixMul(int,int,int)"], "Fixed commit": "1ac8036363c24bcdcef8104a189f94f5b645e64c", "Url": "https://api.github.com/repos/RapidProjectH2020/rapid-android-DemoApp", "Date": "2018-03-03T20:43:13Z"},
{"Line": "=>377", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(2000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5939/buggy-version/src.main.java.pageObjects.ProjectPage.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "bbd8cc911a3097920f4dfd2632e4e5ea40e49281", "Url": "https://api.github.com/repos/mshafea/HomifyWeb", "Date": "2018-08-24T08:29:37Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((this.bloodGroup) != null) bloodGroup = org.egov.user.domain.model.enums.BloodGroup.valueOf(this.bloodGroup.toUpperCase()); } catch (java.lang.Exception e) { bloodGroup = org.egov.user.domain.model.enums.BloodGroup.fromValue(this.bloodGroup); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5990/buggy-version/core.egov-user.src.main.java.org.egov.user.web.contract.UserRequest.java", "BodyUseAPI": ["org.egov.user.domain.model.enums.BloodGroup.valueOf(java.lang.String)", "java.lang.String.toUpperCase()"], "Fixed commit": "6e363675aa490bf45dc173fab72c770d7dde35a6", "Url": "https://api.github.com/repos/egovernments/egov-services", "Date": "2018-04-17T10:16:30Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { this.controller = new net.kaikk.msm.server.ServerController(this); } catch (java.lang.Throwable t) { this.sendRawMessageToAttachedActors((\"An error occurred while starting this server process: \\n\" + (net.kaikk.msm.util.Utils.stackTraceToString(t)))); this.lines.add(new net.kaikk.msm.server.ConsoleLine((\"An error occurred while starting this server process: \\n\" + (net.kaikk.msm.util.Utils.stackTraceToString(t))), true)); this.controller = null; this.setState(net.kaikk.msm.server.Server.ServerState.STOPPED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6991/buggy-version/src.main.java.net.kaikk.msm.server.Server.java", "BodyUseAPI": [], "Fixed commit": "5a8a4517f969a58391b8e2d4a6ffdde793dff631", "Url": "https://api.github.com/repos/ModularServersManager/ModularServersManager", "Date": "2018-01-09T10:41:15Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { Warehouse w = new Warehouse(user_name, url, database, password); } catch (java.lang.Exception e) { java.lang.System.out.println(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/4005/buggy-version/Main.java", "BodyUseAPI": [], "Fixed commit": "073040588c92826cca6261b692e61d1b5451db88", "Url": "https://api.github.com/repos/IDarvis/Warehouse", "Date": "2018-05-03T07:30:07Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { transientService.readAndWriteTable(offset, App.LIMIT); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3403/buggy-version/src.main.java.com.gmbh.itdeveloper.service.impl.ExtractServiceImpl.java", "BodyUseAPI": ["com.gmbh.itdeveloper.service.TransientService.readAndWriteTable(java.lang.Integer,App.LIMIT)"], "Fixed commit": "c89881cffb6744fe3d6a1ae7d5356513c0a791dd", "Url": "https://api.github.com/repos/Dilsh0d/fork-join", "Date": "2018-08-07T14:15:56Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.content.Intent intent = new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse(movieDetailsData.getHomepage())); startActivity(intent); } catch (java.lang.Exception e) { android.widget.Toast.makeText(this, \"No Information Availabel\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/2128/buggy-version/app.src.main.java.com.example.rakeshrav.magicmovies.ui.movieDetails.MovieDetailsActivity.java", "BodyUseAPI": ["com.example.rakeshrav.magicmovies.data.network.model.movieDetailsData.MovieDetailsData.getHomepage()", "android.net.Uri.parse(movieDetailsData.getHomepage())", "com.example.rakeshrav.magicmovies.ui.movieDetails.MovieDetailsActivity.startActivity(android.content.Intent)"], "Fixed commit": "8d28bb7608c8a85e075da111ff9b32e807d06fc9", "Url": "https://api.github.com/repos/RakeshRav/MagicMovies", "Date": "2018-08-13T07:12:09Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { pipelineRunner.execute(pipelineOptions.pipelineId); } catch (com.openairmarket.etl.pipeline.runner.PipelineRunnerException exc) { com.openairmarket.etl.Pipeline.logger.atSevere().log(\"Failed to run the pipeline [%s].\", pipelineOptions.pipelineId); exc.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/4592/buggy-version/java.etl.src.main.java.com.openairmarket.etl.Pipeline.java", "BodyUseAPI": ["com.openairmarket.etl.pipeline.runner.PipelineRunner.execute(pipelineOptions.pipelineId)"], "Fixed commit": "83fbd1eaa18b6b87dc498cf85d0c22a918750bf4", "Url": "https://api.github.com/repos/toolinc/openairmarket", "Date": "2018-10-17T15:52:07Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.nio.file.Files.setPosixFilePermissions(targetFile.toPath(), perms); } catch (java.lang.UnsupportedOperationException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3096/buggy-version/src.main.java.iota.GOldDiggerLocalPoW.java", "BodyUseAPI": ["java.io.File.toPath()", "java.nio.file.Files.setPosixFilePermissions(java.nio.file.Path,java.util.Set<java.nio.file.attribute.PosixFilePermission>)"], "Fixed commit": "23a4351dc1c6585951394cb945359968c42d5946", "Url": "https://api.github.com/repos/mikrohash/isf-jclient", "Date": "2018-03-05T21:56:07Z"},
{"Line": "=>2526", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return driver.getRemoteWebDriver().getSessionId().toString(); } catch (java.lang.Exception e) { logger.log((\"WARNING: Failed to get AUT session ID! (maybe driver is not available?). Error: \" + (e.getMessage()))); return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6819/buggy-version/eyes.selenium.java.src.main.java.com.applitools.eyes.selenium.Eyes.java", "BodyUseAPI": ["driver.getRemoteWebDriver().getSessionId().toString()", "driver.getRemoteWebDriver().getSessionId()", "com.applitools.eyes.selenium.wrappers.EyesWebDriver.getRemoteWebDriver()"], "Fixed commit": "b8b6345a504b9fe2e562e5aaa688279482fb0271", "Url": "https://api.github.com/repos/applitools/eyes.sdk.java3", "Date": "2018-10-17T10:42:17Z"},
{"Line": "=>469", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.List<org.jkiss.dbeaver.ext.generic.model.GenericSchema> tmpSchemas = metaModel.loadSchemas(session, this, null); if (tmpSchemas != null) { this.schemas = tmpSchemas; } } catch (java.lang.Throwable e) { org.jkiss.dbeaver.ext.generic.model.GenericDataSource.log.warn(\"Can't read schema list\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/697/buggy-version/plugins.org.jkiss.dbeaver.ext.generic.src.org.jkiss.dbeaver.ext.generic.model.GenericDataSource.java", "BodyUseAPI": ["org.jkiss.dbeaver.ext.generic.model.meta.GenericMetaModel.loadSchemas(org.jkiss.dbeaver.ext.generic.model.JDBCSession,org.jkiss.dbeaver.ext.generic.model.GenericDataSource,<nulltype>)"], "Fixed commit": "f9b313742b3ed9a26e6193a06baf90e9478136af", "Url": "https://api.github.com/repos/dbeaver/dbeaver", "Date": "2018-10-07T19:41:15Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { final E e = de.taimos.dvalin.interconnect.model.service.DaemonScanner.isAnnotationPresent(annotation, interfaceClazz, methodName, parameterTypes); if (e != null) { return e; } } catch (final java.lang.NoSuchMethodException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8911/buggy-version/interconnect.model.src.main.java.de.taimos.dvalin.interconnect.model.service.DaemonScanner.java", "BodyUseAPI": ["de.taimos.dvalin.interconnect.model.service.DaemonScanner.isAnnotationPresent(java.lang.Class<E>,java.lang.Class<?>,java.lang.String,java.lang.Class<?>[])"], "Fixed commit": "8ca40d3e0f7f49d86bce2d05da65c580e51a55ce", "Url": "https://api.github.com/repos/taimos/dvalin", "Date": "2018-04-03T07:14:45Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { merger.close(); } catch (java.lang.Exception e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1685/buggy-version/src.main.java.de.uni_koblenz.west.koral.master.utils.NWayMergeSort.java", "BodyUseAPI": ["de.uni_koblenz.west.koral.master.utils.Merger.close()"], "Fixed commit": "3385aaa7315c6e810a8a081e907ea62ebd690122", "Url": "https://api.github.com/repos/Institute-Web-Science-and-Technologies/koral", "Date": "2018-01-30T11:00:16Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(1000); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1605/buggy-version/myblockchain.src.main.java.com.myblockchain.services.miner.Miner.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "e591c63826948d007cdda9efa80e0a29764e5d1d", "Url": "https://api.github.com/repos/stone16/blockchain", "Date": "2018-04-21T20:28:21Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(5); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7842/buggy-version/src.GUI.Main.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "54ed8264b4928c7429a4436ce540ab4b16f94bfe", "Url": "https://api.github.com/repos/darrylayers/ProductivityPlus", "Date": "2018-10-02T22:59:36Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { pool.release(channel); } catch (java.lang.Throwable e) { throw e; } finally { channel = null; pool = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5267/buggy-version/common.src.main.java.apodemakeles.Chopin.utils.channel.DefaultPooledChannel.java", "BodyUseAPI": ["io.netty.channel.pool.ChannelPool.release(apodemakeles.Chopin.utils.channel.Channel)"], "Fixed commit": "2eeb80389015f7c98bf9f9d1da16053ba0af99f1", "Url": "https://api.github.com/repos/apodemakeles/Chopin", "Date": "2018-09-05T02:25:06Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { result = this.jira.doGetRequest((((this.jira.getJiraURL()) + \"search?jql=\") + (java.net.URLEncoder.encode(this.jql, \"UTF-8\")))); } catch (java.lang.Exception e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8982/buggy-version/JiraAutomation.JiraAutomation.Jira.Search.java", "BodyUseAPI": ["JiraAutomation.Jira.Jira.getJiraURL()", "java.net.URLEncoder.encode(java.lang.String,java.lang.String)", "JiraAutomation.Jira.Jira.doGetRequest((((this.jira.getJiraURL()) + \"search?jql=\") + (java.net.URLEncoder.encode(this.jql, \"UTF-8\"))))"], "Fixed commit": "9fe140ee103e2014e872c70f5deb55ee136d179c", "Url": "https://api.github.com/repos/angelok139/JiraAutomation", "Date": "2018-04-03T14:07:08Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { experimentalOptions = ((java.util.Map<java.lang.String, java.lang.String>) (capabilities.getCapability(ChromeOptions.CAPABILITY))); if (experimentalOptions != null) { for (java.util.Map.Entry<java.lang.String, java.lang.String> entry : experimentalOptions.entrySet()) { options.setExperimentalOption(entry.getKey(), entry.getValue()); } } } catch (java.lang.Exception e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/6919/buggy-version/src.main.java.xltutil.runner.helper.AnnotationRunnerHelper.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()", "java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()", "java.util.Map<java.lang.String, java.lang.String>.entrySet()", "org.openqa.selenium.chrome.ChromeOptions.setExperimentalOption(java.lang.String,java.lang.String)", "org.openqa.selenium.remote.DesiredCapabilities.getCapability(ChromeOptions.CAPABILITY)"], "Fixed commit": "83f62b181159f32ded1ae12819c7592eb10d5157", "Url": "https://api.github.com/repos/Xceptance/xlt-multi-browser", "Date": "2018-01-23T12:18:28Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { rgbValue = wrapper.getSample(); if ((rgbValue[0]) < 0.1F) { if ((rgbValue[1]) < 0.1F) { currentValue = basics.GlobalValues.BLACK; }else { if ((rgbValue[2]) < 0.15F) { currentValue = basics.GlobalValues.BLUE; } } }else { if ((rgbValue[1]) < 0.1F) { currentValue = basics.GlobalValues.RED; }else { currentValue = basics.GlobalValues.WHITE; } } } catch (java.lang.IndexOutOfBoundsException e) { currentValue = basics.GlobalValues.BLACK; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7827/buggy-version/legoMS3_vs2.src.sensorThreads.ColorSensorThread.java", "BodyUseAPI": ["sensorThreads.ColorSensorWrapper.getSample()"], "Fixed commit": "e56c7c868d0a5e64f4e0fb57b85caffac3cb999a", "Url": "https://api.github.com/repos/tungnx94/LegoMS", "Date": "2018-01-22T08:11:42Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { airline = airlineService.findByName(name); } catch (java.lang.Exception ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/9637/buggy-version/airlinesWs.src.main.java.edu.mum.cs545.ws.AirlineServiceRest.java", "BodyUseAPI": ["cs545.airline.service.AirlineService.findByName(java.lang.String)"], "Fixed commit": "a02b41e017efd582eab454e29c5bf97472ff622b", "Url": "https://api.github.com/repos/nngo2/AirlineWs", "Date": "2018-03-20T23:44:51Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((internalAPI != null) && (org.objectweb.proactive.core.mop.MOP.isReifiedObject(internalAPI))) { internalAPIUrls = org.objectweb.proactive.api.PAActiveObject.getUrls(internalAPI); } } catch (java.lang.Exception e) { org.ow2.proactive.scheduler.synchronization.SynchronizationWrapper.logger.warn((\"Could not initialize the SynchronizationWrapper for taskId \" + taskId), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5067/buggy-version/scheduler.scheduler-node.src.main.java.org.ow2.proactive.scheduler.synchronization.SynchronizationWrapper.java", "BodyUseAPI": ["org.objectweb.proactive.core.mop.MOP.isReifiedObject(org.ow2.proactive.scheduler.synchronization.SynchronizationInternal)", "org.objectweb.proactive.api.PAActiveObject.getUrls(org.ow2.proactive.scheduler.synchronization.SynchronizationInternal)"], "Fixed commit": "b9b36dad8cfda2f548d3abde688a3e39172b6e96", "Url": "https://api.github.com/repos/pedrovelho/scheduling", "Date": "2018-10-04T12:35:11Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { int expectedSize = funcDefinition.getFuncParameterList().get(i).getTypeSize().getResolvedSize(); int effectiveSize = ((funcExpr.getConcatExpr()) != null) ? funcExpr.getConcatExpr().getResolvedSize() : funcExpr.getPostfixExprList().get(i).getResolvedSize(); if ((expectedSize != effectiveSize) && (((funcExpr.getConcatExpr()) != null) || ((funcExpr.getPostfixExprList().get(i).getInteger()) == null))) { com.intellij.openapi.util.TextRange range = ((funcExpr.getConcatExpr()) != null) ? funcExpr.getConcatExpr().getTextRange() : funcExpr.getPostfixExprList().get(i).getTextRange(); holder.createErrorAnnotation(range, ((((\"Unexpected argument size. Expecting : \" + expectedSize) + \"trits, but found \") + effectiveSize) + \" trits\")); } } catch (org.abra.language.UnresolvableTokenException e) { com.intellij.openapi.util.TextRange range = ((funcExpr.getConcatExpr()) != null) ? funcExpr.getConcatExpr().getTextRange() : funcExpr.getPostfixExprList().get(i).getTextRange(); holder.createErrorAnnotation(range, \"Trit vector size cannot be computed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/4957/buggy-version/src.org.abra.language.FuncArgsAnnotator.java", "BodyUseAPI": ["funcExpr.getPostfixExprList().get(i).getResolvedSize()", "funcExpr.getPostfixExprList().get(i).getTextRange()", "org.abra.language.AbraFuncExpr.getConcatExpr()", "com.intellij.lang.annotation.AnnotationHolder.createErrorAnnotation(com.intellij.openapi.util.TextRange,java.lang.String)", "org.abra.language.AbraFuncExpr.getPostfixExprList()", "funcExpr.getConcatExpr().getResolvedSize()", "org.abra.language.AbraFuncExpr.getPostfixExprList()", "funcExpr.getPostfixExprList().get(int)", "funcExpr.getConcatExpr().getTextRange()", "org.abra.language.AbraFuncExpr.getPostfixExprList()", "org.abra.language.AbraFuncExpr.getConcatExpr()", "funcDefinition.getFuncParameterList().get(i).getTypeSize().getResolvedSize()", "org.abra.language.AbraFuncExpr.getConcatExpr()", "funcExpr.getPostfixExprList().get(int)", "funcDefinition.getFuncParameterList().get(i).getTypeSize()", "org.abra.language.AbraFuncExpr.getConcatExpr()", "org.abra.language.AbraFuncExpr.getConcatExpr()", "funcExpr.getPostfixExprList().get(int)", "org.abra.language.AbraFuncDefinition.getFuncParameterList()", "funcExpr.getPostfixExprList().get(i).getInteger()", "funcDefinition.getFuncParameterList().get(int)"], "Fixed commit": "e2e8afb98497b0289da6c7e57c8401c66978d4b4", "Url": "https://api.github.com/repos/ben-75/abra-idea-plugin", "Date": "2018-09-27T21:46:04Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.concurrent.TimeUnit.MILLISECONDS.sleep(101); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1627/buggy-version/src.Main.java", "BodyUseAPI": ["java.util.concurrent.TimeUnit.sleep(int)"], "Fixed commit": "40902a1fb539b94986f55e3c1a10aaa192f9bc00", "Url": "https://api.github.com/repos/Berni29/MazeSolver", "Date": "2018-03-23T12:43:50Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { tagDao.create(tag, context); } catch (org.killbill.billing.util.api.TagApiException e) { if ((ErrorCode.TAG_ALREADY_EXISTS.getCode()) != (e.getCode())) { throw e; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7003/buggy-version/util.src.main.java.org.killbill.billing.util.tag.DefaultTagInternalApi.java", "BodyUseAPI": ["org.killbill.billing.util.tag.dao.TagDao.create(org.killbill.billing.util.tag.dao.TagModelDao,org.killbill.billing.callcontext.InternalCallContext)"], "Fixed commit": "cbeab9aec42a412d2d98e51d68467ecf5a2acd00", "Url": "https://api.github.com/repos/wwjbatista/killbill", "Date": "2018-02-01T18:56:48Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { nameOfUnit = responseFromAirCon.replaceAll(\".*,name=(.*?),\", \"$1\").replaceAll(\"icon=.*\", \"\"); name = java.net.URLDecoder.decode(nameOfUnit, \"UTF-8\"); } catch (java.io.UnsupportedEncodingException e) { java.lang.System.err.println((((\"Scanned \" + (daikin.getHost())) + \", found something like Daikin AC, but could not decode \") + nameOfUnit)); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/6077/buggy-version/src.main.java.com.nikondsl.daikin.DaikinController.java", "BodyUseAPI": ["java.net.URLDecoder.decode(java.lang.String,java.lang.String)", "java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "3000913b752369ea2d110b1c95a3a7347f261303", "Url": "https://api.github.com/repos/alebastrov/Daikin", "Date": "2018-01-15T13:11:48Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { roadtype = org.laas.osm2graph.graph.RoadInformation.RoadType.valueOf(tag.getValue().toUpperCase()); } catch (java.lang.IllegalArgumentException e) { org.laas.osm2graph.model.WayToArc.LOGGER.severe((\"Unrecognized road type: highway=\" + (tag.getValue()))); roadtype = org.laas.osm2graph.graph.RoadInformation.RoadType.UNCLASSIFIED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/877/buggy-version/src.main.org.laas.osm2graph.model.WayToArc.java", "BodyUseAPI": ["org.laas.osm2graph.graph.RoadInformation.RoadType.valueOf(tag.getValue().toUpperCase())", "org.openstreetmap.osmosis.core.domain.v0_6.Tag.getValue()", "tag.getValue().toUpperCase()"], "Fixed commit": "65923818b14b9d2cd197a0f449a711afb0966cfb", "Url": "https://api.github.com/repos/Holt59/OSM2Graph", "Date": "2018-02-24T23:33:19Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return coinpurse.ConsoleDialog.f.createMoney(value); } catch (java.lang.IllegalArgumentException e) { java.lang.System.err.println(e.getMessage()); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7916/buggy-version/src.coinpurse.ConsoleDialog.java", "BodyUseAPI": ["factory.MoneyFactory.createMoney(double)"], "Fixed commit": "dd6cd6382fc3b3f08d65ca400dab36f6c419b2e7", "Url": "https://api.github.com/repos/OOP2018/coinpurse-wisaTong", "Date": "2018-02-22T03:17:28Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(5000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/6628/buggy-version/app.src.main.java.com.southafricaproject.efar.PatientMainActivity.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "cd7c9a3da434591966c3c17c8961a28b7afb7be3", "Url": "https://api.github.com/repos/Mackatttack123/efar", "Date": "2018-04-16T23:10:36Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(5000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/6628/buggy-version/app.src.main.java.com.southafricaproject.efar.PatientMainActivity.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "cd7c9a3da434591966c3c17c8961a28b7afb7be3", "Url": "https://api.github.com/repos/Mackatttack123/efar", "Date": "2018-04-16T23:10:36Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String GeneralInfo = edu.ucsb.cs56.projects.utilities.YelpAPI.YelpAPI.RestaurantGeneralInfo(LocalRestaurants.get(i).id); java.lang.System.out.println(GeneralInfo); java.lang.String name = ((java.lang.String) (this.RestaurantSpecificInfo(GeneralInfo, \"name\"))); java.lang.System.out.println(name); java.lang.String phone = ((java.lang.String) (this.RestaurantSpecificInfo(GeneralInfo, \"display_phone\"))); java.lang.System.out.println(phone); java.lang.String address = \"\"; java.lang.String menu = ((java.lang.String) (this.RestaurantSpecificInfo(GeneralInfo, \"menu_provider\"))); java.lang.System.out.println(menu); org.json.simple.JSONObject locationAtr = ((org.json.simple.JSONObject) (this.RestaurantSpecificInfo(GeneralInfo, \"location\"))); java.lang.System.out.println(locationAtr.toString()); java.util.List<java.lang.String> DisplayAddress = ((java.util.List<java.lang.String>) (locationAtr.get(\"display_address\"))); for (int j = 0; j < (DisplayAddress.size()); j++) { address += DisplayAddress.get(j); if (j < ((DisplayAddress.size()) - 1)) address += \", \"; java.lang.System.out.println(DisplayAddress.get(j)); } if (address.equals(\"\")) address = \"unlisted\"; java.lang.String imageURL = ((java.lang.String) (this.RestaurantSpecificInfo(GeneralInfo, \"image_url\"))); edu.ucsb.cs56.projects.utilities.restaurant_list.Place placesRestaurant = null; java.util.ArrayList<edu.ucsb.cs56.projects.utilities.restaurant_list.Review> reviews = new java.util.ArrayList<edu.ucsb.cs56.projects.utilities.restaurant_list.Review>(); if (phone != null) { java.lang.String comparableYelpPhoneNumber = phone.replaceAll(\"\\\\D\", \"\").substring(1); for (edu.ucsb.cs56.projects.utilities.restaurant_list.Place restaurant : detailedRestaurantResults) { if ((restaurant.getPhoneNumber()) != null) { java.lang.String comparableGooglePlacesPhoneNumber = restaurant.getPhoneNumber().replaceAll(\"\\\\D\", \"\"); if (comparableYelpPhoneNumber.equals(comparableGooglePlacesPhoneNumber)) { placesRestaurant = restaurant; java.lang.System.out.println((\"NUMBER OF REVIEWS : \" + (restaurant.getReviews().size()))); reviews = new java.util.ArrayList<edu.ucsb.cs56.projects.utilities.restaurant_list.Review>(restaurant.getReviews()); edu.ucsb.cs56.projects.utilities.restaurant_list.Hours operatingHoursWeekly = restaurant.getHours(); java.util.List<edu.ucsb.cs56.projects.utilities.restaurant_list.Hours.Period> operatingHoursByDay = operatingHoursWeekly.getPeriods(); if ((operatingHoursByDay.size()) > 0) { edu.ucsb.cs56.projects.utilities.restaurant_list.Hours.Period dailyHours = operatingHoursByDay.get(0); java.lang.String nonCleanedOpenTime = dailyHours.getOpeningTime(); java.lang.String nonCleanedCloseTime = dailyHours.getClosingTime(); openTime = nonCleanedOpenTime.substring(0, 2); closeTime = nonCleanedCloseTime.substring(0, 2); } } } } } edu.ucsb.cs56.projects.utilities.restaurant_list.Restaurant restaurant; if (placesRestaurant != null) { restaurant = new edu.ucsb.cs56.projects.utilities.restaurant_list.Restaurant(openTime, closeTime, name, phone, address, cuisine, imageURL, menu, placesRestaurant); }else { restaurant = new edu.ucsb.cs56.projects.utilities.restaurant_list.Restaurant(openTime, closeTime, name, phone, address, cuisine, imageURL, menu); } this.addNew(restaurant); } catch (java.io.UnsupportedEncodingException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/6259/buggy-version/src.RestaurantList.Food.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "edu.ucsb.cs56.projects.utilities.restaurant_list.Place.getReviews()", "edu.ucsb.cs56.projects.utilities.restaurant_list.Place.getPhoneNumber()", "java.io.PrintStream.println(locationAtr.toString())", "edu.ucsb.cs56.projects.utilities.restaurant_list.Food.addNew(edu.ucsb.cs56.projects.utilities.restaurant_list.Restaurant)", "edu.ucsb.cs56.projects.utilities.YelpAPI.YelpAPI.RestaurantGeneralInfo(LocalRestaurants.get(i).id)", "java.io.PrintStream.println(java.lang.String)", "edu.ucsb.cs56.projects.utilities.restaurant_list.Food.RestaurantSpecificInfo(java.lang.String,java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "java.util.List<java.lang.String>.size()", "edu.ucsb.cs56.projects.utilities.restaurant_list.Food.RestaurantSpecificInfo(java.lang.String,java.lang.String)", "org.json.simple.JSONObject.toString()", "java.lang.String.substring(int,int)", "java.io.PrintStream.println((\"NUMBER OF REVIEWS : \" + (restaurant.getReviews().size())))", "java.io.PrintStream.println(java.lang.String)", "java.lang.String.replaceAll(java.lang.String,java.lang.String)", "edu.ucsb.cs56.projects.utilities.restaurant_list.Hours.getPeriods()", "edu.ucsb.cs56.projects.utilities.restaurant_list.Place.getReviews()", "restaurant.getPhoneNumber().replaceAll(java.lang.String,java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "edu.ucsb.cs56.projects.utilities.restaurant_list.Food.RestaurantSpecificInfo(java.lang.String,java.lang.String)", "java.util.List<java.lang.String>.get(int)", "java.lang.String.equals(java.lang.String)", "restaurant.getReviews().size()", "edu.ucsb.cs56.projects.utilities.restaurant_list.Place.getHours()", "edu.ucsb.cs56.projects.utilities.restaurant_list.Place.getPhoneNumber()", "java.io.PrintStream.println(java.lang.String)", "java.util.List<java.lang.String>.get(int)", "Hours.Period.getOpeningTime()", "edu.ucsb.cs56.projects.utilities.restaurant_list.Food.RestaurantSpecificInfo(java.lang.String,java.lang.String)", "java.util.List<Hours.Period>.get(int)", "java.util.List<java.lang.String>.size()", "edu.ucsb.cs56.projects.utilities.restaurant_list.Food.RestaurantSpecificInfo(java.lang.String,java.lang.String)", "org.json.simple.JSONObject.get(java.lang.String)", "java.util.ArrayList<edu.ucsb.cs56.projects.utilities.YelpAPI.NameAndID>.get(int)", "java.lang.String.equals(java.lang.String)", "java.util.List<Hours.Period>.size()", "java.lang.String.substring(int)", "Hours.Period.getClosingTime()"], "Fixed commit": "8a044a7ee2c6b8d6bcfe9294f32a30c9ca1ec163", "Url": "https://api.github.com/repos/dannycho7/cs56-utilities-restaurant-list", "Date": "2018-02-23T02:45:27Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { r = restTemplate.getForObject(url, java.lang.String.class, tripId); } catch (org.springframework.web.client.HttpClientErrorException hcee) { log.warn(\"getting for trip {}: {}\", tripId, hcee.getMessage()); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/6432/buggy-version/src.main.java.net.remgant.mbta.TripReporter.java", "BodyUseAPI": ["org.springframework.web.client.RestTemplate.getForObject(java.lang.String,java.lang.Class,java.lang.String)"], "Fixed commit": "38c2d57b06280abd8197da04653234f0bce185b6", "Url": "https://api.github.com/repos/jdrem/mbta-stats", "Date": "2018-01-28T17:09:26Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.Random random = new java.util.Random(); int questionCount = ((int) (dataSnapshot.getChildrenCount())); if (questionCount == 2) { questionCount -= 1; } int rand = random.nextInt(questionCount); java.util.Iterator itr = dataSnapshot.getChildren().iterator(); boolean found = false; for (int i = 0; i < rand; i++) { itr.next(); } do { com.google.firebase.database.DataSnapshot childSnapshot = ((com.google.firebase.database.DataSnapshot) (itr.next())); checkName = childSnapshot.child(\"fname\").getValue().toString(); checkJoined = childSnapshot.child(\"joined\").getValue().toString(); if ((checkName.equalsIgnoreCase(userFname)) || (checkJoined.equalsIgnoreCase(\"true\"))) { android.widget.Toast.makeText(getApplicationContext(), \"Search Mismatch, Returning...\", Toast.LENGTH_LONG).show(); noSearch = true; }else { android.widget.Toast.makeText(getApplicationContext(), \"Search Successful\", Toast.LENGTH_LONG).show(); found = true; if (((childSnapshot.child(\"joined\").getValue().toString().equalsIgnoreCase(\"false\")) && (!(childSnapshot.child(\"fname\").getValue().toString().equalsIgnoreCase(userFname)))) && (childSnapshot.child(\"server\").getValue().toString().equalsIgnoreCase(server))) { mSelectedIds.add(checkName); mSelectedIds.add(userFname); setJoined(\"true\"); createGroupChannel(mSelectedIds, true); break; } } } while (!found ); } catch (java.lang.Exception e) { android.widget.Toast.makeText(getApplicationContext(), \"Something went wrong, try again.\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7262/buggy-version/app.src.main.java.com.sendbird.android.sample.groupchannel.CreateGroupChannelActivity.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "childSnapshot.child(\"joined\").getValue()", "java.util.List<java.lang.String>.add(java.lang.String)", "com.sendbird.android.sample.groupchannel.CreateGroupChannelActivity.7.setJoined(java.lang.String)", "java.util.Iterator.next()", "com.google.firebase.database.DataSnapshot.child(java.lang.String)", "childSnapshot.child(\"joined\").getValue().toString()", "com.sendbird.android.sample.groupchannel.CreateGroupChannelActivity.7.getApplicationContext()", "childSnapshot.child(\"server\").getValue()", "java.util.Random.nextInt(int)", "com.google.firebase.database.DataSnapshot.child(java.lang.String)", "java.util.List<java.lang.String>.add(java.lang.String)", "com.google.firebase.database.DataSnapshot.child(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "android.widget.Toast.makeText(getApplicationContext(), \"Search Successful\", Toast.LENGTH_LONG).show()", "childSnapshot.child(\"fname\").getValue().toString()", "com.sendbird.android.sample.groupchannel.CreateGroupChannelActivity.7.getApplicationContext()", "childSnapshot.child(\"joined\").getValue().toString().equalsIgnoreCase(java.lang.String)", "childSnapshot.child(\"fname\").getValue()", "childSnapshot.child(\"fname\").getValue()", "dataSnapshot.getChildren().iterator()", "com.google.firebase.database.DataSnapshot.child(java.lang.String)", "com.google.firebase.database.DataSnapshot.getChildren()", "childSnapshot.child(\"server\").getValue().toString().equalsIgnoreCase(java.lang.String)", "childSnapshot.child(\"joined\").getValue()", "childSnapshot.child(\"joined\").getValue().toString()", "com.google.firebase.database.DataSnapshot.child(java.lang.String)", "android.widget.Toast.makeText(getApplicationContext(), \"Search Mismatch, Returning...\", Toast.LENGTH_LONG).show()", "com.google.firebase.database.DataSnapshot.getChildrenCount()", "childSnapshot.child(\"server\").getValue().toString()", "java.util.Iterator.next()", "android.widget.Toast.makeText(getApplicationContext(),java.lang.String,Toast.LENGTH_LONG)", "android.widget.Toast.makeText(getApplicationContext(),java.lang.String,Toast.LENGTH_LONG)", "childSnapshot.child(\"fname\").getValue().toString().equalsIgnoreCase(java.lang.String)", "childSnapshot.child(\"fname\").getValue().toString()", "com.sendbird.android.sample.groupchannel.CreateGroupChannelActivity.7.createGroupChannel(java.util.List<java.lang.String>,boolean)"], "Fixed commit": "537f0c79518d1a081d8686ae4b5bf0b028442b55", "Url": "https://api.github.com/repos/JohnReinel98/speak_up_chat", "Date": "2018-09-10T06:28:49Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { final org.springframework.security.crypto.encrypt.TextEncryptor decryptor = org.springframework.security.crypto.encrypt.Encryptors.delux(password, getSalt()); decryptedValue = decryptor.decrypt(encryptedValue); } catch (final java.lang.IllegalArgumentException ex) { com.synopsys.integration.alert.common.security.EncryptionUtility.logger.error(\"Error decrypting value\", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8456/buggy-version/src.main.java.com.synopsys.integration.alert.common.security.EncryptionUtility.java", "BodyUseAPI": ["com.synopsys.integration.alert.common.security.EncryptionUtility.getSalt()", "org.springframework.security.crypto.encrypt.TextEncryptor.decrypt(java.lang.String)", "org.springframework.security.crypto.encrypt.Encryptors.delux(java.lang.String,java.lang.String)"], "Fixed commit": "a7f4f7b939d453ece2f8d2f3c94daa619656d096", "Url": "https://api.github.com/repos/blackducksoftware/blackduck-alert", "Date": "2018-10-16T13:23:35Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { get().perform(android.support.test.espresso.action.ViewActions.scrollTo()); } catch (java.lang.RuntimeException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5728/buggy-version/relish-espresso.src.main.java.uk.co.blackpepper.relish.espresso.EspressoWidget.java", "BodyUseAPI": ["android.support.test.espresso.ViewInteraction.perform(android.support.test.espresso.action.ViewActions.scrollTo())", "uk.co.blackpepper.relish.espresso.EspressoWidget.get()", "android.support.test.espresso.action.ViewActions.scrollTo()"], "Fixed commit": "1120c1c892b4f08dc9fb4ac50af15e878c1260bf", "Url": "https://api.github.com/repos/dogriffiths/relish", "Date": "2018-05-05T13:17:17Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { getCurrentPlaceData(); } catch (com.google.android.gms.common.api.ApiException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8709/buggy-version/app.src.main.java.com.example.ass_boss.locationlist.MainActivity.java", "BodyUseAPI": ["com.example.ass_boss.locationlist.MainActivity.getCurrentPlaceData()"], "Fixed commit": "e03e3182064a5ff8c0c230a8f386147dcfad466a", "Url": "https://api.github.com/repos/YaskSS/LocationList-Android", "Date": "2018-06-07T13:55:20Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { getCurrentPlaceData(); } catch (com.google.android.gms.common.api.ApiException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8709/buggy-version/app.src.main.java.com.example.ass_boss.locationlist.MainActivity.java", "BodyUseAPI": ["com.example.ass_boss.locationlist.MainActivity.getCurrentPlaceData()"], "Fixed commit": "e03e3182064a5ff8c0c230a8f386147dcfad466a", "Url": "https://api.github.com/repos/YaskSS/LocationList-Android", "Date": "2018-06-07T13:55:20Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mTypedarray = nContext.obtainStyledAttributes(nAttrs, R.styleable.CustomInput); android.util.Log.d(\"asdadaadtest123\", \"1\"); inflate(nContext, R.layout.custom_input_edit_text, this); android.util.Log.d(\"asdadaadtest123\", \"2\"); mInputType = mTypedarray.getString(R.styleable.CustomInput_ci_type); android.util.Log.d(\"asdadaadtest123\", \"3\"); } catch (java.lang.Exception e) { android.util.Log.wtf(\"asdadaadtest123\", (\" ERR : \" + (e.getMessage()))); android.util.Log.wtf(\"asdadaadtest123\", (\" ERR : \" + (e.getLocalizedMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/698/buggy-version/personalstylerlib.src.main.java.com.themejunky.personalstylerlib.customviews.CustomInput.java", "BodyUseAPI": ["android.util.Log.d(java.lang.String,java.lang.String)", "android.util.Log.d(java.lang.String,java.lang.String)", "com.themejunky.personalstylerlib.customviews.CustomInput.getString(R.styleable.CustomInput_ci_type)", "android.util.Log.d(java.lang.String,java.lang.String)", "com.themejunky.personalstylerlib.customviews.CustomInput.inflate(android.content.Context,R.layout.custom_input_edit_text,com.themejunky.personalstylerlib.customviews.CustomInput)", "android.content.Context.obtainStyledAttributes(android.util.AttributeSet,R.styleable.CustomInput)"], "Fixed commit": "b90d2a510bbcd3ab1a981c326e482879db7075ee", "Url": "https://api.github.com/repos/themejunky/PersonalStylerLib", "Date": "2018-08-02T09:50:47Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { android.database.sqlite.SQLiteDatabase db = this.getReadableDatabase(); numRows = ((int) (android.database.DatabaseUtils.queryNumEntries(db, hu.kfg.naplo.DBHelper.GRADES_TABLE_NAME))); } finally { return numRows; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5122/buggy-version/app.src.main.java.hu.kfg.naplo.DBHelper.java", "BodyUseAPI": ["android.database.DatabaseUtils.queryNumEntries(android.database.sqlite.SQLiteDatabase,java.lang.String)", "hu.kfg.naplo.DBHelper.getReadableDatabase()"], "Fixed commit": "7be46c1af82847560bbee8f582088ab41bd50fc2", "Url": "https://api.github.com/repos/hexadec/KFGnaplo", "Date": "2018-01-23T18:00:09Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.List<org.openpnp.spi.Nozzle> nozzles = org.openpnp.model.Configuration.get().getMachine().getDefaultHead().getNozzles(); if ((nozzles.size()) < 1) { throw new java.lang.Exception(\"No nozzles.\"); } java.util.ArrayList<java.lang.String> ids = new java.util.ArrayList<>(); for (org.openpnp.spi.Nozzle nozzle : nozzles) { ids.add(nozzle.getId()); } org.openpnp.machine.reference.driver.GcodeDriver.Axis axis = new org.openpnp.machine.reference.driver.GcodeDriver.Axis(\"z\", org.openpnp.machine.reference.driver.GcodeDriver.Axis.Type.Z, 0, ids.toArray(new java.lang.String[]{ })); axes.add(axis); } catch (java.lang.Exception e) { axes.add(new org.openpnp.machine.reference.driver.GcodeDriver.Axis(\"z\", org.openpnp.machine.reference.driver.GcodeDriver.Axis.Type.Z, 0, \"*\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/341/buggy-version/src.main.java.org.openpnp.machine.reference.driver.GcodeDriver.java", "BodyUseAPI": ["org.openpnp.spi.Nozzle.getId()", "java.util.List<org.openpnp.machine.reference.driver.GcodeDriver.Axis>.add(org.openpnp.machine.reference.driver.GcodeDriver.Axis)", "java.util.List<org.openpnp.spi.Nozzle>.size()", "org.openpnp.model.Configuration.get().getMachine().getDefaultHead()", "org.openpnp.model.Configuration.get().getMachine().getDefaultHead().getNozzles()", "org.openpnp.model.Configuration.get()", "org.openpnp.model.Configuration.get().getMachine()", "java.util.ArrayList<java.lang.String>.toArray(java.lang.String[])", "java.util.ArrayList<java.lang.String>.add(nozzle.getId())"], "Fixed commit": "ab456b503aba10b1d7c9a4f9be22cc5f5de131fd", "Url": "https://api.github.com/repos/openpnp/openpnp", "Date": "2018-07-27T02:54:50Z"},
{"Line": "=>600", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.backbonebits.Backbonebits.mMediaRecorder.start(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8790/buggy-version/BackbonebitsSample.Backbonebits.src.main.java.com.backbonebits.Backbonebits.java", "BodyUseAPI": ["android.media.MediaRecorder.start()"], "Fixed commit": "203ae60cc74ee93cab1ff942adb70354a6462022", "Url": "https://api.github.com/repos/Intuz-production/Backbone-bits-Android", "Date": "2018-10-26T11:45:27Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(1200); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/3918/buggy-version/app.src.main.java.com.example.marta.blueteeth.TeacherConnectScreen.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "197c38d67d937b193d20ca6fd75d6ea1e39cd0c9", "Url": "https://api.github.com/repos/Martydude15/BlueTeeth", "Date": "2018-04-24T16:27:56Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mAsyncTaskDao.insert(users[0]); } catch (java.lang.Exception e) { android.util.Log.e(de.oth_regensburg.mueller.simon.swimcount.repositories.UserRepository.TAG, \"insert user failed.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/2101/buggy-version/app.src.main.java.de.oth_regensburg.mueller.simon.swimcount.repositories.UserRepository.java", "BodyUseAPI": ["de.oth_regensburg.mueller.simon.swimcount.database.dao.UserDao.insert(users[0])"], "Fixed commit": "ce104d8a293f364d67e3bdde3afd5956041b66a7", "Url": "https://api.github.com/repos/simon376/SwimCountFinal", "Date": "2018-07-02T20:08:14Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { inputValue = java.lang.Integer.parseInt(numberOnly.trim()); } catch (java.lang.NumberFormatException e) { textInputLayout.setError(getString(R.string.string_check_error, de.oth_regensburg.mueller.simon.swimcount.activities.InputScreenActivity.MIN_DISTANCE, de.oth_regensburg.mueller.simon.swimcount.activities.InputScreenActivity.MAX_DISTANCE)); android.util.Log.e(de.oth_regensburg.mueller.simon.swimcount.activities.InputScreenActivity.TAG, \"parseInt numberFormatException\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/2101/buggy-version/app.src.main.java.de.oth_regensburg.mueller.simon.swimcount.activities.InputScreenActivity.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.trim()"], "Fixed commit": "ce104d8a293f364d67e3bdde3afd5956041b66a7", "Url": "https://api.github.com/repos/simon376/SwimCountFinal", "Date": "2018-07-02T20:08:14Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { net.angusbeefgaming.Remover.checkForKick(((net.minecraft.entity.player.EntityPlayerMP) (pl))); } catch (java.lang.ClassCastException e) { java.lang.System.out.println(\"GIRAFFE > Report recieved was found within a Single Player Server. Ignoring...\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1961/buggy-version/src.main.java.net.angusbeefgaming.anticheat.Detector.java", "BodyUseAPI": ["net.angusbeefgaming.Remover.checkForKick(net.minecraft.entity.player.EntityPlayer)"], "Fixed commit": "b8dbfcc429a1e2312d575cae3a923bbefffa3c96", "Url": "https://api.github.com/repos/angusbeefsteak/MrBeefSteakMod", "Date": "2018-09-15T09:39:35Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { startActivity(new android.content.Intent(this, com.chris.tatusafety.UI.LoginActivity.class)); } catch (java.lang.Exception e) { android.util.Log.v(\"kilasi was here\", \"error eror\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8053/buggy-version/app.src.main.java.com.chris.tatusafety.UI.Welcome_Activity.java", "BodyUseAPI": ["com.chris.tatusafety.UI.Welcome_Activity.startActivity(android.content.Intent)"], "Fixed commit": "a47454d34e5cfbe96097c0e4f1270136d811c4bd", "Url": "https://api.github.com/repos/bigzoo/tatusafety", "Date": "2018-02-19T13:02:12Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.optionsHashMap = ((java.util.HashMap<java.lang.String, java.lang.String>) (jsonSerialiser.deserialize(json, java.util.Map.class))); } catch (com.owlike.genson.JsonBindingException e) { java.lang.System.err.println(\"platformerAI: Old save game used. Using default options\"); setArgs(json); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/3242/buggy-version/src.org.platformer.tools.PlatformerAIOptions.java", "BodyUseAPI": ["com.owlike.genson.Genson.deserialize(java.lang.String,java.lang.Class)"], "Fixed commit": "d1c8bb0a86c9e057cc99aebd5c9a6b577031d724", "Url": "https://api.github.com/repos/suegy/platformerAI", "Date": "2018-02-27T22:15:08Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { value = org.apache.commons.beanutils.PropertyUtils.getNestedProperty(curRefEntity, refProp); } catch (org.apache.commons.beanutils.NestedNullException e) { value = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5989/buggy-version/src.main.java.nc.ird.malariaplantdb.service.xls.fillers.XlsEntityRefFiller.java", "BodyUseAPI": ["org.apache.commons.beanutils.PropertyUtils.getNestedProperty(java.lang.Object,java.lang.String)"], "Fixed commit": "bb6e6df9de4e03e9c7567645bc5aa6684cc08043", "Url": "https://api.github.com/repos/acheype/malaria-plant-db", "Date": "2018-02-25T11:13:59Z"},
{"Line": "=>704", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { getKmeliaBm().getNodeHeader(nodeId, getComponentId()); } catch (java.lang.Exception e) { com.stratelia.silverpeas.silvertrace.SilverTrace.warn(\"kmelia\", \"KmeliaSessionControl.getUserTopicProfile\", \"root.MSG_PARAM_VALUE\", ((nodeId + \" is no more in \") + (getComponentId()))); setCurrentFolderId(NodePK.ROOT_NODE_ID, true); nodeId = com.stratelia.webactiv.util.node.model.NodePK.ROOT_NODE_ID; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7011/buggy-version/kmelia.kmelia-war.src.main.java.com.stratelia.webactiv.kmelia.control.KmeliaSessionController.java", "BodyUseAPI": ["com.stratelia.webactiv.kmelia.control.KmeliaSessionController.getKmeliaBm()", "com.stratelia.webactiv.kmelia.control.ejb.KmeliaBm.getNodeHeader(java.lang.String,getComponentId())", "com.stratelia.webactiv.kmelia.control.KmeliaSessionController.getComponentId()"], "Fixed commit": "b4a0df7d52e28ba07ecdc4dde850ec6cf7674260", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Components", "Date": "2018-03-20T21:29:34Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { firstCharacter = mCurrencies.get(position).getCurrencyCode().charAt(Constants.CURRENCY_CODE_STARTING_INDEX); } catch (java.lang.IndexOutOfBoundsException exception) { firstCharacter = ' '; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1292/buggy-version/app.src.main.java.com.nicoqueijo.android.currencyconverter.adapters.SelectExchangeRatesRecyclerViewAdapter.java", "BodyUseAPI": ["mCurrencies.get(position).getCurrencyCode().charAt(Constants.CURRENCY_CODE_STARTING_INDEX)", "mCurrencies.get(position).getCurrencyCode()", "java.util.List<com.nicoqueijo.android.currencyconverter.models.Currency>.get(int)"], "Fixed commit": "727bbae02f8f49abb94e311e644e4c77620c9de1", "Url": "https://api.github.com/repos/nicoqueijo/Android-Currency-Converter", "Date": "2018-09-05T01:41:49Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mensaId = mCanteens.get(getAdapterPosition()).getCode(); } catch (java.lang.ArrayIndexOutOfBoundsException e) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/3381/buggy-version/app.src.main.java.com.pasta.mensadd.adapter.CanteenListAdapter.java", "BodyUseAPI": ["java.util.ArrayList<com.pasta.mensadd.model.Canteen>.get(getAdapterPosition())", "com.pasta.mensadd.adapter.CanteenListAdapter.ViewHolder.getAdapterPosition()", "mCanteens.get(getAdapterPosition()).getCode()"], "Fixed commit": "6e122767a32611fe9b1347feadeed83b5d7f4043", "Url": "https://api.github.com/repos/julianctni/mensaDD", "Date": "2018-02-07T15:52:03Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { sendInitPacket(gatt, true); } catch (final no.nordicsemi.android.dfu.internal.exception.RemoteDfuException e) { if (!(mProgressInfo.isLastPart())) { mRemoteErrorOccurred = false; logw(\"Sending SD+BL failed. Trying to send App only\"); mService.sendLogBroadcast(DfuBaseService.LOG_LEVEL_WARNING, \"Invalid system components. Trying to send application\"); mFileType = DfuBaseService.TYPE_APPLICATION; final no.nordicsemi.android.dfu.internal.ArchiveInputStream zhis = ((no.nordicsemi.android.dfu.internal.ArchiveInputStream) (mFirmwareStream)); zhis.setContentType(mFileType); final byte[] applicationInit = zhis.getApplicationInit(); mInitPacketStream = new java.io.ByteArrayInputStream(applicationInit); mInitPacketSizeInBytes = applicationInit.length; mImageSizeInBytes = zhis.applicationImageSize(); mProgressInfo.init(mImageSizeInBytes, 2, 2); sendInitPacket(gatt, false); }else { throw e; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5060/buggy-version/dfu.src.main.java.no.nordicsemi.android.dfu.SecureDfuImpl.java", "BodyUseAPI": ["no.nordicsemi.android.dfu.SecureDfuImpl.sendInitPacket(android.bluetooth.BluetoothGatt,boolean)"], "Fixed commit": "bd22ac4c03a094dfa5b757346ed1a3b382618287", "Url": "https://api.github.com/repos/NordicSemiconductor/Android-DFU-Library", "Date": "2018-10-17T15:50:35Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { reason = rev.getRevocationReason(); } catch (java.lang.IllegalStateException e) { reason = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1051/buggy-version/src.main.java.kz.ncanode.pki.PkiServiceProvider.java", "BodyUseAPI": ["kz.ncanode.pki.RevokedStatus.getRevocationReason()"], "Fixed commit": "c4c70bbf7ccab7d0452285404e77191ee81d82c8", "Url": "https://api.github.com/repos/malikzh/NCANode", "Date": "2018-10-22T08:48:10Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return (com.intellij.openapi.roots.ProjectRootManager.getInstance(project).getProjectSdk().getSdkType()) instanceof com.games.cs.quaty.helper.module.QuatySdkType; } catch (java.lang.Exception e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/4698/buggy-version/src.main.java.com.games.cs.quaty.helper.viewer.ContextViewerDisplayCondition.java", "BodyUseAPI": ["com.intellij.openapi.roots.ProjectRootManager.getInstance(com.intellij.openapi.project.Project)", "com.intellij.openapi.roots.ProjectRootManager.getInstance(project).getProjectSdk().getSdkType()", "com.intellij.openapi.roots.ProjectRootManager.getInstance(project).getProjectSdk()"], "Fixed commit": "29018c0bf4d89fd4cc5d8ec42021bc5f3d8b2ae3", "Url": "https://api.github.com/repos/BeiKeJieDeLiuLangMao/QuatyHelper", "Date": "2018-01-15T02:30:53Z"},
{"Line": "=>603", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.marktreble.f3ftimer.driver.TcpIoService.sendThread.sendCmd(\"\"); } catch (java.lang.Throwable e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/9298/buggy-version/f3Ftimer.src.main.java.com.marktreble.f3ftimer.driver.TcpIoService.java", "BodyUseAPI": ["com.marktreble.f3ftimer.driver.TcpIoService.SendThread.sendCmd(java.lang.String)"], "Fixed commit": "877443a4202b36f6e8251b537d056555a9e6a29d", "Url": "https://api.github.com/repos/stephanherrig/f3f-timer", "Date": "2018-07-19T05:33:41Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.resumptionToken = listIdentifiers.getResumptionToken(); } catch (javax.xml.transform.TransformerException | java.lang.NoSuchFieldException e) { throw new java.util.NoSuchElementException(\"didn't find resumptiontoken\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6890/buggy-version/back-end.src.main.java.ee.hm.dop.service.synchronizer.oaipmh.IdentifierIterator.java", "BodyUseAPI": ["ORG.oclc.oai.harvester2.verb.ListIdentifiers.getResumptionToken()"], "Fixed commit": "01106afa0b5f7c3f488094cd43d70052fbbc2cec", "Url": "https://api.github.com/repos/hariduspilv/koolikott", "Date": "2018-03-13T12:51:01Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (pdfFile3.exists()) { android.net.Uri path = android.net.Uri.parse((\"content://\" + pdfFile3)); android.content.Intent objIntent = new android.content.Intent(android.content.Intent.ACTION_VIEW); objIntent.setDataAndType(path, \"application/pdf\"); objIntent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP); startActivity(objIntent); }else { android.widget.Toast.makeText(getContext(), \"NO FILE! \", Toast.LENGTH_SHORT).show(); } } catch (android.content.ActivityNotFoundException e) { android.widget.Toast.makeText(getContext(), \"No Viewer Application Found\", Toast.LENGTH_SHORT).show(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6685/buggy-version/app.src.main.java.com.magistrale.unisa.mystudentguide.HomeFragment.java", "BodyUseAPI": ["android.net.Uri.parse(java.lang.String)", "com.magistrale.unisa.mystudentguide.HomeFragment.6.startActivity(android.content.Intent)", "java.io.File.exists()", "android.content.Intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)", "android.content.Intent.setDataAndType(android.net.Uri,java.lang.String)", "android.widget.Toast.makeText(getContext(), \"NO FILE! \", Toast.LENGTH_SHORT).show()", "com.magistrale.unisa.mystudentguide.HomeFragment.6.getContext()", "android.widget.Toast.makeText(getContext(),java.lang.String,Toast.LENGTH_SHORT)"], "Fixed commit": "19294a07e5379ae96dd4fdf2a08df5eedb9895d8", "Url": "https://api.github.com/repos/daverusso1992/myStudentGuide", "Date": "2018-10-03T11:53:18Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { in.close(); out.close(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/3285/buggy-version/HIM.src.de.omikron.server.ClientHandler.java", "BodyUseAPI": ["java.io.DataInputStream.close()", "java.io.DataOutputStream.close()"], "Fixed commit": "bed33622548b92e836c7db518ef233f68cdf9f33", "Url": "https://api.github.com/repos/myOmikron/HIM", "Date": "2018-06-28T12:54:05Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { redskyResponse = restTemplate.getForObject(url, com.johnbwhitejr.target.casestudy.beans.RedskyResponse.class); } catch (org.springframework.web.client.HttpClientErrorException e) { throw new com.johnbwhitejr.target.casestudy.exceptions.RedskyException(\"Unable to get product info from Redsky\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4293/buggy-version/src.main.java.com.johnbwhitejr.target.casestudy.utils.RedskyClient.java", "BodyUseAPI": ["org.springframework.web.client.RestTemplate.getForObject(java.lang.String,java.lang.Class)"], "Fixed commit": "b2e7b5951cf7e893ca3898a888854825d92b22aa", "Url": "https://api.github.com/repos/jimbo831/TargetCaseStudy", "Date": "2018-07-26T04:08:11Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return redisTemplate.hasKey(movieId); } catch (java.lang.RuntimeException e) { log.error(\"Redis server is not responding!\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1219/buggy-version/video-service.src.main.java.org.smartinrub.videoservice.repository.VideoRepositoryImpl.java", "BodyUseAPI": ["org.springframework.data.redis.core.StringRedisTemplate.hasKey(java.lang.String)"], "Fixed commit": "806776bdc8458d1cec1766e5e1df9cc81c7244b7", "Url": "https://api.github.com/repos/smartinrub/movies-monorepo", "Date": "2018-09-27T22:20:48Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.springframework.data.redis.core.ListOperations<java.lang.String, java.lang.String> stringStringListOperations = redisTemplate.opsForList(); stringStringListOperations.leftPushAll(movieId, links); } catch (java.lang.RuntimeException e) { log.error(\"Redis server is not responding!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1219/buggy-version/video-service.src.main.java.org.smartinrub.videoservice.repository.VideoRepositoryImpl.java", "BodyUseAPI": ["org.springframework.data.redis.core.StringRedisTemplate.opsForList()", "org.springframework.data.redis.core.ListOperations<java.lang.String, java.lang.String>.leftPushAll(java.lang.String,java.util.List<java.lang.String>)"], "Fixed commit": "806776bdc8458d1cec1766e5e1df9cc81c7244b7", "Url": "https://api.github.com/repos/smartinrub/movies-monorepo", "Date": "2018-09-27T22:20:48Z"},
{"Line": "=>463", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.writeMemory(br.org.certi.jocd.coresight.CortexM.NVIC_AIRCR, ((br.org.certi.jocd.coresight.CortexM.NVIC_AIRCR_VECTKEY) | (br.org.certi.jocd.coresight.CortexM.NVIC_AIRCR_SYSRESETREQ)), null); this.dp.flush(); } catch (java.lang.Exception e) { this.dp.flush(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7903/buggy-version/jocd.src.br.org.certi.jocd.coresight.CortexM.java", "BodyUseAPI": ["br.org.certi.jocd.coresight.CortexM.writeMemory(long,long,<nulltype>)", "br.org.certi.jocd.coresight.DebugPort.flush()"], "Fixed commit": "41970ecf1b7d869dc4de85e1f31559fef1b3b5dc", "Url": "https://api.github.com/repos/fundacaocerti/jOCD", "Date": "2018-06-05T18:13:01Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { coverage = reader.read(null); } catch (java.lang.IllegalArgumentException e) { throw new org.mars_group.gisimport.exceptions.GisValidationException(\"Failed to parse input file, make sure it is valid!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9731/buggy-version/src.main.java.org.mars_group.gisimport.util.GisValidator.java", "BodyUseAPI": ["org.geotools.gce.arcgrid.ArcGridReader.read(<nulltype>)"], "Fixed commit": "9e0ad4444e47c46aac2db6a375dff2d125130456", "Url": "https://api.github.com/repos/mars-group/mars-gis-data-svc", "Date": "2018-02-08T11:34:44Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { while (iterator.hasNext()) { next = iterator.next(); if (predicate.test(next)) { return true; }else { next = null; } } } catch (java.util.NoSuchElementException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/3606/buggy-version/util.src.main.java.org.vesalainen.util.ConditionalIterator.java", "BodyUseAPI": ["java.util.function.Predicate<T>.test(T)", "java.util.Iterator<T>.next()", "java.util.Iterator<T>.hasNext()"], "Fixed commit": "e2ed1bbe91fa493aa4f324d4b37898723702fbae", "Url": "https://api.github.com/repos/tvesalainen/util", "Date": "2018-09-19T12:30:18Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(_heartBeatUpdateRetrySleep); } catch (java.lang.InterruptedException e) { com.cloud.hypervisor.kvm.resource.KVMHAMonitor.s_logger.debug(\"[ignored] interupted between heartbeat retries.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/2953/buggy-version/plugins.hypervisors.kvm.src.com.cloud.hypervisor.kvm.resource.KVMHAMonitor.java", "BodyUseAPI": ["java.lang.Thread.sleep(com.cloud.hypervisor.kvm.resource.KVMHAMonitor.Monitor)"], "Fixed commit": "e9648ad6782ecb8b43dd04f558d947458d851730", "Url": "https://api.github.com/repos/Slair1/cloudstack", "Date": "2018-02-28T00:36:35Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return jdbcTemplate.queryForObject(sql, java.util.Collections.singletonMap(\"account\", account), this); } catch (org.springframework.dao.IncorrectResultSizeDataAccessException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5865/buggy-version/src.main.java.base_core.user.dao.impl.UserDAOImpl.java", "BodyUseAPI": ["org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.queryForObject(java.lang.String,java.util.Map<java.lang.String, java.lang.String>,base_core.user.dao.impl.UserDAOImpl)", "java.util.Collections.singletonMap(java.lang.String,java.lang.String)"], "Fixed commit": "4201223e85ca77b28179f78842c3c8adbee77a5c", "Url": "https://api.github.com/repos/AhaMin/min-core", "Date": "2018-03-22T14:18:33Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return jdbcTemplate.queryForObject(sql, java.util.Collections.singletonMap(\"id\", id), this); } catch (org.springframework.dao.IncorrectResultSizeDataAccessException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5865/buggy-version/src.main.java.base_core.user.dao.impl.UserDAOImpl.java", "BodyUseAPI": ["java.util.Collections.singletonMap(java.lang.String,long)", "org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.queryForObject(java.lang.String,java.util.Map<java.lang.String, java.lang.Long>,base_core.user.dao.impl.UserDAOImpl)"], "Fixed commit": "4201223e85ca77b28179f78842c3c8adbee77a5c", "Url": "https://api.github.com/repos/AhaMin/min-core", "Date": "2018-03-22T14:18:33Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return jdbcTemplate.queryForObject(sql, java.util.Collections.singletonMap(\"userId\", userId), this); } catch (org.springframework.dao.IncorrectResultSizeDataAccessException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5865/buggy-version/src.main.java.base_core.user.dao.impl.UserPasswordDAOImpl.java", "BodyUseAPI": ["org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.queryForObject(java.lang.String,java.util.Map<java.lang.String, java.lang.Long>,base_core.user.dao.impl.UserPasswordDAOImpl)", "java.util.Collections.singletonMap(java.lang.String,long)"], "Fixed commit": "4201223e85ca77b28179f78842c3c8adbee77a5c", "Url": "https://api.github.com/repos/AhaMin/min-core", "Date": "2018-03-22T14:18:33Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(500); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8643/buggy-version/VirtualDesktop.Attack.Autofire.AutofireAttackAdapter.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "54fa1be4e925d1e71c9d6c96adea24958d93132c", "Url": "https://api.github.com/repos/thomasjeffreyandersontwin/HeroCombatSimulator", "Date": "2018-02-17T20:28:00Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.SetAutoFireShots(((int) (attackJSON.get(\"Shots\")))); } catch (java.lang.Exception e) { this.SetAutoFireShots(((java.lang.Long) (attackJSON.get(\"Shots\"))).intValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8643/buggy-version/VirtualDesktop.Attack.Autofire.AutofireAttackAdapter.java", "BodyUseAPI": ["org.json.simple.JSONObject.get(java.lang.String)", "VirtualDesktop.Attack.Autofire.AutofireAttackAdapter.SetAutoFireShots(((int) (attackJSON.get(\"Shots\"))))"], "Fixed commit": "54fa1be4e925d1e71c9d6c96adea24958d93132c", "Url": "https://api.github.com/repos/thomasjeffreyandersontwin/HeroCombatSimulator", "Date": "2018-02-17T20:28:00Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(500); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8643/buggy-version/VirtualDesktop.Attack.Autofire.AutofireAttackAdapter.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "54fa1be4e925d1e71c9d6c96adea24958d93132c", "Url": "https://api.github.com/repos/thomasjeffreyandersontwin/HeroCombatSimulator", "Date": "2018-02-17T20:28:00Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(100); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5357/buggy-version/examples.src.main.java.io.grpc.examples.helloworld.HelloWorldServer.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "a90f88611c65e86c95ffcc658e183d7823dec31f", "Url": "https://api.github.com/repos/bogdanbrato/grpc-java", "Date": "2018-07-27T23:57:23Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { userId = userManager.getUserId(); user = userRepository.findOne(userId); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4151/buggy-version/src.main.java.it.smartcommunitylab.aac.oauth.AACOAuth2RequestFactory.java", "BodyUseAPI": ["it.smartcommunitylab.aac.manager.UserManager.getUserId()", "it.smartcommunitylab.aac.repository.UserRepository.findOne(java.lang.Long)"], "Fixed commit": "ca01a3af5c641a31694173c8abdb038e1a575e24", "Url": "https://api.github.com/repos/smartcommunitylab/AAC", "Date": "2018-04-24T12:40:21Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.currentThread().sleep(hr.fer.MainActivity.WAIT_INTERVAL); } catch (java.lang.InterruptedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/2340/buggy-version/app.src.main.java.hr.fer.MainActivity.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)", "java.lang.Thread.currentThread()"], "Fixed commit": "8064038ed314a0876fbd28b6ec716122b31cfe9a", "Url": "https://api.github.com/repos/mirnabaksa/CollectorAndroid", "Date": "2018-04-21T18:49:00Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.mycelium.wallet.exchange.model.CoinmarketcapRate rmcRate = com.mycelium.wallet.exchange.CoinmarketcapApi.getRate(); if (rmcRate != null) { rateRmcBtc = rmcRate.getPriceBtc(); storage.storeExchangeRate(\"RMC\", \"BTC\", com.mycelium.wallet.ExchangeRateManager.RMC_MARKET, java.lang.String.valueOf(rateRmcBtc)); }else { com.google.common.base.Optional<java.lang.String> rate = storage.getExchangeRate(\"RMC\", \"BTC\", com.mycelium.wallet.ExchangeRateManager.RMC_MARKET); if (rate.isPresent()) { rateRmcBtc = java.lang.Float.parseFloat(rate.get()); } } } catch (retrofit.RetrofitError error) { android.util.Log.e(\"ExcangeRateManager\", \"get rmc rate from Coinmarketcap \", error); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/296/buggy-version/mbw.src.main.java.com.mycelium.wallet.ExchangeRateManager.java", "BodyUseAPI": ["com.mycelium.wallet.persistence.MetadataStorage.getExchangeRate(java.lang.String,java.lang.String,java.lang.String)", "com.mycelium.wallet.exchange.model.CoinmarketcapRate.getPriceBtc()", "com.mycelium.wallet.persistence.MetadataStorage.storeExchangeRate(java.lang.String,java.lang.String,java.lang.String,java.lang.String)", "java.lang.String.valueOf(float)", "com.google.common.base.Optional<java.lang.String>.get()", "java.lang.Float.parseFloat(rate.get())", "com.google.common.base.Optional<java.lang.String>.isPresent()", "com.mycelium.wallet.exchange.CoinmarketcapApi.getRate()"], "Fixed commit": "e093a19c6fb4b011b919d3c3fac265dd19994749", "Url": "https://api.github.com/repos/mycelium-com/wallet-android", "Date": "2018-01-23T19:31:17Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String body = \"{\\\"request\\\":{\\\"filters\\\":{\\\"identifier\\\":\\\"test\\\"}}}\"; java.util.Map<java.lang.String, java.lang.String> headers = new java.util.HashMap<>(); headers.put(JsonKey.AUTHORIZATION, ((org.sunbird.common.models.util.JsonKey.BEARER) + (java.lang.System.getenv(JsonKey.EKSTEP_AUTHORIZATION)))); if (org.sunbird.common.models.util.ProjectUtil.isStringNullOREmpty(((java.lang.String) (headers.get(JsonKey.AUTHORIZATION))))) { headers.put(JsonKey.AUTHORIZATION, org.sunbird.common.models.util.PropertiesCache.getInstance().getProperty(JsonKey.EKSTEP_AUTHORIZATION)); headers.put(\"Content_Type\", \"application/json; charset=utf-8\"); } java.lang.String ekStepBaseUrl = java.lang.System.getenv(JsonKey.EKSTEP_BASE_URL); if (org.sunbird.common.models.util.ProjectUtil.isStringNullOREmpty(ekStepBaseUrl)) { ekStepBaseUrl = org.sunbird.common.models.util.PropertiesCache.getInstance().getProperty(JsonKey.EKSTEP_BASE_URL); } java.lang.String response = org.sunbird.common.models.util.HttpUtil.sendPostRequest((ekStepBaseUrl + (org.sunbird.common.models.util.PropertiesCache.getInstance().getProperty(JsonKey.EKSTEP_CONTENT_SEARCH_URL))), body, headers); if (response.contains(\"OK\")) { responseList.add(org.sunbird.common.models.util.ProjectUtil.createCheckResponse(JsonKey.EKSTEP_SERVICE, false, null)); }else { responseList.add(org.sunbird.common.models.util.ProjectUtil.createCheckResponse(JsonKey.EKSTEP_SERVICE, true, null)); } } catch (java.lang.Exception e) { responseList.add(org.sunbird.common.models.util.ProjectUtil.createCheckResponse(JsonKey.EKSTEP_SERVICE, true, null)); isallHealthy = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1987/buggy-version/actors.src.main.java.org.sunbird.learner.actors.badges.BadgesActor.java", "BodyUseAPI": ["org.sunbird.common.models.util.ProjectUtil.isStringNullOREmpty(java.lang.String)", "org.sunbird.common.models.util.PropertiesCache.getInstance().getProperty(JsonKey.EKSTEP_CONTENT_SEARCH_URL)", "java.util.List<java.util.Map<java.lang.String, java.lang.Object>>.add(org.sunbird.common.models.util.ProjectUtil.createCheckResponse(JsonKey.EKSTEP_SERVICE, true, null))", "java.lang.System.getenv(JsonKey.EKSTEP_AUTHORIZATION)", "org.sunbird.common.models.util.ProjectUtil.createCheckResponse(JsonKey.EKSTEP_SERVICE,boolean,<nulltype>)", "java.util.Map<java.lang.String, java.lang.String>.put(JsonKey.AUTHORIZATION,((org.sunbird.common.models.util.JsonKey.BEARER) + (java.lang.System.getenv(JsonKey.EKSTEP_AUTHORIZATION))))", "java.lang.String.contains(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(JsonKey.AUTHORIZATION)", "org.sunbird.common.models.util.ProjectUtil.isStringNullOREmpty(java.lang.String)", "org.sunbird.common.models.util.PropertiesCache.getInstance()", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "org.sunbird.common.models.util.PropertiesCache.getInstance().getProperty(JsonKey.EKSTEP_BASE_URL)", "java.util.List<java.util.Map<java.lang.String, java.lang.Object>>.add(org.sunbird.common.models.util.ProjectUtil.createCheckResponse(JsonKey.EKSTEP_SERVICE, false, null))", "org.sunbird.common.models.util.ProjectUtil.createCheckResponse(JsonKey.EKSTEP_SERVICE,boolean,<nulltype>)", "org.sunbird.common.models.util.HttpUtil.sendPostRequest((ekStepBaseUrl + (org.sunbird.common.models.util.PropertiesCache.getInstance().getProperty(JsonKey.EKSTEP_CONTENT_SEARCH_URL))),java.lang.String,java.util.Map<java.lang.String, java.lang.String>)", "org.sunbird.common.models.util.PropertiesCache.getInstance().getProperty(JsonKey.EKSTEP_AUTHORIZATION)", "org.sunbird.common.models.util.PropertiesCache.getInstance()", "org.sunbird.common.models.util.PropertiesCache.getInstance()", "java.lang.System.getenv(JsonKey.EKSTEP_BASE_URL)", "java.util.Map<java.lang.String, java.lang.String>.put(JsonKey.AUTHORIZATION,org.sunbird.common.models.util.PropertiesCache.getInstance().getProperty(JsonKey.EKSTEP_AUTHORIZATION))"], "Fixed commit": "6119047bec86366ac4ac655297337aab45476568", "Url": "https://api.github.com/repos/project-sunbird/sunbird-lms-mw", "Date": "2018-03-05T10:17:24Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { output.close(); } catch (java.lang.Exception ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/2696/buggy-version/src.main.java.info.ab.service.CloudStorage.java", "BodyUseAPI": ["java.io.OutputStream.close()"], "Fixed commit": "a32d3549c00998dfa3dd1174add64230d6a14aeb", "Url": "https://api.github.com/repos/abalanonline/phpbb-archive", "Date": "2018-08-20T01:48:27Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { input.close(); } catch (java.lang.Exception ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/2696/buggy-version/src.main.java.info.ab.service.CloudStorage.java", "BodyUseAPI": ["java.io.InputStream.close()"], "Fixed commit": "a32d3549c00998dfa3dd1174add64230d6a14aeb", "Url": "https://api.github.com/repos/abalanonline/phpbb-archive", "Date": "2018-08-20T01:48:27Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { option = input.nextInt(); } catch (java.util.InputMismatchException ex) { java.lang.System.out.println(\"Please select a valid option (1, 2 or 3).\"); input.next(); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9735/buggy-version/src.main.java.console.GameBuilder.java", "BodyUseAPI": ["java.util.Scanner.nextInt()"], "Fixed commit": "79d094ee3c895587749c4fe5d3e31d487bb12ea7", "Url": "https://api.github.com/repos/Manzanit0/My8thTictactoe", "Date": "2018-02-09T19:20:58Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { lva_addToPrevention = getObjectFromInformationArray(iob_command, 1, java.lang.Boolean.class); } catch (java.lang.RuntimeException ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/2625/buggy-version/src.main.java.threads.classes.FileManagerThreadControl.java", "BodyUseAPI": ["threads.classes.FileManagerThreadControl.getObjectFromInformationArray(threads.classes.FileManagerThreadControl.Command,int,java.lang.Class)"], "Fixed commit": "b4d469163ef08fa7998dd02506f38fec198b0d98", "Url": "https://api.github.com/repos/Alexander-Lukacs/VFS_GUI", "Date": "2018-03-13T13:44:16Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { i.go(); } catch (java.io.IOException e) { java.lang.System.out.println(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1592/buggy-version/client.src.Client.java", "BodyUseAPI": ["Interpreter.Interpreter.go()"], "Fixed commit": "d982fe29aada9a3bcce0dc68aab104aaa414fba1", "Url": "https://api.github.com/repos/V21A47/smilingRaccoon", "Date": "2018-04-30T21:45:54Z"},
{"Line": "=>3257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { getITelephony().toggleLTE(LTE); } catch (android.os.RemoteException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8683/buggy-version/telephony.java.android.telephony.TelephonyManager.java", "BodyUseAPI": ["com.android.internal.telephony.ITelephony.toggleLTE(boolean)", "android.telephony.TelephonyManager.getITelephony()"], "Fixed commit": "a3839bdfa4cc90b6ccdb6c8459ed3290cf2a1e26", "Url": "https://api.github.com/repos/jar2105/platform_frameworks_base", "Date": "2017-08-10T12:00:47Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { accounts.lock(id); return ((java.math.BigDecimal) (accounts.executeOnKey(id, new com.hazelcast.map.AbstractEntryProcessor<java.lang.Long, com.revolut.interview.model.Account>() { @java.lang.Override public java.math.BigDecimal process(java.util.Map.Entry<java.lang.Long, com.revolut.interview.model.Account> entry) { com.revolut.interview.model.Account account = entry.getValue(); if ((amount.signum()) < 0) { return account.getMoney(); } account.setMoney(account.getMoney().add(amount)); entry.setValue(account); return account.getMoney(); } }))); } finally { accounts.unlock(id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8366/buggy-version/src.main.java.com.revolut.interview.Bank.java", "BodyUseAPI": ["account.getMoney().add(java.math.BigDecimal)", "com.revolut.interview.model.Account.getMoney()", "java.util.Map.Entry<java.lang.Long, com.revolut.interview.model.Account>.getValue()", "com.revolut.interview.model.Account.getMoney()", "com.revolut.interview.model.Account.setMoney(account.getMoney().add(amount))", "java.math.BigDecimal.signum()", "com.hazelcast.core.IMap<java.lang.Long, com.revolut.interview.model.Account>.lock(long)", "com.hazelcast.core.IMap<java.lang.Long, com.revolut.interview.model.Account>.executeOnKey(long,com.hazelcast.map.AbstractEntryProcessor<java.lang.Long, com.revolut.interview.model.Account>)", "com.revolut.interview.model.Account.getMoney()", "java.util.Map.Entry<java.lang.Long, com.revolut.interview.model.Account>.setValue(com.revolut.interview.model.Account)"], "Fixed commit": "75b74e29ff28083fcc5d2ab545ab6f304113dcfe", "Url": "https://api.github.com/repos/QIvan/revolut", "Date": "2018-01-11T20:53:58Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { backend.patchConfiguration(entity); return com.juancavallotti.tools.caas.impl.PatchAppConfigurationResponse.respond202(); } catch (com.juancavallotti.tools.caas.spi.ConfigurationServiceBackendException ex) { switch (ex.getCauseType()) { case ENTITY_NOT_FOUND : case VALIDATION : return com.juancavallotti.tools.caas.impl.PatchAppConfigurationResponse.respond400WithApplicationJson(status(ex.getMessage())); case OPERATION_NOT_SUPPORTED : return com.juancavallotti.tools.caas.impl.PatchAppConfigurationResponse.respond400WithApplicationJson(status(\"Not supported\")); } return com.juancavallotti.tools.caas.impl.PatchAppConfigurationResponse.respond500(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6762/buggy-version/caas-runtime.src.main.java.com.juancavallotti.tools.caas.impl.ConfigurationServiceImpl.java", "BodyUseAPI": ["com.juancavallotti.tools.caas.spi.ConfigurationServiceBackend.patchConfiguration(com.juancavallotti.tools.caas.impl.DefaultConfigurationElement)", "com.juancavallotti.tools.caas.impl.PatchAppConfigurationResponse.respond202()"], "Fixed commit": "e0a16877b33e74a3a1bd203483de5704d5b1780d", "Url": "https://api.github.com/repos/juancavallotti/caas", "Date": "2018-01-26T02:26:27Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { user_id = leaveRequest.getUser().getId(); if (isAdmin) foundUser = userRepository.findById(user_id).get(); } catch (java.lang.NullPointerException e) { foundUser = userRepository.findById(tokenService.getId(header)).get(); java.lang.System.out.println(\"USER_ID NOT FOUND\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4313/buggy-version/backend.src.main.java.isd.internship.ala.controllers.LeaveRequestController.java", "BodyUseAPI": ["leaveRequest.getUser().getId()", "isd.internship.ala.models.LeaveRequest.getUser()", "userRepository.findById(user_id).get()", "isd.internship.ala.repositories.UserRepository.findById(java.lang.Long)"], "Fixed commit": "2c0c2e689eece945cc9a79b978ed4905a7477930", "Url": "https://api.github.com/repos/isd-soft/annual-leave-assistant", "Date": "2018-07-05T14:09:05Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { io.gomint.server.logging.TerminalConsoleAppender.reader.callWidget(LineReader.CLEAR); io.gomint.server.logging.TerminalConsoleAppender.terminal.writer().print(getLayout().toSerializable(event)); io.gomint.server.logging.TerminalConsoleAppender.reader.callWidget(LineReader.REDRAW_LINE); io.gomint.server.logging.TerminalConsoleAppender.reader.callWidget(LineReader.REDISPLAY); } catch (java.lang.Exception e) { io.gomint.server.logging.TerminalConsoleAppender.terminal.writer().print(getLayout().toSerializable(event)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/566/buggy-version/gomint-server.src.main.java.io.gomint.server.logging.TerminalConsoleAppender.java", "BodyUseAPI": ["io.gomint.server.logging.TerminalConsoleAppender.terminal.writer().print(getLayout().toSerializable(event))", "getLayout().toSerializable(io.gomint.server.logging.LogEvent)", "org.jline.reader.LineReader.callWidget(LineReader.CLEAR)", "org.jline.terminal.Terminal.writer()", "org.jline.reader.LineReader.callWidget(LineReader.REDRAW_LINE)", "org.jline.reader.LineReader.callWidget(LineReader.REDISPLAY)", "io.gomint.server.logging.TerminalConsoleAppender.getLayout()"], "Fixed commit": "948d10186ba1881492a951295b8f5276c7d85081", "Url": "https://api.github.com/repos/GoMint/GoMint", "Date": "2018-06-29T17:04:35Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { pmd.eclipse.plugin.markers.PmdMarkers.appendViolationMarker(eclipseFile, violation); } catch (org.eclipse.core.runtime.CoreException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4279/buggy-version/bundles.pmd.eclipse.plugin.ui.src.pmd.eclipse.plugin.pmd.PmdWorkspaceJob.java", "BodyUseAPI": ["pmd.eclipse.plugin.markers.PmdMarkers.appendViolationMarker(org.eclipse.core.resources.IFile,net.sourceforge.pmd.RuleViolation)"], "Fixed commit": "a5da42e02a9ed2d261b9434c4e4adf16b6e003b1", "Url": "https://api.github.com/repos/ChristianWulf/qa-eclipse-plugin", "Date": "2018-01-29T06:00:26Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(_heartBeatUpdateRetrySleep); } catch (java.lang.InterruptedException e) { com.cloud.hypervisor.kvm.resource.KVMHAMonitor.s_logger.debug(\"[ignored] interupted between heartbeat retries.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9107/buggy-version/plugins.hypervisors.kvm.src.com.cloud.hypervisor.kvm.resource.KVMHAMonitor.java", "BodyUseAPI": ["java.lang.Thread.sleep(com.cloud.hypervisor.kvm.resource.KVMHAMonitor.Monitor)"], "Fixed commit": "0dc94f57cfa3bfe3bfbada2f0f77e806683e7f80", "Url": "https://api.github.com/repos/Slair1/cloudstack", "Date": "2018-02-28T00:36:35Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { cancelOrder(account, step.getSymbol(), step.getOrderId()); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8238/buggy-version/src.main.java.io.pacworx.atp.autotrade.service.BinanceService.java", "BodyUseAPI": ["io.pacworx.atp.autotrade.service.BinanceService.cancelOrder(io.pacworx.atp.autotrade.domain.TradeAccount,step.getSymbol(),step.getOrderId())", "io.pacworx.atp.autotrade.domain.TradeStep.getOrderId()", "io.pacworx.atp.autotrade.domain.TradeStep.getSymbol()"], "Fixed commit": "20dd3cfd31faf8f6d98ef18647fd3cdd05dff686", "Url": "https://api.github.com/repos/packowitz/atp-api", "Date": "2018-02-26T00:05:02Z"},
{"Line": "=>1125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mDetector.release(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9086/buggy-version/app.src.main.java.com.example.root.kutt_app_i.CameraSource.java", "BodyUseAPI": ["com.google.android.gms.vision.Detector<?>.release()"], "Fixed commit": "c40ec083c53cc927d6fcdf6a4ba191bd0de98924", "Url": "https://api.github.com/repos/philippaul1998/Kutt_app", "Date": "2018-07-19T16:10:02Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { settings = new me.jtrenaud1s.docgen.Settings(this); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1095/buggy-version/src.me.jtrenaud1s.docgen.Main.java", "BodyUseAPI": [], "Fixed commit": "0b0b7bae7f8c542a4f50d7c92293c84bb8e4099f", "Url": "https://api.github.com/repos/Theta-Xi/DocGenerator", "Date": "2018-09-30T22:51:50Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { soapEnvLog.info(((mc.getEnvelope().cloneOMElement().toStringWithConsume()) + \"\\n\")); } catch (java.lang.Exception invalidSOAPEnv) { log.error(\"Message with non parseable SOAP content\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6385/buggy-version/modules.holodeckb2b-core.src.main.java.org.holodeckb2b.ebms3.util.SOAPEnvelopeLogger.java", "BodyUseAPI": ["mc.getEnvelope().cloneOMElement().toStringWithConsume()", "org.apache.commons.logging.Log.info(((mc.getEnvelope().cloneOMElement().toStringWithConsume()) + \"\\n\"))", "mc.getEnvelope().cloneOMElement()", "org.apache.axis2.context.MessageContext.getEnvelope()"], "Fixed commit": "b8cfe8ea5993f953cbad1ccd0c0a7f858edf897f", "Url": "https://api.github.com/repos/holodeck-b2b/Holodeck-B2B", "Date": "2018-07-03T10:10:13Z"},
{"Line": "=>568", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { entity.livingentity.Monster.files = new java.io.File(entity.livingentity.Monster.class.getClassLoader().getResource(\"monsters\").toURI().getPath()).listFiles(); } catch (java.net.URISyntaxException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6805/buggy-version/src.entity.livingentity.Monster.java", "BodyUseAPI": ["java.net.URL.toURI()", "java.lang.ClassLoader.getResource(java.lang.String)", "java.io.File.listFiles()", "java.net.URI.getPath()", "java.lang.Class.getClassLoader()"], "Fixed commit": "9ac6c5cc362bf42264e4f4b44b50b5a7e86d8c1c", "Url": "https://api.github.com/repos/Shaimr2016/Rogue", "Date": "2018-06-01T22:57:47Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { func = userClass.queryFunc(ctx.id().getText()); } catch (java.lang.Exception e) { func = functions.query(ctx.id().getText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/96/buggy-version/src.Hzfengsy.Listener.Visitor.java", "BodyUseAPI": ["MParser.FunctionContext.id()", "ctx.id().getText()", "Hzfengsy.Listener.userType.queryFunc(ctx.id().getText())"], "Fixed commit": "908d8724f5ac187156532da8de0af03dbee05d5d", "Url": "https://api.github.com/repos/Hzfengsy/M-Compiler", "Date": "2018-04-18T01:06:26Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (fd.getParentFile().mkdirs()) if (fd.createNewFile()) this.fd = fd; else throw new java.io.IOException(); } catch (java.io.IOException e) { java.lang.System.err.println(\"Error desconocidooooooo\"); this.fd = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7871/buggy-version/T1.src.utils.FileManager.java", "BodyUseAPI": ["java.io.File.getParentFile()", "java.io.File.createNewFile()", "java.io.File.mkdirs()"], "Fixed commit": "043c4143b6abf8c978f49b7867940743b1b2c491", "Url": "https://api.github.com/repos/Daniton2906/myCC4102", "Date": "2018-05-02T14:05:52Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { compliant = (_value.getBytes().length) <= 127; } catch (java.lang.StackOverflowError e) { compliant = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/1787/buggy-version/jhove-modules.src.main.java.edu.harvard.hul.ois.jhove.module.pdf.Name.java", "BodyUseAPI": ["edu.harvard.hul.ois.jhove.module.pdf.Name.getBytes()"], "Fixed commit": "9252d3c7f580cf19ada7cc0a60804f2d8e171f77", "Url": "https://api.github.com/repos/cchou/jhove", "Date": "2018-05-13T20:50:01Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { self.totality.webSocketServer.ClientUtils.sendMessage(out, self.totality.webSocketServer.ConnectedClient.TEXT_OPCODE, TotalityServer.gson.toJson(controller).getBytes()); } catch (java.lang.Exception e) { connected = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/5755/buggy-version/Totality-Server.src.self.totality.webSocketServer.ConnectedClient.java", "BodyUseAPI": ["self.totality.webSocketServer.ClientUtils.sendMessage(java.io.DataOutputStream,int,TotalityServer.gson.toJson(controller).getBytes())", "TotalityServer.gson.toJson(controller).getBytes()", "TotalityServer.gson.toJson(self.totality.webSocketServer.controller.GameController)"], "Fixed commit": "0c9bb22c7c932ea6136e63090726d705dd8dd384", "Url": "https://api.github.com/repos/tommy1019/Totality", "Date": "2018-02-23T01:31:11Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { self.totality.webSocketServer.ClientUtils.sendMessage(out, self.totality.webSocketServer.ConnectedClient.TEXT_OPCODE, TotalityServer.gson.toJson(TotalityServer.instance.getDefaultController()).getBytes()); } catch (java.lang.Exception e2) { connected = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/5755/buggy-version/Totality-Server.src.self.totality.webSocketServer.ConnectedClient.java", "BodyUseAPI": ["TotalityServer.instance.getDefaultController()", "TotalityServer.gson.toJson(TotalityServer.instance.getDefaultController())", "self.totality.webSocketServer.ClientUtils.sendMessage(java.io.DataOutputStream,int,TotalityServer.gson.toJson(TotalityServer.instance.getDefaultController()).getBytes())", "TotalityServer.gson.toJson(TotalityServer.instance.getDefaultController()).getBytes()"], "Fixed commit": "0c9bb22c7c932ea6136e63090726d705dd8dd384", "Url": "https://api.github.com/repos/tommy1019/Totality", "Date": "2018-02-23T01:31:11Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { grantUriPermission(getPackageName(), fileURI, Intent.FLAG_GRANT_READ_URI_PERMISSION); } catch (java.lang.NullPointerException e) { android.widget.Toast toast = android.widget.Toast.makeText(getApplicationContext(), \"Failed to get file reading permissions.\", Toast.LENGTH_SHORT); toast.show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/55/buggy-version/app.src.main.java.com.misker.mike.hasher.Main.java", "BodyUseAPI": ["com.misker.mike.hasher.Main.grantUriPermission(getPackageName(),android.net.Uri,Intent.FLAG_GRANT_READ_URI_PERMISSION)", "com.misker.mike.hasher.Main.getPackageName()"], "Fixed commit": "a7b3029cea12effd53b5ab4b20a27aa0313c55d0", "Url": "https://api.github.com/repos/Miskerest/Hashr", "Date": "2018-02-17T22:23:09Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { session = sessionFactory.openSession(); session.update(task); return task; } catch (org.hibernate.HibernateException e) { com.softserve.mosquito.repo.impl.TaskRepoImpl.LOGGER.error((\"Problem with creating task\" + (java.util.Arrays.toString(e.getStackTrace())))); return null; } finally { if (session != null) session.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/2772/buggy-version/mosquito-repo-impl.src.main.java.com.softserve.mosquito.repo.impl.TaskRepoImpl.java", "BodyUseAPI": ["org.hibernate.Session.update(com.softserve.mosquito.entities.Task)", "org.hibernate.SessionFactory.openSession()"], "Fixed commit": "cec3d91df8d074223914bfd0b8d4de0998785141", "Url": "https://api.github.com/repos/IF-086-Java/Mosquito", "Date": "2018-07-09T17:12:50Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((event.getLogo().getUrl()) != null) com.squareup.picasso.Picasso.with(this).load(event.getLogo().getUrl()).into(ivLogo); } catch (java.lang.Exception e) { android.widget.Toast.makeText(this, \"Failed to download image\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6707/buggy-version/app.src.main.java.chris.example.com.gm_event.view.details.DetailsActivity.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(chris.example.com.gm_event.view.details.DetailsActivity)", "com.squareup.picasso.Picasso.with(this).load(event.getLogo().getUrl()).into(android.widget.ImageView)", "chris.example.com.gm_event.model.Event.getLogo()", "chris.example.com.gm_event.model.Event.getLogo()", "event.getLogo().getUrl()", "com.squareup.picasso.Picasso.with(this).load(event.getLogo().getUrl())", "event.getLogo().getUrl()"], "Fixed commit": "fb11a6e93636926077ce9de7bf9ea7065f896df5", "Url": "https://api.github.com/repos/z3r08ug/GMEvents", "Date": "2018-02-07T05:31:41Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { remoteBpStatus[bpTask].set(false); } catch (java.lang.ArrayIndexOutOfBoundsException e) { org.apache.storm.messaging.netty.StormClientHandler.LOG.error(\"BP index out of bounds {}\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/5420/buggy-version/storm-client.src.jvm.org.apache.storm.messaging.netty.StormClientHandler.java", "BodyUseAPI": ["java.util.concurrent.atomic.AtomicBoolean.set(boolean)"], "Fixed commit": "63017568eb543571804d0475c975a9c5382465f9", "Url": "https://api.github.com/repos/revans2/incubator-storm", "Date": "2018-07-12T21:49:04Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { remoteBpStatus[bpTask].set(true); } catch (java.lang.ArrayIndexOutOfBoundsException e) { org.apache.storm.messaging.netty.StormClientHandler.LOG.error(\"BP index out of bounds {}\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/5420/buggy-version/storm-client.src.jvm.org.apache.storm.messaging.netty.StormClientHandler.java", "BodyUseAPI": ["java.util.concurrent.atomic.AtomicBoolean.set(boolean)"], "Fixed commit": "63017568eb543571804d0475c975a9c5382465f9", "Url": "https://api.github.com/repos/revans2/incubator-storm", "Date": "2018-07-12T21:49:04Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { cursor.moveToFirst(); return org.cn.orm.utils.SQLiteUtil.invokeField(entity, cursor); } finally { if (cursor != null) { cursor.close(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/2395/buggy-version/orm.src.main.java.org.cn.orm.QueryImpl.java", "BodyUseAPI": ["android.database.Cursor.moveToFirst()", "org.cn.orm.utils.SQLiteUtil.invokeField(java.lang.Class<?>,android.database.Cursor)"], "Fixed commit": "dcafc0ca605a126a1c4c18a8f62389b6452ed1d5", "Url": "https://api.github.com/repos/findById/tech-android", "Date": "2018-02-26T07:02:33Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { if ((cursor != null) && ((cursor.getCount()) > 0)) { cursor.moveToFirst(); return org.cn.orm.utils.SQLiteUtil.invokeField(entity, cursor); } } finally { if (cursor != null) { cursor.close(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/2395/buggy-version/orm.src.main.java.org.cn.orm.SimpleOrmHelper.java", "BodyUseAPI": ["android.database.Cursor.getCount()", "org.cn.orm.utils.SQLiteUtil.invokeField(java.lang.Class<?>,android.database.Cursor)", "android.database.Cursor.moveToFirst()"], "Fixed commit": "dcafc0ca605a126a1c4c18a8f62389b6452ed1d5", "Url": "https://api.github.com/repos/findById/tech-android", "Date": "2018-02-26T07:02:33Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Integer userId = ru.hh.school.adaptation.services.auth.AuthService.sessionThreadLocal.get().getId(); return userService.getUser(userId); } catch (java.lang.Exception e) { return java.util.Optional.empty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/3707/buggy-version/backend.src.main.java.ru.hh.school.adaptation.services.auth.AuthService.java", "BodyUseAPI": ["ru.hh.school.adaptation.services.auth.AuthService.sessionThreadLocal.get().getId()", "ru.hh.school.adaptation.services.UserService.getUser(java.lang.Integer)", "java.lang.ThreadLocal<ru.hh.school.adaptation.misc.UserSession>.get()"], "Fixed commit": "be9db8acfec86d0aba1aec64ad5cf869ebc45c28", "Url": "https://api.github.com/repos/hhru/AdaptationProject", "Date": "2018-04-23T12:56:06Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { meta = ((com.google.gson.JsonObject) (gson.toJsonTree(nfcCard))); meta.addProperty(\"tag\", imageCard.getTag()); } catch (java.lang.Exception e) { timber.log.Timber.e(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/5304/buggy-version/app.src.main.java.uk.ac.ucl.excites.tapmap.activities.TapAndMapActivity.java", "BodyUseAPI": ["uk.ac.ucl.excites.tapmap.storage.ImageCard.getTag()", "com.google.gson.JsonObject.addProperty(java.lang.String,imageCard.getTag())", "com.google.gson.Gson.toJsonTree(uk.ac.ucl.excites.tapmap.storage.NfcCard)"], "Fixed commit": "2435caf7c9510a0bc352005eff395fbe696554e3", "Url": "https://api.github.com/repos/ExCiteS/TapAndMap", "Date": "2018-09-17T15:26:50Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { xposedVersion = de.robv.android.xposed.XposedBridge.getXposedVersion(); } catch (java.lang.Throwable e) { xposedVersion = de.robv.android.xposed.XposedBridge.XPOSED_BRIDGE_VERSION; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/1602/buggy-version/app.src.main.java.com.github.tianma8023.xposed.smscode.xp.SmsHandlerHook.java", "BodyUseAPI": ["de.robv.android.xposed.XposedBridge.getXposedVersion()"], "Fixed commit": "8f1cbc4677dc038ea6267246cf7a29ddfe34d4e8", "Url": "https://api.github.com/repos/tianma8023/XposedSmsCode", "Date": "2018-08-05T14:38:18Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (inputStream != null) { inputStream.close(); } } catch (java.io.IOException e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7420/buggy-version/src.main.java.com.mabl.integration.jenkins.JenkinsModule.java", "BodyUseAPI": ["java.io.FileInputStream.close()"], "Fixed commit": "125eb1adc28a1f79d51e7f9bc0b08f4c5c790971", "Url": "https://api.github.com/repos/jenkinsci/mabl-integration-plugin", "Date": "2018-05-18T13:53:03Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { adjQuantity = (stock.getDouble(Stock.S_QUANTITY)) - quantity; } catch (java.lang.ClassCastException e) { adjQuantity = ((double) (stock.getInteger(Stock.S_QUANTITY))) - quantity; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/5209/buggy-version/src.main.java.NewOrderTransaction.java", "BodyUseAPI": ["org.bson.Document.getDouble(Stock.S_QUANTITY)"], "Fixed commit": "d42620cc5b44bdf7b5e02c06166394b2d14dbdc7", "Url": "https://api.github.com/repos/chuaweiwen/supplier_mongo", "Date": "2018-10-29T03:11:56Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { quantity = orderLine.getInteger(OrderLine.OL_QUANTITY); } catch (java.lang.ClassCastException e) { quantity = ((double) (orderLine.getInteger(OrderLine.OL_QUANTITY))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/5209/buggy-version/src.main.java.OrderStatusTransaction.java", "BodyUseAPI": ["org.bson.Document.getInteger(OrderLine.OL_QUANTITY)"], "Fixed commit": "d42620cc5b44bdf7b5e02c06166394b2d14dbdc7", "Url": "https://api.github.com/repos/chuaweiwen/supplier_mongo", "Date": "2018-10-29T03:11:56Z"},
{"Line": "=>577", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { performLayoutAdjustment(); } catch (java.lang.Throwable t) { android.util.Log.e(jp.tkgktyk.flyinglayout.FlyingLayout.TAG, t.getLocalizedMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/4884/buggy-version/flyinglayout.src.main.java.jp.tkgktyk.flyinglayout.FlyingLayout.java", "BodyUseAPI": ["jp.tkgktyk.flyinglayout.FlyingLayout.Helper.performLayoutAdjustment()"], "Fixed commit": "d697d8aaace1999b134f47657fde939625fda212", "Url": "https://api.github.com/repos/zhougy0717/Niwatori", "Date": "2018-05-30T22:37:34Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { stopRecording(); } catch (java.lang.Exception e) { android.util.Log.d(com.danielkim.soundrecorder.RecordingService.LOG_TAG, \"onDestroy: error double tap\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7878/buggy-version/app.src.main.java.com.danielkim.soundrecorder.RecordingService.java", "BodyUseAPI": ["com.danielkim.soundrecorder.RecordingService.stopRecording()"], "Fixed commit": "faf0e3a8a5b701cfd049a8fc4a3b717c39460675", "Url": "https://api.github.com/repos/Devanw/SoundRecorderOSD", "Date": "2018-10-11T12:51:59Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { javacode.UI.Artist.artist.setText(text.toUpperCase()); } catch (java.lang.NullPointerException noArtist) { javacode.UI.Artist.artist.setText(\"NO ARTIST\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6191/buggy-version/src.javacode.UI.Artist.java", "BodyUseAPI": ["java.lang.String.toUpperCase()", "javafx.scene.text.Text.setText(java.lang.String)"], "Fixed commit": "fee7200226c974524aa99be0f08252d550ab816d", "Url": "https://api.github.com/repos/jeffrypig23/Mayterm", "Date": "2018-08-25T22:03:44Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { javacode.UI.Title.title.setText(text.toUpperCase()); } catch (java.lang.NullPointerException noTitle) { javacode.UI.Title.title.setText(\"NO TITLE\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6191/buggy-version/src.javacode.UI.Title.java", "BodyUseAPI": ["javafx.scene.text.Text.setText(java.lang.String)", "java.lang.String.toUpperCase()"], "Fixed commit": "fee7200226c974524aa99be0f08252d550ab816d", "Url": "https://api.github.com/repos/jeffrypig23/Mayterm", "Date": "2018-08-25T22:03:44Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { io.token.csrf.TokenRequestState tokenRequestState = io.token.csrf.TokenRequestState.fromSerializedState(java.net.URLDecoder.decode(parameters.get(io.token.csrf.TokenRequestCallbackParameters.STATE_FIELD), \"UTF-8\")); return new io.token.csrf.AutoValue_TokenRequestCallbackParameters(parameters.get(io.token.csrf.TokenRequestCallbackParameters.TOKEN_ID_FIELD), tokenRequestState, parameters.get(io.token.csrf.TokenRequestCallbackParameters.STATE_FIELD), ((io.token.proto.common.security.SecurityProtos.Signature) (io.token.proto.ProtoJson.fromJson(parameters.get(io.token.csrf.TokenRequestCallbackParameters.SIGNATURE_FIELD), io.token.proto.common.security.SecurityProtos.Signature.newBuilder())))); } catch (java.io.UnsupportedEncodingException ex) { throw new java.lang.RuntimeException(ex.getCause()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/2463/buggy-version/lib.src.main.java.io.token.csrf.TokenRequestCallbackParameters.java", "BodyUseAPI": ["java.net.URLDecoder.decode(java.lang.String,java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "io.token.csrf.TokenRequestState.fromSerializedState(java.lang.String)", "io.token.proto.common.security.SecurityProtos.Signature.newBuilder()", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "io.token.proto.ProtoJson.fromJson(java.lang.String,io.token.proto.common.security.SecurityProtos.Signature.newBuilder())"], "Fixed commit": "db58fc39f19332f4fde4b8f7f4e53a3a2fe80749", "Url": "https://api.github.com/repos/tokenio/sdk-java", "Date": "2018-03-19T17:30:11Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { string_build = result(string_build); } catch (java.lang.NumberFormatException nfe) { java.lang.System.out.println(\"error found\"); string_build = \"Bad Expression\"; j_calculator.J_Calculator.displaypanel.setText(string_build); string_build = \"\"; flaging = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6366/buggy-version/src.j_calculator.J_Calculator.java", "BodyUseAPI": ["j_calculator.J_Calculator.result(java.lang.String)"], "Fixed commit": "a2996b2241a3936c5803bf7d473b37e91bd5d73e", "Url": "https://api.github.com/repos/achintyachaudhary/J_Calculator", "Date": "2018-09-11T15:48:55Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { inputresult = ((double) ((int) (((inputUP) / (InputDOWN)) * 100))) / 100; } catch (java.lang.NumberFormatException e) { inputresult = -1.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/4518/buggy-version/app.src.main.java.com.example.mike.mathtogo2.BruchRechnen.java", "BodyUseAPI": [], "Fixed commit": "c26f19adb3ec58ddf5beab5c00176bc115471f9e", "Url": "https://api.github.com/repos/MiAlKon/MathToGo2", "Date": "2018-03-12T00:28:21Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.util.Log.d(\"redirect_url\", url); android.content.Intent intent = new android.content.Intent(); java.lang.String[] parts = url.split(\"=\"); intent.putExtra(com.example.notebook.denis_project.LoginActivity.ACCESS_TOKEN, parts[1]); setResult(com.example.notebook.denis_project.LoginActivity.RESULT_OK, intent); finish(); } catch (java.lang.Exception e) { android.util.Log.d(\"error\", e.getLocalizedMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6226/buggy-version/app.src.main.java.com.example.notebook.denis_project.LoginActivity.java", "BodyUseAPI": ["com.example.notebook.denis_project.LoginActivity.AuthClient.finish()", "com.example.notebook.denis_project.LoginActivity.AuthClient.setResult(int,android.content.Intent)", "android.util.Log.d(java.lang.String,java.lang.String)", "android.content.Intent.putExtra(java.lang.String,java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "de1170e13ec99161b6c9d1c7930afc44634e55f7", "Url": "https://api.github.com/repos/BlowYourBrain/deniska_project", "Date": "2018-03-31T19:50:08Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.System.out.println(\"\\nChoose option:\\n1.Print All\\n2.Search\\n3.Delete\"); java.lang.System.out.println(\"---------\"); java.lang.String in = input.nextLine(); int choice = java.lang.Integer.parseInt(in); if ((choice < 1) || (choice > 3)) { throw new java.lang.Exception(\"Choose a correct option\"); } while (true) { try { int id; switch (choice) { case 1 : sclab06part2.SCLab06Part2.printAllStudents(); break; case 2 : java.lang.System.out.println(\"Enter RegNo:\"); id = java.lang.Integer.parseInt(input.nextLine()); sclab06part2.SCLab06Part2.searchRecord(id); break; case 3 : java.lang.System.out.println(\"Enter RegNo:\"); id = java.lang.Integer.parseInt(input.nextLine()); sclab06part2.SCLab06Part2.deleteRecord(id); break; } break; } catch (java.sql.SQLException e) { java.lang.System.out.println(\"e1\"); java.lang.System.err.println(e); } catch (java.lang.Exception e) { java.lang.System.out.println(\"Incorrect Value Entered!\"); java.lang.System.err.println(e); } } } catch (java.lang.Exception e) { java.lang.System.err.println(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/4248/buggy-version/SCLab06Part2.java", "BodyUseAPI": ["sclab06part2.SCLab06Part2.printAllStudents()", "java.util.Scanner.nextLine()", "java.util.Scanner.nextLine()", "java.lang.Integer.parseInt(java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "sclab06part2.SCLab06Part2.searchRecord(int)", "java.io.PrintStream.println(java.lang.String)", "java.io.PrintStream.println(java.lang.Exception)", "sclab06part2.SCLab06Part2.deleteRecord(int)", "java.lang.Integer.parseInt(java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "java.util.Scanner.nextLine()", "java.io.PrintStream.println(java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "java.io.PrintStream.println(java.sql.SQLException)"], "Fixed commit": "4e6f3a188902e19915464172fb88fe918e665a70", "Url": "https://api.github.com/repos/mranon0007/SC-Lab06-Part2", "Date": "2018-03-23T17:12:34Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { snacks(\"Error\"); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7760/buggy-version/app.src.main.java.com.example.jespe.initiativiet.SignupFragment.java", "BodyUseAPI": ["com.example.jespe.initiativiet.SignupFragment.1.snacks(java.lang.String)"], "Fixed commit": "a99d3f25634963a1574ad696339a8ac07a7e02f4", "Url": "https://api.github.com/repos/JesperBang/initiativet", "Date": "2018-01-18T14:22:21Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { snack(\"Failed\"); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7760/buggy-version/app.src.main.java.com.example.jespe.initiativiet.ForgotPassFragment.java", "BodyUseAPI": ["com.example.jespe.initiativiet.ForgotPassFragment.1.snack(java.lang.String)"], "Fixed commit": "a99d3f25634963a1574ad696339a8ac07a7e02f4", "Url": "https://api.github.com/repos/JesperBang/initiativet", "Date": "2018-01-18T14:22:21Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { i = this.field.get(instance); } catch (java.lang.IllegalAccessException e) { i = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6611/buggy-version/src.main.java.io.github.nucleuspowered.neutrino.objectmapper.NeutrinoObjectMapper.java", "BodyUseAPI": ["java.lang.reflect.Field.get(java.lang.Object)"], "Fixed commit": "1d401a9b46263954716cc1df3e22b6d8a6da4052", "Url": "https://api.github.com/repos/NucleusPowered/Neutrino", "Date": "2018-04-07T17:39:54Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { res = restTemplate.getForObject(url, monitor.MonitorResult.class); } catch (java.lang.Exception e) { res = new monitor.MonitorResult(); res.setStatus(e.getMessage()); return new monitor.DataPoint(res); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/3406/buggy-version/src.main.java.monitor.RestCallService.java", "BodyUseAPI": ["org.springframework.web.client.RestTemplate.getForObject(java.lang.String,java.lang.Class)"], "Fixed commit": "b336763d8a784371b622fa471a49be43d918e104", "Url": "https://api.github.com/repos/ran-li/golo-coding-test", "Date": "2018-07-31T04:07:37Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { config.save(file); } catch (java.io.IOException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/796/buggy-version/src.java.net.firecraftmc.core.managers.HomeManager.java", "BodyUseAPI": ["org.bukkit.configuration.file.FileConfiguration.save(java.io.File)"], "Fixed commit": "8759c38bd4b983a3c87ab4082e30f9aa0bdfb3d7", "Url": "https://api.github.com/repos/Firestar311/FirecraftCore", "Date": "2018-05-22T19:27:35Z"},
{"Line": "=>464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { currentDate = dateFormat.parse(dateFormat.format(new java.util.Date())); } catch (java.text.ParseException e2) { javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), \"Could not format current date. Task may not be created. Contact support\", \"Date conversion error\", javax.swing.JOptionPane.ERROR_MESSAGE); e2.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/8093/buggy-version/Project.src.TaskCreationUI.java", "BodyUseAPI": ["java.text.DateFormat.parse(java.lang.String)", "java.text.DateFormat.format(java.util.Date)"], "Fixed commit": "be6a2ea908e66d7a673483f344b10e1a222f5cc2", "Url": "https://api.github.com/repos/sam-connolly/crispyDuckProject", "Date": "2018-05-07T19:58:33Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { quantity = java.lang.Integer.parseInt(quantityString); } catch (java.lang.NumberFormatException e) { quantity = 0; e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/4003/buggy-version/app.src.main.java.com.example.android.inventoryapp.EditProductsActivity.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "3fdf0b09bf3b341b87bb8b1c40b4a97981cd8a28", "Url": "https://api.github.com/repos/AM2037/InventoryApp", "Date": "2018-10-24T21:18:41Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { heapMemoryWriter.close(); jvmMemoryAreasWriter.close(); queueInfoWriter.close(); } catch (java.lang.Exception e) { org.maestro.inspector.activemq.ArtemisInspector.logger.warn(e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/8427/buggy-version/maestro-inspectors.maestro-activemq-inspectors.src.main.java.org.maestro.inspector.activemq.ArtemisInspector.java", "BodyUseAPI": ["org.maestro.inspector.activemq.JVMMemoryInfoWriter.close()", "org.maestro.inspector.activemq.JVMMemoryInfoWriter.close()", "org.maestro.inspector.activemq.QueueInfoWriter.close()"], "Fixed commit": "d7f8faf82ed1cfe1361c0cff2c484dd93eee9834", "Url": "https://api.github.com/repos/maestro-performance/maestro-java", "Date": "2018-05-17T23:38:42Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { curzsz = curzszrecord.getValue().doubleValue(); } catch (java.lang.Exception e) { e.printStackTrace(); com.exchangeinfomanager.asinglestockinfo.Stock.logger.info(\" \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7140/buggy-version/src.com.exchangeinfomanager.asinglestockinfo.Stock.java", "BodyUseAPI": ["org.jfree.data.time.TimeSeriesDataItem.getValue()", "curzszrecord.getValue().doubleValue()"], "Fixed commit": "ddbf6976f1d3becbcafa0243044d20e09f89404a", "Url": "https://api.github.com/repos/zimakaimenba/exchange", "Date": "2018-05-02T01:02:21Z"},
{"Line": "=>648", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { scale = java.lang.Float.valueOf(content); } catch (java.lang.NumberFormatException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7152/buggy-version/app.src.main.java.com.paulvarry.intra42.activities.ClusterMapContributeEditActivity.java", "BodyUseAPI": ["java.lang.Float.valueOf(java.lang.String)"], "Fixed commit": "574f01bd48f62a2862ff089714081c97d9007413", "Url": "https://api.github.com/repos/pvarry/intra42", "Date": "2018-03-29T16:02:29Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { skullMeta.setOwningPlayer(player); } catch (java.lang.Throwable e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6311/buggy-version/src.main.java.cn.apisium.authme.gui.window.AnvilLoginWindow.java", "BodyUseAPI": ["org.bukkit.inventory.meta.SkullMeta.setOwningPlayer(org.bukkit.entity.Player)"], "Fixed commit": "98df445eff17152351d2b0e53017e8cc6b29d431", "Url": "https://api.github.com/repos/lj2000lj/AuthMeGUI", "Date": "2018-04-19T07:07:38Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { type = io.github.mayhewsw.utils.HtmlGenerator.gl.get(java.lang.Integer.parseInt(s.replaceAll(\"[^0-9]+\", \"\"))).getType(); } catch (java.lang.Exception e) { id2feature.put(s, \"\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/5002/buggy-version/src.main.java.io.github.mayhewsw.utils.HtmlGenerator.java", "BodyUseAPI": ["io.github.mayhewsw.utils.HtmlGenerator.gl.get(java.lang.Integer.parseInt(s.replaceAll(\"[^0-9]+\", \"\"))).getType()", "java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "edu.illinois.cs.cogcomp.lorelei.kb.GeonamesLoader.get(int)"], "Fixed commit": "1b21d861e85d0a5cf27da451d0a402cbd9a0d777", "Url": "https://api.github.com/repos/psanna77/talen", "Date": "2018-07-08T15:19:38Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return password.pwm.util.secure.BCrypt.JBCrypt.checkpw(password, hashedPassword); } catch (java.lang.Exception e) { password.pwm.util.secure.BCrypt.LOGGER.debug((\"error while checking bcypt password: \" + (e.getMessage()))); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/4763/buggy-version/server.src.main.java.password.pwm.util.secure.BCrypt.java", "BodyUseAPI": ["password.pwm.util.secure.BCrypt.JBCrypt.checkpw(java.lang.String,java.lang.String)"], "Fixed commit": "ad191be0a4f83630405fbedc231ccbc4c92246c3", "Url": "https://api.github.com/repos/irtnog/pwm", "Date": "2018-03-21T10:25:59Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { profileID = response.getString(\"_id\"); android.support.design.widget.Snackbar.make(v, \"Saved your profile\", Snackbar.LENGTH_SHORT).setAction(\"Action\", null).show(); creatingProfile = false; } catch (org.json.JSONException e) { android.widget.Toast.makeText(getApplicationContext(), \"Failed to save profile\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6975/buggy-version/app.src.main.java.com.straats.ben.friendrequest.Profile.java", "BodyUseAPI": ["android.support.design.widget.Snackbar.make(v, \"Saved your profile\", Snackbar.LENGTH_SHORT).setAction(\"Action\", null).show()", "org.json.JSONObject.getString(java.lang.String)", "android.support.design.widget.Snackbar.make(android.view.View,java.lang.String,Snackbar.LENGTH_SHORT)", "android.support.design.widget.Snackbar.make(v, \"Saved your profile\", Snackbar.LENGTH_SHORT).setAction(java.lang.String,<nulltype>)"], "Fixed commit": "bf8aa14c03a1e27257093d8044719c815f429c2c", "Url": "https://api.github.com/repos/benstraats/Friend-Request-Android", "Date": "2018-04-04T16:39:01Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { storeClient.getSubscriptionMultitpleApi().subscriptionsMultiplePost(needToSubscribe, org.wso2.carbon.apimgt.application.extension.APIManagementProviderServiceImpl.CONTENT_TYPE); } catch (java.lang.Exception e) { org.wso2.carbon.apimgt.application.extension.APIManagementProviderServiceImpl.log.warn(\"Please check the API subscriptions.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/3759/buggy-version/components.apimgt-extensions.org.wso2.carbon.apimgt.application.extension.src.main.java.org.wso2.carbon.apimgt.application.extension.APIManagementProviderServiceImpl.java", "BodyUseAPI": ["storeClient.getSubscriptionMultitpleApi().subscriptionsMultiplePost(java.util.List<org.wso2.carbon.apimgt.application.extension.Subscription>,java.lang.String)", "org.wso2.carbon.apimgt.application.extension.StoreClient.getSubscriptionMultitpleApi()"], "Fixed commit": "dbf4ff01329290b4e475e2a31951f5ea4e705913", "Url": "https://api.github.com/repos/geethkokila/carbon-device-mgt", "Date": "2018-03-14T19:58:05Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.ryhmasahkopostiClient.sendRyhmasahkoposti(emailData); } catch (java.lang.RuntimeException e) { log.warn(\"Could not send email notification\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7259/buggy-version/src.main.java.fi.oph.henkilotietomuutospalvelu.service.impl.NotificationServiceImpl.java", "BodyUseAPI": ["fi.oph.henkilotietomuutospalvelu.client.RyhmasahkopostiClient.sendRyhmasahkoposti(fi.vm.sade.ryhmasahkoposti.api.dto.EmailData)"], "Fixed commit": "ba7ff53b4cfcd4a91f5952791b4b0a78ff68da2d", "Url": "https://api.github.com/repos/Opetushallitus/henkilotietomuutos", "Date": "2018-12-05T07:55:28Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return relevantAssessments.get(((targetMap.get(ObjectTargeted.ASSESSMENT)) - (DISPLAYED_INDEX_OFFSET))); } catch (java.lang.IndexOutOfBoundsException iob) { throw new seedu.addressbook.commands.commandformat.indexformat.AssessmentIndexOutOfBoundsException(iob.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9742/buggy-version/src.seedu.addressbook.commands.commandformat.indexformat.IndexFormatCommand.java", "BodyUseAPI": ["seedu.addressbook.commands.commandformat.indexformat.IndexFormatCommand.get(((targetMap.get(ObjectTargeted.ASSESSMENT)) - (DISPLAYED_INDEX_OFFSET)))", "java.util.HashMap<seedu.addressbook.commands.commandformat.indexformat.ObjectTargeted, java.lang.Integer>.get(ObjectTargeted.ASSESSMENT)"], "Fixed commit": "707095739e96812ab684054a2c885139a2de4467", "Url": "https://api.github.com/repos/Meg1456/main", "Date": "2018-11-02T03:15:58Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { babroval.eec_iv.util.ConnectionPool.serialPort.openPort(); } catch (java.lang.Exception e) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3750/buggy-version/eec-iv.src.babroval.eec_iv.util.ConnectionPool.java", "BodyUseAPI": ["jssc.SerialPort.openPort()"], "Fixed commit": "b5e3e50e5cc70a07a5dc7a64761fc25b3dd08cd5", "Url": "https://api.github.com/repos/babroval/ford-eec-iv-diagnostic", "Date": "2018-12-29T07:14:16Z"},
{"Line": "=>459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { java.lang.String path = r.readLine(); while (path != null) { sourceRoots.add(new java.io.File(path)); path = r.readLine(); } } finally { r.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9199/buggy-version/src.main.java.org.scoverage.plugin.SCoverageReportMojo.java", "BodyUseAPI": ["java.io.BufferedReader.readLine()", "java.io.BufferedReader.readLine()", "java.util.List<java.io.File>.add(java.io.File)"], "Fixed commit": "215ebeb318a9878d482be339b2bd2a5cb3f30990", "Url": "https://api.github.com/repos/scoverage/scoverage-maven-plugin", "Date": "2018-12-23T20:08:04Z"},
{"Line": "=>548", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { columnValue = java.lang.String.format(\"%1$,.0f\", currentCell.getNumericCellValue()).replace(\".\", \"\"); } catch (java.lang.IllegalStateException ie) { columnValue = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4695/buggy-version/src.jw.ministry.soft.modules.data.exchange.imports.InterestedListParser.java", "BodyUseAPI": ["org.apache.poi.ss.usermodel.Cell.getNumericCellValue()", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.format(java.lang.String,currentCell.getNumericCellValue())"], "Fixed commit": "42244181c59d40f89de6107de2ad96ef6fe58418", "Url": "https://api.github.com/repos/herveminko/MinistrySoft", "Date": "2018-11-04T19:00:29Z"},
{"Line": "=>593", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { db.open(); com.shared.models.Player[] players = getPlayersInGame(game); for (com.shared.models.Player p : players) { db.getUserDao().setPlayerPoints(p, 0); db.getUserDao().setPlayerTrainCars(p, 40); } db.close(true); } finally { if (db.isOpen()) db.close(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1445/buggy-version/sql.src.main.java.pollerexpress.database.DatabaseFacade.java", "BodyUseAPI": ["db.getUserDao().setPlayerTrainCars(com.shared.models.Player,int)", "pollerexpress.database.Database.open()", "db.getUserDao().setPlayerPoints(com.shared.models.Player,int)", "pollerexpress.database.Database.getUserDao()", "pollerexpress.database.DatabaseFacade.getPlayersInGame(com.shared.models.GameInfo)", "pollerexpress.database.Database.getUserDao()", "pollerexpress.database.Database.close(boolean)"], "Fixed commit": "e4dea025dd5679e3c94506741b411a870a5ae479", "Url": "https://api.github.com/repos/JOTworks/pollerexpress", "Date": "2018-11-29T03:40:15Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { array.free(); } catch (java.lang.AbstractMethodError err) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8565/buggy-version/src.main.java.liquibase.ext.dbmsoutput.DbmsOutputGenerator.java", "BodyUseAPI": ["java.sql.Array.free()"], "Fixed commit": "7dcab383909fc046069ae8cc93ae69019fdc3116", "Url": "https://api.github.com/repos/JasioPaw/liquibase-dbmsoutput", "Date": "2018-11-07T14:56:00Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { fr = new java.io.FileReader(rmiprintserver.PrintServant.passwordFile); br = new java.io.BufferedReader(fr); java.lang.String currentEntry; br.readLine(); while ((currentEntry = br.readLine()) != null) { java.lang.String[] fields = currentEntry.split(\"\\\\s+\"); if (fields[0].equals(username)) { java.lang.String hashedCorrectPassword = fields[1]; java.lang.String salt = fields[2]; java.security.MessageDigest md = java.security.MessageDigest.getInstance(\"SHA-512\"); md.update(password.getBytes(\"UTF8\")); md.update(salt.getBytes(\"UTF8\")); byte[] digest = md.digest(); java.lang.String hashedCandidatePassword = javax.xml.bind.DatatypeConverter.printHexBinary(digest).toLowerCase(); if (hashedCandidatePassword.equals(hashedCorrectPassword)) checkApproved = true; break; } } } catch (java.io.FileNotFoundException e) { } catch (java.io.IOException e) { } catch (java.security.NoSuchAlgorithmException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2152/buggy-version/RMIprintserver.src.rmiprintserver.PrintServant.java", "BodyUseAPI": ["java.security.MessageDigest.getInstance(java.lang.String)", "java.security.MessageDigest.update(byte[])", "java.io.BufferedReader.readLine()", "java.security.MessageDigest.digest()", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.io.BufferedReader.readLine()", "java.lang.String.getBytes(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.String.getBytes(java.lang.String)", "java.security.MessageDigest.update(byte[])", "javax.xml.bind.DatatypeConverter.printHexBinary(byte[])", "javax.xml.bind.DatatypeConverter.printHexBinary(digest).toLowerCase()"], "Fixed commit": "10f4fc5896f88bd423fab2d181b0f27a05f50251", "Url": "https://api.github.com/repos/alinasgzan/ds_authentication", "Date": "2018-11-12T01:02:22Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(1000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2414/buggy-version/fluentlenium-core.src.main.java.org.fluentlenium.core.action.WindowAction.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "09ec4f5004b9b19df093a63e903e5e05743a2ddf", "Url": "https://api.github.com/repos/FluentLenium/FluentLenium", "Date": "2018-11-29T08:54:29Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { bloodType = new seedu.address.model.person.medicalrecord.BloodType(argMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_BLOODTYPE).get()); } catch (java.lang.IllegalArgumentException iae) { throw new seedu.address.logic.parser.exceptions.ParseException(seedu.address.model.person.medicalrecord.BloodType.MESSAGE_BLOODTYPE_CONSTRAINTS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9387/buggy-version/src.main.java.seedu.address.logic.parser.AddMedicalRecordCommandParser.java", "BodyUseAPI": ["argMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_BLOODTYPE).get()", "seedu.address.logic.parser.ArgumentMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_BLOODTYPE)"], "Fixed commit": "47c548ac8354c420b0ca763798c8bb61f721d115", "Url": "https://api.github.com/repos/CS2103-AY1819S1-W16-4/main", "Date": "2018-11-01T16:17:53Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.draw(); } catch (java.sql.SQLException ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9805/buggy-version/src.university.UI.AccountManagementScreen.java", "BodyUseAPI": ["university.UI.AccountManagementScreen.draw()"], "Fixed commit": "042da5c584b3fde1bda32c3990ea7e6015852a89", "Url": "https://api.github.com/repos/CFAUSTINO-ARVELA/-Systems-Design-and-Security", "Date": "2018-11-19T11:59:33Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { totalPrice += part.getPrice(); } catch (java.lang.NullPointerException e) { totalPrice += 1.0E-4; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4857/buggy-version/ProjectFog.src.main.java.FunctionLayer.CarportCalculator.java", "BodyUseAPI": ["FunctionLayer.Entities.Part.getPrice()"], "Fixed commit": "fdde5378aaeb58affa179882b1a5cca0e3c554bb", "Url": "https://api.github.com/repos/mich561d/ProjectFog", "Date": "2018-11-16T11:55:28Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { serialWriter.close(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8260/buggy-version/server.src.main.java.ivark.diycomputer.Api.java", "BodyUseAPI": ["ivark.diycomputer.instructionset.eeprom.SerialWriter.close()"], "Fixed commit": "25a5b1aa08eba40739e30efb38ba15af5182806b", "Url": "https://api.github.com/repos/mkrabset/diy-computer", "Date": "2018-11-06T22:02:12Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((request.getSession().getServletContext().getAttribute(email)) != null) { ((javax.servlet.http.HttpSession) (request.getSession().getServletContext().getAttribute(email))).invalidate(); } } catch (java.lang.IllegalStateException ise) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8125/buggy-version/src.main.java.ua.com.training.controller.commands.LoginCommand.java", "BodyUseAPI": ["request.getSession().getServletContext()", "request.getSession().getServletContext()", "javax.servlet.http.HttpServletRequest.getSession()", "request.getSession().getServletContext().getAttribute(java.lang.String)", "javax.servlet.http.HttpServletRequest.getSession()", "((javax.servlet.http.HttpSession) (request.getSession().getServletContext().getAttribute(email))).invalidate()", "request.getSession().getServletContext().getAttribute(java.lang.String)"], "Fixed commit": "c3bf1d49401d21bbfbdc5aa5e79c9a30c296c8d4", "Url": "https://api.github.com/repos/YaroslavKratt/ConferenceManagementSystem", "Date": "2018-12-16T15:36:38Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String fileLoc = this.args.get(1); new java.lang.ProcessBuilder(fileLoc).start(); } catch (java.lang.Exception e) { ai.outputMessage(\"This program can not be found; are you sure you're looking in the right place!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1771/buggy-version/src.main.Command.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)", "java.lang.ProcessBuilder.start()"], "Fixed commit": "31e02a6136c26419bb0de1dcbfa68081cf6887b5", "Url": "https://api.github.com/repos/MarkSlayer456/Cyrus", "Date": "2018-11-13T17:13:35Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.productImageStorageService.deleteFile(dbProduct.getImageFilename()); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4470/buggy-version/src.main.java.com.javiles.eshop.services.ProductServiceImpl.java", "BodyUseAPI": ["com.javiles.eshop.models.Product.getImageFilename()", "com.javiles.eshop.storage.ProductImageStorageService.deleteFile(dbProduct.getImageFilename())"], "Fixed commit": "c91914799c85731ac08b0930eaabe2536858dfa7", "Url": "https://api.github.com/repos/pavilesjose/eShop", "Date": "2018-11-13T10:42:43Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((i + 2) == (codigo.tripleta.posFinalSwitch.peek())) { stb.append(analizadorsemantico.Ensamblador.LINEA).append(\"SalidaN\").append(codigo.tripleta.posFinalSwitch.peek()).append(\":\").append(analizadorsemantico.Ensamblador.LINEA); codigo.tripleta.posFinalSwitch.poll(); } } catch (java.lang.NullPointerException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8809/buggy-version/src.analizadorsemantico.Ensamblador.java", "BodyUseAPI": ["stb.append(analizadorsemantico.Ensamblador.LINEA).append(\"SalidaN\").append(codigo.tripleta.posFinalSwitch.peek()).append(\":\").append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "codigo.tripleta.posFinalSwitch.peek()", "codigo.tripleta.posFinalSwitch.poll()", "java.lang.StringBuilder.append(codigo.tripleta.posFinalSwitch.peek())", "codigo.tripleta.posFinalSwitch.peek()", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "a6103b3be16c69c3f3c0fe47269acd8737aaf02e", "Url": "https://api.github.com/repos/JIgnacioTG/AnalizadorSemanticoFinal", "Date": "2018-12-18T18:07:48Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (i == (codigo.tripleta.posFinalSwitch.peek())) { stb.append(analizadorsemantico.Ensamblador.LINEA).append(\"SalidaN\").append(codigo.tripleta.posFinalSwitch.peek()).append(\":\").append(analizadorsemantico.Ensamblador.LINEA); codigo.tripleta.posFinalSwitch.poll(); } } catch (java.lang.NullPointerException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8809/buggy-version/src.analizadorsemantico.Ensamblador.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "codigo.tripleta.posFinalSwitch.peek()", "java.lang.StringBuilder.append(java.lang.String)", "codigo.tripleta.posFinalSwitch.peek()", "java.lang.StringBuilder.append(codigo.tripleta.posFinalSwitch.peek())", "codigo.tripleta.posFinalSwitch.poll()", "stb.append(analizadorsemantico.Ensamblador.LINEA).append(\"SalidaN\").append(codigo.tripleta.posFinalSwitch.peek()).append(\":\").append(java.lang.String)"], "Fixed commit": "a6103b3be16c69c3f3c0fe47269acd8737aaf02e", "Url": "https://api.github.com/repos/JIgnacioTG/AnalizadorSemanticoFinal", "Date": "2018-12-18T18:07:48Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String downPaymentDueDateStr = org.apache.commons.lang3.time.DateFormatUtils.format(poHeader.getDueDate(), \"yyyy-MM-dd\"); hpoheader.setDOWNPAY_DUEDATE(downPaymentDueDateStr); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3722/buggy-version/ptg-vrm-api.src.main.java.com.ptg.vrm.po.service.SAPCreatePoService.java", "BodyUseAPI": ["org.apache.commons.lang3.time.DateFormatUtils.format(poHeader.getDueDate(),java.lang.String)", "com.ptg.ws.consumer.sap.po_create.oxm.BAPIMEPOHEADER.setDOWNPAY_DUEDATE(java.lang.String)", "com.ptg.vrm.po.model.PoHeader.getDueDate()"], "Fixed commit": "09434b5a45627e99e4cd72c82b5744c8800cd275", "Url": "https://api.github.com/repos/baiwa/ptg-vrm-api", "Date": "2018-12-16T15:04:44Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { sendResult(transactionId, true); } catch (MiddlewareServer.TransactionManager.RMNotAliveException e) { throw e; } finally { transactionList.remove(transactionId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9385/buggy-version/Server.MiddlewareServer.TransactionManager.TransactionManager.java", "BodyUseAPI": ["MiddlewareServer.TransactionManager.TransactionManager.sendResult(int,boolean)"], "Fixed commit": "14cc1104edd917f0457035f1b48ce20c742891e8", "Url": "https://api.github.com/repos/wkkmike/distributed_booking_system", "Date": "2018-11-28T02:50:43Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { new org.codice.solr.factory.impl.HttpSolrClientFactory().makeRealClient().ping(); } catch (java.lang.Exception e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7920/buggy-version/platform.solr.solr-factory-impl.src.main.java.org.codice.solr.factory.impl.SolrClientFactoryImpl.java", "BodyUseAPI": ["org.codice.solr.factory.impl.HttpSolrClientFactory.makeRealClient()", "new org.codice.solr.factory.impl.HttpSolrClientFactory().makeRealClient().ping()"], "Fixed commit": "b82531795680e7a23a872137fc297939bf289263", "Url": "https://api.github.com/repos/tbatie/ddf", "Date": "2018-11-30T03:30:57Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { model.updatePerson(personToEdit, editedPerson); model.updateFilteredPersonList(seedu.address.logic.commands.PREDICATE_SHOW_ALL_PERSONS); model.commitAddressBook(); } catch (seedu.address.model.person.exceptions.DuplicatePersonException dpe) { throw new seedu.address.logic.commands.exceptions.CommandException(seedu.address.logic.commands.EditCommand.MESSAGE_DUPLICATE_PERSON); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7683/buggy-version/src.main.java.seedu.address.logic.commands.EditCommand.java", "BodyUseAPI": ["seedu.address.model.Model.updateFilteredPersonList(seedu.address.logic.commands.PREDICATE_SHOW_ALL_PERSONS)", "seedu.address.model.Model.commitAddressBook()", "seedu.address.model.Model.updatePerson(seedu.address.model.person.Person,seedu.address.model.person.Person)"], "Fixed commit": "924cde5e6a1495f0fddb65501bc0d4fe38c98104", "Url": "https://api.github.com/repos/kaitingpeck/main", "Date": "2018-11-12T12:09:49Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { getWindow().requestFeature(Window.FEATURE_ACTION_BAR); getSupportActionBar().hide(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3865/buggy-version/DaroonAppLib.src.main.java.com.daroonapp.library.Pay.PayActivity.java", "BodyUseAPI": ["getWindow().requestFeature(Window.FEATURE_ACTION_BAR)", "com.daroonapp.library.Pay.PayActivity.getWindow()", "com.daroonapp.library.Pay.PayActivity.getSupportActionBar()", "getSupportActionBar().hide()"], "Fixed commit": "9f2450933ee90c91d8e10591e73b1543d33042ee", "Url": "https://api.github.com/repos/FanavaranFakhteh/DaroonApp", "Date": "2018-12-10T06:47:33Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { commandResults.append(client.ftpButton(commandTxt.getText())); } catch (java.io.IOException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4297/buggy-version/src.MainGui.java", "BodyUseAPI": ["javax.swing.JTextArea.append(client.ftpButton(commandTxt.getText()))", "javax.swing.JTextField.getText()", "nap_client.ftpButton(java.lang.String)"], "Fixed commit": "67151fff06a72ef9210b5154b9aeac8abb4b0776", "Url": "https://api.github.com/repos/MarcChesebro/java-GV-NAP", "Date": "2018-11-20T04:31:06Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { javax.json.JsonReader reader = javax.json.Json.createReader(new java.io.StringReader(json)); javax.json.JsonObject jobj = reader.readObject(); de.fehrprice.secrets.entity.Snippet s = de.fehrprice.secrets.dto.SnippetDTO.fromJsonObject(jobj); return s; } catch (javax.json.stream.JsonParsingException e) { de.fehrprice.secrets.dto.SnippetDTO.logger.warning((\"tried to parse non-json string: \" + json)); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2809/buggy-version/secrets.src.main.java.de.fehrprice.secrets.dto.SnippetDTO.java", "BodyUseAPI": ["de.fehrprice.secrets.dto.SnippetDTO.fromJsonObject(javax.json.JsonObject)", "javax.json.Json.createReader(java.io.StringReader)", "javax.json.JsonReader.readObject()"], "Fixed commit": "7acde4f74debabff9150b6260c84fc747f5c1795", "Url": "https://api.github.com/repos/ClemensX/secrets", "Date": "2018-12-30T16:51:55Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((n.getData()) == val) return n; if (val < (n.getData())) { return search(n.left, val); } return search(n.right, val); } catch (java.lang.NullPointerException e) { java.lang.System.out.println(\"Key does not exist in the tree\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4274/buggy-version/src.com.vaibhav.coursera.trees.BinarySearchTreeImpl.java", "BodyUseAPI": ["com.vaibhav.coursera.trees.Node.getData()", "com.vaibhav.coursera.trees.Node.getData()", "com.vaibhav.coursera.trees.BinarySearchTreeImpl.search(n.right,int)", "com.vaibhav.coursera.trees.BinarySearchTreeImpl.search(n.left,int)"], "Fixed commit": "bf2ee7525401b2e218fac77ac1d83133dd3136af", "Url": "https://api.github.com/repos/vaibhav6451956/DataStructures", "Date": "2018-12-24T09:06:03Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { trimmedSubject = subject.trim(); result = seedu.address.model.subject.SubjectType.isValidSubjectName(trimmedSubject); } catch (java.lang.IllegalArgumentException err) { throw new seedu.address.logic.parser.exceptions.ParseException(seedu.address.model.subject.Subject.MESSAGE_SUBJECT_CONSTRAINTS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5414/buggy-version/src.main.java.seedu.address.logic.parser.ParserUtil.java", "BodyUseAPI": ["java.lang.String.trim()", "seedu.address.model.subject.SubjectType.isValidSubjectName(java.lang.String)"], "Fixed commit": "d4dc61c69c344b3e9657e07387bf5ab6355d9ac4", "Url": "https://api.github.com/repos/lywjoel/main", "Date": "2018-11-10T15:06:33Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((android.provider.DocumentsContract.renameDocument(context.getContentResolver(), document.getUri(), target.getName())) != null) { return true; } } catch (java.io.FileNotFoundException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2997/buggy-version/app.src.main.java.be.ppareit.swiftp.utils.FileUtil.java", "BodyUseAPI": ["android.support.v4.provider.DocumentFile.getUri()", "android.content.Context.getContentResolver()", "java.io.File.getName()", "android.provider.DocumentsContract.renameDocument(context.getContentResolver(),document.getUri(),java.lang.String)"], "Fixed commit": "28feb1e7199c679d993864b8498eee0aba38c751", "Url": "https://api.github.com/repos/ppareit/swiftp", "Date": "2018-11-16T12:32:00Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((android.provider.DocumentsContract.renameDocument(context.getContentResolver(), document.getUri(), target.getName())) != null) { return true; } } catch (java.io.FileNotFoundException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2997/buggy-version/app.src.main.java.be.ppareit.swiftp.utils.FileUtil.java", "BodyUseAPI": ["android.support.v4.provider.DocumentFile.getUri()", "android.provider.DocumentsContract.renameDocument(context.getContentResolver(),document.getUri(),java.lang.String)", "android.content.Context.getContentResolver()", "java.io.File.getName()"], "Fixed commit": "28feb1e7199c679d993864b8498eee0aba38c751", "Url": "https://api.github.com/repos/ppareit/swiftp", "Date": "2018-11-16T12:32:00Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { read = stream.read(data, 0, data.length); } catch (java.io.IOException e) { throw new com.infiniteautomation.mango.io.serial.virtual.SerialServerSocketConnectionClosedException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/681/buggy-version/Core.src.com.infiniteautomation.mango.io.serial.virtual.SerialServerSocketBridgeInputStream.java", "BodyUseAPI": ["java.io.InputStream.read(byte[],int,int)"], "Fixed commit": "fb94c6d80f96949d05779d8823d4919f12dc8f13", "Url": "https://api.github.com/repos/infiniteautomation/ma-core-public", "Date": "2018-11-02T17:12:55Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return java.util.Optional.of(consentRestTemplate.getForEntity(remotePisConsentUrls.getPisConsentById(), de.adorsys.psd2.consent.api.pis.proto.PisConsentResponse.class, consentId).getBody()); } catch (de.adorsys.psd2.consent.config.CmsRestException cmsRestException) { return java.util.Optional.empty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6221/buggy-version/consent-management.consent-xs2a-client.src.main.java.de.adorsys.psd2.consent.service.PisConsentServiceRemote.java", "BodyUseAPI": ["java.util.Optional.of(consentRestTemplate.getForEntity(remotePisConsentUrls.getPisConsentById(), de.adorsys.psd2.consent.api.pis.proto.PisConsentResponse.class, consentId).getBody())", "consentRestTemplate.getForEntity(remotePisConsentUrls.getPisConsentById(), de.adorsys.psd2.consent.api.pis.proto.PisConsentResponse.class, consentId).getBody()", "org.springframework.web.client.RestTemplate.getForEntity(remotePisConsentUrls.getPisConsentById(),java.lang.Class,java.lang.String)", "de.adorsys.psd2.consent.config.PisConsentRemoteUrls.getPisConsentById()"], "Fixed commit": "7c26e92c9f93a4b07c14956fb5ebee897190d47f", "Url": "https://api.github.com/repos/adorsys/xs2a", "Date": "2018-12-20T08:29:50Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { citysMemoryDataBase = new Model.CitysMemoryDataBase(\"https://restcountries.eu/rest/v2/all?fields=name;capital;population;currencies\"); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/704/buggy-version/src.main.java.Model.Manager.java", "BodyUseAPI": [], "Fixed commit": "d3a257980706e9a76642e0ba0b0e0771f24b3fa4", "Url": "https://api.github.com/repos/AlonZolfi/InformationRetrieval", "Date": "2018-12-01T16:54:49Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.scheduleJob(job, JobType.LOCAL); } catch (java.io.IOException ioe) { java.lang.String errorString = \"Failed to schedule local job \" + (job.getJobId()); this.log.error(errorString, ioe); return new org.springframework.http.ResponseEntity(errorString, org.springframework.http.HttpStatus.SERVICE_UNAVAILABLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2236/buggy-version/SmartRaceCar.Modules.racecarbackend.src.main.java.be.uantwerpen.fti.ds.sc.racecarbackend.JobDispatcher.java", "BodyUseAPI": ["be.uantwerpen.fti.ds.sc.racecarbackend.JobDispatcher.scheduleJob(be.uantwerpen.fti.ds.sc.racecarbackend.Job,JobType.LOCAL)"], "Fixed commit": "0677050e43ab42494472cfc520006268f00693c8", "Url": "https://api.github.com/repos/SmartCity-UAntwerpen/SmartRaceCar", "Date": "2018-12-20T13:55:47Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.checkJobQueue(); } catch (java.io.IOException ioe) { java.lang.String errorString = \"An error occurred while checking the job queue.\"; this.log.error(errorString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2236/buggy-version/SmartRaceCar.Modules.racecarbackend.src.main.java.be.uantwerpen.fti.ds.sc.racecarbackend.JobDispatcher.java", "BodyUseAPI": ["be.uantwerpen.fti.ds.sc.racecarbackend.JobDispatcher.checkJobQueue()"], "Fixed commit": "0677050e43ab42494472cfc520006268f00693c8", "Url": "https://api.github.com/repos/SmartCity-UAntwerpen/SmartRaceCar", "Date": "2018-12-20T13:55:47Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return (checked.distanceSquared(target)) <= radiusSquared; } catch (java.lang.IllegalArgumentException e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9243/buggy-version/src.main.java.com.github.crashdemons.azbasics.utils.Positions.java", "BodyUseAPI": ["org.bukkit.Location.distanceSquared(org.bukkit.Location)"], "Fixed commit": "7da7f795114e03e69997448fd20f40948ab027f4", "Url": "https://api.github.com/repos/crashdemons/AZBasics", "Date": "2018-11-22T02:20:11Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { ftg = new stbFont.FontTextureGenerator(\"res/fonts/ARIALBD.TTF\"); } catch (java.io.IOException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9816/buggy-version/gui_lib.stbFont.TTFBox.java", "BodyUseAPI": [], "Fixed commit": "93757725b6a0f509ccedf48842754b9cef0b12e8", "Url": "https://api.github.com/repos/dvdb97/Turn-based-Strategy", "Date": "2018-11-29T10:21:10Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { result = formatReader.decode(binaryBitmap, hints); } catch (com.google.zxing.NotFoundException e) { hints.remove(DecodeHintType.PURE_BARCODE); try { result = formatReader.decode(binaryBitmap, hints); } catch (com.google.zxing.NotFoundException e1) { throw new cn.hutool.extra.qrcode.QrCodeException(e1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4763/buggy-version/hutool-extra.src.main.java.cn.hutool.extra.qrcode.QrCodeUtil.java", "BodyUseAPI": ["com.google.zxing.MultiFormatReader.decode(com.google.zxing.BinaryBitmap,java.util.HashMap<com.google.zxing.DecodeHintType, java.lang.Object>)"], "Fixed commit": "7607fa45f3dea1b277cbf4fa63900a2e6f82dc3c", "Url": "https://api.github.com/repos/looly/hutool", "Date": "2018-12-11T16:17:54Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.security.KeyStore.PrivateKeyEntry entry = ((java.security.KeyStore.PrivateKeyEntry) (util.X509Utils.getInstance().getKeyStore().getEntry(string, pp))); java.security.cert.X509Certificate cert = ((java.security.cert.X509Certificate) (entry.getCertificate())); result = cert.getIssuerDN().toString(); } catch (java.lang.Exception ex) { java.util.logging.Logger.getLogger(implementation.MyCode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6251/buggy-version/src.implementation.MyCode.java", "BodyUseAPI": ["util.X509Utils.getInstance().getKeyStore()", "java.security.KeyStore.PrivateKeyEntry.getCertificate()", "java.security.Principal.toString()", "util.X509Utils.getInstance()", "java.security.cert.X509Certificate.getIssuerDN()", "util.X509Utils.getInstance().getKeyStore().getEntry(java.lang.String,java.security.KeyStore.ProtectionParameter)"], "Fixed commit": "d14742e94ab7489ea75f13ad3eade4302492cb15", "Url": "https://api.github.com/repos/obabovic/x.509_certificate", "Date": "2017-05-18T11:12:43Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { minimumVersion = java.lang.Integer.parseInt(MinV.getText().toString()); maximumVersion = java.lang.Integer.parseInt(MaxV.getText().toString()); mask = java.lang.Integer.parseInt(Mask.getText().toString()); } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4393/buggy-version/app.src.main.java.com.lempereur.benjamin.barcode.GeneratorFragment.java", "BodyUseAPI": ["java.lang.Integer.parseInt(MaxV.getText().toString())", "java.lang.Integer.parseInt(MinV.getText().toString())", "android.widget.EditText.getText()", "MinV.getText().toString()", "Mask.getText().toString()", "android.widget.EditText.getText()", "java.lang.Integer.parseInt(Mask.getText().toString())", "android.widget.EditText.getText()", "MaxV.getText().toString()"], "Fixed commit": "a4f0f522b8cc4346e402e01b589665e9eba1d48e", "Url": "https://api.github.com/repos/LempereurBenjamin/BarcodeTools", "Date": "2018-12-18T23:05:23Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mAuthService.dispose(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2536/buggy-version/library.src.main.java.com.okta.appauth.android.OktaAppAuth.java", "BodyUseAPI": ["net.openid.appauth.AuthorizationService.dispose()"], "Fixed commit": "24c1b2112ada5fceecebf68ab58d7d0e69081930", "Url": "https://api.github.com/repos/igormartsekha/okta-sdk-appauth-android", "Date": "2018-12-27T17:59:04Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { userService.delete(id); return new org.springframework.http.ResponseEntity(new com.fenlan.spring.shop.controller.admin.ResponseFormat.Builder(new java.util.Date(), HttpStatus.OK.value()).error(null).message(\"delete seller success\").path(request.getServletPath()).data(null).build(), org.springframework.http.HttpStatus.OK); } catch (java.lang.Exception e) { return new org.springframework.http.ResponseEntity(new com.fenlan.spring.shop.controller.admin.ResponseFormat.Builder(new java.util.Date(), HttpStatus.INTERNAL_SERVER_ERROR.value()).error(\"Not found\").message(\"delete seller failed\").path(request.getServletPath()).data(null).build(), org.springframework.http.HttpStatus.INTERNAL_SERVER_ERROR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7431/buggy-version/src.main.java.com.fenlan.spring.shop.controller.admin.ManageSellerController.java", "BodyUseAPI": ["new com.fenlan.spring.shop.controller.admin.ResponseFormat.Builder(new java.util.Date(), HttpStatus.OK.value()).error(null).message(java.lang.String)", "new com.fenlan.spring.shop.controller.admin.ResponseFormat.Builder(new java.util.Date(), HttpStatus.OK.value()).error(null).message(\"delete seller success\").path(request.getServletPath()).data(null).build()", "com.fenlan.spring.shop.service.UserService.delete(java.lang.Long)", "new com.fenlan.spring.shop.controller.admin.ResponseFormat.Builder(new java.util.Date(), HttpStatus.OK.value()).error(null).message(\"delete seller success\").path(request.getServletPath()).data(<nulltype>)", "javax.servlet.http.HttpServletRequest.getServletPath()", "new com.fenlan.spring.shop.controller.admin.ResponseFormat.Builder(new java.util.Date(), HttpStatus.OK.value()).error(null).message(\"delete seller success\").path(request.getServletPath())", "HttpStatus.OK.value()", "com.fenlan.spring.shop.controller.admin.ResponseFormat.Builder.error(<nulltype>)"], "Fixed commit": "e84f1325c555a6f95523d77bd633ad00b0793f62", "Url": "https://api.github.com/repos/PMC6/online-store-back-end", "Date": "2018-12-15T07:37:54Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.io.File file = new java.io.File(this.pathtofile); java.util.Scanner scan = new java.util.Scanner(file); scan.close(); } catch (java.io.FileNotFoundException e) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5116/buggy-version/nheisler-PA2.src.WGraph.java", "BodyUseAPI": ["java.util.Scanner.close()"], "Fixed commit": "0df00d4b0555060610cd7a3a2eb6fa8abf7cfbae", "Url": "https://api.github.com/repos/IgnorantGeek/CS311", "Date": "2018-11-13T16:23:32Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.ryhmasahkopostiClient.sendRyhmasahkoposti(emailData); } catch (java.lang.RuntimeException e) { log.warn(\"Could not send email notification\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7259/buggy-version/src.main.java.fi.oph.henkilotietomuutospalvelu.service.impl.NotificationServiceImpl.java", "BodyUseAPI": ["fi.oph.henkilotietomuutospalvelu.client.RyhmasahkopostiClient.sendRyhmasahkoposti(fi.vm.sade.ryhmasahkoposti.api.dto.EmailData)"], "Fixed commit": "ba7ff53b4cfcd4a91f5952791b4b0a78ff68da2d", "Url": "https://api.github.com/repos/Opetushallitus/henkilotietomuutos", "Date": "2018-12-05T07:55:28Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return relevantAssessments.get(((targetMap.get(ObjectTargeted.ASSESSMENT)) - (DISPLAYED_INDEX_OFFSET))); } catch (java.lang.IndexOutOfBoundsException iob) { throw new seedu.addressbook.commands.commandformat.indexformat.AssessmentIndexOutOfBoundsException(iob.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9742/buggy-version/src.seedu.addressbook.commands.commandformat.indexformat.IndexFormatCommand.java", "BodyUseAPI": ["seedu.addressbook.commands.commandformat.indexformat.IndexFormatCommand.get(((targetMap.get(ObjectTargeted.ASSESSMENT)) - (DISPLAYED_INDEX_OFFSET)))", "java.util.HashMap<seedu.addressbook.commands.commandformat.indexformat.ObjectTargeted, java.lang.Integer>.get(ObjectTargeted.ASSESSMENT)"], "Fixed commit": "707095739e96812ab684054a2c885139a2de4467", "Url": "https://api.github.com/repos/Meg1456/main", "Date": "2018-11-02T03:15:58Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { babroval.eec_iv.util.ConnectionPool.serialPort.openPort(); } catch (java.lang.Exception e) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3750/buggy-version/eec-iv.src.babroval.eec_iv.util.ConnectionPool.java", "BodyUseAPI": ["jssc.SerialPort.openPort()"], "Fixed commit": "b5e3e50e5cc70a07a5dc7a64761fc25b3dd08cd5", "Url": "https://api.github.com/repos/babroval/ford-eec-iv-diagnostic", "Date": "2018-12-29T07:14:16Z"},
{"Line": "=>459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { java.lang.String path = r.readLine(); while (path != null) { sourceRoots.add(new java.io.File(path)); path = r.readLine(); } } finally { r.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9199/buggy-version/src.main.java.org.scoverage.plugin.SCoverageReportMojo.java", "BodyUseAPI": ["java.io.BufferedReader.readLine()", "java.io.BufferedReader.readLine()", "java.util.List<java.io.File>.add(java.io.File)"], "Fixed commit": "215ebeb318a9878d482be339b2bd2a5cb3f30990", "Url": "https://api.github.com/repos/scoverage/scoverage-maven-plugin", "Date": "2018-12-23T20:08:04Z"},
{"Line": "=>548", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { columnValue = java.lang.String.format(\"%1$,.0f\", currentCell.getNumericCellValue()).replace(\".\", \"\"); } catch (java.lang.IllegalStateException ie) { columnValue = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4695/buggy-version/src.jw.ministry.soft.modules.data.exchange.imports.InterestedListParser.java", "BodyUseAPI": ["org.apache.poi.ss.usermodel.Cell.getNumericCellValue()", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.format(java.lang.String,currentCell.getNumericCellValue())"], "Fixed commit": "42244181c59d40f89de6107de2ad96ef6fe58418", "Url": "https://api.github.com/repos/herveminko/MinistrySoft", "Date": "2018-11-04T19:00:29Z"},
{"Line": "=>593", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { db.open(); com.shared.models.Player[] players = getPlayersInGame(game); for (com.shared.models.Player p : players) { db.getUserDao().setPlayerPoints(p, 0); db.getUserDao().setPlayerTrainCars(p, 40); } db.close(true); } finally { if (db.isOpen()) db.close(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1445/buggy-version/sql.src.main.java.pollerexpress.database.DatabaseFacade.java", "BodyUseAPI": ["db.getUserDao().setPlayerTrainCars(com.shared.models.Player,int)", "pollerexpress.database.Database.open()", "db.getUserDao().setPlayerPoints(com.shared.models.Player,int)", "pollerexpress.database.Database.getUserDao()", "pollerexpress.database.DatabaseFacade.getPlayersInGame(com.shared.models.GameInfo)", "pollerexpress.database.Database.getUserDao()", "pollerexpress.database.Database.close(boolean)"], "Fixed commit": "e4dea025dd5679e3c94506741b411a870a5ae479", "Url": "https://api.github.com/repos/JOTworks/pollerexpress", "Date": "2018-11-29T03:40:15Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { array.free(); } catch (java.lang.AbstractMethodError err) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8565/buggy-version/src.main.java.liquibase.ext.dbmsoutput.DbmsOutputGenerator.java", "BodyUseAPI": ["java.sql.Array.free()"], "Fixed commit": "7dcab383909fc046069ae8cc93ae69019fdc3116", "Url": "https://api.github.com/repos/JasioPaw/liquibase-dbmsoutput", "Date": "2018-11-07T14:56:00Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { fr = new java.io.FileReader(rmiprintserver.PrintServant.passwordFile); br = new java.io.BufferedReader(fr); java.lang.String currentEntry; br.readLine(); while ((currentEntry = br.readLine()) != null) { java.lang.String[] fields = currentEntry.split(\"\\\\s+\"); if (fields[0].equals(username)) { java.lang.String hashedCorrectPassword = fields[1]; java.lang.String salt = fields[2]; java.security.MessageDigest md = java.security.MessageDigest.getInstance(\"SHA-512\"); md.update(password.getBytes(\"UTF8\")); md.update(salt.getBytes(\"UTF8\")); byte[] digest = md.digest(); java.lang.String hashedCandidatePassword = javax.xml.bind.DatatypeConverter.printHexBinary(digest).toLowerCase(); if (hashedCandidatePassword.equals(hashedCorrectPassword)) checkApproved = true; break; } } } catch (java.io.FileNotFoundException e) { } catch (java.io.IOException e) { } catch (java.security.NoSuchAlgorithmException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2152/buggy-version/RMIprintserver.src.rmiprintserver.PrintServant.java", "BodyUseAPI": ["java.security.MessageDigest.getInstance(java.lang.String)", "java.security.MessageDigest.update(byte[])", "java.io.BufferedReader.readLine()", "java.security.MessageDigest.digest()", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.io.BufferedReader.readLine()", "java.lang.String.getBytes(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.String.getBytes(java.lang.String)", "java.security.MessageDigest.update(byte[])", "javax.xml.bind.DatatypeConverter.printHexBinary(byte[])", "javax.xml.bind.DatatypeConverter.printHexBinary(digest).toLowerCase()"], "Fixed commit": "10f4fc5896f88bd423fab2d181b0f27a05f50251", "Url": "https://api.github.com/repos/alinasgzan/ds_authentication", "Date": "2018-11-12T01:02:22Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(1000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2414/buggy-version/fluentlenium-core.src.main.java.org.fluentlenium.core.action.WindowAction.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "09ec4f5004b9b19df093a63e903e5e05743a2ddf", "Url": "https://api.github.com/repos/FluentLenium/FluentLenium", "Date": "2018-11-29T08:54:29Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { bloodType = new seedu.address.model.person.medicalrecord.BloodType(argMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_BLOODTYPE).get()); } catch (java.lang.IllegalArgumentException iae) { throw new seedu.address.logic.parser.exceptions.ParseException(seedu.address.model.person.medicalrecord.BloodType.MESSAGE_BLOODTYPE_CONSTRAINTS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9387/buggy-version/src.main.java.seedu.address.logic.parser.AddMedicalRecordCommandParser.java", "BodyUseAPI": ["argMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_BLOODTYPE).get()", "seedu.address.logic.parser.ArgumentMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_BLOODTYPE)"], "Fixed commit": "47c548ac8354c420b0ca763798c8bb61f721d115", "Url": "https://api.github.com/repos/CS2103-AY1819S1-W16-4/main", "Date": "2018-11-01T16:17:53Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.draw(); } catch (java.sql.SQLException ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9805/buggy-version/src.university.UI.AccountManagementScreen.java", "BodyUseAPI": ["university.UI.AccountManagementScreen.draw()"], "Fixed commit": "042da5c584b3fde1bda32c3990ea7e6015852a89", "Url": "https://api.github.com/repos/CFAUSTINO-ARVELA/-Systems-Design-and-Security", "Date": "2018-11-19T11:59:33Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { totalPrice += part.getPrice(); } catch (java.lang.NullPointerException e) { totalPrice += 1.0E-4; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4857/buggy-version/ProjectFog.src.main.java.FunctionLayer.CarportCalculator.java", "BodyUseAPI": ["FunctionLayer.Entities.Part.getPrice()"], "Fixed commit": "fdde5378aaeb58affa179882b1a5cca0e3c554bb", "Url": "https://api.github.com/repos/mich561d/ProjectFog", "Date": "2018-11-16T11:55:28Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { serialWriter.close(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8260/buggy-version/server.src.main.java.ivark.diycomputer.Api.java", "BodyUseAPI": ["ivark.diycomputer.instructionset.eeprom.SerialWriter.close()"], "Fixed commit": "25a5b1aa08eba40739e30efb38ba15af5182806b", "Url": "https://api.github.com/repos/mkrabset/diy-computer", "Date": "2018-11-06T22:02:12Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((request.getSession().getServletContext().getAttribute(email)) != null) { ((javax.servlet.http.HttpSession) (request.getSession().getServletContext().getAttribute(email))).invalidate(); } } catch (java.lang.IllegalStateException ise) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8125/buggy-version/src.main.java.ua.com.training.controller.commands.LoginCommand.java", "BodyUseAPI": ["request.getSession().getServletContext()", "request.getSession().getServletContext()", "javax.servlet.http.HttpServletRequest.getSession()", "request.getSession().getServletContext().getAttribute(java.lang.String)", "javax.servlet.http.HttpServletRequest.getSession()", "((javax.servlet.http.HttpSession) (request.getSession().getServletContext().getAttribute(email))).invalidate()", "request.getSession().getServletContext().getAttribute(java.lang.String)"], "Fixed commit": "c3bf1d49401d21bbfbdc5aa5e79c9a30c296c8d4", "Url": "https://api.github.com/repos/YaroslavKratt/ConferenceManagementSystem", "Date": "2018-12-16T15:36:38Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String fileLoc = this.args.get(1); new java.lang.ProcessBuilder(fileLoc).start(); } catch (java.lang.Exception e) { ai.outputMessage(\"This program can not be found; are you sure you're looking in the right place!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1771/buggy-version/src.main.Command.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)", "java.lang.ProcessBuilder.start()"], "Fixed commit": "31e02a6136c26419bb0de1dcbfa68081cf6887b5", "Url": "https://api.github.com/repos/MarkSlayer456/Cyrus", "Date": "2018-11-13T17:13:35Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.productImageStorageService.deleteFile(dbProduct.getImageFilename()); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4470/buggy-version/src.main.java.com.javiles.eshop.services.ProductServiceImpl.java", "BodyUseAPI": ["com.javiles.eshop.models.Product.getImageFilename()", "com.javiles.eshop.storage.ProductImageStorageService.deleteFile(dbProduct.getImageFilename())"], "Fixed commit": "c91914799c85731ac08b0930eaabe2536858dfa7", "Url": "https://api.github.com/repos/pavilesjose/eShop", "Date": "2018-11-13T10:42:43Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((i + 2) == (codigo.tripleta.posFinalSwitch.peek())) { stb.append(analizadorsemantico.Ensamblador.LINEA).append(\"SalidaN\").append(codigo.tripleta.posFinalSwitch.peek()).append(\":\").append(analizadorsemantico.Ensamblador.LINEA); codigo.tripleta.posFinalSwitch.poll(); } } catch (java.lang.NullPointerException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8809/buggy-version/src.analizadorsemantico.Ensamblador.java", "BodyUseAPI": ["stb.append(analizadorsemantico.Ensamblador.LINEA).append(\"SalidaN\").append(codigo.tripleta.posFinalSwitch.peek()).append(\":\").append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "codigo.tripleta.posFinalSwitch.peek()", "codigo.tripleta.posFinalSwitch.poll()", "java.lang.StringBuilder.append(codigo.tripleta.posFinalSwitch.peek())", "codigo.tripleta.posFinalSwitch.peek()", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "a6103b3be16c69c3f3c0fe47269acd8737aaf02e", "Url": "https://api.github.com/repos/JIgnacioTG/AnalizadorSemanticoFinal", "Date": "2018-12-18T18:07:48Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (i == (codigo.tripleta.posFinalSwitch.peek())) { stb.append(analizadorsemantico.Ensamblador.LINEA).append(\"SalidaN\").append(codigo.tripleta.posFinalSwitch.peek()).append(\":\").append(analizadorsemantico.Ensamblador.LINEA); codigo.tripleta.posFinalSwitch.poll(); } } catch (java.lang.NullPointerException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8809/buggy-version/src.analizadorsemantico.Ensamblador.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "codigo.tripleta.posFinalSwitch.peek()", "java.lang.StringBuilder.append(java.lang.String)", "codigo.tripleta.posFinalSwitch.peek()", "java.lang.StringBuilder.append(codigo.tripleta.posFinalSwitch.peek())", "codigo.tripleta.posFinalSwitch.poll()", "stb.append(analizadorsemantico.Ensamblador.LINEA).append(\"SalidaN\").append(codigo.tripleta.posFinalSwitch.peek()).append(\":\").append(java.lang.String)"], "Fixed commit": "a6103b3be16c69c3f3c0fe47269acd8737aaf02e", "Url": "https://api.github.com/repos/JIgnacioTG/AnalizadorSemanticoFinal", "Date": "2018-12-18T18:07:48Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String downPaymentDueDateStr = org.apache.commons.lang3.time.DateFormatUtils.format(poHeader.getDueDate(), \"yyyy-MM-dd\"); hpoheader.setDOWNPAY_DUEDATE(downPaymentDueDateStr); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3722/buggy-version/ptg-vrm-api.src.main.java.com.ptg.vrm.po.service.SAPCreatePoService.java", "BodyUseAPI": ["org.apache.commons.lang3.time.DateFormatUtils.format(poHeader.getDueDate(),java.lang.String)", "com.ptg.ws.consumer.sap.po_create.oxm.BAPIMEPOHEADER.setDOWNPAY_DUEDATE(java.lang.String)", "com.ptg.vrm.po.model.PoHeader.getDueDate()"], "Fixed commit": "09434b5a45627e99e4cd72c82b5744c8800cd275", "Url": "https://api.github.com/repos/baiwa/ptg-vrm-api", "Date": "2018-12-16T15:04:44Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { sendResult(transactionId, true); } catch (MiddlewareServer.TransactionManager.RMNotAliveException e) { throw e; } finally { transactionList.remove(transactionId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9385/buggy-version/Server.MiddlewareServer.TransactionManager.TransactionManager.java", "BodyUseAPI": ["MiddlewareServer.TransactionManager.TransactionManager.sendResult(int,boolean)"], "Fixed commit": "14cc1104edd917f0457035f1b48ce20c742891e8", "Url": "https://api.github.com/repos/wkkmike/distributed_booking_system", "Date": "2018-11-28T02:50:43Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { new org.codice.solr.factory.impl.HttpSolrClientFactory().makeRealClient().ping(); } catch (java.lang.Exception e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7920/buggy-version/platform.solr.solr-factory-impl.src.main.java.org.codice.solr.factory.impl.SolrClientFactoryImpl.java", "BodyUseAPI": ["org.codice.solr.factory.impl.HttpSolrClientFactory.makeRealClient()", "new org.codice.solr.factory.impl.HttpSolrClientFactory().makeRealClient().ping()"], "Fixed commit": "b82531795680e7a23a872137fc297939bf289263", "Url": "https://api.github.com/repos/tbatie/ddf", "Date": "2018-11-30T03:30:57Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { model.updatePerson(personToEdit, editedPerson); model.updateFilteredPersonList(seedu.address.logic.commands.PREDICATE_SHOW_ALL_PERSONS); model.commitAddressBook(); } catch (seedu.address.model.person.exceptions.DuplicatePersonException dpe) { throw new seedu.address.logic.commands.exceptions.CommandException(seedu.address.logic.commands.EditCommand.MESSAGE_DUPLICATE_PERSON); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7683/buggy-version/src.main.java.seedu.address.logic.commands.EditCommand.java", "BodyUseAPI": ["seedu.address.model.Model.updateFilteredPersonList(seedu.address.logic.commands.PREDICATE_SHOW_ALL_PERSONS)", "seedu.address.model.Model.commitAddressBook()", "seedu.address.model.Model.updatePerson(seedu.address.model.person.Person,seedu.address.model.person.Person)"], "Fixed commit": "924cde5e6a1495f0fddb65501bc0d4fe38c98104", "Url": "https://api.github.com/repos/kaitingpeck/main", "Date": "2018-11-12T12:09:49Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { getWindow().requestFeature(Window.FEATURE_ACTION_BAR); getSupportActionBar().hide(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3865/buggy-version/DaroonAppLib.src.main.java.com.daroonapp.library.Pay.PayActivity.java", "BodyUseAPI": ["getWindow().requestFeature(Window.FEATURE_ACTION_BAR)", "com.daroonapp.library.Pay.PayActivity.getWindow()", "com.daroonapp.library.Pay.PayActivity.getSupportActionBar()", "getSupportActionBar().hide()"], "Fixed commit": "9f2450933ee90c91d8e10591e73b1543d33042ee", "Url": "https://api.github.com/repos/FanavaranFakhteh/DaroonApp", "Date": "2018-12-10T06:47:33Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { commandResults.append(client.ftpButton(commandTxt.getText())); } catch (java.io.IOException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4297/buggy-version/src.MainGui.java", "BodyUseAPI": ["javax.swing.JTextArea.append(client.ftpButton(commandTxt.getText()))", "javax.swing.JTextField.getText()", "nap_client.ftpButton(java.lang.String)"], "Fixed commit": "67151fff06a72ef9210b5154b9aeac8abb4b0776", "Url": "https://api.github.com/repos/MarcChesebro/java-GV-NAP", "Date": "2018-11-20T04:31:06Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { javax.json.JsonReader reader = javax.json.Json.createReader(new java.io.StringReader(json)); javax.json.JsonObject jobj = reader.readObject(); de.fehrprice.secrets.entity.Snippet s = de.fehrprice.secrets.dto.SnippetDTO.fromJsonObject(jobj); return s; } catch (javax.json.stream.JsonParsingException e) { de.fehrprice.secrets.dto.SnippetDTO.logger.warning((\"tried to parse non-json string: \" + json)); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2809/buggy-version/secrets.src.main.java.de.fehrprice.secrets.dto.SnippetDTO.java", "BodyUseAPI": ["de.fehrprice.secrets.dto.SnippetDTO.fromJsonObject(javax.json.JsonObject)", "javax.json.Json.createReader(java.io.StringReader)", "javax.json.JsonReader.readObject()"], "Fixed commit": "7acde4f74debabff9150b6260c84fc747f5c1795", "Url": "https://api.github.com/repos/ClemensX/secrets", "Date": "2018-12-30T16:51:55Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((n.getData()) == val) return n; if (val < (n.getData())) { return search(n.left, val); } return search(n.right, val); } catch (java.lang.NullPointerException e) { java.lang.System.out.println(\"Key does not exist in the tree\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4274/buggy-version/src.com.vaibhav.coursera.trees.BinarySearchTreeImpl.java", "BodyUseAPI": ["com.vaibhav.coursera.trees.Node.getData()", "com.vaibhav.coursera.trees.Node.getData()", "com.vaibhav.coursera.trees.BinarySearchTreeImpl.search(n.right,int)", "com.vaibhav.coursera.trees.BinarySearchTreeImpl.search(n.left,int)"], "Fixed commit": "bf2ee7525401b2e218fac77ac1d83133dd3136af", "Url": "https://api.github.com/repos/vaibhav6451956/DataStructures", "Date": "2018-12-24T09:06:03Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { trimmedSubject = subject.trim(); result = seedu.address.model.subject.SubjectType.isValidSubjectName(trimmedSubject); } catch (java.lang.IllegalArgumentException err) { throw new seedu.address.logic.parser.exceptions.ParseException(seedu.address.model.subject.Subject.MESSAGE_SUBJECT_CONSTRAINTS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5414/buggy-version/src.main.java.seedu.address.logic.parser.ParserUtil.java", "BodyUseAPI": ["java.lang.String.trim()", "seedu.address.model.subject.SubjectType.isValidSubjectName(java.lang.String)"], "Fixed commit": "d4dc61c69c344b3e9657e07387bf5ab6355d9ac4", "Url": "https://api.github.com/repos/lywjoel/main", "Date": "2018-11-10T15:06:33Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((android.provider.DocumentsContract.renameDocument(context.getContentResolver(), document.getUri(), target.getName())) != null) { return true; } } catch (java.io.FileNotFoundException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2997/buggy-version/app.src.main.java.be.ppareit.swiftp.utils.FileUtil.java", "BodyUseAPI": ["android.support.v4.provider.DocumentFile.getUri()", "android.content.Context.getContentResolver()", "java.io.File.getName()", "android.provider.DocumentsContract.renameDocument(context.getContentResolver(),document.getUri(),java.lang.String)"], "Fixed commit": "28feb1e7199c679d993864b8498eee0aba38c751", "Url": "https://api.github.com/repos/ppareit/swiftp", "Date": "2018-11-16T12:32:00Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((android.provider.DocumentsContract.renameDocument(context.getContentResolver(), document.getUri(), target.getName())) != null) { return true; } } catch (java.io.FileNotFoundException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2997/buggy-version/app.src.main.java.be.ppareit.swiftp.utils.FileUtil.java", "BodyUseAPI": ["android.support.v4.provider.DocumentFile.getUri()", "android.provider.DocumentsContract.renameDocument(context.getContentResolver(),document.getUri(),java.lang.String)", "android.content.Context.getContentResolver()", "java.io.File.getName()"], "Fixed commit": "28feb1e7199c679d993864b8498eee0aba38c751", "Url": "https://api.github.com/repos/ppareit/swiftp", "Date": "2018-11-16T12:32:00Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { read = stream.read(data, 0, data.length); } catch (java.io.IOException e) { throw new com.infiniteautomation.mango.io.serial.virtual.SerialServerSocketConnectionClosedException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/681/buggy-version/Core.src.com.infiniteautomation.mango.io.serial.virtual.SerialServerSocketBridgeInputStream.java", "BodyUseAPI": ["java.io.InputStream.read(byte[],int,int)"], "Fixed commit": "fb94c6d80f96949d05779d8823d4919f12dc8f13", "Url": "https://api.github.com/repos/infiniteautomation/ma-core-public", "Date": "2018-11-02T17:12:55Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return java.util.Optional.of(consentRestTemplate.getForEntity(remotePisConsentUrls.getPisConsentById(), de.adorsys.psd2.consent.api.pis.proto.PisConsentResponse.class, consentId).getBody()); } catch (de.adorsys.psd2.consent.config.CmsRestException cmsRestException) { return java.util.Optional.empty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6221/buggy-version/consent-management.consent-xs2a-client.src.main.java.de.adorsys.psd2.consent.service.PisConsentServiceRemote.java", "BodyUseAPI": ["java.util.Optional.of(consentRestTemplate.getForEntity(remotePisConsentUrls.getPisConsentById(), de.adorsys.psd2.consent.api.pis.proto.PisConsentResponse.class, consentId).getBody())", "consentRestTemplate.getForEntity(remotePisConsentUrls.getPisConsentById(), de.adorsys.psd2.consent.api.pis.proto.PisConsentResponse.class, consentId).getBody()", "org.springframework.web.client.RestTemplate.getForEntity(remotePisConsentUrls.getPisConsentById(),java.lang.Class,java.lang.String)", "de.adorsys.psd2.consent.config.PisConsentRemoteUrls.getPisConsentById()"], "Fixed commit": "7c26e92c9f93a4b07c14956fb5ebee897190d47f", "Url": "https://api.github.com/repos/adorsys/xs2a", "Date": "2018-12-20T08:29:50Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { citysMemoryDataBase = new Model.CitysMemoryDataBase(\"https://restcountries.eu/rest/v2/all?fields=name;capital;population;currencies\"); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/704/buggy-version/src.main.java.Model.Manager.java", "BodyUseAPI": [], "Fixed commit": "d3a257980706e9a76642e0ba0b0e0771f24b3fa4", "Url": "https://api.github.com/repos/AlonZolfi/InformationRetrieval", "Date": "2018-12-01T16:54:49Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.scheduleJob(job, JobType.LOCAL); } catch (java.io.IOException ioe) { java.lang.String errorString = \"Failed to schedule local job \" + (job.getJobId()); this.log.error(errorString, ioe); return new org.springframework.http.ResponseEntity(errorString, org.springframework.http.HttpStatus.SERVICE_UNAVAILABLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2236/buggy-version/SmartRaceCar.Modules.racecarbackend.src.main.java.be.uantwerpen.fti.ds.sc.racecarbackend.JobDispatcher.java", "BodyUseAPI": ["be.uantwerpen.fti.ds.sc.racecarbackend.JobDispatcher.scheduleJob(be.uantwerpen.fti.ds.sc.racecarbackend.Job,JobType.LOCAL)"], "Fixed commit": "0677050e43ab42494472cfc520006268f00693c8", "Url": "https://api.github.com/repos/SmartCity-UAntwerpen/SmartRaceCar", "Date": "2018-12-20T13:55:47Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.checkJobQueue(); } catch (java.io.IOException ioe) { java.lang.String errorString = \"An error occurred while checking the job queue.\"; this.log.error(errorString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2236/buggy-version/SmartRaceCar.Modules.racecarbackend.src.main.java.be.uantwerpen.fti.ds.sc.racecarbackend.JobDispatcher.java", "BodyUseAPI": ["be.uantwerpen.fti.ds.sc.racecarbackend.JobDispatcher.checkJobQueue()"], "Fixed commit": "0677050e43ab42494472cfc520006268f00693c8", "Url": "https://api.github.com/repos/SmartCity-UAntwerpen/SmartRaceCar", "Date": "2018-12-20T13:55:47Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return (checked.distanceSquared(target)) <= radiusSquared; } catch (java.lang.IllegalArgumentException e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9243/buggy-version/src.main.java.com.github.crashdemons.azbasics.utils.Positions.java", "BodyUseAPI": ["org.bukkit.Location.distanceSquared(org.bukkit.Location)"], "Fixed commit": "7da7f795114e03e69997448fd20f40948ab027f4", "Url": "https://api.github.com/repos/crashdemons/AZBasics", "Date": "2018-11-22T02:20:11Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { ftg = new stbFont.FontTextureGenerator(\"res/fonts/ARIALBD.TTF\"); } catch (java.io.IOException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9816/buggy-version/gui_lib.stbFont.TTFBox.java", "BodyUseAPI": [], "Fixed commit": "93757725b6a0f509ccedf48842754b9cef0b12e8", "Url": "https://api.github.com/repos/dvdb97/Turn-based-Strategy", "Date": "2018-11-29T10:21:10Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { result = formatReader.decode(binaryBitmap, hints); } catch (com.google.zxing.NotFoundException e) { hints.remove(DecodeHintType.PURE_BARCODE); try { result = formatReader.decode(binaryBitmap, hints); } catch (com.google.zxing.NotFoundException e1) { throw new cn.hutool.extra.qrcode.QrCodeException(e1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4763/buggy-version/hutool-extra.src.main.java.cn.hutool.extra.qrcode.QrCodeUtil.java", "BodyUseAPI": ["com.google.zxing.MultiFormatReader.decode(com.google.zxing.BinaryBitmap,java.util.HashMap<com.google.zxing.DecodeHintType, java.lang.Object>)"], "Fixed commit": "7607fa45f3dea1b277cbf4fa63900a2e6f82dc3c", "Url": "https://api.github.com/repos/looly/hutool", "Date": "2018-12-11T16:17:54Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.security.KeyStore.PrivateKeyEntry entry = ((java.security.KeyStore.PrivateKeyEntry) (util.X509Utils.getInstance().getKeyStore().getEntry(string, pp))); java.security.cert.X509Certificate cert = ((java.security.cert.X509Certificate) (entry.getCertificate())); result = cert.getIssuerDN().toString(); } catch (java.lang.Exception ex) { java.util.logging.Logger.getLogger(implementation.MyCode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6251/buggy-version/src.implementation.MyCode.java", "BodyUseAPI": ["util.X509Utils.getInstance().getKeyStore()", "java.security.KeyStore.PrivateKeyEntry.getCertificate()", "java.security.Principal.toString()", "util.X509Utils.getInstance()", "java.security.cert.X509Certificate.getIssuerDN()", "util.X509Utils.getInstance().getKeyStore().getEntry(java.lang.String,java.security.KeyStore.ProtectionParameter)"], "Fixed commit": "d14742e94ab7489ea75f13ad3eade4302492cb15", "Url": "https://api.github.com/repos/obabovic/x.509_certificate", "Date": "2017-05-18T11:12:43Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { minimumVersion = java.lang.Integer.parseInt(MinV.getText().toString()); maximumVersion = java.lang.Integer.parseInt(MaxV.getText().toString()); mask = java.lang.Integer.parseInt(Mask.getText().toString()); } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4393/buggy-version/app.src.main.java.com.lempereur.benjamin.barcode.GeneratorFragment.java", "BodyUseAPI": ["java.lang.Integer.parseInt(MaxV.getText().toString())", "java.lang.Integer.parseInt(MinV.getText().toString())", "android.widget.EditText.getText()", "MinV.getText().toString()", "Mask.getText().toString()", "android.widget.EditText.getText()", "java.lang.Integer.parseInt(Mask.getText().toString())", "android.widget.EditText.getText()", "MaxV.getText().toString()"], "Fixed commit": "a4f0f522b8cc4346e402e01b589665e9eba1d48e", "Url": "https://api.github.com/repos/LempereurBenjamin/BarcodeTools", "Date": "2018-12-18T23:05:23Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mAuthService.dispose(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2536/buggy-version/library.src.main.java.com.okta.appauth.android.OktaAppAuth.java", "BodyUseAPI": ["net.openid.appauth.AuthorizationService.dispose()"], "Fixed commit": "24c1b2112ada5fceecebf68ab58d7d0e69081930", "Url": "https://api.github.com/repos/igormartsekha/okta-sdk-appauth-android", "Date": "2018-12-27T17:59:04Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { userService.delete(id); return new org.springframework.http.ResponseEntity(new com.fenlan.spring.shop.controller.admin.ResponseFormat.Builder(new java.util.Date(), HttpStatus.OK.value()).error(null).message(\"delete seller success\").path(request.getServletPath()).data(null).build(), org.springframework.http.HttpStatus.OK); } catch (java.lang.Exception e) { return new org.springframework.http.ResponseEntity(new com.fenlan.spring.shop.controller.admin.ResponseFormat.Builder(new java.util.Date(), HttpStatus.INTERNAL_SERVER_ERROR.value()).error(\"Not found\").message(\"delete seller failed\").path(request.getServletPath()).data(null).build(), org.springframework.http.HttpStatus.INTERNAL_SERVER_ERROR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7431/buggy-version/src.main.java.com.fenlan.spring.shop.controller.admin.ManageSellerController.java", "BodyUseAPI": ["new com.fenlan.spring.shop.controller.admin.ResponseFormat.Builder(new java.util.Date(), HttpStatus.OK.value()).error(null).message(java.lang.String)", "new com.fenlan.spring.shop.controller.admin.ResponseFormat.Builder(new java.util.Date(), HttpStatus.OK.value()).error(null).message(\"delete seller success\").path(request.getServletPath()).data(null).build()", "com.fenlan.spring.shop.service.UserService.delete(java.lang.Long)", "new com.fenlan.spring.shop.controller.admin.ResponseFormat.Builder(new java.util.Date(), HttpStatus.OK.value()).error(null).message(\"delete seller success\").path(request.getServletPath()).data(<nulltype>)", "javax.servlet.http.HttpServletRequest.getServletPath()", "new com.fenlan.spring.shop.controller.admin.ResponseFormat.Builder(new java.util.Date(), HttpStatus.OK.value()).error(null).message(\"delete seller success\").path(request.getServletPath())", "HttpStatus.OK.value()", "com.fenlan.spring.shop.controller.admin.ResponseFormat.Builder.error(<nulltype>)"], "Fixed commit": "e84f1325c555a6f95523d77bd633ad00b0793f62", "Url": "https://api.github.com/repos/PMC6/online-store-back-end", "Date": "2018-12-15T07:37:54Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.io.File file = new java.io.File(this.pathtofile); java.util.Scanner scan = new java.util.Scanner(file); scan.close(); } catch (java.io.FileNotFoundException e) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5116/buggy-version/nheisler-PA2.src.WGraph.java", "BodyUseAPI": ["java.util.Scanner.close()"], "Fixed commit": "0df00d4b0555060610cd7a3a2eb6fa8abf7cfbae", "Url": "https://api.github.com/repos/IgnorantGeek/CS311", "Date": "2018-11-13T16:23:32Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { net.minecraft.entity.Entity mouseOverEntity = MC.objectMouseOver.entityHit; if (mouseOverEntity instanceof net.minecraft.entity.EntityLivingBase) has_clicked_on_living_entity = true; } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/7088/buggy-version/src.main.java.com.bettercolors.modules.AutoSword.java", "BodyUseAPI": [], "Fixed commit": "da5c9af02003b31dcc39647200ca5780f708566a", "Url": "https://api.github.com/repos/N3ROO/Bettercolors", "Date": "2018-11-11T13:57:13Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { errorMsg = ((com.kin.ecosystem.core.network.ApiException) (exception.getCause())).getResponseBody().getMessage(); } catch (java.lang.Throwable error) { errorMsg = error.getMessage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/314/buggy-version/sdk.src.main.java.com.kin.ecosystem.poll.presenter.PollWebViewPresenter.java", "BodyUseAPI": ["((com.kin.ecosystem.core.network.ApiException) (exception.getCause())).getResponseBody().getMessage()", "com.kin.ecosystem.common.exception.KinEcosystemException.getCause()", "((com.kin.ecosystem.core.network.ApiException) (exception.getCause())).getResponseBody()"], "Fixed commit": "18b07c62a0c8ddabbda726dae57a0b5872148211", "Url": "https://api.github.com/repos/kinecosystem/kin-ecosystem-android-sdk", "Date": "2018-11-08T16:04:35Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { callback.run(); } finally { shouldCallback = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/4953/buggy-version/src.main.java.me.kospo.javalang.threads.task2.ContextImpl.java", "BodyUseAPI": ["java.lang.Runnable.run()"], "Fixed commit": "c03c344e4aa37675f84549b1f4e89d462bc9468c", "Url": "https://api.github.com/repos/kospo/java-lang", "Date": "2018-12-22T21:51:17Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { current_cos = sum_vector.cosine(data.source_embeddings.get(embDimension).get(i)); } catch (java.lang.ArithmeticException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5444/buggy-version/chatbot.src.chatbot.main.EmbeddingChatbot.java", "BodyUseAPI": ["data.source_embeddings.get(chatbot.main.EmbeddingChatbot)", "data.source_embeddings.get(embDimension).get(int)", "chatbot.main.Data.Vector.cosine(data.source_embeddings.get(embDimension).get(i))"], "Fixed commit": "c8eaaf7345a2a640ee51efa78846c3dd801df159", "Url": "https://api.github.com/repos/ricsinaruto/prog_alap_3", "Date": "2018-11-26T18:21:39Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { socket.close(); } catch (java.io.IOException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2019/buggy-version/mosquiota.src.mosquiota.SessionManager.java", "BodyUseAPI": ["java.net.Socket.close()"], "Fixed commit": "60762748b7c58c69db8080253f786575505c8388", "Url": "https://api.github.com/repos/F-Node-Karlsruhe/mosquiota", "Date": "2018-12-03T18:34:52Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { socket.close(); } catch (java.io.IOException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2019/buggy-version/mosquiota.src.mosquiota.SessionManager.java", "BodyUseAPI": ["java.net.Socket.close()"], "Fixed commit": "60762748b7c58c69db8080253f786575505c8388", "Url": "https://api.github.com/repos/F-Node-Karlsruhe/mosquiota", "Date": "2018-12-03T18:34:52Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((i.rioHelperName) != null) ((r48.io.r2k.chunks.IR2kStruct) (i.chunk)).fromRIO(mt.getIVar(i.rioHelperName)); } catch (java.lang.RuntimeException e) { throw new java.lang.RuntimeException((((\"In \" + i) + \" of \") + (this)), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/7418/buggy-version/src.main.java.r48.io.r2k.chunks.R2kObject.java", "BodyUseAPI": ["r48.io.data.IRIO.getIVar(i.rioHelperName)", "((r48.io.r2k.chunks.IR2kStruct) (i.chunk)).fromRIO(mt.getIVar(i.rioHelperName))"], "Fixed commit": "9e54ff432a09c483656cdf3f11233b0de29d6463", "Url": "https://api.github.com/repos/20kdc/gabien-app-r48", "Date": "2018-12-02T23:51:41Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { lines = bufferedReader.lines().filter(( line) -> !(com.qiniu.service.qoss.StringUtils.isNullOrEmpty(line))).collect(java.util.stream.Collectors.toList()); } catch (java.lang.Exception e) { throw new com.qiniu.common.QiniuException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/4/buggy-version/src.main.java.com.qiniu.service.qoss.FileLister.java", "BodyUseAPI": ["com.qiniu.service.qoss.StringUtils.isNullOrEmpty(java.lang.String)", "java.util.stream.Stream<java.lang.String>.collect(java.util.stream.Collector<java.lang.String, ?, java.util.List<java.lang.String>>)", "java.util.stream.Stream<java.lang.String>.filter(java.util.function.Predicate<? super java.lang.String>)", "java.util.stream.Collectors.toList()", "java.io.BufferedReader.lines()"], "Fixed commit": "3a9dfee7486aee562bc5142098dfb9e5e7dc5f39", "Url": "https://api.github.com/repos/NigelWu95/qiniu-suits-java", "Date": "2018-11-29T22:33:45Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { textView.setText((\"PS: \" + (getPackageManager().getPackageInfo(GoogleApiAvailability.GOOGLE_PLAY_SERVICES_PACKAGE, 0).versionName))); } catch (android.content.pm.PackageManager e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/696/buggy-version/Geofencing.app.src.main.java.com.google.android.gms.location.sample.geofencing.MainActivity.java", "BodyUseAPI": ["android.widget.TextView.setText((\"PS: \" + (getPackageManager().getPackageInfo(GoogleApiAvailability.GOOGLE_PLAY_SERVICES_PACKAGE, 0).versionName)))", "com.google.android.gms.location.sample.geofencing.MainActivity.getPackageManager()", "getPackageManager().getPackageInfo(GoogleApiAvailability.GOOGLE_PLAY_SERVICES_PACKAGE,int)"], "Fixed commit": "6c3733cd854ee8e4f96b9797b13c69d3aeb40667", "Url": "https://api.github.com/repos/seaforester/android-play-location", "Date": "2018-11-27T14:39:23Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { read = stream.read(data, 0, data.length); } catch (java.io.IOException e) { throw new com.infiniteautomation.mango.io.serial.virtual.SerialServerSocketConnectionClosedException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5645/buggy-version/Core.src.com.infiniteautomation.mango.io.serial.virtual.SerialServerSocketBridgeInputStream.java", "BodyUseAPI": ["java.io.InputStream.read(byte[],int,int)"], "Fixed commit": "a142312cceeffdae1bd576b510ae4ab385c6709e", "Url": "https://api.github.com/repos/infiniteautomation/ma-core-public", "Date": "2018-11-02T17:12:55Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return new java.io.File(path).getCanonicalPath(); } catch (java.io.IOException e) { org.apache.kylin.storage.hbase.util.ZookeeperDistributedLock.logger.error(\"get canonical path failed, use original path\", e); return path; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2927/buggy-version/storage-hbase.src.main.java.org.apache.kylin.storage.hbase.util.ZookeeperDistributedLock.java", "BodyUseAPI": ["java.io.File.getCanonicalPath()"], "Fixed commit": "78ed5484904b8ec57c4b9d666e822a742e5fdc0e", "Url": "https://api.github.com/repos/Wayne1c/kylin", "Date": "2018-12-20T12:51:05Z"},
{"Line": "=>978", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((sourceFieldService.getSourceField(java.lang.Integer.parseInt(key)).getType().equals(\"\u65e5\u671f\")) && (!(value[0].equals(\"undefined\")))) { value[0] = value[0].replace(\"T\", \" \"); } } catch (java.lang.Exception e) { com.xtkong.controller.user.SourceDataController.logger.warn((\"\u65e0\u6cd5\u5224\u65ad\u5b57\u6bb5\u7c7b\u578b\u662f\u5426\u65e5\u671f,\u5c06\u4e0d\u5904\u7406\u65e5\u671f\u6570\u636e: \" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5284/buggy-version/src.main.java.com.xtkong.controller.user.SourceDataController.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.equals(java.lang.String)", "com.xtkong.service.SourceFieldService.getSourceField(int)", "java.lang.String.replace(java.lang.String,java.lang.String)", "sourceFieldService.getSourceField(java.lang.Integer.parseInt(key)).getType().equals(java.lang.String)", "sourceFieldService.getSourceField(java.lang.Integer.parseInt(key)).getType()"], "Fixed commit": "fb7d788b4434abcdeed9d30846a329518bdb88d8", "Url": "https://api.github.com/repos/Mlove9527/wankanyuan", "Date": "2018-11-22T05:12:25Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { curHorse.updateHorse(api); } catch (api.ApiException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6834/buggy-version/HowrseBotUi.src.bot.BasicBreedTasksAsync.java", "BodyUseAPI": ["api.horse.Horse.updateHorse(api.API)"], "Fixed commit": "a64b04f1f37831002a96251b0bf93021d6f7998f", "Url": "https://api.github.com/repos/lolsalat1/Howrse", "Date": "2018-12-03T09:49:11Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.lzh.nonview.router.tools.Cache.addAll(com.lzh.nonview.router.tools.Cache.activityRouteMap, com.lzh.nonview.router.tools.Cache.creatorList.get(i).createActivityRouteRules()); com.lzh.nonview.router.tools.Cache.addAll(com.lzh.nonview.router.tools.Cache.actionRouteMap, com.lzh.nonview.router.tools.Cache.creatorList.get(i).createActionRouteRules()); com.lzh.nonview.router.tools.Cache.addAll(com.lzh.nonview.router.tools.Cache.creatorRouteMap, com.lzh.nonview.router.tools.Cache.creatorList.get(i).createCreatorRouteRule()); } catch (java.lang.AbstractMethodError error) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2961/buggy-version/router-api.src.main.java.com.lzh.nonview.router.tools.Cache.java", "BodyUseAPI": ["java.util.List<com.lzh.nonview.router.module.RouteCreator>.get(int)", "com.lzh.nonview.router.tools.Cache.creatorList.get(i).createCreatorRouteRule()", "com.lzh.nonview.router.tools.Cache.creatorList.get(i).createActionRouteRules()", "com.lzh.nonview.router.tools.Cache.addAll(java.util.Map<java.lang.String, com.lzh.nonview.router.module.CreatorRouteRule>,com.lzh.nonview.router.tools.Cache.creatorList.get(i).createCreatorRouteRule())", "com.lzh.nonview.router.tools.Cache.creatorList.get(i).createActivityRouteRules()", "com.lzh.nonview.router.tools.Cache.addAll(java.util.Map<java.lang.String, com.lzh.nonview.router.module.ActivityRouteRule>,com.lzh.nonview.router.tools.Cache.creatorList.get(i).createActivityRouteRules())", "java.util.List<com.lzh.nonview.router.module.RouteCreator>.get(int)", "java.util.List<com.lzh.nonview.router.module.RouteCreator>.get(int)", "com.lzh.nonview.router.tools.Cache.addAll(java.util.Map<java.lang.String, com.lzh.nonview.router.module.ActionRouteRule>,com.lzh.nonview.router.tools.Cache.creatorList.get(i).createActionRouteRules())"], "Fixed commit": "41ab27dd4ff750eea093cd6a2dbc8c0279298df9", "Url": "https://api.github.com/repos/JumeiRdGroup/Router", "Date": "2018-11-16T07:53:21Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { User_Grade = courseTable.getUserGrade(((java.lang.String) (courseTable.getValueAt(i, 2)))); } catch (java.lang.Exception e) { userGPA.setText(\"Data Error\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/7645/buggy-version/src.Main.GPA_CALC.java", "BodyUseAPI": ["Main.GPA_CALC.Coursetable.getValueAt(int,int)", "Main.GPA_CALC.Coursetable.getUserGrade(java.lang.Object)"], "Fixed commit": "14d800a67603879f295789b51f6f0027f76e3b03", "Url": "https://api.github.com/repos/MaxsLi/CourseTimetable", "Date": "2018-12-24T20:12:04Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { offset = java.lang.Integer.parseInt(splitString[1]); } catch (java.lang.NumberFormatException e) { throw new seedu.address.logic.parser.exceptions.ParseException(seedu.address.logic.parser.DateTimeParser.MESSAGE_INVALID_INTEGER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5017/buggy-version/src.main.java.seedu.address.logic.parser.DateTimeParser.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "4b285098dff451032a6ed15fb4c608c4ef04c110", "Url": "https://api.github.com/repos/lixinze777/main", "Date": "2018-11-05T17:11:29Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { materialKey = material.getKey(); } catch (java.lang.IllegalArgumentException e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/4507/buggy-version/BetonQuest-core.src.main.java.pl.betoncraft.betonquest.utils.BlockSelector.java", "BodyUseAPI": ["org.bukkit.Material.getKey()"], "Fixed commit": "65563695a211e51af0da2bb079b8958a884788d0", "Url": "https://api.github.com/repos/bundabrg/BetonQuest", "Date": "2018-12-13T10:54:30Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { context.startActivity(new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse(uri))); } catch (android.content.ActivityNotFoundException ex) { com.gianlu.commonutils.Toaster.with(context).message(R.string.missingWebBrowser).ex(ex).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6979/buggy-version/utils.src.main.java.com.gianlu.commonutils.Preferences.BasePreferenceActivity.java", "BodyUseAPI": ["android.content.Context.startActivity(android.content.Intent)", "android.net.Uri.parse(java.lang.String)"], "Fixed commit": "8117c3dc6a46b35fb1205594f548655be63b8a88", "Url": "https://api.github.com/repos/devgianlu/CommonUtils", "Date": "2018-11-13T20:22:00Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return choices.getObject().get(java.lang.Integer.parseInt(id)); } catch (java.lang.NumberFormatException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1274/buggy-version/src.main.java.com.databasesandlife.util.wicket.LambdaDisplayValueChoiceRenderer.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "choices.getObject().get(int)", "org.apache.wicket.model.IModel<? extends java.util.List<? extends T>>.getObject()"], "Fixed commit": "849cd5748125dea69088bf2ecfa71d9db200a3af", "Url": "https://api.github.com/repos/adrianmsmith/databasesandlife-java-common", "Date": "2018-11-14T11:49:53Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return java.lang.Float.valueOf(field.getText().toString()); } catch (java.lang.Exception e) { return new java.lang.Float(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8864/buggy-version/app.src.main.java.pl.edu.vistula.mkedron.quantumcalc.MainActivity.java", "BodyUseAPI": ["field.getText().toString()", "android.widget.EditText.getText()", "java.lang.Float.valueOf(field.getText().toString())"], "Fixed commit": "209656b5c1bdd854b767cf25193233010432ea1c", "Url": "https://api.github.com/repos/mkedron/QuantumCalc", "Date": "2018-12-08T15:19:34Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { str = koreatech.cse.controller.naver.KakaoSearch.decode(link.toString()); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8969/buggy-version/src.main.java.koreatech.cse.controller.naver.KakaoSearch.java", "BodyUseAPI": ["java.lang.StringBuilder.toString()", "koreatech.cse.controller.naver.KakaoSearch.decode(java.lang.String)"], "Fixed commit": "172902b198e5501827d88aea0c87e88e982275ee", "Url": "https://api.github.com/repos/jahona/spring_term_project", "Date": "2018-12-15T11:12:46Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { expenseTrackers.put(sampleExpenseTracker.getUsername(), seedu.address.model.encryption.EncryptionUtil.encryptTracker(sampleExpenseTracker)); } catch (seedu.address.commons.exceptions.IllegalValueException e) { throw new java.lang.IllegalStateException(\"Sample user has invalid key. \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3610/buggy-version/src.main.java.seedu.address.MainApp.java", "BodyUseAPI": ["java.util.Map<seedu.address.model.user.Username, seedu.address.model.encryption.EncryptedExpenseTracker>.put(sampleExpenseTracker.getUsername(),seedu.address.model.encryption.EncryptionUtil.encryptTracker(sampleExpenseTracker))", "seedu.address.model.ReadOnlyExpenseTracker.getUsername()", "seedu.address.model.encryption.EncryptionUtil.encryptTracker(seedu.address.model.ReadOnlyExpenseTracker)"], "Fixed commit": "9609cbe03e0c09adeac95028580097372f51d466", "Url": "https://api.github.com/repos/winsonhys/expense-tracker", "Date": "2018-11-05T07:11:00Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.System.out.println(View.CalendarProgram.controller.signInUser(email, password)); } catch (java.sql.SQLException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6945/buggy-version/src.View.CalendarProgram.java", "BodyUseAPI": ["Controller.Controller.signInUser(java.lang.String,java.lang.String)", "java.io.PrintStream.println(View.CalendarProgram.controller.signInUser(email, password))"], "Fixed commit": "9658d1e804693457d32ad99ec32108d3dc1510b7", "Url": "https://api.github.com/repos/brett96/CECS-343", "Date": "2018-11-19T09:07:10Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { beanClass = this.getType(beanName); } catch (java.lang.Exception e) { com.niocoder.beans.factory.support.DefaultBeanFactory.logger.warn(((\"can't load class for bean :\" + beanName) + \", skip it.\")); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6415/buggy-version/src.main.java.com.niocoder.beans.factory.support.DefaultBeanFactory.java", "BodyUseAPI": ["com.niocoder.beans.factory.support.DefaultBeanFactory.getType(java.lang.String)"], "Fixed commit": "69a08b3f2e29038110bbd10801543bde42c67ab9", "Url": "https://api.github.com/repos/longfeizheng/spring-tutorials", "Date": "2018-11-17T01:50:35Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { issuer = cardIssuerService.findIssuer(number); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3869/buggy-version/SDA_CardValidator.src.main.java.com.jastrzab.SDA_CardValidator_App.api.DataServiceController.java", "BodyUseAPI": ["com.jastrzab.SDA_CardValidator_App.domain.services.CardIssuerService.findIssuer(java.lang.String)"], "Fixed commit": "1c96f5f0817dbbaa1fb39866f9443d037d53f100", "Url": "https://api.github.com/repos/PawelJastrzebski/CardValidator_Microservices", "Date": "2018-12-09T08:31:21Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (!(event.getMessage().getContentRaw().isEmpty())) { discord.bot.utils.commands.CommandHandler.getInstance().handleCommand(event.getGuild().getId(), this.parser.parse(event.getMessage().getContentRaw(), event)); } } catch (java.lang.Exception e) { logger.log(Level.ERROR, \"Something went wrong with messages...\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1688/buggy-version/src.main.java.discord.bot.listeners.MessageListener.java", "BodyUseAPI": ["event.getGuild().getId()", "discord.bot.utils.commands.CommandHandler.getInstance().handleCommand(event.getGuild().getId(),this.parser.parse(event.getMessage().getContentRaw(), event))", "net.dv8tion.jda.core.events.message.MessageReceivedEvent.getGuild()", "discord.bot.utils.commands.ChatCommandParser.parse(event.getMessage().getContentRaw(),net.dv8tion.jda.core.events.message.MessageReceivedEvent)", "discord.bot.utils.commands.CommandHandler.getInstance()", "event.getMessage().getContentRaw()", "net.dv8tion.jda.core.events.message.MessageReceivedEvent.getMessage()", "event.getMessage().getContentRaw().isEmpty()", "event.getMessage().getContentRaw()", "net.dv8tion.jda.core.events.message.MessageReceivedEvent.getMessage()"], "Fixed commit": "4675ac4e3ba70f75cbd001e2b9d4236a5a66862f", "Url": "https://api.github.com/repos/Minipasglop/BotDiscord", "Date": "2018-11-03T23:06:46Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { new org.codice.solr.factory.impl.HttpSolrClientFactory().makeRealClient().ping(); } catch (java.lang.Exception e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3965/buggy-version/platform.solr.solr-factory-impl.src.main.java.org.codice.solr.factory.impl.SolrClientFactoryImpl.java", "BodyUseAPI": ["new org.codice.solr.factory.impl.HttpSolrClientFactory().makeRealClient().ping()", "org.codice.solr.factory.impl.HttpSolrClientFactory.makeRealClient()"], "Fixed commit": "07b2d6a287e2679a98de0f870a712623c2e412d6", "Url": "https://api.github.com/repos/tbatie/ddf", "Date": "2018-11-30T03:30:57Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { inputStream = resources.openRawResource(id); int size = inputStream.available(); byte[] bytes = new byte[size]; int count = inputStream.read(bytes); if (count != size) { return org.apache.commons.lang3.StringUtils.EMPTY; } return new java.lang.String(bytes); } catch (java.lang.Exception e) { return org.apache.commons.lang3.StringUtils.EMPTY; } finally { if (inputStream != null) { try { inputStream.close(); } catch (java.lang.Exception e) { } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/7563/buggy-version/app.src.main.java.com.vrem.util.FileUtils.java", "BodyUseAPI": ["android.content.res.Resources.openRawResource(int)", "java.io.InputStream.available()", "java.io.InputStream.read(byte[])"], "Fixed commit": "1dd2ef7289481c64a8308501042c1f427fc1284e", "Url": "https://api.github.com/repos/VREMSoftwareDevelopment/WiFiAnalyzer", "Date": "2018-11-10T17:09:48Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { new org.codice.solr.factory.impl.HttpSolrClientFactory().makeRealClient().ping(); } catch (java.lang.Exception e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8558/buggy-version/platform.solr.solr-factory-impl.src.main.java.org.codice.solr.factory.impl.SolrClientFactoryImpl.java", "BodyUseAPI": ["new org.codice.solr.factory.impl.HttpSolrClientFactory().makeRealClient().ping()", "org.codice.solr.factory.impl.HttpSolrClientFactory.makeRealClient()"], "Fixed commit": "b5c94df97bc5f4a614464a2d836bcd5882a0dcb2", "Url": "https://api.github.com/repos/tbatie/ddf", "Date": "2018-11-30T03:30:57Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { io.github.vhoyon.vramework.Framework.classRunIn = java.lang.Class.forName(stackElement.getClassName()); } catch (java.lang.ClassNotFoundException e) { throw new java.lang.IllegalStateException(\"Unexpected error in StackTrace handling. Please review the state of your java installation.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6447/buggy-version/src.main.java.io.github.vhoyon.vramework.Framework.java", "BodyUseAPI": ["java.lang.StackTraceElement.getClassName()", "java.lang.Class.forName(java.lang.String)"], "Fixed commit": "74b55b490e5e8bb91627c720323504c2ea1c4034", "Url": "https://api.github.com/repos/Vhoyon/Vramework", "Date": "2018-12-08T04:43:39Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return ((android.os.Environment.getExternalStorageDirectory()) + \"/\") + (split[1]); } catch (java.lang.Exception e) { return (android.os.Environment.getExternalStorageDirectory()) + \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1530/buggy-version/app.src.main.java.com.propro.musicplayerapp.CustomUtilities.java", "BodyUseAPI": ["android.os.Environment.getExternalStorageDirectory()"], "Fixed commit": "47809664bbc5f319a249bb1f224ea09bab3d1f9c", "Url": "https://api.github.com/repos/MyllysMikkoS/MusicPlayerApp", "Date": "2018-11-13T16:42:19Z"},
{"Line": "=>916", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { resourceHost = getResourceHostByContainerId(containerHostInfo.getId()); } catch (io.subutai.common.peer.HostNotFoundException e) { try { io.subutai.common.host.ResourceHostInfo resourceHostInfo = hostRegistry.getResourceHostByContainerHost(containerHostInfo); resourceHost = getResourceHostById(resourceHostInfo.getId()); } catch (io.subutai.core.hostregistry.api.HostDisconnectedException ignore) { throw e; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5320/buggy-version/management.server.core.local-peer.local-peer-impl.src.main.java.io.subutai.core.localpeer.impl.LocalPeerImpl.java", "BodyUseAPI": ["io.subutai.core.localpeer.impl.LocalPeerImpl.getResourceHostByContainerId(containerHostInfo.getId())", "io.subutai.common.host.ContainerHostInfo.getId()"], "Fixed commit": "f6f880d174eb35c61c8aa4673922e7c03fdac7b8", "Url": "https://api.github.com/repos/subutai-io/peer-os", "Date": "2018-12-03T10:04:22Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return level.getOpenTraps().get(level.getTrapButton(position).getTrapIndex()); } catch (java.lang.RuntimeException e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3664/buggy-version/src.game.Creature.java", "BodyUseAPI": ["game.Level.getTrapButton(game.Position)", "level.getTrapButton(position).getTrapIndex()", "game.Level.getOpenTraps()", "level.getOpenTraps().get(level.getTrapButton(position).getTrapIndex())"], "Fixed commit": "d711f0048fe41fbf6ee298791c46c04bf72aed42", "Url": "https://api.github.com/repos/jgdhs27/SuperCC", "Date": "2018-11-23T20:50:36Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.blizniukov.database.DepartmentQueries.createTable(); com.blizniukov.database.EmployeeQueries.createEmployeeTable(); response.sendRedirect(\"/jsp/index.jsp\"); } catch (java.io.IOException e) { log.error((\"Initialize Servlet [GET] \" + e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6747/buggy-version/src.main.java.com.blizniukov.logic.InitializeServlet.java", "BodyUseAPI": ["com.blizniukov.database.EmployeeQueries.createEmployeeTable()", "com.blizniukov.database.DepartmentQueries.createTable()", "javax.servlet.http.HttpServletResponse.sendRedirect(java.lang.String)"], "Fixed commit": "0e5fc04615f211d4ea539dcabeb32d8fc5cff500", "Url": "https://api.github.com/repos/blizniukov/Servlet", "Date": "2018-11-11T15:42:33Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { webResourceResponse.setStatusCodeAndReasonPhrase(response.code(), message); } catch (java.lang.Exception e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8644/buggy-version/cachewebviewlib.src.main.java.ren.yale.android.cachewebviewlib.WebViewCacheInterceptor.java", "BodyUseAPI": ["android.webkit.WebResourceResponse.setStatusCodeAndReasonPhrase(response.code(),java.lang.String)", "okhttp3.Response.code()"], "Fixed commit": "2c1de77b0c0a7c4ec1a7e24eb6186ded827d8cf2", "Url": "https://api.github.com/repos/yale8848/CacheWebView", "Date": "2018-12-24T03:21:42Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { disconnectRoomParticipants(roomId); } catch (cz.cesnet.shongo.api.jade.CommandException e) { cz.cesnet.shongo.connector.device.PexipConnector.logger.debug(\"Did not disconnect conference because it does not exist already.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2693/buggy-version/shongo-connector.src.main.java.cz.cesnet.shongo.connector.device.PexipConnector.java", "BodyUseAPI": ["cz.cesnet.shongo.connector.device.PexipConnector.disconnectRoomParticipants(java.lang.String)"], "Fixed commit": "2f33abe66a716036dbb3a7dd0113ee122325320c", "Url": "https://api.github.com/repos/shongo/shongo", "Date": "2018-11-17T14:03:05Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { blockrendererdispatcher.renderBlockBrightness(renderBlockState, 1.0F); } catch (java.lang.Throwable t) { net.minecraft.client.renderer.Tessellator tessellator = net.minecraft.client.renderer.Tessellator.getInstance(); net.minecraft.client.renderer.BufferBuilder bufferBuilder = tessellator.getBuffer(); bufferBuilder.finishDrawing(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1250/buggy-version/src.main.java.com.direwolf20.buildinggadgets.entities.BlockBuildEntityRender.java", "BodyUseAPI": ["net.minecraft.client.renderer.BlockRendererDispatcher.renderBlockBrightness(net.minecraft.block.state.IBlockState,float)"], "Fixed commit": "bbfb7dcaf15cbc9476406d640cc76c328d8f459a", "Url": "https://api.github.com/repos/Direwolf20-MC/BuildingGadgets", "Date": "2018-11-02T02:50:32Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { api.withdraw(number, money); } catch (java.lang.Throwable e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/442/buggy-version/creditcard-app.src.main.java.pl.jkan.creditcard.CreditCardController.java", "BodyUseAPI": ["pl.jkan.creditcard.CreditCardApi.withdraw(java.lang.String,double)"], "Fixed commit": "8fa05368577d414788452cae1a65ac5557bc0e8f", "Url": "https://api.github.com/repos/coldman11/creditcard-app-new", "Date": "2018-11-15T10:14:33Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { eventType = net.diespendendose.obsremotejava.events.EventType.valueOf(elem.getAsJsonObject().get(\"update-type\").getAsString()); } catch (java.lang.Exception e) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/315/buggy-version/src.main.java.net.diespendendose.obsremotejava.OBSCommunicator.java", "BodyUseAPI": ["com.google.gson.JsonElement.getAsJsonObject()", "elem.getAsJsonObject().get(java.lang.String)", "net.diespendendose.obsremotejava.events.EventType.valueOf(elem.getAsJsonObject().get(\"update-type\").getAsString())", "elem.getAsJsonObject().get(\"update-type\").getAsString()"], "Fixed commit": "edf1e2bde88970ac48a0c1f665ef9f66bfd4f01f", "Url": "https://api.github.com/repos/Twasi/websocket-obs-java", "Date": "2018-08-09T16:15:43Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { _scroll.getVerticalScrollBar().setValue(_scroll.getVerticalScrollBar().getMaximum()); } catch (java.lang.NullPointerException ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/142/buggy-version/src.main.java.com.bettercolors.view.Window.java", "BodyUseAPI": ["javax.swing.JScrollPane.getVerticalScrollBar()", "javax.swing.JScrollBar.setValue(int)", "javax.swing.JScrollPane.getVerticalScrollBar()", "javax.swing.JScrollBar.getMaximum()"], "Fixed commit": "ff63b9bdace843e21ca1f117ff5fc769ef2e28e0", "Url": "https://api.github.com/repos/N3ROO/Bettercolors", "Date": "2018-11-12T13:51:37Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { super.service(request, response); } catch (java.lang.Exception ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6007/buggy-version/SummerMVC_Framework.src.main.java.com.cyecize.summer.DispatcherSolet.java", "BodyUseAPI": ["com.cyecize.summer.BaseHttpSolet.service(com.cyecize.summer.HttpSoletRequest,com.cyecize.summer.HttpSoletResponse)"], "Fixed commit": "58539e1254808d5b904ab12edba773bb06cfeb27", "Url": "https://api.github.com/repos/Cyecize/java-web-server", "Date": "2018-11-21T17:01:48Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { long currentTime = java.lang.System.currentTimeMillis(); java.util.List<org.xwiki.contrib.realtime.internal.NetfluxBackend.Channel> chans = new java.util.ArrayList<>(channelByKey.values()); for (org.xwiki.contrib.realtime.internal.NetfluxBackend.Channel channel : chans) { java.lang.Integer empty = (org.xwiki.contrib.realtime.internal.NetfluxBackend.USE_HISTORY_KEEPER) ? 1 : 0; if (((channel.users.keySet().size()) == empty) && ((currentTime - (channel.createdTime)) > (((1000 * 60) * 60) * 2))) { removeChannel(channel); } } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/438/buggy-version/netflux.src.main.java.org.xwiki.contrib.realtime.internal.NetfluxBackend.java", "BodyUseAPI": ["org.xwiki.contrib.realtime.internal.NetfluxBackend.ChannelBox.removeChannel(org.xwiki.contrib.realtime.internal.NetfluxBackend.Channel)", "java.util.Map<java.lang.String, org.xwiki.contrib.realtime.internal.NetfluxBackend.User>.keySet()", "java.lang.System.currentTimeMillis()", "java.util.Set<java.lang.String>.size()", "java.util.Map<java.lang.String, org.xwiki.contrib.realtime.internal.NetfluxBackend.Channel>.values()"], "Fixed commit": "48fe2e42c734ff26e0958a013bc7728498ff7509", "Url": "https://api.github.com/repos/xwiki-contrib/realtime-backend", "Date": "2018-11-05T13:24:58Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { m.load(); } catch (java.io.FileNotFoundException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/8258/buggy-version/ManagerHome.java", "BodyUseAPI": ["ManagerModel.load()"], "Fixed commit": "9c5d7a933b128cce6b9fb427e99239dd281b58aa", "Url": "https://api.github.com/repos/sophiechenn/CS151Project", "Date": "2018-12-08T21:37:49Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { alloyModel = modelCreator.get().create(f, new de.hhu.stups.alloy2b.translation.Alloy2BParser().alloyToPrologTerm(f.getAbsolutePath())); return new de.prob.scripting.ExtractedModel(alloyModel, null); } catch (final edu.mit.csail.sdg.alloy4.Err exceptions) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5553/buggy-version/de.prob2.kernel.src.main.java.de.prob.scripting.AlloyFactory.java", "BodyUseAPI": ["com.google.inject.Provider<de.prob.model.representation.AlloyModel>.get()", "modelCreator.get().create(java.io.File,new de.hhu.stups.alloy2b.translation.Alloy2BParser().alloyToPrologTerm(f.getAbsolutePath()))", "de.hhu.stups.alloy2b.translation.Alloy2BParser.alloyToPrologTerm(java.lang.String)", "java.io.File.getAbsolutePath()"], "Fixed commit": "237a23bbe99852e8cb70334fb83d745b1f1dbff2", "Url": "https://api.github.com/repos/bendisposto/prob2", "Date": "2018-11-21T10:17:05Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { throw new java.lang.NullPointerException(\"Error\"); } catch (java.lang.NullPointerException e) { java.lang.System.out.println(\"Error! Change input data\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4095/buggy-version/Lab2e.src.NotepadRecord.java", "BodyUseAPI": [], "Fixed commit": "19e3ee42a02933c1f1b9bc5ae9cd276f2a9dd2d7", "Url": "https://api.github.com/repos/kate19009/JavaLabs", "Date": "2018-11-05T15:37:34Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { throw new java.lang.NullPointerException(\"Error\"); } catch (java.lang.NullPointerException e) { java.lang.System.out.println(\"Error! Change input data\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4095/buggy-version/Lab2e.src.NotepadRecord.java", "BodyUseAPI": [], "Fixed commit": "19e3ee42a02933c1f1b9bc5ae9cd276f2a9dd2d7", "Url": "https://api.github.com/repos/kate19009/JavaLabs", "Date": "2018-11-05T15:37:34Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { Lab8_cau2.IOEx.readFile(); java.lang.System.out.println(\"\u0110\u1ecdc file th\u00e0nh c\u00f4ng!\"); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3969/buggy-version/Lab8_cau2.IOEx.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "Lab8_cau2.IOEx.readFile()"], "Fixed commit": "91b6841c7b95a940bf940637e9a9454d7ade0917", "Url": "https://api.github.com/repos/UET-INT2204-10-fall-18/lab08-hoangkhoi-uet", "Date": "2018-11-02T04:58:10Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { recordList.updateComment(record); } catch (java.lang.NullPointerException e) { android.widget.Toast.makeText(this, getText(R.string.error_message), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6575/buggy-version/app.src.main.java.ca.ualberta.t04.medicaltracker.Activity.Patient.RecordHistoryActivity.java", "BodyUseAPI": ["ca.ualberta.t04.medicaltracker.Model.RecordList.updateComment(ca.ualberta.t04.medicaltracker.Model.Record)"], "Fixed commit": "b15a5a01e87958550ec3ccc0d15e996b5206c0c0", "Url": "https://api.github.com/repos/CMPUT301F18T04/MedicalTracker", "Date": "2018-12-02T07:07:29Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { wakeLock.acquire(); } catch (java.lang.Exception e) { wakeLock.release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/90/buggy-version/src.android.service.java", "BodyUseAPI": ["PowerManager.WakeLock.acquire()"], "Fixed commit": "c7c8b8257ec2041df391d33ca111a586bc81d4ee", "Url": "https://api.github.com/repos/dungna7/backgroung-plugin-service-comming-call", "Date": "2018-11-21T08:36:32Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { client.ATM.login1(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); java.lang.System.out.println(\"InterruptedException in login1 happened\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6322/buggy-version/src.client.ATM.java", "BodyUseAPI": ["client.ATM.login1()"], "Fixed commit": "3ed07193898cd545d639a250b1d3ba56b3b52ab6", "Url": "https://api.github.com/repos/snelson1/CT414-Distributed-Systems-Banking-Application", "Date": "2018-12-15T21:48:15Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { client.ATM.login2(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); java.lang.System.out.println(\"InterruptedException in login2 happened\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6322/buggy-version/src.client.ATM.java", "BodyUseAPI": ["client.ATM.login2()"], "Fixed commit": "3ed07193898cd545d639a250b1d3ba56b3b52ab6", "Url": "https://api.github.com/repos/snelson1/CT414-Distributed-Systems-Banking-Application", "Date": "2018-12-15T21:48:15Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { choice = toc.GameUI.getMenuItem(); } catch (java.io.IOException e) { java.lang.System.err.println(\"Invalid input, please try again\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5608/buggy-version/src.toc.GameUI.java", "BodyUseAPI": ["toc.GameUI.getMenuItem()"], "Fixed commit": "bdd1e1665294ce0907cf7a8fb09cf50d1ec870f9", "Url": "https://api.github.com/repos/Shadowrs/toc-cli-game", "Date": "2018-12-02T17:33:06Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { throw new java.lang.NullPointerException(\"Error\"); } catch (java.lang.NullPointerException e) { java.lang.System.out.println(\"Error! There's nothing to show\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/8033/buggy-version/Lab2e.src.Notepad.java", "BodyUseAPI": [], "Fixed commit": "8a127f2ec12fc3119c05e8f3d1d5eb5d318939d3", "Url": "https://api.github.com/repos/kate19009/JavaLabs", "Date": "2018-11-05T15:38:31Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.actions.execute(); } catch (java.lang.InterruptedException e) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5355/buggy-version/src.main.java.uk.co.jpawlak.clicker.threads.WorkingThread.java", "BodyUseAPI": ["uk.co.jpawlak.clicker.actions.Actions.execute()"], "Fixed commit": "b954179dc8c6f5d474bd7be3b1337d489422e48b", "Url": "https://api.github.com/repos/Jarcionek/Clicker", "Date": "2018-06-09T10:52:19Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { SyntaxTree t = new SyntaxTree(s); result += t.printSyntaxTree(); } catch (java.lang.Exception ex) { ex.printStackTrace(); result += \"\u3010\u63d0\u793a\uff1a\u8bed\u6cd5\u5206\u6790\u9519\u8bef\uff0c\u65e0\u6cd5\u6253\u5370\u8bed\u6cd5\u6811\u3002\u8bf7\u68c0\u67e5\u8f93\u5165\u3011\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2148/buggy-version/Interpreter.src.GUIForm.java", "BodyUseAPI": ["SyntaxTree.printSyntaxTree()"], "Fixed commit": "1b91a6a92a860d648887a726449acdc31a9e0201", "Url": "https://api.github.com/repos/liyihann/InfixExpressionInterpreter", "Date": "2018-11-05T13:38:15Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { } catch (java.lang.NullPointerException e) { java.lang.System.out.println(\"Please select 1 of the above options\"); loadPreviousGame(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1353/buggy-version/src.main.java.za.co.wethinkcode.swingy.controller.CLIController.java", "BodyUseAPI": [], "Fixed commit": "2b4e839ea92c44aecc1ae82c6239844d04e788e9", "Url": "https://api.github.com/repos/nrarane/swingy", "Date": "2018-11-03T13:52:58Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { kid = java.lang.Integer.parseInt(knightId); } catch (java.lang.Exception e) { com.itPATH.backend.service.KnightService.logger.info(\"IT\u4fa0ID\u4e0d\u4e3a\u6570\u5b57\"); return com.itPATH.backend.controller.vo.WrapperResponse.wrapFail(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4078/buggy-version/src.main.java.com.itPATH.backend.service.KnightService.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "79158a6e68ad993e93045dd4e2bfce91fb347d9a", "Url": "https://api.github.com/repos/NJU-itPATH/back-end-java-server", "Date": "2018-11-21T03:57:17Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.fasterxml.jackson.databind.JsonNode reservationInfoNode = json.get(\"reservationInfo\"); com.fasterxml.jackson.databind.JsonNode priceRange = json.get(\"priceRange\"); com.fasterxml.jackson.databind.JsonNode mark = json.get(\"mark\"); com.fasterxml.jackson.databind.JsonNode categories = json.get(\"categories\"); if ((!(priceRange.isNull())) && ((priceRange.asInt()) != 0)) { int priceFilter = priceRange.asInt(); query.eq(\"price_range\", priceFilter); } if ((!(mark.isNull())) && ((mark.asInt()) != 0)) { query.eq(\"round((Select avg(reviews.mark) From reviews where restaurant_id=main.id),0)\", mark.asInt()); } if (!(reservationInfoNode.isNull())) { java.sql.Timestamp reservationDateTime = getStampFromDate(reservationInfoNode.get(\"reservationDate\").asText(), reservationInfoNode.get(\"reservationHour\").asText()); query.exists(io.ebean.Ebean.createQuery(models.Table.class).alias(\"t\").where().raw(\"t.restaurant_id=main.id\").ge(\"t.sitting_places\", reservationInfoNode.get(\"persons\").asInt()).notExists(io.ebean.Ebean.createQuery(models.Reservation.class).alias(\"r\").where().raw(\"r.table_id=t.id\").betweenProperties(\"r.reservation_date_time\", \"r.reservation_end_date_time\", reservationDateTime).query()).query()); } if ((categories.isArray()) && ((categories.size()) > 0)) { for (com.fasterxml.jackson.databind.JsonNode catName : categories) { query.exists(io.ebean.Ebean.createQuery(models.Restaurant.class).where().in(\"categoryList.name\", catName.asText()).raw(\"t0.id=main.id\").query()); } } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4017/buggy-version/app.filters.QueryBuilder.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.JsonNode.isNull()", "com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)", "com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)", "io.ebean.ExpressionList<models.Restaurant>.exists(io.ebean.Ebean.createQuery(models.Restaurant.class).where().in(\"categoryList.name\", catName.asText()).raw(\"t0.id=main.id\").query())", "com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)", "io.ebean.Ebean.createQuery(models.Reservation.class).alias(\"r\").where().raw(\"r.table_id=t.id\").betweenProperties(\"r.reservation_date_time\", \"r.reservation_end_date_time\", reservationDateTime).query()", "io.ebean.Ebean.createQuery(models.Table.class).alias(\"t\").where().raw(\"t.restaurant_id=main.id\").ge(java.lang.String,reservationInfoNode.get(\"persons\").asInt())", "io.ebean.Ebean.createQuery(models.Restaurant.class).where().in(\"categoryList.name\", catName.asText()).raw(\"t0.id=main.id\").query()", "io.ebean.ExpressionList<models.Restaurant>.eq(java.lang.String,int)", "io.ebean.Ebean.createQuery(java.lang.Class)", "filters.QueryBuilder.getStampFromDate(reservationInfoNode.get(\"reservationDate\").asText(),reservationInfoNode.get(\"reservationHour\").asText())", "io.ebean.Ebean.createQuery(java.lang.Class)", "com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)", "com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)", "io.ebean.Ebean.createQuery(models.Reservation.class).alias(\"r\").where().raw(\"r.table_id=t.id\").betweenProperties(java.lang.String,java.lang.String,java.sql.Timestamp)", "com.fasterxml.jackson.databind.JsonNode.asInt()", "io.ebean.ExpressionList<models.Restaurant>.eq(java.lang.String,mark.asInt())", "io.ebean.Ebean.createQuery(models.Table.class).alias(\"t\").where().raw(\"t.restaurant_id=main.id\").ge(\"t.sitting_places\", reservationInfoNode.get(\"persons\").asInt()).notExists(io.ebean.Ebean.createQuery(models.Reservation.class).alias(\"r\").where().raw(\"r.table_id=t.id\").betweenProperties(\"r.reservation_date_time\", \"r.reservation_end_date_time\", reservationDateTime).query())", "io.ebean.Ebean.createQuery(models.Reservation.class).alias(java.lang.String)", "com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)", "com.fasterxml.jackson.databind.JsonNode.isNull()", "io.ebean.Ebean.createQuery(models.Table.class).alias(java.lang.String)", "io.ebean.Ebean.createQuery(models.Restaurant.class).where().in(java.lang.String,catName.asText())", "io.ebean.Ebean.createQuery(models.Reservation.class).alias(\"r\").where().raw(java.lang.String)", "com.fasterxml.jackson.databind.JsonNode.asInt()", "reservationInfoNode.get(\"reservationHour\").asText()", "io.ebean.Ebean.createQuery(models.Reservation.class).alias(\"r\").where()", "com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)", "io.ebean.Ebean.createQuery(models.Table.class).alias(\"t\").where().raw(\"t.restaurant_id=main.id\").ge(\"t.sitting_places\", reservationInfoNode.get(\"persons\").asInt()).notExists(io.ebean.Ebean.createQuery(models.Reservation.class).alias(\"r\").where().raw(\"r.table_id=t.id\").betweenProperties(\"r.reservation_date_time\", \"r.reservation_end_date_time\", reservationDateTime).query()).query()", "com.fasterxml.jackson.databind.JsonNode.size()", "io.ebean.Ebean.createQuery(models.Restaurant.class).where().in(\"categoryList.name\", catName.asText()).raw(java.lang.String)", "reservationInfoNode.get(\"reservationDate\").asText()", "io.ebean.Ebean.createQuery(models.Table.class).alias(\"t\").where().raw(java.lang.String)", "com.fasterxml.jackson.databind.JsonNode.isArray()", "com.fasterxml.jackson.databind.JsonNode.asInt()", "com.fasterxml.jackson.databind.JsonNode.isNull()", "io.ebean.Ebean.createQuery(models.Table.class).alias(\"t\").where()", "reservationInfoNode.get(\"persons\").asInt()", "io.ebean.Ebean.createQuery(java.lang.Class)", "com.fasterxml.jackson.databind.JsonNode.asInt()", "io.ebean.ExpressionList<models.Restaurant>.exists(io.ebean.Ebean.createQuery(models.Table.class).alias(\"t\").where().raw(\"t.restaurant_id=main.id\").ge(\"t.sitting_places\", reservationInfoNode.get(\"persons\").asInt()).notExists(io.ebean.Ebean.createQuery(models.Reservation.class).alias(\"r\").where().raw(\"r.table_id=t.id\").betweenProperties(\"r.reservation_date_time\", \"r.reservation_end_date_time\", reservationDateTime).query()).query())", "io.ebean.Ebean.createQuery(models.Restaurant.class).where()", "com.fasterxml.jackson.databind.JsonNode.asText()"], "Fixed commit": "52002f86bfc7253f13985207eb8aad90d599868a", "Url": "https://api.github.com/repos/rappabugis1/RestaurantServer", "Date": "2018-12-11T20:56:16Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { obj = java.util.Arrays.stream(args).filter(( ar) -> paramClazz.isAssignableFrom(ar.getClass())).findFirst().get(); } catch (java.lang.Exception e) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6449/buggy-version/src.main.java.top.mangues.searchdb.aop.SearchDbAop.java", "BodyUseAPI": ["java.util.Optional<java.lang.Object>.get()", "java.util.stream.Stream<java.lang.Object>.findFirst()", "java.lang.Object.getClass()", "java.util.stream.Stream<java.lang.Object>.filter(java.util.function.Predicate<? super java.lang.Object>)", "java.lang.Class<?>.isAssignableFrom(java.lang.Class<? extends java.lang.Object>)", "java.util.Arrays.stream(java.lang.Object[])"], "Fixed commit": "1514a001a424e4a28ce8ad5b5ae61894e2ee47dd", "Url": "https://api.github.com/repos/mangues/search-db", "Date": "2018-12-03T06:01:36Z"},
{"Line": "=>1315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { transformFields(inputFields, outputFields, newFields, newMethods); transformMethods(inputMethods, outputMethods, newFields, newMethods); transformMethods(inputConstructors, outputConstructors, newFields, newConstructors); } catch (final java.lang.Throwable t) { outputFields.add(new xy.reflect.ui.info.field.FieldInfoProxy(xy.reflect.ui.info.field.IFieldInfo.NULL_FIELD_INFO) { @java.lang.Override public java.lang.Object getValue(java.lang.Object object) { throw new xy.reflect.ui.util.ReflectionUIError(t); } @java.lang.Override public java.lang.String getName() { return \"customizationError\"; } @java.lang.Override public xy.reflect.ui.info.type.ITypeInfo getType() { return customizedUI.getTypeInfo(new xy.reflect.ui.info.type.source.JavaTypeInfoSource(java.lang.Object.class, new xy.reflect.ui.info.type.source.SpecificitiesIdentifier(containingType.getName(), \"customizationError\"))); } }); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4758/buggy-version/reflection-ui.src.main.java.xy.reflect.ui.info.type.factory.InfoCustomizationsFactory.java", "BodyUseAPI": ["xy.reflect.ui.info.type.factory.InfoCustomizationsFactory.MembersCustomizationsFactory.transformMethods(java.util.List<xy.reflect.ui.info.method.IMethodInfo>,java.util.List<xy.reflect.ui.info.method.IMethodInfo>,java.util.List<xy.reflect.ui.info.field.IFieldInfo>,java.util.List<xy.reflect.ui.info.method.IMethodInfo>)", "xy.reflect.ui.info.type.factory.InfoCustomizationsFactory.MembersCustomizationsFactory.transformFields(java.util.List<xy.reflect.ui.info.field.IFieldInfo>,java.util.List<xy.reflect.ui.info.field.IFieldInfo>,java.util.List<xy.reflect.ui.info.field.IFieldInfo>,java.util.List<xy.reflect.ui.info.method.IMethodInfo>)", "xy.reflect.ui.info.type.factory.InfoCustomizationsFactory.MembersCustomizationsFactory.transformMethods(java.util.List<xy.reflect.ui.info.method.IMethodInfo>,java.util.List<xy.reflect.ui.info.method.IMethodInfo>,java.util.List<xy.reflect.ui.info.field.IFieldInfo>,java.util.List<xy.reflect.ui.info.method.IMethodInfo>)"], "Fixed commit": "62bc17353e12258dd5e07e8468ef75cdf500cd43", "Url": "https://api.github.com/repos/dotxyteam/ReflectionUI", "Date": "2018-12-08T12:38:36Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { test(); } catch (java.rmi.RemoteException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7611/buggy-version/wso2-outbound-soap-provisioning-connector.src.main.java.org.wso2.custom.outbound.soap.SOAPProvisioningConnector.java", "BodyUseAPI": ["org.wso2.custom.outbound.soap.SOAPProvisioningConnector.test()"], "Fixed commit": "c7cce93e1b5e03268e363fb341cfc24f98279e8e", "Url": "https://api.github.com/repos/nipunthathsara/wso2-SOAP-outbound-provisioning-connector", "Date": "2018-11-02T21:01:17Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.json.JSONObject currenttag = tags.getJSONObject(0); author = \"By \" + (currenttag.optString(\"webTitle\")); } catch (org.json.JSONException e) { android.util.Log.e(com.example.android.thenewsapp.QueryUtils.LOG_TAG, \"tags not available\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/475/buggy-version/app.src.main.java.com.example.android.thenewsapp.QueryUtils.java", "BodyUseAPI": ["org.json.JSONObject.optString(java.lang.String)", "org.json.JSONArray.getJSONObject(int)"], "Fixed commit": "f79dbf2e0888a2534991dad93a97f97e86ccd7ad", "Url": "https://api.github.com/repos/tusharsabhani/TheNewsApp", "Date": "2018-11-11T18:08:57Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return (\" (Economy: \" + (economy.getName())) + \")\"; } catch (java.lang.UnsupportedOperationException e) { return (\" (Economy: \" + (economy.getClass().getName())) + \")\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1421/buggy-version/modules.Plugin.src.main.java.de.Keyle.MyPet.util.hooks.VaultHook.java", "BodyUseAPI": ["net.milkbowl.vault.economy.Economy.getName()"], "Fixed commit": "10919043e29cefe9a8782212d35fa083c99d1710", "Url": "https://api.github.com/repos/xXKeyleXx/MyPet", "Date": "2018-12-29T17:10:27Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { dba.insertNewWord(new com.bikebot.vocabularyquiz.Word(word.getText().toString(), meaning.getText().toString())); infoMsg.setText(getString(R.string.info_word_saved)); } catch (android.database.sqlite.SQLiteConstraintException e) { infoMsg.setText(getString(R.string.info_word_exists)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/866/buggy-version/app.src.main.java.com.bikebot.vocabularyquiz.AddWordActivity.java", "BodyUseAPI": ["android.widget.EditText.getText()", "com.bikebot.vocabularyquiz.AddWordActivity.getString(R.string.info_word_saved)", "word.getText().toString()", "android.widget.EditText.getText()", "android.widget.TextView.setText(getString(R.string.info_word_saved))", "com.bikebot.vocabularyquiz.DBAccessor.insertNewWord(com.bikebot.vocabularyquiz.Word)", "meaning.getText().toString()"], "Fixed commit": "ef70650ad4214b4cbef245c25209024ac7d22a31", "Url": "https://api.github.com/repos/pbarrio/VocabularyQuiz", "Date": "2018-12-15T23:57:13Z"},
{"Line": "=>1251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { shortTitle = o.get(\"shorttitle\").getAsString(); } catch (java.lang.Exception e) { org.ocmc.ioc.liturgical.utils.ErrorUtils.report(net.ages.alwb.utils.transformers.adapters.TextInformationToPdf.logger, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7338/buggy-version/src.main.java.net.ages.alwb.utils.transformers.adapters.TextInformationToPdf.java", "BodyUseAPI": ["com.google.gson.JsonObject.get(java.lang.String)", "o.get(\"shorttitle\").getAsString()"], "Fixed commit": "f1e4573fecaa27a1cead7ccd5575485a045a4f11", "Url": "https://api.github.com/repos/OCMC-Translation-Projects/ioc-liturgical-ws", "Date": "2018-12-26T21:29:52Z"},
{"Line": "=>717", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.os.ParcelFileDescriptor parcelFileDesc = getActivity().getContentResolver().openFileDescriptor(fileUri, \"r\"); java.io.FileDescriptor fileDesc = parcelFileDesc.getFileDescriptor(); android.graphics.Bitmap photo = android.graphics.BitmapFactory.decodeFileDescriptor(fileDesc); path = MediaStore.Images.Media.insertImage(getContext().getContentResolver(), photo, \"Title\", null); parcelFileDesc.close(); } catch (java.io.FileNotFoundException e) { e.printStackTrace(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6804/buggy-version/app.src.main.java.org.helpapaw.helpapaw.signalsmap.SignalsMapFragment.java", "BodyUseAPI": ["MediaStore.Images.Media.insertImage(getContext().getContentResolver(),android.graphics.Bitmap,java.lang.String,<nulltype>)", "android.os.ParcelFileDescriptor.close()", "org.helpapaw.helpapaw.signalsmap.SignalsMapFragment.getActivity()", "android.os.ParcelFileDescriptor.getFileDescriptor()", "getContext().getContentResolver()", "getActivity().getContentResolver().openFileDescriptor(android.net.Uri,java.lang.String)", "android.graphics.BitmapFactory.decodeFileDescriptor(java.io.FileDescriptor)", "org.helpapaw.helpapaw.signalsmap.SignalsMapFragment.getContext()", "getActivity().getContentResolver()"], "Fixed commit": "67f826e8ffa9520e18043c96f09c02a842b79925", "Url": "https://api.github.com/repos/eludelogixter/Android", "Date": "2018-11-14T14:01:32Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { innerAnnotations = ((java.lang.annotation.Annotation[]) (annotationMethodContainer.invoke(annotation))); } catch (java.lang.IllegalAccessException e) { e.printStackTrace(); chat.logs.LoggerEx.warn(com.docker.rpc.remote.skeleton.ServiceSkeletonAnnotationHandler.TAG, (((((\"(IllegalAccessException)Try to get annotations for key values in class \" + (annotationMethodContainer.getDeclaringClass())) + \" method \") + (annotationMethodContainer.getName())) + \" failed, \") + (e.getMessage()))); } catch (java.lang.reflect.InvocationTargetException e) { e.printStackTrace(); chat.logs.LoggerEx.warn(com.docker.rpc.remote.skeleton.ServiceSkeletonAnnotationHandler.TAG, (((((\"(InvocationTargetException)Try to get annotations for key values in class \" + (annotationMethodContainer.getDeclaringClass())) + \" method \") + (annotationMethodContainer.getName())) + \" failed, \") + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/8818/buggy-version/SDockerCore.src.com.docker.rpc.remote.skeleton.ServiceSkeletonAnnotationHandler.java", "BodyUseAPI": ["java.lang.reflect.Method.invoke(java.lang.annotation.Annotation)"], "Fixed commit": "feebdf3721e4254d03c418cd3e889b85bc1025d9", "Url": "https://api.github.com/repos/dobybros/scriptcore", "Date": "2018-12-16T16:19:42Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.hpe.adm.octane.ideplugins.services.nonentity.SharedSpaceLevelRequestService sharedSpaceLevelRequestService = pluginModule.getInstance(com.hpe.adm.octane.ideplugins.services.nonentity.SharedSpaceLevelRequestService.class); workspaceDisplayName = (\" [\" + (sharedSpaceLevelRequestService.getCurrentWorkspaceName())) + \"]\"; } catch (java.lang.Exception ex) { workspaceDisplayName = \"\"; com.hpe.adm.octane.ideplugins.intellij.ui.EntryPoint.log.warn((\"Failed to get workspace name: \" + ex)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/8426/buggy-version/src.main.java.com.hpe.adm.octane.ideplugins.intellij.ui.EntryPoint.java", "BodyUseAPI": ["com.hpe.adm.octane.ideplugins.intellij.PluginModule.getInstance(java.lang.Class)", "com.hpe.adm.octane.ideplugins.services.nonentity.SharedSpaceLevelRequestService.getCurrentWorkspaceName()"], "Fixed commit": "13302b53f2c7b58411acd4c98fc1cdb72d952ba1", "Url": "https://api.github.com/repos/MicroFocus/octane-intellij-plugin", "Date": "2018-11-02T08:36:33Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { group.addAlarm(new alarm.MusicAlarm(cal.getTime(), (repeat ? alarm.ERepetition.WEEKLY : alarm.ERepetition.NONE), alarm.MusicAlarm.getDefaultMusicDir())); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3741/buggy-version/AlarmClock.src.ui.AlarmSetter.java", "BodyUseAPI": ["java.util.Calendar.getTime()", "alarm.MusicAlarm.getDefaultMusicDir()", "alarm.AlarmGroup.addAlarm(alarm.MusicAlarm)"], "Fixed commit": "b2bec3e27262056d78d7463dd22b68d1c4c1432c", "Url": "https://api.github.com/repos/Krzmbrzl/AlarmClock", "Date": "2018-12-26T11:12:54Z"},
{"Line": "=>394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { final bd.com.ipay.sdk.IPaySDK.CheckoutState checkoutState = bd.com.ipay.sdk.IPaySDK.performCheckout(activity, checkoutUrl, false); switch (checkoutState) { case IPAY_APP_NOT_INSTALLED : android.content.Intent intent = new android.content.Intent(activity, bd.com.ipay.sdk.activity.IPayWebCheckoutActivity.class); intent.putExtra(IPayCheckoutActivity.IPAY_CHECKOUT_URL_KEY, checkoutUrl); intent.putExtra(IPayWebCheckoutActivity.THIRD_PARTY_CHECKOUT_CALLBACK_URL_KEY, checkoutCallbackActionUrls); if (useCallbackActivity && (android.text.TextUtils.isEmpty(bd.com.ipay.sdk.IPaySDK.getCheckoutCallBackActivity()))) { return bd.com.ipay.sdk.IPaySDK.CheckoutState.CHECKOUT_COMPLETE_ACTIVITY_NOT_FOUND; }else { intent.putExtra(IPayCheckoutActivity.CHECKOUT_COMPLETE_START_COMPONENT_KEY, useCallbackActivity); } if (useCallbackActivity) { android.support.v4.app.ActivityCompat.startActivity(activity, intent, null); }else { android.support.v4.app.ActivityCompat.startActivityForResult(activity, intent, bd.com.ipay.sdk.IPaySDK.getCheckoutRequestCode(), null); } return bd.com.ipay.sdk.IPaySDK.CheckoutState.PROCESSING; default : return checkoutState; } } catch (java.lang.IllegalStateException e) { if (((e.getMessage()) != null) && (e.getMessage().equals(Constants.NO_IPAY_APP_INSTALLED_REASON))) { android.content.Intent intent = new android.content.Intent(activity, bd.com.ipay.sdk.activity.IPayWebCheckoutActivity.class); intent.putExtra(IPayCheckoutActivity.IPAY_CHECKOUT_URL_KEY, checkoutUrl); intent.putExtra(IPayWebCheckoutActivity.THIRD_PARTY_CHECKOUT_CALLBACK_URL_KEY, checkoutCallbackActionUrls); if (useCallbackActivity && (android.text.TextUtils.isEmpty(bd.com.ipay.sdk.IPaySDK.getCheckoutCallBackActivity()))) { return bd.com.ipay.sdk.IPaySDK.CheckoutState.CHECKOUT_COMPLETE_ACTIVITY_NOT_FOUND; }else { intent.putExtra(IPayCheckoutActivity.CHECKOUT_COMPLETE_START_COMPONENT_KEY, useCallbackActivity); } if (useCallbackActivity) { android.support.v4.app.ActivityCompat.startActivity(activity, intent, null); }else { android.support.v4.app.ActivityCompat.startActivityForResult(activity, intent, bd.com.ipay.sdk.IPaySDK.getCheckoutRequestCode(), null); } return bd.com.ipay.sdk.IPaySDK.CheckoutState.PROCESSING; }else { return bd.com.ipay.sdk.IPaySDK.CheckoutState.UNABLE_TO_PROCESS; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2492/buggy-version/ipay-sdk.src.main.java.bd.com.ipay.sdk.IPaySDK.java", "BodyUseAPI": ["bd.com.ipay.sdk.IPaySDK.getCheckoutCallBackActivity()", "bd.com.ipay.sdk.IPaySDK.performCheckout(android.app.Activity,java.lang.String,boolean)", "android.content.Intent.putExtra(IPayCheckoutActivity.IPAY_CHECKOUT_URL_KEY,java.lang.String)", "android.content.Intent.putExtra(IPayCheckoutActivity.CHECKOUT_COMPLETE_START_COMPONENT_KEY,boolean)", "bd.com.ipay.sdk.IPaySDK.getCheckoutRequestCode()", "android.support.v4.app.ActivityCompat.startActivity(android.app.Activity,android.content.Intent,<nulltype>)", "android.text.TextUtils.isEmpty(java.lang.String)", "android.content.Intent.putExtra(IPayWebCheckoutActivity.THIRD_PARTY_CHECKOUT_CALLBACK_URL_KEY,bd.com.ipay.sdk.model.CheckoutCallbackActionUrls)", "android.support.v4.app.ActivityCompat.startActivityForResult(android.app.Activity,android.content.Intent,int,<nulltype>)"], "Fixed commit": "f831ebdf7110fe53d9fc00eccbeb68782c7530ec", "Url": "https://api.github.com/repos/ipay-systems/iPayAndroidSDK", "Date": "2018-11-03T20:42:04Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { converted = new java.lang.String(msg.array(), \"UTF-8\"); } catch (java.io.UnsupportedEncodingException ex) { java.util.logging.Logger.getLogger(com.minhquan.chatroomsever.ChatRoomSever.ChatRomSever.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3124/buggy-version/src.main.java.com.minhquan.chatroomsever.ChatRoomSever.ChatRomSever.java", "BodyUseAPI": ["java.nio.ByteBuffer.array()"], "Fixed commit": "7d0d0bbc496402400cf44a9677bbb1619181ee44", "Url": "https://api.github.com/repos/quanKM/ChatRoom_Sever", "Date": "2018-11-16T05:03:21Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { userId = ((int) (req.getSession().getAttribute(\"id\"))); } catch (java.lang.ClassCastException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3195/buggy-version/src.main.java.com.codecool.shop.controller.ShoppingCart.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getSession()", "req.getSession().getAttribute(java.lang.String)"], "Fixed commit": "c50098ff56647f571281df409188bd5292e50c32", "Url": "https://api.github.com/repos/CodecoolBPoop/oop-java-codecool-shop-b-and-b", "Date": "2018-11-14T09:43:09Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { delPatient.get(); } catch (java.util.concurrent.ExecutionException e) { e.printStackTrace(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4787/buggy-version/SymptoLoggerApp.app.src.main.java.com.example.symptologger.MainActivity.java", "BodyUseAPI": ["ElasticSearchClient.DeletePatient.get()"], "Fixed commit": "2da8910b0211e138c24ba787702e1e5e97bf95ad", "Url": "https://api.github.com/repos/CMPUT301F18T02/SymptoLogger", "Date": "2018-12-01T18:21:56Z"},
{"Line": "=>635", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { getContext().unregisterReceiver(wifiReceiver); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6534/buggy-version/library.app.src.main.java.am.appwise.components.ni.NoInternetDialog.java", "BodyUseAPI": ["getContext().unregisterReceiver(am.appwise.components.ni.WifiReceiver)", "am.appwise.components.ni.NoInternetDialog.getContext()"], "Fixed commit": "ce8fa40faa887cc14472a60c65cad84e265ee13b", "Url": "https://api.github.com/repos/kolllor33/NoInternetDialog", "Date": "2018-11-19T18:03:25Z"},
{"Line": "=>632", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { getContext().unregisterReceiver(networkStatusReceiver); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6534/buggy-version/library.app.src.main.java.am.appwise.components.ni.NoInternetDialog.java", "BodyUseAPI": ["am.appwise.components.ni.NoInternetDialog.getContext()", "getContext().unregisterReceiver(am.appwise.components.ni.NetworkStatusReceiver)"], "Fixed commit": "ce8fa40faa887cc14472a60c65cad84e265ee13b", "Url": "https://api.github.com/repos/kolllor33/NoInternetDialog", "Date": "2018-11-19T18:03:25Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { output.append(makeBinaryValue(insn.getR1().getRegisterNumber(), 5, 0)); used.append(\"reg1 \"); } catch (java.lang.NullPointerException e) { if ((((((((insn.getOpcode().getName().equals(\"swc1\")) || (insn.getOpcode().getName().equals(\"sdc1\"))) || (insn.getOpcode().getName().equals(\"s.d\"))) || (insn.getOpcode().getName().equals(\"l.d\"))) || (insn.getOpcode().getName().equals(\"s.s\"))) || (insn.getOpcode().getName().equals(\"l.s\"))) || (insn.getOpcode().getName().equals(\"lwc1\"))) || (insn.getOpcode().getName().equals(\"ldc1\"))) { output.append(\"00000\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6802/buggy-version/src.backend.assembler.Assembler.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "backend.assembler.Assembler.makeBinaryValue(insn.getR1().getRegisterNumber(),int,int)", "insn.getR1().getRegisterNumber()", "backend.program.Instruction.getR1()", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "d7fb6163d11a3c69b92f3be67f440880f8b4f73e", "Url": "https://api.github.com/repos/waiweran/MipsInterpreter", "Date": "2018-11-20T20:14:54Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { x = parseX(position); y = parseY(position); } catch (java.lang.Exception e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7722/buggy-version/ReversiBoard.java", "BodyUseAPI": ["ReversiBoard.parseX(java.lang.String)", "ReversiBoard.parseY(java.lang.String)"], "Fixed commit": "90e8afcd12f87a7191fde7ff852113bb60f77b1e", "Url": "https://api.github.com/repos/Charlotte-996/cs11afall1803-team10", "Date": "2018-12-05T06:39:19Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { model.addAttribute(\"earningsStatements\", this.earningsStatementDao.statementsForEmployee(emplId)); } catch (java.lang.Exception e) { logger.warn((\"Exception getting earnings statements for \" + emplId), e); model.addAttribute(\"earningsStatementsError\", true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7642/buggy-version/hrs-portlets-webapp.src.main.java.edu.wisc.portlet.hrs.web.payroll.PayrollInformationController.java", "BodyUseAPI": ["edu.wisc.hr.dao.ernstmt.SimpleEarningsStatementDao.statementsForEmployee(java.lang.String)", "org.springframework.ui.ModelMap.addAttribute(java.lang.String,this.earningsStatementDao.statementsForEmployee(emplId))"], "Fixed commit": "f5f5c5b3a15cea70212664f39b0692e2dce15161", "Url": "https://api.github.com/repos/UW-Madison-DoIT/hrs-portlets", "Date": "2018-11-09T15:30:21Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { currentDate = dateFormat.parse(dateFormat.format(currentDate)); int comparaison = dateFormat.parse(date).compareTo(currentDate); if (comparaison != (-1)) { apList.add(ap); } } catch (java.text.ParseException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/4022/buggy-version/app.src.main.java.ch.epfl.sweng.vanjel.patientAppointment.PatientPersonalAppointments.java", "BodyUseAPI": ["java.util.List<ch.epfl.sweng.vanjel.patientAppointment.PtPersonalAppointment>.add(ch.epfl.sweng.vanjel.patientAppointment.PtPersonalAppointment)", "java.text.SimpleDateFormat.format(java.util.Date)", "java.util.Date.compareTo(java.util.Date)", "java.text.SimpleDateFormat.parse(java.lang.String)", "java.text.SimpleDateFormat.parse(java.lang.String)"], "Fixed commit": "7476229db882abd3d414a548c1371a5cdfb2f048", "Url": "https://api.github.com/repos/ElCabrino/SDPProject", "Date": "2018-12-15T14:59:38Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { setNewVariable(currentLine); } catch (java.lang.IllegalArgumentException illegalArguments) { java.lang.System.err.println(illegalArguments.getMessage()); } catch (exceptions.TypeNotFoundException typeNotFound) { java.lang.System.err.println(typeNotFound.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/9488/buggy-version/CommandInterpreter.src.commands.Loader.java", "BodyUseAPI": ["commands.Loader.setNewVariable(java.lang.String)"], "Fixed commit": "0dc694515a4b7654c87164671a23eb66fe7d605d", "Url": "https://api.github.com/repos/hhodzhov/Command_Interpreter", "Date": "2018-11-10T09:17:09Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { genericService = referenceConfigCache.get(reference); } catch (java.lang.Exception ex) { referenceConfigCache.destroy(reference); org.dromara.soul.common.utils.LogUtils.error(org.dromara.soul.web.plugin.dubbo.DubboProxyService.LOGGER, ex::getMessage); throw new org.dromara.soul.common.exception.SoulException(ex.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7671/buggy-version/soul-web.src.main.java.org.dromara.soul.web.plugin.dubbo.DubboProxyService.java", "BodyUseAPI": ["com.alibaba.dubbo.config.utils.ReferenceConfigCache.get(com.alibaba.dubbo.config.ReferenceConfig<com.alibaba.dubbo.rpc.service.GenericService>)"], "Fixed commit": "15a046530f978871459a1c493c0b11d134f870cb", "Url": "https://api.github.com/repos/liuxx001/soul", "Date": "2018-11-30T02:44:39Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { configReadOnly = configRepository.isConfigReadOnly(agentRollupId); } catch (org.glowroot.common2.repo.ConfigRepository.AgentConfigNotFoundException e) { configReadOnly = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/9438/buggy-version/ui.src.main.java.org.glowroot.ui.LayoutService.java", "BodyUseAPI": ["org.glowroot.common2.repo.ConfigRepository.isConfigReadOnly(java.lang.String)"], "Fixed commit": "21dd859d933face3ef1b39092aba13388b4c012b", "Url": "https://api.github.com/repos/trask/glowroot", "Date": "2018-11-17T00:58:28Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { statement.execute(createStatusIndex); } catch (java.sql.SQLException e) { log.info(\"Index exists\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/3555/buggy-version/src.main.java.com.pingwinno.domain.sqlite.handlers.SqliteStatusDataHandler.java", "BodyUseAPI": ["java.sql.Statement.execute(java.lang.String)"], "Fixed commit": "b76897a28cb3ec84c5441927c679d0e0016cacd4", "Url": "https://api.github.com/repos/pingwinno/Twitch-o-matic", "Date": "2018-11-04T23:24:23Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { statement.execute(createStreamsIndex); } catch (java.sql.SQLException e) { log.info(\"Index exists\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/3555/buggy-version/src.main.java.com.pingwinno.domain.sqlite.handlers.SqliteStreamDataHandler.java", "BodyUseAPI": ["java.sql.Statement.execute(java.lang.String)"], "Fixed commit": "b76897a28cb3ec84c5441927c679d0e0016cacd4", "Url": "https://api.github.com/repos/pingwinno/Twitch-o-matic", "Date": "2018-11-04T23:24:23Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { clientSocket = serverSocket.accept(); this.inThreadPool.execute(new connection.IncomingRequest(clientSocket, peer.getPeerInstance().getPeerExpectConnectFrom().get(currentID))); currentID++; } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5136/buggy-version/src.processes.peerServer.java", "BodyUseAPI": ["java.util.concurrent.ExecutorService.execute(connection.IncomingRequest)", "peer.getPeerInstance().getPeerExpectConnectFrom().get(int)", "java.net.ServerSocket.accept()", "peer.getPeerInstance().getPeerExpectConnectFrom()", "processes.peerServer.getPeerInstance()"], "Fixed commit": "cbf99e51a8adfb6991d5663f492baceef6b7d4ad", "Url": "https://api.github.com/repos/mmmfrieddough/Computer-Networks-Project", "Date": "2018-11-21T00:15:22Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.serverSocket.close(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5136/buggy-version/src.processes.peerServer.java", "BodyUseAPI": ["java.net.ServerSocket.close()"], "Fixed commit": "cbf99e51a8adfb6991d5663f492baceef6b7d4ad", "Url": "https://api.github.com/repos/mmmfrieddough/Computer-Networks-Project", "Date": "2018-11-21T00:15:22Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { this.serverSocket = new java.net.ServerSocket(this.port); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5136/buggy-version/src.processes.peerServer.java", "BodyUseAPI": [], "Fixed commit": "cbf99e51a8adfb6991d5663f492baceef6b7d4ad", "Url": "https://api.github.com/repos/mmmfrieddough/Computer-Networks-Project", "Date": "2018-11-21T00:15:22Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { street = addressJson.getString(\"street\"); } catch (org.json.JSONException e) { throw new main.java.exceptions.StreetNotFoundException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2325/buggy-version/src.main.java.guideLines.model.AddressResolver.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "a195bfaa440ab94ba2e59c9d5737c7f4f0699025", "Url": "https://api.github.com/repos/sweIhm-ws2018-19/skillproject-fr-21", "Date": "2018-12-08T07:49:54Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(1000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1986/buggy-version/fluentlenium-core.src.main.java.org.fluentlenium.core.action.WindowAction.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "cf8b0c5136de82181af8691197409dce8328f9bc", "Url": "https://api.github.com/repos/FluentLenium/FluentLenium", "Date": "2018-11-29T10:46:49Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { e = clazz.getConstructor(java.lang.String.class).newInstance(\"Test Exception\"); } catch (java.lang.NoSuchMethodException ignored) { e = clazz.getConstructor().newInstance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6860/buggy-version/apps.sasquatch.src.main.java.com.microsoft.appcenter.sasquatch.activities.ManagedErrorActivity.java", "BodyUseAPI": ["java.lang.Class<? extends java.lang.Throwable>.getConstructor(java.lang.Class)", "java.lang.reflect.Constructor<? extends java.lang.Throwable>.newInstance(java.lang.String)"], "Fixed commit": "e97110d3b09e0ffd4d41359a9fa9dac324fa0580", "Url": "https://api.github.com/repos/Microsoft/AppCenter-SDK-Android", "Date": "2018-12-13T10:46:48Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Class.forName(datasource.get(\"driver\")); } catch (java.lang.ClassNotFoundException e) { throw new java.io.IOException((\"Load jdbc driver fail\" + (datasource.get(\"driver\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/4641/buggy-version/src.main.java.org.pinae.timon.session.datasource.BoneCPDataSource.java", "BodyUseAPI": ["org.pinae.timon.util.ConfigMap<java.lang.String, java.lang.String>.get(java.lang.String)", "java.lang.Class.forName(datasource.get(\"driver\"))"], "Fixed commit": "d4ae48a2d807f97861dc83fad59a32534070193d", "Url": "https://api.github.com/repos/PinaeOS/timon", "Date": "2018-12-12T14:55:41Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Class.forName(datasource.get(\"driver\")); } catch (java.lang.ClassNotFoundException e) { throw new java.io.IOException((\"Load jdbc driver fail: \" + (datasource.get(\"driver\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/4641/buggy-version/src.main.java.org.pinae.timon.session.datasource.JDBCDataSource.java", "BodyUseAPI": ["java.lang.Class.forName(datasource.get(\"driver\"))", "org.pinae.timon.util.ConfigMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "d4ae48a2d807f97861dc83fad59a32534070193d", "Url": "https://api.github.com/repos/PinaeOS/timon", "Date": "2018-12-12T14:55:41Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.Date selectedDate = sdf.parse(date); if (currentDate.after(selectedDate)) { java.lang.String setDate = (((year + \"-\") + month) + \"-\") + day; problemDate.setText(setDate); }else { android.widget.Toast.makeText(this, \"You can not select future time\", Toast.LENGTH_SHORT).show(); } } catch (java.text.ParseException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1809/buggy-version/app.src.main.java.ca.ualberta.t04.medicaltracker.Activity.Patient.EditProblemActivity.java", "BodyUseAPI": ["android.widget.Toast.makeText(this, \"You can not select future time\", Toast.LENGTH_SHORT).show()", "java.util.Date.after(java.util.Date)", "java.text.SimpleDateFormat.parse(java.lang.String)", "android.widget.Toast.makeText(ca.ualberta.t04.medicaltracker.Activity.Patient.EditProblemActivity,java.lang.String,Toast.LENGTH_SHORT)", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "efc931eabf1099792544cff66a11caa00b93cd8d", "Url": "https://api.github.com/repos/CMPUT301F18T04/MedicalTracker", "Date": "2018-11-30T00:41:25Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { onAntitaskkillerChanged(); } catch (java.lang.Throwable t) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6451/buggy-version/phoneRecorder.src.main.java.com.kivsw.phonerecorder.os.MyApplication.java", "BodyUseAPI": ["com.kivsw.phonerecorder.os.MyApplication.onAntitaskkillerChanged()"], "Fixed commit": "53a4f63c0ac76166abaf50e147dea2dbf315e5b1", "Url": "https://api.github.com/repos/kivSW/PhoneRecorderN", "Date": "2018-11-14T09:37:09Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String[] info = commande.split(\" \"); region = info[1]; summonerName = info[2]; } catch (java.lang.ArrayIndexOutOfBoundsException e) { return \"Erreur dans l\\'enregistrement. Note : Vous devez \\u00e9crire \\\"register player VotreServeur VotrePseudo\\\" pour vous enregistrer\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2827/buggy-version/src.euclidianProject.main.CommandManagement.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "aab98814683dfd4b06803af4a4169cb2a931da69", "Url": "https://api.github.com/repos/KaluNight/EuclidianProject", "Date": "2018-11-01T22:35:51Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return io.confluent.ksql.cli.console.OutputFormat.valueOf(format); } catch (final java.lang.IllegalArgumentException e) { throw new java.lang.IllegalArgumentException((((\"Unknown Output format: \" + format) + \". Valid values are: \") + (io.confluent.ksql.cli.console.OutputFormat.VALID_FORMATS))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1455/buggy-version/ksql-cli.src.main.java.io.confluent.ksql.cli.console.OutputFormat.java", "BodyUseAPI": ["io.confluent.ksql.cli.console.OutputFormat.valueOf(java.lang.String)"], "Fixed commit": "492adf18a4436b01c4febbada8d054ebabf547ef", "Url": "https://api.github.com/repos/rodesai/ksql", "Date": "2018-12-05T10:18:25Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { id = java.lang.Integer.parseInt(args[1]); } catch (java.lang.NumberFormatException e) { mess.toPlayer(p, ((args[1]) + \" ist keine Zahl\"), Messages.IMPORTANT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/9212/buggy-version/Signs.src.fex.signs.signs.Main.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "edd97f7b58efa6b79025fc902a1e67c64fc46067", "Url": "https://api.github.com/repos/fex594/signs", "Date": "2018-11-15T18:07:16Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { serverSocket = new java.net.ServerSocket(gr.kalymnos.skemelio.p2pchat.mvc_model.chat.Server.PORT); } catch (java.io.IOException e) { android.util.Log.e(gr.kalymnos.skemelio.p2pchat.mvc_model.chat.Server.TAG, \"Error creating server socket or accepting a client\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7156/buggy-version/app.src.main.java.gr.kalymnos.skemelio.p2pchat.mvc_model.chat.Server.java", "BodyUseAPI": [], "Fixed commit": "44263e58c454e5675cfbb257011533a03c1419f8", "Url": "https://api.github.com/repos/tomasmichael995/P2PChat", "Date": "2018-11-23T18:33:50Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { robot.init(hardwareMap); robot.lights.setPattern(RevBlinkinLedDriver.BlinkinPattern.fromNumber(60)); } catch (java.lang.Exception e) { robot.tfod.shutdown(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/8007/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.OldTeleop.java", "BodyUseAPI": ["org.firstinspires.ftc.teamcode.OldTeleop.init(org.firstinspires.ftc.teamcode.OldTeleop)", "robot.lights.setPattern(RevBlinkinLedDriver.BlinkinPattern.fromNumber(60))", "RevBlinkinLedDriver.BlinkinPattern.fromNumber(int)"], "Fixed commit": "8a0db7e0d92e093de97a3ea5982d359ba6620b4c", "Url": "https://api.github.com/repos/THE-COB/ftc_app", "Date": "2018-12-11T20:14:03Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return java.net.URLEncoder.encode(sb.toString(), \"UTF-8\"); } catch (java.io.UnsupportedEncodingException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/923/buggy-version/src.main.java.eu.greev.twofa.utils.TwoFactorAuthUtil.java", "BodyUseAPI": ["java.net.URLEncoder.encode(java.lang.String,java.lang.String)", "java.lang.StringBuilder.toString()"], "Fixed commit": "a3055c9eeb07e13b6d692be4a98d893ae96df605", "Url": "https://api.github.com/repos/Kavatch/Bungeecord-2FA", "Date": "2018-11-24T11:44:07Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { messageBody = jdbcTemplate.queryForObject(sql, org.forum.api.dto.MessageBody.class, id); } catch (org.springframework.dao.DataAccessException dataAccessException) { throw new org.forum.api.exception.DataNotFoundException(org.forum.api.commons.ErrorUtility.getDataNotFoundExceptionMessage(id)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1564/buggy-version/src.main.java.org.forum.api.jdbc.dao.MessageDAOImpl.java", "BodyUseAPI": ["org.springframework.jdbc.core.JdbcTemplate.queryForObject(java.lang.String,java.lang.Class,java.lang.Long)"], "Fixed commit": "871406c9404edbce732fb2c863384cae87750f70", "Url": "https://api.github.com/repos/muradbax/forum-rest-api", "Date": "2018-04-14T19:27:54Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (int i = 0; i < (monsterLinkedHashMapObjects.length); i++) { monsterObjects[i].setMonsterName(monsterLinkedHashMapObjects[i].get(\"MonsterName\").toString()); monsterObjects[i].setRoomLocation(monsterLinkedHashMapObjects[i].get(\"RoomLocation\").toString()); monsterObjects[i].setItemsDrop(monsterLinkedHashMapObjects[i].get(\"ItemsDrop\").toString()); monsterObjects[i].setValueGain(java.lang.Integer.parseInt(monsterLinkedHashMapObjects[i].get(\"ValueGain\").toString())); monsterObjects[i].setArmor(monsterLinkedHashMapObjects[i].get(\"Armor\").toString()); monsterObjects[i].setMonsterHealth(java.lang.Integer.parseInt(monsterLinkedHashMapObjects[i].get(\"MonterHealth\").toString())); monsterObjects[i].setCanAttack(java.lang.Boolean.parseBoolean(monsterLinkedHashMapObjects[i].get(\"Attack\").toString())); monsterObjects[i].setCanDefend(java.lang.Boolean.parseBoolean(monsterLinkedHashMapObjects[i].get(\"Defend\").toString())); monsterObjects[i].setHealthLoss(java.lang.Integer.parseInt(monsterLinkedHashMapObjects[i].get(\"HealthLoss\").toString())); monsterObjects[i].setValueLoss(java.lang.Integer.parseInt(monsterLinkedHashMapObjects[i].get(\"ValueLoss\").toString())); monsterObjects[i].setMonsterDesc(monsterLinkedHashMapObjects[i].get(\"MonsterDesc\").toString()); } } catch (java.lang.Exception a) { a.printStackTrace(); java.lang.System.out.print(\"Error in lines 72++\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5049/buggy-version/src.controller.MonsterController.java", "BodyUseAPI": ["java.util.Map.get(java.lang.String)", "java.lang.Object.toString()", "monsterObjects[i].setRoomLocation(java.lang.String)", "monsterObjects[i].setArmor(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.util.Map.get(java.lang.String)", "java.util.Map.get(java.lang.String)", "monsterObjects[i].setItemsDrop(java.lang.String)", "java.lang.Object.toString()", "monsterObjects[i].setValueLoss(int)", "java.util.Map.get(java.lang.String)", "java.util.Map.get(java.lang.String)", "java.lang.Object.toString()", "monsterObjects[i].setHealthLoss(int)", "java.lang.Object.toString()", "java.lang.Object.toString()", "java.util.Map.get(java.lang.String)", "java.lang.Boolean.parseBoolean(java.lang.String)", "java.lang.Object.toString()", "java.util.Map.get(java.lang.String)", "java.lang.Object.toString()", "java.lang.Boolean.parseBoolean(java.lang.String)", "java.lang.Object.toString()", "java.util.Map.get(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "monsterObjects[i].setMonsterDesc(java.lang.String)", "java.util.Map.get(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.Object.toString()", "monsterObjects[i].setValueGain(int)", "monsterObjects[i].setMonsterName(java.lang.String)", "java.util.Map.get(java.lang.String)", "monsterObjects[i].setMonsterHealth(int)", "monsterObjects[i].setCanAttack(boolean)", "java.lang.Object.toString()", "monsterObjects[i].setCanDefend(boolean)", "java.util.Map.get(java.lang.String)", "java.lang.Object.toString()"], "Fixed commit": "e9257af58c9a4afc06dede2715477353ae52e334", "Url": "https://api.github.com/repos/ajoseph11/Team_Avengers_Fall2018", "Date": "2018-11-08T05:09:47Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { session = com.price.finance_recorder_rest.persistence.HibernateUtil.openConnection(); java.lang.String hql_cmd = java.lang.String.format(\"FROM %s\", com.price.finance_recorder_rest.persistence.UserEntity.class.getSimpleName()); org.hibernate.query.Query<com.price.finance_recorder_rest.persistence.UserEntity> query = session.createQuery(hql_cmd); query.setFirstResult(start); query.setMaxResults(limit); result_list = query.getResultList(); } finally { com.price.finance_recorder_rest.persistence.HibernateUtil.closeConnection(session); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1833/buggy-version/finance_recorder_rest.src.main.java.com.price.finance_recorder_rest.persistence.MySQLDAO.java", "BodyUseAPI": ["java.lang.Class.getSimpleName()", "org.hibernate.query.Query<com.price.finance_recorder_rest.persistence.UserEntity>.setFirstResult(int)", "java.lang.String.format(java.lang.String,java.lang.String)", "com.price.finance_recorder_rest.persistence.HibernateUtil.openConnection()", "org.hibernate.Session.createQuery(java.lang.String)", "org.hibernate.query.Query<com.price.finance_recorder_rest.persistence.UserEntity>.setMaxResults(int)", "org.hibernate.query.Query<com.price.finance_recorder_rest.persistence.UserEntity>.getResultList()"], "Fixed commit": "3a9c7ff9d4bd2fdad6b48c7f398646976d4d7299", "Url": "https://api.github.com/repos/Everett6802/finance_recorder", "Date": "2018-12-07T09:29:55Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { session = com.price.finance_recorder_rest.persistence.HibernateUtil.openConnection(); java.lang.String hql_cmd = java.lang.String.format(\"FROM %s\", com.price.finance_recorder_rest.persistence.MySQLDAO.get_entity_class_name(finance_method)); org.hibernate.query.Query<?> query = session.createQuery(hql_cmd); query.setFirstResult(start); query.setMaxResults(limit); result_list = query.getResultList(); } finally { com.price.finance_recorder_rest.persistence.HibernateUtil.closeConnection(session); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1833/buggy-version/finance_recorder_rest.src.main.java.com.price.finance_recorder_rest.persistence.MySQLDAO.java", "BodyUseAPI": ["com.price.finance_recorder_rest.persistence.MySQLDAO.get_entity_class_name(com.price.finance_recorder_rest.common.CmnDef.FinanceMethod)", "org.hibernate.query.Query<?>.setFirstResult(int)", "org.hibernate.Session.createQuery(java.lang.String)", "org.hibernate.query.Query<?>.setMaxResults(int)", "java.lang.String.format(java.lang.String,java.lang.Object)", "org.hibernate.query.Query<?>.getResultList()", "com.price.finance_recorder_rest.persistence.HibernateUtil.openConnection()"], "Fixed commit": "3a9c7ff9d4bd2fdad6b48c7f398646976d4d7299", "Url": "https://api.github.com/repos/Everett6802/finance_recorder", "Date": "2018-12-07T09:29:55Z"},
{"Line": "=>577", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { session = com.price.finance_recorder_rest.persistence.HibernateUtil.openConnection(); org.hibernate.Transaction tx = session.beginTransaction(); java.lang.String hql_cmd = java.lang.String.format(\"DELETE FROM %s\", com.price.finance_recorder_rest.persistence.MySQLDAO.get_entity_class_name(finance_method)); org.hibernate.query.Query<?> query = session.createQuery(hql_cmd); query.executeUpdate(); tx.commit(); } finally { com.price.finance_recorder_rest.persistence.HibernateUtil.closeConnection(session); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1833/buggy-version/finance_recorder_rest.src.main.java.com.price.finance_recorder_rest.persistence.MySQLDAO.java", "BodyUseAPI": ["org.hibernate.Transaction.commit()", "org.hibernate.Session.createQuery(java.lang.String)", "java.lang.String.format(java.lang.String,java.lang.Object)", "com.price.finance_recorder_rest.persistence.MySQLDAO.get_entity_class_name(com.price.finance_recorder_rest.common.CmnDef.FinanceMethod)", "com.price.finance_recorder_rest.persistence.HibernateUtil.openConnection()", "org.hibernate.query.Query<?>.executeUpdate()", "org.hibernate.Session.beginTransaction()"], "Fixed commit": "3a9c7ff9d4bd2fdad6b48c7f398646976d4d7299", "Url": "https://api.github.com/repos/Everett6802/finance_recorder", "Date": "2018-12-07T09:29:55Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { session = com.price.finance_recorder_rest.persistence.HibernateUtil.openConnection(); org.hibernate.Transaction tx = session.beginTransaction(); java.util.Date sql_start_date = null; java.util.Date sql_end_date = null; java.util.Date csv_start_date = null; java.util.Date csv_end_date = null; java.lang.String native_hql_cmd = null; java.util.List<java.sql.Timestamp> sql_data_list = null; native_hql_cmd = java.lang.String.format(\"SELECT %s FROM %s ORDER BY %s ASC LIMIT 1\", com.price.finance_recorder_rest.persistence.MySQLDAO.TABLE_TIME_FIELD_NAME, com.price.finance_recorder_rest.persistence.MySQLDAO.get_entity_table_name(finance_method), com.price.finance_recorder_rest.persistence.MySQLDAO.TABLE_TIME_FIELD_NAME); sql_data_list = session.createNativeQuery(native_hql_cmd).list(); if (sql_data_list.isEmpty()) { java.lang.String errmsg = java.lang.String.format(\"The table[%s] is empty while finding the start time\", com.price.finance_recorder_rest.persistence.MySQLDAO.get_entity_table_name(finance_method)); throw new com.price.finance_recorder_rest.exceptions.ResourceNotFoundException(errmsg); } sql_start_date = sql_data_list.get(0); native_hql_cmd = java.lang.String.format(\"SELECT %s FROM %s ORDER BY %s DESC LIMIT 1\", com.price.finance_recorder_rest.persistence.MySQLDAO.TABLE_TIME_FIELD_NAME, com.price.finance_recorder_rest.persistence.MySQLDAO.get_entity_table_name(finance_method), com.price.finance_recorder_rest.persistence.MySQLDAO.TABLE_TIME_FIELD_NAME); sql_data_list = session.createNativeQuery(native_hql_cmd).list(); if (sql_data_list.isEmpty()) { java.lang.String errmsg = java.lang.String.format(\"The table[%s] is empty while finding the end time\", com.price.finance_recorder_rest.persistence.MySQLDAO.get_entity_table_name(finance_method)); throw new com.price.finance_recorder_rest.exceptions.ResourceNotFoundException(errmsg); } sql_end_date = sql_data_list.get(0); if (data_line_list.isEmpty()) { java.lang.String errmsg = java.lang.String.format(\"The CSV data[%s] should NOT be empty\", com.price.finance_recorder_rest.common.CmnDef.FINANCE_METHOD_DESCRIPTION_LIST[finance_method.value()]); throw new com.price.finance_recorder_rest.exceptions.ResourceNotFoundException(errmsg); } try { java.lang.String first_line = data_line_list.get(0); csv_start_date = new java.text.SimpleDateFormat(\"yyyy-MM-dd\").parse(first_line.split(\",\")[0]); } catch (java.text.ParseException e) { java.lang.String errmsg = java.lang.String.format(\"Fail to parse the start time in CSV[%s]\", com.price.finance_recorder_rest.common.CmnDef.FINANCE_METHOD_DESCRIPTION_LIST[finance_method.value()]); throw new java.lang.IllegalArgumentException(errmsg); } try { java.lang.String last_line = data_line_list.get(((data_line_list.size()) - 1)); csv_end_date = new java.text.SimpleDateFormat(\"yyyy-MM-dd\").parse(last_line.split(\",\")[0]); } catch (java.text.ParseException e) { java.lang.String errmsg = java.lang.String.format(\"Fail to parse the end time in CSV[%s]\", com.price.finance_recorder_rest.common.CmnDef.FINANCE_METHOD_DESCRIPTION_LIST[finance_method.value()]); throw new java.lang.IllegalArgumentException(errmsg); } long sql_start_date_intvalue = sql_start_date.getTime(); long sql_end_date_intvalue = sql_end_date.getTime(); long csv_start_date_intvalue = csv_start_date.getTime(); long csv_end_date_intvalue = csv_end_date.getTime(); if ((csv_end_date_intvalue <= sql_start_date_intvalue) || (csv_start_date_intvalue >= sql_start_date_intvalue)) { java.lang.String errmsg = java.lang.String.format(\"The time data does NOT overlap, SQL:[%s-%s], CSV data[%s-%s]\", sql_start_date.toString(), sql_end_date.toString(), csv_start_date.toString(), csv_end_date.toString()); throw new java.lang.IllegalArgumentException(errmsg); }else if ((csv_start_date_intvalue >= sql_start_date_intvalue) && (csv_end_date_intvalue <= sql_end_date_intvalue)) { }else { update_date_time_range_list = new java.util.ArrayList<java.util.Date[]>(); if ((csv_start_date_intvalue < sql_start_date_intvalue) && (csv_end_date_intvalue > sql_end_date_intvalue)) { update_date_time_range_list.add(new java.util.Date[]{ csv_start_date, sql_start_date }); update_date_time_range_list.add(new java.util.Date[]{ sql_end_date, csv_end_date }); }else if ((csv_start_date_intvalue < sql_start_date_intvalue) && (csv_end_date_intvalue >= sql_start_date_intvalue)) { update_date_time_range_list.add(new java.util.Date[]{ csv_start_date, sql_start_date }); update_date_time_range_list.add(new java.util.Date[]{ }); }else if ((csv_start_date_intvalue <= sql_end_date_intvalue) && (csv_end_date_intvalue > sql_end_date_intvalue)) { update_date_time_range_list.add(new java.util.Date[]{ }); update_date_time_range_list.add(new java.util.Date[]{ sql_end_date, csv_end_date }); }else { java.lang.String errmsg = java.lang.String.format(\"UnDefined overlapped condition, SQL:[%s-%s], CSV data[%s-%s]\", sql_start_date.toString(), sql_end_date.toString(), csv_start_date.toString(), csv_end_date.toString()); throw new java.lang.IllegalArgumentException(errmsg); } } } finally { com.price.finance_recorder_rest.persistence.HibernateUtil.closeConnection(session); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1833/buggy-version/finance_recorder_rest.src.main.java.com.price.finance_recorder_rest.persistence.MySQLDAO.java", "BodyUseAPI": ["com.price.finance_recorder_rest.common.CmnDef.FinanceMethod.value()", "java.util.List<java.sql.Timestamp>.get(int)", "java.util.Date.toString()", "java.util.List<java.lang.String>.get(int)", "com.price.finance_recorder_rest.persistence.MySQLDAO.get_entity_table_name(com.price.finance_recorder_rest.common.CmnDef.FinanceMethod)", "java.util.List<java.lang.String>.size()", "com.price.finance_recorder_rest.common.CmnDef.FinanceMethod.value()", "java.lang.String.format(java.lang.String,java.lang.Object)", "java.lang.String.split(java.lang.String)", "com.price.finance_recorder_rest.common.CmnDef.FinanceMethod.value()", "java.util.Date.toString()", "java.util.Date.toString()", "java.util.List<java.util.Date[]>.add(java.util.Date[])", "org.hibernate.Session.beginTransaction()", "java.text.SimpleDateFormat.parse(java.lang.String)", "java.util.Date.toString()", "java.lang.String.format(java.lang.String,com.price.finance_recorder_rest.common.CmnDef.FINANCE_METHOD_DESCRIPTION_LIST[finance_method.value()])", "java.util.Date.toString()", "java.util.Date.toString()", "java.lang.String.format(java.lang.String,java.lang.String,java.lang.Object,java.lang.String)", "java.util.List<java.lang.String>.get(int)", "java.lang.String.format(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)", "java.util.Date.getTime()", "java.util.List<java.sql.Timestamp>.isEmpty()", "com.price.finance_recorder_rest.persistence.HibernateUtil.openConnection()", "java.text.SimpleDateFormat.parse(java.lang.String)", "java.util.List<java.util.Date[]>.add(java.util.Date[])", "java.lang.String.format(java.lang.String,java.lang.String,java.lang.Object,java.lang.String)", "java.lang.String.format(java.lang.String,java.lang.Object)", "java.lang.String.format(java.lang.String,com.price.finance_recorder_rest.common.CmnDef.FINANCE_METHOD_DESCRIPTION_LIST[finance_method.value()])", "java.util.List<java.util.Date[]>.add(java.util.Date[])", "java.util.Date.getTime()", "java.util.Date.getTime()", "com.price.finance_recorder_rest.persistence.MySQLDAO.get_entity_table_name(com.price.finance_recorder_rest.common.CmnDef.FinanceMethod)", "com.price.finance_recorder_rest.persistence.MySQLDAO.get_entity_table_name(com.price.finance_recorder_rest.common.CmnDef.FinanceMethod)", "java.lang.String.split(java.lang.String)", "java.util.List<java.util.Date[]>.add(java.util.Date[])", "java.util.Date.toString()", "org.hibernate.Session.createNativeQuery(java.lang.String)", "session.createNativeQuery(native_hql_cmd).list()", "com.price.finance_recorder_rest.persistence.MySQLDAO.get_entity_table_name(com.price.finance_recorder_rest.common.CmnDef.FinanceMethod)", "java.util.List<java.util.Date[]>.add(java.util.Date[])", "org.hibernate.Session.createNativeQuery(java.lang.String)", "java.util.Date.getTime()", "session.createNativeQuery(native_hql_cmd).list()", "java.util.List<java.sql.Timestamp>.isEmpty()", "java.util.List<java.lang.String>.isEmpty()", "java.lang.String.format(java.lang.String,com.price.finance_recorder_rest.common.CmnDef.FINANCE_METHOD_DESCRIPTION_LIST[finance_method.value()])", "java.lang.String.format(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)", "java.util.List<java.util.Date[]>.add(java.util.Date[])", "java.util.List<java.sql.Timestamp>.get(int)", "java.util.Date.toString()"], "Fixed commit": "3a9c7ff9d4bd2fdad6b48c7f398646976d4d7299", "Url": "https://api.github.com/repos/Everett6802/finance_recorder", "Date": "2018-12-07T09:29:55Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { session = com.price.finance_recorder_rest.persistence.HibernateUtil.openConnection(); java.lang.String hql_cmd = java.lang.String.format(\"FROM %s WHERE username=:username\", com.price.finance_recorder_rest.persistence.UserEntity.class.getSimpleName()); org.hibernate.query.Query<com.price.finance_recorder_rest.persistence.UserEntity> query = session.createQuery(hql_cmd); query.setParameter(\"username\", username); result_list = query.getResultList(); } finally { com.price.finance_recorder_rest.persistence.HibernateUtil.closeConnection(session); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1833/buggy-version/finance_recorder_rest.src.main.java.com.price.finance_recorder_rest.persistence.MySQLDAO.java", "BodyUseAPI": ["org.hibernate.query.Query<com.price.finance_recorder_rest.persistence.UserEntity>.getResultList()", "java.lang.String.format(java.lang.String,java.lang.String)", "org.hibernate.Session.createQuery(java.lang.String)", "org.hibernate.query.Query<com.price.finance_recorder_rest.persistence.UserEntity>.setParameter(java.lang.String,java.lang.String)", "com.price.finance_recorder_rest.persistence.HibernateUtil.openConnection()", "java.lang.Class.getSimpleName()"], "Fixed commit": "3a9c7ff9d4bd2fdad6b48c7f398646976d4d7299", "Url": "https://api.github.com/repos/Everett6802/finance_recorder", "Date": "2018-12-07T09:29:55Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { session = com.price.finance_recorder_rest.persistence.HibernateUtil.openConnection(); org.hibernate.Transaction tx = session.beginTransaction(); session.delete(entity); tx.commit(); } finally { com.price.finance_recorder_rest.persistence.HibernateUtil.closeConnection(session); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1833/buggy-version/finance_recorder_rest.src.main.java.com.price.finance_recorder_rest.persistence.MySQLDAO.java", "BodyUseAPI": ["org.hibernate.Transaction.commit()", "org.hibernate.Session.delete(com.price.finance_recorder_rest.persistence.UserEntity)", "com.price.finance_recorder_rest.persistence.HibernateUtil.openConnection()", "org.hibernate.Session.beginTransaction()"], "Fixed commit": "3a9c7ff9d4bd2fdad6b48c7f398646976d4d7299", "Url": "https://api.github.com/repos/Everett6802/finance_recorder", "Date": "2018-12-07T09:29:55Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { session = com.price.finance_recorder_rest.persistence.HibernateUtil.openConnection(); org.hibernate.Transaction tx = session.beginTransaction(); session.update(entity); tx.commit(); } finally { com.price.finance_recorder_rest.persistence.HibernateUtil.closeConnection(session); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1833/buggy-version/finance_recorder_rest.src.main.java.com.price.finance_recorder_rest.persistence.MySQLDAO.java", "BodyUseAPI": ["org.hibernate.Session.update(com.price.finance_recorder_rest.persistence.UserEntity)", "org.hibernate.Transaction.commit()", "com.price.finance_recorder_rest.persistence.HibernateUtil.openConnection()", "org.hibernate.Session.beginTransaction()"], "Fixed commit": "3a9c7ff9d4bd2fdad6b48c7f398646976d4d7299", "Url": "https://api.github.com/repos/Everett6802/finance_recorder", "Date": "2018-12-07T09:29:55Z"},
{"Line": "=>610", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { session = com.price.finance_recorder_rest.persistence.HibernateUtil.openConnection(); java.lang.String hql_cmd = java.lang.String.format(\"SELECT COUNT(*) FROM %s\", com.price.finance_recorder_rest.persistence.MySQLDAO.get_entity_class_name(finance_method)); org.hibernate.query.Query<?> query = session.createQuery(hql_cmd); count = ((java.lang.Long) (query.uniqueResult())).intValue(); } finally { com.price.finance_recorder_rest.persistence.HibernateUtil.closeConnection(session); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1833/buggy-version/finance_recorder_rest.src.main.java.com.price.finance_recorder_rest.persistence.MySQLDAO.java", "BodyUseAPI": ["com.price.finance_recorder_rest.persistence.MySQLDAO.get_entity_class_name(com.price.finance_recorder_rest.common.CmnDef.FinanceMethod)", "org.hibernate.query.Query<?>.uniqueResult()", "java.lang.String.format(java.lang.String,java.lang.Object)", "org.hibernate.Session.createQuery(java.lang.String)", "com.price.finance_recorder_rest.persistence.HibernateUtil.openConnection()", "((java.lang.Long) (query.uniqueResult())).intValue()"], "Fixed commit": "3a9c7ff9d4bd2fdad6b48c7f398646976d4d7299", "Url": "https://api.github.com/repos/Everett6802/finance_recorder", "Date": "2018-12-07T09:29:55Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { session = com.price.finance_recorder_rest.persistence.HibernateUtil.openConnection(); org.hibernate.Transaction tx = session.beginTransaction(); int cnt = 0; for (java.lang.String data_line : data_line_list) { java.lang.Object entity = com.price.finance_recorder_rest.persistence.MySQLDAO.create_entity_object_from_string(finance_method, data_line); session.save(entity); if ((++cnt) == 20) { session.flush(); session.clear(); cnt = 0; } } tx.commit(); } finally { com.price.finance_recorder_rest.persistence.HibernateUtil.closeConnection(session); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1833/buggy-version/finance_recorder_rest.src.main.java.com.price.finance_recorder_rest.persistence.MySQLDAO.java", "BodyUseAPI": ["org.hibernate.Session.beginTransaction()", "com.price.finance_recorder_rest.persistence.MySQLDAO.create_entity_object_from_string(com.price.finance_recorder_rest.common.CmnDef.FinanceMethod,java.lang.String)", "org.hibernate.Session.save(java.lang.Object)", "org.hibernate.Session.flush()", "com.price.finance_recorder_rest.persistence.HibernateUtil.openConnection()", "org.hibernate.Transaction.commit()", "org.hibernate.Session.clear()"], "Fixed commit": "3a9c7ff9d4bd2fdad6b48c7f398646976d4d7299", "Url": "https://api.github.com/repos/Everett6802/finance_recorder", "Date": "2018-12-07T09:29:55Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.nio.file.Path p = java.nio.file.Paths.get((\"homework-3/upload/\" + (file.getName()))); java.nio.file.Files.createFile(p); java.io.BufferedWriter fileWriter = new java.io.BufferedWriter(new java.io.FileWriter(p.toString())); fileWriter.write(file.getContent()); fileWriter.flush(); fileWriter.close(); } catch (java.io.IOException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7562/buggy-version/homework-3.src.client.view.LoggedInWindow.java", "BodyUseAPI": ["java.io.BufferedWriter.write(file.getContent())", "shared.DownloadFileDTO.getContent()", "java.nio.file.Paths.get((\"homework-3/upload/\" + (file.getName())))", "java.io.BufferedWriter.flush()", "shared.DownloadFileDTO.getName()", "java.nio.file.Path.toString()", "java.nio.file.Files.createFile(java.nio.file.Path)", "java.io.BufferedWriter.close()"], "Fixed commit": "9280e77530d85f29d7026ca89441c854da3bd8a1", "Url": "https://api.github.com/repos/sharf91/netpro-jojo-sharf", "Date": "2018-12-02T15:50:33Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { server.checkActivityList(); } catch (java.lang.Exception ex) { java.lang.System.out.printf(\"Error on AFK check: {0}\", ex.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2764/buggy-version/src.core.entities.ServerManager.java", "BodyUseAPI": ["core.entities.Server.checkActivityList()"], "Fixed commit": "5439c01e127da2f8ebde5edc4a9020d05c869508", "Url": "https://api.github.com/repos/Implosions/PugBot", "Date": "2018-11-22T18:08:49Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { latch.await(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/9099/buggy-version/src.main.java.spark.GraphX.java", "BodyUseAPI": ["java.util.concurrent.CountDownLatch.await()"], "Fixed commit": "03a67e66b05494e6f4e7ddebc875140ee9518c3a", "Url": "https://api.github.com/repos/ganpengpeng/RDFDecomposition", "Date": "2018-11-19T13:00:49Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(4000); } catch (java.lang.InterruptedException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/4845/buggy-version/src.dropbox.UI.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "f6ce7cecb9bf9c99bf9e945be5aad7460a1c504d", "Url": "https://api.github.com/repos/Evilous10101/FinalProdject", "Date": "2018-12-06T00:51:53Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(1000); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1911/buggy-version/app.app.src.main.java.com.example.jerry.healemgood.view.careProviderActivities.CareProviderAddPatientActivity.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "d1504da0034288d54aae27cac3fa6101dc633fc8", "Url": "https://api.github.com/repos/CMPUT301F18T12/Name-Jeff", "Date": "2018-11-29T06:28:09Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.content.Intent intent = new android.content.Intent(android.provider.MediaStore.ACTION_IMAGE_CAPTURE); startActivityForResult(intent, com.ryma.bookapp.AddBook.AddBookButtonsFragment.CAMERA_PIC_REQUEST); } catch (java.lang.Exception ex) { android.util.Log.e(\"Camera failure: \", ex.getStackTrace().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/9714/buggy-version/BookApp.app.src.main.java.com.ryma.bookapp.AddBook.AddBookButtonsFragment.java", "BodyUseAPI": ["com.ryma.bookapp.AddBook.AddBookButtonsFragment.1.startActivityForResult(android.content.Intent,int)"], "Fixed commit": "1ceb4a2783064910ec2ef530025bee8ad8f23325", "Url": "https://api.github.com/repos/RyanMajorczyk/MobDevProject_18-19", "Date": "2018-11-07T19:50:06Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.widget.TextView tv = findViewById(R.id.latestUpdate); tv.setText(android.text.format.DateFormat.format(\"dd.MM.yyyy HH:mm\", lastUpdated).toString()); } catch (java.lang.Exception e) { e.printStackTrace(); setLatestUpdateTextView(timestamp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/3718/buggy-version/app.src.main.java.se.mdh.dva232.dva232currencyconverter2.MainActivity.java", "BodyUseAPI": ["se.mdh.dva232.dva232currencyconverter2.MainActivity.findViewById(R.id.latestUpdate)", "android.widget.TextView.setText(android.text.format.DateFormat.format(\"dd.MM.yyyy HH:mm\", lastUpdated).toString())", "android.text.format.DateFormat.format(java.lang.String,java.util.Calendar)", "android.text.format.DateFormat.format(\"dd.MM.yyyy HH:mm\", lastUpdated).toString()"], "Fixed commit": "9614f9e9df624d88cb9f42513c0355e94d4c7207", "Url": "https://api.github.com/repos/xenobius4slash/dva232_currency_converter_2", "Date": "2018-12-10T11:22:06Z"},
{"Line": "=>480", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Object devSupportManager = com.reactnativenavigation.utils.ReflectionUtils.getDeclaredField(getReactGateway().getReactInstanceManager(), \"mDevSupportManager\"); if ((com.reactnativenavigation.utils.ReflectionUtils.getDeclaredField(devSupportManager, \"mRedBoxDialog\")) != null) { com.reactnativenavigation.utils.ReflectionUtils.setField(devSupportManager, \"mRedBoxDialog\", null); } } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5813/buggy-version/android.app.src.main.java.com.reactnativenavigation.controllers.NavigationActivity.java", "BodyUseAPI": ["com.reactnativenavigation.react.ReactGateway.getReactInstanceManager()", "com.reactnativenavigation.utils.ReflectionUtils.getDeclaredField(java.lang.Object,java.lang.String)", "com.reactnativenavigation.controllers.NavigationActivity.1.getReactGateway()", "com.reactnativenavigation.utils.ReflectionUtils.getDeclaredField(getReactGateway().getReactInstanceManager(),java.lang.String)", "com.reactnativenavigation.utils.ReflectionUtils.setField(java.lang.Object,java.lang.String,<nulltype>)"], "Fixed commit": "6787a48318711ce7607eb8df1a041b6243078a94", "Url": "https://api.github.com/repos/qudianapp/qd-react-native-navigation", "Date": "2018-11-28T06:52:42Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { in.close(); } catch (java.lang.Throwable e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2256/buggy-version/compile.src.main.java.ibis.compile.ASMWrapper.java", "BodyUseAPI": ["java.io.InputStream.close()"], "Fixed commit": "5216f5d05363db875101e07cd46acb9a58cce3fd", "Url": "https://api.github.com/repos/JungleComputing/ipl", "Date": "2018-11-28T09:04:35Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return new java.io.File(gearth.Main.class.getProtectionDomain().getCodeSource().getLocation().toURI()).getParent(); } catch (java.net.URISyntaxException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/9342/buggy-version/G-Earth.src.main.java.gearth.misc.Cacher.java", "BodyUseAPI": ["java.lang.Class.getProtectionDomain()", "java.io.File.getParent()", "java.security.CodeSource.getLocation()", "java.security.ProtectionDomain.getCodeSource()", "java.net.URL.toURI()"], "Fixed commit": "3dc77492c0fd747dd0e3df7cbd3d389fb5db14f3", "Url": "https://api.github.com/repos/sirjonasxx/G-Earth", "Date": "2018-11-07T16:20:30Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return new java.io.File(path).getCanonicalPath(); } catch (java.io.IOException e) { org.apache.kylin.storage.hbase.util.ZookeeperDistributedLock.logger.error(\"get canonical path failed, use original path\", e); return path; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5981/buggy-version/storage-hbase.src.main.java.org.apache.kylin.storage.hbase.util.ZookeeperDistributedLock.java", "BodyUseAPI": ["java.io.File.getCanonicalPath()"], "Fixed commit": "b31385f8e53d49ad68b5030769c1611a8a64ae9c", "Url": "https://api.github.com/repos/mahak/kylin", "Date": "2018-12-20T12:51:05Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(1000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/8224/buggy-version/app.src.main.java.com.tapanime.tapanime.Loading.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "8408c3823d77ee8be8ac24edbb718374a36c6c0e", "Url": "https://api.github.com/repos/Kira060200/TapAnime", "Date": "2018-11-11T12:44:17Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { instate = new domain.State(n, listNodes); } catch (java.lang.NullPointerException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/424/buggy-version/src.domain.TSFReader.java", "BodyUseAPI": [], "Fixed commit": "cf21a406b911d68e6bcfccc0dfcbbbfada60a901", "Url": "https://api.github.com/repos/A1-04/towngraph", "Date": "2018-11-08T18:54:49Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.bukkit.Location l = new org.bukkit.Location(org.bukkit.Bukkit.getServer().getWorld(world), erster, zweiter, dritter); p.teleport(l); } catch (java.lang.IllegalArgumentException ex) { mess.toPlayer(p, \"Das Schild befindet sich in einer nicht existierenden Welt\", Messages.ERROR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1429/buggy-version/Signs.src.fex.signs.signs.Main.java", "BodyUseAPI": ["org.bukkit.Bukkit.getServer()", "org.bukkit.Bukkit.getServer().getWorld(java.lang.String)", "org.bukkit.entity.Player.teleport(org.bukkit.Location)"], "Fixed commit": "ed569213a68dc7211f6febfa9a07148863fc0d60", "Url": "https://api.github.com/repos/fex594/signs", "Date": "2018-12-25T23:16:56Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { accountLedgerService.rollbackTransactions(block.getTxs()); contractService.rollbackTransactionList(block.getTxs()); } catch (java.lang.Exception e) { io.nuls.core.tools.log.Log.warn(\"rollbackTransaction local tx failed\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/3759/buggy-version/protocol-module.base.protocol-base.src.main.java.io.nuls.protocol.base.service.BlockServiceImpl.java", "BodyUseAPI": ["io.nuls.account.ledger.service.AccountLedgerService.rollbackTransactions(block.getTxs())", "io.nuls.protocol.base.service.Block.getTxs()", "io.nuls.contract.service.ContractService.rollbackTransactionList(block.getTxs())", "io.nuls.protocol.base.service.Block.getTxs()"], "Fixed commit": "7f7e8d638894833c914ea7905915585a5a04798f", "Url": "https://api.github.com/repos/nuls-io/nuls", "Date": "2018-11-16T06:41:06Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { new org.codice.solr.factory.impl.HttpSolrClientFactory().makeRealClient().ping(); } catch (java.lang.Exception e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/9691/buggy-version/platform.solr.solr-factory-impl.src.main.java.org.codice.solr.factory.impl.SolrClientFactoryImpl.java", "BodyUseAPI": ["new org.codice.solr.factory.impl.HttpSolrClientFactory().makeRealClient().ping()", "org.codice.solr.factory.impl.HttpSolrClientFactory.makeRealClient()"], "Fixed commit": "065dc00cb88a369997c5827f37c6609442ffe0c6", "Url": "https://api.github.com/repos/tbatie/ddf", "Date": "2018-11-30T03:30:57Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { book.toString(); } catch (java.lang.NullPointerException e) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/3850/buggy-version/src.main.java.org.crosswire.jsword.book.BookSet.java", "BodyUseAPI": ["org.crosswire.jsword.book.Book.toString()"], "Fixed commit": "7cb86de11cde4944adb8a9d0c165a6ce89fed7d1", "Url": "https://api.github.com/repos/AndBible/jsword", "Date": "2018-11-21T11:42:24Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { battleship.sleep(2000); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/543/buggy-version/Java.Exercise_2.battleship.java", "BodyUseAPI": ["battleship.sleep(int)"], "Fixed commit": "2e38b12af2381b647976186385cc3815777588a5", "Url": "https://api.github.com/repos/joanlamrack/programming-note-sheets-gists", "Date": "2018-12-12T16:22:06Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { int off = layout.getOffsetForHorizontal(line, x); if ((x < (layout.getLineLeft(line))) || (x > (layout.getLineRight(line)))) { off = -1; } com.qmuiteam.qmui.link.ITouchableSpan[] link = spannable.getSpans(off, off, com.qmuiteam.qmui.link.ITouchableSpan.class); com.qmuiteam.qmui.link.ITouchableSpan touchedSpan = null; if ((link.length) > 0) { touchedSpan = link[0]; } return touchedSpan; } catch (java.lang.IndexOutOfBoundsException e) { if (com.qmuiteam.qmui.BuildConfig.DEBUG) { android.util.Log.d(this.toString(), \"getPressedSpan\", e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2917/buggy-version/qmui.src.main.java.com.qmuiteam.qmui.link.QMUILinkTouchDecorHelper.java", "BodyUseAPI": ["android.text.Layout.getOffsetForHorizontal(int,int)", "android.text.Layout.getLineLeft(int)", "android.text.Layout.getLineRight(int)", "android.text.Spannable.getSpans(int,int,java.lang.Class)"], "Fixed commit": "294b9c7bfa9e7672aba6de2e7f677bdfe417ba70", "Url": "https://api.github.com/repos/Tencent/QMUI_Android", "Date": "2018-12-12T03:52:12Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mLocationManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, aut.bme.hu.friendsplus.services.TrackingService.LOCATION_INTERVAL, aut.bme.hu.friendsplus.services.TrackingService.LOCATION_DISTANCE, mLocationListeners[1]); } catch (java.lang.SecurityException ex) { android.util.Log.i(aut.bme.hu.friendsplus.services.TrackingService.TAG, \"fail to request location update, ignore\", ex); } catch (java.lang.IllegalArgumentException ex) { android.util.Log.d(aut.bme.hu.friendsplus.services.TrackingService.TAG, (\"network provider does not exist, \" + (ex.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/307/buggy-version/app.src.main.java.aut.bme.hu.friendsplus.services.TrackingService.java", "BodyUseAPI": ["android.location.LocationManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER,int,float,aut.bme.hu.friendsplus.services.TrackingService.LocationListener)"], "Fixed commit": "235b485dfbd80cdc3300a86f19f296990395df76", "Url": "https://api.github.com/repos/vivienkamen/friendsplus", "Date": "2018-12-07T23:20:57Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Integer.parseInt(stepString); } catch (java.lang.Exception e) { inst.put(\"step\", stepString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/6662/buggy-version/app.src.main.java.com.example.chenrui.easycook.Utils.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "bd9eac302f59f7ccdc912a260a9639c853d5a5da", "Url": "https://api.github.com/repos/developerChenRui/EasyCook", "Date": "2018-12-07T02:45:50Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { DataBaseConnection.stmt = DataBaseConnection.conn.prepareCall(string); return ((java.sql.CallableStatement) (DataBaseConnection.stmt)); } catch (java.sql.SQLException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/9360/buggy-version/Project.src.DataBaseConnection.java", "BodyUseAPI": ["java.sql.Connection.prepareCall(java.lang.String)"], "Fixed commit": "094b1ab8242872814d38383261d76cd26e0c43f4", "Url": "https://api.github.com/repos/andreaeu/CS157AGroup8", "Date": "2018-12-06T06:10:25Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { line = reader.readLine(); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/8035/buggy-version/game1.javaCode.Gui.java", "BodyUseAPI": ["java.io.BufferedReader.readLine()"], "Fixed commit": "1579ef111b4bbc9a78d2aec097649d0888bbf879", "Url": "https://api.github.com/repos/cbarth15/lhs", "Date": "2018-11-19T05:22:58Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { line = reader.readLine(); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/8035/buggy-version/game1.javaCode.Gui.java", "BodyUseAPI": ["java.io.BufferedReader.readLine()"], "Fixed commit": "1579ef111b4bbc9a78d2aec097649d0888bbf879", "Url": "https://api.github.com/repos/cbarth15/lhs", "Date": "2018-11-19T05:22:58Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.support.v7.graphics.Palette generate = android.support.v7.graphics.Palette.from(bitmap).generate(); observer.onNext(generate); } catch (java.lang.Exception e) { observer.onError(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3232/buggy-version/app.src.main.java.com.blockchain.store.playmarket.utilities.FrescoUtils.java", "BodyUseAPI": ["android.support.v7.graphics.Palette.from(bitmap).generate()", "android.support.v7.graphics.Palette.from(android.graphics.Bitmap)", "io.reactivex.Observer<? super android.support.v7.graphics.Palette>.onNext(android.support.v7.graphics.Palette)"], "Fixed commit": "772541d0a99ede4a4fe71be812f745f9f66f1cac", "Url": "https://api.github.com/repos/CryptonStudio/PlayMarket-2.0-App", "Date": "2018-12-08T15:38:16Z"},
{"Line": "=>1271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { formatTypeFolders = com.xtkong.dao.hbase.HBaseFormatNodeDao.getFormatTypeFolders(cs_id, sourceDataId, formatTypeMap); } catch (java.lang.Exception e) { com.xtkong.controller.user.SourceDataController.logger.error(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/1884/buggy-version/src.main.java.com.xtkong.controller.user.SourceDataController.java", "BodyUseAPI": ["com.xtkong.dao.hbase.HBaseFormatNodeDao.getFormatTypeFolders(java.lang.String,java.lang.String,java.util.HashMap<java.lang.String, com.xtkong.model.FormatType>)"], "Fixed commit": "56c9533be2f83de2fc115ad0a3732a4fa081ca6e", "Url": "https://api.github.com/repos/Mlove9527/wankanyuan", "Date": "2018-11-21T14:45:37Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { registerEvents(); } catch (java.lang.NoSuchFieldError e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/8129/buggy-version/src.main.java.com.griefcraft.lwc.LWCPlugin.java", "BodyUseAPI": ["com.griefcraft.lwc.LWCPlugin.registerEvents()"], "Fixed commit": "48da505ef5785a5418dd96edf9f645a031a609c5", "Url": "https://api.github.com/repos/Brokkonaut/LWCEntityLocking", "Date": "2011-09-07T01:44:47Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { database = new Database(data); } catch (java.io.IOException e) { java.lang.System.out.println(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/6328/buggy-version/src.ATM.java", "BodyUseAPI": [], "Fixed commit": "73f114bbdb47897df2e339a5540f6a88388798e7", "Url": "https://api.github.com/repos/tegenton/pset-5", "Date": "2018-11-30T00:30:32Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { pushDHT(root.getIp(), java.lang.Integer.valueOf(root.getPort())); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/8529/buggy-version/src.dht.rush.CentralServer.java", "BodyUseAPI": ["dht.rush.clusters.Cluster.getPort()", "dht.rush.clusters.Cluster.getIp()", "java.lang.Integer.valueOf(root.getPort())", "dht.rush.CentralServer.pushDHT(root.getIp(),java.lang.Integer)"], "Fixed commit": "e4458ba6704dfafb4d0331a34abf8cc7a3893009", "Url": "https://api.github.com/repos/yfliu92/cs6343TeamProject", "Date": "2018-11-19T19:11:22Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { messageBody = jdbcTemplate.queryForObject(sql, org.forum.api.dto.MessageBody.class, id); } catch (org.springframework.dao.DataAccessException dataAccessException) { throw new org.forum.api.exception.DataNotFoundException(org.forum.api.commons.ErrorUtility.getDataNotFoundExceptionMessage(id)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/4836/buggy-version/src.main.java.org.forum.api.jdbc.dao.MessageDAOImpl.java", "BodyUseAPI": ["org.springframework.jdbc.core.JdbcTemplate.queryForObject(java.lang.String,java.lang.Class,java.lang.Long)"], "Fixed commit": "3a208272d363d8699bf3cd58e06427bb8ecc0b33", "Url": "https://api.github.com/repos/muradbax/forum-rest-api", "Date": "2018-04-14T19:27:54Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return org.apache.xerces.impl.XMLEntityManager.expandSystemId(systemId, baseLocation, false); } catch (org.apache.xerces.util.URI.MalformedURIException e) { return systemId; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/4565/buggy-version/org.eclipse.lsp4xml.src.main.java.org.eclipse.lsp4xml.uriresolver.URIResolverExtensionManager.java", "BodyUseAPI": ["org.apache.xerces.impl.XMLEntityManager.expandSystemId(java.lang.String,java.lang.String,boolean)"], "Fixed commit": "cf6417fa99bc427441fbe7e608653f829ada6d7d", "Url": "https://api.github.com/repos/angelozerr/lsp4xml", "Date": "2018-11-02T11:02:51Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { tableCards.add(playerHand.get(correctedPlayCardNr)); playerHand.remove(correctedPlayCardNr); } catch (java.lang.Exception e) { java.lang.System.out.println(\"That card does not exist\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5536/buggy-version/src.main.java.models.Player.java", "BodyUseAPI": ["java.util.ArrayList<models.Card>.get(int)", "java.util.ArrayList<models.Card>.remove(int)", "java.util.ArrayList<models.Card>.add(playerHand.get(correctedPlayCardNr))"], "Fixed commit": "89733ad7de4de45ff3a496b074ed9272230e8a0d", "Url": "https://api.github.com/repos/mohammedalmahfoodh/group3", "Date": "2018-11-03T16:24:49Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { material = org.bukkit.Material.matchMaterial(materialStr.toUpperCase()); if (material == null) { material = org.bukkit.Material.matchMaterial(materialStr, true); if (material != null) { com.Ben12345rocks.AdvancedCore.AdvancedCoreHook.getInstance().getPlugin().getLogger().warning(((\"Found legacy material name: \" + materialStr) + \", please update this to prevent this message\")); } } } catch (java.lang.NoSuchMethodError e) { material = org.bukkit.Material.valueOf(materialStr.toUpperCase()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5754/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Util.Item.ItemBuilder.java", "BodyUseAPI": ["org.bukkit.Material.matchMaterial(java.lang.String,boolean)", "com.Ben12345rocks.AdvancedCore.AdvancedCoreHook.getInstance().getPlugin()", "java.lang.String.toUpperCase()", "com.Ben12345rocks.AdvancedCore.AdvancedCoreHook.getInstance().getPlugin().getLogger().warning(java.lang.String)", "com.Ben12345rocks.AdvancedCore.AdvancedCoreHook.getInstance()", "org.bukkit.Material.matchMaterial(java.lang.String)", "com.Ben12345rocks.AdvancedCore.AdvancedCoreHook.getInstance().getPlugin().getLogger()"], "Fixed commit": "74a4f31eb684f17551cc2824bf2ebddf305bb55f", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2018-11-12T21:50:30Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { localDateTime = java.time.LocalDateTime.parse(token, temporalColumnFormatters.get(i)); instant = localDateTime.toInstant(java.time.ZoneOffset.UTC); } catch (java.time.format.DateTimeParseException ex) { instant = java.time.Instant.parse(token); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3359/buggy-version/src.main.java.gov.ornl.datatable.IOUtilities.java", "BodyUseAPI": ["java.time.LocalDateTime.parse(java.lang.String,java.time.format.DateTimeFormatter)", "java.util.ArrayList<java.time.format.DateTimeFormatter>.get(int)", "java.time.LocalDateTime.toInstant(java.time.ZoneOffset)"], "Fixed commit": "eb50127ca48a61881621de31f83e3e650d33569b", "Url": "https://api.github.com/repos/ORNL/CrossVis", "Date": "2018-12-12T18:45:04Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { obj = ((canto.runtime.ResolvedArray) (obj)).getCollectionObject(); } catch (canto.runtime.Redirection r) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/212/buggy-version/src.canto.runtime.CantoObjectWrapper.java", "BodyUseAPI": ["java.lang.Object.getCollectionObject()"], "Fixed commit": "2d00e07f70c07161e606ceb7d1c95edf1f7c9e24", "Url": "https://api.github.com/repos/CantoLang/canto", "Date": "2018-12-31T16:57:43Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { executor.awaitTermination(30, java.util.concurrent.TimeUnit.SECONDS); } catch (java.lang.InterruptedException e) { java.lang.System.out.println(\"Customer died\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7839/buggy-version/src.main.java.Benchmark.Benchmark.java", "BodyUseAPI": ["java.util.concurrent.ExecutorService.awaitTermination(int,java.util.concurrent.TimeUnit)"], "Fixed commit": "637772ab15eacf6e4f9321b7fb7af755d9f88666", "Url": "https://api.github.com/repos/jsantos4/ConcurrentHashTable", "Date": "2018-11-16T21:38:37Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { executor.awaitTermination(30, java.util.concurrent.TimeUnit.SECONDS); } catch (java.lang.InterruptedException e) { java.lang.System.out.println(\"Vendor died\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7839/buggy-version/src.main.java.Benchmark.Benchmark.java", "BodyUseAPI": ["java.util.concurrent.ExecutorService.awaitTermination(int,java.util.concurrent.TimeUnit)"], "Fixed commit": "637772ab15eacf6e4f9321b7fb7af755d9f88666", "Url": "https://api.github.com/repos/jsantos4/ConcurrentHashTable", "Date": "2018-11-16T21:38:37Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { sendEcho(\"jaaaaaaaaaaaaaaaaaa\"); } catch (java.io.IOException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7702/buggy-version/src.main.java.edu.hm.dako.chat.server.SimpleChatWorkerThreadImpl.java", "BodyUseAPI": ["edu.hm.dako.chat.server.SimpleChatWorkerThreadImpl.sendEcho(java.lang.String)"], "Fixed commit": "da623471589f5a0d035fbbe5e7c7bb10d638e3f6", "Url": "https://api.github.com/repos/jujoha/DAKO", "Date": "2018-11-22T10:10:05Z"},
{"Line": "=>779", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { eu.faircode.email.Helper.connect(this, istore, account); } catch (java.lang.Throwable ex) { if ((account.last_connected) != null) { eu.faircode.email.EntityLog.log(this, (((account.name) + \" last connected: \") + (new java.util.Date(account.last_connected)))); long now = new java.util.Date().getTime(); if ((now - (account.last_connected)) > (((eu.faircode.email.ServiceSynchronize.ACCOUNT_ERROR_AFTER) * 60) * 1000L)) { android.app.NotificationManager nm = getSystemService(android.app.NotificationManager.class); nm.notify(\"receive\", account.id.intValue(), getNotificationError(account.name, ex).build()); } } throw ex; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7465/buggy-version/app.src.main.java.eu.faircode.email.ServiceSynchronize.java", "BodyUseAPI": ["eu.faircode.email.Helper.connect(eu.faircode.email.ServiceSynchronize,com.sun.mail.imap.IMAPStore,eu.faircode.email.EntityAccount)"], "Fixed commit": "6c6dcca0aceedad882e7f780bf621e709d0c30af", "Url": "https://api.github.com/repos/SantiagoPintos/Email", "Date": "2018-11-22T07:57:14Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(5000); } catch (java.lang.InterruptedException ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/1160/buggy-version/component.src.main.java.org.wso2.extension.siddhi.io.tcp.transport.TCPNettyClient.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "ea904c54919450e7c51afcbb5d3c317050ce068d", "Url": "https://api.github.com/repos/sinthuja/siddhi-io-tcp", "Date": "2018-11-28T06:56:34Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { count += dataSourceGroupMapper.insertDatasourceDatasourcegroupByIdDataSet(postRequest.getIdDatasourceGroup(), dataSourceGroup.getDatasourcegroupversion(), dataSourceRequest.getDatasourceversion(), dataSourceRequest.getIdDataset()); } catch (org.springframework.dao.DuplicateKeyException e) { org.csi.yucca.adminapi.service.impl.DatasetServiceImpl.logger.warn((((((\"[DatasetServiceImpl::insertDatasourcesToDatasourcegroupByIdDataset] dataset already in group - idDataset \" + (dataSourceRequest.getIdDataset())) + \" version: \") + (dataSourceRequest.getDatasourceversion())) + \" datasourcegroup: \") + (dataSourceGroup.getDatasourcegroupversion()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5831/buggy-version/admin-api.src.main.java.org.csi.yucca.adminapi.service.impl.DatasetServiceImpl.java", "BodyUseAPI": ["org.csi.yucca.adminapi.mapper.DataSourceGroupMapper.insertDatasourceDatasourcegroupByIdDataSet(postRequest.getIdDatasourceGroup(),dataSourceGroup.getDatasourcegroupversion(),dataSourceRequest.getDatasourceversion(),dataSourceRequest.getIdDataset())", "org.csi.yucca.adminapi.model.DataSourceGroup.getDatasourcegroupversion()", "org.csi.yucca.adminapi.request.DataSourceRequest.getIdDataset()", "org.csi.yucca.adminapi.request.DataSourceRequest.getDatasourceversion()", "org.csi.yucca.adminapi.request.DatasourcegroupDatasourceRequest.getIdDatasourceGroup()"], "Fixed commit": "0124e6815a27fa7b1566f5249bec0f63488ed136", "Url": "https://api.github.com/repos/csipiemonte/yucca-dataservice", "Date": "2018-12-17T09:17:21Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { new org.codice.solr.factory.impl.HttpSolrClientFactory().makeRealClient().ping(); } catch (java.lang.Exception e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/514/buggy-version/platform.solr.solr-factory-impl.src.main.java.org.codice.solr.factory.impl.SolrClientFactoryImpl.java", "BodyUseAPI": ["new org.codice.solr.factory.impl.HttpSolrClientFactory().makeRealClient().ping()", "org.codice.solr.factory.impl.HttpSolrClientFactory.makeRealClient()"], "Fixed commit": "7d98818d5f4854ae34e228cb7a4e08ae3e1d67d7", "Url": "https://api.github.com/repos/tbatie/ddf", "Date": "2018-11-30T03:30:57Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return org.apache.xerces.impl.XMLEntityManager.expandSystemId(systemId, baseLocation, false); } catch (org.apache.xerces.util.URI.MalformedURIException e) { return systemId; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/404/buggy-version/org.eclipse.lsp4xml.src.main.java.org.eclipse.lsp4xml.uriresolver.URIResolverExtensionManager.java", "BodyUseAPI": ["org.apache.xerces.impl.XMLEntityManager.expandSystemId(java.lang.String,java.lang.String,boolean)"], "Fixed commit": "896776438519fcdf91a51c600cebc0f582799e2d", "Url": "https://api.github.com/repos/angelozerr/lsp4xml", "Date": "2018-11-02T11:02:51Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { javax.servlet.ServletOutputStream out = resp.getOutputStream(); out.write(\"hello heroku\".getBytes()); out.flush(); out.close(); } catch (java.net.UnknownHostException uhex) { java.lang.System.out.println(\"Servlet exception\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/6525/buggy-version/src.main.java.servlet.HelloServlet.java", "BodyUseAPI": ["java.lang.String.getBytes()", "javax.servlet.ServletOutputStream.flush()", "javax.servlet.ServletOutputStream.write(byte[])", "javax.servlet.ServletOutputStream.close()", "javax.servlet.http.HttpServletResponse.getOutputStream()"], "Fixed commit": "b7623917868a8a4cffb27afdb7b8c0044dc5c6f6", "Url": "https://api.github.com/repos/alejandroVeRod/AvengersLiveUpdated", "Date": "2018-12-13T23:34:04Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { trigger.MessageDeleted(event); } catch (net.dv8tion.jda.core.exceptions.ErrorResponseException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/348/buggy-version/src.main.java.com.darkzek.ChickenBot.CommandManager.java", "BodyUseAPI": ["com.darkzek.ChickenBot.Trigger.MessageDeleted(net.dv8tion.jda.core.events.message.MessageDeleteEvent)"], "Fixed commit": "9bc79500def4513226119099b129314e53e084b2", "Url": "https://api.github.com/repos/DarkZek/ChickenBot", "Date": "2018-11-12T03:40:56Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { unknownCommand(event); } catch (net.dv8tion.jda.core.exceptions.ErrorResponseException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/348/buggy-version/src.main.java.com.darkzek.ChickenBot.CommandManager.java", "BodyUseAPI": ["com.darkzek.ChickenBot.CommandManager.unknownCommand(net.dv8tion.jda.core.events.message.MessageReceivedEvent)"], "Fixed commit": "9bc79500def4513226119099b129314e53e084b2", "Url": "https://api.github.com/repos/DarkZek/ChickenBot", "Date": "2018-11-12T03:40:56Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { trigger.MessageRecieved(commandRecievedEvent); } catch (net.dv8tion.jda.core.exceptions.ErrorResponseException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/348/buggy-version/src.main.java.com.darkzek.ChickenBot.CommandManager.java", "BodyUseAPI": ["com.darkzek.ChickenBot.Trigger.MessageRecieved(com.darkzek.ChickenBot.Events.CommandRecievedEvent)"], "Fixed commit": "9bc79500def4513226119099b129314e53e084b2", "Url": "https://api.github.com/repos/DarkZek/ChickenBot", "Date": "2018-11-12T03:40:56Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { trigger.Emote(event); } catch (net.dv8tion.jda.core.exceptions.ErrorResponseException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/348/buggy-version/src.main.java.com.darkzek.ChickenBot.CommandManager.java", "BodyUseAPI": ["com.darkzek.ChickenBot.Trigger.Emote(net.dv8tion.jda.core.events.message.react.MessageReactionAddEvent)"], "Fixed commit": "9bc79500def4513226119099b129314e53e084b2", "Url": "https://api.github.com/repos/DarkZek/ChickenBot", "Date": "2018-11-12T03:40:56Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { tinyDB.putListCurrency(io.edgedev.crypex.EtherFragment.ETHER_KEY, list); } catch (java.lang.Exception e) { android.util.Log.e(io.edgedev.crypex.EtherFragment.TAG, e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5097/buggy-version/app.src.main.java.io.edgedev.crypex.EtherFragment.java", "BodyUseAPI": ["io.edgedev.crypex.TinyDB.putListCurrency(java.lang.String,java.util.List<io.edgedev.crypex.Currency>)"], "Fixed commit": "4117f956b1b3634b280345fb3006b949e8a52194", "Url": "https://api.github.com/repos/Edge-Developer/CrypEx", "Date": "2018-11-28T09:31:38Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { tinyDB.putListCurrency(io.edgedev.crypex.BitcoinFragment.BTC_KEY, list); } catch (java.lang.Exception e) { android.util.Log.e(io.edgedev.crypex.BitcoinFragment.TAG, e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5097/buggy-version/app.src.main.java.io.edgedev.crypex.BitcoinFragment.java", "BodyUseAPI": ["io.edgedev.crypex.TinyDB.putListCurrency(java.lang.String,java.util.List<io.edgedev.crypex.Currency>)"], "Fixed commit": "4117f956b1b3634b280345fb3006b949e8a52194", "Url": "https://api.github.com/repos/Edge-Developer/CrypEx", "Date": "2018-11-28T09:31:38Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { validatorChanging = true; ru.runa.gpd.validation.ValidatorConfig config = ((ru.runa.gpd.validation.ValidatorConfig) (((org.eclipse.jface.viewers.IStructuredSelection) (validatorsTableViewer.getSelection())).getFirstElement())); deleteButton.setEnabled((config != null)); infoGroup.setConfig(ValidatorConfig.GLOBAL_FIELD_ID, globalDefinition, config); } finally { validatorChanging = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3007/buggy-version/plugins.ru.runa.gpd.src.ru.runa.gpd.ui.wizard.GlobalValidatorsWizardPage.java", "BodyUseAPI": ["((org.eclipse.jface.viewers.IStructuredSelection) (validatorsTableViewer.getSelection())).getFirstElement()", "org.eclipse.jface.viewers.TableViewer.getSelection()", "org.eclipse.swt.widgets.Button.setEnabled((config != null))", "ru.runa.gpd.ui.wizard.ValidatorWizard.ValidatorInfoControl.setConfig(ValidatorConfig.GLOBAL_FIELD_ID,ru.runa.gpd.validation.ValidatorDefinition,ru.runa.gpd.validation.ValidatorConfig)"], "Fixed commit": "5aefd9c76b6d8cd99ce546040c18a1a1391a089f", "Url": "https://api.github.com/repos/processtech/runawfe-free-devstudio", "Date": "2018-11-12T15:13:55Z"},
{"Line": "=>826", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mCamera.autoFocus(new android.hardware.Camera.AutoFocusCallback() { @java.lang.Override public void onAutoFocus(boolean success, android.hardware.Camera camera) { mCameraCallbacks.dispatchOnFocusEnd(gesture, success, p); mHandler.get().removeCallbacks(mPostFocusResetRunnable); mHandler.get().postDelayed(mPostFocusResetRunnable, mPostFocusResetDelay); } }); } catch (java.lang.RuntimeException e) { com.otaliastudios.cameraview.Camera1.LOG.e(\"startAutoFocus:\", \"Error calling autoFocus\", e); mCameraCallbacks.dispatchOnFocusEnd(gesture, false, p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/1730/buggy-version/cameraview.src.main.java.com.otaliastudios.cameraview.Camera1.java", "BodyUseAPI": ["mHandler.get().postDelayed(java.lang.Runnable,int)", "1.get()", "1.dispatchOnFocusEnd(com.otaliastudios.cameraview.Gesture,boolean,android.graphics.PointF)", "mHandler.get().removeCallbacks(java.lang.Runnable)", "android.hardware.Camera.autoFocus(android.hardware.Camera.AutoFocusCallback)", "1.get()"], "Fixed commit": "c7cb7fdd53a4e9b3ba75018dcd8022a38e0053b2", "Url": "https://api.github.com/repos/dawuzi/CameraView", "Date": "2018-12-27T09:16:09Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { MainApplication.signedPublicKey.save(os); java.lang.String serializedKey = MainApplication.mapper.writeValueAsString(new com.github.ltat_06_007_project.NetworkMessage.PublicKeyShare(os.toByteArray(), com.github.ltat_06_007_project.MainApplication.userIdCode)); byte[] packetBytes = MainApplication.mapper.writeValueAsBytes(new com.github.ltat_06_007_project.NetworkMessage.NetworkMessageWrapper(2, serializedKey)); advertisePacket(socket, 60000, packetBytes); } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/6120/buggy-version/src.main.java.com.github.ltat_06_007_project.Controllers.NetworkNodeController.java", "BodyUseAPI": ["MainApplication.signedPublicKey.save(java.io.ByteArrayOutputStream)", "MainApplication.mapper.writeValueAsBytes(com.github.ltat_06_007_project.NetworkMessage.NetworkMessageWrapper)", "com.github.ltat_06_007_project.Controllers.NetworkNodeController.advertisePacket(java.net.DatagramSocket,int,byte[])", "MainApplication.mapper.writeValueAsString(com.github.ltat_06_007_project.NetworkMessage.PublicKeyShare)", "java.io.ByteArrayOutputStream.toByteArray()"], "Fixed commit": "b4377ba65b507e1301e91f894e5e5a5141b99fb1", "Url": "https://api.github.com/repos/andrew-lei/LTAT.06.007-Project", "Date": "2018-11-21T17:57:20Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { sums[i] = ArrayMethods.rowSum(ary, i); } catch (java.lang.IndexOutOfBoundsException e) { sums[i] = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2073/buggy-version/ArrayMethods.java", "BodyUseAPI": ["ArrayMethods.rowSum(int[][],int)"], "Fixed commit": "e7109e1d48b51475b77785fc5fc9a1570903419e", "Url": "https://api.github.com/repos/snichol00/MKS21X-2darraymethods", "Date": "2018-11-06T22:09:09Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { sums[idx] = ArrayMethods.columnSum(ary, idx); } catch (java.lang.IndexOutOfBoundsException e) { sums[idx] = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2073/buggy-version/ArrayMethods.java", "BodyUseAPI": ["ArrayMethods.columnSum(int[][],int)"], "Fixed commit": "e7109e1d48b51475b77785fc5fc9a1570903419e", "Url": "https://api.github.com/repos/snichol00/MKS21X-2darraymethods", "Date": "2018-11-06T22:09:09Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { sum += ary[i][x]; } catch (java.lang.IndexOutOfBoundsException e) { sum += 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2073/buggy-version/ArrayMethods.java", "BodyUseAPI": [], "Fixed commit": "e7109e1d48b51475b77785fc5fc9a1570903419e", "Url": "https://api.github.com/repos/snichol00/MKS21X-2darraymethods", "Date": "2018-11-06T22:09:09Z"},
{"Line": "=>7", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { for (int i = 0; i < (ary[x].length); i++) { sum += ary[x][i]; } } catch (java.lang.IndexOutOfBoundsException e) { sum += 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2073/buggy-version/ArrayMethods.java", "BodyUseAPI": [], "Fixed commit": "e7109e1d48b51475b77785fc5fc9a1570903419e", "Url": "https://api.github.com/repos/snichol00/MKS21X-2darraymethods", "Date": "2018-11-06T22:09:09Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { object.put(SensorDataCons.INSTANCE.getTAG_TRANSFER_TARGET_CURRENCY_NUMBER(), org.nervos.neuron.util.NumberUtil.getDecimal8ENotation(java.lang.Double.parseDouble(value))); } catch (java.lang.Exception e) { object.put(SensorDataCons.INSTANCE.getTAG_TRANSFER_TARGET_CURRENCY_NUMBER(), \"0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/4746/buggy-version/app.src.main.java.org.nervos.neuron.util.sensor.SensorDataTrackUtils.java", "BodyUseAPI": ["org.json.JSONObject.put(SensorDataCons.INSTANCE.getTAG_TRANSFER_TARGET_CURRENCY_NUMBER(),org.nervos.neuron.util.NumberUtil.getDecimal8ENotation(java.lang.Double.parseDouble(value)))", "org.nervos.neuron.util.NumberUtil.getDecimal8ENotation(double)", "java.lang.Double.parseDouble(java.lang.String)", "SensorDataCons.INSTANCE.getTAG_TRANSFER_TARGET_CURRENCY_NUMBER()"], "Fixed commit": "21e27b1b923105c13feda4512f59901670c255d5", "Url": "https://api.github.com/repos/cryptape/cyton-android", "Date": "2018-11-16T02:41:45Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { processRequest(request, response); } catch (java.lang.Exception ex) { java.util.logging.Logger.getLogger(org.petstar.service.UploadImage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3564/buggy-version/src.java.org.petstar.service.UploadImage.java", "BodyUseAPI": ["org.petstar.service.UploadImage.processRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"], "Fixed commit": "c5c471fe72aaad10cd11506a9a465295e33d10d7", "Url": "https://api.github.com/repos/ProyectoPetStar/api-kiosco", "Date": "2018-12-05T22:52:31Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { processRequest(request, response); } catch (java.lang.Exception ex) { java.util.logging.Logger.getLogger(org.petstar.service.UploadImage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3564/buggy-version/src.java.org.petstar.service.UploadImage.java", "BodyUseAPI": ["org.petstar.service.UploadImage.processRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"], "Fixed commit": "c5c471fe72aaad10cd11506a9a465295e33d10d7", "Url": "https://api.github.com/repos/ProyectoPetStar/api-kiosco", "Date": "2018-12-05T22:52:31Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.util.List<rental.CarRentalCompany> crcs = em.createNamedQuery(\"Company.findAll\").getResultList(); java.lang.System.out.print((\"Companies: \" + (crcs.toString()))); for (rental.CarRentalCompany crc : crcs) { java.lang.System.out.print((\"Company: \" + (crc.getName()))); rental.Quote out = crc.createQuote(constraints, name); quotes.add(out); return out; } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2548/buggy-version/CarRental-ejb.src.java.session.CarRentalSession.java", "BodyUseAPI": ["em.createNamedQuery(\"Company.findAll\").getResultList()", "java.util.List<rental.CarRentalCompany>.toString()", "java.io.PrintStream.print((\"Companies: \" + (crcs.toString())))", "rental.CarRentalCompany.getName()", "javax.persistence.EntityManager.createNamedQuery(java.lang.String)", "rental.CarRentalCompany.createQuote(rental.ReservationConstraints,java.lang.String)", "java.util.List<rental.Quote>.add(rental.Quote)", "java.io.PrintStream.print((\"Company: \" + (crc.getName())))"], "Fixed commit": "955808ba2ce511359469bc380d25b9acac280097", "Url": "https://api.github.com/repos/simonkupers/javaEE_assignment2", "Date": "2018-11-14T20:59:05Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.nio.file.Files.createDirectories(java.nio.file.Paths.get(\"src/main/java/io/swagger/repository\")); java.nio.file.Files.createDirectories(java.nio.file.Paths.get(\"src/main/java/io/swagger/service\")); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2420/buggy-version/src.main.java.markd315.dbGen.Main.java", "BodyUseAPI": ["java.nio.file.Paths.get(java.lang.String)", "java.nio.file.Paths.get(java.lang.String)", "java.nio.file.Files.createDirectories(java.nio.file.Path)", "java.nio.file.Files.createDirectories(java.nio.file.Path)"], "Fixed commit": "f02949b4566da43fe87999834bca7c069d8cfcf1", "Url": "https://api.github.com/repos/markd315/DBcode-from-models", "Date": "2018-12-22T22:10:44Z"},
{"Line": "=>534", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { recordJSON.put(\"photos\", new java.util.ArrayList<java.lang.Integer>()); } catch (org.json.JSONException e) { throw new java.lang.RuntimeException(\"Record data is corrupt\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3550/buggy-version/app.src.main.java.com.example.mdbook.UserManager.java", "BodyUseAPI": ["org.json.JSONObject.put(java.lang.String,java.util.ArrayList<java.lang.Integer>)"], "Fixed commit": "e211977417219ee943b48dcfa0b32c75e506e08d", "Url": "https://api.github.com/repos/CMPUT301F18T01/MDBook", "Date": "2018-11-16T20:16:17Z"},
{"Line": "=>460", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { problemJSON.put(\"records\", new java.util.ArrayList<java.lang.Integer>()); } catch (org.json.JSONException e) { throw new java.lang.RuntimeException(\"Problem data is corrupt\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3550/buggy-version/app.src.main.java.com.example.mdbook.UserManager.java", "BodyUseAPI": ["org.json.JSONObject.put(java.lang.String,java.util.ArrayList<java.lang.Integer>)"], "Fixed commit": "e211977417219ee943b48dcfa0b32c75e506e08d", "Url": "https://api.github.com/repos/CMPUT301F18T01/MDBook", "Date": "2018-11-16T20:16:17Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { new com.fridayafternoon.campusspotlight.MainActivity.GetXMLAsync().execute(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/8749/buggy-version/app.src.main.java.com.fridayafternoon.campusspotlight.MainActivity.java", "BodyUseAPI": ["com.fridayafternoon.campusspotlight.MainActivity.GetXMLAsync.execute()"], "Fixed commit": "58f80e62221be7e159a6ee66375869292c35960e", "Url": "https://api.github.com/repos/FridayAfternoon4155/CampusSpotlight", "Date": "2018-11-12T21:38:27Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { result = java.lang.Integer.parseInt(s); if (s.equals(\"0\")) { throw new java.lang.NumberFormatException((\"Invalid literal detected : \" + s)); } } catch (java.lang.NumberFormatException nfe) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7431/buggy-version/src.Utilities.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "bbe350d4fe0c0ce1294bb83a147b3c8f2c36fe72", "Url": "https://api.github.com/repos/hliejun/SAT-Solver", "Date": "2018-01-24T12:00:25Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.gestordedatos.gestordedatos.contentProvider.ClassroomProvider.deleteRecord(this.getContentResolver(), ((java.lang.Integer) (ClassroomsListFragment.rowSelected.getTag())), this); } catch (com.gestordedatos.gestordedatos.android e) { java.lang.String toast = getResources().getString(R.string.errorClassroomUsed); android.text.SpannableStringBuilder biggerText = new android.text.SpannableStringBuilder(toast); biggerText.setSpan(new android.text.style.RelativeSizeSpan(1.5F), 0, toast.length(), 0); android.widget.Toast errorImage = android.widget.Toast.makeText(getApplicationContext(), biggerText, Toast.LENGTH_LONG); errorImage.setGravity(Gravity.BOTTOM, 0, 40); errorImage.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/1398/buggy-version/app.src.main.java.com.gestordedatos.gestordedatos.MainMenu.java", "BodyUseAPI": ["com.gestordedatos.gestordedatos.MainMenu.getContentResolver()", "ClassroomsListFragment.rowSelected.getTag()", "com.gestordedatos.gestordedatos.contentProvider.ClassroomProvider.deleteRecord(this.getContentResolver(),((java.lang.Integer) (ClassroomsListFragment.rowSelected.getTag())),com.gestordedatos.gestordedatos.MainMenu)"], "Fixed commit": "98cb78389abba8c8a478d59e9286b4f99b2d66a7", "Url": "https://api.github.com/repos/Alp3sa/school-data-manager-android", "Date": "2018-11-14T16:22:03Z"},
{"Line": "=>739", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { tncSystemSetting = systemSettingClient.getSystemSettingByField(getActorRef(ActorOperations.GET_SYSTEM_SETTING.getValue()), JsonKey.TNC_CONFIG); } catch (java.lang.Exception e) { org.sunbird.common.models.util.ProjectLogger.log(((\"UserManagementActor:updateTncInfo: Exception occurred while getting system setting for\" + (org.sunbird.common.models.util.JsonKey.TNC_CONFIG)) + (e.getMessage())), LoggerEnum.ERROR.name()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/4049/buggy-version/actors.user.src.main.java.org.sunbird.user.actors.UserProfileReadActor.java", "BodyUseAPI": ["org.sunbird.user.actors.UserProfileReadActor.getActorRef(ActorOperations.GET_SYSTEM_SETTING.getValue())", "ActorOperations.GET_SYSTEM_SETTING.getValue()", "org.sunbird.actorutil.systemsettings.SystemSettingClient.getSystemSettingByField(getActorRef(ActorOperations.GET_SYSTEM_SETTING.getValue()),JsonKey.TNC_CONFIG)"], "Fixed commit": "130b476693476bb7257452bf26f5fd213085c39c", "Url": "https://api.github.com/repos/project-sunbird/sunbird-lms-mw", "Date": "2018-12-27T09:40:46Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.Iterator<com.lqs.app.coursesTask.entities.InsuredPerson> curStr = insuredPersons.iterator(); while (curStr.hasNext()) { sum += curStr.next().getInsurancePrice(); } } catch (java.lang.NullPointerException e) { java.lang.System.out.println(e.toString()); } catch (java.lang.IllegalArgumentException e) { java.lang.System.out.println(e.toString()); } finally { return sum; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/549/buggy-version/src.main.java.com.lqs.app.coursesTask.entities.Contract.java", "BodyUseAPI": ["java.util.ArrayList<com.lqs.app.coursesTask.entities.InsuredPerson>.iterator()", "java.util.Iterator<com.lqs.app.coursesTask.entities.InsuredPerson>.hasNext()", "java.util.Iterator<com.lqs.app.coursesTask.entities.InsuredPerson>.next()", "curStr.next().getInsurancePrice()"], "Fixed commit": "c104cdcc3bb130bfce3cd5c32f9579b7aa24e5fb", "Url": "https://api.github.com/repos/DenisVryukalo/javaCourseTask1", "Date": "2018-11-13T13:16:53Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { l.onMessageReceived(message); } catch (java.lang.Throwable t) { t.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5279/buggy-version/src.fr.utbm.ev3.network.BroadcastManager.java", "BodyUseAPI": ["fr.utbm.ev3.network.MessageEventListener.onMessageReceived(fr.utbm.ev3.network.Message)"], "Fixed commit": "956bc13896ad921a55ac95b024529d32e8706d84", "Url": "https://api.github.com/repos/alexandrelombard/lejos-communication", "Date": "2018-12-18T14:48:03Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (ts == null) { handler.echecRequete(); }else { handler.afficherList(ts); } } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/4673/buggy-version/Project.app.src.main.java.cgodin.qc.ca.projet.asynctasks.RequeteListe.java", "BodyUseAPI": ["cgodin.qc.ca.projet.asynctasks.RequeteListe.Handler<T>.echecRequete()", "cgodin.qc.ca.projet.asynctasks.RequeteListe.Handler<T>.afficherList(java.util.List<T>)"], "Fixed commit": "fc130b3d9bfad187b8b3acb3f5f4bcf879357dae", "Url": "https://api.github.com/repos/CGGTeam/Websocket-Mobile", "Date": "2018-11-25T02:24:09Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { report = createDoc(docType); report.generateReport(models.report.PDFBuilder.getCompleteTable(contract, table), response); } catch (models.report.ReportTypeIsNotImplemented e) { message = e.getMessage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7838/buggy-version/src.models.report.ReportService.java", "BodyUseAPI": ["models.report.IReport.generateReport(models.report.PDFBuilder.getCompleteTable(contract, table),javax.servlet.http.HttpServletResponse)", "models.report.ReportService.createDoc(java.lang.String)", "models.report.PDFBuilder.getCompleteTable(models.entity.Contract,models.report.PDFTable)"], "Fixed commit": "d83b5aab5ea348c1b2705452f50213db68ee1ac5", "Url": "https://api.github.com/repos/ShamithaSIlva/OnlineStockAuction", "Date": "2018-11-28T09:17:44Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.apache.commons.io.FileUtils.forceMkdir(new java.io.File(dbPath)); this.conn = java.sql.DriverManager.getConnection(((\"jdbc:hsqldb:file:\" + dbPath) + \";shutdown=true\"), \"SA\", \"\"); } catch (java.io.IOException e) { throw new cz.dynawest.csvcruncher.CsvCruncherException(java.lang.String.format(\"Can't create HSQLDB data dir %s: %s\", dbPath, e.getMessage()), e); } catch (java.sql.SQLException e) { throw new cz.dynawest.csvcruncher.CsvCruncherException(java.lang.String.format(\"Can't connect to the database %s: %s\", dbPath, e.getMessage()), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7357/buggy-version/src.main.java.cz.dynawest.csvcruncher.Cruncher.java", "BodyUseAPI": ["org.apache.commons.io.FileUtils.forceMkdir(java.io.File)", "java.sql.DriverManager.getConnection(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "35ef2ac54abb7dcae9e36bb16aa4de7fc54711e0", "Url": "https://api.github.com/repos/OndraZizka/csv-cruncher", "Date": "2018-11-12T18:20:30Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { playershandler = io.codenames.serverdata.PlayersHandler.getInstance(); playershandler.savePlayerList(); } catch (java.rmi.RemoteException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7532/buggy-version/src.io.codenames.server.Server.java", "BodyUseAPI": ["io.codenames.serverdata.PlayersHandler.getInstance()", "io.codenames.serverdata.PlayersHandler.savePlayerList()"], "Fixed commit": "dea5397b454a4f4e1ebca6b87931997ebc366001", "Url": "https://api.github.com/repos/OpenCodeNames/OpenCodeNamesServer", "Date": "2018-11-25T12:00:54Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { int matricAsInt = ((int) (java.lang.Math.round(java.lang.Double.parseDouble(studentArray[i])))); entities.Student student = new entities.Student(java.lang.Integer.toString(matricAsInt).trim()); result.put(student.getMatric(), student); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/6292/buggy-version/TimeTable.src.main.java.dao.parsers.StudentParser.java", "BodyUseAPI": ["java.lang.Integer.toString(int)", "entities.Student.getMatric()", "java.util.Map<java.lang.String, entities.Student>.put(student.getMatric(),entities.Student)", "java.lang.Double.parseDouble(java.lang.String)", "java.lang.Math.round(double)", "java.lang.String.trim()"], "Fixed commit": "63277ac9ca7d5d33c68e95b634ba6c23affdf00a", "Url": "https://api.github.com/repos/NeilUrquhart/TimeTable", "Date": "2018-11-26T12:37:44Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((cursor.getCount()) == 0) { return null; } cursor.moveToFirst(); blob = cursor.getBlob(); } catch (java.lang.Exception ex) { blob = null; } finally { cursor.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7179/buggy-version/app.src.main.java.vitalypanov.phototracker.database.BlobDbHelper.java", "BodyUseAPI": ["vitalypanov.phototracker.database.BlobCursorWrapper.getCount()", "vitalypanov.phototracker.database.BlobCursorWrapper.moveToFirst()", "vitalypanov.phototracker.database.BlobCursorWrapper.getBlob()"], "Fixed commit": "39428feb22dfeb87a7f37a454d7938a18fc0efc2", "Url": "https://api.github.com/repos/panovvitalik/PhotoTracker", "Date": "2018-12-08T17:06:46Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (int j = 0; j < (game.getNumberOfPlayers()); j++) { if (!(game.getPlayers()[j].isBot())) { game.getPlayers()[j].out.println(l); game.getPlayers()[j].out.println(\"\"); } } } catch (java.lang.NullPointerException err) { java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3325/buggy-version/Game.src.gameServer.Player.java", "BodyUseAPI": ["gameServer.Game.getPlayers()", "game.getPlayers()[j].out.println(java.lang.String)", "gameServer.Game.getPlayers()", "gameServer.Game.getPlayers()", "gameServer.Game.getNumberOfPlayers()", "game.getPlayers()[j].out.println(java.lang.String)", "game.getPlayers()[j].isBot()"], "Fixed commit": "56211f6c3d23939fa0d3add3d0c2d50b289458bb", "Url": "https://api.github.com/repos/JanKulbinski/Chinese_checkers", "Date": "2018-12-15T21:37:05Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { balances.compute(id, ( accId, prevAmount) -> { long newAmount = java.lang.Math.subtractExact(prevAmount, amount); if (newAmount < 0) throw new com.dmitrievanthony.duck.ledger.core.exception.InsufficientFundsException(); return newAmount; }); } finally { lock.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/1796/buggy-version/src.main.java.com.dmitrievanthony.duck.ledger.core.InMemoryLedgerService.java", "BodyUseAPI": ["java.lang.Math.subtractExact(java.lang.Long,long)", "java.util.concurrent.ConcurrentMap<java.lang.Long, java.lang.Long>.compute(long,java.util.function.BiFunction<? super java.lang.Long, ? super java.lang.Long, ? extends java.lang.Long>)"], "Fixed commit": "ecaf862830fad41464a80901d9f4a71740ae6403", "Url": "https://api.github.com/repos/dmitrievanthony/duck-ledger", "Date": "2018-12-22T22:10:33Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { balances.compute(id, ( accId, prevAmount) -> java.lang.Math.addExact(prevAmount, amount)); } finally { lock.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/1796/buggy-version/src.main.java.com.dmitrievanthony.duck.ledger.core.InMemoryLedgerService.java", "BodyUseAPI": ["java.lang.Math.addExact(java.lang.Long,long)", "java.util.concurrent.ConcurrentMap<java.lang.Long, java.lang.Long>.compute(long,java.util.function.BiFunction<? super java.lang.Long, ? super java.lang.Long, ? extends java.lang.Long>)"], "Fixed commit": "ecaf862830fad41464a80901d9f4a71740ae6403", "Url": "https://api.github.com/repos/dmitrievanthony/duck-ledger", "Date": "2018-12-22T22:10:33Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { return com.corvettecole.gotosleep.MainActivity.notifications[notificationTitleIndex]; } catch (java.lang.ArrayIndexOutOfBoundsException e) { android.util.Log.e(TAG, \"getNotificationTitle: \", e); return com.corvettecole.gotosleep.MainActivity.notifications[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5528/buggy-version/app.src.main.java.com.corvettecole.gotosleep.BedtimeNotificationReceiver.java", "BodyUseAPI": [], "Fixed commit": "adc226e1175228dea05e2cd15010c48815c0015d", "Url": "https://api.github.com/repos/CorvetteCole/GotoSleep", "Date": "2018-11-28T15:17:11Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { tmpLangAbility[i] = teamRecordMapper.getLangAbility(members[i], langs); if ((tmpLangAbility[i].length) == 0) avaLength--; } catch (java.lang.Exception ex) { java.lang.System.out.println((((++total) + \" \") + (ex.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/1557/buggy-version/src.main.java.cn.springmvc.service.TeamRecord.java", "BodyUseAPI": ["cn.springmvc.dao.TeamRecordMapper.getLangAbility(int,java.util.List<java.lang.String>)"], "Fixed commit": "8fad9d6f96314a2b591df640e5a4ebe81f107c25", "Url": "https://api.github.com/repos/yeluting/github", "Date": "2018-11-13T09:54:09Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { fileOutputStream.write(buffer.array(), 0, length); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/2067/buggy-version/app.src.main.java.com.nuaa.is.rootfreefirewall.VpnInterface.java", "BodyUseAPI": ["java.nio.ByteBuffer.array()", "java.io.FileOutputStream.write(byte[],int,int)"], "Fixed commit": "ced4376ff2ce46b96c1e70ca42bbd7a103bb9522", "Url": "https://api.github.com/repos/FlyAndNotDown/RootFreeFirewall", "Date": "2018-12-19T12:00:42Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { subject.login(token); } catch (org.apache.shiro.authc.AccountException e) { return com.repairsystem.web.controller.JsonResult.errorException(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/2874/buggy-version/src.main.java.com.repairsystem.web.controller.AdministratorController.java", "BodyUseAPI": ["org.apache.shiro.subject.Subject.login(org.apache.shiro.authc.UsernamePasswordToken)"], "Fixed commit": "2ef9b7a2cd044f2c7a57bf7fa62267232c79085d", "Url": "https://api.github.com/repos/CheungChingYin/RepairSystem", "Date": "2018-11-30T09:06:00Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { configReadOnly = configRepository.isConfigReadOnly(agentRollupId); } catch (org.glowroot.common2.repo.ConfigRepository.AgentConfigNotFoundException e) { configReadOnly = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3879/buggy-version/ui.src.main.java.org.glowroot.ui.LayoutService.java", "BodyUseAPI": ["org.glowroot.common2.repo.ConfigRepository.isConfigReadOnly(java.lang.String)"], "Fixed commit": "c1851195c105f8ec4be33805512506bfcf80357b", "Url": "https://api.github.com/repos/glowroot/glowroot", "Date": "2018-11-17T00:58:28Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { user = new com.app.server.models.User(item.getString(\"key\"), item.getString(\"email\"), item.getString(\"password\"), item.getString(\"profileName\"), ((int) (item.get(\"userType\"))), ((int) (item.get(\"userLevel\"))), java.lang.Integer.parseInt(com.app.server.util.APPCrypt.decrypt(item.getString(\"userScore\"))), item.getString(\"portraitUrl\")); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/2356/buggy-version/src.main.java.com.app.server.services.SessionService.java", "BodyUseAPI": ["org.bson.Document.get(java.lang.String)", "org.bson.Document.getString(java.lang.String)", "org.bson.Document.getString(java.lang.String)", "com.app.server.util.APPCrypt.decrypt(item.getString(\"userScore\"))", "org.bson.Document.getString(java.lang.String)", "org.bson.Document.getString(java.lang.String)", "org.bson.Document.getString(java.lang.String)", "java.lang.Integer.parseInt(com.app.server.util.APPCrypt.decrypt(item.getString(\"userScore\")))", "org.bson.Document.get(java.lang.String)", "org.bson.Document.getString(java.lang.String)"], "Fixed commit": "a169a8026ab33c9e5b07789b544bd5c8fda31de2", "Url": "https://api.github.com/repos/blablaBen/pets-book-backend-jersy", "Date": "2018-11-27T00:47:34Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { filePathTextField.setText(getOpenFileChooser().getSelectedFile().toURI().toURL().toString()); } catch (java.net.MalformedURLException ex) { ex.printStackTrace(); throw new java.lang.InternalError(ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/1718/buggy-version/main.src.info.bioinfweb.phyde2.gui.dialogs.AddSingleReadDialog.java", "BodyUseAPI": ["javax.swing.JFileChooser.getSelectedFile()", "javax.swing.JTextField.setText(java.lang.String)", "java.net.URL.toString()", "info.bioinfweb.phyde2.gui.dialogs.AddSingleReadDialog.1.getOpenFileChooser()", "java.io.File.toURI()", "java.net.URI.toURL()"], "Fixed commit": "4f58d06914e6e665ebe187a5756e7759e931f91d", "Url": "https://api.github.com/repos/bioinfweb/PhyDE2", "Date": "2018-12-12T12:17:20Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { toneGenerator = new android.media.ToneGenerator(android.media.AudioManager.STREAM_NOTIFICATION, 100); } catch (java.lang.Exception e) { e.printStackTrace(); toneGenerator = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7180/buggy-version/src.main.java.com.marianhello.bgloc.provider.AbstractLocationProvider.java", "BodyUseAPI": [], "Fixed commit": "195941bb454107fc349b37deffdbf17bc3e74f7e", "Url": "https://api.github.com/repos/tlacroix/background-geolocation-android", "Date": "2018-12-18T00:42:52Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.google.firebase.database.FirebaseDatabase.getInstance().setPersistenceEnabled(true); } catch (com.google.firebase.database.DatabaseException e) { timber.log.Timber.w(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/2199/buggy-version/app.src.main.java.com.routinew.android.moodtracker.Data.MoodRepository.java", "BodyUseAPI": ["com.google.firebase.database.FirebaseDatabase.getInstance()", "com.google.firebase.database.FirebaseDatabase.getInstance().setPersistenceEnabled(boolean)"], "Fixed commit": "eaacc5575b0cabe3e1a673212e786ea497649274", "Url": "https://api.github.com/repos/tservo/mood-tracker", "Date": "2018-11-13T07:54:47Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return ((java.util.ArrayList<edu.ucsb.cs.cs184.seakyluo.databaseproject.Customer>) (edu.ucsb.cs.cs184.seakyluo.databaseproject.DatabaseHelper.get((((((edu.ucsb.cs.cs184.seakyluo.databaseproject.Customer.getQuery()) + \" WHERE c.\") + (edu.ucsb.cs.cs184.seakyluo.databaseproject.Customer.ID)) + \"=\") + id), edu.ucsb.cs.cs184.seakyluo.databaseproject.Customer.TABLE_NAME))).get(0); } catch (java.lang.IndexOutOfBoundsException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/871/buggy-version/app.src.main.java.edu.ucsb.cs.cs184.seakyluo.databaseproject.Customer.java", "BodyUseAPI": ["edu.ucsb.cs.cs184.seakyluo.databaseproject.DatabaseHelper.get(java.lang.String,java.lang.String)", "edu.ucsb.cs.cs184.seakyluo.databaseproject.Customer.getQuery()", "((java.util.ArrayList<edu.ucsb.cs.cs184.seakyluo.databaseproject.Customer>) (edu.ucsb.cs.cs184.seakyluo.databaseproject.DatabaseHelper.get((((((edu.ucsb.cs.cs184.seakyluo.databaseproject.Customer.getQuery()) + \" WHERE c.\") + (edu.ucsb.cs.cs184.seakyluo.databaseproject.Customer.ID)) + \"=\") + id), edu.ucsb.cs.cs184.seakyluo.databaseproject.Customer.TABLE_NAME))).get(int)"], "Fixed commit": "c0117b06b27786aa2015b53ed895bf059034ccad", "Url": "https://api.github.com/repos/SeakyLuo/cs174a", "Date": "2018-11-28T05:29:33Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { p.init(null); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3714/buggy-version/src.main.java.jacamo.infra.JaCaMoLauncher.java", "BodyUseAPI": ["jacamo.platform.Platform.init(<nulltype>)"], "Fixed commit": "a308c33ef0308bb8ef3da70c0fa298c8c69c0a15", "Url": "https://api.github.com/repos/jacamo-lang/jacamo", "Date": "2018-11-08T09:59:40Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { while ((in.writerIndex()) > (in.readerIndex())) { decode(in, null, null, ctx.channel(), false); } sendNext(ctx); } catch (java.lang.Exception e) { log.error(\"Unable to decode data. channel: {} message: {}\", ctx.channel(), in.toString(0, in.writerIndex(), CharsetUtil.UTF_8), e); sendNext(ctx); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5031/buggy-version/redisson.src.main.java.org.redisson.client.handler.CommandDecoder.java", "BodyUseAPI": ["org.redisson.client.handler.CommandDecoder.sendNext(io.netty.channel.ChannelHandlerContext)", "io.netty.buffer.ByteBuf.writerIndex()", "io.netty.channel.ChannelHandlerContext.channel()", "io.netty.buffer.ByteBuf.readerIndex()", "org.redisson.client.handler.CommandDecoder.decode(io.netty.buffer.ByteBuf,<nulltype>,<nulltype>,ctx.channel(),boolean)"], "Fixed commit": "60352b8490220cfeecc99ca51d73b867f563838c", "Url": "https://api.github.com/repos/wiltonlazary/redisson", "Date": "2018-12-19T14:16:12Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { decrypted_msg = cipher.doFinal(msg.getRawBuffer(), msg.getOffset(), msg.getLength()); } catch (javax.crypto.BadPaddingException | javax.crypto.IllegalBlockSizeException e) { cipher.init(javax.crypto.Cipher.DECRYPT_MODE, secret_key); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/4410/buggy-version/src.org.jgroups.protocols.Encrypt.java", "BodyUseAPI": ["org.jgroups.Message.getLength()", "org.jgroups.Message.getOffset()", "org.jgroups.Message.getRawBuffer()", "javax.crypto.Cipher.doFinal(msg.getRawBuffer(),msg.getOffset(),msg.getLength())"], "Fixed commit": "2b41d8c7a3874a6dab45c0c3c24eeb6c858c5e24", "Url": "https://api.github.com/repos/belaban/JGroups", "Date": "2018-11-29T15:47:12Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { price = java.lang.Integer.parseInt(java.lang.String.valueOf(mPriceField.getText())); } catch (java.lang.NumberFormatException e) { price = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/4442/buggy-version/androidapp.app.src.main.java.com.example.jorexa.landlordapp.createProperty.CreatePropertyFragment.java", "BodyUseAPI": ["java.lang.String.valueOf(mPriceField.getText())", "java.lang.Integer.parseInt(java.lang.String)", "android.widget.EditText.getText()"], "Fixed commit": "1fa204ee9dea14afcadbe660720726ae78334c8c", "Url": "https://api.github.com/repos/Latchezar/propert-management-app", "Date": "2018-11-06T20:12:55Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { quantityInt = java.lang.Integer.parseInt(tempQuantity); } catch (java.lang.Exception e) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3708/buggy-version/app.src.main.java.com.example.robertwais.shoppingcart.ItemActivity.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "4ab156a65fa59bddfb8c8e35b8a9cbad2e3f66da", "Url": "https://api.github.com/repos/brianllaplante/ShoppingCartAndroid", "Date": "2018-11-01T00:57:04Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { currentThread.setContextClassLoader(getClass().getClassLoader()); return com.liferay.portal.kernel.scripting.ScriptingUtil.eval(null, input, (outputNames == null ? null : new java.util.HashSet<java.lang.String>(outputNames)), language, script); } finally { currentThread.setContextClassLoader(contextClassLoader); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/6384/buggy-version/com.pastdev.liferay.scripting-service.src.main.java.com.pastdev.liferay.scripting.service.impl.ScriptingExecutorServiceImpl.java", "BodyUseAPI": ["com.liferay.portal.kernel.scripting.ScriptingUtil.eval(<nulltype>,java.util.Map<java.lang.String, java.lang.Object>,(outputNames == null ? null : new java.util.HashSet<java.lang.String>(outputNames)),java.lang.String,java.lang.String)", "java.lang.Thread.setContextClassLoader(java.lang.ClassLoader)", "java.lang.Class<? extends com.pastdev.liferay.scripting.service.impl.ScriptingExecutorServiceImpl>.getClassLoader()", "com.pastdev.liferay.scripting.service.impl.ScriptingExecutorServiceImpl.getClass()"], "Fixed commit": "23c83dcd15eab1227171c1d5e779f4b4fb8f0625", "Url": "https://api.github.com/repos/pastdev/com-pastdev-liferay-scripting", "Date": "2018-12-05T20:14:04Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Class.forName(\"com.mysql.jdbc.Driver\"); } catch (java.lang.ClassNotFoundException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/2044/buggy-version/MicCheck.src.LoadData.java", "BodyUseAPI": ["java.lang.Class.forName(java.lang.String)"], "Fixed commit": "f9d63502c9e56e3efa57b90dd1192cb4b38972ff", "Url": "https://api.github.com/repos/Ncookiez/MicCheck", "Date": "2018-12-02T22:50:00Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Class.forName(\"com.mysql.jdbc.Driver\"); } catch (java.lang.ClassNotFoundException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/2044/buggy-version/MicCheck.src.triepackage.Trie.java", "BodyUseAPI": ["java.lang.Class.forName(java.lang.String)"], "Fixed commit": "f9d63502c9e56e3efa57b90dd1192cb4b38972ff", "Url": "https://api.github.com/repos/Ncookiez/MicCheck", "Date": "2018-12-02T22:50:00Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Class.forName(\"com.mysql.jdbc.Driver\"); } catch (java.lang.ClassNotFoundException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/2044/buggy-version/MicCheck.src.triepackage.loadTrie.java", "BodyUseAPI": ["java.lang.Class.forName(java.lang.String)"], "Fixed commit": "f9d63502c9e56e3efa57b90dd1192cb4b38972ff", "Url": "https://api.github.com/repos/Ncookiez/MicCheck", "Date": "2018-12-02T22:50:00Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { statements.add(fr.openent.lystore.service.impl.DefaultProjectService.getInsertBasketOptionOrderStatement(order)); } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/1143/buggy-version/src.main.java.fr.openent.lystore.service.impl.DefaultProjectService.java", "BodyUseAPI": ["fr.openent.lystore.service.impl.DefaultProjectService.getInsertBasketOptionOrderStatement(io.vertx.core.json.JsonObject)", "io.vertx.core.json.JsonArray.add(io.vertx.core.json.JsonObject)"], "Fixed commit": "7154ea60d25c3f9fb554fd84bd8b5d07358c6d67", "Url": "https://api.github.com/repos/OPEN-ENT-NG/lystore", "Date": "2018-12-11T09:24:19Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { edgeCapacity = java.lang.Integer.parseInt(((java.lang.String) (caseGraph.obtenerArista(caseGraph, edgeId).getDato()))); } catch (java.lang.ClassCastException e) { edgeCapacity = ((int) (caseGraph.obtenerArista(caseGraph, edgeId).getDato())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7503/buggy-version/src.EncontrarAgua.java", "BodyUseAPI": ["java.lang.Integer.parseInt(((java.lang.String) (caseGraph.obtenerArista(caseGraph, edgeId).getDato())))", "GrafoNoDirigido<java.lang.Integer, java.lang.Integer>.obtenerArista(GrafoNoDirigido<java.lang.Integer, java.lang.Integer>,java.lang.String)", "caseGraph.obtenerArista(caseGraph, edgeId).getDato()"], "Fixed commit": "1503ff0a532bd15a8235842d794a503a3e4ef103", "Url": "https://api.github.com/repos/El-Team/Lab-Algo-3-Proyecto-2", "Date": "2018-11-21T16:04:13Z"},
{"Line": "=>2952", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.bukkit.entity.EntityType.valueOf(item.toUpperCase()); } catch (java.lang.Exception ex) { if (mat == null) return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7772/buggy-version/RedProtect-Spigot.src.main.java.br.net.fabiozumbi12.RedProtect.Bukkit.listeners.RPCommands.java", "BodyUseAPI": ["java.lang.String.toUpperCase()", "org.bukkit.entity.EntityType.valueOf(java.lang.String)"], "Fixed commit": "ee9b1b272377ff34fadb19ca444b4f34803d400d", "Url": "https://api.github.com/repos/FreebuildFR/RedProtect", "Date": "2018-11-05T02:01:45Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { lazeView = inflater.inflate(setLazyView(), container, false); ((android.view.ViewGroup) (baseView)).addView(lazeView); } catch (java.lang.Exception ignored) { android.util.Log.w(\"BaseLazyFragment\", \"onCreateView: no lazy view\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/1857/buggy-version/mvvm.src.main.java.com.lee.mvvm.base.view.BaseLazyFragment.java", "BodyUseAPI": ["android.view.View.addView(android.view.View)", "com.lee.mvvm.base.view.BaseLazyFragment<B, VM>.setLazyView()", "android.view.LayoutInflater.inflate(int,android.view.ViewGroup,boolean)"], "Fixed commit": "cc562b7eb95b6f16edea3789bb97c5cac5e48499", "Url": "https://api.github.com/repos/985530812/MVVMProject", "Date": "2018-12-27T03:30:59Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.objectweb.asm.Type type = org.objectweb.asm.Type.getType(desc); java.lang.String name = type.getInternalName(); for (org.unidal.mixin.model.entity.SourceModel source : m_model.getSources()) { if (source.getName().equals(name)) { return org.objectweb.asm.Type.getObjectType(getTargetClass()).getDescriptor(); } } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V177/451/buggy-version/mixin-service.src.main.java.org.unidal.mixin.asm.ClassGenerator.java", "BodyUseAPI": ["org.objectweb.asm.Type.getObjectType(java.lang.String)", "org.unidal.mixin.model.entity.SourceModel.getName()", "org.unidal.mixin.asm.ClassGenerator.Context.getTargetClass()", "org.objectweb.asm.Type.getType(java.lang.String)", "org.objectweb.asm.Type.getInternalName()", "org.unidal.mixin.model.entity.ClassModel.getSources()", "source.getName().equals(java.lang.String)", "org.objectweb.asm.Type.getObjectType(getTargetClass()).getDescriptor()"], "Fixed commit": "0ae0ecfc40bb0d8e283afeafde1f8e4cb8eee96e", "Url": "https://api.github.com/repos/unidal/foundation", "Date": "2018-12-01T03:59:05Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Object result = commonFilterBaseConverterHandler.convert(map); java.lang.System.out.println(result); } catch (net.noboard.fastconverter.ConvertException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V177/536/buggy-version/src.main.java.Main.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.Object)", "net.noboard.fastconverter.handler.CommonFilterBaseConverterHandler.convert(java.util.Map<java.lang.String, java.lang.Object>)"], "Fixed commit": "024f3fa84f2e7e4eb8824e00d88654e7ac98de85", "Url": "https://api.github.com/repos/iiiron/fast-converter", "Date": "2018-12-26T03:36:32Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { imagePreviewBitmap = MediaStore.Images.Media.getBitmap(getContentResolver(), imageUri); imagePreview.setImageBitmap(imagePreviewBitmap); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V177/258/buggy-version/app.src.main.java.com.color_wave.PreviewImageActivity.java", "BodyUseAPI": ["com.color_wave.PreviewImageActivity.getContentResolver()", "android.widget.ImageView.setImageBitmap(android.graphics.Bitmap)", "MediaStore.Images.Media.getBitmap(getContentResolver(),android.net.Uri)"], "Fixed commit": "68cf6def0242ffe2d770e6ffa8c32f7d274e846d", "Url": "https://api.github.com/repos/Schenng/colour-wave-android", "Date": "2018-11-13T01:25:35Z"}]}
