{"UNKNOWN to Try":[{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { articles.add(new newsApi.newsApiClient.Article(article.getAsJsonObject())); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2710/buggy-version/src.main.java.newsApi.newsApiClient.GetArticlesRequest.java", "BodyUseAPI": ["com.google.gson.JsonElement.getAsJsonObject()", "java.util.Collection<newsApi.newsApiClient.Article>.add(newsApi.newsApiClient.Article)"], "Fixed commit": "915b7ba15d6196afb8474f1c688f0498cd6d8e20", "Url": "https://api.github.com/repos/Colemalban/newsapi_javasdk", "Date": "2017-10-16T05:07:13Z"},
{"Line": "=>859", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { defaultFilterWrappers = mavenFileFilter.getDefaultFilterWrappers(mavenResourcesExecution); } catch (org.apache.maven.shared.filtering.MavenFilteringException e) { getLog().error((\"fail to build filering wrappers \" + (e.getMessage()))); throw new org.apache.maven.plugin.MojoExecutionException(e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4707/buggy-version/src.main.java.org.codehaus.mojo.rpm.AbstractRPMMojo.java", "BodyUseAPI": ["org.apache.maven.shared.filtering.MavenFileFilter.getDefaultFilterWrappers(org.apache.maven.shared.filtering.MavenResourcesExecution)"], "Fixed commit": "9f7daff25f0e375c79621f3b541e85cfde8e4bef", "Url": "https://api.github.com/repos/chiknrice/rpm-maven-plugin", "Date": "2017-04-01T07:32:05Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((this.includeDeviceMotionCheck) && (!(this.motionSensorReportsMovement()))) { return false; } } catch (com.medziku.motoresponder.utils.AccelerometerNotAvailableException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5502/buggy-version/app.src.main.java.com.medziku.motoresponder.logic.UserRide.java", "BodyUseAPI": ["com.medziku.motoresponder.logic.UserRide.motionSensorReportsMovement()"], "Fixed commit": "ec8019ba8266131efbc94bc28bc01ff436a5b0c9", "Url": "https://api.github.com/repos/orzechowskikamil/motoresponder", "Date": "2016-03-18T19:06:04Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { crUpImage.removeListener(crUpImage.getListeners().first()); crDownImage.removeListener(crDownImage.getListeners().first()); valve1Button.removeListener(valve1Button.getListeners().first()); valve2Button.removeListener(valve2Button.getListeners().first()); pump1Button.removeListener(pump1Button.getListeners().first()); pump2Button.removeListener(pump2Button.getListeners().first()); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4846/buggy-version/src.main.java.lamprey.seprphase3.GUI.Screens.GameplayScreen.java", "BodyUseAPI": ["lamprey.seprphase3.GUI.Images.HoverButton.removeListener(crDownImage.getListeners().first())", "crUpImage.getListeners().first()", "lamprey.seprphase3.GUI.Images.HoverButton.getListeners()", "pump1Button.getListeners().first()", "valve2Button.getListeners().first()", "lamprey.seprphase3.GUI.Images.HoverButton.removeListener(pump1Button.getListeners().first())", "lamprey.seprphase3.GUI.Images.HoverButton.getListeners()", "pump2Button.getListeners().first()", "lamprey.seprphase3.GUI.Images.HoverButton.getListeners()", "lamprey.seprphase3.GUI.Images.HoverButton.getListeners()", "valve1Button.getListeners().first()", "lamprey.seprphase3.GUI.Images.HoverButton.getListeners()", "lamprey.seprphase3.GUI.Images.HoverButton.getListeners()", "lamprey.seprphase3.GUI.Images.HoverButton.removeListener(valve1Button.getListeners().first())", "lamprey.seprphase3.GUI.Images.HoverButton.removeListener(crUpImage.getListeners().first())", "lamprey.seprphase3.GUI.Images.HoverButton.removeListener(valve2Button.getListeners().first())", "lamprey.seprphase3.GUI.Images.HoverButton.removeListener(pump2Button.getListeners().first())", "crDownImage.getListeners().first()"], "Fixed commit": "9d0cba0b3e19e2f183acb9d76be495cc61b3286c", "Url": "https://api.github.com/repos/ssfilipov/LampreyThree", "Date": "2013-05-13T13:41:28Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { seatc = java.lang.Integer.parseInt(seats); } catch (java.lang.NumberFormatException e) { java.lang.System.err.println(\"Thats not a number for seats\"); resp.sendRedirect(\"/seatserror.jsp\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1363/buggy-version/rideshare.src.main.java.com.rideshare.SearchServlet.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "3605397e85516b15e164856b17e59d7ecee94b1e", "Url": "https://api.github.com/repos/aljyu/CMPS-115", "Date": "2015-12-02T20:18:39Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { dataManager2.open(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2688/buggy-version/app.src.main.java.com.example.groupfourtwo.bluetoothsensorapp.graph.DrawGraph.java", "BodyUseAPI": ["com.example.groupfourtwo.bluetoothsensorapp.data.DataManager.open()"], "Fixed commit": "d1ab7c2d04c57f2fb61408c5f20ed514bdce8982", "Url": "https://api.github.com/repos/imackerracher/BluetoothSensorApp", "Date": "2017-07-09T09:32:18Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (action.equals(\"coolMethod\")) { java.lang.String message = args.getString(0); this.coolMethod(message, callbackContext); return true; } return false; } catch (android.content.pm.PackageManager.NameNotFoundException e) { callbackContext.success(\"N/A\"); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/3479/buggy-version/src.android.SignatureFingerprint.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "com.fontesoft.cordova.SignatureFingerprint.coolMethod(java.lang.String,org.apache.cordova.CallbackContext)", "org.json.JSONArray.getString(int)"], "Fixed commit": "e5c5ddef860637b9bbb043d8bc6eec81cf8e8755", "Url": "https://api.github.com/repos/fontesoft/cordova-plugin-signature-fingerprint", "Date": "2017-08-01T23:19:42Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { admin.majorCompact(tableOrRegion); } catch (org.apache.hadoop.hbase.NotServingRegionException ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2138/buggy-version/hbase0.98.hbase-manager-0.98.src.main.java.com.kakao.hbase.manager.command.MC.java", "BodyUseAPI": ["org.apache.hadoop.hbase.client.HBaseAdmin.majorCompact(byte[])"], "Fixed commit": "19b2b926e51d9b4111a3627a8f36ff42f5750832", "Url": "https://api.github.com/repos/kakao/hbase-tools", "Date": "2015-12-10T08:39:22Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { suit = Card.suits.valueOf(elements[0]); rank = Card.ranks.valueOf(elements[1]); } catch (java.lang.IllegalArgumentException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7242/buggy-version/3-2.src._3_2Game_Client.Player_Client.java", "BodyUseAPI": ["Card.ranks.valueOf(java.lang.String)", "Card.suits.valueOf(java.lang.String)"], "Fixed commit": "94373658980d42ec695f49aed34e0df9b71852a8", "Url": "https://api.github.com/repos/ivantm24/3-2", "Date": "2015-05-10T20:39:12Z"},
{"Line": "=>540", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (java.util.Map.Entry<org.bitcoinj.core.Sha256Hash, java.lang.Integer> entry : tx.getAppearsInHashes().entrySet()) { org.bitcoinj.core.Sha256Hash hash = entry.getKey(); return hash.toString(); } return null; } catch (java.lang.Exception e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/3622/buggy-version/BCH.plugin.crypto_network.fermat-bch-plugin-crypto-network-bitcoin-bitdubai.src.main.java.com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.structure.BitcoinNetworkEvents.java", "BodyUseAPI": ["tx.getAppearsInHashes().entrySet()", "java.util.Map.Entry<org.bitcoinj.core.Sha256Hash, java.lang.Integer>.getKey()", "org.bitcoinj.core.Sha256Hash.toString()", "org.bitcoinj.core.Transaction.getAppearsInHashes()"], "Fixed commit": "119dd9514c00822c077463d23ce8c23b0baeff27", "Url": "https://api.github.com/repos/acostarodrigo/fermat", "Date": "2015-12-02T21:34:19Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return handle.didPixelChange(x, y); } catch (org.skife.jdbi.v2.exceptions.NoResultsException exp) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5211/buggy-version/src.main.java.space.pxls.data.Database.java", "BodyUseAPI": ["space.pxls.data.DAO.didPixelChange(int,int)"], "Fixed commit": "37730973335f778b85f63f6d5c8ef78fb6bbff02", "Url": "https://api.github.com/repos/xSke/Pxls", "Date": "2017-05-10T19:24:08Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return handle.getPixelUser(x, y); } catch (org.skife.jdbi.v2.exceptions.NoResultsException exp) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5211/buggy-version/src.main.java.space.pxls.data.Database.java", "BodyUseAPI": ["space.pxls.data.DAO.getPixelUser(int,int)"], "Fixed commit": "37730973335f778b85f63f6d5c8ef78fb6bbff02", "Url": "https://api.github.com/repos/xSke/Pxls", "Date": "2017-05-10T19:24:08Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { can_undo = handle.getCanUndo(fromPixel.x, fromPixel.y, fromPixel.id); } catch (org.skife.jdbi.v2.exceptions.NoResultsException exp) { can_undo = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5211/buggy-version/src.main.java.space.pxls.data.Database.java", "BodyUseAPI": ["space.pxls.data.DAO.getCanUndo(fromPixel.x,fromPixel.y,fromPixel.id)"], "Fixed commit": "37730973335f778b85f63f6d5c8ef78fb6bbff02", "Url": "https://api.github.com/repos/xSke/Pxls", "Date": "2017-05-10T19:24:08Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return handle.getPixel(x, y); } catch (org.skife.jdbi.v2.exceptions.NoResultsException exp) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5211/buggy-version/src.main.java.space.pxls.data.Database.java", "BodyUseAPI": ["space.pxls.data.DAO.getPixel(int,int)"], "Fixed commit": "37730973335f778b85f63f6d5c8ef78fb6bbff02", "Url": "https://api.github.com/repos/xSke/Pxls", "Date": "2017-05-10T19:24:08Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { saveTaskManager(event.getData()); } catch (java.io.IOException e) { raise(new seedu.doit.commons.events.storage.DataSavingExceptionEvent(e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5977/buggy-version/src.main.java.seedu.doit.storage.StorageManager.java", "BodyUseAPI": ["seedu.doit.commons.events.storage.TaskManagerSaveChangedEvent.getData()", "seedu.doit.storage.StorageManager.saveTaskManager(event.getData())"], "Fixed commit": "e03de792ce2f566fb759164e2524c4653c22b036", "Url": "https://api.github.com/repos/CS2103JAN2017-W14-B3/main", "Date": "2017-03-14T14:17:42Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { player.setPoints(((player.getPoints()) + (codeAward.getPoints()))); } catch (java.lang.Exception e) { java.lang.System.out.println(\"Exception when adding points: \"); java.lang.System.out.println(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1300/buggy-version/src.main.java.Beans.PlayersBean.java", "BodyUseAPI": ["Model.Player.setPoints(((player.getPoints()) + (codeAward.getPoints())))", "Model.Player.getPoints()", "Model.CodeAward.getPoints()"], "Fixed commit": "cbeb309d0d78e92b16ea4e1e99e6d7616decaa7b", "Url": "https://api.github.com/repos/seinecle/SimpleLeaderBoard", "Date": "2015-10-01T14:30:34Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { restaurantMenu.readMenuFromFile(filePath); eatingUtilityService = new sevices.EatingUtilityService(restaurantMenu); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7937/buggy-version/app.controllers.HomeController.java", "BodyUseAPI": ["services.Restaurant.readMenuFromFile(java.lang.String)"], "Fixed commit": "0e72b1c6e8b0b3d70df9b6ea26d7ca6901c3740d", "Url": "https://api.github.com/repos/knvarma37/play-find-satisfaction", "Date": "2017-07-03T11:23:06Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { storeInDB(servlet.ProcessSubscription.hb_access_code, pageAT_Store_In_DB, pageId_Store_In_DB); } catch (java.net.URISyntaxException e) { e.printStackTrace(); } catch (java.sql.SQLException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7211/buggy-version/src.main.java.servlet.ProcessSubscription.java", "BodyUseAPI": ["servlet.ProcessSubscription.storeInDB(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "3b21d2dc23ed8f00bd12fa5d655fe015463619d3", "Url": "https://api.github.com/repos/Snehasispanigrahi/webhook-facebook", "Date": "2016-05-27T06:00:37Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { access_token = readFromDB(value.page_id); } catch (java.net.URISyntaxException e1) { e1.printStackTrace(); } catch (java.sql.SQLException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7211/buggy-version/src.main.java.servlet.HelloServlet.java", "BodyUseAPI": ["servlet.HelloServlet.readFromDB(java.lang.String)"], "Fixed commit": "3b21d2dc23ed8f00bd12fa5d655fe015463619d3", "Url": "https://api.github.com/repos/Snehasispanigrahi/webhook-facebook", "Date": "2016-05-27T06:00:37Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { defaultVersioningOption = org.nuxeo.ecm.core.api.VersioningOption.valueOf(defver.toUpperCase(java.util.Locale.ENGLISH)); } catch (java.lang.IllegalArgumentException e) { org.nuxeo.ecm.platform.filemanager.service.FileManagerService.log.warn(java.lang.String.format(\"Illegal versioning option: %s, using %s instead\", defver, org.nuxeo.ecm.platform.filemanager.service.FileManagerService.DEF_VERSIONING_OPTION)); defaultVersioningOption = org.nuxeo.ecm.platform.filemanager.service.FileManagerService.DEF_VERSIONING_OPTION; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8825/buggy-version/nuxeo-platform-filemanager-core.src.main.java.org.nuxeo.ecm.platform.filemanager.service.FileManagerService.java", "BodyUseAPI": ["java.lang.String.toUpperCase(java.util.Locale)", "org.nuxeo.ecm.core.api.VersioningOption.valueOf(java.lang.String)"], "Fixed commit": "3b6f0408060efd6e0591efdd7e0eae3a1fa74df0", "Url": "https://api.github.com/repos/nuxeo/nuxeo-services", "Date": "2013-03-19T10:32:03Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.grupo03.hermes.Notificacion.enviar(this); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1559/buggy-version/project_comunicador.Hermes.app.src.main.java.com.grupo03.hermes.Pictograma.java", "BodyUseAPI": ["com.grupo03.hermes.Notificacion.enviar(com.grupo03.hermes.Pictograma)"], "Fixed commit": "2dcf870eb80a0bc979322f792270877089f5ba40", "Url": "https://api.github.com/repos/FEDE0D/Hermes", "Date": "2016-02-13T21:10:23Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { size = org.apache.commons.io.FileUtils.sizeOfDirectory(directory); } catch (java.lang.Exception e) { com.stratelia.silverpeas.silvertrace.SilverTrace.error(\"silverstatistics\", \"DirectorySizeComputer.call\", \"root.EX_CANT_READ_FILE\", (\"Directory : \" + (directory.getAbsolutePath())), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4897/buggy-version/ejb-core.silverstatistics.src.main.java.org.silverpeas.silverstatistics.volume.DirectorySizeComputer.java", "BodyUseAPI": ["org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)"], "Fixed commit": "b482637341ced79e00baa61015d682bcce24c7cd", "Url": "https://api.github.com/repos/mmoqui/Silverpeas-Core", "Date": "2014-04-23T13:06:33Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((((javax.jms.ObjectMessage) (message)).getObject()) instanceof org.wso2.carbon.messaging.SerializableCarbonMessage) { jmsCarbonMessage = ((org.wso2.carbon.messaging.SerializableCarbonMessage) (((javax.jms.ObjectMessage) (message)).getObject())); }else { org.wso2.carbon.messaging.SerializableCarbonMessage serializableCarbonMessage = new org.wso2.carbon.messaging.SerializableCarbonMessage(); serializableCarbonMessage.setPayload(((javax.jms.ObjectMessage) (message)).getObject().toString()); jmsCarbonMessage = serializableCarbonMessage; } } catch (javax.jms.MessageFormatException e) { jmsCarbonMessage = new org.wso2.carbon.messaging.SerializableCarbonMessage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1109/buggy-version/jms.org.wso2.carbon.transport.jms.src.main.java.org.wso2.carbon.transport.jms.utils.JMSUtils.java", "BodyUseAPI": ["javax.jms.Message.getObject()", "javax.jms.Message.getObject()", "((javax.jms.ObjectMessage) (message)).getObject().toString()", "javax.jms.Message.getObject()", "org.wso2.carbon.messaging.SerializableCarbonMessage.setPayload(((javax.jms.ObjectMessage) (message)).getObject().toString())"], "Fixed commit": "b580dcc8b00ee7772e44ec41aa5e871ee6e5be27", "Url": "https://api.github.com/repos/wso2/carbon-transports", "Date": "2017-02-24T06:47:59Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Object o = mDataList.get(position); if (o instanceof com.zaihuishou.expandablerecycleradapter.model.ExpandableListItem) { expandParentListItem(((com.zaihuishou.expandablerecycleradapter.model.ExpandableListItem) (o)), position, true, false); } } catch (java.lang.IndexOutOfBoundsException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8265/buggy-version/expandablerecycleradapter.src.main.java.com.zaihuishou.expandablerecycleradapter.adapter.BaseExpandableAdapter.java", "BodyUseAPI": ["com.zaihuishou.expandablerecycleradapter.adapter.BaseExpandableAdapter.expandParentListItem(java.lang.Object,int,boolean,boolean)", "java.util.List<java.lang.Object>.get(int)"], "Fixed commit": "6b29075199d7273837c49926e32c5699ca48f70a", "Url": "https://api.github.com/repos/zaihuishou/ExpandableRecyclerview", "Date": "2016-08-02T06:59:22Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { fr.obeo.dsl.debug.ide.sirius.ui.SiriusEditorUtils.showInstructions(((org.eclipse.sirius.ui.business.api.dialect.DialectEditor) (editorPart)), new java.util.ArrayList<org.eclipse.emf.ecore.EObject>(callers)); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8029/buggy-version/java_execution.java_engine.plugins.org.gemoc.execution.sequential.javaengine.ui.src.org.gemoc.execution.sequential.javaengine.ui.launcher.GemocDebugModelPresentation.java", "BodyUseAPI": ["fr.obeo.dsl.debug.ide.sirius.ui.SiriusEditorUtils.showInstructions(org.eclipse.ui.IEditorPart,java.util.ArrayList<org.eclipse.emf.ecore.EObject>)"], "Fixed commit": "778e795c393deb9f723f886f95d1b4cf8821fabd", "Url": "https://api.github.com/repos/gemoc/modelanimation", "Date": "2016-01-11T10:07:20Z"},
{"Line": "=>538", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Class<? extends org.checkerframework.framework.type.AnnotatedTypeMirror>[] classes = implicitFor.typeClasses(); for (java.lang.Class<? extends org.checkerframework.framework.type.AnnotatedTypeMirror> c : classes) { if (c.isInstance(atm)) return true; } java.lang.Class<?>[] names = implicitFor.typeNames(); for (java.lang.Class<?> c : names) { javax.lang.model.type.TypeMirror underlyingtype = atm.getUnderlyingType(); while (underlyingtype instanceof javax.lang.model.type.ArrayType) { underlyingtype = ((javax.lang.model.type.ArrayType) (underlyingtype)).getComponentType(); } if (c.getCanonicalName().equals(atm.getUnderlyingType().toString())) { return true; } } } catch (javax.lang.model.type.MirroredTypesException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1981/buggy-version/framework.src.org.checkerframework.common.signatureinference.SignatureInferenceScenes.java", "BodyUseAPI": ["org.checkerframework.framework.type.AnnotatedTypeMirror.getUnderlyingType()", "java.lang.Class<?>.getCanonicalName()", "java.lang.Class<? extends org.checkerframework.framework.type.AnnotatedTypeMirror>.isInstance(org.checkerframework.framework.type.AnnotatedTypeMirror)", "java.lang.String.equals(atm.getUnderlyingType().toString())", "org.checkerframework.framework.qual.ImplicitFor.typeClasses()", "org.checkerframework.framework.qual.ImplicitFor.typeNames()", "org.checkerframework.framework.type.AnnotatedTypeMirror.getUnderlyingType()", "atm.getUnderlyingType().toString()", "javax.lang.model.type.TypeMirror.getComponentType()"], "Fixed commit": "f1a3c663be47050f93cf255b6ad4c2dcfcdb0be9", "Url": "https://api.github.com/repos/pbsf/checker-framework", "Date": "2016-02-26T01:49:46Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { input.close(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1375/buggy-version/src.main.org.deidentifier.arx.io.ImportAdapterExcel.java", "BodyUseAPI": ["java.io.FileInputStream.close()"], "Fixed commit": "cdf83c2e1611c3c2f2e8ab8690cd2a7bba2be2f4", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2014-04-16T18:27:29Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { connection.close(); } catch (java.lang.IllegalStateException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/798/buggy-version/brokers.rabbitmq.src.main.java.uk.trainwatch.rabbitmq.Rabbit.java", "BodyUseAPI": ["uk.trainwatch.rabbitmq.RabbitConnection.close()"], "Fixed commit": "b2a5c3b63e945030eeaf2a12e653ae3d4e4f01ef", "Url": "https://api.github.com/repos/peter-mount/opendata", "Date": "2015-08-12T19:09:24Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((buffer.size()) >= (org.araqne.logdb.query.command.Stats.FLUSH_SIZE)) flush(); } catch (java.io.IOException e) { throw new java.lang.IllegalStateException((\"stats failed, query \" + (query)), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1155/buggy-version/araqne-logdb.src.main.java.org.araqne.logdb.query.command.Stats.java", "BodyUseAPI": ["org.araqne.logdb.query.command.Stats.flush()", "java.util.Map<org.araqne.logdb.query.command.Stats.KeyHolder, org.araqne.logdb.query.aggregator.AggregationFunction[]>.size()"], "Fixed commit": "6621b0f332a56fb9e5824898e64fbc574726bb46", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2016-03-01T08:34:15Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mOrientationWriter = new java.io.BufferedWriter(new java.io.FileWriter(mOrientationsFile)); mOrientationWriter.append(\"timestamp,yaw,pitch,roll\\n\"); } catch (java.io.IOException ioe) { android.util.Log.e(com.example.followthesun.CaptureActivity.TAG, (\"Could not create \" + (mOrientationsFile))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8066/buggy-version/src.com.example.followthesun.CaptureActivity.java", "BodyUseAPI": ["java.io.BufferedWriter.append(java.lang.String)"], "Fixed commit": "ab74e56e7e4fe82514123bf267bf850c23998701", "Url": "https://api.github.com/repos/chachi/FollowTheSun", "Date": "2013-11-28T03:01:20Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { writer.write(\"}\\n\\n\"); writer.close(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4876/buggy-version/src.main.java.writers.DataReaderWriter.java", "BodyUseAPI": ["java.io.BufferedWriter.write(java.lang.String)", "java.io.BufferedWriter.close()"], "Fixed commit": "b6744d3d9ddaa55f487b6a3253bbb8d4ea67ae62", "Url": "https://api.github.com/repos/art83UPM/TestFramework", "Date": "2015-06-15T10:41:18Z"},
{"Line": "=>562", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.os.Bundle bundle = intent.getExtras(); if (bundle != null) { int cellId = bundle.getInt(\"cid\"); int dbm = bundle.getInt(\"dbm\"); mMapFragment.addCircleOverlay((cellId + \"\"), mMapFragment.getLastLocation().getLatitude(), mMapFragment.getLastLocation().getLongitude(), dbm); } } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/3326/buggy-version/src.com.spideyapp.MainActivity.java", "BodyUseAPI": ["com.spideyapp.MainActivity.MapFragment.addCircleOverlay(java.lang.String,mMapFragment.getLastLocation().getLatitude(),mMapFragment.getLastLocation().getLongitude(),int)", "android.os.Bundle.getInt(java.lang.String)", "android.os.Bundle.getInt(java.lang.String)", "android.location.Location.getLatitude()", "com.spideyapp.MainActivity.MapFragment.getLastLocation()", "com.spideyapp.MainActivity.MapFragment.getLastLocation()", "android.content.Intent.getExtras()", "android.location.Location.getLongitude()"], "Fixed commit": "9d2475da47911dd51f9997bdaa21317b637ab111", "Url": "https://api.github.com/repos/jtakayama/spidey", "Date": "2014-11-12T17:46:09Z"},
{"Line": "=>402", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { net.maxgigapop.versans.nps.api.ServiceContract serviceContract = new net.maxgigapop.versans.nps.manager.JAXBHelper<net.maxgigapop.versans.nps.api.ServiceContract>(net.maxgigapop.versans.nps.api.ServiceContract.class).partialUnmarshal(contract.getContractXml()); contract.setCustomerSTPs(serviceContract.getCustomerSTP()); contract.setProviderSTP(serviceContract.getProviderSTP()); contract.setServicePolicies(serviceContract.getPolicyData()); } catch (javax.xml.bind.JAXBException ex) { log.error((((\"Contract ID:\" + (contract.getId())) + \" - fail to restore by marshalling contractXml into ServiceContract: \") + (ex.getMessage()))); throw new net.maxgigapop.versans.nps.api.ServiceException((((\"Contract ID:\" + (contract.getId())) + \" - fail to restore by marshalling contractXml into ServiceContract: \") + (ex.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8328/buggy-version/src.main.java.net.maxgigapop.versans.nps.manager.NPSContractManager.java", "BodyUseAPI": ["net.maxgigapop.versans.nps.manager.NPSContract.setServicePolicies(serviceContract.getPolicyData())", "net.maxgigapop.versans.nps.api.ServiceContract.getProviderSTP()", "net.maxgigapop.versans.nps.api.ServiceContract.getCustomerSTP()", "net.maxgigapop.versans.nps.api.ServiceContract.getPolicyData()", "net.maxgigapop.versans.nps.manager.NPSContract.getContractXml()", "net.maxgigapop.versans.nps.manager.NPSContract.setProviderSTP(serviceContract.getProviderSTP())", "net.maxgigapop.versans.nps.manager.JAXBHelper<net.maxgigapop.versans.nps.api.ServiceContract>.partialUnmarshal(contract.getContractXml())", "net.maxgigapop.versans.nps.manager.NPSContract.setCustomerSTPs(serviceContract.getCustomerSTP())"], "Fixed commit": "b63fa5b51956d87de18e131ac943b5bc72586182", "Url": "https://api.github.com/repos/RAINS-Project/VersaNS", "Date": "2014-11-17T20:19:34Z"},
{"Line": "=>468", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { try { if (!(addConnection())) { shutdown(); throw new java.lang.RuntimeException(\"Fail-fast during pool initialization\", lastConnectionFailure.getAndSet(null)); } com.zaxxer.hikari.proxy.ConnectionProxy connection = ((com.zaxxer.hikari.proxy.ConnectionProxy) (getConnection())); connection.getPoolBagEntry().evicted = (configuration.getMinimumIdle()) == 0; connection.close(); } catch (java.sql.SQLException e) { shutdown(); throw new java.lang.RuntimeException(\"Fail-fast during pool initialization\", e); } } catch (java.lang.InterruptedException ie) { throw new java.lang.RuntimeException(\"Fail-fast during pool initialization\", ie); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/9241/buggy-version/hikaricp-common.src.main.java.com.zaxxer.hikari.pool.BaseHikariPool.java", "BodyUseAPI": ["com.zaxxer.hikari.pool.BaseHikariPool.getConnection()", "java.util.concurrent.atomic.AtomicReference<java.lang.Throwable>.getAndSet(<nulltype>)", "com.zaxxer.hikari.proxy.ConnectionProxy.close()", "com.zaxxer.hikari.pool.BaseHikariPool.shutdown()", "com.zaxxer.hikari.pool.BaseHikariPool.shutdown()", "com.zaxxer.hikari.pool.BaseHikariPool.addConnection()", "com.zaxxer.hikari.proxy.ConnectionProxy.getPoolBagEntry()", "com.zaxxer.hikari.HikariConfig.getMinimumIdle()"], "Fixed commit": "266768718034992ee72992e2ec6a837e6cb4e44b", "Url": "https://api.github.com/repos/brettwooldridge/HikariCP", "Date": "2015-01-24T07:00:12Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.stormpath.sdk.account.Account account = application.resetPassword(sptoken, password); if (autoLogin) { final com.stormpath.sdk.authc.AuthenticationResult result = new com.stormpath.sdk.servlet.authc.impl.TransientAuthenticationResult(account); this.authenticationResultSaver.set(request, response, result); next = loginNextUri; }else { next = this.nextUri; } } catch (java.lang.Exception e) { next = errorUri; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2808/buggy-version/extensions.servlet.src.main.java.com.stormpath.sdk.servlet.mvc.ChangePasswordController.java", "BodyUseAPI": ["com.stormpath.sdk.application.Application.resetPassword(java.lang.String,java.lang.String)", "com.stormpath.sdk.servlet.http.Saver<com.stormpath.sdk.authc.AuthenticationResult>.set(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.stormpath.sdk.authc.AuthenticationResult)"], "Fixed commit": "46566e006265b82d1feba860e1e622f0ebdf7dba", "Url": "https://api.github.com/repos/stormpath/stormpath-sdk-java", "Date": "2016-07-13T17:31:25Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.cook_e.cook_e.App.getAccessor().persistRecipe(recipe); } catch (java.sql.SQLException e) { new android.app.AlertDialog.Builder(this).setTitle(\"Failed to save recipe\").setMessage(e.getLocalizedMessage()).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6573/buggy-version/app.src.main.java.org.cook_e.cook_e.CreateRecipe.java", "BodyUseAPI": ["org.cook_e.cook_e.App.getAccessor().persistRecipe(org.cook_e.data.Recipe)", "org.cook_e.cook_e.App.getAccessor()"], "Fixed commit": "4334a6b1199a92f71bc5ca43524a1c6da0b90334", "Url": "https://api.github.com/repos/Cook-E-team/Cook-E", "Date": "2016-02-21T07:26:40Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.magic.tools.InstallCert.install(\"api.deckbrew.com\", MTGControler.KEYSTORE_NAME, MTGControler.KEYSTORE_PASS); java.lang.System.setProperty(\"javax.net.ssl.trustStore\", new java.io.File(org.magic.services.MTGControler.CONF_DIR, org.magic.services.MTGControler.KEYSTORE_NAME).getAbsolutePath()); } catch (java.lang.Exception e1) { org.magic.api.providers.impl.DeckbrewProvider.logger.error(e1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7738/buggy-version/src.org.magic.api.providers.impl.DeckbrewProvider.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()", "org.magic.tools.InstallCert.install(java.lang.String,MTGControler.KEYSTORE_NAME,MTGControler.KEYSTORE_PASS)", "java.lang.System.setProperty(java.lang.String,java.lang.String)"], "Fixed commit": "675f4211e29099d409edaf47cee9ad219496a143", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2017-03-28T14:23:09Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String s = mapper.writeValueAsString(o); java.lang.System.out.println(s); } catch (com.fasterxml.jackson.core.JsonProcessingException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3793/buggy-version/src.main.java.sk.fei.stuba.xpivarcim.producer.Producer.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.ObjectMapper.writeValueAsString(java.lang.Object)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "99562d6429afaf26c2eafa04c802b3c6e237924a", "Url": "https://api.github.com/repos/matwej/thesis", "Date": "2016-05-27T14:26:21Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return listSites(site_pk, null, dateStr, unlisted).get(0); } catch (final java.lang.IndexOutOfBoundsException e) { throw new javax.ws.rs.NotFoundException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6650/buggy-version/src.main.java.org.ccjmne.faomaintenance.api.rest.ResourcesEndpoint.java", "BodyUseAPI": ["org.ccjmne.faomaintenance.api.rest.ResourcesEndpoint.listSites(java.lang.String,<nulltype>,java.lang.String,boolean)", "org.jooq.Result<org.jooq.Record>.get(int)"], "Fixed commit": "c78b12e0f4772c29007c4c6fec0c8bc558665b09", "Url": "https://api.github.com/repos/ccjmne/orca-api", "Date": "2017-03-30T12:38:09Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return listEmployees(empl_pk, null, null, null, dateStr, Constants.FIELDS_ALL).get(0); } catch (final java.lang.IndexOutOfBoundsException e) { throw new javax.ws.rs.NotFoundException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6650/buggy-version/src.main.java.org.ccjmne.faomaintenance.api.rest.ResourcesEndpoint.java", "BodyUseAPI": ["org.jooq.Result<? extends org.jooq.Record>.get(int)", "org.ccjmne.faomaintenance.api.rest.ResourcesEndpoint.listEmployees(java.lang.String,<nulltype>,<nulltype>,<nulltype>,java.lang.String,Constants.FIELDS_ALL)"], "Fixed commit": "c78b12e0f4772c29007c4c6fec0c8bc558665b09", "Url": "https://api.github.com/repos/ccjmne/orca-api", "Date": "2017-03-30T12:38:09Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return listDepartments(dept_pk, dateStr, unlisted).get(0); } catch (final java.lang.IndexOutOfBoundsException e) { throw new javax.ws.rs.NotFoundException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6650/buggy-version/src.main.java.org.ccjmne.faomaintenance.api.rest.ResourcesEndpoint.java", "BodyUseAPI": ["org.ccjmne.faomaintenance.api.rest.ResourcesEndpoint.listDepartments(java.lang.Integer,java.lang.String,boolean)", "org.jooq.Result<? extends org.jooq.Record>.get(int)"], "Fixed commit": "c78b12e0f4772c29007c4c6fec0c8bc558665b09", "Url": "https://api.github.com/repos/ccjmne/orca-api", "Date": "2017-03-30T12:38:09Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { sku = java.net.URLEncoder.encode(sku, \"UTF-8\"); sku = sku.replace(\"+\", \"%20\"); } catch (java.io.UnsupportedEncodingException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8555/buggy-version/imixs-adapters-magento-ejb.src.main.java.org.imixs.workflow.magento.rest.MagentoRestClient.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "java.net.URLEncoder.encode(java.lang.String,java.lang.String)"], "Fixed commit": "3872f8b0831eb1c1ec566a1a47147c01e54703b4", "Url": "https://api.github.com/repos/imixs/imixs-adapters", "Date": "2014-09-03T15:28:24Z"},
{"Line": "=>1535", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { secTwitter.createFavorite(tweetId); } catch (com.klinker.android.twitter.ui.tweet_viewer.fragments.TwitterException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5767/buggy-version/src.main.java.com.klinker.android.twitter.ui.tweet_viewer.fragments.TweetFragment.java", "BodyUseAPI": ["com.klinker.android.twitter.ui.tweet_viewer.fragments.Twitter.createFavorite(long)"], "Fixed commit": "7dad696f9e472216e6baa78d151caec8477c0672", "Url": "https://api.github.com/repos/klinker24/talon-twitter-holo", "Date": "2015-01-28T23:04:44Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (wb instanceof org.apache.poi.hssf.usermodel.HSSFWorkbook) { return getHSSFPictruesMap(((org.apache.poi.hssf.usermodel.HSSFWorkbook) (wb))); }else if (wb instanceof org.apache.poi.xssf.usermodel.XSSFWorkbook) { return getXSSFPictruesMap(((org.apache.poi.xssf.usermodel.XSSFWorkbook) (wb))); } } catch (java.lang.Exception e) { e.printStackTrace(); com.tiefaces.components.websheet.TieWebSheetPicturesHelper.debug((\"Web Form getPictruesMap Error Exception = \" + (e.getLocalizedMessage()))); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6534/buggy-version/src.com.tiefaces.components.websheet.TieWebSheetPicturesHelper.java", "BodyUseAPI": ["com.tiefaces.components.websheet.TieWebSheetPicturesHelper.getXSSFPictruesMap(org.apache.poi.ss.usermodel.Workbook)", "com.tiefaces.components.websheet.TieWebSheetPicturesHelper.getHSSFPictruesMap(org.apache.poi.ss.usermodel.Workbook)"], "Fixed commit": "cb13e3ea578d52398c4ca70d15772045f8a5816f", "Url": "https://api.github.com/repos/tiefaces/TieFaces", "Date": "2015-11-10T18:30:23Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { new it.polimi.dima.bookshare.amazon.DynamoDBManager(context).updateBookRequest(bookRequest); } catch (android.os.NetworkOnMainThreadException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4564/buggy-version/app.src.main.java.it.polimi.dima.bookshare.adapters.RequestsAdapter.java", "BodyUseAPI": ["it.polimi.dima.bookshare.amazon.DynamoDBManager.updateBookRequest(it.polimi.dima.bookshare.tables.BookRequest)"], "Fixed commit": "8f657a3b55d08d2f41cc5cc0c132d103ee163b21", "Url": "https://api.github.com/repos/alessioros/BookShare", "Date": "2016-07-09T19:52:14Z"},
{"Line": "=>941", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { startActivityForResult(intent, 0); } catch (android.content.ActivityNotFoundException e) { sendToast((\"Error loading wallpaper chooser,\\n\" + \"please set manually.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1307/buggy-version/app.src.main.java.cw.kop.autobackground.sources.SourceListFragment.java", "BodyUseAPI": ["cw.kop.autobackground.sources.SourceListFragment.startActivityForResult(android.content.Intent,int)"], "Fixed commit": "4e77a7d9d65ebe4995c5fbe464941ea1fa50af86", "Url": "https://api.github.com/repos/TheKeeperOfPie/AutoBackground", "Date": "2015-03-04T22:50:11Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { canonicalPath = f.getCanonicalPath(); canonicalPath.replaceAll(\"\\\\\\\\\", \"/\"); this.evaluator.eval(((\"load(\\\"\" + canonicalPath) + \"\\\")\"), null); } catch (net.walterhiggins.scriptcraft.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3197/buggy-version/bukkit.ScriptCraft.src.net.walterhiggins.scriptcraft.ScriptCraftPlugin.java", "BodyUseAPI": ["net.walterhiggins.scriptcraft.ScriptCraftEvaluator.eval(java.lang.String,<nulltype>)", "java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.io.File.getCanonicalPath()"], "Fixed commit": "f02aa891c30cf81e8a2903e0be01856f0d6cc0dd", "Url": "https://api.github.com/repos/walterhiggins/ScriptCraft", "Date": "2013-01-05T08:18:23Z"},
{"Line": "=>3451", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { comboBox.reload(true); } catch (final java.lang.Exception ex) { de.cismet.belis.broker.BelisBroker.LOG.warn(\"exception while comboBox.reload(true)\", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7214/buggy-version/src.main.java.de.cismet.belis.broker.BelisBroker.java", "BodyUseAPI": ["de.cismet.cids.editors.DefaultBindableReferenceCombo.reload(boolean)"], "Fixed commit": "456215429e7d7c3b1e15b50e983804e4683983b0", "Url": "https://api.github.com/repos/cismet/belis-client", "Date": "2014-02-24T07:58:20Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { v = q.poll(); } catch (java.lang.Throwable ex) { rsc.util.ExceptionHelper.throwIfFatal(ex); s.cancel(); for (org.reactivestreams.Subscriber<? super T> s : a) { s.onError(ex); } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7299/buggy-version/src.main.java.rsc.parallel.ParallelUnorderedSource.java", "BodyUseAPI": ["java.util.Queue<T>.poll()"], "Fixed commit": "9a990791662381703c6732c4f71d014d400ca9ee", "Url": "https://api.github.com/repos/reactor/reactive-streams-commons", "Date": "2016-07-04T07:58:49Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Class.forName(\"org.apache.derby.jdbc.EmbeddedDriver\").newInstance(); } catch (java.lang.InstantiationException | java.lang.IllegalAccessException | java.lang.ClassNotFoundException e) { e.printStackTrace(); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7470/buggy-version/src.edu.umass.cs.gnsclient.client.util.DerbyControl.java", "BodyUseAPI": ["java.lang.Class.forName(java.lang.String)", "java.lang.Class<?>.newInstance()"], "Fixed commit": "84285517b09b97f37876c2961b6527922e0d3d01", "Url": "https://api.github.com/repos/MobilityFirst/GNS", "Date": "2016-01-27T17:12:26Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((rpslObject.findAttribute(AttributeType.E_MAIL).getValue().trim()) != \"\") { ezvcard.types.EmailType et = new ezvcard.types.EmailType(rpslObject.findAttribute(AttributeType.E_MAIL).getValue().trim()); vCard.addEmail(et); } } catch (java.lang.Exception e) { java.lang.System.out.println(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3662/buggy-version/whois-api.src.main.java.net.ripe.db.whois.api.whois.RdapObjectMapper.java", "BodyUseAPI": ["rpslObject.findAttribute(AttributeType.E_MAIL).getValue()", "net.ripe.db.whois.common.rpsl.RpslObject.findAttribute(AttributeType.E_MAIL)", "rpslObject.findAttribute(AttributeType.E_MAIL).getValue().trim()", "rpslObject.findAttribute(AttributeType.E_MAIL).getValue()", "ezvcard.VCard.addEmail(ezvcard.types.EmailType)", "rpslObject.findAttribute(AttributeType.E_MAIL).getValue().trim()", "net.ripe.db.whois.common.rpsl.RpslObject.findAttribute(AttributeType.E_MAIL)"], "Fixed commit": "5e79226ba9d7ac3b6caa03139b3e1409e2737817", "Url": "https://api.github.com/repos/APNIC-net/whois", "Date": "2013-06-24T00:28:00Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { subgroup = java.lang.Integer.parseInt(filteredReplacementRows.get(2).text()); } catch (java.lang.NumberFormatException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5190/buggy-version/src.main.java.ru.jeki.schedulenow.parsers.ReplacementsParser.java", "BodyUseAPI": ["java.lang.Integer.parseInt(filteredReplacementRows.get(2).text())", "org.jsoup.select.Elements.get(int)", "filteredReplacementRows.get(2).text()"], "Fixed commit": "66d72a823439a1f39b79d8c92aaa51fa95a69e2f", "Url": "https://api.github.com/repos/jekisaq/ScheduleNow", "Date": "2016-10-08T16:07:52Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(100); textView.setText(textViewStringByTTLValue()); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8726/buggy-version/app.src.main.java.com.example.bzennn.tetheringhotspot.MainActivity.java", "BodyUseAPI": ["com.example.bzennn.tetheringhotspot.MainActivity.textViewStringByTTLValue()", "java.lang.Thread.sleep(int)", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "62824000ade457902b979731db4be507779e5a4c", "Url": "https://api.github.com/repos/bzennn/TetheringHotspot", "Date": "2017-03-14T12:10:19Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { clientSocket.close(); } catch (java.io.IOException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1401/buggy-version/src.DistGrep.ConnectionHandler.java", "BodyUseAPI": ["java.net.Socket.close()"], "Fixed commit": "73c54469545683683ee4903a89ea1bb18b336a1e", "Url": "https://api.github.com/repos/knusbaum/DistributedGrep", "Date": "2013-09-16T02:27:42Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { doc = builderFactory.newDocumentBuilder().parse(stream); } finally { stream.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7332/buggy-version/java.java-impl.src.com.intellij.jarFinder.FindJarFix.java", "BodyUseAPI": ["javax.xml.parsers.DocumentBuilderFactory.newDocumentBuilder()", "javax.xml.parsers.DocumentBuilder.parse(java.io.InputStream)"], "Fixed commit": "70745523861ff113cccb4e549380f84cbf7d469c", "Url": "https://api.github.com/repos/JetBrains/intellij-community", "Date": "2013-10-15T14:58:41Z"},
{"Line": "=>5012", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.awt.Component c = super.prepareRenderer(renderer, rowIndex, vColIndex); if (c instanceof javax.swing.JComponent) { javax.swing.JComponent jc = ((javax.swing.JComponent) (c)); java.lang.String tooltip = getTooltipCell(rowIndex, vColIndex); jc.setToolTipText(tooltip); } return c; } catch (java.lang.Exception e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4917/buggy-version/FWCommon.src.ar.com.fwcommon.componentes.FWJTable.java", "BodyUseAPI": ["javax.swing.JTable.prepareRenderer(javax.swing.table.TableCellRenderer,int,int)", "ar.com.fwcommon.componentes.FWJTable.getTooltipCell(int,int)", "javax.swing.JComponent.setToolTipText(java.lang.String)"], "Fixed commit": "f8923861eb061da3296caadaee910ab4fbe7bad4", "Url": "https://api.github.com/repos/nacho270/GTL", "Date": "2016-02-13T13:45:45Z"},
{"Line": "=>495", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.parse.ParseUser.getCurrentUser().save(); } catch (com.parse.ParseException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4282/buggy-version/app.src.main.java.com.jktdeals.deals.parse.ParseInterface.java", "BodyUseAPI": ["com.parse.ParseUser.getCurrentUser()", "com.parse.ParseUser.getCurrentUser().save()"], "Fixed commit": "978cb4632fedc98362058da7ff6ad992562c7374", "Url": "https://api.github.com/repos/jktdeals/Deals", "Date": "2016-03-20T08:06:59Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return git.reset().setMode(ResetType.HARD).setRef(\"master\").call().getObjectId().name(); } catch (org.eclipse.jgit.api.errors.CheckoutConflictException e) { throw new java.io.IOException(\"not able to perform a hard reset\", e); } catch (org.eclipse.jgit.api.errors.GitAPIException e) { throw new java.io.IOException(\"problem executing reset command\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6660/buggy-version/src.main.java.org.jenkinsci.plugins.scriptler.git.GitScriptlerRepository.java", "BodyUseAPI": ["git.reset().setMode(ResetType.HARD).setRef(\"master\").call().getObjectId().name()", "git.reset().setMode(ResetType.HARD).setRef(\"master\").call()", "org.eclipse.jgit.api.Git.reset()", "git.reset().setMode(ResetType.HARD).setRef(java.lang.String)", "git.reset().setMode(ResetType.HARD).setRef(\"master\").call().getObjectId()", "git.reset().setMode(ResetType.HARD)"], "Fixed commit": "e7bc6e7fe95c48223a85ea9daf44b09d612df0d8", "Url": "https://api.github.com/repos/jenkinsci/scriptler-plugin", "Date": "2014-02-10T18:47:26Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { while ((theid) == null) { theid = get_id(); java.lang.System.out.println(\"cant get id\"); } number_of_comments = theid.id_for_master; } catch (java.lang.NullPointerException e) { java.lang.System.out.println(\"can't get id object\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4931/buggy-version/LocationApp.src.com.example1.locationapp.MainActivity.java", "BodyUseAPI": ["com.example1.locationapp.MainActivity.1.get_id()", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "77511a7ad0ed2580f89dc0a69f083cb749f7e67b", "Url": "https://api.github.com/repos/CMPUT301W14T11/Team11Prototype", "Date": "2014-03-09T00:46:40Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { obj = getNode(); } catch (org.structr.rest.exception.NotFoundException nfex1) { try { obj = getRelationship(); } catch (org.structr.rest.exception.NotFoundException nfex2) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5134/buggy-version/structr.structr-rest.src.main.java.org.structr.rest.resource.UuidResource.java", "BodyUseAPI": ["org.structr.rest.resource.UuidResource.getNode()"], "Fixed commit": "5ac992229fea2d3851e1b6b67365320493c89dc1", "Url": "https://api.github.com/repos/structr/structr", "Date": "2012-06-02T12:47:17Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.analysis(question_type); this.xmlhandler.marshaller(this.hotel); } catch (java.lang.Exception err) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7038/buggy-version/src.hotel_helpdesk.ProcessorXML.java", "BodyUseAPI": ["hotel_helpdesk.ProcessorXML.analysis(int)", "hotel_helpdesk.JAXB_XMLParser.marshaller(hotel_helpdesk.HotelInfo)"], "Fixed commit": "9dab0c9f7a66c2a856dad28160b30e30d63c0e60", "Url": "https://api.github.com/repos/GroupMasters/Hotel-Robot-HelpDeskp", "Date": "2014-12-14T14:40:52Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { callBack.onSuccess(call, body); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/922/buggy-version/src.main.java.com.fei.feilib.util.OkHttpUtil.java", "BodyUseAPI": ["com.fei.feilib.util.OkHttpUtil.ResultCallBack.onSuccess(okhttp3.Call,java.lang.String)"], "Fixed commit": "a794c2b6c3b366c2adde40f81def3762e3613412", "Url": "https://api.github.com/repos/FreedomFei/feilib", "Date": "2017-01-03T02:08:27Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { newServer.port = java.lang.Integer.parseInt(serverPort); } catch (java.lang.NumberFormatException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8762/buggy-version/src.com.pentacog.mctracker.MCServerTrackerActivity.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "a1ddded24cde676426fcc4ce69866c004de92d96", "Url": "https://api.github.com/repos/viperwarp/MCServerTracker", "Date": "2011-11-13T03:41:42Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { server.port = java.lang.Integer.parseInt(serverPort); } catch (java.lang.NumberFormatException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8762/buggy-version/src.com.pentacog.mctracker.MCServerTrackerActivity.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "a1ddded24cde676426fcc4ce69866c004de92d96", "Url": "https://api.github.com/repos/viperwarp/MCServerTracker", "Date": "2011-11-13T03:41:42Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { timestamp = eu.qualimaster.dataManagement.common.replay.ReplayUtils.getTimestamp(fields[idx], value); } catch (java.lang.Exception e) { eu.qualimaster.dataManagement.sinks.replay.ReplayDataOutput.log.warn(((\"Error in converting timestamp: \" + value) + \". Return 0L. This might cause loss of replay data\")); timestamp = 0L; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/567/buggy-version/DataManagementLayer.src.main.java.eu.qualimaster.dataManagement.sinks.replay.ReplayDataOutput.java", "BodyUseAPI": ["eu.qualimaster.dataManagement.common.replay.ReplayUtils.getTimestamp(fields[idx],java.lang.String)"], "Fixed commit": "84fac14ba25784cb661c89bb9ee817409b3659e7", "Url": "https://api.github.com/repos/QualiMaster/Infrastructure", "Date": "2017-02-09T15:59:49Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (((objectToUpdate.getId()) == (com.delivery.persistent.OptionalDao.INVALID_ID)) || ((objectToUpdate.getPrice()) <= 0)) { return 0; } java.lang.String sql = ((((((((((((\"UPDATE \" + (com.delivery.persistent.OptionalDao.TABLE_NAME)) + \" SET \") + (com.delivery.persistent.OptionalDao.COLUMN_PRICE)) + \"=\") + (objectToUpdate.getPrice())) + \", \") + (com.delivery.persistent.OptionalDao.COLUMN_NAME)) + \"='\") + (objectToUpdate.getName())) + \"' WHERE \") + (com.delivery.persistent.OptionalDao.COLUMN_ID)) + \"=\") + (objectToUpdate.getId()); stm = mConnection.createStatement(); updated = stm.executeUpdate(sql); } catch (java.sql.SQLException e) { com.delivery.Logger.error(\"Erro ao editar opcional\", e); throw e; } finally { if (stm != null) { try { stm.close(); } catch (java.sql.SQLException ignore) { } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2665/buggy-version/src.com.delivery.persistent.OptionalDao.java", "BodyUseAPI": ["com.delivery.menu.Optional.getPrice()", "com.delivery.menu.Optional.getId()", "com.delivery.persistent.OptionalDao.createStatement()", "java.sql.Statement.executeUpdate(java.lang.String)", "com.delivery.menu.Optional.getName()", "com.delivery.menu.Optional.getId()", "com.delivery.menu.Optional.getPrice()"], "Fixed commit": "964dd29a9b43c99d9f45d8732ceab34770bc4557", "Url": "https://api.github.com/repos/tibagni/Delivery", "Date": "2012-06-19T02:26:46Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((args.length) != 0) s = new seg.project.checkers.gui.ConnecterGUI(java.lang.Integer.parseInt(args[0])); else s = new seg.project.checkers.gui.ConnecterGUI(seg.project.checkers.CheckersServer.DEFAULT_PORT); s.setVisible(true); } catch (java.net.BindException e) { java.lang.String input = javax.swing.JOptionPane.showInputDialog(\"Port is in use please enter another port\"); if (input == null) java.lang.System.exit(0); int port = java.lang.Integer.parseInt(input); s = new seg.project.checkers.gui.ConnecterGUI(port); s.setVisible(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1336/buggy-version/src.seg.project.checkers.gui.ConnecterGUI.java", "BodyUseAPI": ["seg.project.checkers.gui.ConnecterGUI.setVisible(boolean)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "32b9c8f56bb0be9823cf75a6ce85bb143ef3291b", "Url": "https://api.github.com/repos/PeteZa/CheckersGame", "Date": "2012-11-23T20:39:59Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(1000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5970/buggy-version/agent-parent.plugins.executor-plugin.src.main.java.org.glowroot.agent.plugin.executor.ExecutorAspect.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "bf1aa6931e9603c9a432f81a533b4a17562c6ad5", "Url": "https://api.github.com/repos/trask/glowroot", "Date": "2016-06-26T22:18:03Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.springframework.util.ReflectionUtils.doWithFields(java.lang.Class.forName(clz), new org.springframework.util.ReflectionUtils.FieldCallback() { @java.lang.Override public void doWith(java.lang.reflect.Field field) throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException { if (field.isAnnotationPresent(org.springframework.beans.factory.annotation.Value.class)) list.add(field.getAnnotation(org.springframework.beans.factory.annotation.Value.class).value()); } }); } catch (java.lang.NoClassDefFoundError e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2247/buggy-version/src.org.ironrhino.core.spring.ApplicationContextInspector.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(field.getAnnotation(org.springframework.beans.factory.annotation.Value.class).value())", "java.lang.reflect.Field.getAnnotation(java.lang.Class)", "T.value()", "org.springframework.util.ReflectionUtils.doWithFields(java.lang.Class<?>,org.springframework.util.ReflectionUtils.FieldCallback)", "java.lang.Class.forName(java.lang.String)", "java.lang.reflect.Field.isAnnotationPresent(java.lang.Class)"], "Fixed commit": "12137cc9476d77ebd95225d12444136d26de964a", "Url": "https://api.github.com/repos/ironrhino/ironrhino", "Date": "2016-11-14T05:22:01Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { computeFullName(timesheetLine); return super.save(timesheetLine); } catch (java.lang.Exception e) { throw new javax.persistence.PersistenceException(e.getLocalizedMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5049/buggy-version/axelor-human-resource.src.main.java.com.axelor.apps.hr.db.repo.TimesheetLineHRRepository.java", "BodyUseAPI": ["com.axelor.apps.hr.db.repo.TimesheetLineHRRepository.computeFullName(com.axelor.apps.hr.db.TimesheetLine)", "com.axelor.apps.hr.db.repo.TimesheetLineRepository.save(com.axelor.apps.hr.db.TimesheetLine)"], "Fixed commit": "fa45d5b63a524adda306e6bfb95b69854a614bb0", "Url": "https://api.github.com/repos/axelor/axelor-business-suite", "Date": "2016-06-03T10:13:51Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { testString = note.getString(note.getColumnIndexOrThrow(DatumsDbAdapter.KEY_FIELD1)); } catch (java.lang.Exception e) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8440/buggy-version/src.org.lingsync.elicitation.collection.GalleryView.java", "BodyUseAPI": ["android.database.Cursor.getString(note.getColumnIndexOrThrow(DatumsDbAdapter.KEY_FIELD1))", "android.database.Cursor.getColumnIndexOrThrow(DatumsDbAdapter.KEY_FIELD1)"], "Fixed commit": "cfa2bfb7d200c86b717a8624bfe87772947a6a6a", "Url": "https://api.github.com/repos/senhorzinho/AndroidFieldDBElicitationRecorder", "Date": "2013-07-09T00:51:33Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { p.setPrice(java.lang.Double.parseDouble(charSequence.toString())); } catch (java.lang.Exception e) { p.setPrice(0.0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6641/buggy-version/app.src.main.java.com.keltonkarboviak.shoppogen.ProductsAdapter.java", "BodyUseAPI": ["com.keltonkarboviak.shoppogen.Models.Product.setPrice(double)", "java.lang.Double.parseDouble(java.lang.String)", "java.lang.CharSequence.toString()"], "Fixed commit": "53174c893cab076496f6040d55f11c9553924244", "Url": "https://api.github.com/repos/KeltonKarboviak/Csci513_2", "Date": "2017-12-05T19:30:59Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { themail.send(); } catch (org.tinystruct.ApplicationException e) { subscription.setAvailable(false); subscription.update(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5433/buggy-version/resources.custom.application.dailymail.java", "BodyUseAPI": ["org.tinystruct.mail.SimpleMail.send()"], "Fixed commit": "26c2652a5facdd62337d09d35787ad51ab454472", "Url": "https://api.github.com/repos/m0ver/mobile1.0", "Date": "2014-09-19T16:22:02Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String result = rest.getForObject(query, java.lang.String.class); com.nicusa.util.FieldFinder finder = new com.nicusa.util.FieldFinder(\"term\"); return finder.find(result); } catch (org.springframework.web.client.HttpClientErrorException notFound) { if ((notFound.getStatusCode()) == (org.springframework.http.HttpStatus.NOT_FOUND)) { com.nicusa.controller.DrugController.log.warn((\"[getUniisByName] No uniis with name \" + name)); return java.util.Collections.emptySet(); } throw notFound; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1196/buggy-version/src.main.java.com.nicusa.controller.DrugController.java", "BodyUseAPI": ["com.nicusa.util.FieldFinder.find(java.lang.String)", "org.springframework.web.client.RestTemplate.getForObject(java.lang.String,java.lang.Class)"], "Fixed commit": "022e85efb7dd25176d3e890bbccc31f1e15a433d", "Url": "https://api.github.com/repos/teddarcuri/unikitty", "Date": "2015-06-25T19:40:17Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.net.Socket clientSocket = new java.net.Socket(\"localhost\", Client.serverPort); sentence = \"\"; modifiedSentence = \"\"; java.io.DataOutputStream outToServer = new java.io.DataOutputStream(clientSocket.getOutputStream()); sentence = \"ACK\"; outToServer.writeBytes(sentence); } catch (java.io.IOException e) { java.lang.System.err.println((\"IOException \" + e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2034/buggy-version/SupportGroup.Client.java", "BodyUseAPI": ["java.io.DataOutputStream.writeBytes(java.lang.String)", "java.net.Socket.getOutputStream()"], "Fixed commit": "922464ec6b94ae71d1462c330c5bfade96508366", "Url": "https://api.github.com/repos/02rbowler/FaultTolerant", "Date": "2016-12-02T14:31:44Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { c.addStudentGroup(groupName); } catch (us.absencemanager.exceptions.AlreadyExistsException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5809/buggy-version/us.absencemanager.src.us.absencemanager.ui.dragonstoneui.MainFrame.java", "BodyUseAPI": ["us.absencemanager.controller.Controller.addStudentGroup(java.lang.String)"], "Fixed commit": "f6075cc266ee67b2237dcf9fba148e4b0cb8b064", "Url": "https://api.github.com/repos/Zinadore/AbsenceManager", "Date": "2015-06-03T06:32:39Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { byte[] rawData = new byte[((int) (message.getBodyLength()))]; message.readBytes(rawData); return io.amaze.bench.shared.jms.JMSHelper.convertFromBytes(rawData); } catch (javax.jms.JMSException e) { throw new java.io.IOException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3326/buggy-version/shared.src.main.java.io.amaze.bench.shared.jms.JMSHelper.java", "BodyUseAPI": ["javax.jms.BytesMessage.readBytes(byte[])", "javax.jms.BytesMessage.getBodyLength()", "io.amaze.bench.shared.jms.JMSHelper.convertFromBytes(byte[])"], "Fixed commit": "e0f30e6adaf6eb65012530b4cee7e7743157944c", "Url": "https://api.github.com/repos/florentw/bench", "Date": "2016-03-26T21:26:56Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { Number.save(); } catch (java.lang.Exception e) { android.util.Log.d(\"asd\", e.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4541/buggy-version/app.src.main.java.com.blacklist.start.blacklist.AddNumberActivity.java", "BodyUseAPI": ["model.NumberList.save()"], "Fixed commit": "f58eb0f3184e1a49feb3fcaf00f04b7d48a8bbec", "Url": "https://api.github.com/repos/mountin/blacklist2", "Date": "2015-07-02T12:58:21Z"},
{"Line": "=>945", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { net.pms.PMS.getConfiguration().initCred(); } catch (java.io.IOException e) { net.pms.PMS.LOGGER.debug(\"error with cred file during startup\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4648/buggy-version/src.main.java.net.pms.PMS.java", "BodyUseAPI": ["net.pms.configuration.PmsConfiguration.initCred()", "net.pms.PMS.getConfiguration()"], "Fixed commit": "de755db872fe9287200f7f324a629ba41d7e6435", "Url": "https://api.github.com/repos/UniversalMediaServer/UniversalMediaServer", "Date": "2012-11-24T12:38:55Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { declaredField.set(t, getFieldValue(declaredField, index)); } catch (final java.lang.IllegalArgumentException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7706/buggy-version/src.main.java.com.github.kuros.random.jpa.random.RandomizeImpl.java", "BodyUseAPI": ["java.lang.reflect.Field.set(T,java.lang.Object)", "com.github.kuros.random.jpa.random.RandomizeImpl.getFieldValue(java.lang.reflect.Field,int)"], "Fixed commit": "f4c06f67b7968c353e246c2beb4f7ec1acaa8154", "Url": "https://api.github.com/repos/kuros/random-jpa", "Date": "2017-10-08T16:07:12Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { cells2 = blocks.remove(((blocks.size()) - 1)); } catch (java.lang.IndexOutOfBoundsException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3727/buggy-version/src.projectboarding.SeatingMethod.java", "BodyUseAPI": ["java.util.ArrayList<java.util.ArrayList<projectboarding.Cell>>.size()", "java.util.ArrayList<java.util.ArrayList<projectboarding.Cell>>.remove(((blocks.size()) - 1))"], "Fixed commit": "67df114ed0093f88a2485b4c6ed275f01c5d0442", "Url": "https://api.github.com/repos/VirginAir/Project-Boarding", "Date": "2014-12-01T18:11:55Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mId = s.nextInt(); } catch (java.lang.Exception e) { java.lang.System.err.println(\"Id must be a number\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1200/buggy-version/src.Menu.java", "BodyUseAPI": ["java.util.Scanner.nextInt()"], "Fixed commit": "608cb0d25e23b0890d0a78b35e2e92c80655b051", "Url": "https://api.github.com/repos/kokoreko/WarGames", "Date": "2014-08-26T11:29:36Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { findTask(name); java.lang.System.out.println(name.toString()); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1707/buggy-version/src.toDoProject.ToDoList.java", "BodyUseAPI": ["java.lang.String.toString()", "java.io.PrintStream.println(java.lang.String)", "toDoProject.ToDoList.findTask(java.lang.String)"], "Fixed commit": "93cf3734e00d85bc6a33ba4be98dc533fe5ee59c", "Url": "https://api.github.com/repos/Shobre/toDoProject", "Date": "2017-11-01T15:16:48Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { decryption = true; privK = ((Encryption.HomomorphicPrivateKey) (key)); ois = new java.io.ObjectInputStream(java.nio.file.Files.newInputStream(publicKeyPath)); pubK = ((Encryption.HomomorphicPublicKey) (ois.readObject())); n = pubK.getN(); lamda = privK.getLamda(); g = pubK.getG(); m = privK.getM(); } catch (java.lang.Exception ex) { java.util.logging.Logger.getLogger(Encryption.AdHoPuK.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); } finally { try { ois.close(); } catch (java.io.IOException ex) { java.util.logging.Logger.getLogger(Encryption.AdHoPuK.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2986/buggy-version/src.Encryption.AdHoPuK.java", "BodyUseAPI": ["java.nio.file.Files.newInputStream(java.nio.file.Path)", "Encryption.HomomorphicPublicKey.getG()", "Encryption.HomomorphicPublicKey.getN()", "Encryption.HomomorphicPrivateKey.getM()", "java.io.ObjectInputStream.readObject()", "Encryption.HomomorphicPrivateKey.getLamda()"], "Fixed commit": "a8441c25aa384fd57d29c24acf9029592a226dfc", "Url": "https://api.github.com/repos/M3f1st0/ORA_Server", "Date": "2016-05-22T16:48:48Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (ctx.getChannel().isWritable()) { com.rackspacecloud.blueflood.inputs.handlers.HttpMetricsIngestionServer.log.debug((((\"request decoder error \" + (e.getCause().toString())) + \" on channel \") + (ctx.getChannel().toString()))); ctx.getChannel().write(new org.jboss.netty.handler.codec.http.DefaultHttpResponse(org.jboss.netty.handler.codec.http.HttpVersion.HTTP_1_1, org.jboss.netty.handler.codec.http.HttpResponseStatus.BAD_REQUEST)).addListener(ChannelFutureListener.CLOSE); }else { com.rackspacecloud.blueflood.inputs.handlers.HttpMetricsIngestionServer.log.debug(((\"channel \" + (ctx.getChannel().toString())) + \" is no longer writeable, not sending 400 response back to client\")); } } catch (java.lang.Exception ex) { com.rackspacecloud.blueflood.inputs.handlers.HttpMetricsIngestionServer.log.debug((\"Can't write to channel \" + (ctx.getChannel().toString())), ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8852/buggy-version/blueflood-http.src.main.java.com.rackspacecloud.blueflood.inputs.handlers.HttpMetricsIngestionServer.java", "BodyUseAPI": ["org.slf4j.Logger.debug((((\"request decoder error \" + (e.getCause().toString())) + \" on channel \") + (ctx.getChannel().toString())))", "com.rackspacecloud.blueflood.inputs.handlers.ChannelHandlerContext.getChannel()", "ctx.getChannel().write(new org.jboss.netty.handler.codec.http.DefaultHttpResponse(org.jboss.netty.handler.codec.http.HttpVersion.HTTP_1_1, org.jboss.netty.handler.codec.http.HttpResponseStatus.BAD_REQUEST)).addListener(ChannelFutureListener.CLOSE)", "ctx.getChannel().isWritable()", "com.rackspacecloud.blueflood.inputs.handlers.ExceptionEvent.getCause()", "com.rackspacecloud.blueflood.inputs.handlers.ChannelHandlerContext.getChannel()", "ctx.getChannel().toString()", "ctx.getChannel().write(org.jboss.netty.handler.codec.http.DefaultHttpResponse)", "com.rackspacecloud.blueflood.inputs.handlers.ChannelHandlerContext.getChannel()", "e.getCause().toString()", "ctx.getChannel().toString()", "com.rackspacecloud.blueflood.inputs.handlers.ChannelHandlerContext.getChannel()", "org.slf4j.Logger.debug(((\"channel \" + (ctx.getChannel().toString())) + \" is no longer writeable, not sending 400 response back to client\"))"], "Fixed commit": "44bfbab3c8e5eaedfd84212c09e226993b5b8167", "Url": "https://api.github.com/repos/shintasmith/blueflood", "Date": "2016-07-06T15:25:54Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { tenantId = realmService.getTenantManager().getTenantId(tenantDomain); } catch (org.wso2.carbon.user.api.UserStoreException e) { org.wso2.carbon.apimgt.gateway.handlers.throttling.ApplicationThrottleController.handleException((\"Unable to Find the tenant ID using tenant: \" + tenantDomain)); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5024/buggy-version/components.apimgt.org.wso2.carbon.apimgt.gateway.src.main.java.org.wso2.carbon.apimgt.gateway.handlers.throttling.ApplicationThrottleController.java", "BodyUseAPI": ["org.wso2.carbon.user.core.service.RealmService.getTenantManager()", "realmService.getTenantManager().getTenantId(java.lang.String)"], "Fixed commit": "d4b0969baefe4226abd996ae9cf9dccf8415dca0", "Url": "https://api.github.com/repos/lakmali/carbon-apimgt", "Date": "2015-11-09T11:31:40Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.google.gson.JsonObject fieldworkerObject = jobObject.get(\"fieldworker\").getAsJsonObject(); return ((fieldworkerObject.get(\"firstName\").getAsString()) + \" \") + (fieldworkerObject.get(\"lastName\").getAsString()); } catch (java.lang.Exception e) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/852/buggy-version/app.src.main.java.com.ghomebyrw.gworker.serializers.JobListDeserializer.java", "BodyUseAPI": ["jobObject.get(\"fieldworker\").getAsJsonObject()", "fieldworkerObject.get(\"lastName\").getAsString()", "com.google.gson.JsonObject.get(java.lang.String)", "fieldworkerObject.get(\"firstName\").getAsString()", "com.google.gson.JsonObject.get(java.lang.String)", "com.google.gson.JsonObject.get(java.lang.String)"], "Fixed commit": "9d8e403b52446d7ed1ed2beb1fedaf5f9fef1047", "Url": "https://api.github.com/repos/GHomeByRW/GWorker", "Date": "2015-11-24T17:25:58Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.initCause(cause); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/210/buggy-version/src.main.java.freemarker.core.ParseException.java", "BodyUseAPI": ["freemarker.core.ParseException.initCause(java.lang.Throwable)"], "Fixed commit": "3a2dae72e67d6c1fec6d2f35ac73114158620c39", "Url": "https://api.github.com/repos/freemarker/freemarker-old", "Date": "2015-08-18T21:57:27Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { pwo = new java.io.PrintWriter(req.getOutputStream()); } catch (java.lang.Exception ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/9034/buggy-version/src.Client.java", "BodyUseAPI": ["java.net.Socket.getOutputStream()"], "Fixed commit": "c1e31503b372dfd3d0c01cf69b600b3f5032d6f2", "Url": "https://api.github.com/repos/gatesphere/445-assignment3", "Date": "2012-05-07T16:48:17Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return (map.getTileId((((int) (point.getX())) / (map.getTileWidth())), (((int) (point.getY())) / (map.getTileHeight())), collisionIndex)) != 0; } catch (java.lang.IndexOutOfBoundsException e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4762/buggy-version/TisButAScratch.src.main.java.construction.SlickMap.java", "BodyUseAPI": ["org.newdawn.slick.tiled.TiledMap.getTileId((((int) (point.getX())) / (map.getTileWidth())),(((int) (point.getY())) / (map.getTileHeight())),int)", "org.newdawn.slick.tiled.TiledMap.getTileWidth()", "org.newdawn.slick.tiled.TiledMap.getTileHeight()", "java.awt.Point.getY()", "java.awt.Point.getX()"], "Fixed commit": "0f74e628cc733a516acd82bf66b7e46bd68e9aaf", "Url": "https://api.github.com/repos/Tejpbit/TDA367", "Date": "2014-04-06T10:48:21Z"},
{"Line": "=>585", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mDuration = oFormat.getLong(MediaFormat.KEY_DURATION); } catch (java.lang.Exception e) { try { mDuration = mMediaPlayer.getDuration(); } catch (java.lang.Exception e1) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5478/buggy-version/library.src.main.java.org.antennapod.audio.SonicAudioPlayer.java", "BodyUseAPI": ["android.media.MediaFormat.getLong(MediaFormat.KEY_DURATION)"], "Fixed commit": "c8557f7528888bd03653c91b6bb89135c8e48fa8", "Url": "https://api.github.com/repos/castbox/AntennaPod-AudioPlayer", "Date": "2016-11-21T11:53:36Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { server.close(); } catch (java.io.IOException e) { java.lang.System.out.println(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6663/buggy-version/src.Client.ClientMessageReceiver.java", "BodyUseAPI": ["java.net.Socket.close()"], "Fixed commit": "81b9ca0e4f9e144c747e5f16ba81b95af9ca9619", "Url": "https://api.github.com/repos/Peonsson/SimpleGroupChat", "Date": "2015-09-26T20:10:36Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { script = new groovy.lang.GroovyShell().parse(new java.io.InputStreamReader(getConfigResourceAsStream())); final ro.isdc.wro.model.WroModel model = ro.isdc.wro.extensions.model.factory.GroovyWroModelParser.parse(script); ro.isdc.wro.extensions.model.factory.GroovyWroModelFactory.LOG.debug(\"groovy model: \", model); if (model == null) { throw new ro.isdc.wro.WroRuntimeException(\"Invalid content provided, cannot build model!\"); } return model; } catch (final java.io.IOException e) { throw new ro.isdc.wro.WroRuntimeException(\"Invalid model found!\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1417/buggy-version/wro4j-extensions.src.main.java.ro.isdc.wro.extensions.model.factory.GroovyWroModelFactory.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,ro.isdc.wro.model.WroModel)", "groovy.lang.GroovyShell.parse(java.io.InputStreamReader)", "ro.isdc.wro.extensions.model.factory.GroovyWroModelParser.parse(groovy.lang.Script)", "ro.isdc.wro.extensions.model.factory.GroovyWroModelFactory.getConfigResourceAsStream()"], "Fixed commit": "6ad190640071c26b61963c0e38b49cbbf338634b", "Url": "https://api.github.com/repos/alexo/wro4j", "Date": "2011-07-26T21:14:03Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { addValidOptions(org.gatein.sso.agent.login.SAML2IntegrationLoginModule.ALL_VALID_OPTIONS); } catch (java.lang.NoSuchMethodError ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/9223/buggy-version/agent.src.main.java.org.gatein.sso.agent.login.SAML2IntegrationLoginModule.java", "BodyUseAPI": ["org.gatein.sso.agent.login.SAML2IntegrationLoginModule.addValidOptions(java.lang.String[])"], "Fixed commit": "c96009c18304fa01f60244e93933fb2b1f7857d6", "Url": "https://api.github.com/repos/gatein/gatein-sso", "Date": "2012-11-21T11:42:16Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { saveHeader = header.getReadGroups().get(0).getLibrary(); } catch (java.lang.Exception ignored) { saveHeader = \"Unavailable\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7052/buggy-version/src.java.picard.analysis.CollectGcBiasMetrics.java", "BodyUseAPI": ["header.getReadGroups().get(0).getLibrary()", "htsjdk.samtools.SAMFileHeader.getReadGroups()", "header.getReadGroups().get(int)"], "Fixed commit": "7e042b14675fb4f7d942650e909056a70efd4252", "Url": "https://api.github.com/repos/broadinstitute/picard", "Date": "2015-05-22T03:46:02Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.json.JSONObject obj = new org.json.JSONObject(); obj.put(\"type\", type); obj.put(\"state\", additional); if ((connectionCallbackContext) != null) { org.apache.cordova.PluginResult result = new org.apache.cordova.PluginResult(PluginResult.Status.OK, type); result.setKeepCallback(true); connectionCallbackContext.sendPluginResult(result); }else { } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1236/buggy-version/src.android.BroadcastManager.java", "BodyUseAPI": ["org.apache.cordova.PluginResult.setKeepCallback(boolean)", "org.apache.cordova.CallbackContext.sendPluginResult(org.apache.cordova.PluginResult)", "org.json.JSONObject.put(java.lang.String,java.lang.String)", "org.json.JSONObject.put(java.lang.String,java.lang.String)"], "Fixed commit": "4e765dbf9fce2af204cec53b082aa637d653c008", "Url": "https://api.github.com/repos/elieehel/CordovaUDPBrdcst", "Date": "2017-06-04T19:58:26Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { queueOut.put(bits.get(i)); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4077/buggy-version/src.link.angelmaker.bitexchanger.SimpleBitExchanger.java", "BodyUseAPI": ["util.BitSet2.get(int)", "java.util.concurrent.ArrayBlockingQueue<java.lang.Boolean>.put(bits.get(i))"], "Fixed commit": "cea57876ba3adf8219e2a01020cdb39484d239c8", "Url": "https://api.github.com/repos/i3anaan/serialkiller", "Date": "2014-06-17T13:54:16Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { parseFrame(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1790/buggy-version/src.rv.comm.rcssserver.LogPlayer.java", "BodyUseAPI": ["rv.comm.rcssserver.LogPlayer.LogRunnerThread.parseFrame()"], "Fixed commit": "7f5b84286ec53bf1f5ba714c9afe28c04a609aba", "Url": "https://api.github.com/repos/pmacalpine/RoboViz", "Date": "2015-06-13T18:41:01Z"},
{"Line": "=>483", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.mule.modules.dropbox.model.Item file = this.list(org.apache.commons.lang.StringUtils.join(new java.lang.String[]{ path, filename }, \"/\")); if (file != null) { r = r.queryParam(\"parent_rev\", file.getRev()); } } catch (org.mule.modules.dropbox.exception.DropboxException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7173/buggy-version/src.main.java.org.mule.modules.dropbox.DropboxConnector.java", "BodyUseAPI": ["com.sun.jersey.api.client.WebResource.queryParam(java.lang.String,file.getRev())", "org.mule.modules.dropbox.model.Item.getRev()", "org.mule.modules.dropbox.DropboxConnector.list(org.apache.commons.lang.StringUtils.join(new java.lang.String[]{ path, filename }, \"/\"))", "org.apache.commons.lang.StringUtils.join(java.lang.String[],java.lang.String)"], "Fixed commit": "10edc39f3795557c6d609e28c0cece48fe594db1", "Url": "https://api.github.com/repos/mulesoft/dropbox-connector", "Date": "2013-07-26T15:13:26Z"},
{"Line": "=>576", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { processor = new com.phresco.pom.util.PomProcessor(pomFileNew); functionalTestDir = processor.getProperty(Constants.POM_PROP_KEY_FUNCTEST_DIR); } catch (com.phresco.pom.exception.PhrescoPomException e) { throw new com.photon.phresco.exception.PhrescoException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/934/buggy-version/plugin-commons.src.main.java.com.photon.phresco.plugins.PhrescoBasePlugin.java", "BodyUseAPI": ["com.phresco.pom.util.PomProcessor.getProperty(Constants.POM_PROP_KEY_FUNCTEST_DIR)"], "Fixed commit": "1dfa2e07ad2443ca51988b9332a4146dd331c95c", "Url": "https://api.github.com/repos/photon-infotech/plugins", "Date": "2013-12-03T07:54:11Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { document = org.rsna.util.XmlUtil.getDocument(file); } catch (java.lang.Exception ex) { throw ex; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5041/buggy-version/source.java.org.rsna.ctp.objects.XmlObject.java", "BodyUseAPI": ["org.rsna.util.XmlUtil.getDocument(java.io.File)"], "Fixed commit": "be9b3fa989b080c3076abab5af57f45bc54d4bdd", "Url": "https://api.github.com/repos/johnperry/CTP", "Date": "2014-03-28T12:17:28Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { project = org.eclipse.core.resources.ResourcesPlugin.getWorkspace().getRoot().getProject(projectName); } catch (java.lang.IllegalArgumentException e) { project = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4371/buggy-version/dev.plugins.hu.elte.txtuml.utils.eclipse.src.hu.elte.txtuml.utils.eclipse.ProjectUtils.java", "BodyUseAPI": ["org.eclipse.core.resources.ResourcesPlugin.getWorkspace().getRoot()", "org.eclipse.core.resources.ResourcesPlugin.getWorkspace().getRoot().getProject(java.lang.String)", "org.eclipse.core.resources.ResourcesPlugin.getWorkspace()"], "Fixed commit": "dd7494dd41a75325c0b7f7e5e177ad680e39522e", "Url": "https://api.github.com/repos/ELTE-Soft/txtUML", "Date": "2016-12-02T08:33:49Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return org.rascalmpl.interpreter.result.ResultFactory.makeResult(type, getValue().asRelation().closureStar(), ctx); } catch (org.eclipse.imp.pdb.facts.exceptions.IllegalOperationException e) { throw new org.rascalmpl.interpreter.staticErrors.UnsupportedOperation(\"Illegal argument of reflexive transitive closure (*)\", ctx.getCurrentAST()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3995/buggy-version/src.org.rascalmpl.interpreter.result.ListRelationResult.java", "BodyUseAPI": ["getValue().asRelation()", "org.rascalmpl.interpreter.result.ResultFactory.makeResult(org.rascalmpl.interpreter.result.ListRelationResult,getValue().asRelation().closureStar(),org.rascalmpl.interpreter.result.ListRelationResult)", "getValue().asRelation().closureStar()", "org.rascalmpl.interpreter.result.ListRelationResult.getValue()"], "Fixed commit": "b89d1b289c2fbf69916695f2ad4782b202b0885c", "Url": "https://api.github.com/repos/cwi-swat/rascal", "Date": "2014-10-31T15:16:52Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return org.rascalmpl.interpreter.result.ResultFactory.makeResult(type, getValue().asRelation().closure(), ctx); } catch (org.eclipse.imp.pdb.facts.exceptions.IllegalOperationException e) { throw new org.rascalmpl.interpreter.staticErrors.UnsupportedOperation(\"Illegal argument of transitive closure (+)\", ctx.getCurrentAST()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3995/buggy-version/src.org.rascalmpl.interpreter.result.ListRelationResult.java", "BodyUseAPI": ["org.rascalmpl.interpreter.result.ResultFactory.makeResult(org.rascalmpl.interpreter.result.ListRelationResult,getValue().asRelation().closure(),org.rascalmpl.interpreter.result.ListRelationResult)", "getValue().asRelation()", "getValue().asRelation().closure()", "org.rascalmpl.interpreter.result.ListRelationResult.getValue()"], "Fixed commit": "b89d1b289c2fbf69916695f2ad4782b202b0885c", "Url": "https://api.github.com/repos/cwi-swat/rascal", "Date": "2014-10-31T15:16:52Z"},
{"Line": "=>439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { this.reader = new com.jcwhatever.nucleus.utils.file.NucleusByteReader(new java.io.FileInputStream(file)); } catch (java.io.FileNotFoundException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8389/buggy-version/src.com.jcwhatever.rentalrooms.region.RentRegion.java", "BodyUseAPI": [], "Fixed commit": "5263bf38210b671a0c592d48a9d8aae9f22c1605", "Url": "https://api.github.com/repos/JCThePants/RentalRooms", "Date": "2015-01-27T02:20:28Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return ((x) == (comparing.GetX())) && ((y) == (comparing.GetY())); } catch (java.lang.NullPointerException e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2960/buggy-version/src.Tools.Coordinate.java", "BodyUseAPI": ["Tools.Coordinate.GetY()", "Tools.Coordinate.GetX()"], "Fixed commit": "c265cc18e2ae9e859aa64402a9cce7491459f715", "Url": "https://api.github.com/repos/donBME/The-Game", "Date": "2016-04-20T20:29:16Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((getSession().getProject()) != null) { return getSession().getProject(); } } catch (java.lang.IllegalStateException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2602/buggy-version/agile-web.src.main.java.org.headsupdev.agile.web.ErrorPage.java", "BodyUseAPI": ["getSession().getProject()", "getSession().getProject()", "org.headsupdev.agile.web.ErrorPage.getSession()", "org.headsupdev.agile.web.ErrorPage.getSession()"], "Fixed commit": "503ac446ff8e202a90026fe419b04e5a6e6e5367", "Url": "https://api.github.com/repos/headsupdev/agile", "Date": "2013-11-09T23:35:00Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.value = new java.math.BigInteger(value, getBaseValue(baseIndex)); } catch (java.lang.NumberFormatException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5742/buggy-version/src.com.elsoft.fbc.BaseLogic.java", "BodyUseAPI": ["com.elsoft.fbc.BaseLogic.getBaseValue(int)"], "Fixed commit": "81d71fa281979ed59f09402da53b20c19bc1d750", "Url": "https://api.github.com/repos/mikeytr/fast-base-converter", "Date": "2014-03-24T19:29:06Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { statistics.put(statisticName, ehcacheStatistics.queryStatistic(statisticName, since)); } catch (java.lang.IllegalArgumentException ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5905/buggy-version/management.src.main.java.org.ehcache.management.providers.statistics.EhcacheStatisticsProvider.java", "BodyUseAPI": ["org.ehcache.management.providers.statistics.StandardEhcacheStatistics.queryStatistic(java.lang.String,long)", "java.util.Map<java.lang.String, org.terracotta.management.model.stats.Statistic<?, ?>>.put(java.lang.String,ehcacheStatistics.queryStatistic(statisticName, since))"], "Fixed commit": "049982a4514fa972410147c03b03353457e11465", "Url": "https://api.github.com/repos/gibsong/ehcache3", "Date": "2016-09-02T23:30:13Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { current = java.lang.Double.parseDouble(numValue); } catch (java.lang.NumberFormatException e) { log().error(((id + \" does not have a numeric value: \") + numValue)); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6136/buggy-version/opennms-services.src.main.java.org.opennms.netmgt.threshd.CollectionResourceWrapper.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "fa7b5fa6f8de26032e45ab4b2429fa817c31d584", "Url": "https://api.github.com/repos/peternixon/opennms-mirror", "Date": "2013-02-05T20:58:45Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { long start = java.lang.System.currentTimeMillis(); output = jointPoint.proceed(); long elapsedTime = (java.lang.System.currentTimeMillis()) - start; ua.com.goit.gojava7.kickstarter.util.Logger.log.info(\"Method : {}\\n\\tQuery : {}\\n\\tExecution time : {} ms\", methodName, query, elapsedTime); logIntoDB(query); } catch (java.lang.Exception e) { ua.com.goit.gojava7.kickstarter.util.Logger.log.error(\"Method : {}\\n\\tQuery : {}\", methodName, query); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4527/buggy-version/trunk.GoJava7.e.singaevskiy.kickstarter_web.src.main.java.ua.com.goit.gojava7.kickstarter.util.Logger.java", "BodyUseAPI": ["org.slf4j.Logger.info(java.lang.String,java.lang.String,java.lang.String,long)", "ua.com.goit.gojava7.kickstarter.util.Logger.logIntoDB(java.lang.String)", "java.lang.System.currentTimeMillis()", "java.lang.System.currentTimeMillis()", "org.aspectj.lang.ProceedingJoinPoint.proceed()"], "Fixed commit": "bd67ef9248b9e2f69a15153b6e19f95a93d17b5d", "Url": "https://api.github.com/repos/baygoit/GoJava", "Date": "2015-12-20T23:48:47Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (ratpack.registry.PredicateCacheability.SPECIAL_PREDICATE_CLASSES.contains(key)) { return true; } java.lang.reflect.Method equals = key.getDeclaredMethod(\"equals\", java.lang.Object.class); java.lang.Class<?> declaringClass = equals.getDeclaringClass(); return !(declaringClass.equals(java.lang.Object.class)); } catch (java.lang.NoSuchMethodException e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5530/buggy-version/ratpack-core.src.main.java.ratpack.registry.PredicateCacheability.java", "BodyUseAPI": ["java.lang.Class<? extends com.google.common.base.Predicate>.getDeclaredMethod(java.lang.String,java.lang.Class)", "java.lang.reflect.Method.getDeclaringClass()", "java.lang.Class<?>.equals(java.lang.Class)", "com.google.common.collect.ImmutableSet<java.lang.Class<? extends com.google.common.base.Predicate>>.contains(java.lang.Class<? extends com.google.common.base.Predicate>)"], "Fixed commit": "eabfc656341af16b9bfa6356ec8cfb721a2c5f75", "Url": "https://api.github.com/repos/lhotari/ratpack", "Date": "2014-09-02T13:42:18Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { me.yourmcgeek.coupons.CouponCodes.COUPON_FILE.createNewFile(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4355/buggy-version/src.main.java.me.yourmcgeek.coupons.CouponCodes.java", "BodyUseAPI": ["java.io.File.createNewFile()"], "Fixed commit": "8acc88a3f212432e7a7ff17c5c8de82e44c1529e", "Url": "https://api.github.com/repos/YourMCGeek/CouponCodes", "Date": "2017-11-27T02:53:20Z"},
{"Line": "=>507", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { formattedDate = df.parse(question.getQuestionValue()); } catch (java.lang.Exception ex) { try { formattedDate = df2.parse(question.getQuestionValue()); } catch (java.lang.Exception ex2) { try { formattedDate = df3.parse(question.getQuestionValue()); } catch (java.lang.Exception ex3) { try { formattedDate = df4.parse(question.getQuestionValue()); } catch (java.lang.Exception ex4) { try { formattedDate = df5.parse(question.getQuestionValue()); } catch (java.lang.Exception ex5) { try { formattedDate = df6.parse(question.getQuestionValue()); } catch (java.lang.Exception ex6) { try { formattedDate = df7.parse(question.getQuestionValue()); } catch (java.lang.Exception ex7) { try { formattedDate = df8.parse(question.getQuestionValue()); } catch (java.lang.Exception ex8) { formattedDate = df9.parse(question.getQuestionValue()); } } } } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5098/buggy-version/webapp.src.main.java.com.rr.missouri.ui.surveys.surveyController.java", "BodyUseAPI": ["java.text.SimpleDateFormat.parse(question.getQuestionValue())", "com.registryKit.survey.SurveyQuestions.getQuestionValue()"], "Fixed commit": "cd7f7e98c7d0d9bfa19e6e5e1bbeaa1a64525e36", "Url": "https://api.github.com/repos/thenhkid/missouriRR", "Date": "2016-05-06T16:44:14Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { getSubInfoCmd.balance = (result.getPpsBalance().isNil()) ? -1 : java.lang.Integer.parseInt(result.getPpsBalance().getValue()); } catch (java.lang.Exception e) { logError((\"OnGetSubInfoCmd: Error when parse balance field of msisdn \" + (getSubInfoCmd.msisdn))); getSubInfoCmd.balance = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/257/buggy-version/src.com.itpro.paymentgw.PaymentGWSession.java", "BodyUseAPI": ["com.topup.payment.xsd.TopupPaymentApiWSQeuryProfilefoResult.getPpsBalance()", "result.getPpsBalance().isNil()", "result.getPpsBalance().getValue()", "com.topup.payment.xsd.TopupPaymentApiWSQeuryProfilefoResult.getPpsBalance()", "java.lang.Integer.parseInt(result.getPpsBalance().getValue())"], "Fixed commit": "565cec2455566ca4311d869040dc06ee4df88c64", "Url": "https://api.github.com/repos/ducgv/FadaoAirTimeCharging", "Date": "2017-06-04T05:38:53Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { getSubInfoCmd.subType = (result.getPayType().isNil()) ? -1 : java.lang.Integer.parseInt(result.getPayType().getValue()); } catch (java.lang.Exception e) { logError((\"OnGetSubInfoCmd: Error when parse subType field of msisdn \" + (getSubInfoCmd.msisdn))); getSubInfoCmd.subType = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/257/buggy-version/src.com.itpro.paymentgw.PaymentGWSession.java", "BodyUseAPI": ["com.topup.payment.xsd.TopupPaymentApiWSQeuryProfilefoResult.getPayType()", "result.getPayType().getValue()", "java.lang.Integer.parseInt(result.getPayType().getValue())", "result.getPayType().isNil()", "com.topup.payment.xsd.TopupPaymentApiWSQeuryProfilefoResult.getPayType()"], "Fixed commit": "565cec2455566ca4311d869040dc06ee4df88c64", "Url": "https://api.github.com/repos/ducgv/FadaoAirTimeCharging", "Date": "2017-06-04T05:38:53Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { pageAccess = new org.exoplatform.portal.pom.config.tasks.MOPAccess.PageAccess(pomMgr, ((org.exoplatform.portal.config.Query<org.exoplatform.portal.pom.data.PageData>) (q))); } catch (java.lang.IllegalArgumentException e) { pageAccess = new org.exoplatform.commons.utils.ListAccess<org.exoplatform.portal.pom.data.PageData>() { @java.lang.Override public org.exoplatform.portal.pom.data.PageData[] load(int index, int length) throws java.lang.Exception, java.lang.IllegalArgumentException { return new org.exoplatform.portal.pom.data.PageData[0]; } @java.lang.Override public int getSize() throws java.lang.Exception { return 0; } }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1479/buggy-version/component.portal.src.main.java.org.exoplatform.portal.pom.config.POMDataStorage.java", "BodyUseAPI": [], "Fixed commit": "09869fe58fb481cb1711bfe51e46fa1b174cdc99", "Url": "https://api.github.com/repos/trongtt/exogtn", "Date": "2011-04-28T11:28:28Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.rabbitmq.client.GetResponse response = channel.basicGet(this.queueName, true); if (response != null) return response.getBody(); Data.logger.warn(\"receive failed: response empty\"); } catch (java.lang.Throwable e) { Data.logger.warn((\"receive failed: \" + (e.getMessage())), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2857/buggy-version/src.main.java.net.yacy.grid.io.messages.RabbitQueueFactory.java", "BodyUseAPI": ["Data.logger.warn(java.lang.String)", "com.rabbitmq.client.GetResponse.getBody()", "com.rabbitmq.client.Channel.basicGet(java.lang.String,boolean)"], "Fixed commit": "0ac7232adafb0d57bc43f134b2dc7c349c4f76c0", "Url": "https://api.github.com/repos/yacy/yacy_grid_mcp", "Date": "2017-07-02T21:36:14Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { executor.submit(new eu.modernmt.cluster.services.TranslationOperation.TranslationRunnable(task)); } catch (java.lang.Throwable e) { submitException = e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1002/buggy-version/src.core.src.main.java.eu.modernmt.cluster.services.TranslationOperation.java", "BodyUseAPI": ["java.util.concurrent.ExecutorService.submit(eu.modernmt.cluster.services.TranslationOperation.TranslationRunnable)"], "Fixed commit": "f63b0afadd9be852406e268e1b4697c95f734117", "Url": "https://api.github.com/repos/ModernMT/MMT", "Date": "2017-11-24T14:17:16Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { attributes = sftp.stat(filePath); } catch (java.lang.Exception e) { found = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2903/buggy-version/resource-core.src.main.java.org.jumpmind.metl.core.runtime.resource.SftpDirectory.java", "BodyUseAPI": ["com.jcraft.jsch.ChannelSftp.stat(java.lang.String)"], "Fixed commit": "041a9ebe5bcdce2d343056e61a74f05341ec34e0", "Url": "https://api.github.com/repos/awol2010ex/metl", "Date": "2017-07-09T08:23:18Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { schedulerService.saveTask(processHL7Task); } catch (java.lang.NoSuchMethodError ex) { try { java.lang.reflect.Method method = schedulerService.getClass().getMethod(\"saveTaskDefinition\", new java.lang.Class[]{ org.openmrs.scheduler.TaskDefinition.class }); method.invoke(schedulerService, processHL7Task); } catch (java.lang.NoSuchMethodException e) { } catch (java.lang.IllegalAccessException e) { } catch (java.lang.reflect.InvocationTargetException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2485/buggy-version/api.src.main.java.org.openmrs.module.referenceapplication.ReferenceApplicationActivator.java", "BodyUseAPI": ["org.openmrs.scheduler.SchedulerService.saveTask(org.openmrs.scheduler.TaskDefinition)"], "Fixed commit": "714e7d655ec8dcc1df718f207c0767ea9566ac48", "Url": "https://api.github.com/repos/ivange94/openmrs-module-referenceapplication", "Date": "2016-03-01T12:57:57Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.apache.hadoop.fs.FileSystem fs = org.apache.kylin.engine.mr.HadoopUtil.getFileSystem(outputPath); inputStream = fs.open(outputFile); bufferedReader = new java.io.BufferedReader(new java.io.InputStreamReader(inputStream)); minValue = currentValue = bufferedReader.readLine(); while (currentValue != null) { maxValue = currentValue; currentValue = bufferedReader.readLine(); } } catch (java.io.IOException e) { org.apache.kylin.source.kafka.UpdateTimeRangeStep.logger.error((\"fail to read file \" + outputFile), e); return new org.apache.kylin.job.execution.ExecuteResult(ExecuteResult.State.ERROR, e.getLocalizedMessage()); } finally { org.apache.commons.io.IOUtils.closeQuietly(bufferedReader); org.apache.commons.io.IOUtils.closeQuietly(inputStream); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1536/buggy-version/source-kafka.src.main.java.org.apache.kylin.source.kafka.UpdateTimeRangeStep.java", "BodyUseAPI": ["org.apache.hadoop.fs.FileSystem.open(org.apache.hadoop.fs.Path)", "org.apache.kylin.engine.mr.HadoopUtil.getFileSystem(java.lang.String)", "java.io.BufferedReader.readLine()", "java.io.BufferedReader.readLine()"], "Fixed commit": "14c680c9444b4a2e1a64baad4ca81498e9c27e47", "Url": "https://api.github.com/repos/apache/kylin", "Date": "2016-10-09T11:06:07Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { getDialog().dismiss(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8465/buggy-version/app.src.main.java.pl.tajchert.tablicarejestracyjna.FragmentDialogComment.java", "BodyUseAPI": ["pl.tajchert.tablicarejestracyjna.FragmentDialogComment.UploadComment.getDialog()", "getDialog().dismiss()"], "Fixed commit": "5a5fbd917b411f865b50b5feee2040424459ee9a", "Url": "https://api.github.com/repos/tajchert/RegistrationPlate", "Date": "2015-05-01T13:48:45Z"},
{"Line": "=>440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { collectXML = java.net.URLEncoder.encode(billXml, \"UTF-8\"); } catch (java.io.UnsupportedEncodingException e) { throw new java.lang.RuntimeException(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1475/buggy-version/egov.egov-wtms.src.main.java.org.egov.wtms.application.service.ConnectionDemandService.java", "BodyUseAPI": ["java.net.URLEncoder.encode(java.lang.String,java.lang.String)"], "Fixed commit": "d56fd92e9bd2370688c2c132fddc441f88500682", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2015-10-24T10:56:15Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { contactList.add(new in.reweyou.reweyou.model.ContactListModel(phoneNumberName, number.substring(((number.length()) - 10)), phoneNumberPic)); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2276/buggy-version/app.src.main.java.in.reweyou.reweyou.Contacts.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.length()", "java.util.List<in.reweyou.reweyou.model.ContactListModel>.add(in.reweyou.reweyou.model.ContactListModel)"], "Fixed commit": "7ee37355ef3d582ebcdc6c583b14f311d41d5b43", "Url": "https://api.github.com/repos/varunn12/Reweyou", "Date": "2017-01-04T06:11:45Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { r = this.main.getLeftPanel().getPositionInSource(arg0.line, arg0.col); } catch (javax.swing.text.BadLocationException e) { at.jku.ssw.cmm.DebugShell.out(State.WARNING, Area.DEBUGGER, (\"Bad location when initializing return popup: \" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1060/buggy-version/src.at.jku.ssw.cmm.gui.event.debug.PanelRunListener.java", "BodyUseAPI": ["at.jku.ssw.cmm.gui.GUImain.getLeftPanel()", "this.main.getLeftPanel().getPositionInSource(arg0.line,arg0.col)"], "Fixed commit": "4f8fab0bf13afb5af59c6a9435ba559f80597745", "Url": "https://api.github.com/repos/fabian1995/CMM", "Date": "2015-03-17T09:39:59Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { javax.swing.JPanel tab = ((javax.swing.JPanel) (clientGUI.tabbedMenu.tabs.getTabComponentAt(clientGUI.tabbedMenu.tabs.indexOfTab(ceoName)))); clientGUI.userEditMenu edit = new clientGUI.userEditMenu(sql, rolle, ((javax.swing.JPanel) (clientGUI.tabbedMenu.tabs.getTabComponentAt(clientGUI.tabbedMenu.tabs.indexOfTab(ceoName))))); } catch (java.lang.Exception k) { clientGUI.userEditMenu edit = new clientGUI.userEditMenu(sql, rolle, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3096/buggy-version/src.main.java.clientGUI.tabbedMenu.java", "BodyUseAPI": ["javax.swing.JTabbedPane.getTabComponentAt(int)", "javax.swing.JTabbedPane.indexOfTab(java.lang.String)", "javax.swing.JTabbedPane.getTabComponentAt(int)", "javax.swing.JTabbedPane.indexOfTab(java.lang.String)"], "Fixed commit": "25d40eeb2f8c5929d0084f62964e6b726e032269", "Url": "https://api.github.com/repos/Gruppe01BitsPlease/HCL", "Date": "2016-04-25T08:37:26Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { consumerService.getMessageQueue().put(message); } catch (java.lang.InterruptedException e) { return 500; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2917/buggy-version/rocketmq-babel.src.main.java.com.ndpmedia.rocketmq.babel.ThriftMessageHandler.java", "BodyUseAPI": ["com.ndpmedia.rocketmq.babel.ConsumerService.getMessageQueue()", "consumerService.getMessageQueue().put(com.alibaba.rocketmq.common.message.MessageExt)"], "Fixed commit": "77c64f38cef1f5789b94b682039f9cea41863129", "Url": "https://api.github.com/repos/lizhanhui/Alibaba_RocketMQ", "Date": "2015-01-27T03:22:50Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.gigaspaces.async.AsyncFuture<R> taskResult = gigaSpace.execute(distributedTask); com.avanza.astrix.remoting.util.GsUtil.subscribe(taskResult, t1); } catch (java.lang.Exception e) { t1.onError(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4007/buggy-version/astrix-gs.src.main.java.com.avanza.astrix.gs.SpaceTaskDispatcher.java", "BodyUseAPI": ["org.openspaces.core.GigaSpace.execute(org.openspaces.core.executor.DistributedTask<T, R>)", "com.avanza.astrix.remoting.util.GsUtil.subscribe(com.gigaspaces.async.AsyncFuture<R>,rx.Subscriber<? super R>)"], "Fixed commit": "d255fddcbfbcef60033644a2e057b1e031b97e02", "Url": "https://api.github.com/repos/patrikl/astrix", "Date": "2015-06-02T13:29:50Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.gigaspaces.async.AsyncFuture<T> taskResult = gigaSpace.execute(task, routingKey); com.avanza.astrix.remoting.util.GsUtil.subscribe(taskResult, t1); } catch (java.lang.Exception e) { t1.onError(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4007/buggy-version/astrix-gs.src.main.java.com.avanza.astrix.gs.SpaceTaskDispatcher.java", "BodyUseAPI": ["org.openspaces.core.GigaSpace.execute(org.openspaces.core.executor.Task<T>,java.lang.Object)", "com.avanza.astrix.remoting.util.GsUtil.subscribe(com.gigaspaces.async.AsyncFuture<T>,rx.Subscriber<? super T>)"], "Fixed commit": "d255fddcbfbcef60033644a2e057b1e031b97e02", "Url": "https://api.github.com/repos/patrikl/astrix", "Date": "2015-06-02T13:29:50Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { openSelectedFile(selectedFile); } catch (java.io.IOException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3552/buggy-version/gui.MainGuiPagination.java", "BodyUseAPI": ["gui.MainGuiPagination.5.openSelectedFile(java.io.File)"], "Fixed commit": "6e86836527fab32af0e34f873eb74259f0379a68", "Url": "https://api.github.com/repos/jai502/CanineDeadlyAmericanIndianHorse-", "Date": "2016-04-22T12:01:18Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { param.getFieldParam().put(fieldItem.getFieldName(), fieldItem.getString(\"UTF-8\")); } catch (java.io.UnsupportedEncodingException e) { param.getFieldParam().put(fieldItem.getFieldName(), fieldItem.getString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2780/buggy-version/QuestionServer.src.main.java.com.foal.question.jersey.resource.tools.ResourceTools.java", "BodyUseAPI": ["param.getFieldParam().put(fieldItem.getFieldName(),fieldItem.getString(\"UTF-8\"))", "com.foal.question.jersey.resource.tools.MultipartFormParam.getFieldParam()", "org.apache.commons.fileupload.FileItem.getFieldName()", "org.apache.commons.fileupload.FileItem.getString(java.lang.String)"], "Fixed commit": "d891163ce3125b4ede12ebff744a937210b07524", "Url": "https://api.github.com/repos/YonderChen/question_server", "Date": "2015-04-02T07:58:50Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(10); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4390/buggy-version/src.se.marteinn.ui.InteractiveScrollView.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "d83fd02d1e03f145222d1021f7744dcb83175ff4", "Url": "https://api.github.com/repos/brnv/tx", "Date": "2015-05-20T06:55:40Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Class.forName(\"com.asterdata.ncluster.Driver\"); } catch (java.lang.ClassNotFoundException e) { logger.error((\"Class not found: \" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7827/buggy-version/src.main.java.org.embulk.input.aster.AsterInputPlugin.java", "BodyUseAPI": ["java.lang.Class.forName(java.lang.String)"], "Fixed commit": "7e7a08fd84b98447547792eed15e59193458becf", "Url": "https://api.github.com/repos/ebyhr/embulk-input-aster", "Date": "2017-08-16T14:28:30Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.view.inputmethod.InputMethodManager imm = ((android.view.inputmethod.InputMethodManager) (getSystemService(Context.INPUT_METHOD_SERVICE))); imm.hideSoftInputFromWindow(this.getCurrentFocus().getWindowToken(), 0); } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/742/buggy-version/app.src.main.java.com.example.bartrongen.mmqalpha.PlayerActivity.java", "BodyUseAPI": ["this.getCurrentFocus().getWindowToken()", "com.example.bartrongen.mmqalpha.PlayerActivity.getSystemService(Context.INPUT_METHOD_SERVICE)", "com.example.bartrongen.mmqalpha.PlayerActivity.getCurrentFocus()", "android.view.inputmethod.InputMethodManager.hideSoftInputFromWindow(this.getCurrentFocus().getWindowToken(),int)"], "Fixed commit": "f971f45208e7abb8df4187c92ecdcfda31e4f000", "Url": "https://api.github.com/repos/BartRongen/MMQ-alpha-android", "Date": "2016-01-28T00:45:55Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { org.terasology.logic.inventory.InventoryUtils.moveItem(request.getInstigator(), request.getFromInventory(), request.getFromSlot(), request.getToInventory(), request.getToSlot()); } finally { entity.send(new org.terasology.logic.inventory.events.InventoryChangeAcknowledgedRequest(request.getChangeId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1112/buggy-version/engine.src.main.java.org.terasology.logic.inventory.InventoryAuthoritySystem.java", "BodyUseAPI": ["org.terasology.logic.inventory.InventoryUtils.moveItem(request.getInstigator(),request.getFromInventory(),request.getFromSlot(),request.getToInventory(),request.getToSlot())", "org.terasology.logic.inventory.events.MoveItemRequest.getFromSlot()", "org.terasology.logic.inventory.events.MoveItemRequest.getToInventory()", "org.terasology.logic.inventory.events.MoveItemRequest.getInstigator()", "org.terasology.logic.inventory.events.MoveItemRequest.getFromInventory()", "org.terasology.logic.inventory.events.MoveItemRequest.getToSlot()"], "Fixed commit": "de23c992f184a68134d6bc27c44b28493f9396d6", "Url": "https://api.github.com/repos/MarcinSc/Terasology", "Date": "2014-04-22T23:44:48Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { strPathInput = strPathInput.subSequence(3, strPathInput.length()).toString(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/192/buggy-version/src.HttpsServer.java", "BodyUseAPI": ["java.lang.String.subSequence(int,int)", "java.lang.String.length()", "java.lang.CharSequence.toString()"], "Fixed commit": "0181611e02b71d5b10264da0a745648fb8ebf992", "Url": "https://api.github.com/repos/StevenBartfield/NetworksProject2", "Date": "2014-03-15T16:51:15Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (validStatus.contains(com.stormpath.sdk.servlet.mvc.LoginStatus.valueOf(status.toUpperCase()))) { return messageSource.getMessage((\"stormpath.web.login.form.status.\" + status), request.getLocale(), verifyEmailUri); } } catch (java.lang.IllegalArgumentException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8549/buggy-version/extensions.servlet.src.main.java.com.stormpath.sdk.servlet.mvc.DefaultLoginFormStatusResolver.java", "BodyUseAPI": ["com.stormpath.sdk.servlet.i18n.MessageSource.getMessage(java.lang.String,request.getLocale(),java.lang.String)", "java.lang.String.toUpperCase()", "javax.servlet.http.HttpServletRequest.getLocale()", "java.util.EnumSet<com.stormpath.sdk.servlet.mvc.LoginStatus>.contains(com.stormpath.sdk.servlet.mvc.LoginStatus.valueOf(status.toUpperCase()))", "com.stormpath.sdk.servlet.mvc.LoginStatus.valueOf(java.lang.String)"], "Fixed commit": "40d2230dba24904d2f5ebc7f0f34604c0b4aa0d1", "Url": "https://api.github.com/repos/stormpath/stormpath-sdk-java", "Date": "2016-08-18T14:10:47Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { load(plugin); } catch (java.security.InvalidParameterException e) { org.onexus.resource.manager.internal.PluginLoader.log.error(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3240/buggy-version/org.onexus.resource.manager.src.main.java.org.onexus.resource.manager.internal.PluginLoader.java", "BodyUseAPI": ["org.onexus.resource.manager.internal.PluginLoader.load(org.onexus.resource.api.Plugin)"], "Fixed commit": "9de2267fcf274832d066354b82278668d55d9cb8", "Url": "https://api.github.com/repos/onexus/onexus", "Date": "2012-11-15T10:21:39Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.graphics.Bitmap bitmap = android.graphics.BitmapFactory.decodeStream(resolver.openInputStream(uri)); bitmap = scaleBitmap(bitmap); java.lang.String fileName = (com.phonegap.DirectoryManager.getTempDirectoryPath(ctx)) + \"/resize.jpg\"; java.io.OutputStream os = new java.io.FileOutputStream(fileName); bitmap.compress(Bitmap.CompressFormat.JPEG, this.mQuality, os); os.close(); bitmap.recycle(); bitmap = null; this.success(new com.phonegap.api.PluginResult(PluginResult.Status.OK, (\"file://\" + fileName)), this.callbackId); java.lang.System.gc(); } catch (java.lang.Exception e) { e.printStackTrace(); this.failPicture(\"Error retrieving image.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1878/buggy-version/framework.src.com.phonegap.CameraLauncher.java", "BodyUseAPI": ["com.phonegap.DirectoryManager.getTempDirectoryPath(com.phonegap.CameraLauncher)", "java.lang.System.gc()", "java.io.OutputStream.close()", "com.phonegap.CameraLauncher.success(com.phonegap.api.PluginResult,java.lang.String)", "android.graphics.Bitmap.recycle()", "android.content.ContentResolver.openInputStream(android.net.Uri)", "android.graphics.BitmapFactory.decodeStream(resolver.openInputStream(uri))", "com.phonegap.CameraLauncher.scaleBitmap(android.graphics.Bitmap)", "android.graphics.Bitmap.compress(Bitmap.CompressFormat.JPEG,int,java.io.OutputStream)"], "Fixed commit": "2b20b1880d99d0f4d805064847e8d73fb4b2db33", "Url": "https://api.github.com/repos/macdonst/phonegap-android", "Date": "2011-09-10T19:49:00Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.idega.block.school.data.School school = ((com.idega.block.school.data.School) (getSchoolUserBusiness().getFirstManagingSchoolForUser(user))); if (school != null) { this._schoolID = ((java.lang.Integer) (school.getPrimaryKey())).intValue(); } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5292/buggy-version/src.java.is.idega.idegaweb.egov.serviceoffer.business.ServiceOfferSessionBean.java", "BodyUseAPI": ["com.idega.block.school.business.SchoolUserBusiness.getFirstManagingSchoolForUser(com.idega.user.data.User)", "com.idega.block.school.data.School.getPrimaryKey()", "((java.lang.Integer) (school.getPrimaryKey())).intValue()", "is.idega.idegaweb.egov.serviceoffer.business.ServiceOfferSessionBean.getSchoolUserBusiness()"], "Fixed commit": "bac8d96ccc3ccc619a411d9e292ffaf66fa08915", "Url": "https://api.github.com/repos/idega/is.idega.idegaweb.egov.serviceoffer", "Date": "2014-02-10T07:55:33Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { pin = cc.blynk.utils.ParseUtil.parseByte(split[1].substring(1, split[1].length())); } catch (cc.blynk.server.core.protocol.exceptions.ParseException e) { return new cc.blynk.server.core.model.PinStorageKey(deviceId, pinType, pin); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8086/buggy-version/server.core.src.main.java.cc.blynk.server.core.model.PinStorageKeyDeserializer.java", "BodyUseAPI": ["cc.blynk.utils.ParseUtil.parseByte(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "997bf47f55b05e6b10a64a3a9ffd4edde6c6f34f", "Url": "https://api.github.com/repos/blynkkk/blynk-server", "Date": "2017-06-19T14:49:07Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.data.clear(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2348/buggy-version/Development.ClientApplication.src.main.java.de.szut.dqi12.cheftrainer.client.view.fxmlcontrollers.LineChartController.java", "BodyUseAPI": ["this.data.clear()"], "Fixed commit": "4344b4173a5a9390613a820aecc0c385cff5da14", "Url": "https://api.github.com/repos/GAlexMES/CheftrainerFootballManager", "Date": "2015-10-01T15:51:17Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { database.addContact(new com.nervousfish.nervousfish.data_objects.Contact(\"Corn\", new com.nervousfish.nervousfish.data_objects.RSAKey(\"test\", \"a\", \"a\"), new nl.tudelft.ewi.ds.bankver.IBAN(\"NL02RABO0155534378\"))); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2916/buggy-version/app.src.main.java.com.nervousfish.nervousfish.activities.MainActivity.java", "BodyUseAPI": ["com.nervousfish.nervousfish.modules.database.IDatabase.addContact(com.nervousfish.nervousfish.data_objects.Contact)"], "Fixed commit": "5843380bd1affc34c1c2284e26f2e7b2ea698ace", "Url": "https://api.github.com/repos/ericcornelissen/NervousFish", "Date": "2017-06-23T11:30:17Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return repository.findByUsername(username); } catch (org.springframework.dao.EmptyResultDataAccessException x) { throw new org.springframework.security.core.userdetails.UsernameNotFoundException(\"Unable to find user\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5295/buggy-version/src.main.java.org.energyos.espi.thirdparty.service.impl.RetailCustomerServiceImpl.java", "BodyUseAPI": ["org.energyos.espi.thirdparty.repository.RetailCustomerRepository.findByUsername(java.lang.String)"], "Fixed commit": "4a9a4e2aba6adb91ce561bcfb84f51c33ac0adee", "Url": "https://api.github.com/repos/energyos/OpenESPI-ThirdParty-java", "Date": "2013-11-05T20:44:19Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { fr.zcraft.zlib.tools.items.ItemUtils.addItemFlagsMethod = org.bukkit.inventory.meta.ItemMeta.class.getMethod(\"addItemFlags\", itemFlagClass); } catch (java.lang.NoSuchMethodException ex) { fr.zcraft.zlib.tools.items.ItemUtils.addItemFlagsMethod = org.bukkit.inventory.meta.ItemMeta.class.getMethod(\"addItemFlags\", fr.zcraft.zlib.tools.items.ItemUtils.itemFlagValues.getClass()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8272/buggy-version/src.main.java.fr.zcraft.zlib.tools.items.ItemUtils.java", "BodyUseAPI": ["java.lang.Class.getMethod(java.lang.String,java.lang.Class<?>)"], "Fixed commit": "8fc9ab6c0265821891d12cdfd361fe38f4b24a4f", "Url": "https://api.github.com/repos/zDevelopers/zLib", "Date": "2016-05-19T13:31:40Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { gregorianDate.set(java.util.Calendar.YEAR, java.lang.Integer.parseInt(date.substring(0, 4))); gregorianDate.set(java.util.Calendar.MONTH, ((java.lang.Integer.parseInt(date.substring(4, 6))) - 1)); gregorianDate.set(java.util.Calendar.DAY_OF_MONTH, java.lang.Integer.parseInt(date.substring(6))); } catch (java.util.IllegalFormatException e) { java.lang.System.out.println(\"error: illegal date\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4579/buggy-version/src.DateUtils.GregorianCalendarParser.java", "BodyUseAPI": ["java.util.GregorianCalendar.set(int,int)", "java.util.GregorianCalendar.set(int,int)", "java.util.GregorianCalendar.set(int,int)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.substring(int)", "java.lang.String.substring(int,int)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "5152048b6d646047783b0170bd7f33361ed24bdc", "Url": "https://api.github.com/repos/mozsoy/FinancialAnalysis", "Date": "2016-04-22T02:55:24Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { context = new com.microsoftopentechnologies.intellij.helpers.aadauth.AuthenticationContext(settings.getAdAuthority()); token = context.acquireTokenByRefreshToken(token, com.microsoftopentechnologies.intellij.helpers.azure.AzureRestAPIHelper.getTenantName(subscriptionId), settings.getAzureServiceManagementUri(), settings.getClientId()); } catch (java.lang.Exception e) { if (e.getMessage().contains(\"HTTP status code 400\")) { try { token = com.microsoftopentechnologies.intellij.helpers.azure.AzureRestAPIHelper.acquireTokenInteractive(subscriptionId, apiManager); } catch (java.lang.Exception ignored) { token = null; } }else { token = null; } } finally { if (context != null) { context.dispose(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2440/buggy-version/src.android.com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManagerADAuthDecorator.java", "BodyUseAPI": ["com.microsoftopentechnologies.intellij.components.PluginSettings.getAzureServiceManagementUri()", "com.microsoftopentechnologies.intellij.helpers.azure.AzureRestAPIHelper.getTenantName(java.lang.String)", "com.microsoftopentechnologies.intellij.helpers.aadauth.AuthenticationContext.acquireTokenByRefreshToken(com.microsoftopentechnologies.intellij.helpers.aadauth.AuthenticationResult,com.microsoftopentechnologies.intellij.helpers.azure.AzureRestAPIHelper.getTenantName(subscriptionId),settings.getAzureServiceManagementUri(),settings.getClientId())", "com.microsoftopentechnologies.intellij.components.PluginSettings.getAdAuthority()", "com.microsoftopentechnologies.intellij.components.PluginSettings.getClientId()"], "Fixed commit": "d2b58b96a0c8781797ef2817d94b9e0fa33125c6", "Url": "https://api.github.com/repos/akrakovsky/msopentech-tools-for-intellij", "Date": "2015-02-11T06:20:58Z"},
{"Line": "=>811", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.Collections.sort(orderedLayers); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8931/buggy-version/icy.canvas.IcyCanvas.java", "BodyUseAPI": ["java.util.Collections.sort(java.util.List<icy.canvas.Layer>)"], "Fixed commit": "10325d301b63ae8518e341628b496208eceb3738", "Url": "https://api.github.com/repos/Icy-imaging/Icy-Kernel", "Date": "2017-06-06T14:25:46Z"},
{"Line": "=>427", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ifd.addField(cafe.image.tiff.TIFFTweaker.copyJPEGQTable(rin, rout, jpegTable, ((int) (rout.getStreamPointer())))); } catch (java.io.EOFException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3108/buggy-version/src.cafe.image.tiff.TIFFTweaker.java", "BodyUseAPI": ["cafe.image.tiff.TIFFTweaker.copyJPEGQTable(cafe.io.RandomAccessInputStream,cafe.io.RandomAccessOutputStream,cafe.image.tiff.TiffField<?>,((int) (rout.getStreamPointer())))", "cafe.io.RandomAccessOutputStream.getStreamPointer()", "cafe.image.tiff.IFD.addField(cafe.image.tiff.TiffField<?>)"], "Fixed commit": "3f550dc0c57eae99f56c9a1cc03fc0d820638308", "Url": "https://api.github.com/repos/dragon66/icafe", "Date": "2014-10-30T14:16:39Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ifd.addField(cafe.image.tiff.TIFFTweaker.copyJPEGHufTable(rin, rout, jpegTable, ((int) (rout.getStreamPointer())))); } catch (java.io.EOFException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3108/buggy-version/src.cafe.image.tiff.TIFFTweaker.java", "BodyUseAPI": ["cafe.image.tiff.IFD.addField(cafe.image.tiff.TiffField<?>)", "cafe.image.tiff.TIFFTweaker.copyJPEGHufTable(cafe.io.RandomAccessInputStream,cafe.io.RandomAccessOutputStream,cafe.image.tiff.TiffField<?>,((int) (rout.getStreamPointer())))", "cafe.io.RandomAccessOutputStream.getStreamPointer()"], "Fixed commit": "3f550dc0c57eae99f56c9a1cc03fc0d820638308", "Url": "https://api.github.com/repos/dragon66/icafe", "Date": "2014-10-30T14:16:39Z"},
{"Line": "=>420", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ifd.addField(cafe.image.tiff.TIFFTweaker.copyJPEGHufTable(rin, rout, jpegTable, ((int) (rout.getStreamPointer())))); } catch (java.io.EOFException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3108/buggy-version/src.cafe.image.tiff.TIFFTweaker.java", "BodyUseAPI": ["cafe.image.tiff.TIFFTweaker.copyJPEGHufTable(cafe.io.RandomAccessInputStream,cafe.io.RandomAccessOutputStream,cafe.image.tiff.TiffField<?>,((int) (rout.getStreamPointer())))", "cafe.io.RandomAccessOutputStream.getStreamPointer()", "cafe.image.tiff.IFD.addField(cafe.image.tiff.TiffField<?>)"], "Fixed commit": "3f550dc0c57eae99f56c9a1cc03fc0d820638308", "Url": "https://api.github.com/repos/dragon66/icafe", "Date": "2014-10-30T14:16:39Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { appendText(org.apache.commons.lang3.StringEscapeUtils.unescapeHtml4(state.originalText.substring(startPos, (endPos + 1))), state); } catch (java.lang.RuntimeException e) { try { org.dice_research.topicmodeling.wikipedia.markup.StackBasedMarkupDeletingMachine.LOGGER.error(((\"Got an exception when trying to process \\\"\" + (state.originalText.substring(startPos, (endPos + 1)))) + \"\\\". Ignoring it.\"), e); } catch (java.lang.Exception e2) { org.dice_research.topicmodeling.wikipedia.markup.StackBasedMarkupDeletingMachine.LOGGER.error(\"Got an exception when trying to process an undefined substring. It will be ignored.\", e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8967/buggy-version/topicmodeling.wikipedia.src.main.java.org.dice_research.topicmodeling.wikipedia.markup.StackBasedMarkupDeletingMachine.java", "BodyUseAPI": ["org.apache.commons.lang3.StringEscapeUtils.unescapeHtml4(state.originalText.substring(startPos, (endPos + 1)))", "state.originalText.substring(int,int)", "org.dice_research.topicmodeling.wikipedia.markup.StackBasedMarkupDeletingMachine.appendText(org.apache.commons.lang3.StringEscapeUtils.unescapeHtml4(state.originalText.substring(startPos, (endPos + 1))),org.dice_research.topicmodeling.wikipedia.markup.StackBasedMarkupDeletingMachineState)"], "Fixed commit": "52eb4631ac1bf693d74dda17f9f8bc557f454635", "Url": "https://api.github.com/repos/MichaelRoeder/topicmodeling", "Date": "2017-11-23T16:39:16Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (((((!(event.getPlayer().hasPotionEffect(PotionEffectType.SPEED))) && ((event.getPlayer().getInventory().getHelmet().getType().compareTo(Material.LEATHER_HELMET)) == 0)) && ((event.getPlayer().getInventory().getChestplate().getType().compareTo(Material.LEATHER_CHESTPLATE)) == 0)) && ((event.getPlayer().getInventory().getLeggings().getType().compareTo(Material.LEATHER_LEGGINGS)) == 0)) && ((event.getPlayer().getInventory().getBoots().getType().compareTo(Material.LEATHER_BOOTS)) == 0)) event.getPlayer().addPotionEffect(new org.bukkit.potion.PotionEffect(org.bukkit.potion.PotionEffectType.SPEED, 20, 1)); } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5499/buggy-version/src.littlegruz.arpeegee.listeners.PlayerSpeed.java", "BodyUseAPI": ["event.getPlayer().getInventory()", "event.getPlayer().getInventory().getChestplate().getType().compareTo(Material.LEATHER_CHESTPLATE)", "event.getPlayer().getInventory().getBoots()", "event.getPlayer().hasPotionEffect(PotionEffectType.SPEED)", "event.getPlayer().getInventory()", "org.bukkit.event.player.PlayerMoveEvent.getPlayer()", "event.getPlayer().addPotionEffect(org.bukkit.potion.PotionEffect)", "event.getPlayer().getInventory().getHelmet().getType()", "event.getPlayer().getInventory().getBoots().getType().compareTo(Material.LEATHER_BOOTS)", "org.bukkit.event.player.PlayerMoveEvent.getPlayer()", "event.getPlayer().getInventory().getLeggings().getType().compareTo(Material.LEATHER_LEGGINGS)", "event.getPlayer().getInventory()", "event.getPlayer().getInventory().getLeggings()", "event.getPlayer().getInventory().getChestplate()", "event.getPlayer().getInventory().getHelmet()", "org.bukkit.event.player.PlayerMoveEvent.getPlayer()", "event.getPlayer().getInventory().getHelmet().getType().compareTo(Material.LEATHER_HELMET)", "event.getPlayer().getInventory()", "org.bukkit.event.player.PlayerMoveEvent.getPlayer()", "event.getPlayer().getInventory().getLeggings().getType()", "event.getPlayer().getInventory().getChestplate().getType()", "org.bukkit.event.player.PlayerMoveEvent.getPlayer()", "event.getPlayer().getInventory().getBoots().getType()", "org.bukkit.event.player.PlayerMoveEvent.getPlayer()"], "Fixed commit": "2359e71c498d5d93a3d3b93dceb32bcc1e63721b", "Url": "https://api.github.com/repos/LittleGruz/LittleRPG", "Date": "2012-05-05T08:32:24Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { dataModel.registerObserver(mModelDataSetOberver); } catch (java.lang.IllegalStateException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6842/buggy-version/library.src.com.actionbarsherlock.widget.ActivityChooserView.java", "BodyUseAPI": ["com.actionbarsherlock.widget.ActivityChooserModel.registerObserver(android.database.DataSetObserver)"], "Fixed commit": "b2c18a9d175f9092f928dcbda7a5971ab31d6b6b", "Url": "https://api.github.com/repos/frisco82/ActionBarSherlock", "Date": "2012-07-13T10:15:04Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { dataModel.unregisterObserver(mModelDataSetOberver); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6842/buggy-version/library.src.com.actionbarsherlock.widget.ActivityChooserView.java", "BodyUseAPI": ["com.actionbarsherlock.widget.ActivityChooserModel.unregisterObserver(android.database.DataSetObserver)"], "Fixed commit": "b2c18a9d175f9092f928dcbda7a5971ab31d6b6b", "Url": "https://api.github.com/repos/frisco82/ActionBarSherlock", "Date": "2012-07-13T10:15:04Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { int id = bookmark.getId(); bookmark = com.pindroid.platform.BookmarkManager.GetById(id, base); android.widget.ShareActionProvider shareActionProvider = ((android.widget.ShareActionProvider) (menu.findItem(R.id.menu_view_sendbookmark).getActionProvider())); shareActionProvider.setShareIntent(com.pindroid.action.IntentHelper.SendBookmark(bookmark.getUrl(), bookmark.getDescription())); } catch (com.pindroid.providers.ContentNotFoundException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2406/buggy-version/src.com.pindroid.fragment.ViewBookmarkFragment.java", "BodyUseAPI": ["com.pindroid.providers.BookmarkContent.Bookmark.getUrl()", "android.view.Menu.findItem(R.id.menu_view_sendbookmark)", "com.pindroid.providers.BookmarkContent.Bookmark.getId()", "com.pindroid.providers.BookmarkContent.Bookmark.getDescription()", "com.pindroid.action.IntentHelper.SendBookmark(bookmark.getUrl(),bookmark.getDescription())", "android.widget.ShareActionProvider.setShareIntent(com.pindroid.action.IntentHelper.SendBookmark(bookmark.getUrl(), bookmark.getDescription()))", "com.pindroid.platform.BookmarkManager.GetById(int,com.pindroid.activity.FragmentBaseActivity)", "menu.findItem(R.id.menu_view_sendbookmark).getActionProvider()"], "Fixed commit": "d1adc3169ab050b31e9fff564da67609a75acb41", "Url": "https://api.github.com/repos/maxpower47/PinDroid", "Date": "2012-07-09T15:45:41Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { softwareMgr = softwareMgrs.getSoftwareManagerByClusterName(clusterName); } catch (com.vmware.bdd.exception.SoftwareManagerCollectorException e) { if ((ManagementOperation.PRE_DESTROY.equals(managementOperation)) || (ManagementOperation.DESTROY.equals(managementOperation))) { return org.springframework.batch.repeat.RepeatStatus.FINISHED; } throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6042/buggy-version/server.cluster-mgmt.src.main.java.com.vmware.bdd.service.job.software.SoftwareManagementStep.java", "BodyUseAPI": ["com.vmware.bdd.manager.SoftwareManagerCollector.getSoftwareManagerByClusterName(java.lang.String)"], "Fixed commit": "66a03f491fcabf2272872ed6d1869bb42d2a5895", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2014-09-22T07:31:10Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (!(healthyPoke[(nextPokeInt - 1)])) { frame.setLabelText((\"That Pokemon does not have energy to battle. Choose a different one: \" + \"\\n\")); } } catch (java.lang.Exception e) { frame.setLabelText(\"Invalid. Enter an integer between 1 and 6: \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3288/buggy-version/src.DefaultPokemon.PokeBattle.java", "BodyUseAPI": ["DefaultPokemon.PokeFrame.setLabelText(java.lang.String)"], "Fixed commit": "27864da243ce11b23411f1677b8be56c9970d3b4", "Url": "https://api.github.com/repos/brandonruoff8/pokemon-battle", "Date": "2017-11-16T03:00:25Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { Container v = au.com.roadhouse.rxdbflow.rx2.sql.observables.DBFlowBaseSingle.run(); if (v != null) { observer.onSuccess(v); }else { observer.onError(new java.lang.NullPointerException(\"The callable returned a null value\")); } } catch (java.lang.Throwable e) { io.reactivex.exceptions.Exceptions.throwIfFatal(e); observer.onError(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2810/buggy-version/RxDbFlow-Rx2.src.main.java.au.com.roadhouse.rxdbflow.rx2.sql.observables.DBFlowBaseSingle.java", "BodyUseAPI": ["au.com.roadhouse.rxdbflow.rx2.sql.observables.DBFlowBaseSingle.run()", "io.reactivex.SingleObserver<? super Container>.onError(java.lang.NullPointerException)", "io.reactivex.SingleObserver<? super Container>.onSuccess(Container)"], "Fixed commit": "67b436db78293844baca6f5f09183e2cbf40480c", "Url": "https://api.github.com/repos/roadhouse-dev/RxDbflow", "Date": "2017-05-12T01:39:31Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((link.getLinkBandwidth()) != 0L) this.networkGraph.setEdgeWeight(link, ((java.lang.Double) (1 / (link.getLinkBandwidth().doubleValue())))); else this.networkGraph.setEdgeWeight(link, java.lang.Double.MAX_VALUE); } catch (java.lang.NullPointerException npe) { this.networkGraph.setEdgeWeight(link, java.lang.Double.MAX_VALUE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4053/buggy-version/src.main.java.pt.ulisboa.tecnico.amorphous.internal.state.LocalStateService.java", "BodyUseAPI": ["pt.ulisboa.tecnico.amorphous.types.NetworkLink.getLinkBandwidth()", "pt.ulisboa.tecnico.amorphous.types.NetworkLink.getLinkBandwidth()", "org.jgrapht.graph.WeightedMultigraph<pt.ulisboa.tecnico.amorphous.types.NetworkNode, pt.ulisboa.tecnico.amorphous.types.NetworkLink>.setEdgeWeight(pt.ulisboa.tecnico.amorphous.types.NetworkLink,double)", "link.getLinkBandwidth().doubleValue()", "org.jgrapht.graph.WeightedMultigraph<pt.ulisboa.tecnico.amorphous.types.NetworkNode, pt.ulisboa.tecnico.amorphous.types.NetworkLink>.setEdgeWeight(pt.ulisboa.tecnico.amorphous.types.NetworkLink,((java.lang.Double) (1 / (link.getLinkBandwidth().doubleValue()))))"], "Fixed commit": "ad4e1d92479a4eb0b711edeede1e1baccb70226c", "Url": "https://api.github.com/repos/fazevedo86/floodlight", "Date": "2015-09-22T22:19:33Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { toReturn = ((com.excilys.computerdb.business.domain.Company) (namedJdbcTemplate.queryForObject(sql, namedParameters, new com.excilys.computerdb.business.domain.CompanyMapper()))); } catch (org.springframework.dao.EmptyResultDataAccessException e) { throw new org.springframework.dao.DataRetrievalFailureException(e.getMessage(), e.getRootCause()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4236/buggy-version/src.main.java.com.excilys.computerdb.business.dao.jdbc.JdbcCompanyRepository.java", "BodyUseAPI": ["org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.queryForObject(java.lang.String,org.springframework.jdbc.core.namedparam.SqlParameterSource,com.excilys.computerdb.business.domain.CompanyMapper)"], "Fixed commit": "7fa137c30c07008033e3438030f394d831a3918c", "Url": "https://api.github.com/repos/LeonardMeyer/computerDb", "Date": "2014-03-14T09:26:40Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { computerService.save(computer); } catch (org.springframework.dao.DataRetrievalFailureException e) { mav.setViewName(\"redirect:/Computer/Search\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4236/buggy-version/src.main.java.com.excilys.computerdb.controller.ComputerController.java", "BodyUseAPI": ["com.excilys.computerdb.business.services.ComputerService.save(com.excilys.computerdb.business.domain.ComputerDto)"], "Fixed commit": "7fa137c30c07008033e3438030f394d831a3918c", "Url": "https://api.github.com/repos/LeonardMeyer/computerDb", "Date": "2014-03-14T09:26:40Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { io.mycat.backend.mysql.BufferUtil.writeUB3(buffer, calcPacketSize()); buffer.put(packetId); buffer.put(command); buffer = c.writeToBuffer(arg, buffer); c.write(buffer); } catch (java.nio.BufferOverflowException e1) { buffer = c.checkWriteBuffer(buffer, ((c.getPacketHeaderSize()) + (calcPacketSize())), false); io.mycat.backend.mysql.BufferUtil.writeUB3(buffer, calcPacketSize()); buffer.put(packetId); buffer.put(command); buffer = c.writeToBuffer(arg, buffer); c.write(buffer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5699/buggy-version/src.main.java.io.mycat.net.mysql.CommandPacket.java", "BodyUseAPI": ["io.mycat.net.BackendAIOConnection.write(java.nio.ByteBuffer)", "io.mycat.backend.mysql.BufferUtil.writeUB3(java.nio.ByteBuffer,int)", "io.mycat.net.BackendAIOConnection.writeToBuffer(byte[],java.nio.ByteBuffer)", "java.nio.ByteBuffer.put(byte)", "io.mycat.net.mysql.CommandPacket.calcPacketSize()", "java.nio.ByteBuffer.put(io.mycat.net.mysql.CommandPacket)"], "Fixed commit": "932b7db6542a69bc056bb953be13efddb798adad", "Url": "https://api.github.com/repos/brotherbin/Mycat-Server", "Date": "2016-11-15T08:03:15Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (plm.universe.World current : worlds) { if (current.getEntities().isEmpty()) throw new java.lang.RuntimeException(\"Every world in every exercise must have at least one entity when calling setup(). Please fix your exercise.\"); current.setEntities(lang.mutateEntities(this, current.getEntities(), whatToMutate)); } } catch (plm.core.PLMCompilerException e) { lastResult = plm.core.model.lesson.ExecutionProgress.newCompilationError(e.getLocalizedMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4025/buggy-version/src.plm.core.model.lesson.Exercise.java", "BodyUseAPI": ["plm.universe.World.getEntities()", "current.getEntities().isEmpty()", "plm.universe.World.setEntities(lang.mutateEntities(this, current.getEntities(), whatToMutate))", "plm.core.lang.ProgrammingLanguage.mutateEntities(plm.core.model.lesson.Exercise,current.getEntities(),plm.core.model.lesson.Exercise.StudentOrCorrection)", "plm.universe.World.getEntities()"], "Fixed commit": "ea36ba8161beffb38fc57a407412ecf06693b0e1", "Url": "https://api.github.com/repos/oster/PLM", "Date": "2014-09-30T14:42:32Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (com.vengeful.sloths.Models.Entity.Entity entity : map.getTile(dst).getEntities()) { entity.takeDamage(attackDamage); } } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3256/buggy-version/src.com.vengeful.sloths.Models.EntityMapInteractionCommands.EntityAttackCommand.java", "BodyUseAPI": ["com.vengeful.sloths.Models.Map.Map.getTile(com.vengeful.sloths.Utility.Coord)", "map.getTile(dst).getEntities()", "com.vengeful.sloths.Models.Entity.Entity.takeDamage(int)"], "Fixed commit": "7bf794dd0ca858a8608f6a903c267de8d4732340", "Url": "https://api.github.com/repos/VengefulSloths/Iteration2", "Date": "2016-03-08T17:11:23Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { movieService.updateMovie(movie); } catch (java.sql.SQLException e) { com.moviesApp.ExceptionsUtil.sendException(com.moviesApp.controller.RatingServlet.LOGGER, req, resp, \"/error\", \"\", e); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8045/buggy-version/src.main.java.com.moviesApp.controller.RatingServlet.java", "BodyUseAPI": ["com.moviesApp.service.MovieService.updateMovie(com.moviesApp.entities.Movie)"], "Fixed commit": "0ae41a2e293dc1ff4086bc91c073d8b7a98e2cbf", "Url": "https://api.github.com/repos/sharko809/movieApp", "Date": "2016-08-17T14:37:10Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.Collections.sort(this.items, comparator); } catch (java.lang.IllegalArgumentException iae) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3070/buggy-version/app.src.main.java.de.zalando.zmon.adapter.BaseListAdapter.java", "BodyUseAPI": ["java.util.Collections.sort(java.util.List<T>,java.util.Comparator<T>)"], "Fixed commit": "a93334cf7bcc402960e9dddc13a3ff27ae0eeda7", "Url": "https://api.github.com/repos/zalando-zmon/zmon-android", "Date": "2016-01-17T10:52:54Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.Collections.sort(this.items, comparator); } catch (java.lang.IllegalArgumentException iae) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3070/buggy-version/app.src.main.java.de.zalando.zmon.adapter.BaseListAdapter.java", "BodyUseAPI": ["java.util.Collections.sort(java.util.List<T>,java.util.Comparator<T>)"], "Fixed commit": "a93334cf7bcc402960e9dddc13a3ff27ae0eeda7", "Url": "https://api.github.com/repos/zalando-zmon/zmon-android", "Date": "2016-01-17T10:52:54Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { bookId = java.lang.Integer.parseInt(bookIdstring); } catch (java.lang.Exception e) { java.lang.System.out.println(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/9248/buggy-version/ReadThatBook.src.java.admin.WishlistServlet.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "77cbbe30e8f392bf9ec21edd53000de0f62dc548", "Url": "https://api.github.com/repos/pmahend1/Software-Systems-Design-and-Implementation", "Date": "2016-12-04T07:47:16Z"},
{"Line": "=>423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return getKubernetesGlobalExtensions().getOAuthClient(name); } catch (io.fabric8.kubernetes.api.WebApplicationException e) { if ((e.getResponse().getStatus()) == 404) { return null; }else { throw e; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4292/buggy-version/components.kubernetes-api.src.main.java.io.fabric8.kubernetes.api.KubernetesClient.java", "BodyUseAPI": ["io.fabric8.kubernetes.api.KubernetesClient.getKubernetesGlobalExtensions()", "io.fabric8.kubernetes.api.KubernetesGlobalExtensions.getOAuthClient(java.lang.String)"], "Fixed commit": "4db57198410c983a6bd21e0cb17c9eaa5ac23884", "Url": "https://api.github.com/repos/rhuss/fabric8", "Date": "2015-05-08T13:11:22Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.getJobSendMessageService().sendMessage(this.getMessageByUsername(username), jobQueueConfig.getQueueName()); } catch (java.io.IOException e) { } catch (java.util.concurrent.TimeoutException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8959/buggy-version/api-job.src.main.java.com.leonardorifeli.hermes.social.api.job.business.service.GithubStartMessageService.java", "BodyUseAPI": ["com.leonardorifeli.hermes.social.api.job.business.service.SendMessageService.sendMessage(java.lang.String,jobQueueConfig.getQueueName())", "com.leonardorifeli.hermes.social.api.job.business.service.GithubStartMessageService.getJobSendMessageService()", "com.leonardorifeli.hermes.social.api.job.business.service.GithubStartMessageService.getMessageByUsername(java.lang.String)", "com.leonardorifeli.hermes.social.api.job.business.enums.GithubStartJobQueueEnum.getQueueName()"], "Fixed commit": "3d405426d897caecc11de22886f8d219ee5cc245", "Url": "https://api.github.com/repos/leonardorifeli/hermes-social-api", "Date": "2016-09-15T16:34:50Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { javax.swing.SwingUtilities.invokeAndWait(new java.lang.Runnable() { @java.lang.Override public void run() { minesweeper.aview.gui.MinesweeperFrame gui = injector.getInstance(minesweeper.aview.gui.MinesweeperFrame.class); gui.setVisible(true); } }); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6700/buggy-version/src.minesweeper.Minesweeper.java", "BodyUseAPI": ["java.lang.Object()", "minesweeper.aview.gui.MinesweeperFrame.setVisible(boolean)", "javax.swing.SwingUtilities.invokeAndWait(java.lang.Runnable)", "com.google.inject.Injector.getInstance(java.lang.Class)"], "Fixed commit": "0cf98544936fc41355d8793a1ed59b7890b1bb03", "Url": "https://api.github.com/repos/MinesweeperHtwg/MinesweeperSoEn", "Date": "2015-12-06T23:08:57Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Object question = questions.get(currentIndex); setQuestion(question); } catch (java.lang.IndexOutOfBoundsException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1588/buggy-version/src.com.tw.step.quizup.activity.QuizupMain.java", "BodyUseAPI": ["java.util.List<java.lang.Object>.get(java.lang.Integer)", "1.setQuestion(java.lang.Object)"], "Fixed commit": "b823074e8e0e260ea28dd1d646444b6327d3150c", "Url": "https://api.github.com/repos/quizup/quizup", "Date": "2014-11-03T13:16:26Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { java.io.DataOutputStream dout = conn.openDataOutputStream(); try { java.lang.String linkName = ccre.cluck.tcp.CluckProtocol.handleHeader(din, dout, null); if (linkName == null) { linkName = UniqueIds.global.nextHexId(\"tcpserv\"); } ccre.log.Logger.fine((((\"Client connected at \" + (java.lang.System.currentTimeMillis())) + \" named \") + linkName)); ccre.cluck.CluckLink deny = ccre.cluck.tcp.CluckProtocol.handleSend(dout, linkName, node); ccre.cluck.tcp.CluckProtocol.handleRecv(din, linkName, node, deny); } finally { dout.close(); } } finally { din.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6894/buggy-version/CommonChickenRuntimeEngine.src.ccre.cluck.tcp.CluckTCPServer.java", "BodyUseAPI": ["ccre.cluck.tcp.CluckProtocol.handleSend(java.io.DataOutputStream,java.lang.String,ccre.cluck.CluckNode)", "ccre.cluck.tcp.CluckProtocol.handleHeader(java.io.DataInputStream,java.io.DataOutputStream,<nulltype>)", "ccre.net.ClientSocket.openDataOutputStream()", "java.lang.System.currentTimeMillis()", "ccre.log.Logger.fine(java.lang.String)", "UniqueIds.global.nextHexId(java.lang.String)", "java.io.DataOutputStream.close()", "ccre.cluck.tcp.CluckProtocol.handleRecv(java.io.DataInputStream,java.lang.String,ccre.cluck.CluckNode,ccre.cluck.CluckLink)"], "Fixed commit": "7db121b85005f8c78ca8ede8f80750c753eb2e5d", "Url": "https://api.github.com/repos/flamingchickens1540/Common-Chicken-Runtime-Engine", "Date": "2014-10-24T23:04:45Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { key = request.get(\"accessKey\").getAsString(); } catch (java.lang.UnsupportedOperationException e) { com.devicehive.websockets.handlers.CommonHandlers.logger.error(\"Access Key is null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/906/buggy-version/devicehive-frontend.src.main.java.com.devicehive.websockets.handlers.CommonHandlers.java", "BodyUseAPI": ["request.get(\"accessKey\").getAsString()", "com.google.gson.JsonObject.get(java.lang.String)"], "Fixed commit": "0cfb86dc818e4edee09ff8363eb84a8afeca5559", "Url": "https://api.github.com/repos/devicehive/devicehive-java-server", "Date": "2016-09-07T15:51:53Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.quantity = java.lang.Double.parseDouble(measurableUnitString.replaceAll(\"[A-Z,a-z, ]\", \"\")); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2289/buggy-version/src.com.customfit.ctg.model.Measurement.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "904486880f3578defc9c7b2ad70e96e2e076f123", "Url": "https://api.github.com/repos/daball/Cooking-to-Goal", "Date": "2011-04-27T20:40:13Z"},
{"Line": "=>1950", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { r = ((org.javarosa.core.model.condition.Recalculate) (_f.addTriggerable(r))); } catch (org.javarosa.xpath.XPathException xpe) { throw org.javarosa.xform.parse.XFormParser.buildParseException(nodeset, xpe.getMessage(), xpathCalc, \"calculate\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2043/buggy-version/javarosa.src.main.java.org.javarosa.xform.parse.XFormParser.java", "BodyUseAPI": ["org.javarosa.core.model.FormDef.addTriggerable(org.javarosa.core.model.condition.Recalculate)"], "Fixed commit": "cb2f8d7f94ba1be4326d421b1562cea82e0c0125", "Url": "https://api.github.com/repos/dimagi/commcare-core", "Date": "2016-12-05T23:40:22Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.Arrays.sort(v, new java.util.Comparator<java.lang.String>() { @java.lang.Override public int compare(final java.lang.String arg0, final java.lang.String arg1) { try { return dtype.compare(arg0, arg1); } catch (final java.lang.Exception e) { throw new java.lang.RuntimeException(e); } } }); } catch (java.lang.Exception e) { controller.getResources().getLogger().warn(\"Invalid data type!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6810/buggy-version/src.gui.org.deidentifier.arx.gui.view.impl.analyze.ViewDistribution.java", "BodyUseAPI": ["org.deidentifier.arx.DataType<?>.compare(java.lang.String,java.lang.String)", "java.util.Arrays.sort(java.lang.String[],java.util.Comparator<java.lang.String>)", "java.lang.Object()"], "Fixed commit": "df56586f0f5d09bf2850109db5f8ba56b8e58348", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2014-01-17T22:32:35Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.Arrays.sort(v, new java.util.Comparator<java.lang.String>() { @java.lang.Override public int compare(final java.lang.String arg0, final java.lang.String arg1) { try { return dtype.compare(arg0, arg1); } catch (final java.lang.Exception e) { throw new java.lang.RuntimeException(e); } } }); } catch (java.lang.Exception e) { controller.getResources().getLogger().warn(\"Invalid data type!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6810/buggy-version/src.gui.org.deidentifier.arx.gui.view.impl.analyze.ViewDensity.java", "BodyUseAPI": ["java.util.Arrays.sort(java.lang.String[],java.util.Comparator<java.lang.String>)", "org.deidentifier.arx.DataType<?>.compare(java.lang.String,java.lang.String)", "java.lang.Object()"], "Fixed commit": "df56586f0f5d09bf2850109db5f8ba56b8e58348", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2014-01-17T22:32:35Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { solrClient.query(query); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/462/buggy-version/emonocot-harvest.src.main.java.org.emonocot.harvest.common.SolrSuggesterIndexingTasklet.java", "BodyUseAPI": ["org.apache.solr.client.solrj.SolrClient.query(org.apache.solr.client.solrj.SolrQuery)"], "Fixed commit": "6dd31ffd841f8c89aa062a06e86c92d6dbc26378", "Url": "https://api.github.com/repos/RBGKew/powop", "Date": "2016-09-01T14:00:20Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mSensorManager.registerListener(mSensorListener, mSensorManager.getDefaultSensor(Sensor.TYPE_ROTATION_VECTOR), SensorManager.SENSOR_DELAY_UI); } catch (java.lang.Exception e) { android.util.Log.e(TAG, \"Error starting sensor listener \", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7247/buggy-version/android.app.src.main.java.quadcopter.coconauts.net.quadcopter.Main.java", "BodyUseAPI": ["android.hardware.SensorManager.registerListener(quadcopter.coconauts.net.quadcopter.RotationEventListener,mSensorManager.getDefaultSensor(Sensor.TYPE_ROTATION_VECTOR),SensorManager.SENSOR_DELAY_UI)", "android.hardware.SensorManager.getDefaultSensor(Sensor.TYPE_ROTATION_VECTOR)"], "Fixed commit": "af64fa84bbd15eb6956027a77cf5bbdd19f4423b", "Url": "https://api.github.com/repos/guetz/Arduino-Android-Bluetooth", "Date": "2015-03-08T04:47:51Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String[] parsePatterns = new java.lang.String[]{ org.motechproject.whp.common.util.WHPDate.DATE_FORMAT }; org.apache.commons.lang.time.DateUtils.parseDateStrictly(date, parsePatterns); } catch (java.lang.Exception e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1420/buggy-version/whp-remedi-inbound.src.main.java.org.motechproject.whp.webservice.validation.ContainerPatientMappingRequestValidator.java", "BodyUseAPI": ["org.apache.commons.lang.time.DateUtils.parseDateStrictly(java.lang.String,java.lang.String[])"], "Fixed commit": "329976f5a14dae9fae59a87ead268ce6dd02bd70", "Url": "https://api.github.com/repos/motech/motech-whp", "Date": "2012-10-26T10:45:23Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.catrobat.catroid.ProjectManager.getInstance().initializeDefaultProject(context); } catch (java.lang.IllegalArgumentException e) { android.util.Log.d(\"LWP\", \"Initializing default project failed because the program was already initialized\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1943/buggy-version/catroid.src.org.catrobat.catroid.utils.Utils.java", "BodyUseAPI": ["org.catrobat.catroid.ProjectManager.getInstance().initializeDefaultProject(android.content.Context)", "org.catrobat.catroid.ProjectManager.getInstance()"], "Fixed commit": "a274bb644fb50b0ebb815e2a947cfa11c6fd621c", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2013-11-27T12:08:33Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (!(acknowledgeMode.isAutoAck())) { channel.basicQos(prefetchCount); } } catch (java.io.IOException e) { this.activeObjectCounter.release(this); throw new org.springframework.amqp.rabbit.listener.FatalListenerStartupException(\"Cannot set basicQos.\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7801/buggy-version/spring-rabbit.src.main.java.org.springframework.amqp.rabbit.listener.BlockingQueueConsumer.java", "BodyUseAPI": ["com.rabbitmq.client.Channel.basicQos(int)", "org.springframework.amqp.core.AcknowledgeMode.isAutoAck()"], "Fixed commit": "617e35a2d61aeff25aed7bb950a02c0402265f19", "Url": "https://api.github.com/repos/caspermout/spring-amqp", "Date": "2014-05-26T13:53:03Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String line; while ((line = reader.readLine()) != null) { parsedPersons.add(csv.Person.toPerson(line)); } } catch (java.lang.Exception e) { java.lang.System.out.println(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8214/buggy-version/src.java.csv.Csv2Database.java", "BodyUseAPI": ["java.io.BufferedReader.readLine()", "csv.Person.toPerson(java.lang.String)", "java.util.ArrayList<csv.Person>.add(csv.Person.toPerson(line))"], "Fixed commit": "9db3a375ce22b84719700a7805a5796fd8435dd4", "Url": "https://api.github.com/repos/buttrfly/csv2db", "Date": "2015-08-10T20:04:44Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return valueGetter.getObject(entity, sgField); } catch (java.lang.Exception e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3517/buggy-version/src.main.java.com.silentgo.json.deserializer.ValueGetterDeserializer.java", "BodyUseAPI": ["com.silentgo.json.mapping.getter.ValueGetter.getObject(com.silentgo.json.model.JSONEntity,com.silentgo.utils.reflect.SGField)"], "Fixed commit": "1ced0d565a17aa8ead8c0fdb9695105b1ef623a1", "Url": "https://api.github.com/repos/Teddy-Zhu/SilentGo-JSON", "Date": "2017-07-04T08:48:40Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String server = parserServer(element); int port = parsePort(element); java.lang.String password = parsePassword(element); java.lang.String method = parseMethod(element); com.lynn9388.Account account = new com.lynn9388.Account(server, port, password, method, \"\", false); accounts.add(account); } catch (java.lang.Exception e) { java.lang.System.err.println((\"Parse element error:\\n\" + element)); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1129/buggy-version/src.main.java.com.lynn9388.Website.java", "BodyUseAPI": ["com.lynn9388.Website.parsePort(org.jsoup.nodes.Element)", "com.lynn9388.Website.parserServer(org.jsoup.nodes.Element)", "java.util.List<com.lynn9388.Account>.add(com.lynn9388.Account)", "com.lynn9388.Website.parsePassword(org.jsoup.nodes.Element)", "com.lynn9388.Website.parseMethod(org.jsoup.nodes.Element)"], "Fixed commit": "d7253b773f669a8ca73e4fde4e653d3b6342b8cc", "Url": "https://api.github.com/repos/lynn9388/update-shadowsocks", "Date": "2016-07-28T05:35:13Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.springframework.context.ApplicationContext context = new org.springframework.context.support.ClassPathXmlApplicationContext(\"Spring-Mail.xml\"); this.mailer = ((app.service.Mailer) (context.getBean(\"mailer\"))); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8515/buggy-version/src.main.java.app.service.MailService.java", "BodyUseAPI": ["org.springframework.context.ApplicationContext.getBean(java.lang.String)"], "Fixed commit": "2398204f25a099ccfa33bc13d879471357205df6", "Url": "https://api.github.com/repos/serpentisx/road-watch", "Date": "2017-11-14T18:20:21Z"},
{"Line": "=>537", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { net.apocalypselabs.symat.Debug.println(filedata.toString()); net.apocalypselabs.symat.Debug.println(filedata.getAbsolutePath()); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5801/buggy-version/src.net.apocalypselabs.symat.CodeEditor.java", "BodyUseAPI": ["java.io.File.toString()", "net.apocalypselabs.symat.Debug.println(java.lang.String)", "net.apocalypselabs.symat.Debug.println(java.lang.String)", "java.io.File.getAbsolutePath()"], "Fixed commit": "df4ad2531c3462e755d5bfac57519443b5698c0e", "Url": "https://api.github.com/repos/Netsyms/SyMAT", "Date": "2015-01-13T07:44:33Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return terms.get(term); } catch (java.lang.Exception e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5329/buggy-version/src.sta.entity.TermStorageBTree.java", "BodyUseAPI": ["sta.utils.BTree<java.lang.String, sta.entity.Term>.get(java.lang.String)"], "Fixed commit": "20ac3c29dc52586eea5e32eebfac197cf9a64dc7", "Url": "https://api.github.com/repos/MartinM-B/SearchEngine", "Date": "2014-11-06T13:21:37Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { waitedObject.notify(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8210/buggy-version/ninitory-server.src.main.java.com.ninitory.dev.server.handler.SmsHandler.java", "BodyUseAPI": ["com.ninitory.dev.server.auth.WaitedObjectController.WaitedObject.notify()"], "Fixed commit": "feeda52482730e256b1d2d58790835ef9ab7fb62", "Url": "https://api.github.com/repos/rahmatii1366/ninitory-project", "Date": "2017-07-15T10:11:14Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return resource.get(id); } catch (java.lang.AbstractMethodError error) { try { java.lang.reflect.Method m = resource.getClass().getMethod(\"get\", long.class); java.lang.Object[] args = new java.lang.Object[]{ id }; return ((T) (java.lang.reflect.Proxy.getInvocationHandler(resource).invoke(((java.lang.Object) (resource)), m, args))); } catch (java.lang.NoSuchMethodException e) { e.printStackTrace(); } catch (java.lang.Throwable throwable) { throwable.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5172/buggy-version/client.src.main.java.uk.ac.cam.echo.client.ProxyResource.java", "BodyUseAPI": ["R.get(java.lang.Long)"], "Fixed commit": "0e42bba441aedc41527031212772815705410768", "Url": "https://api.github.com/repos/PetarV-/CSTIB-Echo", "Date": "2014-02-25T07:06:16Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { programs.add(org.syphr.mythtv.proto.impl.Protocol63Utils.parseProgramInfo(args.subList(i, (i += 41)), airDateFormat)); } catch (java.lang.IndexOutOfBoundsException e) { throw new org.syphr.mythtv.proto.ProtocolException(args.toString(), org.syphr.mythtv.proto.ProtocolException.Direction.RECEIVE, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3355/buggy-version/src.main.java.org.syphr.mythtv.proto.impl.Protocol63Utils.java", "BodyUseAPI": ["java.util.List<java.lang.String>.subList(int,int)", "org.syphr.mythtv.proto.impl.Protocol63Utils.parseProgramInfo(java.util.List<java.lang.String>,java.text.DateFormat)", "java.util.List<org.syphr.mythtv.proto.data.ProgramInfo>.add(org.syphr.mythtv.proto.data.ProgramInfo)"], "Fixed commit": "c98bad75b2aec2b92a913ac20012b07b537f1b26", "Url": "https://api.github.com/repos/syphr42/libmythtv-java", "Date": "2011-03-16T01:40:58Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { shortcutDirectory.deleteObserver(this); iconDirectory.deleteObserver(this); } finally { super.finalize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6136/buggy-version/src.main.java.com.playonlinux.domain.ShortcutSet.java", "BodyUseAPI": ["com.playonlinux.utils.ObservableDirectory.deleteObserver(com.playonlinux.domain.ShortcutSet)", "com.playonlinux.utils.ObservableDirectory.deleteObserver(com.playonlinux.domain.ShortcutSet)"], "Fixed commit": "81285b169f902a4f1b65b5e4d7843cebb46fb4ab", "Url": "https://api.github.com/repos/Tutul-/POL-POM-5", "Date": "2015-05-25T12:52:26Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { observableWineprefixes.deleteObserver(this); } finally { super.finalize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6136/buggy-version/src.main.java.com.playonlinux.services.InstalledVirtualDrivesPlayOnLinuxImplementation.java", "BodyUseAPI": ["com.playonlinux.utils.ObservableDirectory.deleteObserver(com.playonlinux.services.InstalledVirtualDrivesPlayOnLinuxImplementation)"], "Fixed commit": "81285b169f902a4f1b65b5e4d7843cebb46fb4ab", "Url": "https://api.github.com/repos/Tutul-/POL-POM-5", "Date": "2015-05-25T12:52:26Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { shortcutSet.deleteObserver(this); } finally { super.finalize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6136/buggy-version/src.main.java.com.playonlinux.services.InstalledApplicationsPlayOnLinuxImplementation.java", "BodyUseAPI": ["com.playonlinux.domain.ShortcutSet.deleteObserver(com.playonlinux.services.InstalledApplicationsPlayOnLinuxImplementation)"], "Fixed commit": "81285b169f902a4f1b65b5e4d7843cebb46fb4ab", "Url": "https://api.github.com/repos/Tutul-/POL-POM-5", "Date": "2015-05-25T12:52:26Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mBestLocation = mLocationManager.getLastKnownLocation(LocationManager.NETWORK_PROVIDER); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4305/buggy-version/devsmartlib.src.com.devsmart.android.LocationService.java", "BodyUseAPI": ["android.location.LocationManager.getLastKnownLocation(LocationManager.NETWORK_PROVIDER)"], "Fixed commit": "24338f9489369a9e40956af3175cd81dfe7fdab5", "Url": "https://api.github.com/repos/cfgxy/DevsmartLib-Android", "Date": "2012-07-06T01:58:46Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.io.File cpuInfo = new java.io.File(com.bumptech.glide.load.engine.executor.GlideExecutor.CPU_LOCATION); final java.util.regex.Pattern cpuNamePattern = java.util.regex.Pattern.compile(com.bumptech.glide.load.engine.executor.GlideExecutor.CPU_NAME_REGEX); cpus = cpuInfo.listFiles(new java.io.FilenameFilter() { @java.lang.Override public boolean accept(java.io.File file, java.lang.String s) { return cpuNamePattern.matcher(s).matches(); } }); } catch (java.lang.Throwable t) { if (android.util.Log.isLoggable(com.bumptech.glide.load.engine.executor.GlideExecutor.TAG, Log.ERROR)) { android.util.Log.e(com.bumptech.glide.load.engine.executor.GlideExecutor.TAG, \"Failed to calculate accurate cpu count\", t); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3521/buggy-version/library.src.main.java.com.bumptech.glide.load.engine.executor.GlideExecutor.java", "BodyUseAPI": ["java.io.File.listFiles(java.io.FilenameFilter)", "java.util.regex.Pattern.compile(java.lang.String)", "java.util.regex.Matcher.matches()", "java.lang.Object()", "java.util.regex.Pattern.matcher(java.lang.String)"], "Fixed commit": "8a291a8782f2694d9db9766680af62e6eab085bb", "Url": "https://api.github.com/repos/TWiStErRob/glide", "Date": "2015-11-02T19:45:04Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { temp = new java.lang.String(resultBuffer.toString().getBytes(), \"UTF-8\"); } catch (java.io.UnsupportedEncodingException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2543/buggy-version/FloatButton.app.src.main.java.com.example.clevercong.floatbutton.view.FloatWindowRecordViewHandler.java", "BodyUseAPI": ["java.lang.StringBuffer.toString()", "java.lang.String.getBytes()"], "Fixed commit": "25db474b73e48a257f77daaf9c65f51134d76f77", "Url": "https://api.github.com/repos/cleverchap/floatbuttonmemo", "Date": "2017-05-26T11:08:26Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { soot.jimple.apkpler.plugin.icc.ICCLinksConfigFileParser iccLinksParser = new soot.jimple.apkpler.plugin.icc.ICCLinksConfigFileParser(this.iccLinksConfigPath); pkg2links = iccLinksParser.parse(); } catch (java.lang.Exception ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2006/buggy-version/plugins.eclipse-projects.Apkpler-Plugin-InterComponentCommunication.src.soot.jimple.apkpler.plugin.icc.InterComponentCommunicationPlugin.java", "BodyUseAPI": ["soot.jimple.apkpler.plugin.icc.ICCLinksConfigFileParser.parse()"], "Fixed commit": "db54f74df6204be9f8c29028eec7823e3eecd232", "Url": "https://api.github.com/repos/lilicoding/Apkpler", "Date": "2015-03-25T11:40:06Z"},
{"Line": "=>1056", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (nameProperty.startsWith(\"domain.\")) { java.lang.String property = nameProperty.substring(7); nameHeader = getDomainMultilang().getString(property); }else { nameHeader = getMultilang().getString((\"yellowpages.column.\" + nameProperty)); } } catch (java.util.MissingResourceException ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7809/buggy-version/yellowpages.yellowpages-war.src.main.java.com.stratelia.webactiv.yellowpages.control.YellowpagesSessionController.java", "BodyUseAPI": ["java.lang.String.substring(int)", "org.silverpeas.util.LocalizationBundle.getString(java.lang.String)", "getMultilang().getString(java.lang.String)", "com.stratelia.webactiv.yellowpages.control.YellowpagesSessionController.getDomainMultilang()", "com.stratelia.webactiv.yellowpages.control.YellowpagesSessionController.getMultilang()", "java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "bd9614eb12ba0305bb9a5b11a3c835885cefe6c6", "Url": "https://api.github.com/repos/SilverTeamWork/Silverpeas-Components", "Date": "2015-12-15T09:38:57Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { checkLangFiles(); } catch (net.visualillusionsent.utils.UtilityException uex) { java.util.logging.Logger.getLogger(java.util.logging.Logger.GLOBAL_LOGGER_NAME).warning(\"[VIUtils] Exception thrown from LocaleHelper, check logs.\"); net.visualillusionsent.utils.UtilsLogger.warning(\"Initialize Error: \", uex); } catch (java.net.URISyntaxException usex) { java.util.logging.Logger.getLogger(java.util.logging.Logger.GLOBAL_LOGGER_NAME).warning(\"[VIUtils] Exception thrown from LocaleHelper, check logs.\"); net.visualillusionsent.utils.UtilsLogger.warning(\"Initialize Error: \", usex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1227/buggy-version/src.main.java.net.visualillusionsent.utils.LocaleHelper.java", "BodyUseAPI": ["net.visualillusionsent.utils.LocaleHelper.checkLangFiles()"], "Fixed commit": "bea2e1aade99808c6a5ed2a9efdcdee572837eef", "Url": "https://api.github.com/repos/Visual-Illusions/viutils", "Date": "2013-05-30T16:54:55Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { context.unregisterReceiver(org.gemini.init.Receiver.instance); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4374/buggy-version/src.main.java.org.gemini.init.Receiver.java", "BodyUseAPI": ["android.content.Context.unregisterReceiver(org.gemini.init.Receiver)"], "Fixed commit": "2b515db24593b064ac2baf5e59ebd3342a9a950e", "Url": "https://api.github.com/repos/Hzj-jie/android-init", "Date": "2016-07-21T00:58:53Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.restfb.FacebookClient.AccessToken token = getFacebookUserToken(code, callbackURL.toString()); java.lang.String accessToken = token.getAccessToken(); java.util.Map<java.lang.String, java.lang.String> claims = introspectAuth(accessToken); if (!(\"true\".equals(claims.get(\"valid\")))) { response.sendRedirect(callbackFailure); }else { java.lang.String newJwt = createJwt(claims); java.lang.System.out.println((\"New User Authed: \" + (claims.get(\"id\")))); response.sendRedirect((((callbackSuccess) + \"/\") + newJwt)); } } catch (twitter4j.JSONException e) { org.gameontext.auth.Log.log(java.util.logging.Level.WARNING, this, \"Failed to parse access token response JSON.\"); response.sendRedirect(callbackFailure); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8908/buggy-version/auth-app.src.main.java.org.gameontext.auth.facebook.FacebookCallback.java", "BodyUseAPI": ["javax.servlet.http.HttpServletResponse.sendRedirect(java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "javax.servlet.http.HttpServletResponse.sendRedirect(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.lang.String.toString()", "FacebookClient.AccessToken.getAccessToken()", "org.gameontext.auth.facebook.FacebookCallback.createJwt(java.util.Map<java.lang.String, java.lang.String>)", "org.gameontext.auth.facebook.FacebookCallback.getFacebookUserToken(java.lang.String,java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "org.gameontext.auth.facebook.FacebookCallback.introspectAuth(java.lang.String)"], "Fixed commit": "a7f36d53267a70c84c596649b2516e159d9cc013", "Url": "https://api.github.com/repos/quanvo87/gameon-auth", "Date": "2017-09-23T21:26:20Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { conn.println(\"+OK\"); copyHeaders(in, conn); copyLines(in, conn, numLines); } finally { in.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6015/buggy-version/greenmail-core.src.main.java.com.icegreen.greenmail.pop3.commands.TopCommand.java", "BodyUseAPI": ["com.icegreen.greenmail.pop3.Pop3Connection.println(java.lang.String)", "com.icegreen.greenmail.pop3.commands.TopCommand.copyHeaders(java.io.BufferedReader,com.icegreen.greenmail.pop3.Pop3Connection)", "com.icegreen.greenmail.pop3.commands.TopCommand.copyLines(java.io.BufferedReader,com.icegreen.greenmail.pop3.Pop3Connection,int)"], "Fixed commit": "9160558c11a449ee9e5f943f9e1950980d60a7f1", "Url": "https://api.github.com/repos/greenmail-mail-test/greenmail", "Date": "2016-01-23T10:11:29Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { parser.setStrict(shouldSetParserStrict); parsedData = parser.parse(new java.io.FileInputStream(file)); } catch (org.xml.sax.SAXException e) { org.n52.wps.io.datahandler.parser.GML3BasicParser.LOGGER.warn(\"Could not parse GML3 file with strict parser.\", e); org.n52.wps.io.datahandler.parser.GML3BasicParser.LOGGER.info(\"Retry parsing with non strict parser.\"); parser = new org.geotools.xml.Parser(configuration); parser.setStrict(false); parsedData = parser.parse(new java.io.FileInputStream(file)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8002/buggy-version/52n-wps-io-impl.src.main.java.org.n52.wps.io.datahandler.parser.GML3BasicParser.java", "BodyUseAPI": ["org.geotools.xml.Parser.setStrict(boolean)", "org.geotools.xml.Parser.parse(java.io.FileInputStream)"], "Fixed commit": "39915fee1c05ecb2b90c54d8c23e2c3a9d36daed", "Url": "https://api.github.com/repos/bpross-52n/WPS", "Date": "2013-07-23T14:12:03Z"},
{"Line": "=>1431", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { colorHex = colorUrlObject.get(\"color\").getAsString(); } catch (java.lang.UnsupportedOperationException e) { colorHex = dlei.forkme.helpers.LanguageColor.noLanguageColorHex; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2329/buggy-version/app.src.main.java.dlei.forkme.helpers.LanguageColor.java", "BodyUseAPI": ["colorUrlObject.get(\"color\").getAsString()", "com.google.gson.JsonObject.get(java.lang.String)"], "Fixed commit": "1abd4b2b53046760293fd2c9527ed3c7cf4a741a", "Url": "https://api.github.com/repos/darvid7/ForkMe-Mobile", "Date": "2017-06-11T05:52:48Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { date = formatter.parse(\"2016-11-24 21:34:11\"); } catch (java.text.ParseException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7975/buggy-version/src.com.zjgsu.manager.JugeManager.java", "BodyUseAPI": ["java.text.SimpleDateFormat.parse(java.lang.String)"], "Fixed commit": "b8efa673e6fded65231b1fb064c922ecaf0362f7", "Url": "https://api.github.com/repos/Ginray/JudgeOnline", "Date": "2016-11-30T14:10:02Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { int r = new java.lang.Integer(goal[RescueFacts.Goal.PARAM1.index()]); int c = new java.lang.Integer(goal[RescueFacts.Goal.PARAM2.index()]); goalsToDo.add(new int[]{ r, c }); } catch (java.lang.NumberFormatException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4037/buggy-version/ClipsMonitorCore.src.org.clipsmonitor.monitor2015.RescueModel.java", "BodyUseAPI": ["java.util.ArrayList<int[]>.add(int[])", "RescueFacts.Goal.PARAM2.index()", "RescueFacts.Goal.PARAM1.index()"], "Fixed commit": "d01542430aa9001fa9c2fcd91e0c532e75252824", "Url": "https://api.github.com/repos/Chosko/ClipsMonitor", "Date": "2016-01-22T10:31:52Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { rt = meth.invoke(Value); } catch (java.lang.Exception et) { java.lang.System.out.println(\"Cat't process this reflection invocation\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4825/buggy-version/src.main.java.uk.ac.dundee.computing.sensorweb.servlets.RenderJson.java", "BodyUseAPI": ["java.lang.reflect.Method.invoke(java.lang.Object)"], "Fixed commit": "244c3b7691bae421741183b7d9c78849ae8ba4fc", "Url": "https://api.github.com/repos/acobley/SensorWeb", "Date": "2015-03-11T16:06:15Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { fis = new java.io.FileInputStream(file); } catch (java.io.FileNotFoundException e) { throw new javax.xml.bind.JAXBException((\"File not found: \" + (file.getAbsolutePath())), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4347/buggy-version/src.main.java.eu.transkribus.core.util.PageXmlUtils.java", "BodyUseAPI": [], "Fixed commit": "63e016be07378a5d7a37c7140bb9c3825a7ca622", "Url": "https://api.github.com/repos/Transkribus/TranskribusCore", "Date": "2016-05-12T11:26:40Z"},
{"Line": "=>429", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { dir = new java.io.File(new java.net.URI(fileName)); } catch (java.net.URISyntaxException | java.lang.IllegalArgumentException ex) { dir = new java.io.File(currentDir, fileName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6340/buggy-version/gaulois-pipe.src.main.java.fr.efl.chaine.xslt.config.ConfigUtil.java", "BodyUseAPI": [], "Fixed commit": "4468ea494634677d4324e04f5986b31bb879496b", "Url": "https://api.github.com/repos/cmarchand/gaulois-pipe", "Date": "2017-02-28T12:09:46Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.util.Log.v(ryan.jake.mentorme.Register2Activity.TAG, java.lang.Integer.toString(mPicString.length())); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2548/buggy-version/app.src.main.java.ryan.jake.mentorme.Register2Activity.java", "BodyUseAPI": ["java.lang.Integer.toString(int)", "android.util.Log.v(java.lang.String,java.lang.String)", "java.lang.String.length()"], "Fixed commit": "3d283cc8ce26d989aeb2fbdb3be70ca445c9e42e", "Url": "https://api.github.com/repos/jcaldwell101/MentorMe2", "Date": "2016-12-01T07:09:41Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { scanForCause(); } catch (java.lang.NoClassDefFoundError e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7326/buggy-version/src.com.fsck.k9.mail.CertificateValidationException.java", "BodyUseAPI": ["com.fsck.k9.mail.CertificateValidationException.scanForCause()"], "Fixed commit": "e2acd8c6c43f9f1bfd27da1439e9a87c7964597e", "Url": "https://api.github.com/repos/imaeses/k-9", "Date": "2015-02-01T11:55:25Z"},
{"Line": "=>492", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { nameParam = jsonObject.getString(\"name\"); descriptionParam = jsonObject.getString(\"description\"); } catch (java.lang.ClassCastException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7675/buggy-version/src.main.java.de.tu_dortmund.ub.data.dswarm.Task.java", "BodyUseAPI": ["javax.json.JsonObject.getString(java.lang.String)", "javax.json.JsonObject.getString(java.lang.String)"], "Fixed commit": "5542e03f26fb5c8c8e8557f385f949d1165f1928", "Url": "https://api.github.com/repos/zazi/task-processing-unit-for-dswarm", "Date": "2015-03-26T15:49:37Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ((com.fuelcard.MyApplication) (getApplication())).initt(); } catch (java.lang.Exception e) { android.widget.Toast.makeText(this, R.string.noSpaceAlert, Toast.LENGTH_SHORT).show(); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7644/buggy-version/src.com.fuelcard.FuelCard.java", "BodyUseAPI": ["((com.fuelcard.MyApplication) (getApplication())).initt()", "com.fuelcard.FuelCard.getApplication()"], "Fixed commit": "030d7755963ed7f8814e2b91abe653726b8f2d8a", "Url": "https://api.github.com/repos/santosh-riktam/fuelcard", "Date": "2012-08-06T15:38:19Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String query = \"latest/meta-data/iam/security-credentials/\"; java.net.URL url; url = new java.net.URL(\"http\", com.hazelcast.aws.impl.DescribeInstances.IAM_ROLE_ENDPOINT, query); is = new java.io.InputStreamReader(url.openStream(), \"UTF-8\"); reader = new java.io.BufferedReader(is); awsConfig.setIamRole(reader.readLine()); } catch (java.io.IOException e) { throw new com.hazelcast.config.InvalidConfigurationException(\"Invalid Aws Configuration\"); } finally { if (is != null) { is.close(); } if (reader != null) { reader.close(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3040/buggy-version/src.main.java.com.hazelcast.aws.impl.DescribeInstances.java", "BodyUseAPI": ["java.io.BufferedReader.readLine()", "com.hazelcast.config.AwsConfig.setIamRole(java.lang.String)", "java.net.URL.openStream()"], "Fixed commit": "149e62d7868f66205abcbae41e04c82d573ace10", "Url": "https://api.github.com/repos/hazelcast/hazelcast-aws", "Date": "2016-06-06T08:25:22Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { db.manager.DatabaseManager.insertHistory(userId, treasureId); } catch (java.sql.SQLException e) { e.printStackTrace(); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5294/buggy-version/Server.src.main.java.db.DatabaseController.java", "BodyUseAPI": ["db.manager.DatabaseManager.insertHistory(int,int)"], "Fixed commit": "8c8752bf08457d4538e61e15a4f3f1ee011fa151", "Url": "https://api.github.com/repos/co0k/TreasureHunt", "Date": "2015-05-31T13:37:29Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { cpw.mods.fml.relauncher.ReflectionHelper.setPrivateValue(net.minecraft.item.crafting.CraftingManager.class, net.minecraft.item.crafting.CraftingManager.getInstance(), recipes, \"recipes\"); } catch (java.lang.Exception e) { cpw.mods.fml.relauncher.ReflectionHelper.setPrivateValue(net.minecraft.item.crafting.CraftingManager.class, net.minecraft.item.crafting.CraftingManager.getInstance(), recipes, \"field_77597_b\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6362/buggy-version/src.main.java.dimensionguard.handlers.DisabledHandler.java", "BodyUseAPI": ["net.minecraft.item.crafting.CraftingManager.getInstance()", "cpw.mods.fml.relauncher.ReflectionHelper.setPrivateValue(java.lang.Class,net.minecraft.item.crafting.CraftingManager.getInstance(),java.util.ArrayList<net.minecraft.item.crafting.IRecipe>,java.lang.String)"], "Fixed commit": "f1a3c7c265271a184e6228d948024f9361a25239", "Url": "https://api.github.com/repos/hilburn/DimensionGuard", "Date": "2014-12-17T21:38:52Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { debitEntropy(io.github.pr0methean.betterrandom.prng.BaseRandom.ENTROPY_OF_DOUBLE); return super.nextDouble(); } finally { lock.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6210/buggy-version/betterrandom.src.main.java.io.github.pr0methean.betterrandom.prng.BaseRandom.java", "BodyUseAPI": ["io.github.pr0methean.betterrandom.prng.BaseRandom.debitEntropy(int)", "java.util.Random.nextDouble()"], "Fixed commit": "2b5dd5b85356457712b134df235a8f2b5934b7d7", "Url": "https://api.github.com/repos/Pr0methean/BetterRandom", "Date": "2017-11-28T06:45:09Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { java.lang.String line; reader = new java.io.BufferedReader(new java.io.InputStreamReader(workspace.child(path).read(), java.nio.charset.Charset.defaultCharset())); while ((lines < (maxLines)) && ((line = reader.readLine()) != null)) { result.append(line); result.append('\\n'); lines++; } } finally { if (reader != null) { reader.close(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5338/buggy-version/src.main.java.org.jenkinsci.plugins.tokenmacro.impl.WorkspaceFileMacro.java", "BodyUseAPI": ["java.nio.charset.Charset.defaultCharset()", "java.lang.StringBuilder.append(java.lang.String)", "workspace.child(path).read()", "hudson.FilePath.child(java.lang.String)", "java.lang.StringBuilder.append(char)", "java.io.BufferedReader.readLine()"], "Fixed commit": "8d81d3c8fcd22b21309b2c6d0d13ed016e36b237", "Url": "https://api.github.com/repos/jenkinsci/token-macro-plugin", "Date": "2016-08-11T15:42:25Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { org.wildfly.security.manager.WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(loader); initialContextClass = java.lang.Class.forName(initialContextClassName, true, loader); java.lang.reflect.Constructor ctor = initialContextClass.getConstructor(java.util.Hashtable.class); context = ((javax.naming.Context) (ctor.newInstance(newEnvironment))); } finally { org.wildfly.security.manager.WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(currentClassLoader); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8555/buggy-version/naming.src.main.java.org.jboss.as.naming.ExternalContextObjectFactory.java", "BodyUseAPI": ["java.lang.Class.forName(java.lang.String,boolean,java.lang.ClassLoader)", "java.lang.reflect.Constructor.newInstance(java.util.Hashtable<?, ?>)", "org.wildfly.security.manager.WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(java.lang.ClassLoader)", "java.lang.Class.getConstructor(java.lang.Class)"], "Fixed commit": "ddb66d54f0984e53f68e37bcd535991cad4c5f6e", "Url": "https://api.github.com/repos/wildfly/wildfly", "Date": "2014-01-17T14:15:29Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { byte[] ticketSerialized = com.google.common.io.BaseEncoding.base64().decode(ticketBase64); p = org.diqube.ticket.TicketUtil.deserialize(java.nio.ByteBuffer.wrap(ticketSerialized)); } catch (java.lang.IllegalArgumentException e) { ticketDeserializationException = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1818/buggy-version/diqube-ui.src.main.java.org.diqube.ui.websocket.request.JsonRequestDeserializer.java", "BodyUseAPI": ["org.diqube.ticket.TicketUtil.deserialize(java.nio.ByteBuffer)", "java.nio.ByteBuffer.wrap(byte[])", "com.google.common.io.BaseEncoding.base64().decode(java.lang.String)", "com.google.common.io.BaseEncoding.base64()"], "Fixed commit": "79e5dbea08ebdf1e876f9e71c30e1f5bd3f804c8", "Url": "https://api.github.com/repos/diqube/diqube", "Date": "2016-01-07T15:48:27Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { srcName = codeToName.stnName_to_stnCode(TrainDetailsObjList.get(position).getSrcName()); dstnName = codeToName.stnName_to_stnCode(TrainDetailsObjList.get(position).getDstnName()); } catch (java.lang.Exception e) { srcName = TrainDetailsObjList.get(position).getSrcName(); dstnName = TrainDetailsObjList.get(position).getDstnName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5187/buggy-version/app.src.main.java.com.example.android.miwok.Train_name_listView.java", "BodyUseAPI": ["java.util.List<com.example.android.miwok.TrainDetailsObj>.get(int)", "TrainDetailsObjList.get(position).getSrcName()", "com.example.android.miwok.stnName_to_stnCode.stnName_to_stnCode(TrainDetailsObjList.get(position).getDstnName())", "java.util.List<com.example.android.miwok.TrainDetailsObj>.get(int)", "com.example.android.miwok.stnName_to_stnCode.stnName_to_stnCode(TrainDetailsObjList.get(position).getSrcName())", "TrainDetailsObjList.get(position).getDstnName()"], "Fixed commit": "eebf4a76a3d12a28615b60173a0443436497d6d6", "Url": "https://api.github.com/repos/rishabhnayak/ud839_Miwok-Starter-code", "Date": "2017-07-06T17:28:36Z"},
{"Line": "=>730", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { currentVerse = java.lang.Integer.valueOf(verse); } catch (java.lang.NumberFormatException e) { java.lang.String[] range = verse.split(\"-\"); if ((range.length) != 2) { return false; } currentVerse = java.lang.Integer.valueOf(range[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/502/buggy-version/app.src.main.java.com.door43.translationstudio.core.ImportUsfm.java", "BodyUseAPI": ["java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "f3dd6892c577e10be841d4961ca88338ba47db37", "Url": "https://api.github.com/repos/unfoldingWord-dev/ts-android", "Date": "2016-04-12T22:29:47Z"},
{"Line": "=>420", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { currentChoice = ((java.lang.String) (list_access_points.get(((int) (parent.getItemIdAtPosition(position)))))); } catch (java.lang.Exception e) { java.lang.System.out.println((\"APPMESG: \" + (e.toString()))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5449/buggy-version/MyFirstApp.src.com.example.myfirstapp.MyMapView.java", "BodyUseAPI": ["android.widget.AdapterView<?>.getItemIdAtPosition(int)", "java.util.List<java.lang.Object>.get(((int) (parent.getItemIdAtPosition(position))))"], "Fixed commit": "df9707095683778cbe752eebd7888eef84e9c24f", "Url": "https://api.github.com/repos/sreejagpt/MyFirstApp", "Date": "2013-05-22T14:11:43Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { clonedType = type.clone(); } catch (java.lang.CloneNotSupportedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4253/buggy-version/app.src.main.java.org.onosproject.yms.app.yob.YobUtils.java", "BodyUseAPI": ["org.onosproject.yangutils.datamodel.YangType.clone()"], "Fixed commit": "07bfc63f6069ff26a34f48dcb8397c01d759e65a", "Url": "https://api.github.com/repos/GauravAgrawal-Huawei/ymsm", "Date": "2016-11-04T08:30:56Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { user = usersService.getUser(id); } catch (java.lang.IndexOutOfBoundsException e) { throw new fi.jyu.task3.user.NotFoundException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8589/buggy-version/src.main.java.fi.jyu.task3.user.UsersResource.java", "BodyUseAPI": ["fi.jyu.task3.user.UsersService.getUser(int)"], "Fixed commit": "7014ff7910490dd4bf5b7155530e027e3cd377fb", "Url": "https://api.github.com/repos/baygeldin/rest-jersey-example", "Date": "2016-10-03T14:10:22Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { movie = moviesService.getMovie(id); } catch (java.lang.IndexOutOfBoundsException e) { throw new fi.jyu.task3.movie.NotFoundException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8589/buggy-version/src.main.java.fi.jyu.task3.movie.MoviesResource.java", "BodyUseAPI": ["fi.jyu.task3.movie.MoviesService.getMovie(int)"], "Fixed commit": "7014ff7910490dd4bf5b7155530e027e3cd377fb", "Url": "https://api.github.com/repos/baygeldin/rest-jersey-example", "Date": "2016-10-03T14:10:22Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { movie = moviesService.getMovie(id); } catch (java.lang.IndexOutOfBoundsException e) { throw new fi.jyu.task3.movie.NotFoundException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8589/buggy-version/src.main.java.fi.jyu.task3.movie.MoviesResource.java", "BodyUseAPI": ["fi.jyu.task3.movie.MoviesService.getMovie(int)"], "Fixed commit": "7014ff7910490dd4bf5b7155530e027e3cd377fb", "Url": "https://api.github.com/repos/baygeldin/rest-jersey-example", "Date": "2016-10-03T14:10:22Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { result = query.getSingleResult(); } catch (javax.persistence.NoResultException e) { result = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4995/buggy-version/data.src.main.java.com.catorv.gallop.database.interceptor.QueryMethodInvoker.java", "BodyUseAPI": ["javax.persistence.TypedQuery.getSingleResult()"], "Fixed commit": "d9bc186acc372cc3b991b39647ebe39b73855be7", "Url": "https://api.github.com/repos/catorv/gallop", "Date": "2016-09-01T10:46:14Z"},
{"Line": "=>651", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { boolean reanalyze = plugin.analyzeJar(this); if (reanalyze) { classspace.clear(); analyzeBundleClasspath(); } } finally { endHandleErrors(previous); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4587/buggy-version/biz.aQute.bndlib.src.aQute.bnd.osgi.Analyzer.java", "BodyUseAPI": ["aQute.bnd.service.AnalyzerPlugin.analyzeJar(aQute.bnd.osgi.Analyzer)", "java.util.Map<aQute.bnd.osgi.Descriptors.TypeRef, aQute.bnd.osgi.Clazz>.clear()", "aQute.bnd.osgi.Analyzer.analyzeBundleClasspath()"], "Fixed commit": "dcfdfb15e67c20f54941820188897a0bfdeb760f", "Url": "https://api.github.com/repos/rotty3000/bnd", "Date": "2015-11-24T17:46:52Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return new org.springframework.web.client.RestTemplate().postForEntity(((this.aamUrl) + \"login\"), user, java.lang.String.class); } catch (org.springframework.web.client.HttpClientErrorException e) { return new org.springframework.http.ResponseEntity(e.getResponseBodyAsString(), e.getStatusCode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7671/buggy-version/src.main.java.eu.h2020.symbiote.controllers.CoreInterfaceController.java", "BodyUseAPI": ["org.springframework.web.client.RestTemplate.postForEntity(java.lang.String,eu.h2020.symbiote.security.payloads.Credentials,java.lang.Class)"], "Fixed commit": "6d7fb812e479743898784894e59da6766677c61e", "Url": "https://api.github.com/repos/symbiote-h2020/CoreInterface", "Date": "2017-05-11T12:36:41Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return new org.springframework.web.client.RestTemplate().getForEntity(((this.aamUrl) + \"get_ca_cert\"), java.lang.String.class); } catch (org.springframework.web.client.HttpClientErrorException e) { return new org.springframework.http.ResponseEntity(e.getResponseBodyAsString(), e.getStatusCode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7671/buggy-version/src.main.java.eu.h2020.symbiote.controllers.CoreInterfaceController.java", "BodyUseAPI": ["org.springframework.web.client.RestTemplate.getForEntity(java.lang.String,java.lang.Class)"], "Fixed commit": "6d7fb812e479743898784894e59da6766677c61e", "Url": "https://api.github.com/repos/symbiote-h2020/CoreInterface", "Date": "2017-05-11T12:36:41Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return new org.springframework.web.client.RestTemplate().postForEntity(((this.aamUrl) + \"check_home_token_revocation\"), token, java.lang.String.class); } catch (org.springframework.web.client.HttpClientErrorException e) { return new org.springframework.http.ResponseEntity(e.getResponseBodyAsString(), e.getStatusCode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7671/buggy-version/src.main.java.eu.h2020.symbiote.controllers.CoreInterfaceController.java", "BodyUseAPI": ["org.springframework.web.client.RestTemplate.postForEntity(java.lang.String,java.lang.String,java.lang.Class)"], "Fixed commit": "6d7fb812e479743898784894e59da6766677c61e", "Url": "https://api.github.com/repos/symbiote-h2020/CoreInterface", "Date": "2017-05-11T12:36:41Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return new org.springframework.web.client.RestTemplate().postForEntity(((this.aamUrl) + \"request_foreign_token\"), token, java.lang.String.class); } catch (org.springframework.web.client.HttpClientErrorException e) { return new org.springframework.http.ResponseEntity(e.getResponseBodyAsString(), e.getStatusCode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7671/buggy-version/src.main.java.eu.h2020.symbiote.controllers.CoreInterfaceController.java", "BodyUseAPI": ["org.springframework.web.client.RestTemplate.postForEntity(java.lang.String,java.lang.String,java.lang.Class)"], "Fixed commit": "6d7fb812e479743898784894e59da6766677c61e", "Url": "https://api.github.com/repos/symbiote-h2020/CoreInterface", "Date": "2017-05-11T12:36:41Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return world.getCombinedLight(pos, lightValue); } catch (java.lang.Exception ee) { ee.printStackTrace(); return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2511/buggy-version/src.main.java.ValkyrienWarfareBase.CoreMod.CallRunnerClient.java", "BodyUseAPI": ["net.minecraft.world.World.getCombinedLight(net.minecraft.util.math.BlockPos,int)"], "Fixed commit": "901c2b8a0a4f764a6a4927d6228abd64667622a5", "Url": "https://api.github.com/repos/ValkyrienWarfare/Valkyrien-Warfare-Revamped", "Date": "2017-03-09T22:58:51Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { userService.create(userDTO); } catch (javax.ejb.EJBException ex) { if ((ex.getCause()) instanceof java.lang.IllegalStateException) { invalidLogin = true; return new net.sourceforge.stripes.action.ForwardResolution(\"/user/create.jsp\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2839/buggy-version/web.src.main.java.cz.muni.fi.pa165.fast.actionbean.UserActionBean.java", "BodyUseAPI": ["cz.muni.fi.pa165.fast.service.UserService.create(cz.muni.fi.pa165.fast.dto.UserDTO)"], "Fixed commit": "f74cbfc198f6d1e0725b171000b9260698b9635c", "Url": "https://api.github.com/repos/jsenko/PA165", "Date": "2013-01-22T01:45:07Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { model = ivorius.pandorasbox.client.rendering.ModelLoaderRegistry.getModel(modelLoc); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4822/buggy-version/src.main.java.ivorius.pandorasbox.client.rendering.RenderPandorasBox.java", "BodyUseAPI": ["ivorius.pandorasbox.client.rendering.ModelLoaderRegistry.getModel(net.minecraft.util.ResourceLocation)"], "Fixed commit": "07c4aa5accdcc98601ba0631a51271db67b20dbf", "Url": "https://api.github.com/repos/Ivorforce/PandorasBox", "Date": "2015-07-19T20:10:08Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(1000); } catch (java.lang.Exception e) { edu.hm.dako.chat.common.ExceptionHandler.logException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/390/buggy-version/src.main.java.edu.hm.dako.chat.server.AdvancedChatWorkerThreadImpl.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "1949b7a924aaae949f36c17e4d402b1c506f652a", "Url": "https://api.github.com/repos/DenisaIoanaMatei/Dako", "Date": "2017-12-11T20:20:30Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(2000); } catch (java.lang.Exception e) { edu.hm.dako.chat.common.ExceptionHandler.logException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/390/buggy-version/src.main.java.edu.hm.dako.chat.server.AdvancedChatWorkerThreadImpl.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "1949b7a924aaae949f36c17e4d402b1c506f652a", "Url": "https://api.github.com/repos/DenisaIoanaMatei/Dako", "Date": "2017-12-11T20:20:30Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.morgoo.droidplugin.hook.handle.WebViewFactoryProviderHookHandle.sContentMain = java.lang.Class.forName(\"com.android.org.chromium.content.app.ContentMain\", true, cl); } catch (java.lang.ClassNotFoundException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4685/buggy-version/project.Libraries.DroidPlugin.src.com.morgoo.droidplugin.hook.handle.WebViewFactoryProviderHookHandle.java", "BodyUseAPI": ["java.lang.Class.forName(java.lang.String,boolean,java.lang.ClassLoader)"], "Fixed commit": "74a663fdf8cf9caacea580d89ef8b7789f6fb2a4", "Url": "https://api.github.com/repos/Qihoo360/DroidPlugin", "Date": "2015-10-13T03:00:04Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { if ((board[((x1) + i)][((y1) + j)]) == (Tile.FREE)) { counter++; } } catch (java.lang.Exception e) { int abc = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/840/buggy-version/src.com.example.isola.Board.java", "BodyUseAPI": [], "Fixed commit": "4d22809a914d27e3497c352bf8cf8c361d709f5f", "Url": "https://api.github.com/repos/dsuedholt/isola", "Date": "2014-03-12T14:07:48Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { if ((board[((x2) + i)][((y2) + j)]) == (Tile.FREE)) { counter++; } } catch (java.lang.Exception e) { int abcd = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/840/buggy-version/src.com.example.isola.Board.java", "BodyUseAPI": [], "Fixed commit": "4d22809a914d27e3497c352bf8cf8c361d709f5f", "Url": "https://api.github.com/repos/dsuedholt/isola", "Date": "2014-03-12T14:07:48Z"},
{"Line": "=>469", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { addLiteralSchema(tempSQL); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8957/buggy-version/src.frontend.org.voltdb.compiler.VoltProjectBuilder.java", "BodyUseAPI": ["org.voltdb.compiler.VoltProjectBuilder.addLiteralSchema(java.lang.String)"], "Fixed commit": "548f5194c98a74cbf3a6c4577553d09d7f1a1f67", "Url": "https://api.github.com/repos/bsmr-voltdb/voltdb", "Date": "2014-07-18T16:05:36Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { gobgabllc.gobgab.MainMenuPagerActivity.facebookName = object.getString(\"name\"); } catch (org.json.JSONException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/969/buggy-version/Android.GobGab.mobile.src.main.java.gobgabllc.gobgab.MainMenuPagerActivity.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "d0220c03da035bbc270e69fd6d052096546cc3c0", "Url": "https://api.github.com/repos/GobGab/GobGab", "Date": "2016-03-18T17:48:46Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { texture_ = new com.badlogic.gdx.graphics.Texture(Gdx.files.internal(texture)); } catch (java.lang.Exception e) { java.lang.System.out.println((\"Working Directory = \" + (java.lang.System.getProperty(\"user.dir\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8734/buggy-version/core.src.com.sewm.defaultteam.Player.java", "BodyUseAPI": ["Gdx.files.internal(java.lang.String)"], "Fixed commit": "d1ec2ef910712d25a261eb6f198114191f3ebfc7", "Url": "https://api.github.com/repos/papsti7/Dots", "Date": "2016-05-10T17:49:55Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { uuid = java.util.UUID.fromString(message); } catch (java.lang.Exception e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/928/buggy-version/src.com.crossge.necessities.GetUUID.java", "BodyUseAPI": ["java.util.UUID.fromString(java.lang.String)"], "Fixed commit": "a9e613d507c30c4ef9760385621788724a863c2c", "Url": "https://api.github.com/repos/pupnewfster/Necessities", "Date": "2016-01-11T00:38:42Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { file = new java.io.File(repoPath.toURI()); } catch (java.net.URISyntaxException e1) { com.google.common.base.Throwables.propagate(e1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6394/buggy-version/src.storage.bdbje.src.main.java.org.geogit.storage.bdbje.JEStagingDatabase.java", "BodyUseAPI": ["java.net.URL.toURI()"], "Fixed commit": "dabb18a6c950e1871b5ae0707efab5c347a2c8bb", "Url": "https://api.github.com/repos/kelseyishmael/GeoGit", "Date": "2013-05-16T17:27:00Z"},
{"Line": "=>638", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { hostName = java.net.InetAddress.getLocalHost().getHostName(); } catch (java.net.UnknownHostException e) { java.lang.System.err.println(\"warning: UnknownHostException from InetAddress.getLocalHost().getHostName(), ignored\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3794/buggy-version/core.src.main.java.com.twosigma.beaker.core.rest.PluginServiceLocatorRest.java", "BodyUseAPI": ["java.net.InetAddress.getLocalHost()", "java.net.InetAddress.getHostName()"], "Fixed commit": "884f771440235b95055cd4a7b4c50f5851bdd308", "Url": "https://api.github.com/repos/twosigma/beakerx", "Date": "2014-11-24T16:25:59Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { model.fireTreeNodesChanged(this, null, null, null); } catch (java.lang.IllegalArgumentException e) { int n = getChildCount(); int[] indices = new int[n]; com.cburch.logisim.gui.generic.ProjectExplorerModel.Node<?>[] children = new com.cburch.logisim.gui.generic.ProjectExplorerModel.Node<?>[n]; for (int i = 0; i < n; i++) { indices[i] = i; children[i] = ((com.cburch.logisim.gui.generic.ProjectExplorerModel.Node<?>) (getChildAt(i))); } model.fireTreeNodesChanged(model, this.getPath(), indices, children); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8130/buggy-version/src.com.cburch.logisim.gui.generic.ProjectExplorerModel.java", "BodyUseAPI": ["com.cburch.logisim.gui.generic.ProjectExplorerModel.fireTreeNodesChanged(com.cburch.logisim.gui.generic.ProjectExplorerModel.Node<T>,<nulltype>,<nulltype>,<nulltype>)"], "Fixed commit": "cd199dc1aa6a7cc2ce6e70a68f11dc1ff495b872", "Url": "https://api.github.com/repos/kevinawalsh/logisim-evolution", "Date": "2017-02-03T23:16:58Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { int tempQuan = java.lang.Integer.parseInt(quan.getText().toString()); if (tempQuan <= (product.getQuantity())) { basket.addProduct(product, tempQuan); basket.setPrice(product, java.lang.Integer.parseInt(price.getText().toString())); saleAdapter.notifyDataSetChanged(); total_text.setText(((basket.getTotalPrice()) + \"\")); } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/796/buggy-version/Pos.src.com.rtt_ku.pos.Tab_Sale_Activity.java", "BodyUseAPI": ["java.lang.Integer.parseInt(quan.getText().toString())", "android.widget.TextView.setText(((basket.getTotalPrice()) + \"\"))", "java.lang.Integer.parseInt(price.getText().toString())", "Sale.Basket.setPrice(Inventory.Product,int)", "Inventory.Product.getQuantity()", "Sale.Basket.getTotalPrice()", "android.widget.EditText.getText()", "price.getText().toString()", "quan.getText().toString()", "com.rtt_ku.pos.Tab_Sale_Activity.SaleItemAdapter.notifyDataSetChanged()", "android.widget.EditText.getText()", "Sale.Basket.addProduct(Inventory.Product,int)"], "Fixed commit": "fa8c633e1ed777942f5facf5570c1d5d0155387a", "Url": "https://api.github.com/repos/Termchai/Pos_by_RTT_KU", "Date": "2013-11-26T14:16:35Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { i = java.lang.Integer.valueOf(s); } catch (java.lang.Exception e) { i = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5529/buggy-version/src.com.yeegol.DIYWear.util.StrUtil.java", "BodyUseAPI": ["java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "90cbc380c30aa4f43e32deac88cb081648dd6dd6", "Url": "https://api.github.com/repos/liuweicode/DIYWear", "Date": "2014-03-16T03:33:04Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((ps.executeUpdate()) > 0) { result = (mydbi != null) ? mydbi.getLastInsertedID(ps) : de.bund.bfr.knime.openkrise.db.DBKernel.getLastInsertedID(ps); if (result != null) handleFlexibles(mydbi); } } catch (java.sql.SQLException e) { if (e.getMessage().startsWith(\"integrity constraint violation\")) result = dbId; else throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3651/buggy-version/de.bund.bfr.knime.openkrise.db.src.de.bund.bfr.knime.openkrise.db.imports.custom.bfrnewformat.Product.java", "BodyUseAPI": ["de.bund.bfr.knime.openkrise.db.MyDBI.getLastInsertedID(java.sql.PreparedStatement)", "de.bund.bfr.knime.openkrise.db.DBKernel.getLastInsertedID(java.sql.PreparedStatement)", "java.sql.PreparedStatement.executeUpdate()", "de.bund.bfr.knime.openkrise.db.imports.custom.bfrnewformat.Product.handleFlexibles(de.bund.bfr.knime.openkrise.db.MyDBI)"], "Fixed commit": "0d87fb47ed9dc64c2a87a6ba6984c8643cabf0da", "Url": "https://api.github.com/repos/SiLeBAT/BfROpenLab", "Date": "2017-06-08T06:44:41Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((ps.executeUpdate()) > 0) { result = (mydbi != null) ? mydbi.getLastInsertedID(ps) : de.bund.bfr.knime.openkrise.db.DBKernel.getLastInsertedID(ps); } } catch (java.sql.SQLException e) { if (e.getMessage().startsWith(\"integrity constraint violation\")) result = dbId; else throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3651/buggy-version/de.bund.bfr.knime.openkrise.db.src.de.bund.bfr.knime.openkrise.db.imports.custom.bfrnewformat.Lot.java", "BodyUseAPI": ["java.sql.PreparedStatement.executeUpdate()", "de.bund.bfr.knime.openkrise.db.MyDBI.getLastInsertedID(java.sql.PreparedStatement)", "de.bund.bfr.knime.openkrise.db.DBKernel.getLastInsertedID(java.sql.PreparedStatement)"], "Fixed commit": "0d87fb47ed9dc64c2a87a6ba6984c8643cabf0da", "Url": "https://api.github.com/repos/SiLeBAT/BfROpenLab", "Date": "2017-06-08T06:44:41Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { dynamicInfo = new com.google.gson.Gson().fromJson(oldViewInfoJson, com.kot32.dynamicloadviewlibrary.model.DynamicInfo.class); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/647/buggy-version/DynamicLoadView.dynamicloadviewlibrary.src.main.java.com.kot32.dynamicloadviewlibrary.core.DynamicViewManager.java", "BodyUseAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Fixed commit": "2ca5cda20a7cae81e63d536557d9bef84ad14540", "Url": "https://api.github.com/repos/kot32go/dynamic-load-view", "Date": "2016-09-28T03:33:00Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { disposeColors(); } catch (java.lang.Exception e2) { e2.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7146/buggy-version/genlab.algog.gui.misc.src.genlab.algog.gui.misc.GenomeWidget.java", "BodyUseAPI": ["genlab.algog.gui.misc.GenomeWidget.1.disposeColors()"], "Fixed commit": "d5e3228544c1f5d30092c5afb19bd67bd82a842f", "Url": "https://api.github.com/repos/samthiriot/genlab", "Date": "2015-06-16T17:41:55Z"},
{"Line": "=>394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { paintData(e.gc); } catch (java.lang.Exception e2) { e2.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7146/buggy-version/genlab.algog.gui.misc.src.genlab.algog.gui.misc.GenomeWidget.java", "BodyUseAPI": ["genlab.algog.gui.misc.GenomeWidget.2.paintData(e.gc)"], "Fixed commit": "d5e3228544c1f5d30092c5afb19bd67bd82a842f", "Url": "https://api.github.com/repos/samthiriot/genlab", "Date": "2015-06-16T17:41:55Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { passHash = simpleJdbcTemplate.queryForObject(org.sagebionetworks.repo.model.dbo.dao.DBOAuthenticationDAOImpl.SELECT_PASSWORD, java.lang.String.class, param); } catch (org.springframework.dao.EmptyResultDataAccessException e) { throw new org.sagebionetworks.repo.web.NotFoundException(((\"User (\" + username) + \") does not exist\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3867/buggy-version/lib.jdomodels.src.main.java.org.sagebionetworks.repo.model.dbo.dao.DBOAuthenticationDAOImpl.java", "BodyUseAPI": ["org.springframework.jdbc.core.simple.SimpleJdbcTemplate.queryForObject(java.lang.String,java.lang.Class,org.springframework.jdbc.core.namedparam.MapSqlParameterSource)"], "Fixed commit": "2d3e9ec74bbec744f4221861119ddd8659ce0e9d", "Url": "https://api.github.com/repos/kaysoky/Synapse-Repository-Services", "Date": "2013-10-24T21:34:11Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (int i = 0; i < width; i++) { for (int j = 0; j < width; j++) { com.southamptoncodedojo.minesweeper.Coordinate coord = new com.southamptoncodedojo.minesweeper.Coordinate(i, j); if (mapState.isOpen(coord)) { scores[i][j] = 1000; }else { scores[i][j] = getScore(coord, mapState); } } } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3017/buggy-version/src.com.southamptoncodedojo.minesweeper.players.TeamOnePlayer.java", "BodyUseAPI": ["com.southamptoncodedojo.minesweeper.MapState.isOpen(com.southamptoncodedojo.minesweeper.Coordinate)", "com.southamptoncodedojo.minesweeper.players.TeamOnePlayer.getScore(com.southamptoncodedojo.minesweeper.Coordinate,com.southamptoncodedojo.minesweeper.MapState)"], "Fixed commit": "355e5a91561e3d6a12b5269e96f37b07ac51a5db", "Url": "https://api.github.com/repos/yggie/minesweeper", "Date": "2014-10-09T19:40:48Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { date = dateFormat.parse(line.split(\";\")[0]); } catch (java.text.ParseException e) { try { dateFormat = new java.text.SimpleDateFormat(\"MMM dd, yyyy hh:mm:ss aa\", java.util.Locale.US); date = dateFormat.parse(line.split(\";\")[0]); } catch (java.text.ParseException e2) { e2.printStackTrace(); java.lang.System.out.println(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2143/buggy-version/src.uk.ac.york.mhe504.dblm.datacapture.OJDBCLogProcessor.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.text.SimpleDateFormat.parse(java.lang.String)"], "Fixed commit": "56cf4f4752ad8304f78c6081769adee2653f0b7f", "Url": "https://api.github.com/repos/mhe504/DBLModeller", "Date": "2015-12-01T17:21:11Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { id_usuario = br.com.ifrn.workbook.utils.SecurityContextUtils.getUser(userService).getId(); } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/9036/buggy-version/src.main.java.br.com.ifrn.workbook.controller.ServicoController.java", "BodyUseAPI": ["br.com.ifrn.workbook.utils.SecurityContextUtils.getUser(br.com.ifrn.workbook.service.UserService)", "br.com.ifrn.workbook.utils.SecurityContextUtils.getUser(userService).getId()"], "Fixed commit": "86ef2c303116db5a7a376f267ee0198b104c51c1", "Url": "https://api.github.com/repos/evangilo/workbook", "Date": "2015-03-25T18:03:30Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { controllerCar.partialSave(cars); } catch (org.json.JSONException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8285/buggy-version/AutomobileCatalogue.src.com.AndroidProject.automobilecatalogue.MainActivity.java", "BodyUseAPI": ["com.AndroidProject.automobilecatalogue.ControllerCar.partialSave(java.util.ArrayList<com.AndroidProject.automobilecatalogue.ModelCar>)"], "Fixed commit": "7478241de4eb8606229c00ad4bc7d51c6157b24f", "Url": "https://api.github.com/repos/PaulAlfred/AutomobileCatalogue", "Date": "2014-11-18T02:52:30Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return ((org.drools.compiler.kie.builder.impl.InternalKieModule) (m.invoke(null, url))); } catch (java.lang.Exception e) { throw new java.lang.RuntimeException((\"Failure creating a OsgiKieModule caused by: \" + (e.getMessage())), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/533/buggy-version/drools-compiler.src.main.java.org.drools.compiler.kie.builder.impl.ClasspathKieProject.java", "BodyUseAPI": ["java.lang.reflect.Method.invoke(<nulltype>,java.net.URL)"], "Fixed commit": "972b76b11ff28ab99d1dedfcfde530a1c9944ee4", "Url": "https://api.github.com/repos/droolsjbpm/drools", "Date": "2013-06-26T09:16:16Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { processNotify.cancel(); } catch (java.lang.Exception e) { com.njlabs.showjava.utils.logging.Ln.i(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3821/buggy-version/app.src.main.java.com.njlabs.showjava.processor.ProcessService.java", "BodyUseAPI": ["com.njlabs.showjava.utils.Notify.cancel()"], "Fixed commit": "8dcdefab905ae5b81974a1407c55e20239b647db", "Url": "https://api.github.com/repos/niranjan94/show-java", "Date": "2015-08-21T11:29:30Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { decodedName = java.net.URLDecoder.decode(name, \"UTF-8\"); } catch (java.io.UnsupportedEncodingException e) { throw new java.lang.AssertionError(\"UTF-8 is unknown\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3194/buggy-version/src.main.java.com.blogboard.server.service.BoardService.java", "BodyUseAPI": ["java.net.URLDecoder.decode(java.lang.String,java.lang.String)"], "Fixed commit": "498983d4b2d4d9951bc6176c101b8465b0ed4716", "Url": "https://api.github.com/repos/ReneeSlamka/BlogBoard", "Date": "2015-11-24T00:21:26Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { dateTimeZone = org.joda.time.DateTimeZone.forID(timeZoneKey.getId()); } catch (java.lang.IllegalArgumentException e) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7520/buggy-version/src.main.java.com.qubole.presto.udfs.scalar.hiveUdfs.PrestoDateTimeZoneIndex.java", "BodyUseAPI": ["com.facebook.presto.spi.type.TimeZoneKey.getId()", "org.joda.time.DateTimeZone.forID(timeZoneKey.getId())"], "Fixed commit": "1109bf86830cfdc0568506aad4175de8fd8758ee", "Url": "https://api.github.com/repos/amoghmargoor/presto-udfs", "Date": "2017-09-20T14:16:14Z"},
{"Line": "=>448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { mysh.codegen.SQLHelper.hump2UnderlineCols.put(col, underLine); } finally { mysh.codegen.SQLHelper.hump2UnderlineColsLock.writeLock().unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4314/buggy-version/core.src.main.java.mysh.codegen.SQLHelper.java", "BodyUseAPI": ["java.util.WeakHashMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "3d713f1db05592712559a809873b1eca869a2d74", "Url": "https://api.github.com/repos/myshzzx/mlib", "Date": "2015-07-07T09:31:09Z"},
{"Line": "=>424", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { underLine = mysh.codegen.SQLHelper.hump2UnderlineCols.get(col); } finally { mysh.codegen.SQLHelper.hump2UnderlineColsLock.readLock().unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4314/buggy-version/core.src.main.java.mysh.codegen.SQLHelper.java", "BodyUseAPI": ["java.util.WeakHashMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "3d713f1db05592712559a809873b1eca869a2d74", "Url": "https://api.github.com/repos/myshzzx/mlib", "Date": "2015-07-07T09:31:09Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.messages = idata.getMessages().newMessages(PackHelper.LANG_FILE_NAME); } catch (com.izforge.izpack.panels.packs.com.izforge.izpack.api ex) { this.messages = idata.getMessages(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5267/buggy-version/izpack-panel.src.main.java.com.izforge.izpack.panels.packs.PacksModel.java", "BodyUseAPI": ["com.izforge.izpack.api.data.InstallData.getMessages()", "idata.getMessages().newMessages(PackHelper.LANG_FILE_NAME)"], "Fixed commit": "7f054acadbd06e579b05468cfe5dee0f2dd5b0ea", "Url": "https://api.github.com/repos/izpack/izpack", "Date": "2014-11-03T08:51:15Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { long duration = endTime - startTime; duration /= 1000; long speed = (file.length()) / duration; return speed; } catch (final java.lang.ArithmeticException e) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8188/buggy-version/src.main.java.handler.StatisticsHandler.java", "BodyUseAPI": ["java.io.File.length()"], "Fixed commit": "9c38d5ffbb8b604349ef054af5f8d5a41ba4bae3", "Url": "https://api.github.com/repos/Valkryst/Schillsaver", "Date": "2015-11-13T20:46:01Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { output.add(cc.moecraft.hykilpikonna.lores.Utils.LoreUtils.readLore(((java.util.ArrayList<java.lang.String>) (player.getInventory().getHelmet().getItemMeta().getLore())))); cc.moecraft.hykilpikonna.lores.HyLores.loglogger.Debug(\"[\u83b7\u53d6\u7269\u54c1]\u68c0\u6d4b\u5230\u5934\u76d4, \u5df2\u6dfb\u52a0\"); } catch (java.lang.NullPointerException e) { cc.moecraft.hykilpikonna.lores.HyLores.loglogger.Debug(\"[\u83b7\u53d6\u7269\u54c1]\u672a\u68c0\u6d4b\u5230\u5934\u76d4, \u5df2\u65e0\u89c6\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5099/buggy-version/src.cc.moecraft.hykilpikonna.lores.Utils.ItemUtils.java", "BodyUseAPI": ["player.getInventory().getHelmet().getItemMeta().getLore()", "java.util.ArrayList<java.util.ArrayList<java.lang.String>>.add(cc.moecraft.hykilpikonna.lores.Utils.LoreUtils.readLore(((java.util.ArrayList<java.lang.String>) (player.getInventory().getHelmet().getItemMeta().getLore()))))", "org.bukkit.entity.Player.getInventory()", "cc.moecraft.hykilpikonna.lores.Utils.LoreUtils.readLore(((java.util.ArrayList<java.lang.String>) (player.getInventory().getHelmet().getItemMeta().getLore())))", "player.getInventory().getHelmet()", "cc.moecraft.hykilpikonna.lores.Utils.ItemUtils.Debug(java.lang.String)", "player.getInventory().getHelmet().getItemMeta()"], "Fixed commit": "f4bfe7c70f98dc1207f26fbf02d26836e253d88d", "Url": "https://api.github.com/repos/hykilpikonna/HyLores", "Date": "2017-06-16T07:41:55Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { config.save(file); } catch (java.io.IOException ex) { java.util.logging.Logger.getLogger(net.dockter.infoguide.guide.Guide.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7601/buggy-version/src.main.java.net.dockter.infoguide.guide.Guide.java", "BodyUseAPI": ["org.bukkit.configuration.file.YamlConfiguration.save(java.io.File)"], "Fixed commit": "fff846857e26826186db56dfefdaf12567178d63", "Url": "https://api.github.com/repos/mcsnetworks/InfoGuide", "Date": "2012-07-26T17:13:03Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { outputWorker.send(message.concat(java.lang.Character.toString(com.example.ontruckconnector.TCPConnection.TERMINATOR)).getBytes(\"UTF-8\")); } catch (java.io.UnsupportedEncodingException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1459/buggy-version/onTruckConnector.app.src.main.java.com.example.ontruckconnector.TCPConnection.java", "BodyUseAPI": ["java.lang.String.concat(java.lang.String)", "java.lang.String.getBytes(java.lang.String)", "java.lang.Character.toString(char)", "com.example.ontruckconnector.TCPConnection.OutputWorker.send(byte[])"], "Fixed commit": "c1559547602ed1f54d24644f82650cbeac2c9bb1", "Url": "https://api.github.com/repos/hulthe/DAT255", "Date": "2017-10-24T12:21:43Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { float z = mainController.getProfile().allCalculatedPoints.get(x).get(y).getY().floatValue(); return z; } catch (java.lang.Exception e) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/492/buggy-version/src.edu.wpi.surflab.curvature.view.WorkPanel.java", "BodyUseAPI": ["mainController.getProfile().allCalculatedPoints.get(int)", "edu.wpi.surflab.curvature.controller.MainController.getProfile()", "mainController.getProfile().allCalculatedPoints.get(x).get(y).getY()", "mainController.getProfile().allCalculatedPoints.get(x).get(y).getY().floatValue()", "mainController.getProfile().allCalculatedPoints.get(x).get(int)"], "Fixed commit": "1e8b8a84367e14052914bd073652bdeb139381d0", "Url": "https://api.github.com/repos/Spkordell/Curvesoft", "Date": "2014-01-04T10:37:16Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { load(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1692/buggy-version/core.src.main.java.com.orientechnologies.orient.core.type.tree.OMVRBTreePersistent.java", "BodyUseAPI": ["com.orientechnologies.orient.core.type.tree.OMVRBTreePersistent<K, V>.load()"], "Fixed commit": "c51098760d7d9bfe18bec29254a0249b8271600d", "Url": "https://api.github.com/repos/nuvolabase/orientdb", "Date": "2013-06-19T09:36:12Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { responseCharSet = org.apache.http.util.EntityUtils.getContentCharSet(entity); responseAsBytes = org.apache.http.util.EntityUtils.toByteArray(entity); } catch (java.lang.IllegalStateException ex) { android.util.Log.e(\"RestResponse: consume()\", \"Content has already been consumed\", ex); responseAsBytes = new byte[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3450/buggy-version/native.SalesforceSDK.src.com.salesforce.androidsdk.rest.RestResponse.java", "BodyUseAPI": ["org.apache.http.util.EntityUtils.getContentCharSet(org.apache.http.HttpEntity)", "org.apache.http.util.EntityUtils.toByteArray(org.apache.http.HttpEntity)"], "Fixed commit": "3c13f0295b94567bce1413a4733ec3e944c2ad91", "Url": "https://api.github.com/repos/khawkins/SalesforceMobileSDK-Android", "Date": "2014-08-25T17:45:54Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { scheduler.addJob(job, true); } catch (org.quartz.SchedulerException e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/935/buggy-version/src.main.java.org.plista.kornakapi.core.training.TrainingScheduler.java", "BodyUseAPI": ["org.quartz.Scheduler.addJob(org.quartz.JobDetail,boolean)"], "Fixed commit": "5679eb333b8dab43cc5efce47152cc5180e865f6", "Url": "https://api.github.com/repos/KukumavMozolo/kornakapi", "Date": "2014-06-06T16:31:16Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (jcAudioPlayer != null) { jcAudioPlayer.pauseAudio(); jcAudioPlayer.updateNotification(); } } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5618/buggy-version/jcplayer.src.main.java.com.example.jean.jcplayer.JcPlayerNotificationReceiver.java", "BodyUseAPI": ["com.example.jean.jcplayer.JcAudioPlayer.pauseAudio()", "com.example.jean.jcplayer.JcAudioPlayer.updateNotification()"], "Fixed commit": "9ece7becead6d44b20423352b975aa6b6ac0c6f8", "Url": "https://api.github.com/repos/iRajul/JcPlayer", "Date": "2017-03-26T08:15:32Z"},
{"Line": "=>435", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { setMasterResult(context, appMasterNode, appMasterSplitNode); } catch (org.apache.zookeeper.KeeperException e) { this.isMasterZnodeCleaned = true; ml.shifu.guagua.worker.NettyWorkerCoordinator.LOG.warn(\"No such node:{}\", appMasterNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2213/buggy-version/guagua-core.src.main.java.ml.shifu.guagua.worker.NettyWorkerCoordinator.java", "BodyUseAPI": ["ml.shifu.guagua.worker.NettyWorkerCoordinator.7.setMasterResult(ml.shifu.guagua.worker.WorkerContext<MASTER_RESULT, WORKER_RESULT>,java.lang.String,java.lang.String)"], "Fixed commit": "a48ddfa9dc134641b32f682f36bd78c1ba5e669f", "Url": "https://api.github.com/repos/ShifuML/guagua", "Date": "2015-04-09T04:24:20Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { setMasterResult(context, appMasterNode, appMasterSplitNode); } catch (org.apache.zookeeper.KeeperException e) { this.isMasterZnodeCleaned = true; ml.shifu.guagua.worker.NettyWorkerCoordinator.LOG.warn(\"No such node:{}\", appMasterNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2213/buggy-version/guagua-core.src.main.java.ml.shifu.guagua.worker.NettyWorkerCoordinator.java", "BodyUseAPI": ["ml.shifu.guagua.worker.NettyWorkerCoordinator.6.setMasterResult(ml.shifu.guagua.worker.WorkerContext<MASTER_RESULT, WORKER_RESULT>,java.lang.String,java.lang.String)"], "Fixed commit": "a48ddfa9dc134641b32f682f36bd78c1ba5e669f", "Url": "https://api.github.com/repos/ShifuML/guagua", "Date": "2015-04-09T04:24:20Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((savedInstanceState.getBoolean(\"InProgress\")) == true) { mSensorManager.registerListener(this, mAccelerometer, 50000000); mSensorManager.registerListener(this, mGyroscope, 50000000); mSensorManager.registerListener(this, mMagnetometer, 50000000); } } catch (java.lang.NullPointerException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7131/buggy-version/app.src.main.java.research.activitysensingresearch.MainActivity.java", "BodyUseAPI": ["android.hardware.SensorManager.registerListener(research.activitysensingresearch.MainActivity,android.hardware.Sensor,int)", "android.os.Bundle.getBoolean(java.lang.String)", "android.hardware.SensorManager.registerListener(research.activitysensingresearch.MainActivity,android.hardware.Sensor,int)", "android.hardware.SensorManager.registerListener(research.activitysensingresearch.MainActivity,android.hardware.Sensor,int)"], "Fixed commit": "1a8ef24fa1e5add5806b5ee513787c0da5660828", "Url": "https://api.github.com/repos/ryansmick/ActivitySensingResearch", "Date": "2015-11-18T18:00:06Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { report = reportDao.getReport(xid); } catch (org.springframework.dao.IncorrectResultSizeDataAccessException e) { importContext.getResult().addGenericMessage(\"reports.emport.duplicateXids\", xid); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2604/buggy-version/Reports.src.com.serotonin.m2m2.reports.ReportEmportDefinition.java", "BodyUseAPI": ["com.serotonin.m2m2.reports.ReportDao.getReport(java.lang.String)"], "Fixed commit": "9ea00e9d2611ada758afdc801b87356c86266776", "Url": "https://api.github.com/repos/infiniteautomation/ma-modules-public", "Date": "2016-05-24T20:06:45Z"},
{"Line": "=>8", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { service.addProduct(product); } catch (java.lang.Exception e) { e.getMessage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1998/buggy-version/LisandroChichi.Topic3-Services.src.main.java.shopingCart.ShoppingCartWebService.java", "BodyUseAPI": ["shopingCart.ShoppingCartService.addProduct(shopingCart.Product)"], "Fixed commit": "a3f97a755bc9ac016a25fb6c60a54c5e911030e4", "Url": "https://api.github.com/repos/justomiguel/java-bootcamp-2016", "Date": "2016-03-03T10:40:17Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { fragment.show(fm, org.matrix.console.fragments.TAG_FRAGMENT_MESSAGE_OPTIONS); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2356/buggy-version/console.src.main.java.org.matrix.console.fragments.ConsoleMessageListFragment.java", "BodyUseAPI": ["org.matrix.androidsdk.fragments.IconAndTextDialogFragment.show(android.support.v4.app.FragmentManager,org.matrix.console.fragments.TAG_FRAGMENT_MESSAGE_OPTIONS)"], "Fixed commit": "4de0b5ce1483695d4b0a420ed7a570ee46541526", "Url": "https://api.github.com/repos/matrix-org/matrix-android-console", "Date": "2015-09-29T09:46:06Z"},
{"Line": "=>599", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { builderSingle.show(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2356/buggy-version/console.src.main.java.org.matrix.console.fragments.ConsoleMessageListFragment.java", "BodyUseAPI": ["AlertDialog.Builder.show()"], "Fixed commit": "4de0b5ce1483695d4b0a420ed7a570ee46541526", "Url": "https://api.github.com/repos/matrix-org/matrix-android-console", "Date": "2015-09-29T09:46:06Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return org.apache.logging.log4j.ThreadContext.pop(); } catch (java.util.NoSuchElementException ex) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2619/buggy-version/log4j-1.2-api.src.main.java.org.apache.log4j.NDC.java", "BodyUseAPI": ["org.apache.logging.log4j.ThreadContext.pop()"], "Fixed commit": "bbba4246b6bc7f40d4195f3b61e3b5509158951f", "Url": "https://api.github.com/repos/Cmdr3nder/logging-log4j2", "Date": "2015-03-03T23:48:39Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(1000L); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1474/buggy-version/app.src.main.java.com.ayoza.camera_sputnik.camerasputnik.activities.DownloadingImageActivity.java", "BodyUseAPI": ["java.lang.Thread.sleep(long)"], "Fixed commit": "f1ec9d58818c1e2f7fa7de719d1308ba9943a527", "Url": "https://api.github.com/repos/raultov/camera-sputnik", "Date": "2015-06-12T18:50:41Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(20000L); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1474/buggy-version/app.src.main.java.com.ayoza.camera_sputnik.camerasputnik.activities.DownloadingImageActivity.java", "BodyUseAPI": ["java.lang.Thread.sleep(long)"], "Fixed commit": "f1ec9d58818c1e2f7fa7de719d1308ba9943a527", "Url": "https://api.github.com/repos/raultov/camera-sputnik", "Date": "2015-06-12T18:50:41Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { state = _lock_map.tryLock(key, time, tu); } catch (java.lang.InterruptedException ex) { org.apache.ode.clustering.hazelcast.HazelcastInstanceLock.__log.error(ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3762/buggy-version/clustering.src.main.java.org.apache.ode.clustering.hazelcast.HazelcastInstanceLock.java", "BodyUseAPI": ["com.hazelcast.core.IMap<java.lang.String, java.lang.String>.tryLock(java.lang.String,int,java.util.concurrent.TimeUnit)"], "Fixed commit": "09a448675000801befa747c802a9043439418a81", "Url": "https://api.github.com/repos/apache/ode", "Date": "2015-07-09T04:55:51Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { classloader = new com.morgoo.droidplugin.core.PluginClassLoader(apk, optimizedDirectory, libraryPath, java.lang.ClassLoader.getSystemClassLoader()); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2569/buggy-version/project.Libraries.DroidPlugin.src.com.morgoo.droidplugin.core.PluginProcessManager.java", "BodyUseAPI": ["java.lang.ClassLoader.getSystemClassLoader()"], "Fixed commit": "e7f4905a8b65a0c0b396eb0dc9536531c05981a7", "Url": "https://api.github.com/repos/vfishv/DroidPlugin", "Date": "2016-01-05T09:27:19Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { while (!(((com.example.taek.commutingchecker.services.BLEScanService) (mContext)).mSocketIO.connected())) { java.lang.Thread.sleep(500); ((com.example.taek.commutingchecker.services.BLEScanService) (mContext)).mSocketIO.connect(); } android.widget.Toast.makeText(context, status_str, Toast.LENGTH_SHORT).show(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1795/buggy-version/app.src.main.java.com.example.taek.commutingchecker.utils.RegisterReceiver.java", "BodyUseAPI": ["android.widget.Toast.makeText(android.content.Context,java.lang.String,Toast.LENGTH_SHORT)", "((com.example.taek.commutingchecker.services.BLEScanService) (mContext)).mSocketIO.connect()", "((com.example.taek.commutingchecker.services.BLEScanService) (mContext)).mSocketIO.connected()", "android.widget.Toast.makeText(context, status_str, Toast.LENGTH_SHORT).show()", "java.lang.Thread.sleep(int)"], "Fixed commit": "45d2b62d721ac0b0f8196c4f31cd12342f5c9127", "Url": "https://api.github.com/repos/eldbxor/CommutingChecker", "Date": "2016-10-16T06:58:12Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { while (!(((com.example.taek.commutingchecker.services.BLEScanService) (mContext)).mSocketIO.connected())) { java.lang.Thread.sleep(500); ((com.example.taek.commutingchecker.services.BLEScanService) (mContext)).mSocketIO.connect(); } android.widget.Toast.makeText(context, status_str, Toast.LENGTH_SHORT).show(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1795/buggy-version/app.src.main.java.com.example.taek.commutingchecker.utils.RegisterReceiver.java", "BodyUseAPI": ["android.widget.Toast.makeText(android.content.Context,java.lang.String,Toast.LENGTH_SHORT)", "java.lang.Thread.sleep(int)", "((com.example.taek.commutingchecker.services.BLEScanService) (mContext)).mSocketIO.connected()", "((com.example.taek.commutingchecker.services.BLEScanService) (mContext)).mSocketIO.connect()", "android.widget.Toast.makeText(context, status_str, Toast.LENGTH_SHORT).show()"], "Fixed commit": "45d2b62d721ac0b0f8196c4f31cd12342f5c9127", "Url": "https://api.github.com/repos/eldbxor/CommutingChecker", "Date": "2016-10-16T06:58:12Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { database.execSQL(\"alter table learning_data add column firstLearnDate VARCHAR\"); database.execSQL(\"update learning_data set firstLearnDate='2010-01-01 00:00:00.000000'\"); } catch (org.liberty.android.fantastischmemo.common.android e) { android.util.Log.e(TAG, \"Upgrading failed, the column firstLearnData might already exists.\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5743/buggy-version/app.src.main.java.org.liberty.android.fantastischmemo.common.AnyMemoDBOpenHelper.java", "BodyUseAPI": ["android.database.sqlite.SQLiteDatabase.execSQL(java.lang.String)", "android.database.sqlite.SQLiteDatabase.execSQL(java.lang.String)"], "Fixed commit": "e1efb52b379322d016b9b2906c2af8b44ca66645", "Url": "https://api.github.com/repos/helloworld1/AnyMemo", "Date": "2017-01-03T13:28:14Z"},
{"Line": "=>417", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { udfAdaptorBuilder.registerUDF(udf, method, sqlCtx); } catch (org.wso2.carbon.analytics.spark.core.exception.AnalyticsUDFException e) { org.wso2.carbon.analytics.spark.core.internal.SparkAnalyticsExecutor.log.error((((\"Error while registering the UDF method: \" + (method.getName())) + \", \") + (e.getMessage())), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3470/buggy-version/components.analytics-processors.org.wso2.carbon.analytics.spark.core.src.main.java.org.wso2.carbon.analytics.spark.core.internal.SparkAnalyticsExecutor.java", "BodyUseAPI": ["org.wso2.carbon.analytics.spark.core.udf.AnalyticsUDFsRegister.registerUDF(java.lang.Class,java.lang.reflect.Method,org.apache.spark.sql.SQLContext)"], "Fixed commit": "11b2fa7600e3dd6258702183c7bda6f327b3cb12", "Url": "https://api.github.com/repos/chanikag/carbon-analytics", "Date": "2016-03-20T12:05:04Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { io.writeMeeting(requestingStudent, studentRequested, hour, minute, course); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4804/buggy-version/src.main.java.WHS_planner.Core.Meeting.java", "BodyUseAPI": ["WHS_planner.Core.IO.writeMeeting(WHS_planner.Core.Student,WHS_planner.Core.Student,long,long,WHS_planner.Util.Course)"], "Fixed commit": "49f69e568c8c7e1b4388c2be4de4390127199820", "Url": "https://api.github.com/repos/s0urc3d3v3l0pm3nt/whs_planner", "Date": "2016-10-13T16:56:01Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { final org.skife.jdbi.v2.Transaction t = ((org.skife.jdbi.v2.Transaction) (args[0])); return h.getHandle().inTransaction(new org.skife.jdbi.v2.TransactionCallback() { public java.lang.Object inTransaction(org.skife.jdbi.v2.Handle conn, org.skife.jdbi.v2.TransactionStatus status) throws java.lang.Exception { return t.inTransaction(target, status); } }); } finally { h.release(\"transaction\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6826/buggy-version/src.main.java.org.skife.jdbi.v2.sqlobject.Transactional.java", "BodyUseAPI": ["h.getHandle().inTransaction(org.skife.jdbi.v2.TransactionCallback)", "org.skife.jdbi.v2.sqlobject.HandleDing.getHandle()", "org.skife.jdbi.v2.Transaction.inTransaction(java.lang.Object,org.skife.jdbi.v2.TransactionStatus)"], "Fixed commit": "77f09a71ebff6098043552c21b004640854419f5", "Url": "https://api.github.com/repos/jdbi/jdbi", "Date": "2011-03-10T20:56:57Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { delete(repository, downloadName); } catch (com.github.maven.plugin.client.exceptions.GithubArtifactNotFoundException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4658/buggy-version/src.main.java.com.github.maven.plugin.client.GithubClient.java", "BodyUseAPI": ["com.github.maven.plugin.client.GithubClient.delete(java.lang.String,java.lang.String)"], "Fixed commit": "43f601f87bfd474dd6b97ad71e84f3d022b7eb5e", "Url": "https://api.github.com/repos/kevinpollet/maven-github-plugin", "Date": "2011-03-12T11:11:47Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { facesContext.getExternalContext().redirect(\"/gsmyadmin/pages/index.xhtml\"); } catch (java.io.IOException e) { throw new java.lang.IllegalStateException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1136/buggy-version/genericsystem-myadmin.src.main.java.org.genericsystem.web.beans.FileSystemBean.java", "BodyUseAPI": ["javax.faces.context.FacesContext.getExternalContext()", "facesContext.getExternalContext().redirect(java.lang.String)"], "Fixed commit": "d24783746a04ce22770e9a5459a6c83d87f66b31", "Url": "https://api.github.com/repos/genericsystem/genericsystem2011", "Date": "2013-05-17T14:14:47Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return getPlayersUUIDs().contains(user.getUUID()); } catch (java.lang.Exception ex) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5433/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.UserData.Data.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.contains(user.getUUID())", "com.Ben12345rocks.VotingPlugin.UserData.Data.getPlayersUUIDs()", "com.Ben12345rocks.VotingPlugin.Objects.User.getUUID()"], "Fixed commit": "0f9f075bf9baf2b484f9afe4547248d15058136d", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2016-03-24T20:29:28Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { pde.getClass().getMethod(\"setKeepInventory\", new java.lang.Class<?>[]{ boolean.class }); pde.setKeepInventory(false); } catch (java.lang.Exception ex) { player.getInventory().clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3961/buggy-version/src.io.github.yannici.bedwars.Listener.PlayerListener.java", "BodyUseAPI": ["org.bukkit.event.entity.PlayerDeathEvent.getClass()", "org.bukkit.event.entity.PlayerDeathEvent.setKeepInventory(boolean)", "pde.getClass().getMethod(java.lang.String,java.lang.Class<?>[])"], "Fixed commit": "0595f5aba3eae2ef55a1b27c748bdbab23801a65", "Url": "https://api.github.com/repos/BedwarsRel/BedwarsRel", "Date": "2015-05-05T06:02:33Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return new java.awt.geom.Point2D.Double(((loc.getX()) + (dir.getDx())), ((loc.getY()) + (dir.getDy()))); } catch (java.lang.NullPointerException e) { return new java.awt.geom.Point2D.Double(loc.getX(), loc.getY()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4937/buggy-version/src.isnork.g9.strategy.GlobalCircleStrategy.java", "BodyUseAPI": ["java.awt.geom.Point2D.getX()", "isnork.sim.GameObject.Direction.getDy()", "java.awt.geom.Point2D.getY()", "isnork.sim.GameObject.Direction.getDx()"], "Fixed commit": "8734dd453a242e4849e2f949c9e0c868af455e68", "Url": "https://api.github.com/repos/yufeiliu/isnorkling", "Date": "2011-09-22T22:05:31Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { directDist = calcDistFromOrigin(calcLocFromOffset(currentLoc, dir)); } catch (java.lang.NullPointerException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4937/buggy-version/src.isnork.g9.strategy.GlobalCircleStrategy.java", "BodyUseAPI": ["isnork.g9.strategy.GlobalCircleStrategy.calcDistFromOrigin(java.awt.geom.Point2D)", "isnork.g9.strategy.GlobalCircleStrategy.calcLocFromOffset(java.awt.geom.Point2D,isnork.sim.GameObject.Direction)"], "Fixed commit": "8734dd453a242e4849e2f949c9e0c868af455e68", "Url": "https://api.github.com/repos/yufeiliu/isnorkling", "Date": "2011-09-22T22:05:31Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.stratio.connector.cassandra.CassandraExecutor.execute(indexStatement.toString(), session); } catch (com.stratio.crossdata.common.exceptions.ConnectorException e) { java.lang.String tableName = com.stratio.connector.cassandra.utils.Utils.toCaseSensitive(indexMetadata.getName().getTableName().getName()); java.lang.String catalog = com.stratio.connector.cassandra.utils.Utils.toCaseSensitive(indexMetadata.getName().getTableName().getCatalogName().getName()); java.lang.String remove = ((((\"ALTER TABLE \" + catalog) + \".\") + tableName) + \" DROP \") + (indexMetadata.getName().getName()); com.stratio.connector.cassandra.CassandraExecutor.execute(remove, session); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1696/buggy-version/src.main.java.com.stratio.connector.cassandra.engine.CassandraMetadataEngine.java", "BodyUseAPI": ["com.stratio.connector.cassandra.statements.CreateIndexStatement.toString()", "com.stratio.connector.cassandra.CassandraExecutor.execute(indexStatement.toString(),com.datastax.driver.core.Session)"], "Fixed commit": "a80acaf117f81d936971db266624a02a27e1bb88", "Url": "https://api.github.com/repos/Stratio/stratio-connector-cassandra", "Date": "2015-02-20T12:17:16Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { new org.codehaus.groovy.grails.cli.interactive.InteractiveMode(build, scriptRunner).run(); } catch (java.lang.Throwable e) { console.error((\"Interactive mode exited with error: \" + (e.getMessage())), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4349/buggy-version/grails-bootstrap.src.main.groovy.org.codehaus.groovy.grails.cli.GrailsScriptRunner.java", "BodyUseAPI": ["org.codehaus.groovy.grails.cli.interactive.InteractiveMode.run()"], "Fixed commit": "02471da206761c11883b6f9b124af3d58ce446c4", "Url": "https://api.github.com/repos/pedjak/grails-core", "Date": "2011-06-09T15:17:57Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.net.URL myURL = new java.net.URL(urlCache.getExpanded()); displayUrl = myURL.getHost(); } catch (java.net.MalformedURLException exe) { org.woehlke.twitterwall.process.parts.UserApiServiceImpl.log.warn(exe.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6065/buggy-version/src.main.java.org.woehlke.twitterwall.process.parts.UserApiServiceImpl.java", "BodyUseAPI": ["java.net.URL.getHost()", "org.woehlke.twitterwall.oodm.entities.common.UrlCache.getExpanded()"], "Fixed commit": "e1a40fb69342b830e1e5f7d2c4448797e2a5cb36", "Url": "https://api.github.com/repos/thomaswoehlke/twitterwall2", "Date": "2017-06-24T11:49:25Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.nio.file.Files.delete(dir); } catch (java.nio.file.DirectoryNotEmptyException e) { org.terasology.persistence.internal.SaveTransactionHelper.logger.warn(\"The save job could not cleanup a temporarly created directory, it will retry once in one second\"); try { java.lang.Thread.sleep(1000L); } catch (java.lang.InterruptedException e1) { java.lang.Thread.currentThread().interrupt(); } java.nio.file.Files.delete(dir); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/728/buggy-version/engine.src.main.java.org.terasology.persistence.internal.SaveTransactionHelper.java", "BodyUseAPI": ["java.nio.file.Files.delete(java.nio.file.Path)"], "Fixed commit": "8305d9be5fa56a0c2046b05c0246f6d913e51c0b", "Url": "https://api.github.com/repos/MovingBlocks/Terasology", "Date": "2016-02-15T04:51:53Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.momogogo.motrip.MainActivity.mHandler.removeCallbacks(mUpdateRunnable); } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6054/buggy-version/app.src.main.java.com.momogogo.motrip.MainActivity.java", "BodyUseAPI": ["android.os.Handler.removeCallbacks(java.lang.Runnable)"], "Fixed commit": "4d83f1f9019f614accebd6d7129431fcb486d9cf", "Url": "https://api.github.com/repos/morris0126/MoTrip", "Date": "2017-12-01T09:59:24Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(2000); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8439/buggy-version/app.src.main.java.com.zigapk.gimvic.suplence.Data.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "8517e7590aa8b57df8844c8dd8d5dd627c469307", "Url": "https://api.github.com/repos/GimVic-app/gimvic-android", "Date": "2015-01-10T16:55:43Z"},
{"Line": "=>850", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { displayName = new net.minecraftforge.fluids.FluidStack(me.getValue(), 1).getLocalizedName(); } catch (java.lang.Exception e) { com.mcjty.rftools.RFTools.logError(\"Something went wrong getting the name of a fluid:\"); com.mcjty.rftools.RFTools.logError((\"Fluid: \" + (me.getKey()))); com.mcjty.rftools.RFTools.logError((\"Fluid: \" + (me.getValue().getUnlocalizedName()))); displayName = (\"<fluid:\" + (me.getKey())) + \">\"; e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4593/buggy-version/src.main.java.com.mcjty.rftools.items.dimlets.KnownDimletConfiguration.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, net.minecraftforge.fluids.Fluid>.getValue()", "net.minecraftforge.fluids.FluidStack.getLocalizedName()"], "Fixed commit": "60c019c0796a44b6b2fe30307f74ecbc28c03b6d", "Url": "https://api.github.com/repos/McJtyMods/RFTools", "Date": "2015-02-06T17:07:32Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { scheduleProvider.initScheduler(); } catch (java.lang.Exception ex) { throw new org.jboss.seam.cron.impl.exception.SchedulerInitialisationException(\"Error initialising scheduler for underlying provider\", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6368/buggy-version/src.main.java.org.jboss.seam.cron.provider.spi.ScheduleConfigScanner.java", "BodyUseAPI": ["org.jboss.seam.cron.provider.spi.CronScheduleProvider.initScheduler()"], "Fixed commit": "d896dc8e54fdc479cd5900c80b7cd5ee2077cb60", "Url": "https://api.github.com/repos/seam/cron", "Date": "2011-05-21T14:00:28Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return ((org.xlcloud.rest.exception.ExceptionDetails) (getResponse().getEntity())).getMessage(); } catch (java.lang.ClassCastException e) { return getMessage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5403/buggy-version/framework.rest-utils.src.main.java.org.xlcloud.rest.exception.BaseException.java", "BodyUseAPI": ["org.xlcloud.rest.exception.BaseException.getResponse()", "((org.xlcloud.rest.exception.ExceptionDetails) (getResponse().getEntity())).getMessage()", "getResponse().getEntity()"], "Fixed commit": "60440534546f76c8049a51b3d7fa7e894f822196", "Url": "https://api.github.com/repos/ow2-xlcloud/xlcloud", "Date": "2014-01-14T14:22:40Z"},
{"Line": "=>724", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { maxCacheSize = dataInputStream.readLong(); } catch (java.io.IOException ioe) { throw com.orientechnologies.common.exception.OException.wrapException(new com.orientechnologies.orient.core.exception.OLoadCacheStateException(\"Can not restore state of cache from file\"), ioe); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6132/buggy-version/core.src.main.java.com.orientechnologies.orient.core.storage.cache.local.twoq.O2QCache.java", "BodyUseAPI": ["java.io.DataInputStream.readLong()"], "Fixed commit": "979f0817ae00ac89b79001a27737a4428376c95c", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2017-08-24T15:38:02Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return objectMapper.readValue(dl, java.util.Map.class); } catch (java.io.IOException e) { try { java.lang.Thread.sleep(200); } catch (java.lang.InterruptedException e1) { } return objectMapper.readValue(dl, java.util.Map.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/560/buggy-version/src.main.java.org.mule.tools.npm.NPMModule.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.ObjectMapper.readValue(java.net.URL,java.lang.Class)"], "Fixed commit": "c8fd429069f60741e82879e6323090ac2effab5f", "Url": "https://api.github.com/repos/mulesoft/npm-maven-plugin", "Date": "2013-02-22T19:10:04Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { appFilePath = getFilesDir().getAbsolutePath(); } catch (java.lang.NullPointerException ex) { appFilePath = getFilesDir().getPath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1393/buggy-version/src.com.fkf.free.WelcomeActivity.java", "BodyUseAPI": ["getFilesDir().getAbsolutePath()", "com.fkf.free.WelcomeActivity.getFilesDir()"], "Fixed commit": "fd80a0d7979ab871adafc2bd6e49b41c55d0dea1", "Url": "https://api.github.com/repos/kavi707/FKF-App", "Date": "2015-11-23T16:00:40Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.dom4j.io.XMLWriter w = new org.dom4j.io.XMLWriter(os); w.write(doc); } catch (java.io.IOException e) { throw new com.kierdavis.kmail.XMLMessageSerializationException((\"Serialization failed: \" + (e.toString())), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/116/buggy-version/src.XMLMessageSerializer.java", "BodyUseAPI": ["org.dom4j.io.XMLWriter.write(org.dom4j.Document)"], "Fixed commit": "fb4ef32b792a0b82d6b478a7ff159b7d467894b0", "Url": "https://api.github.com/repos/kierdavis/KMail", "Date": "2013-05-10T19:16:53Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.dexFiles = soot.dexpler.DexFileProvider.v().getDexFiles(dexSource); } catch (java.io.IOException e) { throw new soot.dexpler.CompilationDeathException(\"IOException during dex parsing\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7587/buggy-version/src.soot.dexpler.DexlibWrapper.java", "BodyUseAPI": ["soot.dexpler.DexFileProvider.v().getDexFiles(java.io.File)", "soot.dexpler.DexFileProvider.v()"], "Fixed commit": "e50eeb6d2660980cd6c620d806092d65e9397e92", "Url": "https://api.github.com/repos/Sable/soot", "Date": "2017-10-16T17:49:12Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { conn = this.getDataSource().getConnection(); java.sql.CallableStatement callStmt = conn.prepareCall(sql); callStmt.setString(1, tempTable); callStmt.execute(); } catch (java.sql.SQLException sqlEx) { sqlEx.printStackTrace(); } catch (java.lang.Exception ex) { ex.printStackTrace(); } finally { if (conn != null) { try { conn.close(); } catch (java.sql.SQLException sqlEx) { sqlEx.printStackTrace(); edu.harvard.i2b2.crc.loader.dao.UploadStatusDAO.log.error(\"Error while closing connection\", sqlEx); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4280/buggy-version/edu.harvard.i2b2.crc.src.server.edu.harvard.i2b2.crc.loader.dao.UploadStatusDAO.java", "BodyUseAPI": ["java.sql.CallableStatement.setString(int,java.lang.String)", "edu.harvard.i2b2.crc.loader.dao.UploadStatusDAO.getDataSource()", "java.sql.CallableStatement.execute()", "this.getDataSource().getConnection()", "java.sql.Connection.prepareCall(java.lang.String)"], "Fixed commit": "7b10421fbdea3e72661144dccca25a4beba84de6", "Url": "https://api.github.com/repos/crs4/i2b2-core-server", "Date": "2017-10-05T14:02:53Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { importSheet(tupleReader, tableName); } finally { tupleReader.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6964/buggy-version/molgenis-omx-importer.src.main.java.org.molgenis.omx.dataset.DataSetImporter.java", "BodyUseAPI": ["org.molgenis.omx.dataset.DataSetImporter.importSheet(org.molgenis.io.TupleReader,java.lang.String)"], "Fixed commit": "7d161b34b78fe8b14dddcda2eb1ac66271739b78", "Url": "https://api.github.com/repos/RoanKanninga/molgenis", "Date": "2013-03-27T15:17:11Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { doSetFieldValue(newValue); } finally { settingValueFromControl = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1597/buggy-version/plugin_ide.ui.src-lang.melnorme.util.swt.components.AbstractField.java", "BodyUseAPI": ["melnorme.util.swt.components.AbstractField<VALUE>.doSetFieldValue(VALUE)"], "Fixed commit": "da42fd0b47dda70684da5e59c480b13e7c22121e", "Url": "https://api.github.com/repos/DDT-IDE/DDT", "Date": "2015-05-20T18:49:54Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { uimaQuestion = doLatDetection(uimaQuestion, text); } catch (org.apache.uima.analysis_engine.AnalysisEngineProcessException e) { throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5817/buggy-version/src.main.java.uncc2014watsonsim.uima.qAnalysis.LATDetectionAnnotator.java", "BodyUseAPI": ["uncc2014watsonsim.uima.qAnalysis.LATDetectionAnnotator.doLatDetection(uncc2014watsonsim.uima.types.UIMAQuestion,java.lang.String)"], "Fixed commit": "fed4cb7032ebb551575d405cc0bec5726a8d9f67", "Url": "https://api.github.com/repos/SeanTater/uncc2014watsonsim", "Date": "2014-05-06T16:17:01Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((rbdao.getRaavareBatch(rvBatch).getRaavareId()) == (nextRaavare)) { checkrvBatch = false; } } catch (data.daointerface.DALException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5786/buggy-version/src.client.ASEController.java", "BodyUseAPI": ["rbdao.getRaavareBatch(rvBatch).getRaavareId()", "data.daoimpl.SQLRaavareBatchDAO.getRaavareBatch(int)"], "Fixed commit": "69d82e7a775bf72ae33a1a615e2f931753f499f3", "Url": "https://api.github.com/repos/LukasBek/CDIOFinalASE", "Date": "2016-06-16T17:47:55Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { parent = current.getParent(nodeId); } catch (java.util.NoSuchElementException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8105/buggy-version/component.portal.src.main.java.org.gatein.portal.impl.mop.ram.RamLayoutStore.java", "BodyUseAPI": ["org.gatein.portal.impl.mop.ram.Store.getParent(java.lang.String)"], "Fixed commit": "0c63cb693f64a40c4121c0019a7bda494ad50fc0", "Url": "https://api.github.com/repos/gatein/gatein-portal", "Date": "2013-09-04T15:51:03Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(500); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8660/buggy-version/src.simulation.Simulation.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "740bec4d4c3c3a40b616c3de78a87409adf0df28", "Url": "https://api.github.com/repos/xxfast/TradeNetwork", "Date": "2017-11-13T02:32:14Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { cdaSqlUtils.insertGene(gene); (withdrawnGenesCount)++; logger.warn(\"MGI IMSR_report file is out-of-sync. Added withdrawn gene {} to allele {}.\", gene.toString(), allele.toString()); } catch (java.lang.Exception e) { logger.warn(\"MGI IMSR_report file is out-of-sync. Failed to add withdrawn gene {} to allele {}.Reason:\\n{}\", gene.toString(), allele.toString(), e.getLocalizedMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3717/buggy-version/loads.src.main.java.org.mousephenotype.cda.loads.create.extract.cdabase.steps.AlleleProcessorAbstract.java", "BodyUseAPI": ["org.mousephenotype.cda.loads.common.CdaSqlUtils.insertGene(org.mousephenotype.cda.db.pojo.GenomicFeature)", "org.mousephenotype.cda.db.pojo.Allele.toString()", "org.mousephenotype.cda.db.pojo.GenomicFeature.toString()", "org.slf4j.Logger.warn(java.lang.String,gene.toString(),allele.toString())"], "Fixed commit": "2957ec119168010b2d7623cf2f932eccdf524864", "Url": "https://api.github.com/repos/mpi2/PhenotypeData", "Date": "2016-11-17T11:26:34Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.Collections.sort(applications); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8358/buggy-version/client.Ping.src.com.num.models.Usage.java", "BodyUseAPI": ["java.util.Collections.sort(java.util.List<com.num.models.Application>)"], "Fixed commit": "689e836e1eb357b21ae66db4361ebf69aeca05cf", "Url": "https://api.github.com/repos/abhishekjain89/androidperformance", "Date": "2012-03-28T17:21:42Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Float.parseFloat(editText.getText().toString()); } catch (java.lang.Exception e) { android.widget.Toast.makeText(getApplicationContext(), R.string.invalid_numbers, Toast.LENGTH_SHORT).show(); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1858/buggy-version/MatrixCalculator.src.main.java.com.softminds.matrixcalculator.base_activities.FillingMatrix.java", "BodyUseAPI": ["java.lang.Float.parseFloat(editText.getText().toString())", "android.widget.EditText.getText()", "editText.getText().toString()"], "Fixed commit": "6097904e1156b1121818cfb16a0156d4446b13b9", "Url": "https://api.github.com/repos/coder3101/Matrix-Calculator-for-Android", "Date": "2017-09-23T12:36:04Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { notesUploadFragment.setImagePaths(paths, true); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6500/buggy-version/app.src.main.java.in.tosc.studddin.fragments.NotesFragment.java", "BodyUseAPI": ["in.tosc.studddin.fragments.notes.NotesUploadFragment.setImagePaths(java.lang.String[],boolean)"], "Fixed commit": "96ec24c12a4484abee1cb9106b308d1eaaf5fdb2", "Url": "https://api.github.com/repos/teamOSC/Studddinv2_android", "Date": "2015-01-28T16:04:48Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { notesUploadFragment.setImagePaths(paths, false); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6500/buggy-version/app.src.main.java.in.tosc.studddin.fragments.NotesFragment.java", "BodyUseAPI": ["in.tosc.studddin.fragments.notes.NotesUploadFragment.setImagePaths(java.lang.String[],boolean)"], "Fixed commit": "96ec24c12a4484abee1cb9106b308d1eaaf5fdb2", "Url": "https://api.github.com/repos/teamOSC/Studddinv2_android", "Date": "2015-01-28T16:04:48Z"},
{"Line": "=>590", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { selector.getSelector().close(); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4485/buggy-version/AndroidAsync.src.com.koushikdutta.async.AsyncServer.java", "BodyUseAPI": ["com.koushikdutta.async.SelectorWrapper.getSelector()", "selector.getSelector().close()"], "Fixed commit": "62a33257319f92dcdf9fc2028ad4a99ae8451965", "Url": "https://api.github.com/repos/koush/AndroidAsync", "Date": "2014-09-17T17:18:35Z"},
{"Line": "=>618", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { selector.getSelector().close(); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4485/buggy-version/AndroidAsync.src.com.koushikdutta.async.AsyncServer.java", "BodyUseAPI": ["com.koushikdutta.async.SelectorWrapper.getSelector()", "selector.getSelector().close()"], "Fixed commit": "62a33257319f92dcdf9fc2028ad4a99ae8451965", "Url": "https://api.github.com/repos/koush/AndroidAsync", "Date": "2014-09-17T17:18:35Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { dataBar = new DataBar(line); } catch (java.lang.NumberFormatException e) { java.lang.System.out.println((\"DATABAR ERROR: \" + line)); java.io.BufferedWriter bW = new java.io.BufferedWriter(new java.io.FileWriter(\"errors.txt\")); bW.write((line + \"\\n\")); bW.close(); dataBar = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/282/buggy-version/src.DataArray.java", "BodyUseAPI": [], "Fixed commit": "3c19564608d49db5d81f3f0e5ab9826105aad4e4", "Url": "https://api.github.com/repos/mchowdhury91/MAC286Stocks", "Date": "2017-11-22T03:59:47Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { id = com.sk89q.worldedit.blocks.ItemType.lookup(dataSplit[0]).getID(); } catch (java.lang.Exception eee) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2213/buggy-version/src.main.java.com.sk89q.craftbook.util.ItemUtil.java", "BodyUseAPI": ["com.sk89q.worldedit.blocks.ItemType.lookup(java.lang.String)", "com.sk89q.worldedit.blocks.ItemType.lookup(dataSplit[0]).getID()"], "Fixed commit": "ad10806d8e53d867b4278ff9b6b4696f30e07e99", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2013-04-24T11:12:11Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { tmpNote = new nak.nakloidGUI.models.Note.Builder(tmpNote).setBaseVelocity(java.lang.Integer.valueOf(((org.eclipse.swt.widgets.Text) (e.getSource())).getText())).build(); } catch (java.lang.NumberFormatException e1) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4222/buggy-version/nak.nakloidGUI.gui.NoteOption.java", "BodyUseAPI": ["java.lang.Integer.valueOf(((org.eclipse.swt.widgets.Text) (e.getSource())).getText())", "new nak.nakloidGUI.models.Note.Builder(tmpNote).setBaseVelocity(java.lang.Integer.valueOf(((org.eclipse.swt.widgets.Text) (e.getSource())).getText())).build()", "nak.nakloidGUI.models.Note.Builder.setBaseVelocity(java.lang.Integer)", "((org.eclipse.swt.widgets.Text) (e.getSource())).getText()", "org.eclipse.swt.events.KeyEvent.getSource()"], "Fixed commit": "8a13b9b3d43b5f9c89e339b0a5926bf39198477e", "Url": "https://api.github.com/repos/acknak/NakloidGUI", "Date": "2016-07-12T14:33:41Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { encodeDate = java.net.URLEncoder.encode(date, \"utf-8\"); url = ((((com.kcb.common.server.UrlUtil.url_tch_checkin_getresult) + \"?tchid=\") + tchId) + \"&date=\") + encodeDate; } catch (java.io.UnsupportedEncodingException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/398/buggy-version/kcb.src.com.kcb.common.server.UrlUtil.java", "BodyUseAPI": ["java.net.URLEncoder.encode(java.lang.String,java.lang.String)"], "Fixed commit": "ec6e109bc4f7e430b1a676201c67fdcef1996017", "Url": "https://api.github.com/repos/kcbTeam/kcb", "Date": "2015-08-07T07:56:11Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Runnable r = getJob(); if (r != null) r.run(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/9083/buggy-version/kvstore.src.kvstore.ThreadPool.java", "BodyUseAPI": ["kvstore.ThreadPool.WorkerThread.getJob()", "java.lang.Runnable.run()"], "Fixed commit": "2b0e28fa964fbe17aad432b377ffb56d2fb9a917", "Url": "https://api.github.com/repos/QAQO-O/KVStore", "Date": "2014-05-18T12:30:02Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { response.sendMessage(client); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/9083/buggy-version/kvstore.src.kvstore.ServerClientHandler.java", "BodyUseAPI": ["kvstore.KVMessage.sendMessage(java.net.Socket)"], "Fixed commit": "2b0e28fa964fbe17aad432b377ffb56d2fb9a917", "Url": "https://api.github.com/repos/QAQO-O/KVStore", "Date": "2014-05-18T12:30:02Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { client.close(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/9083/buggy-version/kvstore.src.kvstore.ServerClientHandler.java", "BodyUseAPI": ["java.net.Socket.close()"], "Fixed commit": "2b0e28fa964fbe17aad432b377ffb56d2fb9a917", "Url": "https://api.github.com/repos/QAQO-O/KVStore", "Date": "2014-05-18T12:30:02Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (org.usfirst.frc.team2412.robot.RobotController rc : rcs) { if (rc != null) rc.processTeleop(); } } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3421/buggy-version/org.usfirst.frc.team2412.robot.Robot.java", "BodyUseAPI": ["org.usfirst.frc.team2412.robot.RobotController.processTeleop()"], "Fixed commit": "fc9426ac6d4e388de004bf23c17388faefa2dfd1", "Url": "https://api.github.com/repos/robototes/Steamworks2017", "Date": "2017-01-28T23:56:27Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (org.usfirst.frc.team2412.robot.RobotController rc : rcs) { if (rc != null) rc.processAutonomous(); } } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3421/buggy-version/org.usfirst.frc.team2412.robot.Robot.java", "BodyUseAPI": ["org.usfirst.frc.team2412.robot.RobotController.processAutonomous()"], "Fixed commit": "fc9426ac6d4e388de004bf23c17388faefa2dfd1", "Url": "https://api.github.com/repos/robototes/Steamworks2017", "Date": "2017-01-28T23:56:27Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { CSurfaceViewSoundSampling.drawFlag = java.lang.Boolean.valueOf(false); omrkhld.com.cs3218tut_omarkhalid.SoundSamplingActivity.surfaceView.drawThread.join(); soundSampler.audioRecord.stop(); } catch (java.lang.InterruptedException localInterruptedException) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4735/buggy-version/app.src.main.java.omrkhld.com.cs3218tut_omarkhalid.SoundSamplingActivity.java", "BodyUseAPI": ["soundSampler.audioRecord.stop()", "java.lang.Boolean.valueOf(boolean)", "omrkhld.com.cs3218tut_omarkhalid.SoundSamplingActivity.surfaceView.drawThread.join()"], "Fixed commit": "4636263a3af432629f03f118692e3ee657703dbd", "Url": "https://api.github.com/repos/omrkhld/CS3218Omar", "Date": "2016-02-08T20:12:50Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { model = aQute.bnd.build.Workspace.getProject(project.getLocation().toFile()); } catch (java.lang.IllegalArgumentException e) { return org.eclipse.core.runtime.Status.OK_STATUS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3928/buggy-version/bndtools.core.src.bndtools.internal.decorator.ExportedPackageDecoratorJob.java", "BodyUseAPI": ["project.getLocation().toFile()", "aQute.bnd.build.Workspace.getProject(project.getLocation().toFile())", "org.eclipse.core.resources.IProject.getLocation()"], "Fixed commit": "7df966663c44e9acf0fc8393febd432679358b23", "Url": "https://api.github.com/repos/bndtools/bndtools", "Date": "2012-11-19T09:16:03Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { courseDescription = ((java.lang.String) (map.get(\"CourseDescription\"))); } catch (java.lang.NullPointerException e) { courseDescription = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1163/buggy-version/src.main.java.studentcapture.datalayer.database.Course.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "2f17cc96b58c47033d0d53301b1809951280bd09", "Url": "https://api.github.com/repos/swedishsatish/student-capture", "Date": "2016-05-13T11:04:40Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { courseName = ((java.lang.String) (map.get(\"CourseName\"))); } catch (java.lang.NullPointerException e) { courseName = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1163/buggy-version/src.main.java.studentcapture.datalayer.database.Course.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "2f17cc96b58c47033d0d53301b1809951280bd09", "Url": "https://api.github.com/repos/swedishsatish/student-capture", "Date": "2016-05-13T11:04:40Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { inputAngle = new java.lang.String(java.net.URLEncoder.encode(inputAngle, HTTP.ISO_8859_1)); } catch (java.io.UnsupportedEncodingException e1) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4153/buggy-version/src.com.example.theinterface.Interfacet.java", "BodyUseAPI": ["java.net.URLEncoder.encode(java.lang.String,HTTP.ISO_8859_1)"], "Fixed commit": "28d4a42ccd3349fba09b2c72b19591bc40d52e4d", "Url": "https://api.github.com/repos/atnon/RobotOfAwesome", "Date": "2014-05-24T12:31:40Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { result.radius = java.lang.Double.parseDouble(inputRadius); } catch (java.lang.NumberFormatException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4153/buggy-version/src.com.example.theinterface.Interfacet.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "28d4a42ccd3349fba09b2c72b19591bc40d52e4d", "Url": "https://api.github.com/repos/atnon/RobotOfAwesome", "Date": "2014-05-24T12:31:40Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { unbindService(connection); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7707/buggy-version/src.com.pcg.sensordataservice.MainActivity.java", "BodyUseAPI": ["com.pcg.sensordataservice.MainActivity.unbindService(android.content.ServiceConnection)"], "Fixed commit": "48a1d24d76a047e3cf3ae0c9675dc143af4249b0", "Url": "https://api.github.com/repos/coolyangzc/SensorDataService", "Date": "2016-12-19T15:51:54Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { error.setMessage(response.errorBody().string()); error.setRequestUrl(response.raw().request().url().toString()); error.setStatusCode(response.code()); nResponse.setError(error); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6723/buggy-version/java.android.learn.Weather.app.src.main.java.mixedquantum.blogspot.com.weather.network.AbstractResponseListener.java", "BodyUseAPI": ["response.raw().request().url().toString()", "response.errorBody().string()", "retrofit2.Response<T>.raw()", "retrofit2.Response<T>.errorBody()", "mixedquantum.blogspot.com.weather.network.responses.ErrorVO.setRequestUrl(response.raw().request().url().toString())", "response.raw().request()", "mixedquantum.blogspot.com.weather.network.responses.ErrorVO.setMessage(response.errorBody().string())", "mixedquantum.blogspot.com.weather.network.responses.ErrorVO.setStatusCode(response.code())", "retrofit2.Response<T>.code()", "response.raw().request().url()", "mixedquantum.blogspot.com.weather.network.responses.NetworkVO.setError(mixedquantum.blogspot.com.weather.network.responses.ErrorVO)"], "Fixed commit": "66d43d81a925ca159bc98029c7af7b9617786dc9", "Url": "https://api.github.com/repos/0xKD/misc", "Date": "2016-04-28T19:10:27Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { setup(); } catch (lk.ac.mrt.cse.dbs.simpleexpensemanager.control.exception.ExpenseManagerException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/790/buggy-version/app.src.main.java.lk.ac.mrt.cse.dbs.simpleexpensemanager.control.PersistentExpenseManager.java", "BodyUseAPI": ["lk.ac.mrt.cse.dbs.simpleexpensemanager.control.PersistentExpenseManager.setup()"], "Fixed commit": "caf0208b23c3024a81f62c6e904564b070e45846", "Url": "https://api.github.com/repos/Rashindrie/SimpleExpenseManager", "Date": "2016-11-20T14:53:36Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { transit = t.transit(stateContext); } catch (java.lang.Exception e) { org.springframework.statemachine.support.DefaultStateMachineExecutor.log.warn(((\"Transition \" + t) + \" caused warning\"), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4358/buggy-version/spring-statemachine-core.src.main.java.org.springframework.statemachine.support.DefaultStateMachineExecutor.java", "BodyUseAPI": ["org.springframework.statemachine.transition.Transition<S, E>.transit(org.springframework.statemachine.StateContext<S, E>)"], "Fixed commit": "599ffc99e265bf7001ff9c8d51bcebef9fb14c64", "Url": "https://api.github.com/repos/spring-projects/spring-statemachine", "Date": "2016-01-12T01:34:14Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { classes.add(java.lang.Class.forName(className)); } catch (java.lang.NoClassDefFoundError ex) { com.trendrr.oss.Reflection.log.warn(\"Caught and swallowed: \", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8415/buggy-version/src.com.trendrr.oss.Reflection.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Class>.add(java.lang.Class<?>)", "java.lang.Class.forName(java.lang.String)"], "Fixed commit": "9c3464c083a2bb5d9cb9ed49b2d3ee2590df776c", "Url": "https://api.github.com/repos/trendrr/java-oss-lib", "Date": "2011-11-30T17:06:21Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { level = org.pmw.tinylog.Level.valueOf(prefs.get(org.openpnp.gui.LogPanel.PREF_LOG_LEVEL, org.openpnp.gui.LogPanel.PREF_LOG_LEVEL_DEF)); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8240/buggy-version/src.main.java.org.openpnp.gui.LogPanel.java", "BodyUseAPI": ["java.util.prefs.Preferences.get(java.lang.String,java.lang.String)", "org.pmw.tinylog.Level.valueOf(java.lang.String)"], "Fixed commit": "4b7fe0153457b148462a433a7a810074a6e154b2", "Url": "https://api.github.com/repos/openpnp/openpnp", "Date": "2016-10-30T16:17:26Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { loadSoftwareManager(appManager); } catch (java.lang.Exception e) { com.vmware.bdd.manager.SoftwareManagerCollector.logger.error((\"One of the appliation manager cannot be loaded: \" + (appManager.getName()))); com.vmware.bdd.manager.SoftwareManagerCollector.logger.error(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5643/buggy-version/server.cluster-mgmt.src.main.java.com.vmware.bdd.manager.SoftwareManagerCollector.java", "BodyUseAPI": ["com.vmware.bdd.manager.SoftwareManagerCollector.loadSoftwareManager(com.vmware.bdd.entity.AppManagerEntity)"], "Fixed commit": "ef22acc81d16204439cd330fbef9242de8c53766", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2014-08-29T06:31:24Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { validationHelper.startPage(ctx); } catch (org.hdiv.exception.SharedHdivException e) { if (hdivConfig.isDebugMode()) { ex = e; }else { throw e; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2754/buggy-version/hdiv-core.src.main.java.org.hdiv.filter.ValidatorFilter.java", "BodyUseAPI": ["org.hdiv.filter.IValidationHelper.startPage(org.hdiv.context.RequestContextHolder)"], "Fixed commit": "4c403edffe13c9e5f06b76e02968675f77e34346", "Url": "https://api.github.com/repos/hdiv/hdiv", "Date": "2017-06-06T06:59:11Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { nodes = parser.extractAllNodesThatMatch(orFilter); } catch (java.lang.Exception e) { parser.reset(); nodes = parser.extractAllNodesThatMatch(orFilter); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4201/buggy-version/paws.BaiduPaw.java", "BodyUseAPI": ["org.htmlparser.Parser.extractAllNodesThatMatch(org.htmlparser.filters.OrFilter)"], "Fixed commit": "23f54be44d27487d2b8cf87ec65d731adcb3e877", "Url": "https://api.github.com/repos/iarwen/WIKIPaw", "Date": "2014-07-15T03:26:15Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { return new developer.montero.michael.com.popularmovies.MovieLoader(this, progressBar, url); } catch (java.lang.Exception e) { showError(getString(R.string.errorMessage_unespexted)); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8230/buggy-version/app.src.main.java.developer.montero.michael.com.popularmovies.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b94a574fcf3af7d898f3f0a9ba90b83ff0cf6c51", "Url": "https://api.github.com/repos/michaelmontero/To-Wach", "Date": "2017-09-01T14:43:27Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { node = new ir.angellandros.kollektion.Node<E>(data, current.getNext(), current); current.setNext(node); } catch (java.lang.NullPointerException e) { node = new ir.angellandros.kollektion.Node<E>(data, null, null); head = node; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7365/buggy-version/src.main.java.ir.angellandros.kollektion.LinkedList.java", "BodyUseAPI": ["ir.angellandros.kollektion.Node<E>.setNext(ir.angellandros.kollektion.Node<E>)", "ir.angellandros.kollektion.Node<E>.getNext()"], "Fixed commit": "cb4ea2a72720bdd2f9da20d5dc75104d726898db", "Url": "https://api.github.com/repos/angellandros/kollektion", "Date": "2015-06-05T09:51:21Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return string.substring(0, ((string.length()) - 1)); } catch (java.lang.StringIndexOutOfBoundsException e) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6303/buggy-version/app.src.main.java.com.android.launcher3.allapps.PredictiveAppsProvider.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "0b36b98013c7ddf696ce7d31d28840b2bf71cca7", "Url": "https://api.github.com/repos/klinker24/Android-Blur-Launcher", "Date": "2015-10-08T15:00:20Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { cb.dataReceived(dataReceivedArray); } catch (java.lang.Throwable t) { java.lang.System.err.println(((((\"Error sending data to: \" + cb) + \" due to: \") + (t.getMessage())) + \"; Ignoring...\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4537/buggy-version/src.main.java.com.gvls2downloader.gvls2proxy.DataLoader.java", "BodyUseAPI": ["com.gvls2downloader.gvls2proxy.IDataLoaderCallback.dataReceived(byte[])"], "Fixed commit": "7e7b8dee9b532f0d8d183f3e399b5f905bd9fa4a", "Url": "https://api.github.com/repos/jsight/GVLS2Proxy", "Date": "2016-02-04T03:34:19Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(3000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6581/buggy-version/src.mju.watki.clientServerCommunication.ClientServer.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "628381feac58c647cf8d0dbc7e75b6dc1d92156f", "Url": "https://api.github.com/repos/mjuJwwa5Labs/MultiThreading", "Date": "2017-12-16T13:15:41Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { template.postForObject(properties.getWebHookUrl(), slackWebhook, java.lang.String.class); } catch (org.springframework.web.client.RestClientException e) { log.error(\"Failed to send the webhook message: {}\", slackWebhook, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6727/buggy-version/src.main.java.org.microservices.reporter.notify.SlackClient.java", "BodyUseAPI": ["org.microservices.reporter.notify.SlackProperties.getWebHookUrl()", "org.springframework.web.client.RestTemplate.postForObject(properties.getWebHookUrl(),org.microservices.reporter.notify.SlackWebhook,java.lang.Class)"], "Fixed commit": "695bfc1175d9a7a8d8d31651a4ce0e98a5f2de5a", "Url": "https://api.github.com/repos/ojacquemart/spring-boot-micro-services-status", "Date": "2015-11-19T09:55:55Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { return hbase.tableExists(org.apache.hadoop.hbase.TableName.valueOf(tableName)); } finally { hbase.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7020/buggy-version/common.src.main.java.org.apache.kylin.common.persistence.HBaseConnection.java", "BodyUseAPI": ["org.apache.hadoop.hbase.client.HBaseAdmin.tableExists(org.apache.hadoop.hbase.TableName.valueOf(tableName))", "org.apache.hadoop.hbase.TableName.valueOf(java.lang.String)"], "Fixed commit": "38de4efe7046ee52f446331dd9aef19bbd03be5e", "Url": "https://api.github.com/repos/KylinOLAP/Kylin", "Date": "2015-03-31T09:21:27Z"},
{"Line": "=>448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (((localVersion.contains(\"snapshot\")) || (localVersion.contains(\"alpha\"))) || (localVersion.contains(\"beta\"))) { for (int i = (lv.length) - 1; i >= 0; i--) { if ((java.lang.Integer.parseInt(lv[i])) > 0) { lv[i] = ((java.lang.Integer.parseInt(lv[i])) - 1) + \"\"; break; } } } if (((remoteVersion.contains(\"snapshot\")) || (remoteVersion.contains(\"alpha\"))) || (remoteVersion.contains(\"beta\"))) { for (int i = (rv.length) - 1; i >= 0; i--) { if ((java.lang.Integer.parseInt(rv[i])) > 0) { rv[i] = ((java.lang.Integer.parseInt(rv[i])) - 1) + \"\"; break; } } } } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4125/buggy-version/libs.net.gravitydevelopment.Updater.Bukkit_Updater.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "d478e8d8254efe575f1314f4f05f1c8cdfaef92b", "Url": "https://api.github.com/repos/GeorgH93/MarriageMaster", "Date": "2016-01-17T16:59:12Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { server.stop(); } catch (java.lang.Exception exp) { android.util.Log.e(io.github.billhsu.sensorserver.SensorServer.LOG_TAG, exp.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1124/buggy-version/app.src.main.java.io.github.billhsu.sensorserver.SensorServer.java", "BodyUseAPI": ["io.github.billhsu.sensorserver.SensorWebSocketServer.stop()"], "Fixed commit": "dfdcfb21792260bbdc3caa864a1240fb6bb81073", "Url": "https://api.github.com/repos/billhsu/SensorServer", "Date": "2014-10-12T09:11:29Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { contentExecutor.awaitTermination(MAX_AWAIT_HOURS_4_CONTENT_, java.util.concurrent.TimeUnit.HOURS); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6443/buggy-version/src.main.java.com.anakinfoxe.reviewmonitor.service.CrawlerServiceImpl.java", "BodyUseAPI": ["java.util.concurrent.ExecutorService.awaitTermination(int,java.util.concurrent.TimeUnit)"], "Fixed commit": "8c746ba0562ce118d74537f6ec74112104ad8c96", "Url": "https://api.github.com/repos/AnakinFoxe/ReviewMonitor", "Date": "2015-05-20T08:20:48Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { sFTPCopyList(); } catch (java.io.IOException ex) { java.util.logging.Logger.getLogger(com.nc.sftpcopy.MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8106/buggy-version/src.main.java.com.nc.sftpcopy.MainWindow.java", "BodyUseAPI": ["com.nc.sftpcopy.MainWindow.sFTPCopyList()"], "Fixed commit": "b686e96f91f1a12297b4a9d611b2250cfeb0555d", "Url": "https://api.github.com/repos/mryashenko/SFTPCopy", "Date": "2017-07-24T13:51:32Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { lastModTimeMillis = org.apache.http.impl.cookie.DateUtils.parseDate(lastMod).getTime(); } catch (android.net.ParseException e) { lastModTimeMillis = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7806/buggy-version/Dumbledroid.src.io.leocad.dumbledroid.data.DataController.java", "BodyUseAPI": ["org.apache.http.impl.cookie.DateUtils.parseDate(lastMod).getTime()", "org.apache.http.impl.cookie.DateUtils.parseDate(java.lang.String)"], "Fixed commit": "c8a1c3958a0666b8c5cf7734af4667e3e4ec1cf8", "Url": "https://api.github.com/repos/diegocarloslima/Dumbledroid", "Date": "2013-02-12T23:08:13Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { int quantity1 = java.lang.Integer.parseInt(quantityField.getText()); ee.ut.math.tvt.salessystem.ui.panels.PurchaseItemPanel.setSum(price, quantity1); } catch (java.lang.NumberFormatException ex) { WrongInput(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6228/buggy-version/POS.src.ee.ut.math.tvt.salessystem.ui.panels.PurchaseItemPanel.java", "BodyUseAPI": ["javax.swing.JTextField.getText()", "ee.ut.math.tvt.salessystem.ui.panels.PurchaseItemPanel.setSum(double,int)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "cc4cc573c334a8429754adb36819c554e04ffb7d", "Url": "https://api.github.com/repos/megaerki/atarkvara", "Date": "2014-10-27T20:49:09Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { currentRecord = recordReader.readNextRecord(); } catch (java.lang.Exception e) { io.github.benas.easybatch.core.impl.EasyBatchEngine.LOGGER.log(java.util.logging.Level.SEVERE, \"An exception occurred during reading next data source record\", e); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5002/buggy-version/easybatch-core.src.main.java.io.github.benas.easybatch.core.impl.EasyBatchEngine.java", "BodyUseAPI": ["io.github.benas.easybatch.core.impl.RecordReader.readNextRecord()"], "Fixed commit": "5f6ae70dcb3056a5dbf6c43b24aa1b3ff5ce2861", "Url": "https://api.github.com/repos/benas/easy-batch", "Date": "2014-01-27T21:44:17Z"},
{"Line": "=>536", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { blendListTbl.getCellEditor().stopCellEditing(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1773/buggy-version/src.teaeli.CreateNewBlendOrder1.java", "BodyUseAPI": ["javax.swing.table.TableCellEditor.stopCellEditing()", "javax.swing.JTable.getCellEditor()"], "Fixed commit": "ae40d3f847b7e7e6c0b87bff506b6edb760a9013", "Url": "https://api.github.com/repos/vihanga-liyanage/TeaELI", "Date": "2016-03-15T03:30:29Z"},
{"Line": "=>644", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { blendListTbl.getCellEditor().stopCellEditing(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1773/buggy-version/src.teaeli.CreateNewBlendOrder1.java", "BodyUseAPI": ["javax.swing.table.TableCellEditor.stopCellEditing()", "javax.swing.JTable.getCellEditor()"], "Fixed commit": "ae40d3f847b7e7e6c0b87bff506b6edb760a9013", "Url": "https://api.github.com/repos/vihanga-liyanage/TeaELI", "Date": "2016-03-15T03:30:29Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { t = noArgConstructor.newInstance(); setState(t, n); } finally { org.springframework.persistence.support.StateProvider.retrieveState(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4435/buggy-version/spring-data-commons-core.src.main.java.org.springframework.persistence.support.AbstractConstructorEntityInstantiator.java", "BodyUseAPI": ["java.lang.reflect.Constructor<T>.newInstance()", "org.springframework.persistence.support.AbstractConstructorEntityInstantiator<BACKING_INTERFACE, STATE>.setState(T,STATE)"], "Fixed commit": "c738effd39f007447eb1683d01bed1b60862d81e", "Url": "https://api.github.com/repos/spring-projects/spring-data-commons", "Date": "2011-03-01T12:43:32Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.bukkit.plugin.RegisteredServiceProvider<net.milkbowl.vault.economy.Economy> economyProvider = getServer().getServicesManager().getRegistration(net.milkbowl.vault.economy.Economy.class); if (economyProvider != null) { economy = economyProvider.getProvider(); } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8702/buggy-version/src.org.melonbrew.fee.Fee.java", "BodyUseAPI": ["getServer().getServicesManager().getRegistration(java.lang.Class)", "getServer().getServicesManager()", "org.bukkit.plugin.RegisteredServiceProvider<net.milkbowl.vault.economy.Economy>.getProvider()", "org.melonbrew.fee.Fee.getServer()"], "Fixed commit": "8c0b2819f83df944e916657ffbf7916ec8fdb7ec", "Url": "https://api.github.com/repos/niccholaspage/Fee", "Date": "2012-08-30T22:28:55Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { ds = com.bodejidi.DataBaseService.newInstance(); java.lang.String sql = \"INSERT INTO shihang (first_name, last_name ,date_created,last_updated) VALUES(?,?,?,?)\"; ds.prepare(sql).setString(firstName).setString(lastName).setDate(new java.util.Date()).setDate(new java.util.Date()).execute(); debug(sql); } finally { ds.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4162/buggy-version/src.main.java.com.bodejidi.MemberService.java", "BodyUseAPI": ["ds.prepare(sql).setString(firstName).setString(lastName).setDate(new java.util.Date()).setDate(new java.util.Date()).execute()", "ds.prepare(sql).setString(firstName).setString(java.lang.String)", "com.bodejidi.MemberService.debug(java.lang.String)", "com.bodejidi.DataBaseService.prepare(java.lang.String)", "ds.prepare(sql).setString(firstName).setString(lastName).setDate(new java.util.Date()).setDate(java.util.Date)", "com.bodejidi.DataBaseService.newInstance()", "ds.prepare(sql).setString(java.lang.String)", "ds.prepare(sql).setString(firstName).setString(lastName).setDate(java.util.Date)"], "Fixed commit": "b20743efbdab2bb91b354df29ee8c2bb6c934c92", "Url": "https://api.github.com/repos/shihang1228/laughing-octo-bear", "Date": "2014-04-12T07:16:00Z"},
{"Line": "=>494", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { refresh(Tab.getCurrentItem()); } catch (java.lang.Exception e) { java.lang.System.out.println(\"no podemos hacer el on resume refresh\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7903/buggy-version/src.com.example.nav.MainActivity.java", "BodyUseAPI": ["android.support.v4.view.ViewPager.getCurrentItem()", "com.example.nav.MainActivity.refresh(Tab.getCurrentItem())"], "Fixed commit": "b878dd16184c715ca91473926b66019e0657c3ae", "Url": "https://api.github.com/repos/mateosss/controlalumno", "Date": "2014-12-01T02:05:54Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mEventBus.registerSticky(this); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8995/buggy-version/app.src.main.java.com.talent.taskmanager.SingleTaskActivity.java", "BodyUseAPI": ["de.greenrobot.event.EventBus.registerSticky(com.talent.taskmanager.SingleTaskActivity)"], "Fixed commit": "514d2aebe294760e7a5cda5efa82a50d4e36cacc", "Url": "https://api.github.com/repos/adam518101/TaskManager", "Date": "2014-12-31T08:18:18Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mEventBus.unregister(this); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8995/buggy-version/app.src.main.java.com.talent.taskmanager.SingleTaskActivity.java", "BodyUseAPI": ["de.greenrobot.event.EventBus.unregister(com.talent.taskmanager.SingleTaskActivity)"], "Fixed commit": "514d2aebe294760e7a5cda5efa82a50d4e36cacc", "Url": "https://api.github.com/repos/adam518101/TaskManager", "Date": "2014-12-31T08:18:18Z"},
{"Line": "=>636", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { values[k] = Metrics[i].getDistributions().get(distributionX).getValues()[j]; } catch (java.lang.ArrayIndexOutOfBoundsException e) { values[k] = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3219/buggy-version/src.dna.series.Aggregation.java", "BodyUseAPI": ["Metrics[i].getDistributions()", "Metrics[i].getDistributions().get(distributionX).getValues()", "Metrics[i].getDistributions().get(java.lang.String)"], "Fixed commit": "4ee07d0ed897b2ef4368ad93c897733e60976570", "Url": "https://api.github.com/repos/Rwilmes/DNA", "Date": "2013-08-08T10:57:22Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { lock.lock(); java.lang.String memberId = this.getMemberIdFromTaskName(taskName, true); this.setServerLocationOfTask(taskName, memberId); this.scheduleTask(memberId, taskName); } finally { lock.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6696/buggy-version/components.ntask.org.wso2.carbon.ntask.core.src.main.java.org.wso2.carbon.ntask.core.impl.clustered.ClusteredTaskManager.java", "BodyUseAPI": ["org.wso2.carbon.ntask.core.impl.clustered.ClusteredTaskManager.setServerLocationOfTask(java.lang.String,java.lang.String)", "java.util.concurrent.locks.Lock.lock()", "org.wso2.carbon.ntask.core.impl.clustered.ClusteredTaskManager.getMemberIdFromTaskName(java.lang.String,boolean)", "org.wso2.carbon.ntask.core.impl.clustered.ClusteredTaskManager.scheduleTask(java.lang.String,java.lang.String)"], "Fixed commit": "68469058ff21b6b2ee15d7d577e8c5b7c90557d2", "Url": "https://api.github.com/repos/callkalpa/carbon-commons", "Date": "2015-08-05T04:30:20Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { getClient().putObject(bucketNameArray[0], objectPath, filePath.read(), null); } catch (java.lang.Exception e) { throw new java.io.IOException((((((\"put \" + objectPath) + \" to bucket \") + (bucketNameArray[0])) + \": \") + e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6870/buggy-version/src.main.java.hudson.plugins.s3.S3Profile.java", "BodyUseAPI": ["hudson.plugins.s3.S3Profile.getClient()", "com.amazonaws.services.s3.AmazonS3Client.putObject(java.lang.String,java.lang.String,filePath.read(),<nulltype>)", "hudson.FilePath.read()"], "Fixed commit": "c3fae688bbd1e75f50bc216388af006d8657f5ee", "Url": "https://api.github.com/repos/jenkinsci/s3-plugin", "Date": "2011-10-13T02:33:27Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { temporaryDirectory = master.getWorkingTemporaryDirectoryPath(); } catch (java.lang.IllegalStateException e) { final java.lang.String tempDir = master.getTemporaryDirectory(); java.lang.System.out.println((\"Could not write to temporary directory: \" + (tempDir.substring(0, tempDir.lastIndexOf(java.io.File.separator))))); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2879/buggy-version/core.jms-implementation.src.main.java.uk.ac.ebi.interpro.scan.jms.main.Run.java", "BodyUseAPI": ["uk.ac.ebi.interpro.scan.jms.main.AbstractMaster.getWorkingTemporaryDirectoryPath()"], "Fixed commit": "766216c542f7f1153088a4c5ae425d2d8313d32b", "Url": "https://api.github.com/repos/ebi-pf-team/interproscan", "Date": "2016-01-18T11:57:24Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.autorefactor.environment.Environment environment = getEnvironment(); new org.autorefactor.refactoring.PrepareApplyRefactoringsJob(org.autorefactor.ui.AutoRefactorHandler.getSelectedJavaElements(event), org.autorefactor.refactoring.rules.AllRefactoringRules.getConfiguredRefactoringRules(environment.getPreferences()), environment).schedule(); } catch (java.lang.Exception e) { final org.eclipse.swt.widgets.Shell shell = org.eclipse.ui.handlers.HandlerUtil.getActiveShell(event); java.io.StringWriter sw = new java.io.StringWriter(); java.io.PrintWriter pw = new java.io.PrintWriter(sw); e.printStackTrace(pw); org.autorefactor.ui.AutoRefactorHandler.showMessage(shell, (\"An error has occurred:\\n\\n\" + (sw.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/411/buggy-version/plugin.ui.src.main.java.org.autorefactor.ui.AutoRefactorHandler.java", "BodyUseAPI": ["org.autorefactor.refactoring.PrepareApplyRefactoringsJob.schedule()", "org.autorefactor.environment.Environment.getPreferences()", "org.autorefactor.refactoring.rules.AllRefactoringRules.getConfiguredRefactoringRules(environment.getPreferences())", "org.autorefactor.ui.AutoRefactorHandler.getEnvironment()", "org.autorefactor.ui.AutoRefactorHandler.getSelectedJavaElements(org.eclipse.core.commands.ExecutionEvent)"], "Fixed commit": "f84d104d8416dcb934e237e500dacb2fb305f785", "Url": "https://api.github.com/repos/JnRouvignac/AutoRefactor", "Date": "2017-06-14T17:53:24Z"},
{"Line": "=>988", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { date = mysqlDateTimeFormatter.parse((((((((dateOfRegistration) + \" \") + (curDate.getHours())) + \":\") + (curDate.getMinutes())) + \":\") + (curDate.getSeconds()))); o.setObsDatetime(date); } catch (java.text.ParseException e) { date = curDate; e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6353/buggy-version/omod.src.main.java.org.openmrs.module.kenyaemr.fragment.controller.patient.EditPatientFragmentController.java", "BodyUseAPI": ["java.text.SimpleDateFormat.parse(java.lang.String)", "java.util.Date.getMinutes()", "org.openmrs.Obs.setObsDatetime(java.util.Date)", "java.util.Date.getHours()", "java.util.Date.getSeconds()"], "Fixed commit": "9f46bb14bb5b5000e1da3b985cdf2e9e3b78f075", "Url": "https://api.github.com/repos/hispindia/his-tb-emr", "Date": "2017-02-27T06:00:22Z"},
{"Line": "=>1070", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { date = mysqlDateTimeFormatter.parse((((((((dateOfRegistration) + \" \") + (curDate.getHours())) + \":\") + (curDate.getMinutes())) + \":\") + (curDate.getSeconds()))); o.setObsDatetime(date); } catch (java.text.ParseException e) { date = curDate; e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6353/buggy-version/omod.src.main.java.org.openmrs.module.kenyaemr.fragment.controller.patient.EditPatientFragmentController.java", "BodyUseAPI": ["java.util.Date.getSeconds()", "java.util.Date.getHours()", "org.openmrs.Obs.setObsDatetime(java.util.Date)", "java.util.Date.getMinutes()", "java.text.SimpleDateFormat.parse(java.lang.String)"], "Fixed commit": "9f46bb14bb5b5000e1da3b985cdf2e9e3b78f075", "Url": "https://api.github.com/repos/hispindia/his-tb-emr", "Date": "2017-02-27T06:00:22Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { producer.send(msg); } catch (java.lang.IllegalStateException ise) { log().i(\"reconnect\", getName(), ise.getMessage()); producer = null; open(); producer.send(msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5350/buggy-version/mhu-lib-jms.src.main.java.de.mhus.lib.jms.ClientJms.java", "BodyUseAPI": ["javax.jms.MessageProducer.send(javax.jms.Message)"], "Fixed commit": "3c8f0ea1e1b41da1dafff31a3e02e44d3af85345", "Url": "https://api.github.com/repos/mhus/mhus-lib", "Date": "2016-06-20T11:33:29Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { producer.send(msg, deliveryMode, getPriority(), getTimeToLive()); } catch (java.lang.IllegalStateException ise) { log().i(\"reconnect\", getName(), ise.getMessage()); producer = null; open(); openAnswerQueue(); msg.setJMSReplyTo(answerQueue); producer.send(msg, deliveryMode, getPriority(), getTimeToLive()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5350/buggy-version/mhu-lib-jms.src.main.java.de.mhus.lib.jms.ClientJms.java", "BodyUseAPI": ["javax.jms.MessageProducer.send(javax.jms.Message,de.mhus.lib.jms.ClientJms,getPriority(),getTimeToLive())", "de.mhus.lib.jms.ClientJms.getPriority()", "de.mhus.lib.jms.ClientJms.getTimeToLive()"], "Fixed commit": "3c8f0ea1e1b41da1dafff31a3e02e44d3af85345", "Url": "https://api.github.com/repos/mhus/mhus-lib", "Date": "2016-06-20T11:33:29Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { producer.send(msg); } catch (java.lang.IllegalStateException ise) { log().i(\"reconnect\", getName(), ise.getMessage()); producer = null; open(); openAnswerQueue(); msg.setJMSReplyTo(answerQueue); producer.send(msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5350/buggy-version/mhu-lib-jms.src.main.java.de.mhus.lib.jms.ClientJms.java", "BodyUseAPI": ["javax.jms.MessageProducer.send(javax.jms.Message)"], "Fixed commit": "3c8f0ea1e1b41da1dafff31a3e02e44d3af85345", "Url": "https://api.github.com/repos/mhus/mhus-lib", "Date": "2016-06-20T11:33:29Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return getRepository().getContentStream(getCallContext(), objectId, offset, length); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1230/buggy-version/cmis.src.main.java.ru.doccloud.cmis.server.service.FileBridgeCmisService.java", "BodyUseAPI": ["ru.doccloud.cmis.server.service.FileBridgeCmisService.getRepository()", "ru.doccloud.cmis.server.service.FileBridgeCmisService.getCallContext()", "ru.doccloud.cmis.server.repository.FileBridgeRepository.getContentStream(org.apache.chemistry.opencmis.commons.server.CallContext,java.lang.String,java.math.BigInteger,java.math.BigInteger)"], "Fixed commit": "53d82041697af51319f7f542124d9d206512150f", "Url": "https://api.github.com/repos/kadnikov/jooq-doc", "Date": "2017-03-18T15:37:15Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return getRepository().createDocument(getCallContext(), properties, folderId, contentStream, versioningState); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1230/buggy-version/cmis.src.main.java.ru.doccloud.cmis.server.service.FileBridgeCmisService.java", "BodyUseAPI": ["ru.doccloud.cmis.server.service.FileBridgeCmisService.getRepository()", "ru.doccloud.cmis.server.service.FileBridgeCmisService.getCallContext()", "ru.doccloud.cmis.server.repository.FileBridgeRepository.createDocument(org.apache.chemistry.opencmis.commons.server.CallContext,org.apache.chemistry.opencmis.commons.data.Properties,java.lang.String,org.apache.chemistry.opencmis.commons.data.ContentStream,org.apache.chemistry.opencmis.commons.enums.VersioningState)"], "Fixed commit": "53d82041697af51319f7f542124d9d206512150f", "Url": "https://api.github.com/repos/kadnikov/jooq-doc", "Date": "2017-03-18T15:37:15Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { object = getRepository().create(getCallContext(), properties, folderId, contentStream, versioningState, this); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1230/buggy-version/cmis.src.main.java.ru.doccloud.cmis.server.service.FileBridgeCmisService.java", "BodyUseAPI": ["ru.doccloud.cmis.server.service.FileBridgeCmisService.getRepository()", "ru.doccloud.cmis.server.service.FileBridgeCmisService.getCallContext()", "ru.doccloud.cmis.server.repository.FileBridgeRepository.create(org.apache.chemistry.opencmis.commons.server.CallContext,org.apache.chemistry.opencmis.commons.data.Properties,java.lang.String,org.apache.chemistry.opencmis.commons.data.ContentStream,org.apache.chemistry.opencmis.commons.enums.VersioningState,ru.doccloud.cmis.server.service.FileBridgeCmisService)"], "Fixed commit": "53d82041697af51319f7f542124d9d206512150f", "Url": "https://api.github.com/repos/kadnikov/jooq-doc", "Date": "2017-03-18T15:37:15Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Class.forName(org.jboss.netty.util.internal.ByteBufferUtil.class.getName()); } catch (java.lang.ClassNotFoundException cnfe) { if (com.liferay.portal.search.elasticsearch.internal.connection.EmbeddedElasticsearchConnection._log.isWarnEnabled()) { com.liferay.portal.search.elasticsearch.internal.connection.EmbeddedElasticsearchConnection._log.warn((((\"Unable to preload \" + (org.jboss.netty.util.internal.ByteBufferUtil.class)) + \" to prevent netty shutdown concurrent class loading \") + \"interruption issue.\"), cnfe); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3668/buggy-version/modules.apps.foundation.portal-search.portal-search-elasticsearch.src.main.java.com.liferay.portal.search.elasticsearch.internal.connection.EmbeddedElasticsearchConnection.java", "BodyUseAPI": ["java.lang.Class.getName()", "java.lang.Class.forName(java.lang.String)"], "Fixed commit": "e90314877e1453e2833594c5de6fa9803816294d", "Url": "https://api.github.com/repos/brianwulbern/liferay-portal", "Date": "2016-11-04T07:01:15Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { size = com.yydcdut.note.utils.LocalStorageUtils.getInstance(this).getPictureSize(mCameraId); } catch (org.json.JSONException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3517/buggy-version/app.src.main.java.com.yydcdut.note.camera.controller.AdjustCamera.java", "BodyUseAPI": ["com.yydcdut.note.utils.LocalStorageUtils.getInstance(this).getPictureSize(java.lang.String)", "com.yydcdut.note.utils.LocalStorageUtils.getInstance(com.yydcdut.note.camera.controller.AdjustCamera)"], "Fixed commit": "bbd1bb91a391dedf2517c8b2b954c45fcded4fd4", "Url": "https://api.github.com/repos/yydcdut/PhotoNoter", "Date": "2015-12-28T07:41:44Z"},
{"Line": "=>572", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { iis.close(); } catch (java.io.IOException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7796/buggy-version/src.main.java.com.sun.media.imageioimpl.plugins.jpeg2000.J2KImageReader.java", "BodyUseAPI": ["javax.imageio.stream.ImageInputStream.close()"], "Fixed commit": "96b44e1505605e03bb92dee7b9390a8d1cc65103", "Url": "https://api.github.com/repos/jmabrey/jai-imageio-core", "Date": "2012-08-16T12:56:25Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { img.setImageDrawable(resource); } catch (java.lang.Exception e) { e.printStackTrace(); img.setImageResource(com.xinyi.czbasedevtool.base.manager.ui_about.GlideMaster.errorHolderRes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6327/buggy-version/CZBaseDevTool.src.main.java.com.xinyi.czbasedevtool.base.manager.ui_about.GlideMaster.java", "BodyUseAPI": ["android.widget.ImageView.setImageDrawable(com.bumptech.glide.load.resource.drawable.GlideDrawable)"], "Fixed commit": "c3d969971ddcd0ac50f772709e7ce3f01e205d04", "Url": "https://api.github.com/repos/XinYiWorld/CZBaseDevLibary", "Date": "2017-05-08T05:34:32Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { img.setImageDrawable(resource); } catch (java.lang.Exception e) { e.printStackTrace(); img.setImageResource(com.xinyi.czbasedevtool.base.manager.ui_about.GlideMaster.errorHolderRes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6327/buggy-version/CZBaseDevTool.src.main.java.com.xinyi.czbasedevtool.base.manager.ui_about.GlideMaster.java", "BodyUseAPI": ["android.widget.ImageView.setImageDrawable(com.bumptech.glide.load.resource.drawable.GlideDrawable)"], "Fixed commit": "c3d969971ddcd0ac50f772709e7ce3f01e205d04", "Url": "https://api.github.com/repos/XinYiWorld/CZBaseDevLibary", "Date": "2017-05-08T05:34:32Z"},
{"Line": "=>774", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { targetPathExistsPriorToOp = contentExists(site, toPath); } catch (java.lang.Exception contentExistsErr) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7558/buggy-version/src.main.java.org.craftercms.studio.impl.v1.service.content.ContentServiceImpl.java", "BodyUseAPI": ["org.craftercms.studio.impl.v1.service.content.ContentServiceImpl.contentExists(java.lang.String,java.lang.String)"], "Fixed commit": "cac7a28f97907dfede08c42e5b6ddb2ad2c43b56", "Url": "https://api.github.com/repos/vestrada/studio", "Date": "2017-01-22T02:51:14Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((!(money.isEmpty())) && ((java.lang.Double.parseDouble(money)) > (com.xptschool.parent.ui.wallet.pocket.BalanceUtil.getParentBalance()))) { edt_money.setText(money.substring(0, ((money.length()) - 1))); } } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4650/buggy-version/parent.src.main.java.com.xptschool.parent.ui.wallet.card.CardRechargeActivity.java", "BodyUseAPI": ["com.xptschool.parent.ui.wallet.pocket.BalanceUtil.getParentBalance()", "java.lang.String.substring(int,int)", "android.widget.EditText.setText(java.lang.String)", "java.lang.String.length()", "java.lang.Double.parseDouble(java.lang.String)", "java.lang.String.isEmpty()"], "Fixed commit": "1f69a97c9e9abf601a372fdcf24265c754a7d27a", "Url": "https://api.github.com/repos/kongdexing/XPTSchool", "Date": "2017-09-06T07:30:58Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((showAds) && (com.wandoujia.ads.sdk.Ads.isLoaded(Fetcher.AdFormat.appwall, com.cc.worldcupremind.common.AdsHelper.TAG_LIST))) { com.wandoujia.ads.sdk.Ads.showAppWall(context, com.cc.worldcupremind.common.AdsHelper.TAG_LIST); } } catch (java.lang.Exception ex) { com.cc.worldcupremind.common.LogHelper.e(com.cc.worldcupremind.common.AdsHelper.TAG, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3785/buggy-version/src.com.cc.worldcupremind.common.AdsHelper.java", "BodyUseAPI": ["com.wandoujia.ads.sdk.Ads.showAppWall(android.content.Context,java.lang.String)", "com.wandoujia.ads.sdk.Ads.isLoaded(Fetcher.AdFormat.appwall,java.lang.String)"], "Fixed commit": "251044164d56d94e6a1a1378363c7b105ffb04ec", "Url": "https://api.github.com/repos/cclover/WorldCupRemind", "Date": "2014-06-23T07:19:50Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.cc.worldcupremind.common.LogHelper.d(com.cc.worldcupremind.common.AdsHelper.TAG, \"showAdsInScreen\"); if ((showAds) && (com.wandoujia.ads.sdk.Ads.isLoaded(Fetcher.AdFormat.interstitial, com.cc.worldcupremind.common.AdsHelper.TAG_INTERSTITIAL_FULLSCREEN))) { com.wandoujia.ads.sdk.Ads.showAppWidget(context, null, com.cc.worldcupremind.common.AdsHelper.TAG_INTERSTITIAL_FULLSCREEN, Ads.ShowMode.FULL_SCREEN); } } catch (java.lang.Exception ex) { com.cc.worldcupremind.common.LogHelper.e(com.cc.worldcupremind.common.AdsHelper.TAG, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3785/buggy-version/src.com.cc.worldcupremind.common.AdsHelper.java", "BodyUseAPI": ["com.wandoujia.ads.sdk.Ads.showAppWidget(android.content.Context,<nulltype>,java.lang.String,Ads.ShowMode.FULL_SCREEN)", "com.wandoujia.ads.sdk.Ads.isLoaded(Fetcher.AdFormat.interstitial,java.lang.String)", "com.cc.worldcupremind.common.LogHelper.d(java.lang.String,java.lang.String)"], "Fixed commit": "251044164d56d94e6a1a1378363c7b105ffb04ec", "Url": "https://api.github.com/repos/cclover/WorldCupRemind", "Date": "2014-06-23T07:19:50Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { rateComparator = provideRateComparator(); } catch (java.lang.IllegalArgumentException e) { com.jtorrent.peer.PeerManager._logger.trace(\"Could not find rate comparator this time\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8957/buggy-version/src.main.java.com.jtorrent.peer.PeerManager.java", "BodyUseAPI": ["com.jtorrent.peer.PeerManager.ChokerTask.provideRateComparator()"], "Fixed commit": "fb3c411007aaac3c3f3e232075a3ed62be0b8c4c", "Url": "https://api.github.com/repos/AlexShtarbev/jtorrent", "Date": "2017-05-14T17:29:35Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { Cryptography.decrypt(inputFile); } catch (java.io.IOException e) { e.printStackTrace(); } catch (java.security.NoSuchAlgorithmException e) { e.printStackTrace(); } catch (javax.crypto.NoSuchPaddingException e) { e.printStackTrace(); } catch (java.security.InvalidKeyException e) { e.printStackTrace(); } catch (javax.crypto.IllegalBlockSizeException e) { e.printStackTrace(); } catch (javax.crypto.BadPaddingException e) { e.printStackTrace(); } catch (java.security.InvalidAlgorithmParameterException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8751/buggy-version/Cryptography.java", "BodyUseAPI": ["Cryptography.decrypt(java.lang.String)"], "Fixed commit": "6e7940a0f4365214c0493072ad41e61c08383cce", "Url": "https://api.github.com/repos/madelinelee99/CryptoFinal", "Date": "2016-05-16T19:34:23Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { main(); } catch (final java.lang.Exception e) { de.hhu.bsinfo.dxram.app.AbstractApplication.LOGGER.info(\"Exception in application\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2285/buggy-version/src.de.hhu.bsinfo.dxram.app.AbstractApplication.java", "BodyUseAPI": ["de.hhu.bsinfo.dxram.app.AbstractApplication.main()"], "Fixed commit": "11f21fc242f0a7079b6c2ede49158b7e3a5300ce", "Url": "https://api.github.com/repos/hhu-bsinfo/dxram", "Date": "2017-05-26T06:36:11Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { javax.persistence.Query query = entityManager.createNamedQuery(\"getLastServerStatusBoolean\"); return ((boolean) (query.getSingleResult())); } catch (org.springframework.dao.EmptyResultDataAccessException e) { com.stationmillenium.coverart.repositories.ServerStatusRepository.LOGGER.warn(\"No entity found\", e); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2163/buggy-version/src.main.java.com.stationmillenium.coverart.repositories.ServerStatusRepository.java", "BodyUseAPI": ["javax.persistence.EntityManager.createNamedQuery(java.lang.String)", "javax.persistence.Query.getSingleResult()"], "Fixed commit": "457125dfc4db087b583b290df90ddb24c46a4b89", "Url": "https://api.github.com/repos/vdavy/cover-art", "Date": "2012-09-05T19:00:15Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { poolImpl.init(); this.poolImplList.add(poolImpl); } catch (java.lang.Exception e) { log.error(((whoDTO.getOwnerId()) + \" Can not connect to the server\")); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1108/buggy-version/service.src.main.java.com.wso2telco.dep.tpservice.pool.alltimefirst.OwnerController.java", "BodyUseAPI": ["com.wso2telco.dep.tpservice.pool.TokenControllable.init()", "java.util.List<com.wso2telco.dep.tpservice.pool.TokenControllable>.add(com.wso2telco.dep.tpservice.pool.TokenControllable)"], "Fixed commit": "9f396c0f9d9e72230b19f4293161116d1031ddaa", "Url": "https://api.github.com/repos/WSO2Telco/token-pool-service", "Date": "2017-03-01T17:45:59Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { subCat = args[0]; } catch (java.lang.Exception e) { p.sendMessage(((org.bukkit.ChatColor.GRAY) + \"=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\")); p.sendMessage(((org.bukkit.ChatColor.YELLOW) + \"Agri+ Commands:\")); p.sendMessage(((org.bukkit.ChatColor.AQUA) + \"/aplus reload -- reload plugin\")); p.sendMessage(((org.bukkit.ChatColor.GRAY) + \"=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\")); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8509/buggy-version/src.mas.agri.commands.Handler_agri.java", "BodyUseAPI": [], "Fixed commit": "c0b6cd63d050e5dca76c1110a511f2b77919514f", "Url": "https://api.github.com/repos/Masterlufit/Agriculture-Plus", "Date": "2017-03-02T00:14:19Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { resource = com.evolveum.midpoint.web.util.WebModelUtils.loadObject(com.evolveum.midpoint.xml.ns._public.common.common_3.ResourceType.class, resource.getOid(), result, getPageBase()); getPageBase().getPrismContext().adopt(resource); model.getObject().asObjectable().setSchema(resource.asObjectable().getSchema()); } catch (com.evolveum.midpoint.util.exception.SchemaException e) { com.evolveum.midpoint.web.component.wizard.resource.SchemaStep.LOGGER.error(getString(\"SchemaStep.message.reload.fail\", com.evolveum.midpoint.web.util.WebMiscUtil.getName(resource))); result.recordFatalError(getString(\"SchemaStep.message.reload.fail\", com.evolveum.midpoint.web.util.WebMiscUtil.getName(resource))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1311/buggy-version/gui.admin-gui.src.main.java.com.evolveum.midpoint.web.component.wizard.resource.SchemaStep.java", "BodyUseAPI": ["com.evolveum.midpoint.prism.PrismObject<com.evolveum.midpoint.xml.ns._public.common.common_3.ResourceType>.getOid()", "getPageBase().getPrismContext().adopt(com.evolveum.midpoint.prism.PrismObject<com.evolveum.midpoint.xml.ns._public.common.common_3.ResourceType>)", "model.getObject().asObjectable().setSchema(resource.asObjectable().getSchema())", "com.evolveum.midpoint.prism.PrismObject<com.evolveum.midpoint.xml.ns._public.common.common_3.ResourceType>.asObjectable()", "resource.asObjectable().getSchema()", "com.evolveum.midpoint.web.component.wizard.resource.SchemaStep.getPageBase()", "getPageBase().getPrismContext()", "com.evolveum.midpoint.web.util.WebModelUtils.loadObject(java.lang.Class,resource.getOid(),com.evolveum.midpoint.schema.result.OperationResult,getPageBase())", "model.getObject().asObjectable()", "com.evolveum.midpoint.web.component.wizard.resource.SchemaStep.getPageBase()", "org.apache.wicket.model.IModel<com.evolveum.midpoint.prism.PrismObject<com.evolveum.midpoint.xml.ns._public.common.common_3.ResourceType>>.getObject()"], "Fixed commit": "b5bb35882ed0782da1dd76ea163d3d44732e8014", "Url": "https://api.github.com/repos/Evolveum/midpoint", "Date": "2015-01-31T16:01:50Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (((mediaPlayer) != null) && (mediaPlayer.isPlaying())) mediaPlayer.stop(); } catch (java.lang.IllegalStateException e) { android.util.Log.w(com.stationmillenium.android.services.MediaPlayerService.TAG, \"Error while stopping media player\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7594/buggy-version/station-millenium.src.main.java.com.stationmillenium.android.services.MediaPlayerService.java", "BodyUseAPI": ["android.media.MediaPlayer.isPlaying()", "android.media.MediaPlayer.stop()"], "Fixed commit": "1e91ebf67d8d8bc1b4295e59727e65436bbba3ed", "Url": "https://api.github.com/repos/vdavy/android", "Date": "2015-01-03T10:13:25Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { LocationServices.FusedLocationApi.removeLocationUpdates(client, this); } catch (java.lang.Exception e) { } finally { client.disconnect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3721/buggy-version/library.src.main.java.io.nlopez.smartlocation.location.providers.LocationGooglePlayServicesProvider.java", "BodyUseAPI": ["LocationServices.FusedLocationApi.removeLocationUpdates(com.google.android.gms.common.api.GoogleApiClient,io.nlopez.smartlocation.location.providers.LocationGooglePlayServicesProvider)"], "Fixed commit": "294d08b99e338f16f9aa13ec1c65c9558c7cadfe", "Url": "https://api.github.com/repos/skonb/smart-location-lib", "Date": "2016-04-15T03:46:24Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { if (net.grinder.util.NetworkUtils.tryConnection(byConnecting, port, s)) { return s.getLocalAddress(); } } finally { org.apache.commons.io.IOUtils.closeQuietly(s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7288/buggy-version/ngrinder-core.src.main.java.net.grinder.util.NetworkUtils.java", "BodyUseAPI": ["java.net.Socket.getLocalAddress()", "net.grinder.util.NetworkUtils.tryConnection(java.lang.String,int,java.net.Socket)"], "Fixed commit": "5b7ef618e87eaa59a693c9e237dd8eee665a5bbb", "Url": "https://api.github.com/repos/nhnopensource/ngrinder", "Date": "2014-01-07T07:08:13Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { filter.setMode(pro.lukasgorny.enums.PUBGMode.valueOf(params[1].trim())); } catch (java.lang.IllegalArgumentException e) { interaction.stopProcessing(); return interaction.getRandomTemplate(\"badmode\").getTemplate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3653/buggy-version/src.org.frostbite.karren.interactions.Tags.BattlegroundsNew.java", "BodyUseAPI": ["pro.lukasgorny.enums.PUBGMode.valueOf(java.lang.String)", "pro.lukasgorny.dto.FilterCriteria.setMode(pro.lukasgorny.enums.PUBGMode.valueOf(params[1].trim()))", "java.lang.String.trim()"], "Fixed commit": "ba16ec719bb63622b5cde80971889227c7b1a16d", "Url": "https://api.github.com/repos/ripxfrostbite/karren-sama", "Date": "2017-09-22T05:10:07Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { getContentResolver().insert(budgetSplitContract.tags.CONTENT_URI, newTag); } catch (android.database.sqlite.SQLiteException e) { android.widget.Toast.makeText(getApplicationContext(), getString(R.string.warning_tag_exists), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3097/buggy-version/app.src.main.java.ch.ethz.itet.pps.budgetSplit.Tags.java", "BodyUseAPI": ["ch.ethz.itet.pps.budgetSplit.Tags.3.getContentResolver()", "getContentResolver().insert(budgetSplitContract.tags.CONTENT_URI,android.content.ContentValues)"], "Fixed commit": "5997f5225552bac4c3998cd9efa3ac21cbdc79d5", "Url": "https://api.github.com/repos/meggiman/budgetSplit", "Date": "2014-12-06T19:16:46Z"},
{"Line": "=>493", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.dotmarketing.db.HibernateUtil.commitTransaction(); } catch (java.lang.Exception e) { session.setAttribute(\"duplicatedErrorMessage\", \"Content already exists in the same container on the page\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5657/buggy-version/src.com.dotmarketing.portlets.director.action.DirectorAction.java", "BodyUseAPI": ["com.dotmarketing.db.HibernateUtil.commitTransaction()"], "Fixed commit": "7a7bc3e04466c0bef6e56ce510da3209b885e79b", "Url": "https://api.github.com/repos/dotCMS/dotCMS", "Date": "2013-12-28T10:00:01Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { queryResultList.add(qr); } finally { lock.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8749/buggy-version/rocketmq-client.src.main.java.com.alibaba.rocketmq.client.impl.MQAdminImpl.java", "BodyUseAPI": ["java.util.List<com.alibaba.rocketmq.client.QueryResult>.add(com.alibaba.rocketmq.client.QueryResult)"], "Fixed commit": "c9b901dc23cabb7002fb09d0e357a05a69d01b03", "Url": "https://api.github.com/repos/lizhanhui/Alibaba_RocketMQ", "Date": "2016-07-30T14:34:17Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (java.nio.charset.Charset.isSupported(enc)) return normEncoding(enc); } catch (final java.lang.IllegalArgumentException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/976/buggy-version/src.main.java.org.basex.query.func.StandardFunc.java", "BodyUseAPI": ["java.nio.charset.Charset.isSupported(java.lang.String)", "org.basex.query.func.StandardFunc.normEncoding(java.lang.String)"], "Fixed commit": "27fcacc966cfa05784fe3939eea015fbbb8a71e3", "Url": "https://api.github.com/repos/BaseXdb/basex", "Date": "2012-10-30T12:05:53Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { net.pl3x.bukkit.chatapi.ComponentSender.sendMessage(player, component); } catch (java.lang.Exception e) { player.sendMessage(component.toPlainText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/63/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.ServerHandle.CraftBukkitHandle.java", "BodyUseAPI": ["net.pl3x.bukkit.chatapi.ComponentSender.sendMessage(org.bukkit.entity.Player,net.md_5.bungee.api.chat.BaseComponent)"], "Fixed commit": "52b3c6c02cc24b271ac6e9bc9106de717c674b00", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2017-07-23T20:20:12Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { net.pl3x.bukkit.chatapi.ComponentSender.sendMessage(player, components); } catch (java.lang.Exception e) { for (net.md_5.bungee.api.chat.BaseComponent comp : components) { sendMessage(player, comp); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/63/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.ServerHandle.CraftBukkitHandle.java", "BodyUseAPI": ["net.pl3x.bukkit.chatapi.ComponentSender.sendMessage(org.bukkit.entity.Player,net.md_5.bungee.api.chat.BaseComponent[])"], "Fixed commit": "52b3c6c02cc24b271ac6e9bc9106de717c674b00", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2017-07-23T20:20:12Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { int v = java.lang.Double.valueOf(java.lang.Double.parseDouble(version)).intValue(); if (v > (com.sogou.map.logreplay.util.ProductUtil.MAJOR_UNIT)) { return v; } } catch (java.lang.NumberFormatException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1316/buggy-version/logreplay.src.main.java.com.sogou.map.logreplay.util.ProductUtil.java", "BodyUseAPI": ["java.lang.Double.intValue()", "java.lang.Double.valueOf(double)", "java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "9a2b07ccb49d159dedc2ce47b17eea180f4b69e1", "Url": "https://api.github.com/repos/yangziwen/logreplay", "Date": "2015-04-24T11:07:27Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { parseEncodedXML(value); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2389/buggy-version/src.main.java.eidassaml.starterkit.person_attributes.natural_persons_attribute.CurrentAddressAttribute.java", "BodyUseAPI": ["eidassaml.starterkit.person_attributes.natural_persons_attribute.CurrentAddressAttribute.parseEncodedXML(java.lang.String)"], "Fixed commit": "ebca287a54f7b29c5d935cdbd604ce3a0b8a05a5", "Url": "https://api.github.com/repos/Governikus/eIDAS-Node-SDK", "Date": "2016-03-02T08:31:24Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.System.out.println((\"Expression simplified to: \" + (eval.simplify(mc.util.expr.Expression.constructExpression(expr))))); } catch (java.lang.Exception ex) { java.lang.System.out.println(org.fusesource.jansi.Ansi.ansi().render(\"@|red There was an error parsing that expression. |@\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2869/buggy-version/modelchecker.src.main.java.mc.commands.SimplifyCommand.java", "BodyUseAPI": ["java.io.PrintStream.println((\"Expression simplified to: \" + (eval.simplify(mc.util.expr.Expression.constructExpression(expr)))))", "mc.util.expr.Expression.constructExpression(java.lang.String)", "mc.solver.JavaSMTConverter.simplify(mc.util.expr.Expression.constructExpression(expr))"], "Fixed commit": "585b9a035ac63722f850e4e0051e3f2dfdd43776", "Url": "https://api.github.com/repos/DavidSheridan/Model-Checker", "Date": "2017-01-21T15:34:46Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.System.out.println((\"Expression evaluated to: \" + (eval.evaluateExpression(mc.util.expr.Expression.constructExpression(expr), java.util.Collections.emptyMap())))); } catch (java.lang.Exception ex) { java.lang.System.out.println(org.fusesource.jansi.Ansi.ansi().render(\"@|red There was an error parsing that expression. |@\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2869/buggy-version/modelchecker.src.main.java.mc.commands.EvalCommand.java", "BodyUseAPI": ["mc.util.expr.ExpressionEvaluator.evaluateExpression(mc.util.expr.Expression.constructExpression(expr),java.util.Map<java.lang.Object, java.lang.Object>)", "java.util.Collections.emptyMap()", "java.io.PrintStream.println((\"Expression evaluated to: \" + (eval.evaluateExpression(mc.util.expr.Expression.constructExpression(expr), java.util.Collections.emptyMap()))))", "mc.util.expr.Expression.constructExpression(java.lang.String)"], "Fixed commit": "585b9a035ac63722f850e4e0051e3f2dfdd43776", "Url": "https://api.github.com/repos/DavidSheridan/Model-Checker", "Date": "2017-01-21T15:34:46Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return super.resolveEntity(publicId, systemId); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4012/buggy-version/src.org.fife.ui.rsyntaxtextarea.parser.XmlParser.java", "BodyUseAPI": ["org.xml.sax.helpers.DefaultHandler.resolveEntity(java.lang.String,java.lang.String)"], "Fixed commit": "81c5d7f8f650897bea3e34971bcacc3a53f4f035", "Url": "https://api.github.com/repos/amb8805/calendar", "Date": "2013-05-07T19:02:38Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { channel.force(false); } catch (java.io.IOException e) { factory.onIOError(new org.hornetq.api.core.HornetQIOErrorException(e.getMessage(), e), e.getMessage(), this); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3861/buggy-version/hornetq-journal.src.main.java.org.hornetq.core.journal.impl.NIOSequentialFile.java", "BodyUseAPI": ["java.nio.channels.FileChannel.force(boolean)"], "Fixed commit": "d98cce79c922f566d5bf3e1d163acf1d9b5ed53a", "Url": "https://api.github.com/repos/clebertsuconic/hornetq", "Date": "2013-04-11T20:41:12Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { choreographer = android.view.Choreographer.getInstance(); } catch (java.lang.NullPointerException ex) { android.util.Log.e(com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper.VSyncSampler.TAG, (\"Choreographer instance created failed \" + (ex.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5549/buggy-version/library.core.src.main.java.com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper.java", "BodyUseAPI": ["android.view.Choreographer.getInstance()"], "Fixed commit": "b11f7fa9d87f16eb8abff6f1e53b496d0fa2dc87", "Url": "https://api.github.com/repos/michalliu/Google_ExoPlayer", "Date": "2017-07-12T11:11:30Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { object.put(donnu.zolotarev.SpaceShip.Levels.LevelController.KEY_ITEMS, gson.toJson(levels)); object.put(donnu.zolotarev.SpaceShip.Levels.LevelController.KEY_EXCESS_COUNTER, excessCounter); } catch (org.json.JSONException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7438/buggy-version/src.donnu.zolotarev.SpaceShip.Levels.LevelController.java", "BodyUseAPI": ["org.json.JSONObject.put(java.lang.String,gson.toJson(levels))", "com.google.gson.Gson.toJson(java.util.HashMap<java.lang.Integer, donnu.zolotarev.SpaceShip.Levels.LevelInfo>)", "org.json.JSONObject.put(java.lang.String,int)"], "Fixed commit": "2bdbff72fb85f55e8420ea7ca8c7a91e4a810ce5", "Url": "https://api.github.com/repos/MrVilkaman/SpaceshipsBattle", "Date": "2014-11-04T09:20:14Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return context.getContentResolver().query(MediaStore.Audio.Artists.Albums.getContentUri(\"external\", artistId), new java.lang.String[]{ android.provider.BaseColumns._ID, android.provider.MediaStore.Audio.AlbumColumns.ALBUM, android.provider.MediaStore.Audio.AlbumColumns.ARTIST, android.provider.MediaStore.Audio.AlbumColumns.NUMBER_OF_SONGS, android.provider.MediaStore.Audio.AlbumColumns.FIRST_YEAR }, null, null, com.andrew.apollo.utils.PreferenceUtils.getInstance(context).getArtistAlbumSortOrder()); } catch (java.lang.Throwable e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7510/buggy-version/apollo.src.com.andrew.apollo.loaders.ArtistAlbumLoader.java", "BodyUseAPI": ["com.andrew.apollo.utils.PreferenceUtils.getInstance(android.content.Context)", "com.andrew.apollo.utils.PreferenceUtils.getInstance(context).getArtistAlbumSortOrder()", "android.content.Context.getContentResolver()", "context.getContentResolver().query(MediaStore.Audio.Artists.Albums.getContentUri(\"external\", artistId),java.lang.String[],<nulltype>,<nulltype>,com.andrew.apollo.utils.PreferenceUtils.getInstance(context).getArtistAlbumSortOrder())", "MediaStore.Audio.Artists.Albums.getContentUri(java.lang.String,java.lang.Long)"], "Fixed commit": "863da7712ffc70835b2323d35a51d51b148abc7c", "Url": "https://api.github.com/repos/gubatron/frostwire-android", "Date": "2015-01-05T18:28:03Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { fr.pizzeria.ihm.Menu m = new fr.pizzeria.ihm.Menu(\"***** Pizzeria Administration *****\"); m.manage(); } finally { fr.pizzeria.console.PizzeriaAdmin.input.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7574/buggy-version/src.main.java.fr.pizzeria.console.PizzeriaAdmin.java", "BodyUseAPI": ["fr.pizzeria.ihm.Menu.manage()"], "Fixed commit": "8ad61268f97218d804221c2f2333bfc7c6dbdb3c", "Url": "https://api.github.com/repos/PamProg/JavaEnContinu", "Date": "2017-07-20T09:54:17Z"},
{"Line": "=>402", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (android.preference.PreferenceManager.getDefaultSharedPreferences(com.irccloud.android.IRCCloudApplication.getInstance().getApplicationContext()).getBoolean(\"notify_sony\", false)) com.sonyericsson.extras.liveware.extension.util.notification.NotificationUtil.deleteEvents(com.irccloud.android.IRCCloudApplication.getInstance().getApplicationContext(), ((com.sonyericsson.extras.liveware.aef.notification.Notification.EventColumns.FRIEND_KEY) + \" = ?\"), new java.lang.String[]{ java.lang.String.valueOf(bid) }); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5909/buggy-version/src.com.irccloud.android.Notifications.java", "BodyUseAPI": ["java.lang.String.valueOf(int)", "android.preference.PreferenceManager.getDefaultSharedPreferences(com.irccloud.android.IRCCloudApplication.getInstance().getApplicationContext())", "com.irccloud.android.IRCCloudApplication.getInstance().getApplicationContext()", "com.irccloud.android.IRCCloudApplication.getInstance().getApplicationContext()", "com.irccloud.android.IRCCloudApplication.getInstance()", "android.preference.PreferenceManager.getDefaultSharedPreferences(com.irccloud.android.IRCCloudApplication.getInstance().getApplicationContext()).getBoolean(java.lang.String,boolean)", "com.irccloud.android.IRCCloudApplication.getInstance()", "com.sonyericsson.extras.liveware.extension.util.notification.NotificationUtil.deleteEvents(com.irccloud.android.IRCCloudApplication.getInstance().getApplicationContext(),((com.sonyericsson.extras.liveware.aef.notification.Notification.EventColumns.FRIEND_KEY) + \" = ?\"),java.lang.String[])"], "Fixed commit": "041ae329f8552e11dd80b68fdf70623a9ad93c95", "Url": "https://api.github.com/repos/irccloud/android", "Date": "2013-11-11T19:45:42Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { setupChat(); } catch (java.lang.Exception ex) { java.util.logging.Logger.getLogger(nz.co.lolnet.james137137.FactionChat.PrefixAndSuffix.VaultChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2834/buggy-version/src.main.java.nz.co.lolnet.james137137.FactionChat.PrefixAndSuffix.VaultChat.java", "BodyUseAPI": ["nz.co.lolnet.james137137.FactionChat.PrefixAndSuffix.VaultChat.setupChat()"], "Fixed commit": "c4dda05e9097fdd06fe49b19df6bd4b5f15a7bca", "Url": "https://api.github.com/repos/James137137/FactionChat", "Date": "2017-04-19T21:58:17Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { db.execSQL(\"create table Haru_comment(date TEXT, comment TEXT);\"); } catch (java.lang.Exception e) { java.lang.System.out.println(\"Hello! Already Haru_comment table exists.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1118/buggy-version/MyApplication10.app.src.main.java.com.example.jeongsubin.myapplication.MainActivity.java", "BodyUseAPI": ["android.database.sqlite.SQLiteDatabase.execSQL(java.lang.String)"], "Fixed commit": "600f37b31bb03ba382d97bdfc72cc50e2a6a0da3", "Url": "https://api.github.com/repos/Grazioso-Haru/Haru", "Date": "2016-07-20T23:27:20Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { int x = java.lang.Integer.valueOf(input.getText().toString()); int y = java.lang.Integer.valueOf(pinView.getText().toString()); if (x == y) { startActivity(new android.content.Intent(this, com.example.faraz.esp.MenuActivity.class)); finish(); }else { android.widget.Toast.makeText(this, \"Wrong Pin\", Toast.LENGTH_LONG).show(); } } catch (java.lang.NumberFormatException e) { android.widget.Toast.makeText(this, \"You need to enter number first!\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7610/buggy-version/app.src.main.java.com.example.faraz.esp.PinActivity.java", "BodyUseAPI": ["java.lang.Integer.valueOf(input.getText().toString())", "android.widget.EditText.getText()", "android.widget.TextView.getText()", "com.example.faraz.esp.PinActivity.finish()", "android.widget.Toast.makeText(com.example.faraz.esp.PinActivity,java.lang.String,Toast.LENGTH_LONG)", "com.example.faraz.esp.PinActivity.startActivity(android.content.Intent)", "android.widget.Toast.makeText(this, \"Wrong Pin\", Toast.LENGTH_LONG).show()", "input.getText().toString()", "java.lang.Integer.valueOf(pinView.getText().toString())", "pinView.getText().toString()"], "Fixed commit": "ccedcf759941dda24a49fa207e15897c1ec11a64", "Url": "https://api.github.com/repos/test166547778212458/ESP", "Date": "2016-12-07T23:46:37Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { timelineRender = new pt.gov.dgarq.roda.wui.dissemination.browse.client.PreservationMetadataPanel.PreservationTimeLineRender(timelineInfo, com.netthreads.gwt.simile.timeline.client.DateTime.YEAR(), com.netthreads.gwt.simile.timeline.client.DateTime.YEAR()); update(); } catch (java.lang.Throwable e) { pt.gov.dgarq.roda.wui.common.client.widgets.MessagePopup.showError((((e.getClass().getName()) + \": \") + (e.getMessage()))); logger.error(\"Error getting preservation timeline\", e); } finally { loading.hide(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1906/buggy-version/roda-ui.roda-wui.src.main.java.pt.gov.dgarq.roda.wui.dissemination.browse.client.PreservationMetadataPanel.java", "BodyUseAPI": ["com.netthreads.gwt.simile.timeline.client.DateTime.YEAR()", "com.netthreads.gwt.simile.timeline.client.DateTime.YEAR()", "pt.gov.dgarq.roda.wui.dissemination.browse.client.PreservationMetadataPanel.3.update()"], "Fixed commit": "344aeed22897527b303f6f5ead7fb8b750a6929b", "Url": "https://api.github.com/repos/keeps/roda", "Date": "2013-10-22T15:00:37Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { splited = input.split(\" \"); } catch (java.lang.Exception e) { splited = new java.lang.String[1]; splited[0] = input; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/854/buggy-version/Client.src.com.cube.Messenger.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "96585967a505d38d9eaa563e03c910fb23509d68", "Url": "https://api.github.com/repos/cubedude/Messenger", "Date": "2016-10-27T20:04:51Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { castData = gson.fromJson(userdataResult, com.wb.nextgenlibrary.data.MovieMetaData.BaselineCastData.class); castData.filterText(); } catch (java.lang.Exception ex) { castData = new com.wb.nextgenlibrary.data.MovieMetaData.BaselineCastData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5586/buggy-version/src.com.wb.nextgenlibrary.network.BaselineApiDAO.java", "BodyUseAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)", "com.wb.nextgenlibrary.data.MovieMetaData.BaselineCastData.filterText()"], "Fixed commit": "8ad0460c64c2f2a84717eee8abf0f4bac80e80bd", "Url": "https://api.github.com/repos/warnerbros/cpe-manifest-android-experience", "Date": "2016-12-09T23:36:04Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.List<jetbrains.buildServer.vcs.SVcsModification> changes = build.getChanges(SelectPrevBuildPolicy.SINCE_LAST_BUILD, true); com.whatsthatlight.teamcity.hipchat.HipChatServerExtension.logger.debug(java.lang.String.format(\"Number of changes: %s\", changes.size())); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1014/buggy-version/src.com.whatsthatlight.teamcity.hipchat.HipChatServerExtension.java", "BodyUseAPI": ["jetbrains.buildServer.serverSide.SRunningBuild.getChanges(SelectPrevBuildPolicy.SINCE_LAST_BUILD,boolean)", "java.util.List<jetbrains.buildServer.vcs.SVcsModification>.size()", "java.lang.String.format(java.lang.String,changes.size())", "org.apache.log4j.Logger.debug(java.lang.String)"], "Fixed commit": "551e586ca2c9994e36b2356a8f0e65a3d7111292", "Url": "https://api.github.com/repos/parautenbach/TeamCity-HipChat-Notifier", "Date": "2014-03-25T20:42:57Z"},
{"Line": "=>484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { price = java.lang.Double.parseDouble(priceStr); } catch (java.lang.Exception e) { return \"owner/add_goods_fail.jsp\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4259/buggy-version/src.main.java.com.parknshop.controller.OwnerController.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "e8f0d42c4d0ef550118b1502d5a2c938fb5d6f38", "Url": "https://api.github.com/repos/XDU-PM9/PARKnSHOP", "Date": "2017-01-03T04:27:15Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { account = userDAO.findByUsername(username); } catch (java.lang.Exception x) { throw new org.springframework.security.core.userdetails.UsernameNotFoundException(((\"Could not find the user '\" + username) + \"'\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2240/buggy-version/src.main.java.it.consoft.security.RestUserDetailService.java", "BodyUseAPI": ["it.consoft.dao.UserDAO.findByUsername(java.lang.String)"], "Fixed commit": "7fbfdf1e3fe7633b09d13aadeafc98fe8949357d", "Url": "https://api.github.com/repos/bruno-vignola/spring-boot-rest-service", "Date": "2016-05-26T09:03:32Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.List<models.StaffMember> staffmember = models.StaffMember.findAll(); return ok(play.libs.Json.toJson(staffmember)); } catch (java.lang.Exception e) { return redirect(routes.Staff.content()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/154/buggy-version/app.controllers.Staff.java", "BodyUseAPI": ["models.StaffMember.findAll()", "play.libs.Json.toJson(java.util.List<models.StaffMember>)", "controllers.Staff.ok(play.libs.Json.toJson(staffmember))"], "Fixed commit": "4e6a6bdda9e5d909365c0b46a9003ba55839fbe0", "Url": "https://api.github.com/repos/mean2k/NaKaSaSchool_Play", "Date": "2014-07-31T17:34:52Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { gameList = db.selectAllGameLobbys(); } catch (java.rmi.RemoteException ex) { java.util.logging.Logger.getLogger(gui.LobbyController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6376/buggy-version/OnlineSchaken.src.gui.LobbyController.java", "BodyUseAPI": ["database.Database.selectAllGameLobbys()"], "Fixed commit": "7d0f66f4e855acd81642f30ff3f1ec031ffa7164", "Url": "https://api.github.com/repos/Redxice/OnlineSchaken", "Date": "2016-12-07T10:52:35Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (int i = 0; i < (stories.length); ++i) { list.add(stories[i].getName()); } } catch (java.lang.NullPointerException ex) { android.widget.Toast.makeText(getApplicationContext(), \"Wait until point are loaded from Database\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2896/buggy-version/app.src.main.java.de.ifgi.igiapp.igi_app.StoryListActivity.java", "BodyUseAPI": ["stories[i].getName()", "java.util.ArrayList<java.lang.String>.add(stories[i].getName())"], "Fixed commit": "40b2325659429faba9474e255b42aca92a7fd241", "Url": "https://api.github.com/repos/froehr/IGI-app", "Date": "2015-01-29T16:34:17Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { context = new org.springframework.context.support.ClassPathXmlApplicationContext(new java.lang.String[]{ \"application-context-server-mongo.xml\" }); } catch (java.lang.Exception e) { throw new nl.kpmg.lcm.server.ServerException(((\"Unable to initialize monogo cotext! \" + \"Check if Mongo DB is up and running and accessible.Error message:\") + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8864/buggy-version/lcm-server.src.main.java.nl.kpmg.lcm.server.Server.java", "BodyUseAPI": [], "Fixed commit": "dd8ef388b06457e6df1aef2ac7e83613bf9812f6", "Url": "https://api.github.com/repos/KaveIO/LocalCatalogManager", "Date": "2017-04-13T12:51:41Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.laboki.eclipse.plugin.fastopen.opener.EditorContext.getActivePage().closeEditors(com.laboki.eclipse.plugin.fastopen.opener.EditorContext.getActivePage().findEditors(new org.eclipse.ui.part.FileEditorInput(file), com.laboki.eclipse.plugin.fastopen.opener.EditorContext.getEditorID(file), ((org.eclipse.ui.IWorkbenchPage.MATCH_ID) | (org.eclipse.ui.IWorkbenchPage.MATCH_INPUT))), true); } catch (final java.lang.Exception e) { log.log(java.util.logging.Level.FINEST, \"failed to close editor for some odd reason\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8079/buggy-version/com.laboki.eclipse.plugin.fastopen.src.com.laboki.eclipse.plugin.fastopen.opener.EditorContext.java", "BodyUseAPI": ["com.laboki.eclipse.plugin.fastopen.opener.EditorContext.getEditorID(org.eclipse.core.resources.IFile)", "com.laboki.eclipse.plugin.fastopen.opener.EditorContext.getActivePage()", "org.eclipse.ui.IWorkbenchPage.closeEditors(com.laboki.eclipse.plugin.fastopen.opener.EditorContext.getActivePage().findEditors(new org.eclipse.ui.part.FileEditorInput(file), com.laboki.eclipse.plugin.fastopen.opener.EditorContext.getEditorID(file), ((org.eclipse.ui.IWorkbenchPage.MATCH_ID) | (org.eclipse.ui.IWorkbenchPage.MATCH_INPUT))),boolean)", "com.laboki.eclipse.plugin.fastopen.opener.EditorContext.getActivePage()", "org.eclipse.ui.IWorkbenchPage.findEditors(org.eclipse.ui.part.FileEditorInput,java.lang.String,((org.eclipse.ui.IWorkbenchPage.MATCH_ID) | (org.eclipse.ui.IWorkbenchPage.MATCH_INPUT)))"], "Fixed commit": "fbb188027de6d9419201e52a674fe02fba81374a", "Url": "https://api.github.com/repos/mystilleef/eclipse4-fastopen", "Date": "2013-04-17T02:32:49Z"},
{"Line": "=>523", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { result = new org.pushingpixels.flamingo.api.ribbon.RibbonTask(name, createRibbonBands(task)); } catch (java.lang.IllegalArgumentException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7165/buggy-version/icy.gui.menu.MainRibbon.java", "BodyUseAPI": ["icy.gui.menu.MainRibbon.createRibbonBands(icy.workspace.Workspace.TaskDefinition)"], "Fixed commit": "4aae5cfd5479047aeff72428d0247a35cfd9a759", "Url": "https://api.github.com/repos/Icy-imaging/Icy-Kernel", "Date": "2013-01-10T14:46:13Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { properties = de.alpharogroup.resourcebundle.properties.PropertiesExtensions.loadProperties(getPropertiesFilename()); } catch (final java.io.IOException e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4668/buggy-version/resourcebundle-inspector.src.main.java.de.alpharogroup.resourcebundle.config.ConfigurationPropertiesResolver.java", "BodyUseAPI": ["de.alpharogroup.resourcebundle.properties.PropertiesExtensions.loadProperties(getPropertiesFilename())", "de.alpharogroup.resourcebundle.config.ConfigurationPropertiesResolver.getPropertiesFilename()"], "Fixed commit": "657fe19538191803068d65f636c7488f3e345a2b", "Url": "https://api.github.com/repos/astrapi69/resourcebundle-core", "Date": "2016-10-15T16:14:59Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.dronix.android.unisannio.fragments.MapFragment.view = inflater.inflate(R.layout.fragment_maps, container, false); } catch (android.view.InflateException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5507/buggy-version/unisannio.src.main.java.org.dronix.android.unisannio.fragments.MapFragment.java", "BodyUseAPI": ["android.view.LayoutInflater.inflate(R.layout.fragment_maps,android.view.ViewGroup,boolean)"], "Fixed commit": "67babcea0944b92068c3121bdaca20b8e66ec734", "Url": "https://api.github.com/repos/hamen/unisannio-android", "Date": "2014-08-02T12:35:36Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { final net.sf.cglib.proxy.Enhancer enhancer = com.p6spy.engine.proxy.ProxyFactory.createProxy(underlying, invocationHandler, ProxyNamingPolicy.INSTANCE, currentThreadClassLoader); return ((T) (enhancer.create())); } catch (net.sf.cglib.core.CodeGenerationException e) { try { final net.sf.cglib.proxy.Enhancer enhancer = com.p6spy.engine.proxy.ProxyFactory.createProxy(underlying, invocationHandler, null, currentThreadClassLoader); return ((T) (enhancer.create())); } catch (net.sf.cglib.core.CodeGenerationException ex) { try { final net.sf.cglib.proxy.Enhancer enhancer = com.p6spy.engine.proxy.ProxyFactory.createProxy(underlying, invocationHandler, ProxyNamingPolicy.INSTANCE, null); return ((T) (enhancer.create())); } catch (net.sf.cglib.core.CodeGenerationException exc) { final net.sf.cglib.proxy.Enhancer enhancer = com.p6spy.engine.proxy.ProxyFactory.createProxy(underlying, invocationHandler, null, null); return ((T) (enhancer.create())); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7598/buggy-version/src.main.java.com.p6spy.engine.proxy.ProxyFactory.java", "BodyUseAPI": ["com.p6spy.engine.proxy.ProxyFactory.createProxy(T,com.p6spy.engine.proxy.GenericInvocationHandler<T>,ProxyNamingPolicy.INSTANCE,java.lang.ClassLoader)", "net.sf.cglib.proxy.Enhancer.create()"], "Fixed commit": "a67420b33223a896362a6b1905667e4c8fecb0f3", "Url": "https://api.github.com/repos/quintonm/p6spy", "Date": "2014-05-01T09:34:32Z"},
{"Line": "=>605", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mInputPointer = in.readInt(); in.readIntArray(mInput); mSign = in.readInt(); } catch (java.lang.NullPointerException e) { mSign = com.codetroopers.betterpickers.numberpicker.NumberPicker.SIGN_POSITIVE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6380/buggy-version/library.src.main.java.com.codetroopers.betterpickers.numberpicker.NumberPicker.java", "BodyUseAPI": ["android.os.Parcel.readIntArray(int[])", "android.os.Parcel.readInt()", "android.os.Parcel.readInt()"], "Fixed commit": "e15c0c0e4e7d0859af5d241f98d93893a0adca11", "Url": "https://api.github.com/repos/marcohc/android-betterpickers", "Date": "2016-01-31T11:32:29Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return java.net.IDN.toASCII(in); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7123/buggy-version/src.main.java.com.github.javafaker.service.FakerIDN.java", "BodyUseAPI": ["java.net.IDN.toASCII(java.lang.String)"], "Fixed commit": "6b40b06a95a29f6c22af3485d2cf44b875fd8c52", "Url": "https://api.github.com/repos/trevershick/java-faker", "Date": "2016-10-31T02:53:41Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (!(predicateParam.apply(inputParam))) { throw new biz.littlej.jreqs.PreConditionException((\"Pre-condition not verified: \" + messageParam)); } } catch (biz.littlej.jreqs.RequirementException e) { throw new biz.littlej.jreqs.PreConditionException((((\"Parameter requirement not verified: \" + messageParam) + \" - Triggered by: \") + (e.getMessage())), e); } catch (java.lang.IllegalArgumentException e) { throw new biz.littlej.jreqs.PreConditionException((((\"Parameter requirement not verified: \" + messageParam) + \" - Triggered by: \") + (e.getMessage())), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4808/buggy-version/jreqs-core.src.main.java.biz.littlej.jreqs.Reqs.java", "BodyUseAPI": ["biz.littlej.jreqs.predicates.Predicate<T>.apply(T)"], "Fixed commit": "6cf73f99108b53f229d7abc83c5c59ccb33d4e55", "Url": "https://api.github.com/repos/LittleJ/jreqs", "Date": "2013-04-06T11:39:22Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (!(predicateParam.apply(inputParam))) { throw new biz.littlej.jreqs.RequirementException((\"Requirement not verified: \" + messageParam)); } } catch (biz.littlej.jreqs.RequirementException e) { throw new biz.littlej.jreqs.RequirementException((((\"Parameter requirement not verified: \" + messageParam) + \" - Triggered by: \") + (e.getMessage())), e); } catch (java.lang.IllegalArgumentException e) { throw new biz.littlej.jreqs.RequirementException((((\"Parameter requirement not verified: \" + messageParam) + \" - Triggered by: \") + (e.getMessage())), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4808/buggy-version/jreqs-core.src.main.java.biz.littlej.jreqs.Reqs.java", "BodyUseAPI": ["biz.littlej.jreqs.predicates.Predicate<T>.apply(T)"], "Fixed commit": "6cf73f99108b53f229d7abc83c5c59ccb33d4e55", "Url": "https://api.github.com/repos/LittleJ/jreqs", "Date": "2013-04-06T11:39:22Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (!(predicateParam.apply(inputParam))) { throw new biz.littlej.jreqs.PostConditionException((\"Post-condition not verified: \" + messageParam)); } } catch (biz.littlej.jreqs.RequirementException e) { throw new biz.littlej.jreqs.PostConditionException((((\"Parameter requirement not verified: \" + messageParam) + \" - Triggered by: \") + (e.getMessage())), e); } catch (java.lang.IllegalArgumentException e) { throw new biz.littlej.jreqs.PostConditionException((((\"Parameter requirement not verified: \" + messageParam) + \" - Triggered by: \") + (e.getMessage())), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4808/buggy-version/jreqs-core.src.main.java.biz.littlej.jreqs.Reqs.java", "BodyUseAPI": ["biz.littlej.jreqs.predicates.Predicate<T>.apply(T)"], "Fixed commit": "6cf73f99108b53f229d7abc83c5c59ccb33d4e55", "Url": "https://api.github.com/repos/LittleJ/jreqs", "Date": "2013-04-06T11:39:22Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (!(predicateParam.apply(inputParam))) { throw new java.lang.IllegalArgumentException((\"Parameter requirement not verified: \" + messageParam)); } } catch (biz.littlej.jreqs.RequirementException e) { throw new java.lang.IllegalArgumentException((((\"Parameter requirement not verified: \" + messageParam) + \" - Triggered by: \") + (e.getMessage())), e); } catch (java.lang.IllegalArgumentException e) { throw new java.lang.IllegalArgumentException((((\"Parameter requirement not verified: \" + messageParam) + \" - Triggered by: \") + (e.getMessage())), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4808/buggy-version/jreqs-core.src.main.java.biz.littlej.jreqs.Reqs.java", "BodyUseAPI": ["biz.littlej.jreqs.predicates.Predicate<T>.apply(T)"], "Fixed commit": "6cf73f99108b53f229d7abc83c5c59ccb33d4e55", "Url": "https://api.github.com/repos/LittleJ/jreqs", "Date": "2013-04-06T11:39:22Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.kokakiwi.mclauncher.utils.lang.Translater.lang = lang; com.kokakiwi.mclauncher.utils.lang.Translater.main.clear(); com.kokakiwi.mclauncher.utils.lang.Translater.main.load(com.kokakiwi.mclauncher.utils.lang.Translater.class.getResourceAsStream(((\"/lang/\" + (com.kokakiwi.mclauncher.utils.lang.Translater.lang)) + \".yml\")), \"yaml\"); } catch (java.lang.Exception e) { com.kokakiwi.mclauncher.utils.lang.Translater.setLang(\"en_US\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/110/buggy-version/src.main.java.com.kokakiwi.mclauncher.utils.lang.Translater.java", "BodyUseAPI": ["java.lang.Class.getResourceAsStream(java.lang.String)", "com.kokakiwi.mclauncher.utils.Configuration.load(java.io.InputStream,java.lang.String)", "com.kokakiwi.mclauncher.utils.Configuration.clear()"], "Fixed commit": "3ffdbc69f80c718c906522dd2b82dc8078d93532", "Url": "https://api.github.com/repos/wmchris/MCLauncher", "Date": "2013-01-13T07:19:23Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { record.stop(); record.release(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4803/buggy-version/app.src.main.java.com.example.user1.beatsmaker.RecordActivity.java", "BodyUseAPI": ["android.media.MediaRecorder.release()", "android.media.MediaRecorder.stop()"], "Fixed commit": "cff3c98211e48276572013c2a66211e263dd370e", "Url": "https://api.github.com/repos/itamarbk/beatsappworking", "Date": "2017-05-11T11:03:23Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { davidIDs = genomeIdManager.getIDAsSet(org.caleydo.core.id.IDType.getIDType(\"ENTREZ_GENE_ID\"), org.caleydo.core.id.IDType.getIDType(\"DAVID\"), java.lang.Integer.valueOf(entrezID)); } catch (java.lang.NumberFormatException e) { org.caleydo.core.util.logging.Logger.log(new org.eclipse.core.runtime.Status(org.eclipse.core.runtime.IStatus.INFO, this.toString(), (\"Invalid Entrez ID: \" + entrezID))); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3177/buggy-version/org.caleydo.datadomain.pathway.src.org.caleydo.datadomain.pathway.parser.KgmlSaxHandler.java", "BodyUseAPI": ["org.caleydo.core.id.IDType.getIDType(java.lang.String)", "java.lang.Integer.valueOf(java.lang.String)", "org.caleydo.core.id.IDMappingManager.getIDAsSet(org.caleydo.core.id.IDType.getIDType(\"ENTREZ_GENE_ID\"),org.caleydo.core.id.IDType.getIDType(\"DAVID\"),java.lang.Integer)", "org.caleydo.core.id.IDType.getIDType(java.lang.String)"], "Fixed commit": "6de507073b8e6f371909be9184189272282aa4b7", "Url": "https://api.github.com/repos/Caleydo/caleydo", "Date": "2013-07-17T10:09:00Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { db = getReadableDatabase(); android.database.Cursor cursor = db.rawQuery((((\"Select * from \" + (com.teamunemployment.breadcrumbs.database.DatabaseController.DATABASE_NAME)) + \" where userid=\") + userId), null); if ((cursor.getCount()) > 0) { return true; } } catch (android.database.sqlite.SQLiteException ex) { android.util.Log.d(\"DB\", \"Checking for user failed, most likely due to database not existing.\"); ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/677/buggy-version/ICEMAN-client.com.teamunemployment.breadcrumbs.src.com.teamunemployment.breadcrumbs.database.DatabaseController.java", "BodyUseAPI": ["android.database.Cursor.getCount()", "com.teamunemployment.breadcrumbs.database.DatabaseController.getReadableDatabase()", "android.database.sqlite.SQLiteDatabase.rawQuery(java.lang.String,<nulltype>)"], "Fixed commit": "4f3bbaa978e772147f5e1484f3dc74618a5eb15d", "Url": "https://api.github.com/repos/kloin/ICEMANv0.5", "Date": "2016-03-15T21:54:42Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { entropy1 = vectors.Vectors.EntropyVector(collect1); entropy2 = vectors.Vectors.EntropyVector(collect2); } catch (java.lang.NullPointerException npe) { java.lang.System.out.println(\"break\"); entropy2 = vectors.Vectors.EntropyVector(collect2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6035/buggy-version/src.main.clustering.feature.aggregation.EntropyAggregate.java", "BodyUseAPI": ["vectors.Vectors.EntropyVector(java.util.List<java.lang.String>)", "vectors.Vectors.EntropyVector(java.util.List<java.lang.String>)"], "Fixed commit": "5237852c3fe1b55260f15374c949646388eacacb", "Url": "https://api.github.com/repos/craigthelinguist/detective", "Date": "2015-02-19T03:48:13Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { movie = this.movieCatalogueRepository.getOne(java.lang.Integer.parseInt(movieBuyerObject.getMovieId())); } catch (javax.persistence.EntityNotFoundException e) { return new org.springframework.http.ResponseEntity<java.lang.String>(org.springframework.http.HttpStatus.NOT_FOUND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4921/buggy-version/markandspencer-resource.src.main.java.service.MovieStoreService.java", "BodyUseAPI": ["utils.MovieBuyerObject.getMovieId()", "repositories.MovieCatalogueRepository.getOne(int)", "java.lang.Integer.parseInt(movieBuyerObject.getMovieId())"], "Fixed commit": "2b04eb6129ab3f27b666f8c5ef2969ae6c63906b", "Url": "https://api.github.com/repos/ucugo/mands", "Date": "2015-06-01T20:07:03Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return ((net.minecraft.block.Block) (deco)).colorMultiplier(world, x, y, z); } catch (java.lang.Exception e) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3277/buggy-version/src.main.java.me.planetguy.remaininmotion.base.BlockCamouflageable.java", "BodyUseAPI": ["net.minecraft.block.Block.colorMultiplier(net.minecraft.world.IBlockAccess,int,int,int)"], "Fixed commit": "6fa5e9a0a87021c1485d4f791cc5a2568d15a330", "Url": "https://api.github.com/repos/planetguy32/RemainInMotion", "Date": "2015-03-11T22:11:33Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { emf = javax.persistence.Persistence.createEntityManagerFactory(\"authentication-jpa\", getDBProperties()); } catch (java.lang.Exception e) { java.lang.System.out.println(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2805/buggy-version/src.ucoach.auth.dao.AuthDao.java", "BodyUseAPI": ["ucoach.auth.dao.AuthDao.getDBProperties()", "javax.persistence.Persistence.createEntityManagerFactory(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)"], "Fixed commit": "d495cf35bf5d4e3fea0e567d41835ab613a62df1", "Url": "https://api.github.com/repos/uCoach/authentication-api", "Date": "2016-02-07T14:53:38Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { nameTextView.setText(pet.getBreeds().get(0)); animalTextView.setText(pet.getAge()); lastUpdatedTextView.setText((\"LastUpdated: \" + (pet.getLastUpdate()))); } catch (java.lang.NullPointerException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4708/buggy-version/app.src.main.java.com.example.collins.littlehearts.adapters.FirebasePetViewHolder.java", "BodyUseAPI": ["android.widget.TextView.setText(pet.getAge())", "pet.getBreeds().get(int)", "android.widget.TextView.setText((\"LastUpdated: \" + (pet.getLastUpdate())))", "com.example.collins.littlehearts.models.Pet.getLastUpdate()", "com.example.collins.littlehearts.models.Pet.getAge()", "android.widget.TextView.setText(pet.getBreeds().get(0))", "com.example.collins.littlehearts.models.Pet.getBreeds()"], "Fixed commit": "3bf0661f8d8a87cc516af5cb5d6e622dcdd93ae7", "Url": "https://api.github.com/repos/collinsmwiti/LittleHearts", "Date": "2017-06-12T09:09:38Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return new org.sakuli.actions.environment.Application(applicationNameOrPath, java.lang.Boolean.valueOf(resumeOnException)); } catch (java.lang.Throwable throwable) { org.sakuli.loader.BeanLoader.loadBaseActionLoader().getExceptionHandler().handleException(new org.sakuli.exceptions.SakuliInitException(throwable, ((\"Unexpected error during creating an instance of class '\" + (org.sakuli.actions.environment.Application.class.getName())) + \"'\"))); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2236/buggy-version/src.core.src.main.java.org.sakuli.loader.BeanLoader.java", "BodyUseAPI": ["java.lang.Boolean.valueOf(java.lang.String)"], "Fixed commit": "d8041552acc2d2b8be856efabd18fcf58d9c528f", "Url": "https://api.github.com/repos/ConSol/sakuli", "Date": "2016-09-23T17:36:58Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (this.getTileToBeRendered(x, y)) { if (this.getTileToBeFiltered(x, y)) { try { org.newdawn.slick.Image xi = map.getTileImage(x, y, background_layer); xi.draw(((screen_x) + (draw_x)), ((screen_y) + (draw_y)), scale_x, this.myfilterd); } catch (java.lang.ArrayIndexOutOfBoundsException ae) { } }else { map.getTileImage(x, y, background_layer).draw(((screen_x) + (draw_x)), ((screen_y) + (draw_y)), scale_x); } } } catch (java.lang.ArrayIndexOutOfBoundsException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2437/buggy-version/src.horrortactics.HorrorTactics.java", "BodyUseAPI": ["map.getTileImage(x, y, background_layer).draw(int,int,float)", "horrortactics.HorrorTactics.getTileToBeFiltered(int,int)", "org.newdawn.slick.Image.draw(int,int,float,org.newdawn.slick.Color)", "horrortactics.HorrorTactics.getTileToBeRendered(int,int)", "horrortactics.MyTiledMap.getTileImage(int,int,int)", "horrortactics.MyTiledMap.getTileImage(int,int,int)"], "Fixed commit": "7318d714a22c4b3cadcd710b73fe7365209c779d", "Url": "https://api.github.com/repos/xmorg/horrorTactics", "Date": "2017-04-13T05:45:54Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.gl.jmd.view.list.Footer f = ((org.gl.jmd.view.list.Footer) (adapter.getItem(position))); if (f != null) { return; } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5531/buggy-version/src.org.gl.jmd.view.etudiant.listing.ListeUEE.java", "BodyUseAPI": ["org.gl.jmd.view.list.TwoTextArrayAdapter.getItem(int)"], "Fixed commit": "3afaa41725f5780cd84c8d9314366d48cff9178b", "Url": "https://api.github.com/repos/jordiC91/JMD-Android", "Date": "2014-11-24T23:26:20Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { throw new java.lang.Exception(\"trace\"); } catch (java.lang.Exception ex) { try { try (java.io.PrintWriter pw = new java.io.PrintWriter(new java.io.File(\"logs/stack_trace\"))) { ex.printStackTrace(pw); } } catch (java.io.FileNotFoundException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7872/buggy-version/src.main.java.fpdo.xml.XML_PW.java", "BodyUseAPI": [], "Fixed commit": "9300047ac90fa6813f5e5a5f8b838b30b9a03cb2", "Url": "https://api.github.com/repos/data50p/omega2is", "Date": "2017-03-29T21:23:46Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { projetoDao.save(entity); } catch (com.indra.infra.dao.exception.RegistroDuplicadoException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4698/buggy-version/src.main.java.com.indra.sishe.service.impl.ProjetoServiceImp.java", "BodyUseAPI": ["com.indra.sishe.dao.ProjetoDAO.save(com.indra.sishe.entity.Projeto)"], "Fixed commit": "bbe9abc87bb978a1e7b2adfa00234e99cc461cfb", "Url": "https://api.github.com/repos/fabmarc/SisHE", "Date": "2015-01-12T19:27:10Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return sindicatoDao.save(entity); } catch (com.indra.infra.dao.exception.RegistroDuplicadoException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4698/buggy-version/src.main.java.com.indra.sishe.service.impl.SindicatoServiceImpl.java", "BodyUseAPI": ["com.indra.sishe.dao.SindicatoDAO.save(com.indra.sishe.entity.Sindicato)"], "Fixed commit": "bbe9abc87bb978a1e7b2adfa00234e99cc461cfb", "Url": "https://api.github.com/repos/fabmarc/SisHE", "Date": "2015-01-12T19:27:10Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { block.setData(dataValue); } catch (java.lang.Exception ex) { controller.getLogger().log(java.util.logging.Level.WARNING, (\"Failed to alter block state: \" + (ex.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7912/buggy-version/Magic.src.main.java.com.elmakers.mine.bukkit.spell.builtin.AlterSpell.java", "BodyUseAPI": ["org.bukkit.block.Block.setData(byte)"], "Fixed commit": "f29ceacd388d39fa3644be1d34cefde9d237e887", "Url": "https://api.github.com/repos/elBukkit/MagicPlugin", "Date": "2017-03-06T21:59:25Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (int i = 0; i < (this.helpList.size()); i++) { if (questionID.equals(this.helpList.get(i).getQuestionID())) { if (java.rmi.server.RemoteServer.getClientHost().equals(this.helpList.get(i).getIP())) { this.helpList.remove(i); return true; } break; } } return false; } catch (java.lang.Exception e) { java.lang.System.err.println((\"Could not resolve client IP: \" + (e.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/686/buggy-version/src.Server.java", "BodyUseAPI": ["java.util.LinkedList<HelpObject>.get(int)", "java.util.LinkedList<HelpObject>.remove(int)", "java.lang.String.equals(this.helpList.get(i).getQuestionID())", "java.util.LinkedList<HelpObject>.get(int)", "java.lang.String.equals(this.helpList.get(i).getIP())", "this.helpList.get(i).getIP()", "java.util.LinkedList<HelpObject>.size()", "this.helpList.get(i).getQuestionID()", "java.rmi.server.RemoteServer.getClientHost()"], "Fixed commit": "d3d1c7054b220d76b5c5728fefb512eeb2eed29d", "Url": "https://api.github.com/repos/Nallexander/Studyhelper", "Date": "2015-12-07T14:44:15Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { proximityToLock = java.lang.Integer.parseInt(prefs.getString(com.tomer.alwayson.Prefs.KEYS.PROXIMITY_TO_LOCK.toString(), \"0\")); } catch (java.lang.ClassCastException e) { prefs.edit().remove(com.tomer.alwayson.Prefs.KEYS.PROXIMITY_TO_LOCK.toString()).apply(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4705/buggy-version/app.src.main.java.com.tomer.alwayson.Prefs.java", "BodyUseAPI": ["android.content.SharedPreferences.getString(java.lang.String,java.lang.String)", "java.lang.Integer.parseInt(prefs.getString(com.tomer.alwayson.Prefs.KEYS.PROXIMITY_TO_LOCK.toString(), \"0\"))", "com.tomer.alwayson.Prefs.KEYS.toString()"], "Fixed commit": "3e6baad1ab7c6779ec7d48dc3dfb27b7b453b116", "Url": "https://api.github.com/repos/rosenpin/AlwaysOnDisplayAmoled", "Date": "2016-07-11T10:02:35Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { sp = ctx.getSerializationPlugin(prot); } catch (java.io.UnsupportedEncodingException uee) { java.lang.System.err.println(\"Could not get serialization plugin... Expect some errors in the generated code\"); uee.printStackTrace(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3001/buggy-version/compilers.official-network-plugins.src.main.java.org.thingml.networkplugins.java.JavaMQTTPlugin.java", "BodyUseAPI": ["org.thingml.compilers.Context.getSerializationPlugin(org.thingml.networkplugins.java.Protocol)"], "Fixed commit": "498d0f2a73142c2dd8418774a47cd30d83ad34f3", "Url": "https://api.github.com/repos/TelluIoT/ThingML", "Date": "2016-10-19T15:30:27Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { cityId = com.noandroid.familycontacts.Telephone.getCityIdForTel(number); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/9091/buggy-version/app.src.main.java.com.noandroid.familycontacts.MainActivity.java", "BodyUseAPI": ["com.noandroid.familycontacts.Telephone.getCityIdForTel(java.lang.String)"], "Fixed commit": "c3d0083a854d4ef33a17d2b4461047e7500e2d70", "Url": "https://api.github.com/repos/coolspring1293/FamilyContacts-Android", "Date": "2016-05-11T10:09:01Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { field = t.getDeclaredField(fieldName); } catch (java.lang.NoSuchFieldException ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2932/buggy-version/src.main.java.org.dasein.persist.PersistentCache.java", "BodyUseAPI": ["java.lang.Class<? extends java.lang.Object>.getDeclaredField(java.lang.String)"], "Fixed commit": "daf63388d62e14b37702b40bd9c56615c8e96257", "Url": "https://api.github.com/repos/greese/dasein-persist", "Date": "2013-01-28T20:42:00Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return ((((\"field \" + (sourceFields.get(i))) + \" cannot be coerced from : \") + object) + \" to: \") + (cascading.util.Util.getTypeName(types[i])); } catch (java.lang.Throwable throwable) { return (((\"field pos \" + i) + \" cannot be coerced from: \") + object) + \", pos has no corresponding field name or coercion type\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8604/buggy-version/cascading-core.src.main.java.cascading.scheme.util.DelimitedParser.java", "BodyUseAPI": ["cascading.tuple.Fields.get(int)", "cascading.util.Util.getTypeName(java.lang.reflect.Type)"], "Fixed commit": "9241786520d7e23558e4b6efd4cb7a6bf82dfdee", "Url": "https://api.github.com/repos/mapr/cascading", "Date": "2013-10-30T18:33:47Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { boolean isCelsius = sharedPreferences.getBoolean(key, getResources().getBoolean(R.bool.pref_is_celsius_default)); if (isCelsius) { preference.setSummary(R.string.pref_is_celsius_celsius); }else { preference.setSummary(R.string.pref_is_celsius_fahrenheit); } } catch (java.lang.IllegalStateException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5246/buggy-version/app.src.main.java.com.shockn745.moovin5.settings.SettingsActivity.java", "BodyUseAPI": ["android.preference.Preference.setSummary(R.string.pref_is_celsius_celsius)", "android.preference.Preference.setSummary(R.string.pref_is_celsius_fahrenheit)", "android.content.SharedPreferences.getBoolean(java.lang.String,getResources().getBoolean(R.bool.pref_is_celsius_default))", "getResources().getBoolean(R.bool.pref_is_celsius_default)", "com.shockn745.moovin5.settings.SettingsActivity.SettingsFragment.getResources()"], "Fixed commit": "2d768471af18bf25c81900bf83924e43cd3b7197", "Url": "https://api.github.com/repos/FlorianKempenich/MoovIn5", "Date": "2015-06-04T16:56:13Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { transaction = session.beginTransaction(); participants = planning.getParticipants(); session.getTransaction().commit(); } catch (java.lang.Exception e) { if (transaction != null) transaction.rollback(); e.printStackTrace(); } finally { session.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/835/buggy-version/iodeman.src.main.java.fr.istic.iodeman.dao.PlanningDAOImpl.java", "BodyUseAPI": ["fr.istic.iodeman.model.Planning.getParticipants()", "session.getTransaction().commit()", "org.hibernate.Session.beginTransaction()", "org.hibernate.Session.getTransaction()"], "Fixed commit": "12a33c302bde51d5b7afac578e6db09124d4e70f", "Url": "https://api.github.com/repos/dmichel35/iode-man", "Date": "2015-01-30T16:37:38Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { keyguardLock.reenableKeyguard(); } catch (java.lang.Exception ex) { android.util.Log.i(TAG, \"Reenabling keyguard didn't work\"); ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5765/buggy-version/WallPanelApp.src.main.java.org.wallpanelproject.android.WallPanelService.java", "BodyUseAPI": ["KeyguardManager.KeyguardLock.reenableKeyguard()"], "Fixed commit": "566dbf130aeb99a558d4d1ebaa38ffa117cbb439", "Url": "https://api.github.com/repos/WallPanel-Project/wallpanel-android", "Date": "2017-05-21T22:55:08Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { obstaclesProxIterator.reinit(); while (obstaclesProxIterator.hasNext()) if (obstaclesProxIterator.next().isColliding(obs)) { return false; } } catch (java.lang.NullPointerException e) { log.critical(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7571/buggy-version/pc.src.pathfinding.astar.arcs.ArcManager.java", "BodyUseAPI": ["obstacles.memory.ObstaclesIteratorPresent.next()", "obstacles.memory.ObstaclesIteratorPresent.reinit()", "obstacles.memory.ObstaclesIteratorPresent.hasNext()", "obstaclesProxIterator.next().isColliding(obstacles.types.ObstacleArcCourbe)"], "Fixed commit": "99d480b9c3ffded2e4eb59b890c549f9e0f325cc", "Url": "https://api.github.com/repos/INTechSenpai/moon-rover", "Date": "2017-05-23T16:57:36Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { answer.setText((((num) / (num2)) + \"\")); } catch (java.lang.ArithmeticException exception) { android.support.design.widget.Snackbar snackbar = android.support.design.widget.Snackbar.make(getActivity().findViewById(android.R.id.content), \"Whoa there! You cannot divide by Zero!\", Snackbar.LENGTH_LONG); snackbar.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8412/buggy-version/app.src.main.java.com.shipwebsource.calculator.CalculatorFragment.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "8f600fe097cffb4f5a5b8689bd6183d8b8d19596", "Url": "https://api.github.com/repos/kenicenoel/Calculator", "Date": "2016-07-30T13:43:50Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (targetType.equals(Activity.FLOATING_TASK_TYPE)) { lastShownList = model.getFilteredFloatingTaskList(); activityToUncomplete = lastShownList.get(targetIndex); }else if (targetType.equals(Activity.TASK_TYPE)) { lastShownList = model.getFilteredTaskList(); activityToUncomplete = lastShownList.get(targetIndex); }else { lastShownList = model.getFilteredEventList(); activityToUncomplete = lastShownList.get(targetIndex); } } catch (java.lang.IndexOutOfBoundsException e) { return new seedu.menion.logic.commands.CommandResult(seedu.menion.commons.core.Messages.MESSAGE_INVALID_ACTIVITY_DISPLAYED_INDEX); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8500/buggy-version/src.main.java.seedu.menion.logic.commands.UnCompleteCommand.java", "BodyUseAPI": ["seedu.menion.commons.core.UnmodifiableObservableList<seedu.menion.model.activity.ReadOnlyActivity>.get(int)", "seedu.menion.logic.commands.UnCompleteCommand.getFilteredTaskList()", "seedu.menion.logic.commands.UnCompleteCommand.getFilteredEventList()", "seedu.menion.logic.commands.UnCompleteCommand.getFilteredFloatingTaskList()", "seedu.menion.commons.core.UnmodifiableObservableList<seedu.menion.model.activity.ReadOnlyActivity>.get(int)", "java.lang.String.equals(Activity.FLOATING_TASK_TYPE)", "seedu.menion.commons.core.UnmodifiableObservableList<seedu.menion.model.activity.ReadOnlyActivity>.get(int)", "java.lang.String.equals(Activity.TASK_TYPE)"], "Fixed commit": "789e112a572da10bd4ac6fd77bab1f1dbd7deb78", "Url": "https://api.github.com/repos/CS2103AUG2016-W14-C2/main", "Date": "2016-10-25T14:39:28Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { file_ext = file.getAbsolutePath().substring(file.getAbsolutePath().lastIndexOf(\".\")); } catch (java.lang.Exception e) { file_ext = \".\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2198/buggy-version/app.src.main.java.de.baumann.pdfcreator.fragments.file_manager.java", "BodyUseAPI": ["java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.substring(int)", "java.io.File.getAbsolutePath()", "java.io.File.getAbsolutePath()"], "Fixed commit": "fe2b4cc305734c9c1c7f474bd0fbb7e1a908f66c", "Url": "https://api.github.com/repos/scoute-dich/PDFCreator", "Date": "2017-06-11T09:52:28Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(1000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/436/buggy-version/src.main.java.GroupMaster.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "8981584fb622511725290808fdec7d553ed6400f", "Url": "https://api.github.com/repos/Jaco-F/SecureGroupCommunication", "Date": "2015-03-19T18:33:55Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.net.URI image = new java.net.URI(src); if ((src != null) && ((src.length()) > 0)) { linksBuffer.add(new de.l3s.boilerpipe.document.Image(src, atts.getValue(\"width\"), atts.getValue(\"height\"), atts.getValue(\"alt\"))); } } catch (java.net.URISyntaxException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7850/buggy-version/src.main.java.de.l3s.boilerpipe.sax.MediaExtractor.java", "BodyUseAPI": ["java.lang.String.length()", "org.xml.sax.Attributes.getValue(java.lang.String)", "org.xml.sax.Attributes.getValue(java.lang.String)", "java.util.List<de.l3s.boilerpipe.document.Media>.add(de.l3s.boilerpipe.document.Image)", "org.xml.sax.Attributes.getValue(java.lang.String)"], "Fixed commit": "de2dc8e8db0c1494e5f4e8dcd6e64e195054eb7b", "Url": "https://api.github.com/repos/Netbreeze-GmbH/boilerpipe", "Date": "2013-01-24T13:16:39Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { serverSocket.close(); } catch (java.io.IOException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5662/buggy-version/Chat.src.Communications.TCP.java", "BodyUseAPI": ["java.net.ServerSocket.close()"], "Fixed commit": "b992a31c0c5f6242a01f8a2e40799a5515697ad4", "Url": "https://api.github.com/repos/ragnarok089/CS544", "Date": "2013-06-08T01:28:54Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.google.firebase.FirebaseApp.getInstance(); } catch (java.lang.IllegalStateException e) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/235/buggy-version/app.src.main.java.com.i906.mpt.internal.FirebaseTree.java", "BodyUseAPI": ["com.google.firebase.FirebaseApp.getInstance()"], "Fixed commit": "3495d3305060fde31aed8315582851185c5fbd7e", "Url": "https://api.github.com/repos/MalaysiaPrayerTimes/android", "Date": "2016-10-30T11:42:31Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { replaceBy = olsClient.getReplacedBy(semanticTag.toString()); } catch (org.springframework.web.client.RestClientException e) { getLog().debug((semanticTag + \" something went wrong when we tried to find a replacement in OLS!\")); replaceBy = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/383/buggy-version/zooma-ols-service.src.main.java.uk.ac.ebi.fgpt.zooma.service.OLSSearchService.java", "BodyUseAPI": ["uk.ac.ebi.pride.utilities.ols.web.service.client.OLSClient.getReplacedBy(java.lang.String)", "java.net.URI.toString()"], "Fixed commit": "ad31aa30b634f5d32ea6b05c2488105c264c2026", "Url": "https://api.github.com/repos/EBISPOT/zooma", "Date": "2017-06-13T13:46:05Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { charset = org.apache.http.entity.ContentType.getOrDefault(entity).getCharset(); } catch (java.lang.Exception e) { edu.uci.ics.crawler4j.crawler.Page.logger.warn(\"parse charset failed\", e); charset = java.nio.charset.Charset.forName(\"UTF-8\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4556/buggy-version/src.main.java.edu.uci.ics.crawler4j.crawler.Page.java", "BodyUseAPI": ["org.apache.http.entity.ContentType.getOrDefault(entity).getCharset()", "org.apache.http.entity.ContentType.getOrDefault(org.apache.http.HttpEntity)"], "Fixed commit": "8444face0bd371a0661c231f3432304b0ed5d8ab", "Url": "https://api.github.com/repos/LAS-NCSU/crawler4j", "Date": "2017-06-12T08:55:09Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { data = decompress(compressedData); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1840/buggy-version/app.src.main.java.dwai.textmessagebrowser.FullTextMessage.java", "BodyUseAPI": ["dwai.textmessagebrowser.FullTextMessage.decompress(byte[])"], "Fixed commit": "e591f4ac25446d264616cc35f6ae98d4ed669247", "Url": "https://api.github.com/repos/ColdSauce/CosmosBrowserAndroid", "Date": "2014-09-25T18:13:49Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { version.minor = java.lang.Integer.parseInt(minorStr); } catch (java.lang.NumberFormatException ex) { throw new org.laxio.piston.piston.exception.versioning.VersionParseException(\"Minor version could not be parsed into integer\", ex, string); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2688/buggy-version/src.main.java.org.laxio.piston.piston.versioning.Version.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "25645d6d8578a5581169b55852d6f7db4c214116", "Url": "https://api.github.com/repos/Laxio/PistonAPI", "Date": "2017-12-24T02:31:46Z"},
{"Line": "=>464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((y < (terminal.getHeight())) && (x < (terminal.getWidth()))) { terminal.set(y, x, new java.lang.String(java.lang.Character.toChars(character)), 7, 0, java.util.EnumSet.noneOf(ach7nbh2game.client.TerminalStyle.class), java.util.EnumSet.noneOf(ach7nbh2game.client.CellWalls.class)); } } catch (java.lang.IndexOutOfBoundsException e) { java.lang.System.err.println((\"error in setTerminal(): \" + (e.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8914/buggy-version/src.main.java.ach7nbh2game.client.GameClient.java", "BodyUseAPI": ["java.util.EnumSet.noneOf(java.lang.Class)", "ach7nbh2game.client.CursesLikeAPI.getWidth()", "ach7nbh2game.client.CursesLikeAPI.set(int,int,java.lang.String,int,int,java.util.EnumSet<E>,java.util.EnumSet<E>)", "java.lang.Character.toChars(int)", "java.util.EnumSet.noneOf(java.lang.Class)", "ach7nbh2game.client.CursesLikeAPI.getHeight()"], "Fixed commit": "6486e23ccb157272bc455271bee8938d55a701fc", "Url": "https://api.github.com/repos/nicholashh/cutthroat", "Date": "2016-01-31T17:51:46Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { cpu.getVirtualMemorySpace().writeByte(addr, value); } catch (name.bizna.ocarmsim.BreakpointException ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/281/buggy-version/src.name.bizna.ocarmsim.gdb.GDBDebugger.java", "BodyUseAPI": ["name.bizna.ocarmsim.gdb.GDBDebugger.getVirtualMemorySpace()", "cpu.getVirtualMemorySpace().writeByte(int,byte)"], "Fixed commit": "a1f2658555851c10018666620c7a26b73ebffecf", "Url": "https://api.github.com/repos/SolraBizna/jarm", "Date": "2016-10-04T15:46:49Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { buffer[i] = cpu.getVirtualMemorySpace().readByte((addr + i)); } catch (name.bizna.ocarmsim.BreakpointException ignored) { buffer[i] = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/281/buggy-version/src.name.bizna.ocarmsim.gdb.GDBDebugger.java", "BodyUseAPI": ["name.bizna.ocarmsim.gdb.GDBDebugger.getVirtualMemorySpace()", "cpu.getVirtualMemorySpace().readByte(int)"], "Fixed commit": "a1f2658555851c10018666620c7a26b73ebffecf", "Url": "https://api.github.com/repos/SolraBizna/jarm", "Date": "2016-10-04T15:46:49Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.codepath.apps.nommable.fragments.MapFragment.view = inflater.inflate(R.layout.fragment_map, container, false); } catch (android.view.InflateException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8391/buggy-version/src.com.codepath.apps.nommable.fragments.MapFragment.java", "BodyUseAPI": ["android.view.LayoutInflater.inflate(R.layout.fragment_map,android.view.ViewGroup,boolean)"], "Fixed commit": "9e9d9604fa2e666645c17679054fd89f9da1516a", "Url": "https://api.github.com/repos/zetsubo/Nommable", "Date": "2013-11-25T09:16:06Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { formController.stepToNextScreenEvent(); } catch (controller.JavaRosaException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7507/buggy-version/src.SurveyBot.SurveyModel.java", "BodyUseAPI": ["controller.FormController.stepToNextScreenEvent()"], "Fixed commit": "ced14b99cdf7494f28094927dbf473cdd5142ec2", "Url": "https://api.github.com/repos/smap-consulting/smap-survey-manager", "Date": "2014-07-20T07:15:21Z"},
{"Line": "=>1112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { subscription.unsubscribe(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5472/buggy-version/appV2.src.main.java.mobile.tiis.staging.fragments.AdministerVaccineFragment.java", "BodyUseAPI": ["rx.Subscription.unsubscribe()"], "Fixed commit": "3000e784c1406f52e3216b83f60c6f9a2b180b15", "Url": "https://api.github.com/repos/BIDMOH/TIIS2-Android-Mobile-Client-Application", "Date": "2016-10-04T04:11:48Z"},
{"Line": "=>547", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { subscription.unsubscribe(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5472/buggy-version/appV2.src.main.java.mobile.tiis.staging.fragments.AdministerVaccineOfflineFragment.java", "BodyUseAPI": ["rx.Subscription.unsubscribe()"], "Fixed commit": "3000e784c1406f52e3216b83f60c6f9a2b180b15", "Url": "https://api.github.com/repos/BIDMOH/TIIS2-Android-Mobile-Client-Application", "Date": "2016-10-04T04:11:48Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { oldContent = new org.json.JSONObject(object.getString(\"content\")); } catch (org.json.JSONException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7111/buggy-version/ca.ualberta.cmput301project.MainActivity.src.ca.ualberta.cmput301project.ExternalTaskManager.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "680617f5807f99355db0fe28476d9363b09b8244", "Url": "https://api.github.com/repos/CMPUT301F12T02/classproject", "Date": "2012-11-04T21:30:29Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { object = new org.json.JSONObject(readTask(id)); } catch (org.json.JSONException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7111/buggy-version/ca.ualberta.cmput301project.MainActivity.src.ca.ualberta.cmput301project.ExternalTaskManager.java", "BodyUseAPI": ["ca.ualberta.cmput301project.ExternalTaskManager.readTask(java.lang.String)"], "Fixed commit": "680617f5807f99355db0fe28476d9363b09b8244", "Url": "https://api.github.com/repos/CMPUT301F12T02/classproject", "Date": "2012-11-04T21:30:29Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Object data = request.parse(response.getResponseString()); return new com.mda.datagate.RequestResponseContainer(request, new com.mda.datagate.Response(Status.NOT_AUTHORITY, data)); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7098/buggy-version/src.com.mda.datagate.Controller.java", "BodyUseAPI": ["com.mda.datagate.DataGateResponse.getResponseString()", "com.mda.datagate.AbstractRequest.parse(response.getResponseString())"], "Fixed commit": "b19a4bdc65e7c0d2169c3f26570c1003e5a6f0a4", "Url": "https://api.github.com/repos/manzhda/ServerDataGate-Android", "Date": "2013-07-12T16:09:12Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { resetProjectRuntimes(jProject); this.forgetLastBuiltState(); } catch (java.io.IOException e) { jreframeworker.log.Log.error(((\"Error building \" + (jProject.getProject().getName())) + \", could not purge runtimes. Project may be in an invalid state.\"), e); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/103/buggy-version/jreframeworker.src.jreframeworker.builder.JReFrameworkerBuilder.java", "BodyUseAPI": ["jreframeworker.builder.JReFrameworkerBuilder.resetProjectRuntimes(org.eclipse.jdt.core.IJavaProject)", "jreframeworker.builder.JReFrameworkerBuilder.forgetLastBuiltState()"], "Fixed commit": "187a4b1cbf9ffc0d734bb847a202ff8b475bc799", "Url": "https://api.github.com/repos/JReFrameworker/JReFrameworker", "Date": "2015-10-20T19:08:20Z"},
{"Line": "=>780", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { de.android.fhwsapp.Database.lastMonday = subjects[w][0].get(0).getDateAsDateTime(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/508/buggy-version/app.src.main.java.de.android.fhwsapp.Database.java", "BodyUseAPI": ["subjects[w][0].get(0).getDateAsDateTime()", "subjects[w][0].get(int)"], "Fixed commit": "f917faf878861de9912d0f2df050d827d2f4c4ca", "Url": "https://api.github.com/repos/nicotin241/FhwsApp", "Date": "2017-08-01T20:25:24Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.Set<dagger.internal.Binding<?>> dependencies = new java.util.HashSet<dagger.internal.Binding<?>>(); if (sourceBinding != (Binding.UNRESOLVED)) { sourceBinding.getDependencies(dependencies, dependencies); } for (dagger.internal.Binding<?> targetBinding : dependencies) { java.lang.String targetName = namesIndex.get(targetBinding); writer.edge(sourceName, targetName); } } catch (java.lang.Exception e) { throw new java.lang.IllegalStateException(((\"Could not write binding: \\\"\" + sourceBinding) + \"\\\"\"), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3268/buggy-version/core.src.main.java.dagger.internal.GraphVisualizer.java", "BodyUseAPI": ["dagger.internal.codegen.DotWriter.edge(java.lang.String,java.lang.String)", "dagger.internal.Binding<?>.getDependencies(java.util.Set<dagger.internal.Binding<?>>,java.util.Set<dagger.internal.Binding<?>>)", "java.util.Map<dagger.internal.Binding<?>, java.lang.String>.get(dagger.internal.Binding<?>)"], "Fixed commit": "45eb7b8c8ecfef65fe79af7b1d5df5975197a59c", "Url": "https://api.github.com/repos/conflictpredictor/dagger", "Date": "2012-10-16T03:06:39Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { cliInfo.s.register(selector, java.nio.channels.SelectionKey.OP_READ, cliInfo); } catch (java.nio.channels.CancelledKeyException e) { this.channelRegistrationQueue.add(cliInfo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/9204/buggy-version/src.server.Server.java", "BodyUseAPI": ["java.nio.channels.SocketChannel.register(java.nio.channels.Selector,int,server.Server.ClientInfo)"], "Fixed commit": "9460c6a19b3960e8d007e00f684c629f30390045", "Url": "https://api.github.com/repos/renlord/ethz-asl2015", "Date": "2015-11-08T13:55:38Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { channelUrl = java.net.URLDecoder.decode(channelUrl, \"UTF-8\"); } catch (java.io.UnsupportedEncodingException e) { android.util.Log.e(\"Debug\", (\"RSSFeedParser - decoding error: \" + (e.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2306/buggy-version/app.src.main.java.com.lgallardo.qbittorrentclient.RSSFeedParser.java", "BodyUseAPI": ["java.net.URLDecoder.decode(java.lang.String,java.lang.String)"], "Fixed commit": "8ce3b68c9bb58a86a46f29b0f62a1d4cac754509", "Url": "https://api.github.com/repos/lgallard/qBittorrent-Controller", "Date": "2015-10-29T14:18:54Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { openSubtitlesClient.logOut(); return; } catch (com.ibus.opensubtitles.client.exception.OpenSubtitlesResponseException e) { thrownException = e; } catch (java.net.MalformedURLException e) { thrownException = e; } catch (java.io.IOException e) { thrownException = e; } catch (org.apache.xmlrpc.XmlRpcException e) { thrownException = e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/9155/buggy-version/MediaBeaverCore.src.main.java.com.ibus.mediabeaver.core.filesystem.MediaMover.java", "BodyUseAPI": ["com.ibus.opensubtitles.client.OpenSubtitlesClient.logOut()"], "Fixed commit": "787b5f03f4f7ba46aa0f35a3c3bebabf95d3c816", "Url": "https://api.github.com/repos/Ib01/MediaBeaver", "Date": "2014-11-18T13:03:48Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { fileBasePath = (this.getReactApplicationContext().getFilesDir().getCanonicalPath()) + \"/audioCache/\"; java.io.File fileCreate = new java.io.File(fileBasePath); if (!(fileCreate.exists())) { fileCreate.mkdirs(); } } catch (java.lang.Exception ex) { callbackMap.putBoolean(\"success\", false); callbackMap.putString(\"param\", \"create audioCache failed!\"); callback.invoke(callbackMap); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6508/buggy-version/android.src.main.java.com.keyee.recordAudio.RecordModule.java", "BodyUseAPI": ["com.keyee.recordAudio.RecordModule.getReactApplicationContext()", "java.io.File.exists()", "this.getReactApplicationContext().getFilesDir().getCanonicalPath()", "this.getReactApplicationContext().getFilesDir()", "java.io.File.mkdirs()"], "Fixed commit": "ac54d7fec86aadd1ecff48ab23f63330d47810e8", "Url": "https://api.github.com/repos/cnjon/react-native-record-audio", "Date": "2016-03-16T09:02:24Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { k11.guildwars2eventviewer.DataClasses.Event prereqEvent = k11.guildwars2eventviewer.DataClasses.Event.findEvent(k11.guildwars2eventviewer.Activities.MajorEvents.eventList, prereqList.get(i), application); if ((prereqEvent.getState().equals(Event.ACTIVE)) || (prereqEvent.getState().equals(Event.PREPARATION))) { textView.setBackgroundColor(android.graphics.Color.argb(64, 255, 255, 128)); } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2586/buggy-version/src.main.java.k11.guildwars2eventviewer.Activities.MajorEvents.java", "BodyUseAPI": ["prereqEvent.getState().equals(Event.PREPARATION)", "android.graphics.Color.argb(int,int,int,int)", "android.widget.TextView.setBackgroundColor(android.graphics.Color.argb(64, 255, 255, 128))", "prereqEvent.getState().equals(Event.ACTIVE)", "k11.guildwars2eventviewer.DataClasses.Event.findEvent(java.util.ArrayList<k11.guildwars2eventviewer.DataClasses.Event>,java.lang.String,k11.guildwars2eventviewer.EventViewerApplication)", "k11.guildwars2eventviewer.DataClasses.Event.getState()", "java.util.ArrayList<java.lang.String>.get(int)", "k11.guildwars2eventviewer.DataClasses.Event.getState()"], "Fixed commit": "f2d4fe7c1d2cb32689ddc6474df3fd2516d7f43c", "Url": "https://api.github.com/repos/KuangEleven/GuildWars2EventViewer", "Date": "2013-05-29T04:23:19Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { final java.util.Date parsedDate = parseDate(((java.lang.String) (event.getProperty().getValue()))); if (parsedDate != null) { dateTime.set(java.util.Calendar.HOUR_OF_DAY, parsedDate.getHours()); dateTime.set(java.util.Calendar.MINUTE, parsedDate.getMinutes()); isSet = true; setNewValue(); } this.valueChange(event); field.setComponentError(null); } catch (final com.vaadin.data.Validator.InvalidValueException e) { field.setComponentError(new com.vaadin.server.ErrorMessage() { private static final long serialVersionUID = 1L; @java.lang.Override public java.lang.String getFormattedHtmlMessage() { return e.getMessage(); } @java.lang.Override public au.com.vaadinutils.layout.ErrorLevel getErrorLevel() { return ErrorLevel.ERROR; } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3534/buggy-version/src.main.java.au.com.vaadinutils.layout.TimePicker.java", "BodyUseAPI": ["java.util.Calendar.set(int,int)", "au.com.vaadinutils.layout.TimePicker.valueChange(com.vaadin.data.Property.ValueChangeEvent)", "com.vaadin.ui.TextField.setComponentError(<nulltype>)", "java.util.Date.getHours()", "au.com.vaadinutils.layout.TimePicker.2.parseDate(((java.lang.String) (event.getProperty().getValue())))", "event.getProperty().getValue()", "java.util.Calendar.set(int,int)", "java.util.Date.getMinutes()", "com.vaadin.data.Property.ValueChangeEvent.getProperty()", "au.com.vaadinutils.layout.TimePicker.2.setNewValue()"], "Fixed commit": "f36ec5dcf1ec3aeae01e61f109a96cafd146d882", "Url": "https://api.github.com/repos/rlsutton1/VaadinUtils", "Date": "2017-03-01T00:00:11Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { uber1Str = uberJson.getJSONArray(\"prices\").getJSONObject(0).toString(); } finally { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3896/buggy-version/app.src.main.java.com.example.natalie.tuber.FetchUberPriceTask.java", "BodyUseAPI": ["uberJson.getJSONArray(\"prices\").getJSONObject(0).toString()", "org.json.JSONObject.getJSONArray(java.lang.String)", "uberJson.getJSONArray(\"prices\").getJSONObject(int)"], "Fixed commit": "6aaa11c826428cd3225c8ab5c7b493b522d19117", "Url": "https://api.github.com/repos/gracelu/tuber", "Date": "2015-08-12T03:25:26Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { inputStream = urlConnection.getInputStream(); } catch (java.io.FileNotFoundException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3896/buggy-version/app.src.main.java.com.example.natalie.tuber.FetchUberPriceTask.java", "BodyUseAPI": ["java.net.HttpURLConnection.getInputStream()"], "Fixed commit": "6aaa11c826428cd3225c8ab5c7b493b522d19117", "Url": "https://api.github.com/repos/gracelu/tuber", "Date": "2015-08-12T03:25:26Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { presentBar = history.getBar(instrument, period, OfferSide.BID, 0); } catch (org.ttorhcs.JFException ex) { log.error(ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8144/buggy-version/src.org.ttorhcs.JForexFstBridge.java", "BodyUseAPI": ["org.ttorhcs.IHistory.getBar(org.ttorhcs.Instrument,org.ttorhcs.Period,OfferSide.BID,int)"], "Fixed commit": "fa319f32ade57ac939b5640ba3291ffa3cf0dab7", "Url": "https://api.github.com/repos/ttorhcs/MultiJForexBridge", "Date": "2013-01-21T14:46:18Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { e.getWhoClicked().openEnchanting(e.getWhoClicked().getLocation(), true); } catch (java.lang.NullPointerException x) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5796/buggy-version/src.me.mrCookieSlime.Slimefun.Listeners.InventoryListener.java", "BodyUseAPI": ["me.mrCookieSlime.CSCoreLib.events.MenuClickEvent.getWhoClicked()", "e.getWhoClicked().getLocation()", "e.getWhoClicked().openEnchanting(e.getWhoClicked().getLocation(),boolean)", "me.mrCookieSlime.CSCoreLib.events.MenuClickEvent.getWhoClicked()"], "Fixed commit": "1bd4ce7ed954301ddffeb9b67c21581d8c7dd241", "Url": "https://api.github.com/repos/mrCookieSlime/Slimefun-3.0", "Date": "2014-12-05T13:03:06Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.context = context; intialize(); } catch (java.lang.Exception ex) { android.util.Log.e(LOG_TAG, (\"constructor: \" + (ex.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/872/buggy-version/jbbrowserlib.src.main.java.info.johannblake.widgets.jbbrowserlib.JBBrowser.java", "BodyUseAPI": ["info.johannblake.widgets.jbbrowserlib.JBBrowser.intialize()"], "Fixed commit": "1a622731fb6a39eebee3399b85a8b351d17421db", "Url": "https://api.github.com/repos/JohannBlake/JBBrowser", "Date": "2015-06-22T09:53:49Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { foreignVector.add(java.lang.Integer.valueOf(arrayEl)); } catch (java.lang.NumberFormatException e) { android.util.Log.e(com.geoffroy.ConnectionService.TAG, (\"Illegal post hash while trying to parse foreign vector: \" + arrayEl)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2987/buggy-version/src.com.geoffroy.ConnectionService.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Integer>.add(java.lang.Integer)", "java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "3a84160e7d8b25d5d05daf867ad309b96aa67b3f", "Url": "https://api.github.com/repos/LUEshi/CIS401-DroidDTN", "Date": "2012-04-18T01:15:55Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { siftedText.setText(sifter.sift()); } catch (java.lang.Exception e) { siftedText.setText(\"ERROR: Exception occurred while sifting text.\"); android.util.Log.e(\"Sift\", e.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8727/buggy-version/src.main.java.com.pebbleSifter.asyncTasks.SetSifter.java", "BodyUseAPI": ["com.pebbleSifter.sifters.PebbleSifter.sift()", "android.widget.TextView.setText(sifter.sift())"], "Fixed commit": "ba52924be1405b2b4a7bc53f7851e5eaeb6c1524", "Url": "https://api.github.com/repos/thompsnm/PebbleSifter", "Date": "2013-11-19T14:23:36Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { javax.xml.parsers.DocumentBuilderFactory dbf = javax.xml.parsers.DocumentBuilderFactory.newInstance(); javax.xml.parsers.DocumentBuilder db = dbf.newDocumentBuilder(); org.w3c.dom.Document doc = db.parse(new org.xml.sax.InputSource(new java.io.StringReader(userTokenXml))); javax.xml.xpath.XPath xPath = javax.xml.xpath.XPathFactory.newInstance().newXPath(); java.lang.String expression = \"/usertoken/personref\"; javax.xml.xpath.XPathExpression xPathExpression = xPath.compile(expression); return xPathExpression.evaluate(doc); } catch (java.lang.Exception e) { net.whydah.sso.user.helpers.UserTokenXpathHelper.log.error(\"personref missed too, returning empty\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8852/buggy-version/src.main.java.net.whydah.sso.user.helpers.UserTokenXpathHelper.java", "BodyUseAPI": ["javax.xml.xpath.XPathExpression.evaluate(org.w3c.dom.Document)", "javax.xml.xpath.XPath.compile(java.lang.String)", "javax.xml.xpath.XPathFactory.newXPath()", "javax.xml.parsers.DocumentBuilder.parse(org.xml.sax.InputSource)", "javax.xml.parsers.DocumentBuilderFactory.newInstance()", "javax.xml.xpath.XPathFactory.newInstance()", "javax.xml.parsers.DocumentBuilderFactory.newDocumentBuilder()"], "Fixed commit": "8450a1dbb520ab3af9289c1df8a5eb5f87ea2388", "Url": "https://api.github.com/repos/Cantara/Whydah-TypeLib", "Date": "2016-05-08T13:50:55Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (!(returnType.equals(symbolTable.getCurrentFunction().getType()))) { errorReporter.reportError(\"Incorrect return type for function\", ctx.semiExpr()); } } catch (trinity.CustomExceptions.SymbolNotFoundException e) { errorReporter.reportError(\"No fuction to return from\", ctx.semiExpr()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1048/buggy-version/src.main.java.trinity.visitors.TypeVisitor.java", "BodyUseAPI": ["symbolTable.getCurrentFunction().getType()", "trinity.visitors.Type.equals(symbolTable.getCurrentFunction().getType())", "trinity.visitors.ErrorReporter.reportError(java.lang.String,ctx.semiExpr())", "TrinityParser.BlockContext.semiExpr()", "trinity.visitors.SymbolTable.getCurrentFunction()"], "Fixed commit": "b763041ad268494de9cda20b2d4175b71d707871", "Url": "https://api.github.com/repos/Medeah/Trinity", "Date": "2015-04-28T12:35:12Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { lastRun = java.lang.Integer.parseInt(cursor.getString(0)); } catch (java.lang.Exception e) { lastRun = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2541/buggy-version/app.src.main.java.com.onerun.onerun.onerun.Model.RunDataSource.java", "BodyUseAPI": ["java.lang.Integer.parseInt(cursor.getString(0))", "android.database.Cursor.getString(int)"], "Fixed commit": "da2010b4d30c715e0256ed361af09f47627d989c", "Url": "https://api.github.com/repos/HarrisYip/oneRun", "Date": "2015-03-14T18:18:53Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { name = nameList.get(i); } catch (java.lang.IndexOutOfBoundsException e) { size = oisList.size(); i = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6070/buggy-version/assignment2.edu.purdue.cs490.ChannelInterface.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "105df7387e303291ee19eb0b33a45bdb7518344f", "Url": "https://api.github.com/repos/markwyang/CS490", "Date": "2015-03-23T01:56:21Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.awt.Robot r = new java.awt.Robot(); r.keyPress(java.awt.event.KeyEvent.VK_BACK_SPACE); } catch (java.awt.AWTException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6837/buggy-version/src.main.java.View.ManageViewElements.java", "BodyUseAPI": ["java.awt.Robot.keyPress(int)"], "Fixed commit": "7d8d9d3a0c2c02d5beae182e262d315b7ec2e1f5", "Url": "https://api.github.com/repos/Vshurig/Messenger", "Date": "2016-09-22T19:41:47Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { org.jboss.seam.core.Events.instance().raiseEvent(EventNames.FLUSH_EVENT); } finally { java.lang.Long currentTimestamp = seamReload.getCurrentCacheTimestamp(); if (currentTimestamp != null) { lastCacheKey = seamReload.getCurrentCacheTimestamp(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2393/buggy-version/nuxeo-platform-webapp-base.src.main.java.org.nuxeo.ecm.webapp.seam.NuxeoSeamHotReloadContextKeeper.java", "BodyUseAPI": ["org.jboss.seam.core.Events.instance()", "org.jboss.seam.core.Events.instance().raiseEvent(EventNames.FLUSH_EVENT)"], "Fixed commit": "5bf1865b5e7919a712fc6eeb1c0b6b268a4d469b", "Url": "https://api.github.com/repos/nuxeo/nuxeo-jsf", "Date": "2012-07-09T20:19:21Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { result[i] = ((core.game.GameDescription.SpriteData) (this.gameSprites[i].clone())); } catch (java.lang.CloneNotSupportedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/203/buggy-version/src.core.game.SLDescription.java", "BodyUseAPI": ["this.gameSprites[i].clone()"], "Fixed commit": "5378eafee80dca7ecffcb8abbd0fa05e507f11b2", "Url": "https://api.github.com/repos/EssexUniversityMCTS/gvgai", "Date": "2016-11-16T03:46:02Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.System.out.println(saveFile.getCanonicalPath()); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8142/buggy-version/src.frontend.aiTrain.AITrainGameWindow.java", "BodyUseAPI": ["java.io.File.getCanonicalPath()", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "09482bcc90ce2231f611697ce666918fc04f1a59", "Url": "https://api.github.com/repos/mchlp/TetrisGameAI", "Date": "2017-12-26T00:53:59Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.segment.analytics.Analytics.with(this.getReactApplicationContext()).identify(userId, toTraits(traits), null); } catch (java.lang.Exception e) { android.util.Log.e(\"SegmentAnalyticsModule\", (((\"Failed to identify \" + userId) + \". \") + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3732/buggy-version/android.src.main.java.com.charlires.segmentanalytics.SegmentAnalyticsModule.java", "BodyUseAPI": ["com.charlires.segmentanalytics.SegmentAnalyticsModule.toTraits(com.facebook.react.bridge.ReadableMap)", "com.segment.analytics.Analytics.with(this.getReactApplicationContext())", "com.charlires.segmentanalytics.SegmentAnalyticsModule.getReactApplicationContext()", "com.segment.analytics.Analytics.with(this.getReactApplicationContext()).identify(java.lang.String,com.segment.analytics.Traits,<nulltype>)"], "Fixed commit": "ce4a285284626558c40e3dad536fed6fd6665bc2", "Url": "https://api.github.com/repos/EdtechFoundry/react-native-segment-analytics", "Date": "2017-01-23T09:27:49Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.segment.analytics.Analytics.with(this.getReactApplicationContext()).screen(null, screenName, this.toProperties(properties)); } catch (java.lang.Exception e) { android.util.Log.e(\"SegmentAnalyticsModule\", (((\"Failed to screen \" + screenName) + \". \") + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3732/buggy-version/android.src.main.java.com.charlires.segmentanalytics.SegmentAnalyticsModule.java", "BodyUseAPI": ["com.segment.analytics.Analytics.with(this.getReactApplicationContext()).screen(<nulltype>,java.lang.String,com.segment.analytics.Properties)", "com.segment.analytics.Analytics.with(this.getReactApplicationContext())", "com.charlires.segmentanalytics.SegmentAnalyticsModule.getReactApplicationContext()", "com.charlires.segmentanalytics.SegmentAnalyticsModule.toProperties(com.facebook.react.bridge.ReadableMap)"], "Fixed commit": "ce4a285284626558c40e3dad536fed6fd6665bc2", "Url": "https://api.github.com/repos/EdtechFoundry/react-native-segment-analytics", "Date": "2017-01-23T09:27:49Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.segment.analytics.Analytics.with(this.getReactApplicationContext()).alias(newId, null); } catch (java.lang.Exception e) { android.util.Log.e(\"SegmentAnalyticsModule\", (((\"Failed to alias \" + newId) + \". \") + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3732/buggy-version/android.src.main.java.com.charlires.segmentanalytics.SegmentAnalyticsModule.java", "BodyUseAPI": ["com.charlires.segmentanalytics.SegmentAnalyticsModule.getReactApplicationContext()", "com.segment.analytics.Analytics.with(this.getReactApplicationContext())", "com.segment.analytics.Analytics.with(this.getReactApplicationContext()).alias(java.lang.String,<nulltype>)"], "Fixed commit": "ce4a285284626558c40e3dad536fed6fd6665bc2", "Url": "https://api.github.com/repos/EdtechFoundry/react-native-segment-analytics", "Date": "2017-01-23T09:27:49Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.segment.analytics.Analytics.with(this.getReactApplicationContext()).track(trackText, this.toProperties(properties)); } catch (java.lang.Exception e) { android.util.Log.e(\"SegmentAnalyticsModule\", (((\"Failed to track \" + trackText) + \". \") + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3732/buggy-version/android.src.main.java.com.charlires.segmentanalytics.SegmentAnalyticsModule.java", "BodyUseAPI": ["com.charlires.segmentanalytics.SegmentAnalyticsModule.toProperties(com.facebook.react.bridge.ReadableMap)", "com.segment.analytics.Analytics.with(this.getReactApplicationContext()).track(java.lang.String,com.segment.analytics.Properties)", "com.charlires.segmentanalytics.SegmentAnalyticsModule.getReactApplicationContext()", "com.segment.analytics.Analytics.with(this.getReactApplicationContext())"], "Fixed commit": "ce4a285284626558c40e3dad536fed6fd6665bc2", "Url": "https://api.github.com/repos/EdtechFoundry/react-native-segment-analytics", "Date": "2017-01-23T09:27:49Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { endpoint.process(exchange); } catch (java.lang.Exception e) { throw new org.activiti.engine.ActivitiException(\"Exception while processing exchange\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6018/buggy-version/modules.activiti-camel.src.main.java.org.activiti.camel.CamelBehavior.java", "BodyUseAPI": ["org.activiti.camel.ActivitiEndpoint.process(org.apache.camel.Exchange)"], "Fixed commit": "fc3e6df006a6a57542b477ab2e9f3904a6001394", "Url": "https://api.github.com/repos/yaotj/Activiti", "Date": "2015-08-10T20:03:15Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { scanner = new java.util.Scanner(is).useDelimiter(\"\\\\A\"); return scanner.hasNext() ? scanner.next() : \"\"; } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6012/buggy-version/src.com.relevantcodes.extentreports.support.Stream.java", "BodyUseAPI": ["java.util.Scanner.useDelimiter(java.lang.String)", "java.util.Scanner.next()", "java.util.Scanner.hasNext()"], "Fixed commit": "d2d3479a634ea5a36bc974ed972aed67923427ba", "Url": "https://api.github.com/repos/anshooarora/extentreports-java", "Date": "2015-02-03T15:56:05Z"},
{"Line": "=>779", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { modController.transition(LoaderState.SERVER_STOPPED); } catch (cpw.mods.fml.common.LoaderException e) { modController.forceState(LoaderState.SERVER_STOPPED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7887/buggy-version/fml.common.cpw.mods.fml.common.Loader.java", "BodyUseAPI": ["cpw.mods.fml.common.LoadController.transition(LoaderState.SERVER_STOPPED)"], "Fixed commit": "845a9c5792e3e455c268111461c76decf82dd989", "Url": "https://api.github.com/repos/Parker8283/MinecraftForge", "Date": "2013-03-08T00:37:52Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.googlecode.objectify.ObjectifyService.register(com.kdcloud.ext.rehab.db.CompleteExercise.class); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8643/buggy-version/kdcloud-webservice.src.main.java.com.kdcloud.ext.rehab.doctor.GetUserSchedulingRestlet.java", "BodyUseAPI": ["com.googlecode.objectify.ObjectifyService.register(java.lang.Class)"], "Fixed commit": "ee8a89e25c3766cb37d3f7582768cb68779eb233", "Url": "https://api.github.com/repos/vispax/kd-cloud", "Date": "2013-02-05T20:26:56Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.content.Intent rateReviewIntent = new android.content.Intent(android.content.Intent.ACTION_VIEW); rateReviewIntent.setData(android.net.Uri.parse(getString(R.string.googleplay_url))); startActivity(rateReviewIntent); } catch (android.content.ActivityNotFoundException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8720/buggy-version/app.src.main.Java.com.chernenkovit.watcher.activities.ActivityAbout.java", "BodyUseAPI": ["android.net.Uri.parse(getString(R.string.googleplay_url))", "android.content.Intent.setData(android.net.Uri.parse(getString(R.string.googleplay_url)))", "com.chernenkovit.watcher.activities.ActivityAbout.getString(R.string.googleplay_url)", "com.chernenkovit.watcher.activities.ActivityAbout.startActivity(android.content.Intent)"], "Fixed commit": "4c675890cabe81b76dfacfc51e261a1e26734654", "Url": "https://api.github.com/repos/chernenkovit/CartoonWatcher", "Date": "2017-01-25T16:11:11Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { getWaitingQueue(dir).await(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/799/buggy-version/Bridge.java", "BodyUseAPI": ["Bridge.getWaitingQueue(Bridge.Direction)", "java.util.concurrent.locks.Condition.await()"], "Fixed commit": "64b5d768a6e19cb84b4ee05b4625721fcf4b89f3", "Url": "https://api.github.com/repos/zkmake520/Concurrency_Control", "Date": "2016-02-12T22:41:49Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(500); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/799/buggy-version/Car.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "64b5d768a6e19cb84b4ee05b4625721fcf4b89f3", "Url": "https://api.github.com/repos/zkmake520/Concurrency_Control", "Date": "2016-02-12T22:41:49Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String previousSeekPosition = getPersistedString(\"sound\"); int intValue = java.lang.Integer.parseInt(previousSeekPosition.replaceAll(\"[^0-9]\", \"\")); mSeekBarProgress = intValue; } catch (java.util.UnknownFormatConversionException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1878/buggy-version/app.src.main.java.com.byteshaft.keyboard.CustomSeekBar.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "com.byteshaft.keyboard.CustomSeekBar.getPersistedString(java.lang.String)", "java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "f969ce862ecc01a3353cb6027789021b3977446b", "Url": "https://api.github.com/repos/imranhakeem/keyboard", "Date": "2015-06-07T16:52:11Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { final int glass_cup = 20003; final int fish_bowl = 11700; me.exphc.ExphcTweaks.ShapedRecipe cupRecipe = new me.exphc.ExphcTweaks.ShapedRecipe(new me.exphc.ExphcTweaks.ItemStack(glass_cup, 3)); cupRecipe.shape(\"G G\", \"G G\", \"GGG\"); cupRecipe.setIngredient('G', Material.THIN_GLASS); me.exphc.ExphcTweaks.Bukkit.addRecipe(cupRecipe); } catch (java.lang.Exception e) { log.warning((\"Not adding Trees++ glass cup recipe: \" + e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6458/buggy-version/ExphcTweaks.java", "BodyUseAPI": ["me.exphc.ExphcTweaks.ShapedRecipe.shape(java.lang.String,java.lang.String,java.lang.String)", "me.exphc.ExphcTweaks.Bukkit.addRecipe(me.exphc.ExphcTweaks.ShapedRecipe)", "me.exphc.ExphcTweaks.ShapedRecipe.setIngredient(char,Material.THIN_GLASS)"], "Fixed commit": "1bc78b1a91c3d2b1059adf082e4d86881475c265", "Url": "https://api.github.com/repos/mushroomhostage/ExphcTweaks", "Date": "2012-08-14T20:05:47Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { byte[] result = new byte[len]; in.readFully(result); return result; } catch (java.lang.OutOfMemoryError e) { throw new java.io.IOException((\"Couldn't allocate data block with the following size: \" + len), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6066/buggy-version/x5.common.com.xored.x5.common.src.com.xored.x5.common.BinaryReader.java", "BodyUseAPI": ["java.io.DataInputStream.readFully(byte[])"], "Fixed commit": "ee7bb4b16f8ec901a4bdb6ec2e6ff42d5a76e817", "Url": "https://api.github.com/repos/xored/synergy", "Date": "2011-12-01T14:02:50Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { final com.microsoftopentechnologies.tooling.msservices.serviceexplorer.Node node = e.getAction().getNode(); node.setLoading(true); com.microsoftopentechnologies.tooling.msservices.helpers.azure.sdk.AzureSDKManagerImpl.getManager().deleteStorageAccount(storageAccount); com.microsoftopentechnologies.tooling.msservices.components.DefaultLoader.getIdeHelper().invokeLater(new java.lang.Runnable() { @java.lang.Override public void run() { getParent().removeDirectChildNode(node); } }); } catch (com.microsoftopentechnologies.tooling.msservices.helpers.azure.AzureCmdException ex) { com.microsoftopentechnologies.tooling.msservices.components.DefaultLoader.getUIHelper().showException(\"Error deleting storage account\", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4730/buggy-version/src.common.src.com.microsoftopentechnologies.tooling.msservices.serviceexplorer.azure.storage.StorageNode.java", "BodyUseAPI": ["com.microsoftopentechnologies.tooling.msservices.components.DefaultLoader.getIdeHelper().invokeLater(java.lang.Runnable)", "getParent().removeDirectChildNode(com.microsoftopentechnologies.tooling.msservices.serviceexplorer.Node)", "com.microsoftopentechnologies.tooling.msservices.helpers.azure.sdk.AzureSDKManagerImpl.getManager()", "java.lang.Object()", "com.microsoftopentechnologies.tooling.msservices.helpers.azure.sdk.AzureSDKManagerImpl.getManager().deleteStorageAccount(com.microsoftopentechnologies.tooling.msservices.model.storage.StorageAccount)", "com.microsoftopentechnologies.tooling.msservices.serviceexplorer.Node.setLoading(boolean)", "e.getAction().getNode()", "com.microsoftopentechnologies.tooling.msservices.serviceexplorer.azure.storage.StorageNode.DeleteStorageAccountAction.2.getParent()", "com.microsoftopentechnologies.tooling.msservices.serviceexplorer.NodeActionEvent.getAction()", "com.microsoftopentechnologies.tooling.msservices.components.DefaultLoader.getIdeHelper()"], "Fixed commit": "f001a9aaf818de681ba5c09746efe64c31d16856", "Url": "https://api.github.com/repos/akrakovsky/msopentech-tools-for-intellij", "Date": "2015-06-12T15:07:41Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { server.start(); } catch (java.lang.Exception e) { throw new java.io.IOException(\"Failed to start Jetty\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5851/buggy-version/src.java.winstone.Launcher.java", "BodyUseAPI": ["org.eclipse.jetty.server.Server.start()"], "Fixed commit": "df85508bb687819c6c9cc4ea8fe24a39cdad247f", "Url": "https://api.github.com/repos/jenkinsci/winstone", "Date": "2013-10-04T06:27:43Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { server.stop(); } catch (java.lang.Exception e) { winstone.Logger.log(Logger.INFO, winstone.Launcher.RESOURCES, \"Launcher.FailedShutdown\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5851/buggy-version/src.java.winstone.Launcher.java", "BodyUseAPI": ["org.eclipse.jetty.server.Server.stop()"], "Fixed commit": "df85508bb687819c6c9cc4ea8fe24a39cdad247f", "Url": "https://api.github.com/repos/jenkinsci/winstone", "Date": "2013-10-04T06:27:43Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return s != null ? java.lang.Integer.parseInt(s) : def; } catch (java.lang.NumberFormatException e) { return def; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1624/buggy-version/src.iit.csp595.servlet.ServletUtils.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "b574e6690ac8d30e4b46f68577bc4fd5412086a2", "Url": "https://api.github.com/repos/philippannenko/csp-595", "Date": "2014-10-09T04:39:49Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return s != null ? java.lang.Long.parseLong(s) : def; } catch (java.lang.NumberFormatException e) { return def; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1624/buggy-version/src.iit.csp595.servlet.ServletUtils.java", "BodyUseAPI": ["java.lang.Long.parseLong(java.lang.String)"], "Fixed commit": "b574e6690ac8d30e4b46f68577bc4fd5412086a2", "Url": "https://api.github.com/repos/philippannenko/csp-595", "Date": "2014-10-09T04:39:49Z"},
{"Line": "=>520", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (!(mEnable)) return super.onTouchEvent(event); mHelper.processTouchEvent(event); return true; } catch (java.lang.IllegalArgumentException ignored) { ignored.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3416/buggy-version/fragmentation_swipeback.src.main.java.me.yokeyword.fragmentation.SwipeBackLayout.java", "BodyUseAPI": ["android.widget.FrameLayout.onTouchEvent(android.view.MotionEvent)", "android.support.v4.widget.ViewDragHelper.processTouchEvent(android.view.MotionEvent)"], "Fixed commit": "8060775b9690db9ca0e696e96e14fa349d205a90", "Url": "https://api.github.com/repos/LonelyMushroom/Fragmentation", "Date": "2017-10-09T12:26:59Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return findResource(path); } catch (com.github.onsdigital.zebedee.exceptions.BadRequestException e) { if (path.startsWith(\"/visualisations/\")) { return findResource((path + \"/index.html\")); } throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/688/buggy-version/zebedee-reader.src.main.java.com.github.onsdigital.zebedee.reader.CollectionReader.java", "BodyUseAPI": ["com.github.onsdigital.zebedee.reader.CollectionReader.findResource(java.lang.String)"], "Fixed commit": "ecbdf3f49f5c8854be3532c306b0efb3acd6a6cf", "Url": "https://api.github.com/repos/ONSdigital/zebedee", "Date": "2017-05-24T12:28:53Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return publishedContentReader.getResource(path); } catch (com.github.onsdigital.zebedee.exceptions.BadRequestException e) { if (path.startsWith(\"/visualisations/\")) { return publishedContentReader.getResource((path + \"/index.html\")); } throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/688/buggy-version/zebedee-reader.src.main.java.com.github.onsdigital.zebedee.reader.ZebedeeReader.java", "BodyUseAPI": ["com.github.onsdigital.zebedee.reader.ContentReader.getResource(java.lang.String)"], "Fixed commit": "ecbdf3f49f5c8854be3532c306b0efb3acd6a6cf", "Url": "https://api.github.com/repos/ONSdigital/zebedee", "Date": "2017-05-24T12:28:53Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.io.File json = new java.io.File(((((android.os.Environment.getExternalStorageDirectory().getAbsolutePath()) + (at.schuschu.android.rssilogger.LoggerMain.rssi_dir)) + (java.io.File.separator)) + \"feature_map.json\")); if (json.exists()) { java.io.BufferedReader br; br = new java.io.BufferedReader(new java.io.FileReader(json)); com.google.gson.Gson gson = new com.google.gson.Gson(); feature_map = gson.fromJson(br, feature_map.getClass()); } } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3901/buggy-version/app.src.main.java.at.schuschu.android.rssilogger.LoggerMain.java", "BodyUseAPI": ["android.os.Environment.getExternalStorageDirectory().getAbsolutePath()", "android.os.Environment.getExternalStorageDirectory()", "java.util.HashMap<java.lang.String, java.util.HashMap<java.lang.String, java.util.HashMap<java.lang.String, java.lang.Float>>>.getClass()", "com.google.gson.Gson.fromJson(java.io.BufferedReader,java.lang.Class<? extends java.util.HashMap>)", "java.io.File.exists()"], "Fixed commit": "f3342718430d0d6298a0f223f471e624a761ef7c", "Url": "https://api.github.com/repos/schuschu/SPS2014-RSSI", "Date": "2014-07-29T11:35:59Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return template.queryForObject(sql, new java.lang.Object[]{ email }, java.lang.String.class); } catch (org.springframework.dao.DataAccessException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3799/buggy-version/src.main.java.in.javahome.ims.dao.RegisterDAO.java", "BodyUseAPI": ["org.springframework.jdbc.core.JdbcTemplate.queryForObject(java.lang.String,java.lang.Object[],java.lang.Class)"], "Fixed commit": "75ea44fee3d278c15af95f7ce3bbf90c57246578", "Url": "https://api.github.com/repos/javahometech/ims", "Date": "2016-01-21T10:06:00Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((!(file.isFile())) && (!(file.createNewFile()))) throw new java.io.IOException(); } catch (java.io.IOException e) { java.lang.System.err.println((\"Error creating new file: \" + (file.getAbsolutePath()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8205/buggy-version/LineFileWriter.java", "BodyUseAPI": ["java.io.File.isFile()", "java.io.File.createNewFile()"], "Fixed commit": "705b1cf623f951b79a1ab88ae338741fa38f5aa1", "Url": "https://api.github.com/repos/xavierleblond/rushHour", "Date": "2014-02-24T17:10:14Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { int month = java.lang.Integer.parseInt(input); if (month <= 12) { etExpiryDate.setText(((etExpiryDate.getText().toString()) + \"/\")); etExpiryDate.setSelection(etExpiryDate.getText().toString().length()); }else { etExpiryDate.setText(((id.co.veritrans.sdk.coreflow.core.Constants.MONTH_COUNT) + \"/\")); etExpiryDate.setSelection(etExpiryDate.getText().toString().length()); } } catch (java.lang.Exception e) { id.co.veritrans.sdk.coreflow.core.Logger.e(e.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3420/buggy-version/uiflow.src.main.java.id.co.veritrans.sdk.uiflow.fragments.AddCardDetailsFragment.java", "BodyUseAPI": ["etExpiryDate.getText().toString().length()", "etExpiryDate.getText().toString()", "java.lang.Integer.parseInt(java.lang.String)", "etExpiryDate.getText().toString()", "android.widget.EditText.setSelection(etExpiryDate.getText().toString().length())", "android.widget.EditText.getText()", "android.widget.EditText.setText(((etExpiryDate.getText().toString()) + \"/\"))", "android.widget.EditText.getText()", "android.widget.EditText.setSelection(etExpiryDate.getText().toString().length())", "android.widget.EditText.setText(((id.co.veritrans.sdk.coreflow.core.Constants.MONTH_COUNT) + \"/\"))", "etExpiryDate.getText().toString().length()", "etExpiryDate.getText().toString()", "android.widget.EditText.getText()"], "Fixed commit": "7c3e209a16e92d8f07d88f4b610efaeba9c0bb6d", "Url": "https://api.github.com/repos/veritrans/veritrans-android", "Date": "2016-11-21T10:39:55Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { encodedParamValue = java.net.URLEncoder.encode(entry.getValue(), Charsets.UTF_8.name()); } catch (java.io.UnsupportedEncodingException ex) { throw new java.lang.RuntimeException(\"UTF-8 is not supported on this device\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3022/buggy-version/src.main.java.org.sagebionetworks.bridge.sdk.BaseApiCaller.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()", "Charsets.UTF_8.name()", "java.net.URLEncoder.encode(java.lang.String,Charsets.UTF_8.name())"], "Fixed commit": "1747b3e04ab6224416985bba2077a8169b098b15", "Url": "https://api.github.com/repos/alxdarksage/BridgeJavaSDK", "Date": "2014-12-04T22:37:07Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return (this.get(s)) != null; } catch (java.util.NoSuchElementException e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3860/buggy-version/src.HashTable.java", "BodyUseAPI": ["HashTable.get(java.lang.String)"], "Fixed commit": "263791dac1b3583b91fe7f3bda7d46f8af8b4155", "Url": "https://api.github.com/repos/cliffanderson/HashTable", "Date": "2016-03-30T13:32:10Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.reflect.Method method = sysclass.getDeclaredMethod(\"addURL\", new java.lang.Class[]{ java.net.URL.class }); method.setAccessible(true); method.invoke(sysloader, new java.lang.Object[]{ new java.io.File(v_modsDir, name).toURI().toURL() }); } catch (java.lang.Throwable t) { t.printStackTrace(); throw new java.io.IOException(\"Error, could not add URL to system classloader\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7562/buggy-version/src.main.java.micdoodle8.mods.miccore.DepLoader.java", "BodyUseAPI": ["java.io.File.toURI()", "java.lang.reflect.Method.invoke(java.net.URLClassLoader,java.lang.Object[])", "java.lang.reflect.Method.setAccessible(boolean)", "java.net.URI.toURL()", "java.lang.Class.getDeclaredMethod(java.lang.String,java.lang.Class[])"], "Fixed commit": "c2c3324ab69f7c8943bbc01ba19b65d2b000a52f", "Url": "https://api.github.com/repos/micdoodle8/MicdoodleCore", "Date": "2014-10-03T21:40:07Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { host = java.net.InetAddress.getLocalHost().getHostName(); } catch (java.net.UnknownHostException e) { try { host = java.lang.Runtime.getRuntime().exec(\"hostname\").toString(); } catch (java.io.IOException e1) { host = java.net.InetAddress.getLocalHost().toString(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6765/buggy-version/src.main.java.cloudade.server.auth.mongo.info.ServerInfoService.java", "BodyUseAPI": ["java.net.InetAddress.getHostName()", "java.net.InetAddress.getLocalHost()"], "Fixed commit": "b31c1f83d63a5941256fe2d5f3fd67b045c5edcb", "Url": "https://api.github.com/repos/cloudade/authorization-server-with-mongodb", "Date": "2015-03-18T07:46:33Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return new java.io.File(s).getCanonicalFile(); } catch (java.io.IOException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1493/buggy-version/src.main.java.bolt.web.coffee.command.FileConverter.java", "BodyUseAPI": ["java.io.File.getCanonicalFile()"], "Fixed commit": "3fa867b2aa94fc078146662ca4b151f1de801836", "Url": "https://api.github.com/repos/mbolt35/coffee-graph", "Date": "2012-06-28T05:16:39Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { res = new flexjson.JSONDeserializer<org.openremote.rest.GenericResourceResultWithErrorMessage>().use(null, org.openremote.rest.GenericResourceResultWithErrorMessage.class).use(\"result\", java.util.ArrayList.class).use(\"result.values\", org.openremote.controllercommand.domain.ControllerCommandDTO.class).deserialize(str); } catch (java.lang.RuntimeException e) { org.openremote.controller.service.BeehiveCommandCheckService.log.error(\"Failed to deserialize commands from remote command service : ''{0}''.\", e, str); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6572/buggy-version/controller.src.main.java.org.openremote.controller.service.BeehiveCommandCheckService.java", "BodyUseAPI": ["new flexjson.JSONDeserializer<org.openremote.rest.GenericResourceResultWithErrorMessage>().use(null, org.openremote.rest.GenericResourceResultWithErrorMessage.class).use(\"result\", java.util.ArrayList.class).use(java.lang.String,java.lang.Class)", "new flexjson.JSONDeserializer<org.openremote.rest.GenericResourceResultWithErrorMessage>().use(null, org.openremote.rest.GenericResourceResultWithErrorMessage.class).use(\"result\", java.util.ArrayList.class).use(\"result.values\", org.openremote.controllercommand.domain.ControllerCommandDTO.class).deserialize(java.lang.String)", "new flexjson.JSONDeserializer<org.openremote.rest.GenericResourceResultWithErrorMessage>().use(null, org.openremote.rest.GenericResourceResultWithErrorMessage.class).use(java.lang.String,java.lang.Class)", "flexjson.JSONDeserializer<org.openremote.rest.GenericResourceResultWithErrorMessage>.use(<nulltype>,java.lang.Class)"], "Fixed commit": "79b9de5767a2b2abe9aff19a13b3be1bd340cef1", "Url": "https://api.github.com/repos/openremote/Controller", "Date": "2016-09-14T14:57:14Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { grails.build.logging.GrailsConsole.getInstance().error((((\"Error occurred calling AST injector [\" + (injector.getClass().getName())) + \"]: \") + (e.getMessage())), e); } catch (java.lang.Throwable t) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6835/buggy-version/grails-core.src.main.groovy.org.codehaus.groovy.grails.compiler.injection.EntityASTTransformation.java", "BodyUseAPI": ["grails.build.logging.GrailsConsole.getInstance().error((((\"Error occurred calling AST injector [\" + (injector.getClass().getName())) + \"]: \") + (e.getMessage())),java.lang.RuntimeException)", "org.codehaus.groovy.grails.compiler.injection.ClassInjector.getClass()", "grails.build.logging.GrailsConsole.getInstance()", "injector.getClass().getName()", "java.lang.RuntimeException.getMessage()"], "Fixed commit": "81de50de3d42dc274ac4e17b1e7832d21e74ec6e", "Url": "https://api.github.com/repos/grails/grails-core", "Date": "2014-01-07T16:59:47Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { path = java.net.URLDecoder.decode(path, \"UTF-8\"); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6395/buggy-version/src.client.olddays.mod_OldDays.java", "BodyUseAPI": ["java.net.URLDecoder.decode(java.lang.String,java.lang.String)"], "Fixed commit": "6b940b54cb2173837210a84779de47f163584f5d", "Url": "https://api.github.com/repos/Exalm/Minecraft-mods", "Date": "2014-03-04T17:34:08Z"},
{"Line": "=>3180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { path = java.net.URLDecoder.decode(path, \"UTF-8\"); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6395/buggy-version/src.client-client.ssp.Minecraft.java", "BodyUseAPI": ["java.net.URLDecoder.decode(java.lang.String,java.lang.String)"], "Fixed commit": "6b940b54cb2173837210a84779de47f163584f5d", "Url": "https://api.github.com/repos/Exalm/Minecraft-mods", "Date": "2014-03-04T17:34:08Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (revision == null) { entity = providerFactory.getProvider(org.jboss.pressgang.ccms.provider.ContentSpecProvider.class).getContentSpec(id); }else { entity = providerFactory.getProvider(org.jboss.pressgang.ccms.provider.ContentSpecProvider.class).getContentSpec(id, revision); } } catch (org.jboss.pressgang.ccms.server.utils.org.jboss.pressgang.ccms.provider e) { throw new org.jboss.resteasy.spi.NotFoundException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6244/buggy-version/src.main.java.org.jboss.pressgang.ccms.server.utils.ContentSpecUtilities.java", "BodyUseAPI": ["providerFactory.getProvider(org.jboss.pressgang.ccms.provider.ContentSpecProvider.class).getContentSpec(java.lang.Integer)", "org.jboss.pressgang.ccms.provider.DBProviderFactory.getProvider(java.lang.Class)", "providerFactory.getProvider(org.jboss.pressgang.ccms.provider.ContentSpecProvider.class).getContentSpec(java.lang.Integer,java.lang.Integer)", "org.jboss.pressgang.ccms.provider.DBProviderFactory.getProvider(java.lang.Class)"], "Fixed commit": "d6ca3426aac50b354df815a56fb1a1380672c506", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSREST", "Date": "2013-08-06T05:48:14Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.content.Intent intent = new android.content.Intent(android.content.Intent.ACTION_VIEW); intent.setDataAndType(android.net.Uri.fromFile(currentFile), \"application/pdf\"); context.startActivity(intent); } catch (android.content.ActivityNotFoundException e) { android.widget.Toast.makeText(context, \"\u0423 \u0432\u0430\u0441 \u043d\u0435\u0442 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u0434\u043b\u044f \u043e\u0442\u043a\u0440\u044b\u0442\u0438\u044f PDF\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1222/buggy-version/src.main.java.com.Vshkole.utils.BookPDFLoader.java", "BodyUseAPI": ["android.content.Intent.setDataAndType(android.net.Uri.fromFile(currentFile),java.lang.String)", "android.net.Uri.fromFile(java.io.File)", "android.content.Context.startActivity(android.content.Intent)"], "Fixed commit": "d06ba00d678a9a2d7b774bc25d2665884eb90af5", "Url": "https://api.github.com/repos/sanchousese/Vshkole", "Date": "2015-04-27T13:02:09Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { processSingleRequest(((com.google.gson.JsonObject) (requests.get(r))), jsonToken, httpRequest, out); } catch (java.lang.Exception e) { handleException(out, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2542/buggy-version/BimServer.src.org.bimserver.JsonHandler.java", "BodyUseAPI": ["com.google.gson.JsonArray.get(int)", "org.bimserver.JsonHandler.processSingleRequest(((com.google.gson.JsonObject) (requests.get(r))),java.lang.String,javax.servlet.http.HttpServletRequest,com.google.gson.stream.JsonWriter)"], "Fixed commit": "7a87f48bf8561a7f75c266a0d54435ed3f8d8193", "Url": "https://api.github.com/repos/opensourceBIM/BIMserver", "Date": "2013-09-27T13:55:16Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return format.format(o, pattern); } catch (java.lang.Exception e) { org.beetl.core.exception.BeetlException ex = new org.beetl.core.exception.BeetlException(org.beetl.core.exception.BeetlException.NATIVE_CALL_EXCEPTION, \"\u8c03\u7528\u683c\u5f0f\u5316\u51fd\u6570\u629b\u51fa\u5f02\u5e38\", e); ex.pushToken(token); throw ex; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3584/buggy-version/beetl-core.src.main.java.org.beetl.core.statement.FormatExpression.java", "BodyUseAPI": ["org.beetl.core.Format.format(java.lang.Object,java.lang.String)"], "Fixed commit": "0098191a18c97c9cd2c9bb1ece57833a0301ca5f", "Url": "https://api.github.com/repos/gyk001/beetl2.0", "Date": "2014-10-27T09:57:20Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.Map<java.lang.String, java.lang.String> dimensions = new java.util.HashMap<java.lang.String, java.lang.String>(); dimensions.put(nameLog, valueLog); dimensions.put(\"ParseUserId\", com.parse.ParseUser.getCurrentUser().getObjectId()); com.flurry.android.FlurryAgent.logEvent(nameLog, dimensions); com.parse.ParseAnalytics.trackEventInBackground(nameLog, dimensions); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3075/buggy-version/app.src.main.java.dariogonzalez.fitplaygames.utils.Utils.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,com.parse.ParseUser.getCurrentUser().getObjectId())", "com.flurry.android.FlurryAgent.logEvent(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)", "com.parse.ParseAnalytics.trackEventInBackground(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)", "com.parse.ParseUser.getCurrentUser()", "com.parse.ParseUser.getCurrentUser().getObjectId()", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "c2df69d1c84b86992598be5c26e5b4fe2cd69a31", "Url": "https://api.github.com/repos/dariogs2001/FitPlayGames", "Date": "2016-03-23T04:26:22Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { sc = new java.net.Socket(r.ip, java.lang.Integer.parseInt(r.port)); sc.close(); result.add(r); } catch (java.lang.Exception e) { e.printStackTrace(); recordArray.remove(r); java.lang.System.out.println(((r.to) + \"have shuted down\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2274/buggy-version/lec-3.discovery.prototypes.DisServer.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.util.ArrayList<DisServer.Record>.add(DisServer.Record)", "java.net.Socket.close()"], "Fixed commit": "9e8dce6df5a7de2903a2f3d9f08618c890861789", "Url": "https://api.github.com/repos/onorzq/dist-sys-exercises", "Date": "2015-10-05T20:11:02Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { file = getFile(newValue); } catch (java.net.URISyntaxException e) { throw new java.lang.IllegalArgumentException(\"Uri of file is malformed.\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8219/buggy-version/src.main.java.de.saxsys.styleablefx.additions.SVGStyleableAddition.java", "BodyUseAPI": ["de.saxsys.styleablefx.additions.SVGStyleableAddition.getFile(java.lang.String)"], "Fixed commit": "df1d142480af76dec8b797597be502d5be709bd6", "Url": "https://api.github.com/repos/Xyanid/styleableFX", "Date": "2016-01-21T17:51:34Z"},
{"Line": "=>364", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { columnName = meta.getColumnLabel((i + 1)); } catch (java.sql.SQLException e) { columnName = meta.getColumnName((i + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8433/buggy-version/railo-java.railo-core.src.railo.runtime.type.QueryImpl.java", "BodyUseAPI": ["java.sql.ResultSetMetaData.getColumnLabel(int)"], "Fixed commit": "6274dc5e61ddc93b169ae98c0a710e61b1055d4a", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2012-08-30T14:27:15Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { participant = java.lang.Integer.parseInt(name.split(\",\")[0].substring(12)); } catch (java.lang.Exception e) { participant = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/631/buggy-version/src.HSTReader.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "ae219f75f4d3c36e3ceb7459d23e3007b2e03198", "Url": "https://api.github.com/repos/tyduptyler13/SuperParser", "Date": "2013-09-20T20:19:15Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { weight = com.midwives.parsers.BabiesParser.json.getInt(com.midwives.parsers.BabiesParser.TAG_WEIGHT); } catch (java.lang.Exception ex) { weight = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1595/buggy-version/SmartAppTeam4.src.com.midwives.parsers.BabiesParser.java", "BodyUseAPI": ["org.json.JSONObject.getInt(java.lang.String)"], "Fixed commit": "f6d2fbac99f46a4118d567deef36838e127ee777", "Url": "https://api.github.com/repos/kudlatyIE/smartapp_devstream_team4", "Date": "2015-03-18T21:17:34Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return jdbcTemplate.queryForObject(findCollectionInfoBySlugSql, java.util.Collections.singletonMap(\"slug\", slug), RowMappers::forCollectionInfoDto); } catch (org.springframework.dao.EmptyResultDataAccessException ignored) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5956/buggy-version/src.main.java.ru.mystamps.web.dao.impl.JdbcCollectionDao.java", "BodyUseAPI": ["java.util.Collections.singletonMap(java.lang.String,java.lang.String)", "org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.queryForObject(java.lang.String,java.util.Map<java.lang.String, java.lang.String>,RowMappers::forCollectionInfoDto)"], "Fixed commit": "92e38346bce526166f550fbdbc96766bc0c405bb", "Url": "https://api.github.com/repos/bodom91/mystamps", "Date": "2016-08-23T15:10:56Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(1000); } catch (java.lang.InterruptedException ex) { java.lang.Thread.currentThread().interrupt(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7630/buggy-version/graspj.src.main.java.eu.brede.graspj.datatypes.AnalysisItem.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "c52e1b3d619eee9c32877d48b3f59e8817405875", "Url": "https://api.github.com/repos/isman7/graspj", "Date": "2015-04-30T09:03:39Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { status = userPasswordReset.passwordReset(userId, secretAnswer, newPassword); } catch (java.io.FileNotFoundException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1422/buggy-version/src.main.java.controllers.user.UserAction.java", "BodyUseAPI": ["models.IUserModel.passwordReset(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "e1a055dd090d099981b6c7697ed2127d30ed589e", "Url": "https://api.github.com/repos/mickey4u/BikeRental", "Date": "2017-11-15T14:39:40Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return mapper.writeValueAsString(response); } catch (final com.fasterxml.jackson.JsonProcessingException exception) { ru.altruix.androidprototyping.server.services.AbstractService.LOGGER.error(\"\", exception); return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6364/buggy-version/android-prototyping-tools-server.src.main.java.ru.altruix.androidprototyping.server.services.AbstractService.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.ObjectMapper.writeValueAsString(ResponseClass)"], "Fixed commit": "d74a9cd5b36e8d8a78f6021f8f32a54059c6ad53", "Url": "https://api.github.com/repos/dpisarenko/altruix-android-prototyping-tools", "Date": "2013-09-05T13:51:29Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { model.setValueAt(toPercent((((double) (breakdown[i])) / ((double) (responseCount)))), i, 2); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7192/buggy-version/src.sgaconnect.PollViewScreen.java", "BodyUseAPI": ["sgaconnect.PollViewScreen.toPercent(double)", "javax.swing.table.DefaultTableModel.setValueAt(java.lang.String,int,int)"], "Fixed commit": "647ff7ed34f1635a6510c38cf52cf5ae946500d5", "Url": "https://api.github.com/repos/josephdangerstewart/sgaconnect", "Date": "2017-11-05T02:45:18Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { genealogy.createdOnDevice.bluetoothAddress = initPack.getString(Suckers.Phone.Keys.BLUETOOTH_DEVICE_ADDRESS); genealogy.createdOnDevice.bluetoothName = initPack.getString(Suckers.Phone.Keys.BLUETOOTH_DEVICE_NAME); genealogy.createdOnDevice.deviceFingerprint = intent.owner.publicKeyFingerprint; } catch (org.json.JSONException e) { android.util.Log.d(Suckers.LOG, e.toString()); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1860/buggy-version/src.org.witness.informacam.informa.Informa.java", "BodyUseAPI": ["org.witness.informacam.informa.LogPack.getString(Suckers.Phone.Keys.BLUETOOTH_DEVICE_ADDRESS)", "org.witness.informacam.informa.LogPack.getString(Suckers.Phone.Keys.BLUETOOTH_DEVICE_NAME)"], "Fixed commit": "45d54467d6d864a2e4e08b074d4783fd9b08c9bd", "Url": "https://api.github.com/repos/guardianproject/InformaCam", "Date": "2012-09-15T03:15:04Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { genealogy.createdOnDevice.imei = initPack.getString(Suckers.Phone.Keys.IMEI); } catch (org.json.JSONException e) { android.util.Log.d(Suckers.LOG, ((e.toString()) + \"\\nprobably because this is a wifi-only device (no telephony manager)\")); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1860/buggy-version/src.org.witness.informacam.informa.Informa.java", "BodyUseAPI": ["org.witness.informacam.informa.LogPack.getString(Suckers.Phone.Keys.IMEI)"], "Fixed commit": "45d54467d6d864a2e4e08b074d4783fd9b08c9bd", "Url": "https://api.github.com/repos/guardianproject/InformaCam", "Date": "2012-09-15T03:15:04Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { printerQueue.LinkedList.Node temp = first; while ((temp.next.next) != null) { temp = temp.next; } temp.next = null; } catch (java.lang.NullPointerException e) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/708/buggy-version/LinkedList.java", "BodyUseAPI": [], "Fixed commit": "36760f16418440340f950e72f98fe3c0230114a4", "Url": "https://api.github.com/repos/Eivindbergman/Printer-Queue", "Date": "2017-03-31T11:50:14Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { printerQueue.LinkedList.Node temp = first; first = temp.next; } catch (java.lang.NullPointerException e) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/708/buggy-version/LinkedList.java", "BodyUseAPI": [], "Fixed commit": "36760f16418440340f950e72f98fe3c0230114a4", "Url": "https://api.github.com/repos/Eivindbergman/Printer-Queue", "Date": "2017-03-31T11:50:14Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { gifDecoder.nextFrame(); } catch (java.lang.Exception e) { exception = e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3720/buggy-version/ion.src.com.koushikdutta.ion.IonDrawable.java", "BodyUseAPI": ["com.koushikdutta.ion.gif.GifDecoder.nextFrame()"], "Fixed commit": "3b4c28d5565f99b1671591f2dee3046b66aa1b14", "Url": "https://api.github.com/repos/koush/ion", "Date": "2014-11-21T05:43:42Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { modelInstance.transform.set(camera.view).inv(); } catch (java.lang.RuntimeException e) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1012/buggy-version/core.src.incanshift.gameobjects.Billboard.java", "BodyUseAPI": ["modelInstance.transform.set(camera.view)", "modelInstance.transform.set(camera.view).inv()"], "Fixed commit": "c5b8fed31ce574090842616f5ba204ac2d00f468", "Url": "https://api.github.com/repos/ristoretto/incanshift", "Date": "2015-09-28T18:24:36Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { l.vmStateUpdated(vm); } catch (java.lang.Exception e) { ch.admin.vbs.cube.core.vm.VmModel.LOG.error(\"Failed to process event\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3244/buggy-version/cube-client-core.src.main.java.ch.admin.vbs.cube.core.vm.VmModel.java", "BodyUseAPI": ["ch.admin.vbs.cube.core.vm.IVmStateChangeListener.vmStateUpdated(ch.admin.vbs.cube.core.vm.Vm)"], "Fixed commit": "a67f1e1939255a4c156ecfa3955711f52c9826ae", "Url": "https://api.github.com/repos/jonosterman/cube", "Date": "2011-09-08T17:27:30Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { person.setBirthday(java.time.Instant.ofEpochMilli(java.lang.Long.parseLong(jsonPair.getValue())).atZone(java.time.ZoneId.systemDefault()).toLocalDate()); } catch (java.lang.NumberFormatException e) { throw new java.lang.IllegalArgumentException(\"Birthday must be a timestamp (in millis)!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1275/buggy-version/src.main.java.cinemadating.services.PersonService.java", "BodyUseAPI": ["java.time.ZoneId.systemDefault()", "java.time.Instant.atZone(java.time.ZoneId)", "cinemadating.model.Person.setBirthday(java.time.LocalDate)", "java.time.Instant.ofEpochMilli(long)", "java.time.ZonedDateTime.toLocalDate()", "java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()", "java.lang.Long.parseLong(java.lang.String)"], "Fixed commit": "faba3fdcabd83481c9e29d59eb4b4c18e300c4f5", "Url": "https://api.github.com/repos/malabyan/cd-github", "Date": "2017-09-27T19:36:25Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (data.isUpdate()) { dbCollection.update(data.getUpdateQuery(), data.getData(), true, true); banana.dowloader.processor.MongoDBDataProcessor.logger.info(java.lang.String.format(\"update %s %s\", collection[0], data.getUpdateQuery())); }else { dbCollection.insert(data.getData()); } } catch (java.lang.Exception e) { banana.dowloader.processor.MongoDBDataProcessor.logger.warn(\"\u6570\u636e\u5199\u5165\u9519\u8bef\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/836/buggy-version/src.main.java.banana.dowloader.processor.MongoDBDataProcessor.java", "BodyUseAPI": ["banana.core.modle.CrawlData.isUpdate()", "org.apache.log4j.Logger.info(java.lang.String)", "com.mongodb.DBCollection.update(data.getUpdateQuery(),data.getData(),boolean,boolean)", "banana.core.modle.CrawlData.getData()", "com.mongodb.DBCollection.insert(data.getData())", "banana.core.modle.CrawlData.getUpdateQuery()", "banana.core.modle.CrawlData.getData()", "java.lang.String.format(java.lang.String,java.lang.String,data.getUpdateQuery())", "banana.core.modle.CrawlData.getUpdateQuery()"], "Fixed commit": "030e9f3530961196007a100abce95514258a6e63", "Url": "https://api.github.com/repos/CreditTone/BananaCrawler.Download", "Date": "2017-02-23T08:10:26Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(10000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3660/buggy-version/main.java.bsuir.by.labWord2.thread.AutoShipbuilding.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "7ee8e0e93c0e1d02e2e28262d65058468636d1e7", "Url": "https://api.github.com/repos/serheypast/Port-dispatching-system", "Date": "2017-03-20T11:45:24Z"},
{"Line": "=>364", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { xmlReader(new java.io.FileInputStream(new java.io.File(((PATH) + \"/device.xml\")))); } catch (java.io.FileNotFoundException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5953/buggy-version/app.src.main.java.com.nemustech.study.sysinfo.SystemInfoMain.java", "BodyUseAPI": ["com.nemustech.study.sysinfo.SystemInfoMain.xmlReader(java.io.FileInputStream)"], "Fixed commit": "dd2d82a1b4b8f03a68146c29c15c686cde1c353a", "Url": "https://api.github.com/repos/yeansang/systeminfo", "Date": "2016-08-17T06:57:33Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.net.URL url = new java.net.URL(goServerUrl); urlBuilder.append(url.getProtocol()); urlBuilder.append((\"://\" + (url.getHost()))); int port = url.getPort(); if (port != (-1)) { urlBuilder.append((\":\" + port)); }else { urlBuilder.append((\":\" + (url.getDefaultPort()))); } return urlBuilder.toString(); } catch (java.net.MalformedURLException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6048/buggy-version/src.main.java.cd.go.contrib.task.skeleton.FetchArtifactWithProxyTaskExecutor.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.toString()", "java.net.URL.getPort()", "java.net.URL.getHost()", "java.lang.StringBuilder.append(java.lang.String)", "java.net.URL.getProtocol()", "java.net.URL.getDefaultPort()", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "543143a2a7470d725de81685835bfe9c9c6e39cf", "Url": "https://api.github.com/repos/mikhailadvani/fetch-artifact-with-proxy", "Date": "2017-05-30T06:47:25Z"},
{"Line": "=>442", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (int thread = 0; thread < numThreads; ++thread) { seed = console.parameters.getInt(new ec.util.Parameter((\"seed.\" + thread)), null); for (int job = 0; job < numJobs; ++job) setSeed((\"\" + (seed + (i++))), job, thread); } } catch (java.lang.NumberFormatException ex) { javax.swing.JOptionPane.showMessageDialog(null, (\"The seed parameter for at least one thread not a fixed number (perhaps it\\'s set to \\'time\\'?), so sequential seeds cannot be used.\\n\" + \"Reverting to random number seeds for all threads.\"), \"Adjusting Seeds\", javax.swing.JOptionPane.INFORMATION_MESSAGE); randomSeedsRadioButton.setSelected(true); generateRandomSeeds(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7635/buggy-version/ecj.src.main.java.ec.display.ControlPanel.java", "BodyUseAPI": ["ec.display.ControlPanel.setSeed(java.lang.String,int,int)", "console.parameters.getInt(ec.util.Parameter,<nulltype>)"], "Fixed commit": "85bca9c77cd43052d6a2e06ac6cd6b55ac7f89bf", "Url": "https://api.github.com/repos/GMUEClab/ecj", "Date": "2017-09-19T20:21:52Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { vflevel = java.lang.Integer.parseInt(level); } catch (java.lang.NumberFormatException nfe) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8596/buggy-version/src.se.kth.csc.iprog.matchme.android.GameActivity.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "9008bb9db4cc5d52a90c19b319282edcd4b63dd2", "Url": "https://api.github.com/repos/arindrakumardas/MatchMe", "Date": "2014-03-17T21:26:42Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { sbase.setMetaId(metaId); } catch (org.cy3sbml.util.PropertyNotAvailableException e) { org.cy3sbml.util.MappingUtil.logger.warn(\"Property metaId is not defined\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1771/buggy-version/src.main.java.org.cy3sbml.util.MappingUtil.java", "BodyUseAPI": ["org.cy3sbml.util.SBase.setMetaId(java.lang.String)"], "Fixed commit": "2647cc67df0bd5f7b2e54581e1b3f8050f5454c7", "Url": "https://api.github.com/repos/matthiaskoenig/cy3sbml", "Date": "2016-09-12T14:13:56Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (net.minecraft.tileentity.TileEntity te : net.minecraftforge.common.DimensionManager.getWorld(dimensionId).tickableTileEntities) { if (te instanceof com.minemaarten.signals.tileentity.TileEntitySignalBase) { posToColor.put(te.getPos(), ((com.minemaarten.signals.tileentity.TileEntitySignalBase) (te)).getLampStatus().color); }else if (te instanceof com.minemaarten.signals.tileentity.TileEntityStationMarker) { posToColor.put(te.getPos(), com.minemaarten.signals.rail.NetworkController.STATION_COLOR); } } } catch (java.util.ConcurrentModificationException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4008/buggy-version/src.com.minemaarten.signals.rail.NetworkController.java", "BodyUseAPI": ["java.util.Map<net.minecraft.util.math.BlockPos, java.lang.Integer>.put(te.getPos(),((com.minemaarten.signals.tileentity.TileEntitySignalBase) (te)).getLampStatus().color)", "net.minecraft.tileentity.TileEntity.getPos()", "net.minecraftforge.common.DimensionManager.getWorld(int)", "java.util.Map<net.minecraft.util.math.BlockPos, java.lang.Integer>.put(te.getPos(),int)", "net.minecraft.tileentity.TileEntity.getLampStatus()", "net.minecraft.tileentity.TileEntity.getPos()"], "Fixed commit": "f6d72fb9eed6aec9a66e85a0b7f02bee6e5724c0", "Url": "https://api.github.com/repos/MineMaarten/Signals", "Date": "2016-06-27T16:43:28Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((!expired) && (new java.text.SimpleDateFormat(\"MM/dd/yy\", java.util.Locale.CANADA).parse(date.getText().toString()).before(java.util.Calendar.getInstance().getTime()))) { db.setExpired(\"true\", java.lang.Integer.toString(uid)); expired = true; } } catch (java.text.ParseException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6285/buggy-version/app.src.main.java.com.team5.iat381finalproject.ItemDetailsActivity.java", "BodyUseAPI": ["java.util.Date.before(java.util.Date)", "date.getText().toString()", "java.text.SimpleDateFormat.parse(date.getText().toString())", "android.widget.TextView.getText()", "java.lang.Integer.toString(int)", "java.util.Calendar.getTime()", "java.util.Calendar.getInstance()", "com.team5.iat381finalproject.Database.setExpired(java.lang.String,java.lang.String)"], "Fixed commit": "5e1e17f9e006e9466cadbf37056644efd297a0c6", "Url": "https://api.github.com/repos/wonglee5/IAT381FinalProject", "Date": "2016-12-01T19:48:48Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { return invoke(constructor, arguments); } finally { mockit.internal.expectations.injection.TestRun.enterNoMockingZone(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8210/buggy-version/main.src.mockit.internal.expectations.injection.ConstructorInjection.java", "BodyUseAPI": ["mockit.internal.expectations.injection.ConstructorInjection.invoke(java.lang.reflect.Constructor<?>,java.lang.Object[])"], "Fixed commit": "db56037c2af1f3a0b35ba0361685075984e558d7", "Url": "https://api.github.com/repos/jmockit/jmockit1", "Date": "2015-05-02T19:46:22Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(100); } catch (java.lang.InterruptedException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1108/buggy-version/src.teamcomm.gui.MainWindow.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "99f1557cd16b91c2722d22d67c0a316ffb92dc74", "Url": "https://api.github.com/repos/bhuman/GameController", "Date": "2015-04-09T15:15:40Z"},
{"Line": "=>627", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { DropMarker = mMap.addMarker(new com.google.android.gms.maps.model.MarkerOptions().position(latLng).title(\"\").icon(com.google.android.gms.maps.model.BitmapDescriptorFactory.fromResource(R.drawable.grnpin))); } catch (java.lang.NullPointerException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5234/buggy-version/app.src.main.java.com.bike4everything.UserApp.ConfirmActivity.java", "BodyUseAPI": ["new com.google.android.gms.maps.model.MarkerOptions().position(latLng).title(\"\").icon(com.google.android.gms.maps.model.BitmapDescriptorFactory.fromResource(R.drawable.grnpin))", "com.google.android.gms.maps.model.BitmapDescriptorFactory.fromResource(R.drawable.grnpin)", "com.google.android.gms.maps.model.MarkerOptions.position(com.google.android.gms.maps.model.LatLng)", "new com.google.android.gms.maps.model.MarkerOptions().position(latLng).title(java.lang.String)", "com.google.android.gms.maps.GoogleMap.addMarker(new com.google.android.gms.maps.model.MarkerOptions().position(latLng).title(\"\").icon(com.google.android.gms.maps.model.BitmapDescriptorFactory.fromResource(R.drawable.grnpin)))"], "Fixed commit": "70335a8661c2d079a0996e9bfe95236e2d5f28c6", "Url": "https://api.github.com/repos/mksingh3671/Bike4Everything", "Date": "2017-04-01T13:19:33Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { trapCollector.add(payload); } catch (java.lang.Throwable current) { throw new cascading.flow.stream.TrapException((\"could not write to trap: \" + (trap.getIdentifier())), current); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3523/buggy-version/cascading-core.src.main.java.cascading.flow.stream.TrapHandler.java", "BodyUseAPI": ["cascading.tuple.TupleEntryCollector.add(cascading.tuple.TupleEntry)"], "Fixed commit": "f2b479b7e96e0e0e0f63a349a07185b41bd93b5e", "Url": "https://api.github.com/repos/cwensel/cascading", "Date": "2015-03-20T19:59:05Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { net.minecraftforge.client.model.IModel model = net.minecraftforge.client.model.ModelLoaderRegistry.getModel(location); for (net.minecraft.util.ResourceLocation dep : model.getDependencies()) { getModel(dep); } textures.addAll(model.getTextures()); } finally { loadingModels.remove(location); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6291/buggy-version/src.main.java.net.minecraftforge.client.model.ModelLoader.java", "BodyUseAPI": ["net.minecraftforge.client.model.ModelLoaderRegistry.getModel(net.minecraft.util.ResourceLocation)", "net.minecraftforge.client.model.IModel.getDependencies()", "net.minecraftforge.client.model.ModelLoader.getModel(net.minecraft.util.ResourceLocation)", "java.util.Set<net.minecraft.util.ResourceLocation>.addAll(model.getTextures())", "net.minecraftforge.client.model.IModel.getTextures()"], "Fixed commit": "54f18ab78a08b117f5fa57751d8ba213edee803c", "Url": "https://api.github.com/repos/shadekiller666/MinecraftForge", "Date": "2015-08-19T21:09:01Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { inputStream = ren.com.cn.config.RedisPool.class.getClass().getResource(\"/application.yml\").openStream(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3755/buggy-version/src.main.java.ren.com.cn.config.RedisPool.java", "BodyUseAPI": ["java.net.URL.openStream()", "java.lang.Class.getClass()", "java.lang.Class<? extends java.lang.Class>.getResource(java.lang.String)"], "Fixed commit": "2d178fb7bfc4645da58a767a4fc116914f958394", "Url": "https://api.github.com/repos/AAA-AA/spring-boot-demo", "Date": "2017-12-14T17:00:20Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { myRecorder.release(); } catch (java.lang.Throwable e) { android.util.Log.d(\"AudioRecorderAPI\", (\" stopRecord myRecorder.release(); \" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8533/buggy-version/src.android.com.emj365.plugins.AudioRecorderAPI.java", "BodyUseAPI": ["android.media.MediaRecorder.release()"], "Fixed commit": "734708c963cb2417067f1133bc1102f66c34ce5a", "Url": "https://api.github.com/repos/sieman/cordova-plugin-audio-recorder-api", "Date": "2017-05-24T13:20:17Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { myRecorder.stop(); } catch (java.lang.Throwable e) { android.util.Log.d(\"AudioRecorderAPI\", (\" stopRecord myRecorder.stop(); \" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8533/buggy-version/src.android.com.emj365.plugins.AudioRecorderAPI.java", "BodyUseAPI": ["android.media.MediaRecorder.stop()"], "Fixed commit": "734708c963cb2417067f1133bc1102f66c34ce5a", "Url": "https://api.github.com/repos/sieman/cordova-plugin-audio-recorder-api", "Date": "2017-05-24T13:20:17Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { jsonObject = new org.json.JSONObject(msgcontent); errcode = jsonObject.getString(\"code\"); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8076/buggy-version/app.src.main.java.com.hanvon.rc.presentation.CropActivity.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "0c3ce72c95e3ec6ccb2ef57f07f9f0da884422e0", "Url": "https://api.github.com/repos/baiheng222/MobileOCR", "Date": "2016-04-19T12:50:30Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { while (!(psiBuilder.eof())) { consumeSymbol(name.martingeisse.calculator.MapagGeneratedCalculationParser.getTokenCodeForElementType(psiBuilder.getTokenType()), null); } preParseMarker.rollbackTo(); consumeSymbol(name.martingeisse.calculator.MapagGeneratedCalculationParser.EOF_TOKEN_CODE, null); } catch (name.martingeisse.calculator.MapagGeneratedCalculationParser.UnrecoverableSyntaxException e) { psiBuilder.error(\"syntax error\"); preParseMarker.rollbackTo(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5832/buggy-version/gen.name.martingeisse.calculator.MapagGeneratedCalculationParser.java", "BodyUseAPI": ["name.martingeisse.calculator.MapagGeneratedCalculationParser.getTokenCodeForElementType(psiBuilder.getTokenType())", "name.martingeisse.calculator.MapagGeneratedCalculationParser.consumeSymbol(int,<nulltype>)", "PsiBuilder.Marker.rollbackTo()", "com.intellij.lang.PsiBuilder.getTokenType()", "com.intellij.lang.PsiBuilder.eof()", "name.martingeisse.calculator.MapagGeneratedCalculationParser.consumeSymbol(int,<nulltype>)"], "Fixed commit": "724a2d0d29207ec4e4f9e38f497a4a46437f110d", "Url": "https://api.github.com/repos/MartinGeisse/calculator", "Date": "2017-11-01T11:29:41Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return fr.paris.lutece.plugins.directory.modules.multiview.service.UserIdentityService.getIdentityService().getIdentity(strGuid, \"\", fr.paris.lutece.plugins.directory.modules.multiview.service.UserIdentityService.PROPERTY_APPLICATION_CODE).getAttributes(); } catch (fr.paris.lutece.portal.service.util.AppException e) { fr.paris.lutece.portal.service.util.AppLogService.error((\"Unable to get the identity from identity service, with guid : \" + strGuid)); return new java.util.HashMap<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/9038/buggy-version/src.java.fr.paris.lutece.plugins.directory.modules.multiview.service.UserIdentityService.java", "BodyUseAPI": ["fr.paris.lutece.plugins.directory.modules.multiview.service.UserIdentityService.getIdentityService()", "fr.paris.lutece.plugins.identitystore.web.service.IdentityService.getIdentity(java.lang.String,java.lang.String,java.lang.String)", "fr.paris.lutece.plugins.directory.modules.multiview.service.UserIdentityService.getIdentityService().getIdentity(strGuid, \"\", fr.paris.lutece.plugins.directory.modules.multiview.service.UserIdentityService.PROPERTY_APPLICATION_CODE).getAttributes()"], "Fixed commit": "4fd7df2ea6238ad61fa381d05d203bbeb474908d", "Url": "https://api.github.com/repos/lutece-platform/lutece-directory-module-directory-multiview", "Date": "2017-10-30T16:58:47Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { me.ccrama.redditslide.HasSeen.seenTimes.put(fullname, java.lang.Long.valueOf(m.get(fullname))); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7020/buggy-version/app.src.main.java.me.ccrama.redditslide.HasSeen.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Long>.put(java.lang.String,java.lang.Long)", "com.lusfold.androidkeyvaluestore.core.KVManger.get(java.lang.String)", "java.lang.Long.valueOf(m.get(fullname))"], "Fixed commit": "8327c82e59611f3503035fdb0597ddb88a18d1e2", "Url": "https://api.github.com/repos/Alexendoo/Slide", "Date": "2016-07-20T23:00:47Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mMediaRecorder.stop(); mMediaRecorder.release(); mMediaRecorder = null; mCameraListener.onVideoTaken(mVideoFile); } catch (java.lang.RuntimeException exception) { mVideoFile.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/9042/buggy-version/camerakit.src.main.api16.com.flurgle.camerakit.Camera1.java", "BodyUseAPI": ["android.media.MediaRecorder.stop()", "android.media.MediaRecorder.release()", "com.flurgle.camerakit.Camera1.onVideoTaken(java.io.File)"], "Fixed commit": "0fa4bc6e35537ad6bcfbb516ed698bbd6bbaafb1", "Url": "https://api.github.com/repos/eduardo4jesus/CameraKit-Android", "Date": "2017-08-10T19:45:20Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { page = java.lang.Integer.parseInt(args[0]); } catch (java.lang.NumberFormatException e) { err(getMessage(\"invalid_help_page\"), args[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1070/buggy-version/src.main.java.net.dmulloy2.swornrpg.commands.CmdHelp.java", "BodyUseAPI": ["java.lang.Integer.parseInt(args[0])"], "Fixed commit": "0595fc9f73e52bc93b598d620fa392b228a62f7c", "Url": "https://api.github.com/repos/dmulloy2/SwornRPG", "Date": "2013-06-27T19:43:58Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return com.oracle.truffle.r.engine.RContext.getEngine().parseToCallTarget(source); } catch (com.oracle.truffle.r.runtime.context.Engine.IncompleteSourceException e) { throw new com.oracle.truffle.api.vm.IncompleteSourceException(e); } catch (com.oracle.truffle.r.runtime.context.Engine.ParseException e) { return new com.oracle.truffle.r.engine.CallTarget() { public java.lang.Object call(java.lang.Object... arguments) { try { throw e.throwAsRError(); } catch (com.oracle.truffle.r.engine.RError e) { return null; } } }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1961/buggy-version/com.oracle.truffle.r.engine.src.com.oracle.truffle.r.engine.TruffleRLanguage.java", "BodyUseAPI": ["com.oracle.truffle.r.engine.RContext.getEngine()", "com.oracle.truffle.r.engine.RContext.getEngine().parseToCallTarget(com.oracle.truffle.r.engine.Source)"], "Fixed commit": "513c4bdc5eab41f34b4412dcd77477db0ff8892a", "Url": "https://api.github.com/repos/oracle/fastr", "Date": "2016-01-29T16:51:41Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { vertical.setValue(vertical.getMaximum()); } catch (java.lang.ArrayIndexOutOfBoundsException e) { java.lang.System.out.println(\"Scroll Error\"); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/9177/buggy-version/COS30018Assignment.src.assignment.ui.DebugMainFrame.java", "BodyUseAPI": ["javax.swing.JScrollBar.setValue(int)", "javax.swing.JScrollBar.getMaximum()"], "Fixed commit": "0f31cd43ec250f4ed5cb2521bf36bfce85be5d59", "Url": "https://api.github.com/repos/Intelligent-Systems-Team/COS30018-Assignment1-Electric-Car-Scheduling", "Date": "2017-10-27T03:07:44Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { for (java.lang.String line : AllMessages) { displayString += \"\\n* \" + line; } } catch (java.util.ConcurrentModificationException e) { java.lang.System.out.println(\"AllMessage ERROR\"); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/9177/buggy-version/COS30018Assignment.src.assignment.main.Control.java", "BodyUseAPI": [], "Fixed commit": "0f31cd43ec250f4ed5cb2521bf36bfce85be5d59", "Url": "https://api.github.com/repos/Intelligent-Systems-Team/COS30018-Assignment1-Electric-Car-Scheduling", "Date": "2017-10-27T03:07:44Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (rs.next()) user = Database.DBUser.makeUserObject(rs); } catch (java.sql.SQLException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6484/buggy-version/Database.DBUser.java", "BodyUseAPI": ["java.sql.ResultSet.next()", "Database.DBUser.makeUserObject(java.sql.ResultSet)"], "Fixed commit": "9cc21ee1554cb27ca6a8a026877310b62e81381a", "Url": "https://api.github.com/repos/sinuni/Fellesprosjektet", "Date": "2012-03-22T12:20:26Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (org.avuna.httpd.util.SafeMode.isSymlink(root)) return false; } catch (org.avuna.httpd.util.unixsocket.CException e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2546/buggy-version/src.org.avuna.httpd.util.SafeMode.java", "BodyUseAPI": ["org.avuna.httpd.util.SafeMode.isSymlink(java.io.File)"], "Fixed commit": "ed776c7ec00589f0d118f74f7c61d95171b60007", "Url": "https://api.github.com/repos/paullaz/Avuna-HTTPD", "Date": "2015-05-24T21:29:38Z"},
{"Line": "=>926", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { synchronized(lock) { loadedContent.refreshPageModel(); } } catch (java.lang.Exception e1) { android.util.Log.e(com.erakk.lnreader.activity.DisplayLightNovelContentActivity.TAG, \"Cannot load content.\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3619/buggy-version/app.src.main.java.com.erakk.lnreader.activity.DisplayLightNovelContentActivity.java", "BodyUseAPI": ["com.erakk.lnreader.model.NovelContentModel.refreshPageModel()"], "Fixed commit": "a2ef9cacb28aafd6ed3937ab4c7e2e39c84adef5", "Url": "https://api.github.com/repos/freedomofkeima/LNReader-Android", "Date": "2015-01-06T21:25:00Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { text = java.net.URLEncoder.encode(text, \"UTF-8\"); } catch (java.io.UnsupportedEncodingException e) { xyz.jaoafa.mymaid.BugReport.report(e); return \"\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002(CotogotoNoby 2)\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6576/buggy-version/src.main.java.xyz.jaoafa.mymaid.Command.CmdBot.java", "BodyUseAPI": ["java.net.URLEncoder.encode(java.lang.String,java.lang.String)"], "Fixed commit": "6055c1472efb7a55ef3fa77e7f342e1c83f07b97", "Url": "https://api.github.com/repos/book000/MyMaid", "Date": "2017-11-21T12:18:27Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { obstacles.get(i).update(); if (useHitDetection) { if (obstacles.get(i).hasCollidedWith(player)) { gameManager.playerCollided(); } } if (obstacles.get(i).hasLeftScreen()) { if (clearObstacles) { obstacles.remove(i); }else { resetObstacle(obstacles.get(i)); } gameManager.playerPassed(); } } catch (java.lang.IndexOutOfBoundsException e) { java.lang.System.out.println(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3195/buggy-version/src.world.Level.java", "BodyUseAPI": ["java.util.ArrayList<world.Obstacle>.get(int)", "java.util.ArrayList<world.Obstacle>.get(int)", "obstacles.get(i).update()", "java.util.ArrayList<world.Obstacle>.get(int)", "game.GameEventListener.playerPassed()", "game.GameEventListener.playerCollided()", "obstacles.get(i).hasCollidedWith(world.Collidable)", "java.util.ArrayList<world.Obstacle>.remove(int)", "world.Level.resetObstacle(obstacles.get(i))", "obstacles.get(i).hasLeftScreen()", "java.util.ArrayList<world.Obstacle>.get(int)"], "Fixed commit": "f2c95b2c80569c2f61c06978193699f560ef2b0c", "Url": "https://api.github.com/repos/cetceeve/AsteroidAvoider", "Date": "2017-12-12T17:06:14Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { if ((size) > 0) { (size)--; }else { throw new java.lang.NullPointerException(\"Empty stack\"); } } catch (java.lang.NullPointerException e) { java.lang.System.out.println((\"Can't pop an element because \" + e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1263/buggy-version/HW8_Mock.src.main.java.ru.spbau.savon.yuliya.MyStack.java", "BodyUseAPI": [], "Fixed commit": "bfbbb5660b3c639ef8366f80eb223a083f9799d8", "Url": "https://api.github.com/repos/Tiloaria/AU_Java_2017", "Date": "2017-12-10T16:57:51Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { path = path.substring(\"jar:file:/\".length(), path.indexOf(\"!\")); if ((path.indexOf(':')) > 0) return new java.io.File(path); else return new java.io.File((\"/\" + path)); } catch (java.lang.Throwable th) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6167/buggy-version/scouter.agent.java.src.scouter.agent.util.JarUtil.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.indexOf(char)"], "Fixed commit": "fa13f0949b67bcdd1cacb527ed2db11f5f8fd542", "Url": "https://api.github.com/repos/scouter-project/scouter", "Date": "2016-05-26T01:00:53Z"},
{"Line": "=>473", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.myrontuttle.fin.trade.adapt.SATExpression.adaptDAO.removeSymbols(candidateId); com.myrontuttle.fin.trade.adapt.SATExpression.adaptDAO.removeSavedScreens(candidateId); com.myrontuttle.fin.trade.adapt.SATExpression.adaptDAO.removeSavedAlerts(candidateId); com.myrontuttle.fin.trade.adapt.SATExpression.adaptDAO.removeTradeParameters(candidateId); } catch (java.lang.Exception e) { com.myrontuttle.fin.trade.adapt.SATExpression.logger.warn(\"Unable to remove data for candidate: {}\", candidateId, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4713/buggy-version/com.myrontuttle.fin.trade.adapt.src.com.myrontuttle.fin.trade.adapt.SATExpression.java", "BodyUseAPI": ["com.myrontuttle.fin.trade.adapt.AdaptDAO.removeTradeParameters(long)", "com.myrontuttle.fin.trade.adapt.AdaptDAO.removeSymbols(long)", "com.myrontuttle.fin.trade.adapt.AdaptDAO.removeSavedScreens(long)", "com.myrontuttle.fin.trade.adapt.AdaptDAO.removeSavedAlerts(long)"], "Fixed commit": "87efa65b0800aa2fdba13e8309f20f51f9c7768b", "Url": "https://api.github.com/repos/myrontuttle/trade", "Date": "2014-09-22T03:46:42Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { resource = layoutProvider.resolveResource(repository, path); } catch (java.lang.IllegalArgumentException e) { getLogger().debug((\"Cannot resolve invalid path \" + path)); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/975/buggy-version/strongbox-storage.strongbox-storage-api.src.main.java.org.carlspring.strongbox.providers.repository.proxied.ProxyRepositoryArtifactResolver.java", "BodyUseAPI": ["org.carlspring.strongbox.providers.layout.LayoutProvider.resolveResource(org.carlspring.strongbox.storage.repository.Repository,java.lang.String)"], "Fixed commit": "69ef83d6172ac7afce0d3394f08a453cfdd835f1", "Url": "https://api.github.com/repos/strongbox/strongbox", "Date": "2017-12-29T06:40:09Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { outline.setConvexPath(developer.shivam.crescento.PathProvider.getOutlinePath(width, height, curvatureHeight, 0, 0)); } catch (java.lang.Exception e) { android.util.Log.d(\"Outline Path\", e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6908/buggy-version/crescento.src.main.java.developer.shivam.crescento.Container.java", "BodyUseAPI": ["developer.shivam.crescento.PathProvider.getOutlinePath(int,int,int,int,int)", "android.graphics.Outline.setConvexPath(developer.shivam.crescento.PathProvider.getOutlinePath(width, height, curvatureHeight, 0, 0))"], "Fixed commit": "66ad11c30315fc71d150019b1d1f5dab50d2cbd7", "Url": "https://api.github.com/repos/developer-shivam/Crescento", "Date": "2017-07-04T15:04:58Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { org.owasp.dependencycheck.utils.Settings.initialize(); final org.owasp.dependencycheck.App app = new org.owasp.dependencycheck.App(); app.run(args); } finally { org.owasp.dependencycheck.utils.Settings.cleanup(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3659/buggy-version/dependency-check-cli.src.main.java.org.owasp.dependencycheck.App.java", "BodyUseAPI": ["org.owasp.dependencycheck.utils.Settings.initialize()", "org.owasp.dependencycheck.App.run(java.lang.String[])"], "Fixed commit": "cbed41ab0fc1aea1f35165de1ee328d20d00d02f", "Url": "https://api.github.com/repos/colezlaw/DependencyCheck", "Date": "2014-04-30T22:10:56Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.io.FileOutputStream stream = new java.io.FileOutputStream(\"/tmp/useraccount.txt\"); stream.write(new byte[]{ 0, 100, 56 }); stream.close(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4812/buggy-version/src.FileClient.java", "BodyUseAPI": ["java.io.FileOutputStream.write(byte[])", "java.io.FileOutputStream.close()"], "Fixed commit": "95c544c43b486edaf70a425beba223688962afeb", "Url": "https://api.github.com/repos/ID132457890/CSS434_Final_Project", "Date": "2016-06-04T04:13:12Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { exec(); } catch (java.lang.Throwable e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4792/buggy-version/src.net.vicp.lylab.utils.timer.TimerJob.java", "BodyUseAPI": ["net.vicp.lylab.utils.timer.TimerJob.exec()"], "Fixed commit": "996cc95662a5994d8f218ea2fae560c78578aef6", "Url": "https://api.github.com/repos/liyang-bsy/LYLab", "Date": "2015-07-02T02:05:50Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { bot = new java.net.URL(\"192.168.1.1\"); applet.AppletField field = new applet.AppletField(bot); field.setBackground(new java.awt.Color(0, 0, 0)); field.setForeground(new java.awt.Color(255, 255, 255)); this.setContentPane(field); } catch (java.net.MalformedURLException e) { java.lang.String error = e.getMessage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2994/buggy-version/src.applet.OSVA.java", "BodyUseAPI": ["applet.AppletField.setForeground(java.awt.Color)", "applet.OSVA.setContentPane(applet.AppletField)", "applet.AppletField.setBackground(java.awt.Color)"], "Fixed commit": "03fcf5562bd26d21cd1af90027e80268e187bf3e", "Url": "https://api.github.com/repos/adamclaassen/smokebot3000", "Date": "2015-04-13T19:07:23Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.io.InputStream in = new java.io.BufferedInputStream(xml.openStream()); } catch (java.io.IOException e) { info = e.getMessage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2994/buggy-version/src.applet.AppletField.java", "BodyUseAPI": ["java.net.URL.openStream()"], "Fixed commit": "03fcf5562bd26d21cd1af90027e80268e187bf3e", "Url": "https://api.github.com/repos/adamclaassen/smokebot3000", "Date": "2015-04-13T19:07:23Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mSeekListener.onProgressChanged(this, ((int) ((mCurrentPercentage) * (mSegments))), false); } catch (java.lang.NullPointerException e) { android.util.Log.w(com.indatus.smoothseekbar.library.SmoothSeekBar.TAG, \"Set the seek listener\"); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2428/buggy-version/library.src.main.java.com.indatus.smoothseekbar.library.SmoothSeekBar.java", "BodyUseAPI": ["com.indatus.smoothseekbar.library.OnSeekBarChangeListener.onProgressChanged(com.indatus.smoothseekbar.library.SmoothSeekBar,double,boolean)"], "Fixed commit": "086f4f59c445614076a919134dfb313de3c7f4e7", "Url": "https://api.github.com/repos/Indatus/Android-SmoothSeekBar", "Date": "2013-10-08T19:37:51Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.reflect.Field map = newWatcher.getClass().getDeclaredField(\"c\"); map.setAccessible(true); java.util.HashMap c = ((java.util.HashMap) (map.get(newWatcher))); java.util.List<net.minecraft.server.v1_5_R3.WatchableObject> list = entity.getDataWatcher().c(); int i = 0; for (java.lang.Object obj : watcher.convert(list)) c.put((i++), obj); } catch (java.lang.Exception ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8770/buggy-version/src.me.libraryaddict.disguise.DisguiseTypes.Disguise.java", "BodyUseAPI": ["net.minecraft.server.v1_5_R3.DataWatcher.getClass()", "java.util.HashMap.put(int,java.lang.Object)", "entity.getDataWatcher().c()", "net.minecraft.server.v1_5_R3.Entity.getDataWatcher()", "me.libraryaddict.disguise.DisguiseTypes.FlagWatcher.convert(java.util.List<net.minecraft.server.v1_5_R3.WatchableObject>)", "java.lang.reflect.Field.get(net.minecraft.server.v1_5_R3.DataWatcher)", "newWatcher.getClass().getDeclaredField(java.lang.String)", "java.lang.reflect.Field.setAccessible(boolean)"], "Fixed commit": "bf48c0baac0039fd71c12e2f2ca27c84175a7404", "Url": "https://api.github.com/repos/libraryaddict/LibsDisguises", "Date": "2013-06-03T13:16:37Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { pl.changed(initiator, this); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2554/buggy-version/src.main.java.uk.co.nickthecoder.jguifier.parameter.Parameter.java", "BodyUseAPI": ["uk.co.nickthecoder.jguifier.ParameterListener.changed(java.lang.Object,uk.co.nickthecoder.jguifier.parameter.Parameter)"], "Fixed commit": "cd60cd2759d5dd52435a04cce35e9aee2297d553", "Url": "https://api.github.com/repos/nickthecoder/jguifier", "Date": "2017-04-07T17:51:36Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.net.Socket sock = new java.net.Socket(java.net.InetAddress.getByName(serverList.get(i).get_IP_Address()), serverList.get(i).getPort()); java.lang.System.out.println((((\"sending update to: \" + (serverList.get(i).get_IP_Address())) + \" \") + (serverList.get(i).getPort()))); java.io.PrintWriter printWriter = new java.io.PrintWriter(sock.getOutputStream(), true); printWriter.print(\"update\\n\"); printWriter.flush(); outObj = new java.io.ObjectOutputStream(sock.getOutputStream()); outObj.writeObject(update); outObj.flush(); sock.close(); } catch (java.io.IOException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5889/buggy-version/src.Updater.java", "BodyUseAPI": ["java.io.ObjectOutputStream.writeObject(BackupComObject)", "serverList.get(i).get_IP_Address()", "serverList.get(i).getPort()", "java.util.ArrayList<ClientObject>.get(int)", "java.net.Socket.getOutputStream()", "java.io.PrintStream.println((((\"sending update to: \" + (serverList.get(i).get_IP_Address())) + \" \") + (serverList.get(i).getPort())))", "serverList.get(i).getPort()", "java.io.ObjectOutputStream.flush()", "java.net.InetAddress.getByName(serverList.get(i).get_IP_Address())", "java.util.ArrayList<ClientObject>.get(int)", "java.util.ArrayList<ClientObject>.get(int)", "java.io.PrintWriter.flush()", "java.util.ArrayList<ClientObject>.get(int)", "serverList.get(i).get_IP_Address()", "java.net.Socket.getOutputStream()", "java.io.PrintWriter.print(java.lang.String)", "java.net.Socket.close()"], "Fixed commit": "4210f6c3e7c5f1c1679286db031a402bc1da6594", "Url": "https://api.github.com/repos/mikebal/CPSC559_Tracker_Server", "Date": "2016-04-01T17:37:59Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (assignment3.model.HealthProfile hp : assignment3.client.SoapClient.soapInterface.getPersonHealthProfileHistory(assignment3.client.SoapClient.getSelectedPerson().getPerson_id()).getHealthProfileHistory()) { java.lang.System.out.println(hp); } } catch (java.lang.Exception e) { java.lang.System.out.println(\"\\nSorry! Some problems occurs during get health profile history!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8588/buggy-version/src.assignment3.client.SoapClient.java", "BodyUseAPI": ["java.io.PrintStream.println(assignment3.model.HealthProfile)", "assignment3.ws.Soap.getPersonHealthProfileHistory(assignment3.client.SoapClient.getSelectedPerson().getPerson_id())", "assignment3.client.SoapClient.soapInterface.getPersonHealthProfileHistory(assignment3.client.SoapClient.getSelectedPerson().getPerson_id()).getHealthProfileHistory()", "assignment3.client.SoapClient.getSelectedPerson()", "assignment3.model.Person.getPerson_id()"], "Fixed commit": "c6a1ff96955496c806cd6f174f5023a9256836c7", "Url": "https://api.github.com/repos/llollox/assignment3", "Date": "2013-12-09T17:38:42Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { read = he.getRequestBody().read(buffer, 0, buffer.length); } catch (java.io.IOException e) { this.sendError(he); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8307/buggy-version/src.webserver.chat.ChatHandler.java", "BodyUseAPI": ["java.io.InputStream.read(byte[],int,int)", "com.sun.net.httpserver.HttpExchange.getRequestBody()"], "Fixed commit": "8f181d4c604607acec79ec39bef51b2d6e42a0b0", "Url": "https://api.github.com/repos/krisraich/WebRadio", "Date": "2017-03-09T10:29:00Z"},
{"Line": "=>546", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { fix = org.hdiv.util.URLEncoder.encode(value, Constants.ENCODING_ISO_8859_1); fix = java.net.URLDecoder.decode(fix, Constants.ENCODING_UTF_8); } catch (java.lang.Exception e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7876/buggy-version/hdiv-core.src.main.java.org.hdiv.util.HDIVUtil.java", "BodyUseAPI": ["java.net.URLDecoder.decode(java.lang.String,Constants.ENCODING_UTF_8)", "org.hdiv.util.URLEncoder.encode(java.lang.String,Constants.ENCODING_ISO_8859_1)"], "Fixed commit": "296899e495e332e842d73dc090e72e306321b57d", "Url": "https://api.github.com/repos/hdiv/hdiv", "Date": "2017-11-13T16:37:59Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { siftedText.setText(sifter.sift()); } catch (java.lang.Exception e) { siftedText.setText(\"ERROR: Exception occurred while sifting text.\"); android.util.Log.e(\"Sift\", e.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3706/buggy-version/src.main.java.com.pebbleSifter.asyncTasks.SetSifter.java", "BodyUseAPI": ["android.widget.TextView.setText(sifter.sift())", "com.pebbleSifter.sifters.PebbleSifter.sift()"], "Fixed commit": "b17be7d5f774ee90d5258bd926be6d55a8b063d5", "Url": "https://api.github.com/repos/thompsnm/PebbleSifter", "Date": "2013-11-19T14:23:36Z"},
{"Line": "=>528", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { emfModelResource.save(null); } catch (org.openflexo.foundation.resource.SaveResourceException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/278/buggy-version/emfconnector.src.main.java.org.openflexo.technologyadapter.emf.EMFTechnologyAdapter.java", "BodyUseAPI": ["org.openflexo.technologyadapter.emf.rm.EMFModelResource.save(<nulltype>)"], "Fixed commit": "5442e6808c28a3b971f6d1cd41f3dd94bb4842b8", "Url": "https://api.github.com/repos/openflexo-team/openflexo-technology-adapters", "Date": "2015-03-17T13:48:12Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { pstmt = conn.prepareStatement(sql); pstmt.setString(1, id); rs = pstmt.executeQuery(); } catch (java.sql.SQLException e) { logger.info(\"error\"); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7607/buggy-version/src.main.java.database.DatabaseManager.java", "BodyUseAPI": ["java.sql.Connection.prepareStatement(java.lang.String)", "java.sql.PreparedStatement.executeQuery()", "java.sql.PreparedStatement.setString(int,java.lang.String)"], "Fixed commit": "d298e1deed7b4ef5d7031d4cc30f6e7ea41cebdf", "Url": "https://api.github.com/repos/NHNNEXT/2014-01-HUDI-SAGIMARA", "Date": "2014-04-28T12:13:25Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { reproduce(cell); return true; } finally { cell.reproduceLock.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6467/buggy-version/src.main.java.com.pcbe.cell.SCell.java", "BodyUseAPI": ["com.pcbe.cell.SCell.reproduce(com.pcbe.cell.SCell)"], "Fixed commit": "31010ebe9a3dea3e1f3cd787ea6583608dcc18c6", "Url": "https://api.github.com/repos/mariarosu95/PCBE", "Date": "2017-11-08T18:18:05Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { recorder.stop(); } catch (java.lang.RuntimeException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3931/buggy-version/MyApplication.app.src.main.java.be.ucll.mobile.aphasia.Activities.AudioActivity.java", "BodyUseAPI": ["android.media.MediaRecorder.stop()"], "Fixed commit": "25bb7b8b181f61c79dc204bc6157f4b706059cda", "Url": "https://api.github.com/repos/tomploem/Aphasia_MobileApplication", "Date": "2017-01-13T13:29:26Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { email = data.getString(\"email\"); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/635/buggy-version/src.com.richitec.chinesetelephone.assist.EmailSettingActivity.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "82307491db6400bfef67b6b9025f85eb816c82e6", "Url": "https://api.github.com/repos/ElegantCloud/ChineseTelephone_android", "Date": "2013-01-31T03:32:35Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { if ((bulkRequest.numberOfActions()) > 0) { executeBulk(bulkRequest); } } finally { progress.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3545/buggy-version/server.sonar-server.src.main.java.org.sonar.server.es.BulkIndexer.java", "BodyUseAPI": ["org.elasticsearch.action.bulk.BulkRequestBuilder.numberOfActions()", "org.sonar.server.es.BulkIndexer.executeBulk(org.elasticsearch.action.bulk.BulkRequestBuilder)"], "Fixed commit": "56dae38ef1cdd8fa9154f6e754f0bbe6f03b8735", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2014-12-18T17:06:53Z"},
{"Line": "=>910", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.wait(retryBackoffMs); } catch (java.lang.InterruptedException e2) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7605/buggy-version/clients.src.main.java.org.apache.kafka.clients.consumer.internals.AbstractCoordinator.java", "BodyUseAPI": ["org.apache.kafka.clients.consumer.internals.AbstractCoordinator.wait(long)"], "Fixed commit": "0f8ad921af73ce023cc39be715501058ee30d086", "Url": "https://api.github.com/repos/MonsantoCo/kafka", "Date": "2017-02-17T19:06:01Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { distTravelled = event.getFrom().distance(event.getTo()); } catch (java.lang.IllegalArgumentException e) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3544/buggy-version/src.me.staartvin.statz.listeners.PlayerMoveListener.java", "BodyUseAPI": ["org.bukkit.event.player.PlayerMoveEvent.getTo()", "org.bukkit.event.player.PlayerMoveEvent.getFrom()", "event.getFrom().distance(event.getTo())"], "Fixed commit": "fff53ed7d64925e08e99018a9abdfe36e060cc02", "Url": "https://api.github.com/repos/Staartvin/Statz", "Date": "2016-07-12T19:24:44Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { name = ((android.widget.EditText) (findViewById(R.id.edit_name))).getText().toString(); hours = java.lang.Integer.parseInt(((android.widget.EditText) (findViewById(R.id.edit_hours))).getText().toString()); rating = ((android.widget.RatingBar) (findViewById(R.id.edit_rating))).getRating(); } catch (java.lang.NumberFormatException e) { android.util.Log.e(\"Input\", \"number format error\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/9151/buggy-version/app.src.main.java.com.erichay.bestschedule.EditTask.java", "BodyUseAPI": ["((android.widget.EditText) (findViewById(R.id.edit_name))).getText()", "com.erichay.bestschedule.EditTask.findViewById(R.id.edit_rating)", "((android.widget.EditText) (findViewById(R.id.edit_hours))).getText().toString()", "com.erichay.bestschedule.EditTask.findViewById(R.id.edit_hours)", "((android.widget.EditText) (findViewById(R.id.edit_name))).getText().toString()", "java.lang.Integer.parseInt(((android.widget.EditText) (findViewById(R.id.edit_hours))).getText().toString())", "((android.widget.EditText) (findViewById(R.id.edit_hours))).getText()", "((android.widget.RatingBar) (findViewById(R.id.edit_rating))).getRating()", "com.erichay.bestschedule.EditTask.findViewById(R.id.edit_name)"], "Fixed commit": "d9a0fd8231f69c0a78bf0b1909f53e13e9363196", "Url": "https://api.github.com/repos/ehay64/BestSchedule", "Date": "2017-01-22T01:39:20Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { parameterNames.add(localVariables.get((i + offset)).name); } catch (java.lang.NullPointerException npe) { npe.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6215/buggy-version/src.ca.weblite.netbeans.mirah.lexer.ClassQuery.java", "BodyUseAPI": ["java.util.List<org.objectweb.asm.tree.LocalVariableNode>.get(int)", "java.util.List<java.lang.String>.add(localVariables.get((i + offset)).name)"], "Fixed commit": "1a36d3ea06b3f09675630495f818b997bdd55953", "Url": "https://api.github.com/repos/shannah/mirah-nbm", "Date": "2014-10-20T18:43:16Z"},
{"Line": "=>453", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { lInverseMatrix = lMatrix.invert(); } catch (javax.vecmath.SingularMatrixException e) { e.printStackTrace(); setConfigurationState(pLightSheetIndex, ConfigurationState.FAILED); return java.lang.Double.NaN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/969/buggy-version/src.clearcontrol.microscope.lightsheet.calibrator.modules.impl.CalibrationXY.java", "BodyUseAPI": ["org.ejml.simple.SimpleMatrix.invert()"], "Fixed commit": "fe339ac3e1887475037e35ed74fa649c4f9ff51a", "Url": "https://api.github.com/repos/ClearControl/clearcontrol-lightsheet", "Date": "2017-11-26T16:46:43Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return dateFormat.parse(gameDate).compareTo(dateFormat.parse(o.getGameDate())); } catch (java.text.ParseException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7909/buggy-version/src.com.scribble.nbacb.models.NbacbPrediction.java", "BodyUseAPI": ["java.util.Date.compareTo(java.util.Date)", "java.text.DateFormat.parse(java.lang.String)", "com.scribble.nbacb.models.NbacbPrediction.getGameDate()", "java.text.DateFormat.parse(java.lang.String)"], "Fixed commit": "01c2760ca4e69fbe4edd3b228f9509c3023dc278", "Url": "https://api.github.com/repos/cmouli84/CollegeBasketballOdds", "Date": "2016-02-28T05:10:08Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.List<bf.io.openshop.entities.filtr.FilterValueColor> colorValues = ((bf.io.openshop.entities.filtr.FilterTypeColor) (filterType)).getValues(); if (((colorValues.get(0).getId()) != (bf.io.openshop.ux.adapters.FilterRecyclerAdapter.DEFAULT_ID)) || (!(colorValues.get(0).getValue().equals(context.getString(R.string.All))))) { colorValues.add(0, new bf.io.openshop.entities.filtr.FilterValueColor(bf.io.openshop.ux.adapters.FilterRecyclerAdapter.DEFAULT_ID, context.getString(R.string.All))); } } catch (java.lang.Exception e) { timber.log.Timber.e(e, \"Setting default value for color filter failed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5844/buggy-version/app.src.main.java.bf.io.openshop.ux.adapters.FilterRecyclerAdapter.java", "BodyUseAPI": ["colorValues.get(0).getValue().equals(context.getString(R.string.All))", "bf.io.openshop.entities.filtr.FilterType.getValues()", "java.util.List<bf.io.openshop.entities.filtr.FilterValueColor>.get(int)", "colorValues.get(0).getId()", "android.content.Context.getString(R.string.All)", "java.util.List<bf.io.openshop.entities.filtr.FilterValueColor>.add(int,bf.io.openshop.entities.filtr.FilterValueColor)", "java.util.List<bf.io.openshop.entities.filtr.FilterValueColor>.get(int)", "colorValues.get(0).getValue()", "android.content.Context.getString(R.string.All)"], "Fixed commit": "84a87757012c55e1f98c9431b6892769cf50045b", "Url": "https://api.github.com/repos/openshopio/openshop.io-android", "Date": "2016-10-21T08:50:36Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { doc = doc.getTranslatedDocument(context); } catch (com.xpn.xwiki.XWikiException e) { de.csw.xwiki.plugin.OntologyNotificationRule.log.error(\"could not fetch translation\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7209/buggy-version/src.java.de.csw.xwiki.plugin.OntologyNotificationRule.java", "BodyUseAPI": ["com.xpn.xwiki.doc.XWikiDocument.getTranslatedDocument(com.xpn.xwiki.XWikiContext)"], "Fixed commit": "f0feb5b8ae134a26420e2c9050e97b2089a07f2f", "Url": "https://api.github.com/repos/espresto/XWikiLinkRecommender", "Date": "2014-08-07T13:47:27Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { addr = getAddressFromLocation(location); } catch (java.lang.Exception e) { throw new java.lang.Exception(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7711/buggy-version/app.src.main.java.a_team.gametrade.SignUpActivity.java", "BodyUseAPI": ["a_team.gametrade.SignUpActivity.getAddressFromLocation(android.location.Location)"], "Fixed commit": "82e43f4ad7b7a5be61a6e4f9e79a00958ca5f51b", "Url": "https://api.github.com/repos/mjs330/GameTrade", "Date": "2015-12-03T20:35:31Z"},
{"Line": "=>2444", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((hq != '-') && (hq != '*')) { blRetVal = (((strSymbolID.substring(10, 11).equals(\"A\")) || (strSymbolID.substring(10, 11).equals(\"B\"))) || (strSymbolID.substring(10, 11).equals(\"C\"))) || (strSymbolID.substring(10, 11).equals(\"D\")); }else { blRetVal = ((strSymbolID.charAt(0)) == 'S') && (strSymbolID.substring(4, 6).equals(\"UH\")); } return blRetVal; } catch (java.lang.Throwable t) { java.lang.System.out.println(t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2173/buggy-version/core.JavaRendererUtils.src.main.java.ArmyC2.C2SD.Utilities.SymbolUtilities.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)", "java.lang.String.charAt(int)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)"], "Fixed commit": "3c21ee4dab53fcfa68403afb961acd654aff7b6d", "Url": "https://api.github.com/repos/missioncommand/mil-sym-java", "Date": "2017-03-24T17:04:45Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (myServer.newAccount(type, name, java.lang.Float.parseFloat(balance))) { javax.swing.JOptionPane.showMessageDialog(null, \"Account created successfully\"); }else { javax.swing.JOptionPane.showMessageDialog(null, \"Account not created!\"); } } catch (java.lang.NumberFormatException exc) { javax.swing.JOptionPane.showMessageDialog(null, \"Account not created!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1940/buggy-version/src.banking.gui.MainFrame.java", "BodyUseAPI": ["javax.swing.JOptionPane.showMessageDialog(<nulltype>,java.lang.String)", "javax.swing.JOptionPane.showMessageDialog(<nulltype>,java.lang.String)", "banking.primitive.core.AccountServer.newAccount(java.lang.String,java.lang.String,float)", "java.lang.Float.parseFloat(java.lang.String)"], "Fixed commit": "4175f41f391bbef321f7a939c539ba93e6dd2c40", "Url": "https://api.github.com/repos/trevorforrey/ser316labcr", "Date": "2017-02-21T04:44:24Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (balance < 0.0F) { throw new java.lang.IllegalArgumentException(\"New account may not be started with a negative balance\"); } if (name.equals(\"\")) { throw new java.lang.IllegalArgumentException(\"New account may not be started without a name\"); } return newAccountFactory(type, name, balance); } catch (java.lang.IllegalArgumentException exc) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1940/buggy-version/src.banking.primitive.core.ServerSolution.java", "BodyUseAPI": ["banking.primitive.core.ServerSolution.newAccountFactory(java.lang.String,java.lang.String,float)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "4175f41f391bbef321f7a939c539ba93e6dd2c40", "Url": "https://api.github.com/repos/trevorforrey/ser316labcr", "Date": "2017-02-21T04:44:24Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { retrievedMemory = importFromJson(jsonString); } catch (com.google.gson.JsonSyntaxException e) { java.lang.System.out.println(\"Storage file is not in proper JSON format, or has been corrupted.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6711/buggy-version/src.com.equinox.StorageHandler.java", "BodyUseAPI": ["com.equinox.StorageHandler.importFromJson(java.lang.String)"], "Fixed commit": "eccdd4a8b25a021a62780aa7e11a45b50a7e827e", "Url": "https://api.github.com/repos/cs2103jan2015-w15-3j/main", "Date": "2015-04-08T14:28:04Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.itemRender.renderItemAndEffectIntoGUI(tmpStack.get(item.ore.getMeta()), ((item.x) + 2), ((item.y) + 2)); } catch (java.lang.IndexOutOfBoundsException ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7482/buggy-version/src.main.java.com.xray.client.gui.GuiList.java", "BodyUseAPI": ["item.ore.getMeta()", "java.util.List<net.minecraft.item.ItemStack>.get(item.ore.getMeta())", "this.itemRender.renderItemAndEffectIntoGUI(tmpStack.get(item.ore.getMeta()),((item.x) + 2),((item.y) + 2))"], "Fixed commit": "6cd3b755a6357b8e6105f3278450800108a8e000", "Url": "https://api.github.com/repos/MichaelHillcox/XRay-Mod", "Date": "2017-07-12T20:08:15Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { de.onyxbits.filecast.gui.FileTreeNode ftn = ((de.onyxbits.filecast.gui.FileTreeNode) (directory.getModel().getRoot())); ftn = ftn.searchFor(file); javax.swing.tree.TreePath tp = ftn.getPath(); directory.setSelectionPath(tp); directory.scrollPathToVisible(tp); if (file.isDirectory()) { directory.expandPath(tp); } } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2485/buggy-version/src.main.java.de.onyxbits.filecast.gui.MainWindow.java", "BodyUseAPI": ["de.onyxbits.filecast.gui.FileTreeNode.getPath()", "javax.swing.JTree.scrollPathToVisible(javax.swing.tree.TreePath)", "javax.swing.tree.TreeModel.getRoot()", "javax.swing.JTree.getModel()", "javax.swing.JTree.setSelectionPath(javax.swing.tree.TreePath)", "java.io.File.isDirectory()", "de.onyxbits.filecast.gui.FileTreeNode.searchFor(java.io.File)", "javax.swing.JTree.expandPath(javax.swing.tree.TreePath)"], "Fixed commit": "6ba49d1cfb2e9775126115d4f1dc444ee5738cb3", "Url": "https://api.github.com/repos/onyxbits/FileCast", "Date": "2015-04-04T21:42:54Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { int port = java.lang.Integer.parseInt(textFieldPort.getText()); if ((1024 < port) && (port < 65536)) { isServerPortValid = true; }else { throw new java.lang.NumberFormatException(); } } catch (java.lang.NumberFormatException e) { javax.swing.JOptionPane.showMessageDialog(null, \"Invalid server port number input.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6013/buggy-version/src.com.github.idnbso.HIT.Java.Assignments.chat.ClientGUI.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "javax.swing.JTextField.getText()"], "Fixed commit": "9b0fb542e86a0dd3235c1e01e744d786081dd370", "Url": "https://api.github.com/repos/idnbso/HITJavaAssignments", "Date": "2015-11-22T16:04:55Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { workers.awaitTermination(2, java.util.concurrent.TimeUnit.MINUTES); } catch (java.lang.InterruptedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1132/buggy-version/core.src.main.java.com.orientechnologies.orient.core.Orient.java", "BodyUseAPI": ["java.util.concurrent.ThreadPoolExecutor.awaitTermination(int,java.util.concurrent.TimeUnit)"], "Fixed commit": "9508b8743b6d207378ac406f76b49ff9113f9423", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-10-30T15:32:12Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { federationAdminService.updateRegistryEntry(metacard, locations); } catch (org.codice.ddf.registry.federationadmin.service.internal.FederationAdminException e) { federationAdminService.addRegistryEntry(metacard, locations); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7619/buggy-version/catalog.spatial.registry.registry-federation-admin-service-impl.src.main.java.org.codice.ddf.registry.federationadmin.service.impl.RegistryPublicationServiceImpl.java", "BodyUseAPI": ["org.codice.ddf.registry.federationadmin.service.internal.FederationAdminService.updateRegistryEntry(ddf.catalog.data.Metacard,java.util.Set<java.lang.String>)"], "Fixed commit": "c2b210d5316f58257e1d4ab73d8d374b0048c73d", "Url": "https://api.github.com/repos/clockard/ddf", "Date": "2016-09-12T15:16:43Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { startDurableOperation(transaction); final java.util.Queue<com.orientechnologies.orient.core.index.sbtreebonsai.local.OBonsaiBucketPointer> subTreesToDelete = new java.util.LinkedList<com.orientechnologies.orient.core.index.sbtreebonsai.local.OBonsaiBucketPointer>(); subTreesToDelete.add(rootBucketPointer); recycleSubTrees(subTreesToDelete); endDurableOperation(transaction, false); } catch (java.io.IOException e) { rollback(transaction); throw new com.orientechnologies.orient.core.index.sbtree.local.OSBTreeException((\"Error during delete of sbtree with name \" + (name)), e); } finally { com.orientechnologies.orient.core.index.sbtreebonsai.local.OSBTreeBonsai.releaseExclusiveLock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5259/buggy-version/core.src.main.java.com.orientechnologies.orient.core.index.sbtreebonsai.local.OSBTreeBonsai.java", "BodyUseAPI": ["com.orientechnologies.orient.core.index.sbtreebonsai.local.OSBTreeBonsai<K, V>.endDurableOperation(com.orientechnologies.orient.core.storage.impl.local.paginated.OStorageTransaction,boolean)", "com.orientechnologies.orient.core.index.sbtreebonsai.local.OSBTreeBonsai<K, V>.recycleSubTrees(java.util.Queue<com.orientechnologies.orient.core.index.sbtreebonsai.local.OBonsaiBucketPointer>)", "com.orientechnologies.orient.core.index.sbtreebonsai.local.OSBTreeBonsai<K, V>.startDurableOperation(com.orientechnologies.orient.core.storage.impl.local.paginated.OStorageTransaction)", "java.util.Queue<com.orientechnologies.orient.core.index.sbtreebonsai.local.OBonsaiBucketPointer>.add(com.orientechnologies.orient.core.index.sbtreebonsai.local.OBonsaiBucketPointer)"], "Fixed commit": "e46217763c154a58a0212edbeec2f9b3fae95011", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2013-11-28T07:59:12Z"},
{"Line": "=>1470", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { parseAlert(); } catch (java.lang.Exception e) { java.lang.System.out.println((\"snorter error parsing alert: \" + e)); java.lang.System.out.println(((\"alert {\" + (new java.lang.String(alertLine, 0, alertInd))) + \"}\")); e.printStackTrace(java.lang.System.out); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2630/buggy-version/src.main.java.com.threeshell.Pro2be.java", "BodyUseAPI": ["com.threeshell.Pro2be.Snorter.parseAlert()"], "Fixed commit": "82913d601e9a159d0b7bf486d13a2c507e0dea2d", "Url": "https://api.github.com/repos/deepnode/feeds", "Date": "2017-08-04T15:20:33Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return getConvention().getRules(); } catch (java.lang.Exception e) { logger.error(\"JdbcStoragePlugin.getPhysicalOptimizerRules\", e); return java.util.Collections.emptySet(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1646/buggy-version/src.main.java.org.apache.drill.exec.store.idvp.jdbc.JdbcStoragePlugin.java", "BodyUseAPI": ["org.apache.drill.exec.store.idvp.jdbc.JdbcStoragePlugin.getConvention()", "org.apache.drill.exec.store.idvp.jdbc.DrillJdbcConvention.getRules()"], "Fixed commit": "8960cbfece425c5357062b39d4189f5cf475f07c", "Url": "https://api.github.com/repos/idvp-project/drill-jdbc-storage", "Date": "2017-09-05T10:37:29Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mediaVolume = settings.getBoolean(\"mediaVolume\", false); } catch (java.lang.ClassCastException e) { editor.putBoolean(\"mediaVolume\", false); editor.commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/614/buggy-version/src.net.muteheadlight.docksoundredir.dockSoundRedirect.java", "BodyUseAPI": ["android.content.SharedPreferences.getBoolean(java.lang.String,boolean)"], "Fixed commit": "ede60d16f9b2fdb38a781dc245df988bf6114c26", "Url": "https://api.github.com/repos/xcaliburinhand/DockSoundRedirector", "Date": "2012-08-04T15:54:41Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ((Customer) (Theater.getInstance().getCustomerList().getCustomerAccount(id))).addCreditCard(creditCard); } catch (java.lang.NullPointerException e) { java.lang.System.out.println(\"Error, specified account does not exist, did you enter the correct accound Id?\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5338/buggy-version/src.Interface.java", "BodyUseAPI": ["Theater.getInstance()", "Theater.getInstance().getCustomerList().getCustomerAccount(int)", "Theater.getInstance().getCustomerList()", "((Customer) (Theater.getInstance().getCustomerList().getCustomerAccount(id))).addCreditCard(CreditCard)"], "Fixed commit": "b055d12eb6e1c2958be729039cce8ff6dd4a0e46", "Url": "https://api.github.com/repos/FreezeWarp/372Groupwork-Project1", "Date": "2017-06-14T21:28:02Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mRecorder.stop(); mElapsedMillis = (java.lang.System.currentTimeMillis()) - (mStartingTimeMillis); mRecorder.release(); } catch (java.lang.RuntimeException e) { android.util.Log.e(com.danielkim.soundrecorder.RecordingService.LOG_TAG, \"Runtime Exception\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4600/buggy-version/app.src.main.java.com.danielkim.soundrecorder.RecordingService.java", "BodyUseAPI": ["android.media.MediaRecorder.stop()", "java.lang.System.currentTimeMillis()", "android.media.MediaRecorder.release()"], "Fixed commit": "17b1c63a81c821de04ed8c9aa70fb3419bbe7372", "Url": "https://api.github.com/repos/manori1011/SoundRecorder", "Date": "2017-11-27T10:33:45Z"},
{"Line": "=>595", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { new org.nutz.lang.meta.Email(input.toString()); return true; } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5416/buggy-version/src.org.nutz.lang.Strings.java", "BodyUseAPI": ["java.lang.CharSequence.toString()"], "Fixed commit": "2e197e65ffc6c695aa404203df64511b04dfd1dc", "Url": "https://api.github.com/repos/nutzam/nutz", "Date": "2012-03-27T03:40:13Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { double wD = java.lang.Double.parseDouble(weight); wInt = ((int) (java.lang.Math.round(wD))); } catch (java.lang.NumberFormatException e) { flash.put(\"numError\", \"A real number, please\"); controllers.WeightOff.add(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1158/buggy-version/app.controllers.WeightOff.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)", "java.lang.Math.round(double)"], "Fixed commit": "2d3b5113111de6eae71eb00b1a1b4f57fb853f1c", "Url": "https://api.github.com/repos/tomnatt/weight-off", "Date": "2013-01-04T20:18:02Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { item.setTrained(itemObject.getAsInt()); } catch (java.lang.UnsupportedOperationException ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3947/buggy-version/Habitica.src.main.java.com.habitrpg.android.habitica.utils.PetListDeserializer.java", "BodyUseAPI": ["com.google.gson.JsonElement.getAsInt()", "com.habitrpg.android.habitica.models.inventory.Pet.setTrained(itemObject.getAsInt())"], "Fixed commit": "85b21ec1b4f9723ad5ee123bf93f4bd81664b37e", "Url": "https://api.github.com/repos/HabitRPG/habitica-android", "Date": "2017-11-16T21:24:50Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { pet.setTrained(entry.getValue().getAsInt()); } catch (java.lang.UnsupportedOperationException ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3947/buggy-version/Habitica.src.main.java.com.habitrpg.android.habitica.utils.PetListDeserializer.java", "BodyUseAPI": ["com.habitrpg.android.habitica.models.inventory.Pet.setTrained(entry.getValue().getAsInt())", "java.util.Map.Entry<java.lang.String, com.google.gson.JsonElement>.getValue()", "entry.getValue().getAsInt()"], "Fixed commit": "85b21ec1b4f9723ad5ee123bf93f4bd81664b37e", "Url": "https://api.github.com/repos/HabitRPG/habitica-android", "Date": "2017-11-16T21:24:50Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.Ben12345rocks.AdvancedCore.mysql.api.queries.Query query = new com.Ben12345rocks.AdvancedCore.mysql.api.queries.Query(mysql, q); query.executeBatch(); } catch (java.sql.SQLException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8215/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.mysql.MySQL.java", "BodyUseAPI": ["com.Ben12345rocks.AdvancedCore.mysql.api.queries.Query.executeBatch()"], "Fixed commit": "cb4e65825aeaeb5847307ac0c9433c2fa9d878af", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2017-10-22T17:51:54Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { int progress = 0; for (com.filemanager.files.FileHolder fh : mFileHolders) { if (mCancel) { break; } recursiveDelete(fh.getFile()); try { dialog.setProgress(progress); } catch (java.lang.Exception e) { } progress++; } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/28/buggy-version/FileManager.src.com.filemanager.dialogs.MultiDeleteDialog.java", "BodyUseAPI": ["com.filemanager.dialogs.MultiDeleteDialog.RecursiveDeleteTask.recursiveDelete(fh.getFile())", "com.afollestad.materialdialogs.MaterialDialog.setProgress(int)", "com.filemanager.files.FileHolder.getFile()"], "Fixed commit": "d7c5ffc07b100cfdc1bc3c8261bec076244a1400", "Url": "https://api.github.com/repos/imoblife/filemanager", "Date": "2016-06-13T08:22:12Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (effects.Effect e : effects) { image = e.apply(image); } } catch (java.util.ConcurrentModificationException e) { return WarpApp.ImageWarper.toBuffImg(image); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8508/buggy-version/WackyCamera.src.WarpApp.ImageWarper.java", "BodyUseAPI": ["effects.Effect.apply(util.Image)"], "Fixed commit": "53d5597c79467d471e1438e99b2773a1988e1494", "Url": "https://api.github.com/repos/blaze237/HackNotts2107", "Date": "2017-10-29T03:37:18Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return basedApplicationTemplateHome.getNode(portletName); } catch (javax.jcr.PathNotFoundException pne) { javax.jcr.Node templateHome = basedApplicationTemplateHome.addNode(portletName); basedApplicationTemplateHome.save(); return templateHome; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6845/buggy-version/core.services.src.main.java.org.exoplatform.services.cms.views.impl.ApplicationTemplateManagerServiceImpl.java", "BodyUseAPI": ["javax.jcr.Node.getNode(java.lang.String)"], "Fixed commit": "82f25adc8a642b6640817b45662a4d8d38c4c73a", "Url": "https://api.github.com/repos/exodev/ecms", "Date": "2013-07-16T04:33:54Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return getCompanyBusiness().getCompany(((java.lang.Object) (personalID))); } catch (java.rmi.RemoteException e) { getLogger().log(java.util.logging.Level.WARNING, \"Unable to search database: \", e); } catch (javax.ejb.FinderException e) { getLogger().log(java.util.logging.Level.WARNING, (\"Unable to find company by primary key: \" + personalID)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4749/buggy-version/src.java.com.idega.company.business.impl.CompanyServiceImpl.java", "BodyUseAPI": ["com.idega.company.business.CompanyBusiness.getCompany(java.lang.String)", "com.idega.company.business.impl.CompanyServiceImpl.getCompanyBusiness()"], "Fixed commit": "2054a05024eaf06367d3f26091a6503a86875371", "Url": "https://api.github.com/repos/idega/com.idega.company", "Date": "2013-06-12T09:50:44Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return getCompanyHome().findByPrimaryKey(new java.lang.Integer(pk.toString())); } catch (java.lang.NumberFormatException e) { getLogger().warning((((\"Failed to convert \" + (pk.toString())) + \" to \") + (java.lang.Integer.class.getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4749/buggy-version/src.java.com.idega.company.business.CompanyBusinessBean.java", "BodyUseAPI": ["java.lang.Object.toString()", "com.idega.company.data.CompanyHome.findByPrimaryKey(java.lang.Integer)", "com.idega.company.business.CompanyBusinessBean.getCompanyHome()"], "Fixed commit": "2054a05024eaf06367d3f26091a6503a86875371", "Url": "https://api.github.com/repos/idega/com.idega.company", "Date": "2013-06-12T09:50:44Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((getActionBar().getSelectedTab().getPosition()) == 0) { reLoad(); } } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4170/buggy-version/PublicrowdFunding.src.adullact.publicrowdfunding.MainActivity.java", "BodyUseAPI": ["adullact.publicrowdfunding.MainActivity.11.reLoad()", "getActionBar().getSelectedTab()", "adullact.publicrowdfunding.MainActivity.11.getActionBar()", "getActionBar().getSelectedTab().getPosition()"], "Fixed commit": "e537c1678d5f28358885a03062b1d4772319a10e", "Url": "https://api.github.com/repos/Crikka/appli-libre", "Date": "2014-08-22T14:54:29Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (mainPackage.TournamentFile tournamentFile : tournamentFiles) { model.addRow(new java.lang.Object[]{ tournamentFile.toString(), tournamentFile.getWins(), tournamentFile.getDraws(), tournamentFile.getLoses() }); } } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2046/buggy-version/src.antgame.gui.TournamentStatsFloat.java", "BodyUseAPI": ["javax.swing.table.DefaultTableModel.addRow(java.lang.Object[])", "mainPackage.TournamentFile.getDraws()", "mainPackage.TournamentFile.getWins()", "mainPackage.TournamentFile.getLoses()", "mainPackage.TournamentFile.toString()"], "Fixed commit": "1dc3197a8d9cd89d9d044ffd5f1167996fbfc3f8", "Url": "https://api.github.com/repos/jay-to-the-dee/software-engineering", "Date": "2014-04-10T13:24:07Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ft = filter.equals(\"1\"); } catch (java.lang.Exception e1) { ft = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5480/buggy-version/src.org.smg.server.servlet.user.UserFriendBlackList.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "41a6e2a7e5f83bda54c613fde169e0e64248210e", "Url": "https://api.github.com/repos/lisajluo/smg-server", "Date": "2014-04-28T04:37:02Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.widget.Toast.makeText(context, \"Problem getting data from Internet\", Toast.LENGTH_SHORT).show(); } catch (java.lang.Exception e) { org.sefaria.sefaria.GoogleTracker.sendException(e, \"API toast\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5502/buggy-version/app.src.main.java.org.sefaria.sefaria.database.API.java", "BodyUseAPI": ["android.widget.Toast.makeText(context, \"Problem getting data from Internet\", Toast.LENGTH_SHORT).show()", "android.widget.Toast.makeText(android.content.Context,java.lang.String,Toast.LENGTH_SHORT)"], "Fixed commit": "c08442d1b18d3dbb84a9fdce334984ec8f4ffecb", "Url": "https://api.github.com/repos/Sefaria/Sefaria-Android", "Date": "2016-04-10T02:28:34Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { debtBalance = customerAccountDebtDao.customerAccountBalancePerCustomerAndDate(dateTo, customer.getId()); } catch (java.lang.Exception e1) { debtBalance = 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4324/buggy-version/retail-web-services.src.main.java.au.com.biztune.retail.Report.CustomerStatementRptMgr.java", "BodyUseAPI": ["au.com.biztune.retail.dao.CustomerAccountDebtDao.customerAccountBalancePerCustomerAndDate(java.sql.Timestamp,customer.getId())", "au.com.biztune.retail.domain.Customer.getId()"], "Fixed commit": "1bc1e075dfce87dd99ddc42bd2e0bbdee0b24ca4", "Url": "https://api.github.com/repos/aroudi/retail", "Date": "2017-03-14T01:31:06Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { weightedTime = java.math.BigDecimal.valueOf(differenceInMillis).divide(java.math.BigDecimal.valueOf(timeBetweenMeasurements), java.math.MathContext.UNLIMITED); } catch (java.lang.ArithmeticException e) { weightedTime = java.math.BigDecimal.valueOf(differenceInMillis).setScale(2, java.math.RoundingMode.CEILING).divide(java.math.BigDecimal.valueOf(timeBetweenMeasurements), java.math.RoundingMode.CEILING); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5919/buggy-version/visor-sensors.src.main.java.de.uniulm.omi.cloudiator.visor.util.MeasurementDifference.java", "BodyUseAPI": ["java.math.BigDecimal.divide(java.math.BigDecimal,java.math.MathContext)", "java.math.BigDecimal.valueOf(long)", "java.math.BigDecimal.valueOf(long)"], "Fixed commit": "00c7515c279428c06d4edfe4774c23e75ef7444b", "Url": "https://api.github.com/repos/cloudiator/visor", "Date": "2016-08-10T14:25:05Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mOwner.setVisible(true); } catch (java.lang.Exception e) { android.util.Log.e(\"!!!\", (\"Error in mOwner.setVisible(true): \" + (e.getMessage()))); mHandler.postDelayed(mRunVisible, 1000); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8507/buggy-version/SmsSafe.src.com.softmo.smssafe.CMHelperBaseActivity.java", "BodyUseAPI": ["android.app.Activity.setVisible(boolean)"], "Fixed commit": "71149bed9553f7e2b689a19e84337e96e6eac044", "Url": "https://api.github.com/repos/rusmonster/PocketSafe", "Date": "2012-07-11T18:51:36Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.github.checkstyle.site.XrefGenerator.codeTransform.transform(sourceFile.getAbsolutePath(), dest.toString(), java.util.Locale.ENGLISH, com.github.checkstyle.site.XrefGenerator.ENCODING, com.github.checkstyle.site.XrefGenerator.ENCODING, \"\", \"\", \"\"); result = sitePath.relativize(dest).toString(); } catch (java.lang.Exception ex) { result = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1162/buggy-version/patch-diff-report-tool.src.main.java.com.github.checkstyle.site.XrefGenerator.java", "BodyUseAPI": ["java.nio.file.Path.toString()", "org.apache.maven.jxr.JavaCodeTransform.transform(java.lang.String,java.lang.String,java.util.Locale,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)", "java.nio.file.Path.toString()", "java.nio.file.Path.relativize(java.nio.file.Path)", "java.io.File.getAbsolutePath()"], "Fixed commit": "be5b13c713aaa8142c7ee0f24f6427bfa162b318", "Url": "https://api.github.com/repos/checkstyle/contribution", "Date": "2017-05-10T01:34:29Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((main.java.com.danielrharris.townywars.WarManager.getWarForNation(event.getTown().getNation()).getTownPoints(event.getTown())) > (TownyWars.pPlayer)) war.chargeTownPoints(n, event.getTown(), TownyWars.pPlayer); } catch (com.palmergames.bukkit.towny.exceptions.NotRegisteredException e) { e.printStackTrace(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2838/buggy-version/src.main.java.com.danielrharris.townywars.WarListener.java", "BodyUseAPI": ["com.palmergames.bukkit.towny.event.TownRemoveResidentEvent.getTown()", "event.getTown().getNation()", "main.java.com.danielrharris.townywars.War.chargeTownPoints(com.palmergames.bukkit.towny.object.Nation,event.getTown(),TownyWars.pPlayer)", "main.java.com.danielrharris.townywars.WarManager.getWarForNation(event.getTown().getNation()).getTownPoints(event.getTown())", "com.palmergames.bukkit.towny.event.TownRemoveResidentEvent.getTown()", "main.java.com.danielrharris.townywars.WarManager.getWarForNation(event.getTown().getNation())", "com.palmergames.bukkit.towny.event.TownRemoveResidentEvent.getTown()"], "Fixed commit": "2e5e9b5635ed80d9cccd07aea479f1eeb3b6a22e", "Url": "https://api.github.com/repos/JimmyMalmer/TownyWarsMCC", "Date": "2014-08-01T22:51:00Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { stop(workspace); } catch (org.apache.sling.api.resource.PersistenceException e1) { com.adobe.acs.commons.workflow.bulk.execution.impl.runners.AEMTransientWorkflowRunnerImpl.log.error(\"Unable to mark this workspace [ {} ] as stopped.\", workspace.getPath(), e1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/887/buggy-version/bundle.src.main.java.com.adobe.acs.commons.workflow.bulk.execution.impl.runners.AEMTransientWorkflowRunnerImpl.java", "BodyUseAPI": ["com.adobe.acs.commons.workflow.bulk.execution.impl.runners.AEMTransientWorkflowRunnerImpl.AEMTransientWorkflowRunnable.stop(com.adobe.acs.commons.workflow.bulk.execution.model.Workspace)"], "Fixed commit": "42984ea2d89fd8d3c165d7521aebc7fceff2f073", "Url": "https://api.github.com/repos/Sc0rpic0m/acs-aem-commons", "Date": "2017-04-15T22:54:36Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { stop(workspace); } catch (org.apache.sling.api.resource.PersistenceException e1) { com.adobe.acs.commons.workflow.bulk.execution.impl.runners.AEMWorkflowRunnerImpl.log.error(\"Unable to mark this workspace [ {} ] as stopped.\", workspace.getPath(), e1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/887/buggy-version/bundle.src.main.java.com.adobe.acs.commons.workflow.bulk.execution.impl.runners.AEMWorkflowRunnerImpl.java", "BodyUseAPI": ["com.adobe.acs.commons.workflow.bulk.execution.impl.runners.AEMWorkflowRunnerImpl.AEMWorkflowRunnable.stop(com.adobe.acs.commons.workflow.bulk.execution.model.Workspace)"], "Fixed commit": "42984ea2d89fd8d3c165d7521aebc7fceff2f073", "Url": "https://api.github.com/repos/Sc0rpic0m/acs-aem-commons", "Date": "2017-04-15T22:54:36Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { userArray = userDAO.getUserList(); } catch (dal.IUserDAO.DALException e) { show(\"ERROR: Could not get the user list!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3626/buggy-version/CDIO1.src.boundary.UserViewer.java", "BodyUseAPI": ["dal.UserDAO.getUserList()"], "Fixed commit": "a9090901dd7bca8d178ad4d257a5ec4dfd74dfd0", "Url": "https://api.github.com/repos/ArvidLangsoe/CDIO1-1", "Date": "2017-02-16T14:20:21Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { formattedPrice = formatter.format(java.lang.Double.parseDouble(newWord)); } catch (java.lang.NumberFormatException e) { formattedPrice = \"$0.00\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7545/buggy-version/app.src.main.java.com.banana.banana.TextParser.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)", "java.text.NumberFormat.format(double)"], "Fixed commit": "1e5d23e492b81d19cf49cc531adc98a0e3f075fe", "Url": "https://api.github.com/repos/leifgrosswiler/Banana", "Date": "2017-05-13T18:20:40Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.runnable.runTask(Civilizations.currentInstance); } catch (java.lang.IllegalStateException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6698/buggy-version/Civilizations.src.main.java.com.kylantraynor.civilizations.menus.Button.java", "BodyUseAPI": ["org.bukkit.scheduler.BukkitRunnable.runTask(Civilizations.currentInstance)"], "Fixed commit": "05b7c14c4129d3663140d44afacebe4ad984c115", "Url": "https://api.github.com/repos/KylanTraynor/Civilizations", "Date": "2016-05-29T18:00:46Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { locale = new java.util.Locale(localeCode.substring(0, 2), localeCode.substring(3, 5)); } catch (java.lang.StringIndexOutOfBoundsException e) { locale = new java.util.Locale(localeCode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5557/buggy-version/AnkiDroid.src.main.java.com.ichi2.utils.LanguageUtil.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)"], "Fixed commit": "55391fde7fd6fdf40ff5c9dfc5483ee952ff3132", "Url": "https://api.github.com/repos/ankidroid/Anki-Android", "Date": "2015-01-29T03:02:44Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { val = java.lang.Integer.parseInt(dev.ukanth.ufirewall.util.G.gPrefs.getString(dev.ukanth.ufirewall.util.G.SORT_BY, \"0\")); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8921/buggy-version/aFWall.src.main.java.dev.ukanth.ufirewall.util.G.java", "BodyUseAPI": ["java.lang.Integer.parseInt(dev.ukanth.ufirewall.util.G.gPrefs.getString(dev.ukanth.ufirewall.util.G.SORT_BY, \"0\"))", "android.content.SharedPreferences.getString(java.lang.String,java.lang.String)"], "Fixed commit": "5fdb6cf228e68005771bb1c92350c23f2ca69410", "Url": "https://api.github.com/repos/ukanth/afwall", "Date": "2015-07-19T02:36:13Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { returnVal = java.lang.Integer.parseInt(dev.ukanth.ufirewall.util.G.gPrefs.getString(dev.ukanth.ufirewall.util.G.PROTECTION_OPTION, \"0\")); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8921/buggy-version/aFWall.src.main.java.dev.ukanth.ufirewall.util.G.java", "BodyUseAPI": ["android.content.SharedPreferences.getString(java.lang.String,java.lang.String)", "java.lang.Integer.parseInt(dev.ukanth.ufirewall.util.G.gPrefs.getString(dev.ukanth.ufirewall.util.G.PROTECTION_OPTION, \"0\"))"], "Fixed commit": "5fdb6cf228e68005771bb1c92350c23f2ca69410", "Url": "https://api.github.com/repos/ukanth/afwall", "Date": "2015-07-19T02:36:13Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return org.joda.time.DateTime.parse(dateString, org.darkware.wpman.wpcli.json.DateTimeSerializer.format); } catch (java.lang.Throwable t) { WPManager.log.error((((\"Error parsing date '\" + dateString) + \"' in cron entry: \") + (t.getLocalizedMessage()))); return org.joda.time.DateTime.now(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2015/buggy-version/src.main.java.org.darkware.wpman.wpcli.json.DateTimeSerializer.java", "BodyUseAPI": ["org.joda.time.DateTime.parse(java.lang.String,org.joda.time.format.DateTimeFormatter)"], "Fixed commit": "d3ab39aa52d7a8a122c88168f7eea032827de157", "Url": "https://api.github.com/repos/zpxio/WPManager", "Date": "2016-03-14T22:41:57Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { tag = java.lang.Enum.valueOf(Skin.Tag.class, qName.toUpperCase()); } catch (java.lang.IllegalArgumentException exc) { java.lang.System.out.println((\"Ignoring unknown tag: \" + tag)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1478/buggy-version/src.eniac.skin.SkinHandler.java", "BodyUseAPI": ["java.lang.Enum.valueOf(java.lang.Class,java.lang.String)", "java.lang.String.toUpperCase()"], "Fixed commit": "a015d33c7e12151b5d47cf26a4ad6694d89b2352", "Url": "https://api.github.com/repos/kinnla/eniac", "Date": "2013-06-21T09:56:47Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.io.BufferedReader read = new java.io.BufferedReader(new java.io.FileReader(_filename)); java.lang.String str = fromHex(read.readLine()); java.lang.String[] tokens = str.split(\":\"); _username = fromHex(tokens[0]); _password = fromHex(tokens[1]); read.close(); } catch (java.lang.Exception ex) { _username = \"\"; _password = \"\"; java.lang.System.out.println(\"Error loading login data\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8715/buggy-version/src.net.ftb.data.PasswordSettings.java", "BodyUseAPI": ["java.io.BufferedReader.readLine()", "java.io.BufferedReader.close()", "java.lang.String.split(java.lang.String)", "net.ftb.data.PasswordSettings.fromHex(java.lang.String)", "net.ftb.data.PasswordSettings.fromHex(java.lang.String)", "net.ftb.data.PasswordSettings.fromHex(java.lang.String)"], "Fixed commit": "7a242a76bc8ddb4cdc7484aa5975609daa04288e", "Url": "https://api.github.com/repos/Slowpoke101/FTBLaunch", "Date": "2012-09-09T06:35:56Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.img = readImage(imgFile); if ((this.img) == null) { throw new java.io.IOException(\"Unable to read Image file\"); } } catch (java.io.IOException e) { java.lang.String msg; if (imgFile != null) { java.lang.String path = imgFile.getAbsolutePath(); if (!(imgFile.exists())) { msg = path + \" does not exist\"; }else { msg = (\"problem reading \" + path) + \". Bad image file type?\"; } }else { msg = \"Item found in config without an image.\"; } throw new javax.imageio.IIOException(msg, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6343/buggy-version/src.main.java.com.clementscode.mmi.res.CategoryItem.java", "BodyUseAPI": ["com.clementscode.mmi.res.CategoryItem.readImage(java.io.File)"], "Fixed commit": "b9d19f016bc64d60f357849306e6e342470f1524", "Url": "https://api.github.com/repos/bclement/MMI", "Date": "2011-07-27T01:20:18Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { mListener = ((com.eduhelper.supereditor.OpenFileFragment.OnOpenFileClick) (context)); } catch (java.lang.ClassCastException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1398/buggy-version/app.src.main.java.com.eduhelper.supereditor.OpenFileFragment.java", "BodyUseAPI": [], "Fixed commit": "6fba68cf599bc34c17311163eb04f12816c5dc1f", "Url": "https://api.github.com/repos/FrogTravel/SuperEditor", "Date": "2017-10-25T15:35:31Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return new java.lang.String(value.getBytes(\"windows-1251\"), \"UTF-8\"); } catch (java.io.UnsupportedEncodingException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1349/buggy-version/web.src.main.java.Model.DishType.java", "BodyUseAPI": ["java.lang.String.getBytes(java.lang.String)"], "Fixed commit": "6708bb80159e2f591994b29f81a14e4354a51cf8", "Url": "https://api.github.com/repos/VeronikaProj/CookTogether", "Date": "2017-10-21T12:08:35Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.util.Log.d(com.sam_chordas.android.stockhawk.service.StockIntentService.class.getSimpleName(), \"Stock Intent Service\"); com.sam_chordas.android.stockhawk.service.StockTaskService stockTaskService = new com.sam_chordas.android.stockhawk.service.StockTaskService(this); android.os.Bundle args = new android.os.Bundle(); if (intent.getStringExtra(Constants.KEY_TAG).equals(\"add\")) { args.putString(\"symbol\", intent.getStringExtra(\"symbol\")); } stockTaskService.onRunTask(new com.google.android.gms.gcm.TaskParams(intent.getStringExtra(Constants.KEY_TAG), args)); } catch (java.lang.Exception ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4290/buggy-version/app.src.main.java.com.sam_chordas.android.stockhawk.service.StockIntentService.java", "BodyUseAPI": ["android.content.Intent.getStringExtra(Constants.KEY_TAG)", "com.sam_chordas.android.stockhawk.service.StockTaskService.onRunTask(com.google.android.gms.gcm.TaskParams)", "android.util.Log.d(java.lang.String,java.lang.String)", "android.os.Bundle.putString(java.lang.String,intent.getStringExtra(\"symbol\"))", "java.lang.Class.getSimpleName()", "android.content.Intent.getStringExtra(java.lang.String)", "android.content.Intent.getStringExtra(Constants.KEY_TAG)", "intent.getStringExtra(Constants.KEY_TAG).equals(java.lang.String)"], "Fixed commit": "b8cf6e4cd4e75b07aee20501bff99ff2819d181f", "Url": "https://api.github.com/repos/SureshCS-50/StockHawk", "Date": "2016-11-08T11:58:13Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.io.InputStream configurationInputStream = new java.io.FileInputStream(calicoConfigurationFile); initScriptContext.loadScriptFile(configurationInputStream, head, footer); } catch (java.io.FileNotFoundException e) { initScriptContext.engine().eval((head + footer)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1038/buggy-version/src.com.taozeyu.calico.Main.java", "BodyUseAPI": ["com.taozeyu.calico.script.ScriptContext.loadScriptFile(java.io.InputStream,java.lang.String,java.lang.String)"], "Fixed commit": "cbe6c847508de11f72247ce0c514de1bd25ce333", "Url": "https://api.github.com/repos/Moskize91/Calico", "Date": "2016-07-17T13:08:29Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { setApp(app); } catch (java.lang.IllegalStateException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7830/buggy-version/src.main.java.com.klinker.android.theme_spotlight.fragment.ThemeFragment.java", "BodyUseAPI": ["com.klinker.android.theme_spotlight.fragment.ThemeFragment.2.setApp(Market.App)"], "Fixed commit": "53ca80f2be4efc0b2c89bbf2825367adf58f69d1", "Url": "https://api.github.com/repos/klinker41/theme-spotlight", "Date": "2014-07-26T02:18:30Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { fragmentManager.beginTransaction().replace(resourceId, fragment).commit(); } catch (java.lang.IllegalStateException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7830/buggy-version/src.main.java.com.klinker.android.theme_spotlight.activity.AuthActivity.java", "BodyUseAPI": ["fragmentManager.beginTransaction().replace(int,android.app.Fragment)", "android.app.FragmentManager.beginTransaction()", "fragmentManager.beginTransaction().replace(resourceId, fragment).commit()"], "Fixed commit": "53ca80f2be4efc0b2c89bbf2825367adf58f69d1", "Url": "https://api.github.com/repos/klinker41/theme-spotlight", "Date": "2014-07-26T02:18:30Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { reader = new CompanyFileReader(args[0]); } catch (BadConfigurationFileException e) { java.lang.System.out.println(\"Error: Cannot access input file\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5543/buggy-version/src.CompanyHierarchyMain.java", "BodyUseAPI": [], "Fixed commit": "86c0e8d0f27e68ab74bdabbbf45ce70ebd43035f", "Url": "https://api.github.com/repos/collielimabean/CS367_Program4", "Date": "2014-03-31T03:42:44Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { indexer.reindex(user.getContact()); } catch (com.liferay.portal.NoSuchContactException nscce) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5406/buggy-version/portal-impl.src.com.liferay.portlet.usersadmin.util.UserIndexer.java", "BodyUseAPI": ["com.liferay.portal.kernel.search.Indexer.reindex(user.getContact())", "com.liferay.portal.model.User.getContact()"], "Fixed commit": "c2383441d34d8e815c98139edef8d24d2256fe6e", "Url": "https://api.github.com/repos/djavorszky/liferay-portal", "Date": "2014-05-20T16:02:55Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { TCPClient.bidirectComm(hp33120a.getFrame(), HP33120aInterface.QUERY_MESSAGE_TYPE); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5429/buggy-version/src.HP33120aControl.java", "BodyUseAPI": ["TCPClient.bidirectComm(hp33120a.getFrame(),HP33120aInterface.QUERY_MESSAGE_TYPE)", "HP33120a.getFrame()"], "Fixed commit": "01ec9157ebd9e0f22732fa5cdb2e51adbb9b6965", "Url": "https://api.github.com/repos/apasrio/Labview-Client", "Date": "2013-09-09T18:42:22Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { key = keySelector.call(t); } catch (java.lang.Throwable e) { rx.exceptions.Exceptions.throwOrReport(e, child, t); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4116/buggy-version/src.main.java.rx.internal.operators.OperatorDistinctUntilChanged.java", "BodyUseAPI": ["rx.functions.Func1<? super T, ? extends U>.call(T)"], "Fixed commit": "40cd517dab9e327e5b2ced27f5de2e73953e8825", "Url": "https://api.github.com/repos/davidmoten/RxJava", "Date": "2016-01-23T07:10:28Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { server.getObjectInstance(name); } catch (java.lang.Exception e) { server.registerMBean(this, name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2263/buggy-version/had_one_dismissal.src.main.java.com.jclarity.had_one_dismissal.jmx.JMXComponent.java", "BodyUseAPI": ["javax.management.MBeanServer.getObjectInstance(javax.management.ObjectName)"], "Fixed commit": "9220829894557adfd39084d62b7ad1c56b76c297", "Url": "https://api.github.com/repos/jClarity/slow-crud-app", "Date": "2013-04-02T16:20:08Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.wikibrain.mapper.algorithms.conceptualign3.ILLSplitter.LOG.info((((\"Removing edge: \" + (lpDao.getById(curSource).getTitle())) + \" --> \") + (lpDao.getById(curDest).getTitle()))); } catch (org.wikibrain.core.dao.DaoException e) { throw new org.wikibrain.core.WikiBrainException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/463/buggy-version/wikibrain-mapper.src.main.java.org.wikibrain.mapper.algorithms.conceptualign3.ILLSplitter.java", "BodyUseAPI": ["lpDao.getById(curDest).getTitle()", "java.util.logging.Logger.info((((\"Removing edge: \" + (lpDao.getById(curSource).getTitle())) + \" --> \") + (lpDao.getById(curDest).getTitle())))", "lpDao.getById(curSource).getTitle()", "org.wikibrain.core.dao.LocalPageDao.getById(org.wikibrain.core.lang.LocalId)", "org.wikibrain.core.dao.LocalPageDao.getById(org.wikibrain.core.lang.LocalId)"], "Fixed commit": "71561d0bd6e8dd6752487172f7739f433b637af2", "Url": "https://api.github.com/repos/leusonmario/wikibrain", "Date": "2014-05-21T07:53:48Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ip = java.net.InetAddress.getLocalHost(); network = java.net.NetworkInterface.getByInetAddress(ip); if (network != null) { mac = network.getHardwareAddress(); } } catch (java.net.UnknownHostException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4676/buggy-version/src.main.java.org.apache.commons.id.uuid.state.StateHelper.java", "BodyUseAPI": ["java.net.NetworkInterface.getHardwareAddress()", "java.net.InetAddress.getLocalHost()", "java.net.NetworkInterface.getByInetAddress(java.net.InetAddress)"], "Fixed commit": "a83ce4b4933a9a1bae0ecb8b104753370acdff70", "Url": "https://api.github.com/repos/alto-project/alto", "Date": "2013-01-29T23:18:03Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { rawHTML = rawHTML.substring(0, rawHTML.lastIndexOf(\"\\n\")); } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2115/buggy-version/app.src.main.java.me.ccrama.redditslide.Views.MakeTextviewClickable.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.lastIndexOf(java.lang.String)"], "Fixed commit": "7ce637e58c930fc81e5ce29bead5b38a9ca6ac08", "Url": "https://api.github.com/repos/ccrama/Slide", "Date": "2015-10-28T22:30:29Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { this.m_buffer.clear(); m_innerAccess.restart(); } finally { lock.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5760/buggy-version/src.rappsilber.ms.dataAccess.BufferedSpectraAccess.java", "BodyUseAPI": ["rappsilber.ms.dataAccess.SpectraAccess.restart()", "java.util.concurrent.ArrayBlockingQueue<rappsilber.ms.spectra.Spectra>.clear()"], "Fixed commit": "32089482d822f0ead58fa0d39d2b8048c672deb2", "Url": "https://api.github.com/repos/lutzfischer/XiSearch", "Date": "2017-06-09T12:00:32Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return mapper.readValue(file, typeRef); } catch (com.fasterxml.jackson.core.JsonProcessingException e) { throw new com.fasterxml.jackson.databind.JsonMappingException((((\"file: \" + file) + \". \") + (e.getMessage())), e.getLocation(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3976/buggy-version/core.src.main.java.io.fabric8.maven.core.util.KubernetesResourceUtil.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.ObjectMapper.readValue(java.io.File,com.fasterxml.jackson.core.type.TypeReference<java.util.HashMap<java.lang.String, java.lang.Object>>)"], "Fixed commit": "85687440272efca79282ef5684438f3ec2b4d76f", "Url": "https://api.github.com/repos/jstrachan/fabric8-maven-plugin", "Date": "2016-09-01T09:48:29Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { links.add(cursor.next().get(\"hashed_url\").toString()); } catch (java.lang.Exception e) { links.add(cursor.next().get(\"url\").toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/15/buggy-version/src.main.java.com.xuantruongvu.datactu.mongodb.MongoService.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(cursor.next().get(\"hashed_url\").toString())", "com.mongodb.DBCursor.next()", "cursor.next().get(\"hashed_url\").toString()", "cursor.next().get(java.lang.String)"], "Fixed commit": "10fb45e2413e7cf3d37220ce04289811a5eff581", "Url": "https://api.github.com/repos/truongci5/datactu", "Date": "2017-01-18T11:07:01Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.palmergames.bukkit.towny.permissions.TownyPerms.assignPermissions(capital.getMayor(), null); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1233/buggy-version/src.com.palmergames.bukkit.towny.object.Nation.java", "BodyUseAPI": ["com.palmergames.bukkit.towny.object.Town.getMayor()", "com.palmergames.bukkit.towny.permissions.TownyPerms.assignPermissions(capital.getMayor(),<nulltype>)"], "Fixed commit": "26dce025ab2054558d6d8d72f1adda7272eb5a11", "Url": "https://api.github.com/repos/Zren/Towny-ElgarL", "Date": "2012-08-06T15:33:05Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.nativecss.NativeCSS.styleWithCSS(css); } catch (java.lang.Exception e) { au.org.intersect.faims.android.log.FLog.e(\"Couldn't style module with module CSS file\", e); com.nativecss.NativeCSS.styleWithCSS(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3099/buggy-version/faims-android-app.src.au.org.intersect.faims.android.ui.activity.ShowModuleActivity.java", "BodyUseAPI": ["com.nativecss.NativeCSS.styleWithCSS(java.lang.String)"], "Fixed commit": "afdb8ab9713fdab79107d47c3ff3d61b00356917", "Url": "https://api.github.com/repos/IntersectAustralia/faims-android", "Date": "2014-11-04T00:22:50Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (!(mChildren[i].isDirectory())) continue; mChildren[i].listFiles(); } catch (java.lang.ArrayIndexOutOfBoundsException e) { org.brandroid.utils.Logger.LogWarning(\"Grandchild lost!\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4682/buggy-version/src.org.brandroid.openmanager.data.OpenFile.java", "BodyUseAPI": ["org.brandroid.openmanager.data.OpenFile.listFiles()", "org.brandroid.openmanager.data.OpenFile.isDirectory()"], "Fixed commit": "958036b7337f543938a44c99f84851aca4f132f7", "Url": "https://api.github.com/repos/BrandoCommando/OpenExplorer", "Date": "2012-04-05T23:30:12Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((this.architectView) != null) { this.architectView.setLocation(lat, lon, accuracy); } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6692/buggy-version/android.src.com.phd.photowalk.ARActivity.java", "BodyUseAPI": ["com.wikitude.architect.ArchitectView.setLocation(float,float,float)"], "Fixed commit": "05ec8c4d08aa971228c8163d96007e203837f6b4", "Url": "https://api.github.com/repos/tobiasheine/ARPhotoWalk", "Date": "2012-09-23T03:50:58Z"},
{"Line": "=>758", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { setLoggerDefFilePath(availableLoggerDefFiles.values().iterator().next().getAbsolutePath()); } catch (java.lang.Exception e) { loggerDefExists = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6521/buggy-version/src.main.java.com.romraider.Settings.java", "BodyUseAPI": ["java.util.Iterator<java.io.File>.next()", "com.romraider.Settings.setLoggerDefFilePath(java.lang.String)", "java.io.File.getAbsolutePath()", "java.util.Map<java.lang.String, java.io.File>.values()", "java.util.Collection<java.io.File>.iterator()"], "Fixed commit": "1aeafcd8882ce7b71b0d5c41f92c1510fb2f6488", "Url": "https://api.github.com/repos/Merp/RomRaider", "Date": "2013-03-09T01:11:51Z"},
{"Line": "=>969", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { if ((!(highPriority.isEmpty())) && (!(lowPriority.isEmpty()))) { transportHandler.transmit(highPriority); transportHandler.transmit(lowPriority); }else { for (final org.jboss.errai.bus.client.api.messaging.Message message : storedMessages) { try { throw new org.jboss.errai.bus.client.api.base.NoSubscribersToDeliverTo(message.getSubject()); } catch (org.jboss.errai.bus.client.api.base.NoSubscribersToDeliverTo ex) { if ((message.getErrorCallback()) != null) { message.getErrorCallback().error(message, ex); } } } } } finally { deferredMessages.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/816/buggy-version/errai-bus.src.main.java.org.jboss.errai.bus.client.framework.ClientMessageBusImpl.java", "BodyUseAPI": ["java.util.List<org.jboss.errai.bus.client.api.messaging.Message>.isEmpty()", "java.util.List<org.jboss.errai.bus.client.api.messaging.Message>.isEmpty()", "org.jboss.errai.bus.client.api.messaging.Message.getErrorCallback()", "org.jboss.errai.bus.client.api.messaging.Message.getErrorCallback()", "org.jboss.errai.bus.client.framework.transports.TransportHandler.transmit(java.util.List<org.jboss.errai.bus.client.api.messaging.Message>)", "message.getErrorCallback().error(org.jboss.errai.bus.client.api.messaging.Message,org.jboss.errai.bus.client.api.base.NoSubscribersToDeliverTo)", "org.jboss.errai.bus.client.framework.transports.TransportHandler.transmit(java.util.List<org.jboss.errai.bus.client.api.messaging.Message>)", "org.jboss.errai.bus.client.api.messaging.Message.getSubject()"], "Fixed commit": "8dd26e426b148c970b3cb619328ffced1b50216b", "Url": "https://api.github.com/repos/BenDol/errai", "Date": "2017-11-14T13:45:47Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Class.forName(\"android.os.AsyncTask\"); } catch (java.lang.Throwable ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7315/buggy-version/surespot.src.main.java.com.twofours.surespot.SurespotApplication.java", "BodyUseAPI": ["java.lang.Class.forName(java.lang.String)"], "Fixed commit": "1c2af34eb2496707eccda590b4d68970a199ed97", "Url": "https://api.github.com/repos/surespot/android", "Date": "2017-01-14T01:30:48Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((!(metricsCfgListener.isInitialized())) && (!(configurationService.getResourceResolver().resolve(\"metrics.cfg.xml\").exists()))) { solveIssue(); } } catch (java.io.IOException io) { com.rackspace.papi.service.context.impl.MetricsServiceContext.LOG.error((\"Error attempting to search for \" + (com.rackspace.papi.service.context.impl.MetricsServiceContext.DEFAULT_CONFIG_NAME))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8445/buggy-version/repose-aggregator.core.core-lib.src.main.java.com.rackspace.papi.service.context.impl.MetricsServiceContext.java", "BodyUseAPI": ["configurationService.getResourceResolver().resolve(java.lang.String)", "com.rackspace.papi.service.config.ConfigurationService.getResourceResolver()", "configurationService.getResourceResolver().resolve(\"metrics.cfg.xml\").exists()", "com.rackspace.papi.service.context.impl.MetricsServiceContext.MetricsCfgListener.isInitialized()", "com.rackspace.papi.service.context.impl.MetricsServiceContext.solveIssue()"], "Fixed commit": "e73585aea942203ecf9012b83fc421e4a8978ebd", "Url": "https://api.github.com/repos/rackerlabs/repose", "Date": "2014-02-24T17:29:22Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { logger.log(ecologylab.bigsemantics.service.logging.Log4jLogger.transLevel.get(level), java.lang.String.format(fmt, args)); } catch (java.lang.Throwable e) { logger.error(java.lang.String.format(\"Cannot log message: %s\\n format string: %s\\n args: %s\\n\", e.getMessage(), fmt, args.toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3309/buggy-version/BigSemanticsService.src.ecologylab.bigsemantics.service.logging.Log4jLogger.java", "BodyUseAPI": ["org.apache.log4j.Logger.log(ecologylab.bigsemantics.service.logging.Log4jLogger.transLevel.get(level),java.lang.String)", "java.lang.String.format(java.lang.String,java.lang.Object[])", "java.util.Map<ecologylab.logging.LogLevel, org.apache.log4j.Level>.get(ecologylab.logging.LogLevel)"], "Fixed commit": "b99412caade92a059927a728e356c4d354485aaf", "Url": "https://api.github.com/repos/ecologylab/BigSemanticsService", "Date": "2013-02-13T20:50:24Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { presenter.setSelectedDevice(presenter.getPairedDevices().get(position)); if (isDeviceHaveBluetoothAndPermissionGranted()) { checkIsDeviceReachAble(); }else { openAppSettings(); } } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7262/buggy-version/app.src.main.java.com.example.rajasaboor.bluetoothprototype.searchdevices.SearchFragment.java", "BodyUseAPI": ["presenter.getPairedDevices().get(int)", "com.example.rajasaboor.bluetoothprototype.searchdevices.SearchFragment.isDeviceHaveBluetoothAndPermissionGranted()", "SearchContract.Presenter.getPairedDevices()", "SearchContract.Presenter.setSelectedDevice(presenter.getPairedDevices().get(position))", "com.example.rajasaboor.bluetoothprototype.searchdevices.SearchFragment.checkIsDeviceReachAble()", "com.example.rajasaboor.bluetoothprototype.searchdevices.SearchFragment.openAppSettings()"], "Fixed commit": "a0857732073865a7f51e89e91be8565c54bce9ee", "Url": "https://api.github.com/repos/rajasone/bluetooth-prototype", "Date": "2017-10-04T11:07:16Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { lockers.add(new me.michaelkrauty.Locker.Locker(this, new org.bukkit.Location(getServer().getWorld(loc[0]), java.lang.Integer.parseInt(loc[1]), java.lang.Integer.parseInt(loc[2]), java.lang.Integer.parseInt(loc[3])))); } catch (java.lang.ArrayIndexOutOfBoundsException ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1391/buggy-version/src.main.java.me.michaelkrauty.Locker.Main.java", "BodyUseAPI": ["java.util.ArrayList<me.michaelkrauty.Locker.Locker>.add(me.michaelkrauty.Locker.Locker)", "getServer().getWorld(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "me.michaelkrauty.Locker.Main.getServer()", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "60417c096b014ea3f7bfeb9fc8b585235d548e09", "Url": "https://api.github.com/repos/michaelkrauty/Locker", "Date": "2014-07-15T20:01:18Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { populateTextView(java.lang.Integer.toString(response.get_source().getFollowedCount()), followedTextView); } catch (java.lang.NullPointerException ex) { populateTextView(\"?\", followedTextView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3114/buggy-version/ArtistryMuse.app.src.main.java.com.concavenp.artistrymuse.fragments.viewholder.UserResponseViewHolder.java", "BodyUseAPI": ["response.get_source().getFollowedCount()", "com.concavenp.artistrymuse.model.UserResponseHit.get_source()", "java.lang.Integer.toString(response.get_source().getFollowedCount())", "com.concavenp.artistrymuse.fragments.viewholder.UserResponseViewHolder.populateTextView(java.lang.String,android.widget.TextView)"], "Fixed commit": "5ba8fd76613dbbe9af37f3be5dcff1eb9df1ff50", "Url": "https://api.github.com/repos/concaveNP/Capstone-Project", "Date": "2017-07-05T21:07:13Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { populateTextView(java.lang.Integer.toString(response.get_source().getFollowing().size()), followingTextView); } catch (java.lang.NullPointerException ex) { populateTextView(\"?\", followingTextView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3114/buggy-version/ArtistryMuse.app.src.main.java.com.concavenp.artistrymuse.fragments.viewholder.UserResponseViewHolder.java", "BodyUseAPI": ["response.get_source().getFollowing().size()", "com.concavenp.artistrymuse.model.UserResponseHit.get_source()", "response.get_source().getFollowing()", "com.concavenp.artistrymuse.fragments.viewholder.UserResponseViewHolder.populateTextView(java.lang.String,android.widget.TextView)", "java.lang.Integer.toString(response.get_source().getFollowing().size())"], "Fixed commit": "5ba8fd76613dbbe9af37f3be5dcff1eb9df1ff50", "Url": "https://api.github.com/repos/concaveNP/Capstone-Project", "Date": "2017-07-05T21:07:13Z"},
{"Line": "=>1310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Class<?> clazz = com.carpentersblocks.renderer.helper.RoutableFluidsHelper.getCallerClass(); if (clazz != null) { for (java.lang.Class clazz1 : com.carpentersblocks.renderer.helper.RoutableFluidsHelper.liquidClasses) { if (clazz.isAssignableFrom(clazz1)) { return true; } } } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5589/buggy-version/src.main.java.com.carpentersblocks.block.BlockCoverable.java", "BodyUseAPI": ["com.carpentersblocks.renderer.helper.RoutableFluidsHelper.getCallerClass()", "java.lang.Class<?>.isAssignableFrom(java.lang.Class)"], "Fixed commit": "2b5b685e181539b809b1e233aa3c39d11bb2fe50", "Url": "https://api.github.com/repos/Mineshopper/carpentersblocks", "Date": "2015-12-06T01:05:55Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { try { clsName = clo.applyx(); fut.onDone(clsName); clsNameOrFuture = clsName; } catch (java.lang.Throwable e) { fut.onDone(e); throw e; } } finally { if (clsName != null) map.replace(id, fut, clsName); else map.remove(id, fut); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7666/buggy-version/modules.core.src.main.java.org.apache.ignite.internal.MarshallerContextAdapter.java", "BodyUseAPI": ["org.apache.ignite.internal.util.future.GridFutureAdapter<java.lang.String>.onDone(java.lang.String)", "org.apache.ignite.internal.util.future.GridFutureAdapter<java.lang.String>.onDone(java.lang.Throwable)", "org.apache.ignite.internal.util.lang.IgniteOutClosureX<java.lang.String>.applyx()"], "Fixed commit": "6469d385b5d89cdd34d60800df6c6a482ae2a550", "Url": "https://api.github.com/repos/gridgain/apache-ignite", "Date": "2017-06-15T19:49:45Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.massivecraft.factions.Factions.essChat = ((com.earth2me.essentials.chat.EssentialsChat) (test)); com.massivecraft.factions.Factions.essChat.addEssentialsChatListener(\"Factions\", new com.earth2me.essentials.chat.IEssentialsChatListener() { public boolean shouldHandleThisChat(org.bukkit.event.player.PlayerChatEvent event) { return shouldLetFactionsHandleThisChat(event); } public java.lang.String modifyMessage(org.bukkit.event.player.PlayerChatEvent event, org.bukkit.entity.Player target, java.lang.String message) { return message.replace(\"{FACTION}\", getPlayerFactionTagRelation(event.getPlayer(), target)).replace(\"{FACTION_TITLE}\", getPlayerTitle(event.getPlayer())); } }); com.massivecraft.factions.Factions.log((\"Found and will integrate chat with \" + (test.getDescription().getFullName()))); } catch (java.lang.NoSuchMethodError ex) { com.massivecraft.factions.Factions.essChat = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5602/buggy-version/src.com.massivecraft.factions.Factions.java", "BodyUseAPI": ["com.earth2me.essentials.chat.EssentialsChat.addEssentialsChatListener(java.lang.String,com.earth2me.essentials.chat.IEssentialsChatListener)", "java.lang.String.replace(java.lang.String,java.lang.String)", "com.massivecraft.factions.Factions.1.getPlayerFactionTagRelation(event.getPlayer(),org.bukkit.entity.Player)", "java.lang.String.replace(java.lang.String,java.lang.String)", "org.bukkit.event.player.PlayerChatEvent.getPlayer()", "com.massivecraft.factions.Factions.1.shouldLetFactionsHandleThisChat(org.bukkit.event.player.PlayerChatEvent)", "com.massivecraft.factions.Factions.log((\"Found and will integrate chat with \" + (test.getDescription().getFullName())))", "org.bukkit.plugin.Plugin.getDescription()", "com.massivecraft.factions.Factions.1.getPlayerTitle(event.getPlayer())", "test.getDescription().getFullName()", "org.bukkit.event.player.PlayerChatEvent.getPlayer()"], "Fixed commit": "bd5d7e185ef90306781a60b0d42bf0323d10acfc", "Url": "https://api.github.com/repos/MassiveCraft/Factions", "Date": "2011-07-21T00:31:28Z"},
{"Line": "=>541", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { int i = java.lang.Integer.parseInt(setValue.toString()); setValue = i; } catch (java.lang.NumberFormatException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1672/buggy-version/src.main.java.com.gpii.transformer.TransformerManager.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "6047c08f45d1de95d9a85fe245fb654f8984adf0", "Url": "https://api.github.com/repos/NickKaklanis/RuleBasedMatchMaker_RESTful_WS_Maven", "Date": "2014-12-14T20:28:12Z"},
{"Line": "=>547", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { double i = java.lang.Double.parseDouble(setValue.toString()); setValue = i; } catch (java.lang.NumberFormatException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1672/buggy-version/src.main.java.com.gpii.transformer.TransformerManager.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "6047c08f45d1de95d9a85fe245fb654f8984adf0", "Url": "https://api.github.com/repos/NickKaklanis/RuleBasedMatchMaker_RESTful_WS_Maven", "Date": "2014-12-14T20:28:12Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (((previousTeam) != null) && ((scoreboard.getTeam(previousTeam.getName())) != null)) previousTeam.addPlayer(pvPlayer.getPlayer()); else me.NoChance.PvPManager.TeamProfile.inCombat.removePlayer(pvPlayer.getPlayer()); } catch (java.lang.IllegalStateException e) { java.lang.System.out.println((\"[PvPManager] Error restoring nametag for: \" + (pvPlayer.getName()))); me.NoChance.PvPManager.TeamProfile.inCombat.removePlayer(pvPlayer.getPlayer()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3714/buggy-version/src.main.java.me.NoChance.PvPManager.TeamProfile.java", "BodyUseAPI": ["org.bukkit.scoreboard.Team.addPlayer(pvPlayer.getPlayer())", "org.bukkit.scoreboard.Team.removePlayer(pvPlayer.getPlayer())", "me.NoChance.PvPManager.PvPlayer.getPlayer()", "org.bukkit.scoreboard.Team.getName()", "org.bukkit.scoreboard.Scoreboard.getTeam(previousTeam.getName())", "me.NoChance.PvPManager.PvPlayer.getPlayer()"], "Fixed commit": "a150305d32dfc6411103ed7e87ccc092f86f2a69", "Url": "https://api.github.com/repos/NoChanceSD/PvPManager", "Date": "2014-11-11T01:58:28Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { int notifId = java.lang.Integer.parseInt(notif.getId()); notificationManager.notify(\"CN1\", notifId, notification); } catch (java.lang.Exception e) { notificationManager.notify(notif.getId(), 0, notification); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2982/buggy-version/Ports.Android.src.com.codename1.impl.android.LocalNotificationPublisher.java", "BodyUseAPI": ["java.lang.Integer.parseInt(notif.getId())", "android.app.NotificationManager.notify(java.lang.String,int,android.app.Notification)", "com.codename1.notifications.LocalNotification.getId()"], "Fixed commit": "cb517ab8090188914dd31fbbfe6d1a47d91af687", "Url": "https://api.github.com/repos/ThomasH99/CodenameOne", "Date": "2016-07-13T19:37:40Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { packageStrippedName = nodeclass.getJavaClass().getCanonicalName().replace(org.graalvm.compiler.hotspot.NodeCostDumpUtil.prefix1, \"\").replace(org.graalvm.compiler.hotspot.NodeCostDumpUtil.prefix2, \"\"); } catch (java.lang.Throwable t) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5581/buggy-version/graal.org.graalvm.compiler.hotspot.src.org.graalvm.compiler.hotspot.NodeCostDumpUtil.java", "BodyUseAPI": ["org.graalvm.compiler.graph.NodeClass<?>.getJavaClass()", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.Class<?>.getCanonicalName()"], "Fixed commit": "7f3278c8530a10d64c9d2e9d5c7c1525847655eb", "Url": "https://api.github.com/repos/mur47x111/graal-core", "Date": "2017-04-06T10:48:59Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Class<?> systemClass = java.lang.Class.forName(className, false, c); if ((systemClass.getEnclosingClass()) != null) { try { classes.add(systemClass.getEnclosingClass()); } catch (java.lang.Throwable t) { } } classes.add(systemClass); } catch (java.lang.Throwable ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5581/buggy-version/graal.org.graalvm.compiler.hotspot.src.org.graalvm.compiler.hotspot.NodeCostDumpUtil.java", "BodyUseAPI": ["java.lang.Class<?>.getEnclosingClass()", "java.util.HashSet<java.lang.Class<?>>.add(java.lang.Class<?>)", "java.lang.Class<?>.getEnclosingClass()", "java.util.HashSet<java.lang.Class<?>>.add(java.lang.Class<?>)", "java.lang.Class.forName(java.lang.String,boolean,java.lang.ClassLoader)"], "Fixed commit": "7f3278c8530a10d64c9d2e9d5c7c1525847655eb", "Url": "https://api.github.com/repos/mur47x111/graal-core", "Date": "2017-04-06T10:48:59Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { objs.add(new units.Building(fo, cG)); } catch (java.lang.Exception e) { java.lang.System.err.println(fo); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/109/buggy-version/src.src.FieldSituation.java", "BodyUseAPI": ["java.util.ArrayList<units.FieldObject>.add(units.Building)"], "Fixed commit": "741b6e1d44d3d553dd16f10ccd25955eee671168", "Url": "https://api.github.com/repos/abar193/AbarCards", "Date": "2014-11-20T20:37:28Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { obdCommand.run(connectionManager.getSocketInputStream(), connectionManager.getSocketOutPutStream()); } catch (com.github.pires.obd.exceptions.NoDataException noDataEx) { com.wbdev.obdhud.connectivity.CommandExecutor.LOGGER.warn((\"No Data Returned from command \" + (obdCommand.getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/151/buggy-version/src.main.java.com.wbdev.obdhud.connectivity.CommandExecutor.java", "BodyUseAPI": ["com.wbdev.obdhud.connectivity.ConnectionManager.getSocketInputStream()", "com.wbdev.obdhud.connectivity.ConnectionManager.getSocketOutPutStream()", "com.github.pires.obd.commands.ObdCommand.run(connectionManager.getSocketInputStream(),connectionManager.getSocketOutPutStream())"], "Fixed commit": "6065ffb3c0a3dd5efc2d3caa5848e049163457f3", "Url": "https://api.github.com/repos/WhiteBoardDev/obd-hud", "Date": "2016-08-05T03:27:42Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { xyz.jaoafa.mymaid.Discord.Discord.setGame(\"Welcome to jao Minecraft Server.\"); } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3043/buggy-version/src.main.java.xyz.jaoafa.mymaid.Discord.Discord.java", "BodyUseAPI": ["xyz.jaoafa.mymaid.Discord.Discord.setGame(java.lang.String)"], "Fixed commit": "c89a0378a39f3ccca8f6c55aa18b7001aac2a04c", "Url": "https://api.github.com/repos/book000/MyMaid", "Date": "2017-10-28T05:44:00Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (nodes.GraphElement e : elements) { setInfo += renderedElementString(e); setInfo += barDivide; } } catch (java.util.ConcurrentModificationException exc) { return \"<comodification error in renderElementSetString()>\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4636/buggy-version/src.nodes.InfoPanel.java", "BodyUseAPI": ["nodes.InfoPanel.renderedElementString(nodes.GraphElement)"], "Fixed commit": "c208c08deb51cfac32ed73989052ab2d0dac9830", "Url": "https://api.github.com/repos/kdbanman/nodes", "Date": "2013-10-10T06:34:43Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { currentState = this.delta[currentState][charLookup.get(s.charAt(i))]; } catch (java.lang.NullPointerException e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2028/buggy-version/Lab2.ManWolf.java", "BodyUseAPI": ["java.lang.String.charAt(int)", "java.util.HashMap<java.lang.Character, java.lang.Integer>.get(char)"], "Fixed commit": "844afbf629e0c59ab1c9bc5070e36aa7fbbac279", "Url": "https://api.github.com/repos/1PhoenixM/formal-languages-and-automata", "Date": "2016-02-12T15:46:40Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { node.flush(); } catch (org.osgi.service.prefs.BackingStoreException e) { throw new org.eclipse.core.runtime.CoreException(new org.eclipse.core.runtime.Status(org.eclipse.core.runtime.Status.ERROR, org.switchyard.tools.ui.Activator.PLUGIN_ID, e.getLocalizedMessage())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8935/buggy-version/eclipse.plugins.org.switchyard.tools.ui.src.org.switchyard.tools.ui.facets.SwitchYardFacetInstallActionDelegate.java", "BodyUseAPI": ["org.eclipse.core.runtime.preferences.IEclipsePreferences.flush()"], "Fixed commit": "14e831245b98de64a0d83c6b11062aa4bacaca5f", "Url": "https://api.github.com/repos/apodhrad/tools", "Date": "2014-12-18T21:30:58Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return platformMarshCtx.registerClassName(id, name); } catch (org.apache.ignite.IgniteCheckedException e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7094/buggy-version/modules.core.src.main.java.org.apache.ignite.internal.processors.platform.PlatformProcessorImpl.java", "BodyUseAPI": ["org.apache.ignite.internal.MarshallerContextImpl.registerClassName(int,java.lang.String)"], "Fixed commit": "76354af5aff3068a8ea8839a687450abdc84ef92", "Url": "https://api.github.com/repos/ptupitsyn/ignite", "Date": "2016-03-15T13:54:32Z"},
{"Line": "=>425", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return platformMarshCtx.className(id); } catch (org.apache.ignite.IgniteCheckedException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7094/buggy-version/modules.core.src.main.java.org.apache.ignite.internal.processors.platform.PlatformProcessorImpl.java", "BodyUseAPI": ["org.apache.ignite.internal.MarshallerContextImpl.className(int)"], "Fixed commit": "76354af5aff3068a8ea8839a687450abdc84ef92", "Url": "https://api.github.com/repos/ptupitsyn/ignite", "Date": "2016-03-15T13:54:32Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { activeSiteId = drUtil.getActiveSiteId(vdcShortId); } catch (com.emc.storageos.coordinator.exceptions.RetryableCoordinatorException e) { com.emc.storageos.db.client.util.VdcConfigUtil.log.warn(\"Failed to find active site id from ZK, go on since it maybe switchover case\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8700/buggy-version/dbclient.src.main.java.com.emc.storageos.db.client.util.VdcConfigUtil.java", "BodyUseAPI": ["com.emc.storageos.coordinator.client.service.DrUtil.getActiveSiteId(java.lang.String)"], "Fixed commit": "da62a12be881e8598e92128643b75c572f02d652", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-01-14T10:00:20Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.since = df.parse(since); } catch (java.text.ParseException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2274/buggy-version/src.ArgParser.java", "BodyUseAPI": ["java.text.DateFormat.parse(java.lang.String)"], "Fixed commit": "68c0772cdb22303d4d5da7f797d9d54578a89b89", "Url": "https://api.github.com/repos/abacon/rssReader", "Date": "2013-04-15T23:18:30Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { dateTime_adres.setText(hunterInfo.datetime); } catch (java.lang.Exception e) { dateTime_adres.setText((\"ERRORdate: \" + (e.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4745/buggy-version/app.src.main.java.com.umbrella.joti.MainActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(hunterInfo.datetime)"], "Fixed commit": "19acdebbb9c2105878e82e4e2bbe9f92f78ab9a9", "Url": "https://api.github.com/repos/njittam/joti", "Date": "2015-10-02T11:03:28Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { naam.setText(hunterInfo.gebruiker); } catch (java.lang.Exception e) { naam.setText((\"ERRORnaam: \" + (e.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4745/buggy-version/app.src.main.java.com.umbrella.joti.MainActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(hunterInfo.gebruiker)"], "Fixed commit": "19acdebbb9c2105878e82e4e2bbe9f92f78ab9a9", "Url": "https://api.github.com/repos/njittam/joti", "Date": "2015-10-02T11:03:28Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { dateTime_adres.setText(scoutingGroepInfo.adres); } catch (java.lang.Exception e) { dateTime_adres.setText((\"ERRORdate: \" + (e.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4745/buggy-version/app.src.main.java.com.umbrella.joti.MainActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(scoutingGroepInfo.adres)"], "Fixed commit": "19acdebbb9c2105878e82e4e2bbe9f92f78ab9a9", "Url": "https://api.github.com/repos/njittam/joti", "Date": "2015-10-02T11:03:28Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { naam.setText(fotoOpdrachtInfo.naam); } catch (java.lang.Exception e) { naam.setText((\"ERRORnaam: \" + (e.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4745/buggy-version/app.src.main.java.com.umbrella.joti.MainActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(fotoOpdrachtInfo.naam)"], "Fixed commit": "19acdebbb9c2105878e82e4e2bbe9f92f78ab9a9", "Url": "https://api.github.com/repos/njittam/joti", "Date": "2015-10-02T11:03:28Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { dateTime_adres.setText(fotoOpdrachtInfo.info); } catch (java.lang.Exception e) { dateTime_adres.setText((\"ERRORdate: \" + (e.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4745/buggy-version/app.src.main.java.com.umbrella.joti.MainActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(fotoOpdrachtInfo.info)"], "Fixed commit": "19acdebbb9c2105878e82e4e2bbe9f92f78ab9a9", "Url": "https://api.github.com/repos/njittam/joti", "Date": "2015-10-02T11:03:28Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { naam.setText(scoutingGroepInfo.naam); } catch (java.lang.Exception e) { naam.setText((\"ERRORnaam: \" + (e.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4745/buggy-version/app.src.main.java.com.umbrella.joti.MainActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(scoutingGroepInfo.naam)"], "Fixed commit": "19acdebbb9c2105878e82e4e2bbe9f92f78ab9a9", "Url": "https://api.github.com/repos/njittam/joti", "Date": "2015-10-02T11:03:28Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { n = channel.read(buffer); } catch (java.io.IOException ioe) { buffer.flip(); throw ioe; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7015/buggy-version/src.me.drton.jmavlib.mavlink.MAVLinkStream.java", "BodyUseAPI": ["java.nio.channels.ByteChannel.read(java.nio.ByteBuffer)"], "Fixed commit": "11a5adbc3b9de14f6a367b91708820f6a39b7266", "Url": "https://api.github.com/repos/DrTon/jMAVlib", "Date": "2015-05-15T09:45:30Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.util.regex.Matcher matcher = oop.ex6.main.Parser.firstWordPattern.matcher(string); if (matcher.find()) { if (withEdges) return string.substring(((matcher.start()) - 1), ((matcher.end()) + 1)); return string.substring(matcher.start(), matcher.end()); } throw new oop.ex6.main.IllegalException(oop.ex6.main.Parser.BAD_FORMAT_ERROR, numberLine); } catch (java.lang.StringIndexOutOfBoundsException e) { throw new oop.ex6.main.IllegalException(oop.ex6.main.Parser.BAD_FORMAT_ERROR, numberLine); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/509/buggy-version/src.oop.ex6.main.Parser.java", "BodyUseAPI": ["java.util.regex.Matcher.end()", "java.util.regex.Matcher.end()", "java.util.regex.Matcher.find()", "java.lang.String.substring(int,int)", "java.util.regex.Matcher.start()", "java.util.regex.Matcher.start()", "java.lang.String.substring(int,int)", "java.util.regex.Pattern.matcher(java.lang.String)"], "Fixed commit": "287c18f6efccf4f355b9261a1034e407856e09cb", "Url": "https://api.github.com/repos/david-wies/ex6", "Date": "2016-06-10T06:22:26Z"},
{"Line": "=>855", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (interfaces.getTypeDeclaration().hasMethod(method)) { return true; } } catch (final spoon.SpoonException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7220/buggy-version/src.main.java.spoon.support.reflect.declaration.CtTypeImpl.java", "BodyUseAPI": ["interfaces.getTypeDeclaration().hasMethod(spoon.reflect.declaration.CtMethod)", "spoon.reflect.reference.CtTypeReference<?>.getTypeDeclaration()"], "Fixed commit": "b4e33351a95ddb52410bbad64b4fa33da3a3ee9a", "Url": "https://api.github.com/repos/msteinbeck/spoon", "Date": "2017-01-13T17:26:57Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { byte[] patternBytes = candidate.getScriptPubKey().getPubKey(); wholeKey = wallet.findKeyFromPubKey(patternBytes); } catch (java.lang.Exception ex) { byte[] patternBytes = candidate.getScriptPubKey().getPubKeyHash(); wholeKey = wallet.findKeyFromPubHash(patternBytes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4954/buggy-version/core.src.main.java.org.blackcoinj.pos.Staker.java", "BodyUseAPI": ["candidate.getScriptPubKey().getPubKey()", "org.bitcoinj.core.TransactionOutput.getScriptPubKey()", "org.bitcoinj.core.Wallet.findKeyFromPubKey(byte[])"], "Fixed commit": "d0daa372a3975e47d9a916d460cb9dd2442af22b", "Url": "https://api.github.com/repos/janko33bd/blackcoinj-petra", "Date": "2016-07-10T06:44:18Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { parentNodeRef = item.getParent(target); if (parentNodeRef == null) { parentNodeRef = target; } if (trace(org.alfresco.extension.bulkimport.impl.BatchImporterImpl.log)) trace(org.alfresco.extension.bulkimport.impl.BatchImporterImpl.log, ((((((\"Searching for node with name '\" + nodeName) + \"' within node '\") + (java.lang.String.valueOf(parentNodeRef))) + \"' with parent association '\") + (java.lang.String.valueOf(parentAssocQName))) + \"'.\")); result = nodeService.getChildByName(parentNodeRef, parentAssocQName, nodeName); } catch (final org.alfresco.extension.bulkimport.OutOfOrderBatchException oobe) { if (dryRun) { parentNodeRef = new org.alfresco.service.cmr.repository.NodeRef(org.alfresco.service.cmr.repository.StoreRef.STORE_REF_WORKSPACE_SPACESSTORE, \"dry-run-fake-parent-node-ref\"); }else { throw oobe; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1580/buggy-version/core.src.main.java.org.alfresco.extension.bulkimport.impl.BatchImporterImpl.java", "BodyUseAPI": ["java.lang.String.valueOf(org.alfresco.service.cmr.repository.NodeRef)", "org.alfresco.service.cmr.repository.NodeService.getChildByName(org.alfresco.service.cmr.repository.NodeRef,org.alfresco.service.namespace.QName,java.lang.String)", "org.alfresco.extension.bulkimport.source.BulkImportItem.getParent(org.alfresco.service.cmr.repository.NodeRef)", "org.alfresco.extension.bulkimport.impl.BatchImporterImpl.trace(org.apache.commons.logging.Log)", "org.alfresco.extension.bulkimport.impl.BatchImporterImpl.trace(org.apache.commons.logging.Log,((((((\"Searching for node with name '\" + nodeName) + \"' within node '\") + (java.lang.String.valueOf(parentNodeRef))) + \"' with parent association '\") + (java.lang.String.valueOf(parentAssocQName))) + \"'.\"))", "java.lang.String.valueOf(org.alfresco.service.namespace.QName)"], "Fixed commit": "db55026c46afbf92214cbc5094104884c7ea3aea", "Url": "https://api.github.com/repos/pmonks/alfresco-bulk-import", "Date": "2015-06-04T06:40:32Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { operation = org.python.pydev.ui.pythonpathconf.InterpreterConfigHelpers.tryInterpreter(interpreterNameAndExecutable, interpreterManager, true, false, logger, shell); } catch (java.lang.Exception e) { org.python.pydev.core.log.Log.log(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7276/buggy-version/plugins.org.python.pydev.src.org.python.pydev.ui.pythonpathconf.AutoConfigMaker.java", "BodyUseAPI": ["org.python.pydev.ui.pythonpathconf.InterpreterConfigHelpers.tryInterpreter(org.python.pydev.shared_core.structure.Tuple<java.lang.String, java.lang.String>,org.python.pydev.core.IInterpreterManager,boolean,boolean,java.io.PrintWriter,org.eclipse.swt.widgets.Shell)"], "Fixed commit": "6d22339c388e5bcbcfe4872fb908077706ba8b13", "Url": "https://api.github.com/repos/fabioz/Pydev", "Date": "2013-10-28T15:29:31Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { photo = ((android.graphics.Bitmap) (data.getExtras().get(\"data\"))); } catch (java.lang.Exception e) { photo = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/340/buggy-version/app.src.main.java.com.example.android.sendmoods.EditMoodActivity.java", "BodyUseAPI": ["data.getExtras().get(java.lang.String)", "android.content.Intent.getExtras()"], "Fixed commit": "573818cb5d751d5ba92292f4e2477082a1e85d9b", "Url": "https://api.github.com/repos/CMPUT301W17T17/MoodSwings", "Date": "2017-04-01T21:40:13Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ui = ((UserInput) (ois.readObject())); java.lang.System.out.println(\"Recieved object.\"); } catch (java.lang.Exception e) { java.lang.System.err.println(\"Object input error.\"); e.printStackTrace(); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5747/buggy-version/Server.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.io.ObjectInputStream.readObject()"], "Fixed commit": "3ffd546461c033938a2ac8eb5fa5ce9449b58f47", "Url": "https://api.github.com/repos/shingjay/LawsonNavigatorServer", "Date": "2011-11-04T22:32:47Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { out = new java.io.PrintWriter(threadedSocket.getOutputStream(), true); in = new java.io.BufferedReader(new java.io.InputStreamReader(threadedSocket.getInputStream())); oos = new java.io.ObjectOutputStream(threadedSocket.getOutputStream()); ois = new java.io.ObjectInputStream(threadedSocket.getInputStream()); } catch (java.io.IOException e) { java.lang.System.err.println(\"I/O stream creation error.\"); e.printStackTrace(); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5747/buggy-version/Server.java", "BodyUseAPI": ["java.net.Socket.getInputStream()", "java.net.Socket.getOutputStream()", "java.net.Socket.getOutputStream()", "java.net.Socket.getInputStream()"], "Fixed commit": "3ffd546461c033938a2ac8eb5fa5ce9449b58f47", "Url": "https://api.github.com/repos/shingjay/LawsonNavigatorServer", "Date": "2011-11-04T22:32:47Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { out.close(); in.close(); oos.close(); ois.close(); Server.clientSocket.close(); } catch (java.io.IOException e) { e.printStackTrace(); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5747/buggy-version/Server.java", "BodyUseAPI": ["java.io.ObjectOutputStream.close()", "java.net.Socket.close()", "java.io.BufferedReader.close()", "java.io.ObjectInputStream.close()", "java.io.PrintWriter.close()"], "Fixed commit": "3ffd546461c033938a2ac8eb5fa5ce9449b58f47", "Url": "https://api.github.com/repos/shingjay/LawsonNavigatorServer", "Date": "2011-11-04T22:32:47Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { sendToServer(new edu.lamar.common.MessageImpl(myCarId, timeStamp, edu.lamar.common.irp.MessageTypes.Acknowledge)); } catch (final java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5710/buggy-version/Client.src.edu.lamar.client.CarClient.java", "BodyUseAPI": ["edu.lamar.client.CarClient.sendToServer(edu.lamar.common.MessageImpl)"], "Fixed commit": "73571f338044eaaab810ec59a684eeb0011fb05d", "Url": "https://api.github.com/repos/amod0017/lamport-mutual-exclusion-algorithm-implementaion", "Date": "2016-04-06T04:53:45Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { resp.setDisplayUrl(url.toURI()); } catch (java.net.URISyntaxException ex) { java.lang.String errmsg = urlStr + \" is not a valid URI\"; throw new java.lang.IllegalStateException(errmsg, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3883/buggy-version/src.com.google.enterprise.adaptor.database.ResponseGenerator.java", "BodyUseAPI": ["com.google.enterprise.adaptor.Response.setDisplayUrl(java.net.URI)", "java.net.URL.toURI()"], "Fixed commit": "e3bdad442b2d0feab0246ebcc59ddc9aad5ecccf", "Url": "https://api.github.com/repos/googlegsa/database", "Date": "2014-10-16T17:59:32Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.reflect.Field popup = android.widget.Spinner.class.getDeclaredField(\"mPopup\"); popup.setAccessible(true); android.widget.ListPopupWindow popupWindow = ((android.widget.ListPopupWindow) (popup.get(com.equaleyes.bugreporter.FloatingWindow.cardSpinner))); if ((cards.size()) > 10) { popupWindow.setHeight(((com.equaleyes.bugreporter.FloatingWindow.height) / 2)); }else { popupWindow.setHeight(ViewGroup.LayoutParams.WRAP_CONTENT); } } catch (java.lang.NoClassDefFoundError | java.lang.ClassCastException | java.lang.NoSuchFieldException | java.lang.IllegalAccessException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3735/buggy-version/app.src.main.java.com.equaleyes.bugreporter.DetailsActivity.java", "BodyUseAPI": ["android.widget.ListPopupWindow.setHeight(ViewGroup.LayoutParams.WRAP_CONTENT)", "android.widget.ListPopupWindow.setHeight(((com.equaleyes.bugreporter.FloatingWindow.height) / 2))", "java.lang.reflect.Field.setAccessible(boolean)", "java.lang.reflect.Field.get(com.equaleyes.bugreporter.DetailsActivity.9)", "java.util.ArrayList<com.equaleyes.bugreporter.TrelloCard>.size()", "java.lang.Class.getDeclaredField(java.lang.String)"], "Fixed commit": "4f052b2df336e7686772138dcea4fc21efeb93d8", "Url": "https://api.github.com/repos/equaleyes/BugReporter2", "Date": "2017-05-09T12:23:02Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.System.out.format(leftAlignFormat, joueur.getId(), joueur.getNom()); } catch (java.rmi.RemoteException e1) { jeu.deconnexion(joueur); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4591/buggy-version/src.bataille.Client.java", "BodyUseAPI": ["java.io.PrintStream.format(java.lang.String,joueur.getId(),joueur.getNom())", "bataille.Joueur.getId()", "bataille.Joueur.getNom()"], "Fixed commit": "029105dd3b1ec151ecdbe44f38243ba3941f3676", "Url": "https://api.github.com/repos/MaximeHussenet/projectSIL6", "Date": "2016-06-03T09:20:00Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { int position = getLayoutPosition(); com.journee.model.Photo photo = null; if ((position >= 0) && (position < (mJournalItems.size()))) { photo = ((com.journee.model.Photo) (mJournalItems.get(position))); } android.content.Intent intent = new android.content.Intent(mContext, com.journee.activities.EditPhotoTitleActivity.class); intent.putExtra(Photo.KEY_SERIALIZABLE, photo); mContext.startActivity(intent); } catch (java.lang.Exception e) { android.util.Log.d(\"Journee\", \"error in title\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1533/buggy-version/Journee.app.src.main.java.com.journee.utils.JournalRecycleViewAdapter.java", "BodyUseAPI": ["com.journee.utils.JournalRecycleViewAdapter.ViewHolderPhoto.1.getLayoutPosition()", "android.content.Context.startActivity(android.content.Intent)", "android.content.Intent.putExtra(Photo.KEY_SERIALIZABLE,com.journee.model.Photo)", "java.util.List<com.journee.model.Journal_item>.size()", "java.util.List<com.journee.model.Journal_item>.get(int)"], "Fixed commit": "8748ef4c5a2c63802181478721d7676e46fd1f7b", "Url": "https://api.github.com/repos/alon-itzhaki/tau_workshop_repo", "Date": "2016-07-20T19:20:44Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { sender.join(); } catch (java.lang.Exception e) { android.util.Log.v(edu.njit.cs656.fall.njitmobilemailer.SendMail.TAG, \"Error on interruption.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7641/buggy-version/app.src.main.java.edu.njit.cs656.fall.njitmobilemailer.SendMail.java", "BodyUseAPI": ["java.lang.Thread.join()"], "Fixed commit": "a78c81a1d8a01ce84a81b4abc983756ebc9ce327", "Url": "https://api.github.com/repos/rs854/CS656", "Date": "2017-11-30T04:28:14Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return mediaPlayer.getCurrentPosition(); } catch (java.lang.IllegalStateException e) { return getDurationMsec(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8695/buggy-version/Aikuma.src.org.lp20.aikuma.audio.SimplePlayer.java", "BodyUseAPI": ["android.media.MediaPlayer.getCurrentPosition()"], "Fixed commit": "acf64afb53e0c1af45ba1427363b4a9abf4c541e", "Url": "https://api.github.com/repos/langtech/aikuma", "Date": "2013-09-30T05:08:47Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mmcorej.TaggedImage image = ((mmcorej.TaggedImage) (poll())); produce(image); } catch (java.lang.Exception ex) { org.micromanager.utils.ReportingUtils.logError(ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1690/buggy-version/src.org.micromanager.zprojector.ZProjectorProcessor.java", "BodyUseAPI": ["org.micromanager.zprojector.ZProjectorProcessor.produce(mmcorej.TaggedImage)", "org.micromanager.zprojector.ZProjectorProcessor.poll()"], "Fixed commit": "96d02589c929c6280877148a84f0b20a5ed98da8", "Url": "https://api.github.com/repos/hadim/zprojector", "Date": "2015-02-09T08:53:07Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { can_undo = handle.getCanUndo(fromPixel.x, fromPixel.y, fromPixel.id); } catch (org.skife.jdbi.v2.exceptions.NoResultsException exp) { can_undo = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8502/buggy-version/src.main.java.space.pxls.data.Database.java", "BodyUseAPI": ["space.pxls.data.DAO.getCanUndo(fromPixel.x,fromPixel.y,fromPixel.id)"], "Fixed commit": "91c0b74eba8ff8a02dfd58d98a2a26ae43a51f98", "Url": "https://api.github.com/repos/xSke/Pxls", "Date": "2017-05-10T19:24:08Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return handle.didPixelChange(x, y); } catch (org.skife.jdbi.v2.exceptions.NoResultsException exp) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8502/buggy-version/src.main.java.space.pxls.data.Database.java", "BodyUseAPI": ["space.pxls.data.DAO.didPixelChange(int,int)"], "Fixed commit": "91c0b74eba8ff8a02dfd58d98a2a26ae43a51f98", "Url": "https://api.github.com/repos/xSke/Pxls", "Date": "2017-05-10T19:24:08Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { TwitterAssignment.LogUserIn.updateMessagesFile(Main.messageList); } catch (java.lang.InterruptedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2747/buggy-version/TwitterProtocol.java", "BodyUseAPI": ["TwitterAssignment.LogUserIn.updateMessagesFile(Main.messageList)"], "Fixed commit": "401ad51316963d25c79f2e7829e7af37148dc5f2", "Url": "https://api.github.com/repos/gracemay/240Twitter", "Date": "2016-04-17T15:18:45Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { test.add(new lunch_together.purkynova.com.lunchtogetherclient.representation.Event(\"Prvn\u00ed\", new java.util.ArrayList<lunch_together.purkynova.com.lunchtogetherclient.representation.User>(), \"2017-12-09 12:00\", \"Purku\u0148ova 1990\")); test.add(new lunch_together.purkynova.com.lunchtogetherclient.representation.Event(\"Druh\u00e1\", new java.util.ArrayList<lunch_together.purkynova.com.lunchtogetherclient.representation.User>(), \"2017-12-09 12:00\", \"M\u011bs\u00edc 100\")); test.add(new lunch_together.purkynova.com.lunchtogetherclient.representation.Event(\"T\u0159et\u00ed\", new java.util.ArrayList<lunch_together.purkynova.com.lunchtogetherclient.representation.User>(), \"2017-12-09 12:00\", \"Na n\u00e1dra\u017e\u00ed\")); test.add(new lunch_together.purkynova.com.lunchtogetherclient.representation.Event(\"\u010ctvrt\u00e1\", new java.util.ArrayList<lunch_together.purkynova.com.lunchtogetherclient.representation.User>(), \"2017-12-09 12:00\", \"Na h\u0159bitov\u011b\")); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3042/buggy-version/app.src.main.java.lunch_together.purkynova.com.lunchtogetherclient.model.Model.java", "BodyUseAPI": ["java.util.ArrayList<lunch_together.purkynova.com.lunchtogetherclient.representation.Event>.add(lunch_together.purkynova.com.lunchtogetherclient.representation.Event)", "java.util.ArrayList<lunch_together.purkynova.com.lunchtogetherclient.representation.Event>.add(lunch_together.purkynova.com.lunchtogetherclient.representation.Event)", "java.util.ArrayList<lunch_together.purkynova.com.lunchtogetherclient.representation.Event>.add(lunch_together.purkynova.com.lunchtogetherclient.representation.Event)", "java.util.ArrayList<lunch_together.purkynova.com.lunchtogetherclient.representation.Event>.add(lunch_together.purkynova.com.lunchtogetherclient.representation.Event)"], "Fixed commit": "10cdea9592b7698be4c520f791726f8f516c54aa", "Url": "https://api.github.com/repos/Lukkra211/LunchTogetherClient", "Date": "2017-12-08T18:50:35Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { success = java.lang.Boolean.parseBoolean(transaction.getString(\"success\")); } catch (org.json.JSONException e) { success = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2688/buggy-version/proj.TwitterNode.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)", "java.lang.Boolean.parseBoolean(transaction.getString(\"success\"))"], "Fixed commit": "6425b9ec7478228ab9df309b83d4a80d91872fcd", "Url": "https://api.github.com/repos/djmailhot/CSE-Distributed-Systems", "Date": "2013-04-23T04:47:31Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { exists = java.lang.Boolean.parseBoolean(transaction.getString(\"data\")); } catch (org.json.JSONException e) { exists = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2688/buggy-version/proj.TwitterNode.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)", "java.lang.Boolean.parseBoolean(transaction.getString(\"data\"))"], "Fixed commit": "6425b9ec7478228ab9df309b83d4a80d91872fcd", "Url": "https://api.github.com/repos/djmailhot/CSE-Distributed-Systems", "Date": "2013-04-23T04:47:31Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { followers = transaction.getString(\"data\").split(\"\\n\"); } catch (org.json.JSONException e) { followers = new java.lang.String[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2688/buggy-version/proj.TwitterNode.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)", "transaction.getString(\"data\").split(java.lang.String)"], "Fixed commit": "6425b9ec7478228ab9df309b83d4a80d91872fcd", "Url": "https://api.github.com/repos/djmailhot/CSE-Distributed-Systems", "Date": "2013-04-23T04:47:31Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { file = transaction.getString(\"data\"); } catch (org.json.JSONException e) { file = \"You have no unread tweets.\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2688/buggy-version/proj.TwitterNode.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "6425b9ec7478228ab9df309b83d4a80d91872fcd", "Url": "https://api.github.com/repos/djmailhot/CSE-Distributed-Systems", "Date": "2013-04-23T04:47:31Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(1000); } catch (java.lang.InterruptedException ex) { java.util.logging.Logger.getLogger(imserver.Chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7328/buggy-version/InstantMsg.src.imserver.Chat.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "79f571e4377024437229d229b2508c6241362ce8", "Url": "https://api.github.com/repos/just4brown/Project6", "Date": "2014-04-22T22:45:23Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { pInputStream.close(); } catch (java.lang.Throwable t) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1734/buggy-version/MapboxAndroidSDK.src.main.java.com.mapbox.mapboxsdk.tileprovider.tilesource.TileJsonTileLayer.java", "BodyUseAPI": ["java.io.InputStream.close()"], "Fixed commit": "032144ab754852f6fcc5caf131a5457664a353fc", "Url": "https://api.github.com/repos/komoot/mapbox-android-sdk-legacy", "Date": "2016-08-03T14:19:50Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { out.close(); } catch (java.lang.Throwable t) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1734/buggy-version/MapboxAndroidSDK.src.main.java.com.mapbox.mapboxsdk.tileprovider.tilesource.TileJsonTileLayer.java", "BodyUseAPI": ["java.io.ByteArrayOutputStream.close()"], "Fixed commit": "032144ab754852f6fcc5caf131a5457664a353fc", "Url": "https://api.github.com/repos/komoot/mapbox-android-sdk-legacy", "Date": "2016-08-03T14:19:50Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.alibaba.fastjson.JSONObject json = com.alibaba.fastjson.JSONObject.parseObject(line); parseAndStoreMetric(json); return true; } catch (com.zhubo.task.parsepage.task.com.alibaba e) { e.printStackTrace(); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1165/buggy-version/complete.src.main.java.com.zhubo.task.parsepage.task.ParseAppRoomPageWithTopAudienceIdentifyTask.java", "BodyUseAPI": ["com.alibaba.fastjson.JSONObject.parseObject(java.lang.String)", "com.zhubo.task.parsepage.task.ParseAppRoomPageWithTopAudienceIdentifyTask.parseAndStoreMetric(com.alibaba.fastjson.JSONObject)"], "Fixed commit": "efc8e47cfd27781fe77ca94d43faa388d5011933", "Url": "https://api.github.com/repos/expPATHoli/zhubo_backend", "Date": "2016-12-11T15:55:44Z"},
{"Line": "=>694", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.io.File deleteFile = new java.io.File(filePath); boolean status = deleteFile.delete(); android.util.Log.d(com.lib.videoplayer.util.VideoData.TAG, (\"File Delete status:: \" + status)); } catch (java.lang.Exception e) { com.lib.utility.util.Logger.error(com.lib.videoplayer.util.VideoData.TAG, \"Exception :: deleteFile() ::\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3537/buggy-version/MovieBioscope.videoplayer.src.main.java.com.lib.videoplayer.util.VideoData.java", "BodyUseAPI": ["android.util.Log.d(java.lang.String,java.lang.String)", "java.io.File.delete()"], "Fixed commit": "2f122333b7fae21a5d22a10def2eee52cfc3d99c", "Url": "https://api.github.com/repos/IdroidzDevelopers/MovieBioscope", "Date": "2017-03-21T15:57:16Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { is = new java.io.BufferedInputStream(connection.getInputStream()); } catch (java.io.IOException e) { is = new java.io.BufferedInputStream(connection.getErrorStream()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/893/buggy-version/app.src.main.java.io.gonative.android.WebviewInterceptTask.java", "BodyUseAPI": ["java.net.HttpURLConnection.getInputStream()"], "Fixed commit": "1b0c3cd1068763ee2881b05fa38e0fce0a11a26c", "Url": "https://api.github.com/repos/gonativeio/gonative-android", "Date": "2015-11-07T00:19:13Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { dh.run(); } catch (java.io.IOException e) { ar.edu.itba.pdc.logger.XMPPLogger.getInstance().error(\"Cannot start application, IO error.\"); } catch (java.lang.Exception e) { ar.edu.itba.pdc.logger.XMPPLogger.getInstance().error(\"Unexpected error, closing application\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7729/buggy-version/src.main.java.ar.edu.itba.pdc.nio.XMPPProxy.java", "BodyUseAPI": ["ar.edu.itba.pdc.nio.DispatcherHandler.run()"], "Fixed commit": "e244b42bf25f3fa02a2949063af13988c8078534", "Url": "https://api.github.com/repos/lukkm/TPE_PROTOS_2013", "Date": "2013-06-18T19:09:29Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { surveyTimer.schedule(new com.ubhave.triggermanager.triggers.clockbased.SurveyNotification(), startDelayInMillis, intervalLengthInMillis); } catch (java.lang.IllegalArgumentException e) { throw new com.ubhave.triggermanager.TriggerException(com.ubhave.triggermanager.TriggerException.INVALID_STATE, (((\"Illegal arguments in interval trigger. Start delay: \" + (startDelayInMillis)) + \", Interval: \") + (intervalLengthInMillis))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5965/buggy-version/src.com.ubhave.triggermanager.triggers.clockbased.IntervalTrigger.java", "BodyUseAPI": ["com.ubhave.triggermanager.triggers.clockbased.IntervalTrigger.schedule(com.ubhave.triggermanager.triggers.clockbased.SurveyNotification,long,long)"], "Fixed commit": "74c8625180fc0d007ea265d6fc5afaa77c202964", "Url": "https://api.github.com/repos/nlathia/TriggerManager", "Date": "2012-12-11T10:21:50Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ok = work(); } catch (java.lang.Exception e) { de.ovgu.featureide.core.mpl.MPLPlugin.getDefault().logError(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3246/buggy-version/plugins.de.ovgu.featureide.core.mpl.src.de.ovgu.featureide.core.mpl.job.util.AChainJob.java", "BodyUseAPI": ["de.ovgu.featureide.core.mpl.job.util.AChainJob<T>.work()"], "Fixed commit": "8f03aa269c211d0f0266111ad37a1b44dfaa0a87", "Url": "https://api.github.com/repos/kruegers/FeatureIDE", "Date": "2014-04-25T15:26:02Z"},
{"Line": "=>441", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { for (com.waverunner.wordrunner.Word word : words) { ins(db, word); result++; } db.setTransactionSuccessful(); } finally { db.endTransaction(); db.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1530/buggy-version/app.src.main.java.com.waverunner.wordrunner.db.WRBaseHelper.java", "BodyUseAPI": ["com.waverunner.wordrunner.db.WRBaseHelper.ins(android.database.sqlite.SQLiteDatabase,com.waverunner.wordrunner.Word)", "android.database.sqlite.SQLiteDatabase.setTransactionSuccessful()"], "Fixed commit": "b28e165540456189fcba91eb78b364c9d215ec3e", "Url": "https://api.github.com/repos/MichaelKazarian/WordRunner", "Date": "2017-11-27T14:26:06Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { inv = getInventory(); } catch (java.lang.NullPointerException e) { if (getBlock().getChunk().isLoaded()) { plugin.removeChest(this); plugin.log.log(java.util.logging.Level.WARNING, \"Removed 1 Chest because it isn't there any more.\"); } return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8359/buggy-version/com.narrowtux.DropChest.DropChestItem.java", "BodyUseAPI": ["com.narrowtux.DropChest.DropChestItem.getInventory()"], "Fixed commit": "aba7dd56f026bbefa030be10b98851ef82b15217", "Url": "https://api.github.com/repos/narrowtux/DropChest", "Date": "2011-08-23T14:49:43Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.util.ArrayList<com.webcrawler.torrent.Torrent> episodeTorrents = series.getSeason(java.lang.Integer.parseInt(torrent.getSeasonNumber())).getEpisode(java.lang.Integer.parseInt(torrent.getEpisodeNumber())).getTorrents(); boolean add = true; for (com.webcrawler.torrent.Torrent episodeTorrent : episodeTorrents) { if (java.util.Objects.equals(episodeTorrent.getSiteLink(), torrent.getSiteLink())) { add = false; } } if (add) series.getSeason(java.lang.Integer.parseInt(torrent.getSeasonNumber())).getEpisode(java.lang.Integer.parseInt(torrent.getEpisodeNumber())).addTorrent(torrent); } catch (java.lang.IndexOutOfBoundsException e) { java.lang.System.err.println(\"Series episode out of bounds, someone is retarded\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1005/buggy-version/src.main.java.com.webcrawler.managers.Managers.java", "BodyUseAPI": ["com.webcrawler.torrent.Torrent.getSiteLink()", "com.webcrawler.torrent.Torrent.getEpisodeNumber()", "com.webcrawler.torrent.Torrent.getSeasonNumber()", "com.webcrawler.torrent.Torrent.getSiteLink()", "java.lang.Integer.parseInt(torrent.getSeasonNumber())", "series.getSeason(java.lang.Integer.parseInt(torrent.getSeasonNumber())).getEpisode(int)", "series.getSeason(java.lang.Integer.parseInt(torrent.getSeasonNumber())).getEpisode(java.lang.Integer.parseInt(torrent.getEpisodeNumber())).addTorrent(com.webcrawler.torrent.Torrent)", "java.util.Objects.equals(episodeTorrent.getSiteLink(),torrent.getSiteLink())", "com.webcrawler.series.Series.getSeason(int)", "com.webcrawler.torrent.Torrent.getSeasonNumber()", "series.getSeason(java.lang.Integer.parseInt(torrent.getSeasonNumber())).getEpisode(int)", "com.webcrawler.torrent.Torrent.getEpisodeNumber()", "com.webcrawler.series.Series.getSeason(int)", "java.lang.Integer.parseInt(torrent.getEpisodeNumber())", "series.getSeason(java.lang.Integer.parseInt(torrent.getSeasonNumber())).getEpisode(java.lang.Integer.parseInt(torrent.getEpisodeNumber())).getTorrents()", "java.lang.Integer.parseInt(torrent.getSeasonNumber())", "java.lang.Integer.parseInt(torrent.getEpisodeNumber())"], "Fixed commit": "3ffbaf8067df9493b25ccdd444ceeffc48118071", "Url": "https://api.github.com/repos/Zexuz/TvCalander", "Date": "2016-03-03T19:55:15Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { size = java.lang.Double.parseDouble(((org.w3c.dom.Element) (aperioRegion)).getAttribute(\"Area\")); } catch (final java.lang.NumberFormatException exception) { multij.tools.Tools.ignore(exception); size = getSurface(region, 1.0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8976/buggy-version/src.imj3.draft.AperioXML2SVG.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)", "org.w3c.dom.Node.getAttribute(java.lang.String)"], "Fixed commit": "f16f7273aa145a4e7ef4074c2270b64ae9569dec", "Url": "https://api.github.com/repos/codistmonk/IMJ", "Date": "2016-01-27T23:33:40Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { viewGroup.addView(toastView); toastView.startAnimation(superActivityToast.getShowAnimation()); } catch (java.lang.IllegalStateException e) { android.util.Log.e(com.extlibsupertoasts.ManagerSuperActivityToast.TAG, e.toString()); clearSuperActivityToastsForActivity(superActivityToast.getActivity()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4993/buggy-version/LibrarySuperToasts.src.com.extlibsupertoasts.ManagerSuperActivityToast.java", "BodyUseAPI": ["android.view.ViewGroup.addView(android.view.View)", "android.view.View.startAnimation(superActivityToast.getShowAnimation())", "com.extlibsupertoasts.SuperActivityToast.getShowAnimation()"], "Fixed commit": "dfa1030757df51283f8de438b7b1e7516c63ded3", "Url": "https://api.github.com/repos/JohnPersano/Supertoasts", "Date": "2013-07-09T02:27:11Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Class.forName(de.jClipCorn.database.driver.SQLiteDatabase.DRIVER).newInstance(); } catch (java.lang.InstantiationException | java.lang.IllegalAccessException | java.lang.ClassNotFoundException e) { de.jClipCorn.gui.log.CCLog.addError(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8917/buggy-version/src.main.de.jClipCorn.database.driver.SQLiteDatabase.java", "BodyUseAPI": ["java.lang.Class.forName(java.lang.String)", "java.lang.Class<?>.newInstance()"], "Fixed commit": "c7f5a66487757fc026d96f370a7fd0cda2027548", "Url": "https://api.github.com/repos/Mikescher/jClipCorn", "Date": "2017-11-24T18:02:07Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.mmclcs.Main.music = com.mmclcs.AudioCore.InitSound(file); com.mmclcs.Main.window.setAudioInput(com.mmclcs.Main.music); com.mmclcs.AudioCore.StartSound(com.mmclcs.Main.music); } catch (java.lang.RuntimeException e) { java.lang.System.out.println(\"Failed to change song. Check the filetype is supported and the path is correct.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/386/buggy-version/src.com.mmclcs.Main.java", "BodyUseAPI": ["com.mmclcs.AudioCore.InitSound(java.lang.String)", "com.mmclcs.GuiCore.setAudioInput(javax.sound.sampled.Clip)", "com.mmclcs.AudioCore.StartSound(javax.sound.sampled.Clip)"], "Fixed commit": "1857c81e689ab5ef8e29597e7eeaba1359be91e6", "Url": "https://api.github.com/repos/conlei/Play", "Date": "2017-05-25T16:37:00Z"},
{"Line": "=>937", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { arguments[1] = dateFomatter.parse(receiptDateArray[i]); } catch (final java.text.ParseException exp) { org.egov.collection.service.ReceiptHeaderService.LOGGER.debug((((\"Exception in parsing date \" + (receiptDateArray[i])) + \" - \") + (exp.getMessage()))); throw new org.egov.infra.exception.ApplicationRuntimeException(\"Exception while parsing date\", exp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1597/buggy-version/egov.egov-collection.src.main.java.org.egov.collection.service.ReceiptHeaderService.java", "BodyUseAPI": ["java.text.SimpleDateFormat.parse(java.lang.String)"], "Fixed commit": "5fe70b12f5aa3b27c63963ce1e78a94bfbc85e98", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2016-04-14T07:01:28Z"},
{"Line": "=>1120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { arguments[1] = dateFomatter.parse(receiptDateArray[i]); } catch (final java.text.ParseException exp) { org.egov.collection.service.ReceiptHeaderService.LOGGER.debug((((\"Exception in parsing date \" + (receiptDateArray[i])) + \" - \") + (exp.getMessage()))); throw new org.egov.infra.exception.ApplicationRuntimeException(\"Exception while parsing date\", exp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1597/buggy-version/egov.egov-collection.src.main.java.org.egov.collection.service.ReceiptHeaderService.java", "BodyUseAPI": ["java.text.SimpleDateFormat.parse(java.lang.String)"], "Fixed commit": "5fe70b12f5aa3b27c63963ce1e78a94bfbc85e98", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2016-04-14T07:01:28Z"},
{"Line": "=>1214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { arguments[1] = dateFomatter.parse(receiptDateArray[i]); } catch (final java.text.ParseException exp) { org.egov.collection.service.ReceiptHeaderService.LOGGER.debug((((\"Exception in parsing date \" + (receiptDateArray[i])) + \" - \") + (exp.getMessage()))); throw new org.egov.infra.exception.ApplicationRuntimeException(\"Exception while parsing date\", exp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1597/buggy-version/egov.egov-collection.src.main.java.org.egov.collection.service.ReceiptHeaderService.java", "BodyUseAPI": ["java.text.SimpleDateFormat.parse(java.lang.String)"], "Fixed commit": "5fe70b12f5aa3b27c63963ce1e78a94bfbc85e98", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2016-04-14T07:01:28Z"},
{"Line": "=>1023", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { arguments[1] = dateFomatter.parse(receiptDateArray[i]); } catch (final java.text.ParseException exp) { org.egov.collection.service.ReceiptHeaderService.LOGGER.debug((((\"Exception in parsing date \" + (receiptDateArray[i])) + \" - \") + (exp.getMessage()))); throw new org.egov.infra.exception.ApplicationRuntimeException(\"Exception while parsing date\", exp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1597/buggy-version/egov.egov-collection.src.main.java.org.egov.collection.service.ReceiptHeaderService.java", "BodyUseAPI": ["java.text.SimpleDateFormat.parse(java.lang.String)"], "Fixed commit": "5fe70b12f5aa3b27c63963ce1e78a94bfbc85e98", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2016-04-14T07:01:28Z"},
{"Line": "=>423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { keyFileReader.close(); } catch (java.io.IOException e) { java.lang.System.err.println((\"Error closing \" + (keyFileName))); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/9173/buggy-version/Random.src.net.codehobby.PseudoRandomNumberGenerator.java", "BodyUseAPI": ["java.io.BufferedReader.close()"], "Fixed commit": "965333cff197d256790ba5307fb546b1fa0c70f2", "Url": "https://api.github.com/repos/CodeHobbyNet/Random-Java", "Date": "2014-11-04T04:23:06Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((from.distanceTo(to)) == 1) { return true; } } catch (strategy.common.StrategyRuntimeException e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6728/buggy-version/StrategyMaster2013.src.strategy.game.version.validateMoveBehaviors.SeveralSpacesInOneDirectionMoveValidator.java", "BodyUseAPI": ["strategy.game.common.Location.distanceTo(strategy.game.common.Location)"], "Fixed commit": "567041f8aa7603fbe9077ea58287a9570d880426", "Url": "https://api.github.com/repos/scornman/Strategy-Game-SC-MC", "Date": "2013-10-07T21:04:56Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return this.in.readLine(); } catch (java.net.SocketException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4558/buggy-version/src.com.tigerzone.fall2016server.server.Connection.java", "BodyUseAPI": ["java.io.BufferedReader.readLine()"], "Fixed commit": "08274efcff92aa7576e31bbdb259491c97d80a37", "Url": "https://api.github.com/repos/chausen/TigerZoneServer", "Date": "2016-12-02T04:11:42Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { super.collectionProcessComplete(arg0); } catch (org.apache.uima.resource.ResourceProcessException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2570/buggy-version/hw1-amr1.src.main.java.edu.cmu.lti.Outputter.java", "BodyUseAPI": ["org.apache.uima.collection.CasConsumer_ImplBase.collectionProcessComplete(org.apache.uima.util.ProcessTrace)"], "Fixed commit": "4f09b8aba21db326826e828d107acc049dfaffa1", "Url": "https://api.github.com/repos/amr1/hw1-amr1", "Date": "2012-12-10T06:46:07Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((!(uSign.isSign(event.getRetractLocation().getBlock()))) && (com.Acrobot.ChestShop.Listeners.blockBreak.cancellingBlockBreak(event.getRetractLocation().getBlock(), null))) event.setCancelled(true); } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/786/buggy-version/com.Acrobot.ChestShop.Listeners.blockBreak.java", "BodyUseAPI": ["event.getRetractLocation().getBlock()", "org.bukkit.event.block.BlockPistonRetractEvent.getRetractLocation()", "event.getRetractLocation().getBlock()", "org.bukkit.event.block.BlockPistonRetractEvent.getRetractLocation()", "com.Acrobot.ChestShop.Listeners.blockBreak.cancellingBlockBreak(event.getRetractLocation().getBlock(),<nulltype>)", "org.bukkit.event.block.BlockPistonRetractEvent.setCancelled(boolean)", "com.Acrobot.ChestShop.Listeners.blockBreak.isSign(event.getRetractLocation().getBlock())"], "Fixed commit": "7ec812a3e13d955b9c4a32612abd45a7aca3fac4", "Url": "https://api.github.com/repos/ChestShop-authors/ChestShop-3", "Date": "2011-09-10T18:50:24Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(50); } catch (java.lang.InterruptedException err) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7983/buggy-version/FtcRobotController.src.main.java.com.qualcomm.ftcrobotcontroller.opmodes.BILAutonomousCommon.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "9bad6bff8ff4910437cb288d412647c599a9a81c", "Url": "https://api.github.com/repos/BrokenImageLink/ftc_app", "Date": "2016-02-17T01:03:27Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { while (!(file.exists(writingFileName))) { if (timeElapsedMs >= fileCheckTimeLimitMs) throw new java.lang.RuntimeException(\"Timed out while waiting for file to exist.\"); java.lang.Thread.sleep(backend.ServerMessageTransmitter.FILE_CHECK_SLEEP_TIME_MS); timeElapsedMs += backend.ServerMessageTransmitter.FILE_CHECK_SLEEP_TIME_MS; } this.isOpen = true; } catch (java.lang.InterruptedException e) { } catch (java.lang.Exception e) { mw.transferFail(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6518/buggy-version/ConnectFour.src.backend.ServerMessageTransmitter.java", "BodyUseAPI": ["backend.ServerTextFileIO.exists(java.lang.String)", "java.lang.Thread.sleep(int)"], "Fixed commit": "d787add952922dbc173111ac4ad1a25886dcf764", "Url": "https://api.github.com/repos/Omar-Bamashmos/Telecom-Nework-project-Group5", "Date": "2016-11-14T03:12:18Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { sample.setResponseCode(java.lang.Integer.parseInt(attributes.getValue(\"rc\"))); } catch (java.lang.NumberFormatException ex) { sample.setResponseCode(99999); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5835/buggy-version/src.main.java.hudson.plugins.jmeter.diag.parser.JMeterXmlParser.java", "BodyUseAPI": ["org.xml.sax.Attributes.getValue(java.lang.String)", "hudson.plugins.jmeter.diag.entity.HttpSample.setResponseCode(int)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "909097059d0ddd49d7c25643bab55eb37edf812a", "Url": "https://api.github.com/repos/Myra-Security-GmbH/jmeter-diag-plugin", "Date": "2017-09-12T09:36:03Z"},
{"Line": "=>459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { bitIcon = ((android.graphics.drawable.BitmapDrawable) (d)); bm = bitIcon.getBitmap(); } catch (java.lang.Exception e) { bm = android.graphics.Bitmap.createBitmap(10, 10, Bitmap.Config.ARGB_8888); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3897/buggy-version/HoneyBadger.src.com.honeybadger.api.SharedMethods.java", "BodyUseAPI": ["android.graphics.drawable.BitmapDrawable.getBitmap()"], "Fixed commit": "da7074308368bbb19bf794826f22814349f9f175", "Url": "https://api.github.com/repos/fjer/honeybadger", "Date": "2013-04-14T18:03:15Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { log.debug((\"Existing HBVerison: \" + (vnfrRepository.findFirstById(virtualNetworkFunctionRecord.getId()).getHb_version()))); } catch (java.lang.Exception e) { if (log.isDebugEnabled()) log.error(e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6958/buggy-version/vnfm.vnfm-impl.src.main.java.org.openbaton.nfvo.vnfm_reg.tasks.ErrorTask.java", "BodyUseAPI": ["org.openbaton.nfvo.vnfm_reg.tasks.ErrorTask.debug((\"Existing HBVerison: \" + (vnfrRepository.findFirstById(virtualNetworkFunctionRecord.getId()).getHb_version())))", "vnfrRepository.findFirstById(virtualNetworkFunctionRecord.getId()).getHb_version()", "org.openbaton.nfvo.vnfm_reg.tasks.ErrorTask.findFirstById(virtualNetworkFunctionRecord.getId())", "org.openbaton.nfvo.vnfm_reg.tasks.ErrorTask.getId()"], "Fixed commit": "556d415c65845b1ed34057975af4d780619f7b3b", "Url": "https://api.github.com/repos/openbaton/NFVO", "Date": "2015-11-27T17:46:19Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return environment.methodImplementing(operation); } catch (som.vm.MateSemanticsException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5138/buggy-version/MateExtensions.som.matenodes.MateAbstractSemanticNodes.java", "BodyUseAPI": ["som.vmobjects.SMateEnvironment.methodImplementing(som.vm.constants.ReflectiveOp)"], "Fixed commit": "18a612a268267dca81b8669f4d6b7a59bdf9e927", "Url": "https://api.github.com/repos/charig/TruffleMATE", "Date": "2015-12-11T21:39:56Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { getMap().moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngBounds(builder.build(), 1)); } catch (java.lang.IllegalStateException e) { int width = getResources().getDisplayMetrics().widthPixels; int height = getResources().getDisplayMetrics().heightPixels; getMap().moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngBounds(builder.build(), width, height, 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5268/buggy-version/demo.src.com.google.maps.android.utils.demo.KmlDemoActivity.java", "BodyUseAPI": ["LatLngBounds.Builder.build()", "getMap().moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngBounds(builder.build(), 1))", "com.google.maps.android.utils.demo.KmlDemoActivity.getMap()", "com.google.android.gms.maps.CameraUpdateFactory.newLatLngBounds(builder.build(),int)"], "Fixed commit": "3289d945be8a87e67522beea91d85615cb034cda", "Url": "https://api.github.com/repos/Libby713/android-maps-utils", "Date": "2017-01-05T04:17:17Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { text = new java.lang.String(text.getBytes(\"ISO-8859-1\"), \"UTF-8\"); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2934/buggy-version/src.main.java.io.github.jacobmarshall.meloooncensor.lang.Translation.java", "BodyUseAPI": ["java.lang.String.getBytes(java.lang.String)"], "Fixed commit": "ff1c18b1128f1f8a9d99a4ecb8d7cbb0e2d68edc", "Url": "https://api.github.com/repos/Behoston/meloooncensor", "Date": "2017-02-25T03:32:23Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(500); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5945/buggy-version/app.src.main.java.com.example.yash.popularmovies.network.MovieFetcher.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "f1a78331685c805e1986dfeacf0befb27102fde3", "Url": "https://api.github.com/repos/yashtanna93/Popular_Movies_Application", "Date": "2016-01-19T09:53:43Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { de.robv.android.xposed.XposedBridge.hookAllMethods(de.robv.android.xposed.XposedHelpers.findClass(QSTile.CLASS_VISUALIZER_TILE, classLoader), \"handleUpdateState\", new de.robv.android.xposed.XC_MethodHook() { @java.lang.Override protected void beforeHookedMethod(tk.wasdennnoch.androidn_ify.systemui.qs.MethodHookParam param) throws java.lang.Throwable { if ((de.robv.android.xposed.XposedHelpers.getObjectField(param.thisObject, \"mVisualizer\")) == null) param.setResult(null); } }); } catch (java.lang.Throwable ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7908/buggy-version/app.src.main.java.tk.wasdennnoch.androidn_ify.systemui.qs.TilesManager.java", "BodyUseAPI": ["tk.wasdennnoch.androidn_ify.systemui.qs.MethodHookParam.setResult(<nulltype>)", "de.robv.android.xposed.XposedHelpers.findClass(QSTile.CLASS_VISUALIZER_TILE,java.lang.ClassLoader)", "de.robv.android.xposed.XposedBridge.hookAllMethods(de.robv.android.xposed.XposedHelpers.findClass(QSTile.CLASS_VISUALIZER_TILE, classLoader),java.lang.String,de.robv.android.xposed.XC_MethodHook)", "de.robv.android.xposed.XposedHelpers.getObjectField(param.thisObject,java.lang.String)"], "Fixed commit": "c5f03a1689d10fd15be65f2c833fbd6d93bdc668", "Url": "https://api.github.com/repos/wasdennnoch/AndroidN-ify", "Date": "2016-08-24T13:54:50Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { tmpFile = java.io.File.createTempFile(fromFile.getName(), null, sessionThread.getWorkingDir()); if (fromFile.isDirectory()) { java.lang.String tmpFilePath = tmpFile.getPath(); tmpFile.delete(); tmpFile = new java.io.File(tmpFilePath); } } catch (java.io.IOException e) { e.printStackTrace(); errString = \"550 Error during rename operation\\r\\n\"; break mainblock; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8855/buggy-version/Lib.src.be.ppareit.swiftp.server.CmdRNTO.java", "BodyUseAPI": ["java.io.File.getPath()", "java.io.File.delete()", "java.io.File.getName()", "be.ppareit.swiftp.server.CmdRNTO.getWorkingDir()", "java.io.File.isDirectory()", "java.io.File.createTempFile(java.lang.String,<nulltype>,sessionThread.getWorkingDir())"], "Fixed commit": "daa9ec5966a55fdc196cc58e5553dfbdf76cf75d", "Url": "https://api.github.com/repos/ppareit/swiftp", "Date": "2013-07-24T14:31:43Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { input = new java.io.File(GUI.missionsdetailcontroller.class.getClassLoader().getResource(\"Resources/googlemaps.html\").toURI().getPath()); } catch (java.net.URISyntaxException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5966/buggy-version/src.GUI.missionsdetailcontroller.java", "BodyUseAPI": ["java.net.URL.toURI()", "java.net.URI.getPath()", "java.lang.Class.getClassLoader()", "java.lang.ClassLoader.getResource(java.lang.String)"], "Fixed commit": "1ff05f0a335f9f3121fb2d6d074fea45da82106a", "Url": "https://api.github.com/repos/Full-House-Fontys/Full-House-Main", "Date": "2016-06-18T16:39:23Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { properties.load(stream); } finally { stream.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4416/buggy-version/cascading-core.src.main.java.cascading.util.Version.java", "BodyUseAPI": ["java.util.Properties.load(java.io.InputStream)"], "Fixed commit": "639468ef6a6623c19899bafd3719220477276863", "Url": "https://api.github.com/repos/mapr/cascading", "Date": "2014-10-15T21:30:05Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { properties.load(stream); } finally { stream.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4416/buggy-version/cascading-core.src.main.java.cascading.util.Version.java", "BodyUseAPI": ["java.util.Properties.load(java.io.InputStream)"], "Fixed commit": "639468ef6a6623c19899bafd3719220477276863", "Url": "https://api.github.com/repos/mapr/cascading", "Date": "2014-10-15T21:30:05Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { operation.run(index, source); } finally { if (0 == (sync.decrementAndGet())) { synchronized(sync) { sync.notify(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6922/buggy-version/meldfs.src.warrenfalk.meldfs.SourceOpRunner.java", "BodyUseAPI": ["warrenfalk.meldfs.SourceOp.run(int,warrenfalk.meldfs.SourceFs)"], "Fixed commit": "525678f88816313097498f289bcf0568fc90824f", "Url": "https://api.github.com/repos/warrenfalk/meldfs", "Date": "2012-08-04T23:24:24Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { num = java.lang.Double.parseDouble(tempExpr); } catch (java.lang.NumberFormatException exception) { throw new ua.org.s4code.intellicalc.analyser.exception.ExprException(position, (position + (tempExpr.length())), \"This seams to be a number, but it isn't.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7173/buggy-version/app.src.main.java.ua.org.s4code.intellicalc.analyser.Expression.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "06bd5862c771ffd51aa557feef51061c29b7998d", "Url": "https://api.github.com/repos/stalkerok1993/intellicalc", "Date": "2015-08-16T19:40:58Z"},
{"Line": "=>1752", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { parent.requestDisallowInterceptTouchEvent(false); } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4371/buggy-version/NotificationAnalyser.MPChartLib.src.com.github.mikephil.charting.charts.Chart.java", "BodyUseAPI": ["android.view.ViewParent.requestDisallowInterceptTouchEvent(boolean)"], "Fixed commit": "ac46db73b813eb2f8caeff2b998e8189b3674344", "Url": "https://api.github.com/repos/MPieter/Notification-Analyser", "Date": "2014-10-23T10:50:39Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { source = okio.Okio.buffer(okio.Okio.source(rawSocket)); sink = okio.Okio.buffer(okio.Okio.sink(rawSocket)); } catch (java.lang.NullPointerException npe) { if (okhttp3.internal.connection.RealConnection.NPE_THROW_WITH_NULL.equals(npe.getMessage())) { throw new java.io.IOException(npe); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2301/buggy-version/okhttp.src.main.java.okhttp3.internal.connection.RealConnection.java", "BodyUseAPI": ["okio.Okio.buffer(okio.Okio.sink(rawSocket))", "okio.Okio.sink(java.net.Socket)", "okio.Okio.buffer(okio.Okio.source(rawSocket))", "okio.Okio.source(java.net.Socket)"], "Fixed commit": "b8a0352d524b3d339e71a83b04c63eee8aa3f291", "Url": "https://api.github.com/repos/stanislous/okhttp", "Date": "2017-05-11T22:53:19Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { int what = java.lang.Integer.parseInt(parts[0]); switch (what) { case com.dpkabe.maze.mazeutils.MazeConstants.EVENT_CRASH : onOpponentCrash(); break; case com.dpkabe.maze.mazeutils.MazeConstants.EVENT_WIN : onOpponentWin(); break; case com.dpkabe.maze.mazeutils.MazeConstants.EVENT_POSITION_UPDATE : updateOpponentPosition(java.lang.Float.parseFloat(parts[1]), java.lang.Float.parseFloat(parts[2])); break; } } catch (java.lang.NumberFormatException e) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2148/buggy-version/src.com.dpkabe.maze.activity.FlexibleMazeActivity.java", "BodyUseAPI": ["com.dpkabe.maze.activity.FlexibleMazeActivity.onOpponentWin()", "java.lang.Float.parseFloat(java.lang.String)", "com.dpkabe.maze.activity.FlexibleMazeActivity.onOpponentCrash()", "com.dpkabe.maze.activity.FlexibleMazeActivity.updateOpponentPosition(float,float)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.Float.parseFloat(java.lang.String)"], "Fixed commit": "762e97f72f385cd7676780f7b711282c5d7adec9", "Url": "https://api.github.com/repos/adithyaphilip/dpkm-maze", "Date": "2014-11-15T08:57:54Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { staff.scanFile(new java.io.File(inputpath)); } catch (java.lang.Exception e) { java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2179/buggy-version/Project.TabToPDF.TextToPDF.version11.TextToPDFv11.java", "BodyUseAPI": ["tabparts.TabStaff.scanFile(java.io.File)"], "Fixed commit": "24869548205154aebfb38699e694aa6a2edcbb61", "Url": "https://api.github.com/repos/rhduke/RuntimeDefenders3", "Date": "2014-02-26T04:42:02Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((studentGroupDao.getGroupByName(group.getName())) != null) throw new java.lang.IllegalArgumentException(((\"Group with name \" + (group.getName())) + \" already exist\")); } catch (org.springframework.dao.DataAccessException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3143/buggy-version/service.src.main.java.com.epam.ServiceImpl.java", "BodyUseAPI": ["com.epam.StudentGroupDao.getGroupByName(group.getName())", "com.epam.Group.getName()", "com.epam.Group.getName()"], "Fixed commit": "b959f176ef13ce837bed2c37b470ad4b340abe2d", "Url": "https://api.github.com/repos/Brest-Java-Course-2017/VadimParafenukSample", "Date": "2017-03-14T21:11:59Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { t = new com.astamuse.asta4d.template.Template(info.getPath(), input); } finally { try { input.close(); } catch (java.lang.Exception ex) { logger.error((\"Error occured when close input stream of \" + (info.getPath())), ex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5703/buggy-version/asta4d-core.src.main.java.com.astamuse.asta4d.template.TemplateResolver.java", "BodyUseAPI": ["com.astamuse.asta4d.template.TemplateResolver.TemplateInfo.getPath()"], "Fixed commit": "59534bff621fe1898c8bb9079ae0ecb33d13b401", "Url": "https://api.github.com/repos/astamuse/asta4d", "Date": "2014-06-06T04:46:39Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { RunOpMode(); } finally { com.google.appinventor.components.runtime.FtcRobotController.deactivateOpMode(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6226/buggy-version/appinventor.components.src.com.google.appinventor.components.runtime.FtcLinearOpMode.java", "BodyUseAPI": ["com.google.appinventor.components.runtime.FtcLinearOpMode.1.RunOpMode()"], "Fixed commit": "f5fa8bf97ba85fbdd426f5795bbf607ac58efcee", "Url": "https://api.github.com/repos/lizlooney/appinventor-sources", "Date": "2015-08-18T08:22:48Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { stringsList.add(displayCache(session, domain, bean, fields)); } catch (javax.management.AttributeNotFoundException anfe) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8821/buggy-version/src.main.java.org.cyclopsgroup.jmxterm.cmd.LiferayCachesCommand.java", "BodyUseAPI": ["java.util.List<java.lang.String[]>.add(java.lang.String[])", "org.cyclopsgroup.jmxterm.cmd.LiferayCachesCommand.displayCache(org.cyclopsgroup.jmxterm.Session,java.lang.String,java.lang.String,java.lang.String[])"], "Fixed commit": "33e39fe6a15a0f8827cef71ef61fd2d6d1a01a94", "Url": "https://api.github.com/repos/mikakoivisto/jmxterm", "Date": "2017-02-09T14:21:16Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.apache.http.client.methods.HttpPost request = new org.apache.http.client.methods.HttpPost(\"http://83.212.98.110:8000/\"); org.apache.http.entity.StringEntity params = new org.apache.http.entity.StringEntity(symptomsToJSON(((java.util.ArrayList<gr.climatewatch.org.climatewatch.Symptoms>) (symptomList)))); request.setHeader(\"Accept\", \"application/json\"); request.setHeader(\"Content-type\", \"application/json\"); request.setEntity(params); org.apache.http.HttpResponse response = httpClient.execute(request); } catch (java.lang.Exception ex) { java.lang.System.out.println((\"Something went horribly wrong \" + (ex.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/963/buggy-version/app.src.main.java.gr.climatewatch.org.climatewatch.ReportActivity.java", "BodyUseAPI": ["gr.climatewatch.org.climatewatch.ReportActivity.symptomsToJSON(java.util.List<gr.climatewatch.org.climatewatch.Symptoms>)", "org.apache.http.client.methods.HttpPost.setHeader(java.lang.String,java.lang.String)", "org.apache.http.client.HttpClient.execute(org.apache.http.client.methods.HttpPost)", "org.apache.http.client.methods.HttpPost.setHeader(java.lang.String,java.lang.String)", "org.apache.http.client.methods.HttpPost.setEntity(org.apache.http.entity.StringEntity)"], "Fixed commit": "0546dc847518a442573faac593b2a8bb5fe10dfd", "Url": "https://api.github.com/repos/ClimateWatch/Client", "Date": "2016-04-24T17:03:06Z"},
{"Line": "=>546", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return labelDAO.getLabelByName(labelName); } catch (org.wso2.carbon.apimgt.core.exception.APIMgtDAOException e) { java.lang.String message = \"Error occured while retrieving Label information for \" + labelName; org.wso2.carbon.apimgt.core.impl.AbstractAPIManager.log.error(message); throw new org.wso2.carbon.apimgt.core.exception.APIManagementException(message, e, org.wso2.carbon.apimgt.core.exception.ExceptionCodes.APIMGT_DAO_EXCEPTION); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5546/buggy-version/components.apimgt.org.wso2.carbon.apimgt.core.src.main.java.org.wso2.carbon.apimgt.core.impl.AbstractAPIManager.java", "BodyUseAPI": ["org.wso2.carbon.apimgt.core.dao.LabelDAO.getLabelByName(java.lang.String)"], "Fixed commit": "b5b6518300edb7e9b1a451bbba0a9efacca1187d", "Url": "https://api.github.com/repos/lakmali/carbon-apimgt", "Date": "2017-03-30T08:09:21Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return org.dromelvan.modell.SpelareSasongStatistik.placeringMap.get(getId()); } catch (java.lang.NullPointerException e) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/805/buggy-version/src.main.java.org.dromelvan.modell.SpelareSasongStatistik.java", "BodyUseAPI": ["org.dromelvan.modell.SpelareSasongStatistik.getId()", "java.util.Map<java.lang.Integer, java.lang.Integer>.get(getId())"], "Fixed commit": "c90163a91e05024c0fa79c0db5f34a56b6fbba2c", "Url": "https://api.github.com/repos/dromelvan/dromelvan-core", "Date": "2014-09-17T20:11:33Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mapGrid.getCellFormatter().setStyleName(x, y, \"tableCell-all\"); } catch (java.lang.NullPointerException here) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5505/buggy-version/src.florence.client.ConfigUI.java", "BodyUseAPI": ["mapGrid.getCellFormatter().setStyleName(int,int,java.lang.String)", "com.google.gwt.user.client.ui.Grid.getCellFormatter()"], "Fixed commit": "b7477474929abce7ad43d24035f9f2f6ac3b602f", "Url": "https://api.github.com/repos/MarsFlorence/Florence", "Date": "2015-05-06T17:30:39Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { file = new java.io.FileOutputStream(path); workbook.write(file); } finally { if (file != null) { try { file.close(); } catch (java.io.IOException e) { e.printStackTrace(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5166/buggy-version/src.data.Exporter.java", "BodyUseAPI": ["data.XSSFWorkbook.write(java.io.FileOutputStream)"], "Fixed commit": "379485462de6af797ccb2bc92f48d5364e2fe19c", "Url": "https://api.github.com/repos/JiMadness/IWS_ScoreCard", "Date": "2016-08-30T07:19:58Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((validateResponse) != null) { problemSet = validateResponse.get(); } problemSet.throwifSeverityExceeds(severity); } catch (java.lang.Exception e) { log.error(\"Unknown exception encountered: \", e); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1872/buggy-version/halyard-core.src.main.java.com.netflix.spinnaker.halyard.core.DaemonResponse.java", "BodyUseAPI": ["java.util.function.Supplier<com.netflix.spinnaker.halyard.core.problem.v1.ProblemSet>.get()", "com.netflix.spinnaker.halyard.core.problem.v1.ProblemSet.throwifSeverityExceeds(com.netflix.spinnaker.halyard.core.problem.v1.Problem.Severity)"], "Fixed commit": "29d90d294eac83ec6602a1cf7305f24c26f1d097", "Url": "https://api.github.com/repos/emjburns/halyard", "Date": "2017-06-08T18:45:00Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { int foo = java.lang.Integer.parseInt(zipCode); } catch (java.lang.NumberFormatException e) { throw new java.lang.IllegalArgumentException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1261/buggy-version/07Barcode.Barcode.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "97843f0729e22cccd9c0f6427ba6d2ab6de41506", "Url": "https://api.github.com/repos/horazio/MKS21X", "Date": "2017-12-05T02:49:44Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(15); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2580/buggy-version/src.control.GameThread.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "c1eb276e0da4220d31fa05a2fa623e08eb33c81f", "Url": "https://api.github.com/repos/armbruer/Snake", "Date": "2015-07-04T13:19:47Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.easemob.chat.EMChatManager.getInstance().deleteConversation(tobeDeleteCons.getUserName(), tobeDeleteCons.isGroup(), deleteMessage); com.easemob.chatuidemo.db.InviteMessgeDao inviteMessgeDao = new com.easemob.chatuidemo.db.InviteMessgeDao(getActivity()); inviteMessgeDao.deleteMessage(tobeDeleteCons.getUserName()); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1814/buggy-version/src.com.easemob.chatuidemo.ui.ConversationListFragment.java", "BodyUseAPI": ["com.easemob.chatuidemo.db.InviteMessgeDao.deleteMessage(tobeDeleteCons.getUserName())", "com.easemob.chat.EMConversation.isGroup()", "com.easemob.chat.EMConversation.getUserName()", "com.easemob.chat.EMChatManager.getInstance()", "com.easemob.chatuidemo.ui.ConversationListFragment.getActivity()", "com.easemob.chat.EMConversation.getUserName()", "com.easemob.chat.EMChatManager.getInstance().deleteConversation(tobeDeleteCons.getUserName(),tobeDeleteCons.isGroup(),boolean)"], "Fixed commit": "85b10760d505abc0356c2e72e15c8d9d2fc8d0a0", "Url": "https://api.github.com/repos/easemob/sdkdemoapp3.0_android", "Date": "2016-02-24T02:57:40Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { author = findPattern(\"author\\\":\\\".*?\\\",\", webSite.body().toString()); author = author.substring(9, ((author.length()) - 2)); } catch (java.lang.IllegalStateException e) { author = findPattern(\"<a href=\\\"[[/user/]|[/channel/]].*?alt=\\\".*?\\\"\", webSite.body().toString()); author = findPattern(\"alt=\\\".*?\\\"\", author); author = author.substring(5, ((author.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6596/buggy-version/src.main.java.no.uio.ifi.models.CrawlerStefan.java", "BodyUseAPI": ["no.uio.ifi.models.CrawlerStefan.findPattern(java.lang.String,webSite.body().toString())", "java.lang.String.substring(int,int)", "org.jsoup.nodes.Document.body()", "java.lang.String.length()", "webSite.body().toString()"], "Fixed commit": "0c011e504bdb8d2cfa183fe674f27e8468348bd9", "Url": "https://api.github.com/repos/idafroseth/youtubeDownloader", "Date": "2015-10-10T07:13:31Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((!(com.marz.snapprefs.Preferences.getBool(Preferences.Prefs.DEBUGGING))) && (!forced)) return; } catch (java.lang.Throwable t) { android.util.Log.d(\"SNAPPREFS\", ((\"Tried to log before fully loaded: [\" + message) + \"]\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2492/buggy-version/app.src.main.java.com.marz.snapprefs.Logger.java", "BodyUseAPI": ["com.marz.snapprefs.Preferences.getBool(Preferences.Prefs.DEBUGGING)"], "Fixed commit": "0a058baf1aaf80d7a0d09e1e62526feb55a34c5a", "Url": "https://api.github.com/repos/Andrerm124/Snapprefs", "Date": "2016-09-22T12:42:18Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { in = connection.getInputStream(); response = readFully(in); } finally { try { if (in != null) in.close(); } catch (java.io.IOException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1669/buggy-version/MapboxAndroidSDK.src.main.java.com.mapbox.mapboxsdk.tileprovider.tilesource.TileJsonTileLayer.java", "BodyUseAPI": ["java.net.HttpURLConnection.getInputStream()", "com.mapbox.mapboxsdk.tileprovider.tilesource.TileJsonTileLayer.RetrieveJSONTask.readFully(java.io.InputStream)"], "Fixed commit": "ce7a1907d9699447ce23792bee4139e1cc1422b3", "Url": "https://api.github.com/repos/komoot/mapbox-android-sdk-legacy", "Date": "2016-08-03T14:12:00Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { adapter.sendEvents(eventList); } catch (info.fetter.logstashforwarder.util.AdapterException e) { eventList.clear(); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3534/buggy-version/src.main.java.info.fetter.logstashforwarder.FileReader.java", "BodyUseAPI": ["info.fetter.logstashforwarder.FileReader.sendEvents(info.fetter.logstashforwarder.FileReader)"], "Fixed commit": "1f594d52066f43efdbfcaa0c521f1d7d76cfd1ec", "Url": "https://api.github.com/repos/didfet/logstash-forwarder-java", "Date": "2015-06-12T16:14:31Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.narrowtux.showcase.ShowcaseCreationAssistant assistant = new com.narrowtux.showcase.ShowcaseCreationAssistant(event.getPlayer(), event.getItem(), event.getClickedBlock().getLocation()); assistant.start(); } catch (java.lang.NoClassDefFoundError e) { for (java.lang.StackTraceElement element : e.getCause().getStackTrace()) { java.lang.System.out.println((((element.getFileName()) + \" line \") + (element.getLineNumber()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8842/buggy-version/src.main.java.com.narrowtux.showcase.ShowcasePlayerListener.java", "BodyUseAPI": ["org.bukkit.event.player.PlayerInteractEvent.getItem()", "com.narrowtux.showcase.ShowcaseCreationAssistant.start()", "event.getClickedBlock().getLocation()", "org.bukkit.event.player.PlayerInteractEvent.getPlayer()", "org.bukkit.event.player.PlayerInteractEvent.getClickedBlock()"], "Fixed commit": "1fa5244294c4302fcd3c51b39de46b0df4824b03", "Url": "https://api.github.com/repos/narrowtux/Showcase", "Date": "2011-09-21T16:08:39Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { responser.getWriter().flush(); } catch (java.io.IOException e) { getLogger().error(\"Error while writing response\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1125/buggy-version/Mario.src.main.java.com.mario.gateway.http.HttpGateway.java", "BodyUseAPI": ["responser.getWriter().flush()", "javax.servlet.http.HttpServletResponse.getWriter()"], "Fixed commit": "c2c3fb65ea967a829db813b99696633fa14d3a6a", "Url": "https://api.github.com/repos/bachden/mario3", "Date": "2016-11-25T09:05:19Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { builder.create().show(); } catch (android.view.WindowManager.BadTokenException bte) { bte.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4936/buggy-version/src.heinrisch.contact.picture.sync.PictureSync.java", "BodyUseAPI": ["builder.create().show()", "AlertDialog.Builder.create()"], "Fixed commit": "fbb7d595478385a937dacf4266b1703fc3194c79", "Url": "https://api.github.com/repos/heinrisch/Contact-Picture-Sync", "Date": "2012-04-21T18:11:25Z"},
{"Line": "=>463", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { mEditPhListener = ((com.vegnab.vegnab.EditPlaceholderFragment.EditPlaceholderFragmentListener) (activity)); } catch (java.lang.ClassCastException e) { throw new java.lang.ClassCastException(((activity.toString()) + \" must implement EditPlaceholderFragmentListener\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2229/buggy-version/app.src.main.java.com.vegnab.vegnab.EditPlaceholderFragment.java", "BodyUseAPI": [], "Fixed commit": "ef1ffa338d18708d7f4678c736e808322faf066a", "Url": "https://api.github.com/repos/rickshory/VegNabAS", "Date": "2015-12-13T02:55:40Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mWebSocketClient.send(json); } catch (org.java_websocket.exceptions.WebsocketNotConnectedException exception) { android.widget.Toast.makeText(getApplicationContext(), getResources().getString(R.string.websocket_closed), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/592/buggy-version/mobile.src.main.java.mycroft.ai.MainActivity.java", "BodyUseAPI": ["org.java_websocket.client.WebSocketClient.send(java.lang.String)"], "Fixed commit": "d99a4c154f768dd393f0b355b7fed0b7c18dec00", "Url": "https://api.github.com/repos/seymour-bootay/Mycroft-Android", "Date": "2016-12-04T04:36:42Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { itemBase.draw(this, x, y); } catch (java.lang.Exception ex) { for (vswe.stevesjam.components.FlowComponent component : manager.getZLevelRenderingList()) { java.lang.System.out.println(component.getId()); } throw ex; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1477/buggy-version/src.vswe.stevesjam.interfaces.GuiManager.java", "BodyUseAPI": ["vswe.stevesjam.components.FlowComponent.draw(vswe.stevesjam.interfaces.GuiManager,int,int)"], "Fixed commit": "4a9c6617c77dcc6b74db4d1f03989f0839575a56", "Url": "https://api.github.com/repos/Vswe/ModJam3", "Date": "2013-12-17T00:12:17Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { projectEntity = client.getProject(project); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5259/buggy-version/src.main.java.org.jboss.pressgang.ccms.docbook.processing.JIRABugLinkStrategy.java", "BodyUseAPI": ["org.jboss.pressgang.ccms.jira.rest.JIRARESTInterface.getProject(java.lang.String)"], "Fixed commit": "8cde3ffadfe363bfa5c87f16dd020ff9b883149b", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSContentSpec", "Date": "2013-09-02T01:37:05Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(1000); } catch (java.lang.InterruptedException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/723/buggy-version/LittleSmartTool2.src.littlesmarttool2.GUI.Step3Panel.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "ffb81ad4eb998c334be98e5c650a1f7cd7dda400", "Url": "https://api.github.com/repos/LittleSmartThings/LittleSmartTool2", "Date": "2013-06-28T15:06:17Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { locationId = getLowestCommonParentLocation(connection.getTileIdList(), locationConfigRegistry).getId(); } catch (org.openbase.jul.exception.CouldNotPerformException ex) { throw new org.openbase.jul.exception.CouldNotPerformException(((\"Could not find parent location for connection [\" + connection) + \"]\"), ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2095/buggy-version/location-registry.core.src.main.java.org.openbase.bco.registry.location.core.consistency.ConnectionLocationConsistencyHandler.java", "BodyUseAPI": ["rst.spatial.ConnectionConfigType.ConnectionConfig.getTileIdList()", "rst.spatial.LocationConfigType.LocationConfig.getId()", "org.openbase.bco.registry.location.core.consistency.ConnectionLocationConsistencyHandler.getLowestCommonParentLocation(connection.getTileIdList(),org.openbase.jul.storage.registry.ProtoBufFileSynchronizedRegistry<java.lang.String, rst.spatial.LocationConfigType.LocationConfig, LocationConfig.Builder, LocationRegistry.Builder>)"], "Fixed commit": "35c35688e8db4117dd8efdfdfc91b2a744090697", "Url": "https://api.github.com/repos/openbase/bco.registry", "Date": "2016-06-15T12:55:36Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return pathToRootLists.get(shortestIndex).get(((pathToRootLists.get(shortestIndex).size()) - 1)); } catch (java.lang.IndexOutOfBoundsException ex) { java.lang.String tiles = \"[\"; for (java.lang.String id : locationIds) { tiles += id + \"; \"; } tiles += \"]\"; throw new org.openbase.jul.exception.CouldNotPerformException((\"Could not find lowest common parent for tiles \" + tiles)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2095/buggy-version/location-registry.core.src.main.java.org.openbase.bco.registry.location.core.consistency.ConnectionLocationConsistencyHandler.java", "BodyUseAPI": ["java.util.List<java.util.List<rst.spatial.LocationConfigType.LocationConfig>>.get(int)", "pathToRootLists.get(shortestIndex).get(((pathToRootLists.get(shortestIndex).size()) - 1))", "pathToRootLists.get(shortestIndex).size()", "java.util.List<java.util.List<rst.spatial.LocationConfigType.LocationConfig>>.get(int)"], "Fixed commit": "35c35688e8db4117dd8efdfdfc91b2a744090697", "Url": "https://api.github.com/repos/openbase/bco.registry", "Date": "2016-06-15T12:55:36Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { v = org.zkoss.zk.ui.Executions.evaluate(comp, el_path, java.lang.Object.class); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3392/buggy-version/zk.src.org.zkoss.zk.ui.sys.ComponentsCtrl.java", "BodyUseAPI": ["org.zkoss.zk.ui.Executions.evaluate(org.zkoss.zk.ui.Component,java.lang.String,java.lang.Class)"], "Fixed commit": "ce69ed2c5468386c1d776308e9ba8cbfcd82a63e", "Url": "https://api.github.com/repos/chunfuchang/zk", "Date": "2015-05-18T08:23:40Z"},
{"Line": "=>538", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { seriesName = keyBits[1]; } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/9044/buggy-version/pn-dispatcher.src.main.java.info.papyri.dispatch.browse.facet.IdentifierFacet.java", "BodyUseAPI": [], "Fixed commit": "79d86151e24787fcc51b61e93fbcea8a251ee009", "Url": "https://api.github.com/repos/papyri/navigator", "Date": "2012-04-17T12:41:47Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((partie.getGrille().getPileCoups().getNbCoup()) == 0) { t.cancel(); } } catch (java.lang.NullPointerException e) { t.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8583/buggy-version/src.view.FenetrePrincipale.java", "BodyUseAPI": ["controller.Partie.getGrille()", "partie.getGrille().getPileCoups().getNbCoup()", "java.util.Timer.cancel()", "partie.getGrille().getPileCoups()"], "Fixed commit": "e0aa0973840d032417016788dcd8c0848905ae27", "Url": "https://api.github.com/repos/Champitoad/Taquin", "Date": "2015-06-29T19:19:56Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { cijena = ((java.lang.Double) (query.uniqueResult())); } catch (java.lang.Exception e) { App.logger.error(\"Omaska\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1265/buggy-version/UpravljanjeSkladistemTim3.src.main.java.ba.unsa.etf.si.app.UpravljanjeSkladistemTim3.BLL.UposlenikOtpisBLL.java", "BodyUseAPI": ["org.hibernate.SQLQuery.uniqueResult()"], "Fixed commit": "a74791e1b5fbc6b4bdbe49c0edba8cacceed946d", "Url": "https://api.github.com/repos/SoftverInzenjeringETFSA/SI2015Tim3", "Date": "2016-05-19T09:21:53Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { kolicina = ((java.lang.Integer) (query.uniqueResult())); } catch (java.lang.Exception e) { App.logger.error(\"Omaska\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1265/buggy-version/UpravljanjeSkladistemTim3.src.main.java.ba.unsa.etf.si.app.UpravljanjeSkladistemTim3.BLL.UposlenikOtpisBLL.java", "BodyUseAPI": ["org.hibernate.SQLQuery.uniqueResult()"], "Fixed commit": "a74791e1b5fbc6b4bdbe49c0edba8cacceed946d", "Url": "https://api.github.com/repos/SoftverInzenjeringETFSA/SI2015Tim3", "Date": "2016-05-19T09:21:53Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return org.jsoup.Jsoup.parse(response.body()).select(\"[data-auth]\").first().attr(\"data-auth\"); } catch (java.lang.NullPointerException ignore) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5343/buggy-version/core.src.main.java.org.f0w.k2i.core.exchange.MovieAuthStringFetcher.java", "BodyUseAPI": ["org.jsoup.Jsoup.parse(response.body()).select(\"[data-auth]\").first().attr(java.lang.String)", "org.jsoup.Jsoup.parse(response.body()).select(java.lang.String)", "Connection.Response.body()", "org.jsoup.Jsoup.parse(response.body())", "org.jsoup.Jsoup.parse(response.body()).select(\"[data-auth]\").first()"], "Fixed commit": "a8a3fc256ed215375d2ab132c53e7e036c4d4738", "Url": "https://api.github.com/repos/REDNBLACK/J-Kinopoisk2IMDB", "Date": "2016-04-11T12:54:25Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (q.equalsIgnoreCase(\"server_count\")) { return (org.phantomapi.Phantom.instance().onlinePlayers().size()) + \"\"; } if (q.equalsIgnoreCase(\"network_count\")) { return (org.phantomapi.Phantom.getNetworkCount()) + \"\"; } for (java.lang.String i : org.phantomapi.Phantom.getServers()) { if (q.equalsIgnoreCase(((\"server_\" + (i.toLowerCase())) + \"_count\"))) { return (org.phantomapi.Phantom.getNetworkCount(i)) + \"\"; } } if (q.equalsIgnoreCase(\"ping\")) { return (org.phantomapi.nms.NMSX.ping(p)) + \"ms\"; } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8606/buggy-version/src.main.java.org.phantomapi.placeholder.PlaceholderHooker.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "org.phantomapi.Phantom.instance().onlinePlayers()", "org.phantomapi.Phantom.getNetworkCount(java.lang.String)", "java.lang.String.toLowerCase()", "org.phantomapi.Phantom.instance().onlinePlayers().size()", "org.phantomapi.Phantom.getNetworkCount()", "org.phantomapi.Phantom.getServers()", "java.lang.String.equalsIgnoreCase(java.lang.String)", "org.phantomapi.Phantom.instance()", "org.phantomapi.nms.NMSX.ping(org.bukkit.entity.Player)"], "Fixed commit": "73dd22be7084ca8631ce1cc00ca26822ccb6435f", "Url": "https://api.github.com/repos/PhantomAPI/Phantom", "Date": "2016-08-30T23:39:49Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mEditText.setSelection(fText.length()); } catch (java.lang.IndexOutOfBoundsException e) { org.librepilot.lp2go.VisualLog.e(\"PidInputAlertDialog\", e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8239/buggy-version/app.src.main.java.org.librepilot.lp2go.ui.alertdialog.PidInputAlertDialog.java", "BodyUseAPI": ["java.lang.String.length()", "android.widget.EditText.setSelection(int)"], "Fixed commit": "082c6d050f432b2d7ee2c26cc888310491116c66", "Url": "https://api.github.com/repos/MarcProe/lp2go", "Date": "2016-07-31T19:21:38Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { final java.util.Map<java.lang.String, java.lang.Object> attributes = java.nio.file.Files.readAttributes(path, \"unix:*\", java.nio.file.LinkOption.NOFOLLOW_LINKS); final java.lang.Integer nlinks = ((java.lang.Integer) (attributes.get(\"nlinks\"))); if (nlinks == null) { com.github.unix_junkie.javafs.FileUtilities.LOGGER.info(java.lang.String.format(\"unix:nlinks unavailable for %s; returning 1\", path)); return 1; } return nlinks.byteValue(); } catch (final java.lang.UnsupportedOperationException uoe) { com.github.unix_junkie.javafs.FileUtilities.LOGGER.info(java.lang.String.format(\"unix:nlinks unavailable for %s; returning 1\", path)); return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5394/buggy-version/src.main.java.com.github.unix_junkie.javafs.FileUtilities.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.lang.String.format(java.lang.String,java.nio.file.Path)", "java.lang.Integer.byteValue()", "java.nio.file.Files.readAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption)", "java.util.logging.Logger.info(java.lang.String)"], "Fixed commit": "10594587163f96e6db71c35f9df0dc4f431bcdf9", "Url": "https://api.github.com/repos/unix-junkie/javafs", "Date": "2015-02-15T20:21:32Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { tokener = new org.json.JSONTokener(new java.io.FileReader(\"profile.json\")); } catch (java.io.FileNotFoundException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1692/buggy-version/LogInWithMap.src.viewModel.Map.java", "BodyUseAPI": [], "Fixed commit": "b6f042d50ef67fbb5aef48c2a240597186b5b862", "Url": "https://api.github.com/repos/cinwan12/cinwan12.github.io", "Date": "2016-12-03T22:36:59Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { isHidden = ((net.ess3.api.IEssentials) (org.bukkit.Bukkit.getPluginManager().getPlugin(\"Essentials\"))).getUser(name).isHidden(); } catch (java.lang.NullPointerException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4087/buggy-version/src.net.voidteam.socketchat.events.MessageEvents.java", "BodyUseAPI": ["org.bukkit.Bukkit.getPluginManager().getPlugin(java.lang.String)", "org.bukkit.Bukkit.getPluginManager()", "((net.ess3.api.IEssentials) (org.bukkit.Bukkit.getPluginManager().getPlugin(\"Essentials\"))).getUser(name).isHidden()", "((net.ess3.api.IEssentials) (org.bukkit.Bukkit.getPluginManager().getPlugin(\"Essentials\"))).getUser(java.lang.String)"], "Fixed commit": "593e7079b4124f20cc51f52b09509043b4b8143a", "Url": "https://api.github.com/repos/VoidTeam/SocketChat", "Date": "2014-06-21T06:01:55Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (com.liferay.portal.kernel.notifications.UserNotificationManagerUtil.isDeliver(user.getUserId(), portletId, _notificationClassNameId, _notificationType, UserNotificationDeliveryConstants.TYPE_EMAIL)) { javax.mail.internet.InternetAddress to = new javax.mail.internet.InternetAddress(user.getEmailAddress(), user.getFullName()); sendEmail(to, user.getLocale()); } } catch (java.lang.Exception e) { com.liferay.portal.util.SubscriptionSender._log.error(e, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2679/buggy-version/portal-service.src.com.liferay.portal.util.SubscriptionSender.java", "BodyUseAPI": ["com.liferay.portal.model.User.getFullName()", "com.liferay.portal.model.User.getLocale()", "com.liferay.portal.util.SubscriptionSender.sendEmail(javax.mail.internet.InternetAddress,user.getLocale())", "com.liferay.portal.model.User.getEmailAddress()", "com.liferay.portal.kernel.notifications.UserNotificationManagerUtil.isDeliver(user.getUserId(),java.lang.String,long,int,UserNotificationDeliveryConstants.TYPE_EMAIL)", "com.liferay.portal.model.User.getUserId()"], "Fixed commit": "da56d3ce1e3ca9fe15d567506dbcbd1907089592", "Url": "https://api.github.com/repos/robertoDiaz/liferay-portal", "Date": "2014-02-19T08:04:36Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { index = java.lang.Integer.parseInt(indexString); } catch (java.lang.NumberFormatException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3024/buggy-version/src.main.java.resources.ChatKataResource.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "d25cd17bd8eec0a06f04354f1bc17cec59b90925", "Url": "https://api.github.com/repos/FrutosBQ/ChatKataServer", "Date": "2013-12-13T11:05:34Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { result = messageList.subList(index, messageList.size()); } catch (java.lang.IndexOutOfBoundsException e) { } catch (java.lang.IllegalArgumentException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3024/buggy-version/src.main.java.core.MessagesPersistence.java", "BodyUseAPI": ["java.util.List<core.Message>.subList(int,messageList.size())", "java.util.List<core.Message>.size()"], "Fixed commit": "d25cd17bd8eec0a06f04354f1bc17cec59b90925", "Url": "https://api.github.com/repos/FrutosBQ/ChatKataServer", "Date": "2013-12-13T11:05:34Z"},
{"Line": "=>1100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { sirius.web.http.WebServer.getHttpDataFactory().cleanRequestHttpDatas(request); } catch (java.lang.Exception e) { sirius.kernel.health.Exceptions.handle(WebServer.LOG, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/997/buggy-version/web.src.sirius.web.http.WebContext.java", "BodyUseAPI": ["sirius.web.http.WebServer.getHttpDataFactory()", "sirius.web.http.WebServer.getHttpDataFactory().cleanRequestHttpDatas(sirius.web.http.HttpRequest)"], "Fixed commit": "3c74b33ed8195c9e7f5c38999701d6c6166d3aeb", "Url": "https://api.github.com/repos/scireum/sirius", "Date": "2013-10-02T17:16:21Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { collectionSize = (object != null) ? ((java.util.Collection) (object)).size() : 0; } catch (java.lang.Exception ex) { org.djr.eventlog.interceptor.EventLogInterceptor.log.debug(\"doGenerateDataPointMapForObject() failed with exception\", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3648/buggy-version/eventlog-client.src.main.java.org.djr.eventlog.interceptor.EventLogInterceptor.java", "BodyUseAPI": ["java.lang.Object.size()"], "Fixed commit": "d03e94d3a73c251c6e823246d670a1e39c57ba2c", "Url": "https://api.github.com/repos/djr4488/eventlog", "Date": "2017-11-11T18:17:10Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { editedProfile.gender = teammates.common.datatransfer.attributes.GenderType.valueOf(\"other\"); } catch (java.lang.IllegalArgumentException iae) { setStatusForException(iae); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/487/buggy-version/src.main.java.teammates.ui.controller.StudentProfileEditSaveAction.java", "BodyUseAPI": ["teammates.common.datatransfer.attributes.GenderType.valueOf(java.lang.String)"], "Fixed commit": "c3faadb97ec4c760a813f8e994e57d03c043e241", "Url": "https://api.github.com/repos/BrianCoveney/teammates", "Date": "2017-08-03T23:08:32Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { startActivity(new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse(\"vnd.youtube://3Q7ow07uaMw\"))); } catch (java.lang.Exception e) { startActivity(new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse(\"http://www.youtube.com/watch?v=3Q7ow07uaMw\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1556/buggy-version/mobile.src.main.java.org.scoutant.blokish.Help.java", "BodyUseAPI": ["android.net.Uri.parse(java.lang.String)", "org.scoutant.blokish.Help.1.startActivity(android.content.Intent)"], "Fixed commit": "cf553364311ba82f412766bfacd9fa776785934e", "Url": "https://api.github.com/repos/scoutant/blokish", "Date": "2016-04-15T08:12:07Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.networknt.status.Status.statusSerializer = com.networknt.service.SingletonServiceFactory.getBean(com.networknt.status.StatusSerializer.class); } catch (java.lang.ExceptionInInitializerError e) { com.networknt.status.Status.statusSerializer = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7076/buggy-version/status.src.main.java.com.networknt.status.Status.java", "BodyUseAPI": ["com.networknt.service.SingletonServiceFactory.getBean(java.lang.Class)"], "Fixed commit": "0e37f5a826853e12af7be818f7c78492bbcbfebf", "Url": "https://api.github.com/repos/networknt/light-4j", "Date": "2017-11-08T12:21:31Z"},
{"Line": "=>490", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mWindowManager.removeViewImmediate(mTrashView); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4646/buggy-version/library.src.main.java.jp.co.recruit_lifestyle.android.floatingview.FloatingViewManager.java", "BodyUseAPI": ["android.view.WindowManager.removeViewImmediate(jp.co.recruit_lifestyle.android.floatingview.TrashView)"], "Fixed commit": "ac54eb14f462acbe43845b6ac7a5ef6d5822e3e7", "Url": "https://api.github.com/repos/bigstark/FloatingView", "Date": "2015-12-18T08:37:25Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(100); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/547/buggy-version/App.src.ca.ualberta.cs.corgFuControllers.AllQuestionsController.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "f8bedb2cb9c866a4978a431bff8eefa98d750ad3", "Url": "https://api.github.com/repos/CMPUT301F14T05/CorgFu", "Date": "2014-11-28T22:12:00Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(100); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/547/buggy-version/App.src.ca.ualberta.cs.corgFuControllers.AllQuestionsController.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "f8bedb2cb9c866a4978a431bff8eefa98d750ad3", "Url": "https://api.github.com/repos/CMPUT301F14T05/CorgFu", "Date": "2014-11-28T22:12:00Z"},
{"Line": "=>674", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(2000); } catch (java.lang.InterruptedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8297/buggy-version/src.main.java.fr.ens.biologie.genomique.eoulsan.bio.readsmappers.MapperProcess.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "f7457ca49b9921efc5d3560f5a74ac94066d1383", "Url": "https://api.github.com/repos/GenomicParisCentre/eoulsan", "Date": "2016-11-17T13:40:54Z"},
{"Line": "=>656", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(2000); } catch (java.lang.InterruptedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8297/buggy-version/src.main.java.fr.ens.biologie.genomique.eoulsan.bio.readsmappers.MapperProcess.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "f7457ca49b9921efc5d3560f5a74ac94066d1383", "Url": "https://api.github.com/repos/GenomicParisCentre/eoulsan", "Date": "2016-11-17T13:40:54Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (java.lang.String ip : ips) { if (visits.containsKey(ip)) { visits.put(ip, ((visits.get(ip)) + 1)); }else { visits.put(ip, 1); } } } catch (java.lang.Exception e) { java.lang.System.out.println((\"Erro ao usar chave \" + date)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4240/buggy-version/src.week03.LogAnalyzer.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Integer>.get(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.Integer>.put(java.lang.String,int)", "java.util.HashMap<java.lang.String, java.lang.Integer>.put(java.lang.String,int)", "java.util.HashMap<java.lang.String, java.lang.Integer>.containsKey(java.lang.String)"], "Fixed commit": "b6a7b11d6b82ab1ebba8eef95fd5969defbae5ba", "Url": "https://api.github.com/repos/marciasilva/glabLibs", "Date": "2016-01-08T17:04:20Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Integer.parseInt(args[1]); } catch (java.lang.Exception e) { sender.sendMessage(((org.bukkit.ChatColor.RED) + \"ID must be a number, see /wizard locations\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2868/buggy-version/src.com.fullwall.Citizens.CommandExecutors.WizardExecutor.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "7ea5c03cd9c3f7fc9f322b75d3300d8d73247ed3", "Url": "https://api.github.com/repos/fullwall/Citizens", "Date": "2011-05-07T15:42:42Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { initDataBaseFile(); } catch (java.lang.Exception e) { printException(\"database path doesn't defined\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4445/buggy-version/src.ru.fizteh.fivt.students.akhtyamovpavel.filemap.DataBaseShell.java", "BodyUseAPI": ["ru.fizteh.fivt.students.akhtyamovpavel.filemap.DataBaseShell.initDataBaseFile()"], "Fixed commit": "9fd7eb555fdb9ccb48a5ba22317684f827bced48", "Url": "https://api.github.com/repos/akhtyamovpavel/fizteh-java-2014", "Date": "2014-10-21T04:26:22Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { getShader().dispose(); } catch (java.lang.Exception ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2495/buggy-version/src.seventh.client.gfx.Shader.java", "BodyUseAPI": ["seventh.client.gfx.Shader.getShader()", "com.badlogic.gdx.graphics.glutils.ShaderProgram.dispose()"], "Fixed commit": "ddf957540cb4ddb5f011376f241f81dc47fb5ba4", "Url": "https://api.github.com/repos/tonysparks/seventh", "Date": "2016-04-03T20:52:48Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Class<?> tileLoadEvent = java.lang.Class.forName(\"ic2.api.energy.event.EnergyTileLoadEvent\"); java.lang.Class<?> energyTile = java.lang.Class.forName(\"ic2.api.energy.tile.IEnergyTile\"); java.lang.reflect.Constructor<?> constr = tileLoadEvent.getConstructor(energyTile); java.lang.Object o = constr.newInstance(this); if ((o != null) && (o instanceof net.minecraftforge.event.Event)) { MinecraftForge.EVENT_BUS.post(((net.minecraftforge.event.Event) (o))); } } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1636/buggy-version/common.micdoodle8.mods.galacticraft.core.tile.GCCoreTileEntityUniversalElectrical.java", "BodyUseAPI": ["java.lang.reflect.Constructor<?>.newInstance(micdoodle8.mods.galacticraft.core.tile.GCCoreTileEntityUniversalElectrical)", "MinecraftForge.EVENT_BUS.post(java.lang.Object)", "java.lang.Class.forName(java.lang.String)", "java.lang.Class.forName(java.lang.String)", "java.lang.Class<?>.getConstructor(java.lang.Class<?>)"], "Fixed commit": "d3037a44a85b089c9dc2c9e83333e20630475ab8", "Url": "https://api.github.com/repos/micdoodle8/Galacticraft", "Date": "2013-10-12T16:16:36Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Class<?> tileLoadEvent = java.lang.Class.forName(\"ic2.api.energy.event.EnergyTileUnloadEvent\"); java.lang.Class<?> energyTile = java.lang.Class.forName(\"ic2.api.energy.tile.IEnergyTile\"); java.lang.reflect.Constructor<?> constr = tileLoadEvent.getConstructor(energyTile); java.lang.Object o = constr.newInstance(this); if ((o != null) && (o instanceof net.minecraftforge.event.Event)) { MinecraftForge.EVENT_BUS.post(((net.minecraftforge.event.Event) (o))); } } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1636/buggy-version/common.micdoodle8.mods.galacticraft.core.tile.GCCoreTileEntityUniversalElectrical.java", "BodyUseAPI": ["java.lang.Class.forName(java.lang.String)", "MinecraftForge.EVENT_BUS.post(java.lang.Object)", "java.lang.Class<?>.getConstructor(java.lang.Class<?>)", "java.lang.reflect.Constructor<?>.newInstance(micdoodle8.mods.galacticraft.core.tile.GCCoreTileEntityUniversalElectrical)", "java.lang.Class.forName(java.lang.String)"], "Fixed commit": "d3037a44a85b089c9dc2c9e83333e20630475ab8", "Url": "https://api.github.com/repos/micdoodle8/Galacticraft", "Date": "2013-10-12T16:16:36Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.groupon.roboremote.roboremoteclientcommon.DebugBridge.get().deleteTunnel(port, port); } catch (java.lang.Exception e) { com.groupon.roboremote.roboremoteclientcommon.Utils.logger.info(\"Exception deleting tunnel ignored. Tunnel may not have existed.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3749/buggy-version/RoboRemoteClientCommon.src.main.com.groupon.roboremote.roboremoteclientcommon.Utils.java", "BodyUseAPI": ["com.groupon.roboremote.roboremoteclientcommon.DebugBridge.get().deleteTunnel(int,int)", "com.groupon.roboremote.roboremoteclientcommon.DebugBridge.get()"], "Fixed commit": "091be3817b330a22bb75298249c5a392e58398c6", "Url": "https://api.github.com/repos/groupon/robo-remote", "Date": "2014-11-12T06:00:46Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { userRes = annoFactory.usersAnnotationHandler.findUser(getRoot(), digestRequest.getUser()); } catch (io.milton.http.exceptions.NotAuthorizedException ex) { io.milton.http.annotated.AnnoResource.log.warn(\"authenticate: Failed to locate a user\", ex); return null; } catch (io.milton.http.exceptions.BadRequestException ex) { io.milton.http.annotated.AnnoResource.log.warn(\"authenticate: Failed to locate a user\", ex); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3390/buggy-version/milton-server-ce.src.main.java.io.milton.http.annotated.AnnoResource.java", "BodyUseAPI": ["io.milton.http.annotated.AnnoResource.getRoot()", "io.milton.http.http11.auth.DigestResponse.getUser()", "annoFactory.usersAnnotationHandler.findUser(io.milton.http.annotated.AnnoCollectionResource,digestRequest.getUser())"], "Fixed commit": "c635595b19f6cf769d15a324778f4f62e901d014", "Url": "https://api.github.com/repos/tuzzmaniandevil/milton2", "Date": "2017-06-18T22:35:50Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { userRes = annoFactory.usersAnnotationHandler.findUser(getRoot(), user); } catch (io.milton.http.exceptions.NotAuthorizedException ex) { io.milton.http.annotated.AnnoResource.log.warn(\"authenticate: Failed to locate a user\", ex); return null; } catch (io.milton.http.exceptions.BadRequestException ex) { io.milton.http.annotated.AnnoResource.log.warn(\"authenticate: Failed to locate a user\", ex); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3390/buggy-version/milton-server-ce.src.main.java.io.milton.http.annotated.AnnoResource.java", "BodyUseAPI": ["annoFactory.usersAnnotationHandler.findUser(io.milton.http.annotated.AnnoCollectionResource,java.lang.String)", "io.milton.http.annotated.AnnoResource.getRoot()"], "Fixed commit": "c635595b19f6cf769d15a324778f4f62e901d014", "Url": "https://api.github.com/repos/tuzzmaniandevil/milton2", "Date": "2017-06-18T22:35:50Z"},
{"Line": "=>666", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { fos = new java.io.FileOutputStream(file); byte[] contentInBytes = completeFile.toString().getBytes(\"UTF-8\"); fos.write(contentInBytes); fos.flush(); } catch (java.io.IOException e) { throw e; } finally { if (fos != null) { fos.close(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5164/buggy-version/de.devboost.natspec.library.documentation.src.de.devboost.natspec.library.documentation.DocumentationGenerator.java", "BodyUseAPI": ["java.lang.StringBuilder.toString()", "java.lang.String.getBytes(java.lang.String)", "java.io.FileOutputStream.flush()", "java.io.FileOutputStream.write(byte[])"], "Fixed commit": "0fa855fa42599feff5d64c5cbc956df9c1c463b7", "Url": "https://api.github.com/repos/DevBoost/NatSpec_Requirements_Library", "Date": "2015-09-08T13:37:20Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { dogCache.cleanup(); } finally { scheduler.schedule(this, org.threadly.litesockets.NoThreadSocketExecuter.WATCHDOG_CLEANUP_TIME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5691/buggy-version/src.main.java.org.threadly.litesockets.NoThreadSocketExecuter.java", "BodyUseAPI": ["org.threadly.litesockets.utils.WatchdogCache.cleanup()"], "Fixed commit": "3096868cda9958e206ef5f6afe9ccf39ba18f18f", "Url": "https://api.github.com/repos/threadly/litesockets", "Date": "2015-05-17T04:20:58Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { dogCache.cleanup(); } finally { schedulerPool.schedule(this, org.threadly.litesockets.ThreadedSocketExecuter.WATCHDOG_CLEANUP_TIME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5691/buggy-version/src.main.java.org.threadly.litesockets.ThreadedSocketExecuter.java", "BodyUseAPI": ["org.threadly.litesockets.utils.WatchdogCache.cleanup()"], "Fixed commit": "3096868cda9958e206ef5f6afe9ccf39ba18f18f", "Url": "https://api.github.com/repos/threadly/litesockets", "Date": "2015-05-17T04:20:58Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (thisPlayerIsIt()) { adapter.startDiscovery(); startScheduler.scheduleAtFixedRate(startTask, 4000, 4000); pool.play(soundID, 1, 1, 1, 0, 1); }else if ((startScheduler) != null) { startTask.cancel(); startTask = new com.android.activity.DevicesTrackerActivity.StartDiscoveryTask(); } } catch (java.lang.IllegalStateException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2491/buggy-version/src.com.android.activity.DevicesTrackerActivity.java", "BodyUseAPI": ["com.android.activity.DevicesTrackerActivity.thisPlayerIsIt()", "com.android.activity.DevicesTrackerActivity.startDiscovery()", "android.media.SoundPool.play(int,int,int,int,int,int)", "com.android.activity.DevicesTrackerActivity.StartDiscoveryTask.cancel()", "java.util.Timer.scheduleAtFixedRate(com.android.activity.DevicesTrackerActivity.StartDiscoveryTask,int,int)"], "Fixed commit": "152082fdb312f3102ef6cf67bafc935b8439c74e", "Url": "https://api.github.com/repos/bsdocke/Phone-Tag", "Date": "2012-10-01T07:03:28Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ((org.bukkit.block.Sign) (b.getState())).setLine(i, s); } catch (java.lang.Exception e) { PVPArena.instance.getLogger().warning((\"tried to reset sign at location \" + (location.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7033/buggy-version/src.net.slipcor.pvparena.definitions.ArenaBlock.java", "BodyUseAPI": ["((org.bukkit.block.Sign) (b.getState())).setLine(int,java.lang.String)", "org.bukkit.block.Block.getState()"], "Fixed commit": "00f98fb395b8526a6c74285d1d51cdc3867b6b96", "Url": "https://api.github.com/repos/slipcor/pvparena", "Date": "2012-03-11T18:22:42Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { currentLine = currentLine.substring(((currentLine.indexOf(\" \")) + 1)); java.lang.System.out.println(currentLine); currentLine.trim(); word = currentLine.substring(0, currentLine.indexOf(\" \")); java.lang.System.out.println(word); word.trim(); if (word.equals(\"end\")) { stopParsingLine = true; word = \"\"; currentLine = \"\"; } } catch (java.lang.Exception ex) { stopParsingLine = true; word = \"\"; currentLine = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8700/buggy-version/Java1.7.0_15Code.src.LL1GrammarParser.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.lang.String.trim()", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.substring(int,int)", "java.io.PrintStream.println(java.lang.String)", "java.lang.String.trim()", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "6cb4021a67de991315a1805b7af0fab76a87f905", "Url": "https://api.github.com/repos/teampumpinglemma/3240-teamplemma", "Date": "2013-04-26T20:17:37Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ticket = getTemplate().getForObject(((getAlfrescoServerUrl()) + (fr.itldev.koya.services.impl.UserServiceImpl.REST_GET_LOGIN)), fr.itldev.koya.model.json.AuthTicket.class, authKey, password); } catch (java.lang.Exception ex) { throw ex; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8852/buggy-version/libkoya.src.main.java.fr.itldev.koya.services.impl.UserServiceImpl.java", "BodyUseAPI": ["getTemplate().getForObject(((getAlfrescoServerUrl()) + (fr.itldev.koya.services.impl.UserServiceImpl.REST_GET_LOGIN)),java.lang.Class,java.lang.String,java.lang.String)", "fr.itldev.koya.services.impl.UserServiceImpl.getAlfrescoServerUrl()", "fr.itldev.koya.services.impl.UserServiceImpl.getTemplate()"], "Fixed commit": "8da9ccd97640fb3d0a64296f1c63e0bad0391165", "Url": "https://api.github.com/repos/Itldev/Koya", "Date": "2015-09-30T10:34:56Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { users.add(getUserForDn(userdn, context)); } catch (javax.naming.NamingException e) { org.apache.cloudstack.ldap.LdapUserManager.s_logger.info((((\"Userdn: \" + userdn) + \" Not Found:: Exception message: \") + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5792/buggy-version/plugins.user-authenticators.ldap.src.org.apache.cloudstack.ldap.LdapUserManager.java", "BodyUseAPI": ["java.util.List<org.apache.cloudstack.ldap.LdapUser>.add(org.apache.cloudstack.ldap.LdapUser)", "org.apache.cloudstack.ldap.LdapUserManager.getUserForDn(java.lang.String,javax.naming.directory.DirContext)"], "Fixed commit": "5fa2d1c7ca26d199f0dcd499db8db245c2593a5b", "Url": "https://api.github.com/repos/SungardAS-CloudDevelopers/cloudstack", "Date": "2014-07-30T06:26:25Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { topSearches = deserializeMap(); } catch (java.lang.Exception e) { topSearches = new java.util.HashMap<java.lang.String, java.lang.Integer>(); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/778/buggy-version/src.main.java.servlets.OptimSearch.java", "BodyUseAPI": ["servlets.OptimSearch.deserializeMap()"], "Fixed commit": "3321f59d8ba8edfba24e717de03d705dd81406cf", "Url": "https://api.github.com/repos/icatalin201/InfoTravel", "Date": "2017-12-18T16:22:57Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { double n1 = java.lang.Double.parseDouble(s1.replace(\"R\", \"\")); double n2 = java.lang.Double.parseDouble(s2.replace(\"R\", \"\")); return compare(n1, n2); } catch (java.lang.Exception e) { return s1.compareTo(s2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5237/buggy-version/src.org.riflemansd.jxsortabletable.TableSorter.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "org.riflemansd.jxsortabletable.TableSorter.compare(double,double)", "java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "46cfab27208aec5532ebb8dd23813d7df6dcef04", "Url": "https://api.github.com/repos/RiflemanSD/JXSortableTable", "Date": "2016-06-04T10:56:57Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { dao.create(reader); return org.springframework.http.HttpStatus.OK; } catch (java.lang.Exception e) { return org.springframework.http.HttpStatus.CONFLICT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3616/buggy-version/Gumball.src.main.java.com.revature.service.DataService.java", "BodyUseAPI": ["com.revature.daos.ReaderDAO.create(com.revature.beans.Reader)"], "Fixed commit": "57d2afca492fd961b5c0c4392ec7de69c9e94d1f", "Url": "https://api.github.com/repos/btbirth/project2", "Date": "2017-08-31T16:44:44Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { while ((!(cancelled)) && ((count = connection.read(buffer)) != (-1))) { out.write(buffer, 0, count); request.setSoFar(((request.getSoFar()) + count)); request.setProgressPercent(((int) ((((double) (request.getSoFar())) / ((double) (request.getSize()))) * 100))); } } catch (java.io.IOException e) { android.util.Log.e(de.danoeh.antennapod.core.service.download.HttpDownloader.TAG, android.util.Log.getStackTraceString(e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1219/buggy-version/core.src.main.java.de.danoeh.antennapod.core.service.download.HttpDownloader.java", "BodyUseAPI": ["java.io.InputStream.read(byte[])", "de.danoeh.antennapod.core.service.download.HttpDownloader.setProgressPercent(double)", "de.danoeh.antennapod.core.service.download.HttpDownloader.getSoFar()", "de.danoeh.antennapod.core.service.download.HttpDownloader.getSize()", "de.danoeh.antennapod.core.service.download.HttpDownloader.setSoFar(((request.getSoFar()) + count))", "de.danoeh.antennapod.core.service.download.HttpDownloader.getSoFar()", "java.io.RandomAccessFile.write(byte[],int,int)"], "Fixed commit": "6a83057e28a1efc060016ef146b2b74b8c14fca2", "Url": "https://api.github.com/repos/andrey-krutov/AntennaPod", "Date": "2015-06-03T09:36:25Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { time = java.lang.Long.parseLong(data[1]); } catch (java.lang.NumberFormatException e) { time = 0; com.Ben12345rocks.VotingPlugin.Objects.User.plugin.debug((\"Not long: \" + (data[1]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8181/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Objects.User.java", "BodyUseAPI": ["java.lang.Long.parseLong(java.lang.String)"], "Fixed commit": "04081939b32b113a716eacdafd1ebda39ff4c336", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2017-02-01T14:18:47Z"},
{"Line": "=>377", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { total = java.lang.Integer.parseInt(data[1]); } catch (java.lang.NumberFormatException e) { total = 0; com.Ben12345rocks.VotingPlugin.Objects.User.plugin.debug((\"Not int: \" + (data[1]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8181/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Objects.User.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "04081939b32b113a716eacdafd1ebda39ff4c336", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2017-02-01T14:18:47Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { int offset = java.lang.Integer.parseInt(att.toString()); if ((offset < 7) || (offset > fileSize)) { tiffIfd.setCorrectStrips((-1)); } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1412/buggy-version/src.main.java.com.easyinnova.implementation_checker.TiffImplementationChecker.java", "BodyUseAPI": ["java.lang.Integer.parseInt(att.toString())", "com.easyinnova.tiff.model.types.abstractTiffType.toString()", "com.easyinnova.implementation_checker.model.TiffIfd.setCorrectStrips(int)"], "Fixed commit": "dba97cfc76cba4def72e6f920d015682ddf86f3d", "Url": "https://api.github.com/repos/EasyinnovaSL/TIFF-Implementation-Checker", "Date": "2017-07-07T12:11:18Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.net.URL url = com.baidu.disconf.ub.common.utils.ConfigLoaderUtils.loader.getResource(propertyFilePath); java.net.URI uri = new java.net.URI(url.toString()); props.load(new java.io.FileInputStream(uri.getPath())); } catch (java.lang.Exception e) { props.load(com.baidu.disconf.ub.common.utils.ConfigLoaderUtils.loader.getResourceAsStream(propertyFilePath)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8742/buggy-version/disconf-core.src.main.java.com.baidu.disconf.ub.common.utils.ConfigLoaderUtils.java", "BodyUseAPI": ["java.lang.ClassLoader.getResource(java.lang.String)", "java.net.URI.getPath()", "java.net.URL.toString()", "java.util.Properties.load(java.io.FileInputStream)"], "Fixed commit": "1bf16b08fb6aff2795d3ebfe4496640254621d5f", "Url": "https://api.github.com/repos/knightliao/disconf", "Date": "2014-08-14T11:57:56Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.Calendar due = util.StreamUtil.parseCalendar(contents); task.setDeadline(due); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3960/buggy-version/src.logic.TaskLogic.java", "BodyUseAPI": ["util.StreamUtil.parseCalendar(java.lang.String)", "model.StreamTask.setDeadline(java.util.Calendar)"], "Fixed commit": "5be3ae727ffa47d82b12199fcd19f1d8f6edcbd3", "Url": "https://api.github.com/repos/cs2103aug2014-f10-1j/main", "Date": "2014-11-07T08:10:06Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.Calendar start = util.StreamUtil.parseCalendar(contents); task.setStartTime(start); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3960/buggy-version/src.logic.TaskLogic.java", "BodyUseAPI": ["model.StreamTask.setStartTime(java.util.Calendar)", "util.StreamUtil.parseCalendar(java.lang.String)"], "Fixed commit": "5be3ae727ffa47d82b12199fcd19f1d8f6edcbd3", "Url": "https://api.github.com/repos/cs2103aug2014-f10-1j/main", "Date": "2014-11-07T08:10:06Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { wantedUsers = ((java.util.Map<java.lang.String, java.util.HashMap>) (itemData.get(\"wantedUsers\"))); } catch (java.lang.Exception e) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4505/buggy-version/app.src.main.java.centralcpccommittee.shopwithfriends.DataHandler.DataProcessorStates.AddSaleSate.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.HashMap>.get(java.lang.String)"], "Fixed commit": "e01dedc05c80e3e9ed6c4e085b56288d189d7ba5", "Url": "https://api.github.com/repos/axeisghost/cpc-documentary", "Date": "2015-04-23T17:52:28Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { extras.putInt(\"couponId\", coupon.getID()); android.content.Intent intent = new android.content.Intent(getActivity(), it.wm.perdue.coupon.DetailCouponBaseActivity.class); intent.putExtras(extras); startActivity(intent); } catch (java.lang.NullPointerException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1302/buggy-version/src.it.wm.perdue.coupon.VetrinaCoupon.java", "BodyUseAPI": ["it.wm.perdue.coupon.VetrinaCoupon.2.getActivity()", "it.wm.perdue.businessLogic.Coupon.getID()", "android.content.Intent.putExtras(android.os.Bundle)", "it.wm.perdue.coupon.VetrinaCoupon.2.startActivity(android.content.Intent)", "android.os.Bundle.putInt(java.lang.String,coupon.getID())"], "Fixed commit": "5f01e09dccf7a08553c533e29062a83ff34f24d6", "Url": "https://api.github.com/repos/eltazar/x2Android", "Date": "2013-03-18T18:35:24Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { m = java.lang.Integer.parseInt(mobile); } catch (java.lang.NumberFormatException e) { java.lang.System.out.println(\"Invalid Mobile number\"); return ++valid; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4331/buggy-version/src.menu.Register.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "c43c019d526c0521dd84913d1e248fc7899d931c", "Url": "https://api.github.com/repos/Arizecr/COSC-2299-Part-A", "Date": "2017-04-21T11:38:53Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { info.set(sun.security.x509.X509CertInfo.SUBJECT, new sun.security.x509.CertificateSubjectName(owner)); info.set(sun.security.x509.X509CertInfo.ISSUER, new sun.security.x509.CertificateIssuerName(issuer)); } catch (java.lang.Exception e) { info.set(sun.security.x509.X509CertInfo.SUBJECT, owner); info.set(sun.security.x509.X509CertInfo.ISSUER, issuer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6578/buggy-version/libs.Signature_Faking_Library.src.main.java.wsattacker.library.signatureFaking.helper.CertificateHandler.java", "BodyUseAPI": ["sun.security.x509.X509CertInfo.set(java.lang.String,sun.security.x509.CertificateSubjectName)", "sun.security.x509.X509CertInfo.set(java.lang.String,sun.security.x509.CertificateIssuerName)"], "Fixed commit": "dc81df8f9309b9f9eea47163dfbd208ec28721f8", "Url": "https://api.github.com/repos/RUB-NDS/WS-Attacker", "Date": "2016-07-19T14:46:42Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (mode == 0) { return result.substring(((result.lastIndexOf(\"0x\")) + 2), result.indexOf('\\n', result.lastIndexOf(\"0x\"))); } return result.substring(((result.lastIndexOf(\":\")) - 1), result.indexOf('\\n', result.lastIndexOf(\":\"))); } catch (java.lang.IndexOutOfBoundsException e) { return \"98\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1837/buggy-version/src.main.java.lwrt.CLWindows.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.indexOf(char,int)", "java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.indexOf(char,int)"], "Fixed commit": "01484a0ab195ec360459982db2603a6931c4d1c7", "Url": "https://api.github.com/repos/iabarca/lawena-recording-tool", "Date": "2013-08-17T00:20:10Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (dankNote.contains(\"~b/o\".toLowerCase())) { if (dankNote.contains(\"chaos\")) { return (java.lang.Double.parseDouble(dankNote.replaceAll(\"[^0-9]+\", \"\"))) / 72; }else if (dankNote.contains(\"exa\")) { return java.lang.Double.parseDouble(dankNote.replaceAll(\"[^0-9]+\", \"\")); }else { return -1; } } } catch (java.lang.NumberFormatException nfe) { return -3; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1226/buggy-version/src.main.java.Item.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.toLowerCase()", "java.lang.Double.parseDouble(java.lang.String)", "java.lang.Double.parseDouble(java.lang.String)", "java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "635cec4fb802deb61413899c38019f11f5333791", "Url": "https://api.github.com/repos/axl002/JackProject", "Date": "2017-01-31T18:11:10Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (file.exists()) { java.util.Properties properties = new java.util.Properties(); java.io.InputStream input = null; try { properties.load((input = new java.io.FileInputStream(file))); } catch (java.io.IOException e) { throw new javax.el.ELException(\"Cannot read default EL properties\", e); } finally { try { input.close(); } catch (java.io.IOException e) { } } if (getClass().getName().equals(properties.getProperty(\"javax.el.ExpressionFactory\"))) { return properties; } } } catch (java.lang.SecurityException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6378/buggy-version/modules.impl.src.main.java.de.odysseus.el.ExpressionFactoryImpl.java", "BodyUseAPI": ["java.lang.Class<? extends de.odysseus.el.ExpressionFactoryImpl>.getName()", "java.io.InputStream.close()", "de.odysseus.el.ExpressionFactoryImpl.getClass()", "java.lang.String.equals(java.lang.String)", "java.io.File.exists()", "java.util.Properties.load(java.io.InputStream)", "java.util.Properties.getProperty(java.lang.String)"], "Fixed commit": "6781d9ebb26197ed2c25de45f9a60af0596b73ef", "Url": "https://api.github.com/repos/beckchr/juel", "Date": "2013-07-16T11:10:25Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return findPath(startingNode, endingNode, visitedNodes); } catch (pathfinder.DeadEndException e) { throw new pathfinder.PathfinderException((((e.getMessage()) + \" \") + (e.getVisitedNodes()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8746/buggy-version/KioskApplication.src.main.java.pathfinder.DepthFirst.java", "BodyUseAPI": ["pathfinder.DepthFirst.findPath(database.objects.Node,database.objects.Node,java.util.LinkedList<database.objects.Node>)"], "Fixed commit": "9f01e8196739dd7a9cdfeccb5e398caedb2b14c7", "Url": "https://api.github.com/repos/CS3733-Team-I/CS3733", "Date": "2017-11-28T23:06:43Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { p.sendData(message); } catch (java.lang.NullPointerException e) { shared.Log.WarningLog(\"Seens you were trying to send data to a player that isn't really connected\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7075/buggy-version/src.server.Server.java", "BodyUseAPI": ["server.Player.sendData(java.lang.String)"], "Fixed commit": "ca40fc89aa90c71cfd1d4ee5421b2a218ae4b815", "Url": "https://api.github.com/repos/dihydrogenmonoxide/CS108", "Date": "2012-04-08T15:51:55Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.springframework.util.ReflectionUtils.doWithFields(java.lang.Class.forName(clz), new org.springframework.util.ReflectionUtils.FieldCallback() { @java.lang.Override public void doWith(java.lang.reflect.Field field) throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException { if (field.isAnnotationPresent(org.springframework.beans.factory.annotation.Value.class)) list.add(field.getAnnotation(org.springframework.beans.factory.annotation.Value.class).value()); } }); } catch (java.lang.NoClassDefFoundError e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6293/buggy-version/src.org.ironrhino.core.spring.ApplicationContextInspector.java", "BodyUseAPI": ["java.lang.Class.forName(java.lang.String)", "java.lang.reflect.Field.getAnnotation(java.lang.Class)", "java.lang.reflect.Field.isAnnotationPresent(java.lang.Class)", "java.util.List<java.lang.String>.add(field.getAnnotation(org.springframework.beans.factory.annotation.Value.class).value())", "T.value()", "org.springframework.util.ReflectionUtils.doWithFields(java.lang.Class<?>,org.springframework.util.ReflectionUtils.FieldCallback)"], "Fixed commit": "fb44eeb9abc28d1f52e71e8d5cbfa77eef62f790", "Url": "https://api.github.com/repos/ironrhino/ironrhino", "Date": "2016-11-14T05:22:01Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { lm.requestLocationUpdates(LocationManager.GPS_PROVIDER, 0, 0, ((android.location.LocationListener) (this))); lm.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 0, 0, ((android.location.LocationListener) (this))); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4848/buggy-version/OpenStreetMapViewer.src.main.java.org.osmdroid.samplefragments.SampleCustomIconDirectedLocationOverlay.java", "BodyUseAPI": ["android.location.LocationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER,int,int,org.osmdroid.samplefragments.SampleCustomIconDirectedLocationOverlay)", "android.location.LocationManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER,int,int,org.osmdroid.samplefragments.SampleCustomIconDirectedLocationOverlay)"], "Fixed commit": "77913b47ad7587c571787ec0f2a87b45aef10ad1", "Url": "https://api.github.com/repos/osmdroid/osmdroid", "Date": "2016-01-30T18:41:47Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { map.Tile[] collidedTiles = map.Map.getMap().getTiles(new java.awt.Rectangle(x, y, this.width, this.height)); for (int i = 0; i < (collidedTiles.length); i++) { collidedTiles[i].temp = true; if (collidedTiles[i].isOccupied()) { return false; } } } catch (java.lang.ArrayIndexOutOfBoundsException e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3428/buggy-version/src.entitys.Mob.java", "BodyUseAPI": ["collidedTiles[i].isOccupied()", "map.Map.getMap()", "map.Map.getMap().getTiles(java.awt.Rectangle)"], "Fixed commit": "2a23936a43d30b8761a64992dce7a04b71eac916", "Url": "https://api.github.com/repos/danyi1212/The-Game-that-will-never-exist", "Date": "2017-09-08T00:58:38Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { return new alien4cloud.paas.cloudify2.rest.RestExecutor.Response(httpResponse.getStatusLine().getStatusCode(), httpResponse.getStatusLine().getReasonPhrase(), org.apache.http.util.EntityUtils.toString(httpResponse.getEntity())); } finally { if (httpResponse != null) { org.apache.http.util.EntityUtils.consumeQuietly(httpResponse.getEntity()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6330/buggy-version/src.main.java.alien4cloud.paas.cloudify2.rest.RestExecutor.java", "BodyUseAPI": ["org.apache.http.util.EntityUtils.toString(httpResponse.getEntity())", "org.apache.http.HttpResponse.getStatusLine()", "org.apache.http.HttpResponse.getStatusLine()", "org.apache.http.HttpResponse.getEntity()", "httpResponse.getStatusLine().getStatusCode()", "httpResponse.getStatusLine().getReasonPhrase()"], "Fixed commit": "430d99dd5298f49a700c652b07d23fef2c5306c1", "Url": "https://api.github.com/repos/igorng/alien4cloud-cloudify2-provider", "Date": "2015-06-09T16:12:28Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { retriever.setDataSource(filePath); } catch (java.lang.Exception ex) { java.lang.String path = \"/sdcard/DCIM/Camera\" + (filePath.substring(filePath.lastIndexOf(\"/\"))); android.util.Log.d(vandy.mooc.utils.VideoMediaStoreUtils.class.getSimpleName(), path); retriever.setDataSource(path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7316/buggy-version/Cloudy.vidlib.src.main.java.vandy.mooc.utils.VideoMediaStoreUtils.java", "BodyUseAPI": ["android.media.MediaMetadataRetriever.setDataSource(java.lang.String)"], "Fixed commit": "b00deb9a829e2c2ee44b75d9fb713493784860c0", "Url": "https://api.github.com/repos/pt2121/android-workspace", "Date": "2015-09-02T02:01:51Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { java.lang.String line = br.readLine(); while (line != null) { input.append(line); input.append(\"\\n\"); line = br.readLine(); } } finally { br.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7212/buggy-version/src.project.Main.java", "BodyUseAPI": ["java.io.BufferedReader.readLine()", "java.lang.StringBuilder.append(java.lang.String)", "java.io.BufferedReader.readLine()", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "fc47953ae406f811ed283df920ee1749e5279c4d", "Url": "https://api.github.com/repos/KareemSalah/MiniJava", "Date": "2017-03-10T22:32:05Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { dist = businesses.get(i).distance(); } catch (java.lang.Exception e) { dist = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8997/buggy-version/moodie.moodie.src.main.java.com.example.rui.location.Restaurant_Results.java", "BodyUseAPI": ["java.util.ArrayList<com.yelp.clientlib.entities.Business>.get(int)", "businesses.get(i).distance()"], "Fixed commit": "1ebc825087ab1e3bc65241ed88f4aae234b5ac4f", "Url": "https://api.github.com/repos/dzdao/moodie", "Date": "2016-08-03T11:01:12Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { serversocket = new java.net.ServerSocket(port); } catch (java.net.BindException e) { throw new java.io.IOException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1324/buggy-version/Protocol.java", "BodyUseAPI": [], "Fixed commit": "3524662a19964b7e33920cb8dba1e287aefc78a5", "Url": "https://api.github.com/repos/juliasets/Hist-Eq", "Date": "2014-02-26T01:34:09Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { streetName = java.net.URLEncoder.encode(streetName, \"UTF-8\"); } catch (java.io.UnsupportedEncodingException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7886/buggy-version/src.main.java.eu.ailao.hub.traffic.hereapi.TrafficInformationGetter.java", "BodyUseAPI": ["java.net.URLEncoder.encode(java.lang.String,java.lang.String)"], "Fixed commit": "bac6060345c2eb087820d86b7dc9d66c9e6ce54d", "Url": "https://api.github.com/repos/brmson/hub", "Date": "2016-03-29T12:56:20Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return java.net.Inet4Address.getLocalHost().getHostAddress(); } catch (java.lang.Exception e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/257/buggy-version/DNDCore.src.main.java.com.ericarao.dnd.core.model.AbstractDMLoginCredentials.java", "BodyUseAPI": ["java.net.InetAddress.getHostAddress()", "java.net.Inet4Address.getLocalHost()"], "Fixed commit": "f498af3911a326465a6f0897015a95434e61ea8b", "Url": "https://api.github.com/repos/chanceencounter/DND", "Date": "2016-11-22T00:13:33Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return java.net.Inet4Address.getLocalHost().getHostAddress(); } catch (java.lang.Exception e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/257/buggy-version/DNDCore.src.main.java.com.ericarao.dnd.core.model.AbstractPlayerLoginCredentials.java", "BodyUseAPI": ["java.net.Inet4Address.getLocalHost()", "java.net.InetAddress.getHostAddress()"], "Fixed commit": "f498af3911a326465a6f0897015a95434e61ea8b", "Url": "https://api.github.com/repos/chanceencounter/DND", "Date": "2016-11-22T00:13:33Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { bidPrice = java.lang.String.format(\"%.2f\", java.lang.Float.parseFloat(bidPrice)); } catch (java.lang.NumberFormatException e) { e.printStackTrace(); org.greenrobot.eventbus.EventBus.getDefault().post(new com.sam_chordas.android.stockhawk.rest.QueryEvent(\"The bid is null!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2688/buggy-version/app.src.main.java.com.sam_chordas.android.stockhawk.rest.Utils.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,float)", "java.lang.Float.parseFloat(java.lang.String)"], "Fixed commit": "522607cbb6889f19fad2887d05f534f8e5641d53", "Url": "https://api.github.com/repos/KrisYuan/StockHawk", "Date": "2016-12-25T09:56:25Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (!(eksternmail[1].equals(\"\"))) { db.updateQuery(((((\"INSERT INTO eksternbruker VALUES ('\" + (eksternmail[i])) + \"', \") + avtaleid) + \")\")); } } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6691/buggy-version/src.logikk.AvtaleLogic.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "database.Database.updateQuery(java.lang.String)"], "Fixed commit": "c98c4792c2e9a46767e54005f3a8153109b0c130", "Url": "https://api.github.com/repos/larsbow/Kalender", "Date": "2014-03-17T10:46:51Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { phoneSensorDataSources.register(); } catch (java.lang.Exception e) { android.support.v4.content.LocalBroadcastManager.getInstance(this).sendBroadcast(new android.content.Intent(org.md2k.phonesensor.ServicePhoneSensor.INTENT_STOP)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7917/buggy-version/phonesensor.src.main.java.org.md2k.phonesensor.ServicePhoneSensor.java", "BodyUseAPI": ["org.md2k.phonesensor.phone.sensors.PhoneSensorDataSources.register()"], "Fixed commit": "788db16736a78fc514efc9b2d4b06cc2a2b98de7", "Url": "https://api.github.com/repos/MD2Korg/mCerebrum-PhoneSensor", "Date": "2016-08-26T19:34:03Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return validatePath(newDir); } catch (org.waarp.common.command.exception.Reply553Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1352/buggy-version/src.main.java.org.waarp.common.file.AbstractDir.java", "BodyUseAPI": ["org.waarp.common.file.AbstractDir.validatePath(java.io.File)"], "Fixed commit": "7d23f2bd6ee80a358a1a527b2b7ab045c9b25878", "Url": "https://api.github.com/repos/bcarlin/WaarpCommon", "Date": "2013-09-17T12:39:12Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { resultObject = jsonPath.read(jsonString); } catch (com.jayway.jsonpath.InvalidPathException e) { org.wso2.carbon.event.receiver.core.internal.type.json.JSONInputMapper.log.debug((((((e.getMessage()) + \". Could not find match for JSONPath : \") + (jsonPath.toString())) + \" for event: \") + (obj.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3181/buggy-version/components.event-receiver.org.wso2.carbon.event.receiver.core.src.main.java.org.wso2.carbon.event.receiver.core.internal.type.json.JSONInputMapper.java", "BodyUseAPI": ["com.jayway.jsonpath.JsonPath.read(java.lang.String)"], "Fixed commit": "bc3ff7bc030ab6d2f6bd02e4b2f202430057e805", "Url": "https://api.github.com/repos/wso2/carbon-analytics-common", "Date": "2016-06-03T05:36:31Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Integer.valueOf(opt); } catch (java.lang.Exception ex) { if ((opt.startsWith(\"-\")) && (!(arrayContains(hudson.plugins.report.jck.main.cmdline.Arguments.switches, opt)))) { java.lang.System.err.println((\"WARNING unknown param \" + opt)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3329/buggy-version/src.main.java.hudson.plugins.report.jck.main.cmdline.Arguments.java", "BodyUseAPI": ["java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "6d904548cb87bb1f3cac03cd2ed390fcc76fa287", "Url": "https://api.github.com/repos/judovana/jenkins-report-jck", "Date": "2016-10-04T13:42:52Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.sql.ResultSet rs = myStatement.executeQuery((\"SELECT * FROM users.\" + (table1.toString()))); java.lang.String currentcourse = course; this.getData_and_Set(rs, currentcourse); } catch (java.sql.SQLException e) { java.lang.System.out.println(\"No such course\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3313/buggy-version/src.UI.viewMarksTController.java", "BodyUseAPI": ["UI.viewMarksTController.getData_and_Set(java.sql.ResultSet,java.lang.String)", "java.lang.String.toString()", "java.sql.Statement.executeQuery(java.lang.String)"], "Fixed commit": "b984130e0c187da2b1f8e670a23b5970d7cc8eb3", "Url": "https://api.github.com/repos/simonnewham/StudentMarkSystem", "Date": "2017-10-04T21:28:31Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { setVisible(true); } catch (java.lang.ArrayIndexOutOfBoundsException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3104/buggy-version/src.gui.common.DialogBox.java", "BodyUseAPI": ["gui.common.DialogBox.setVisible(boolean)"], "Fixed commit": "722199305ff9f9b7ad4cb8935f6fdef3d4f964fd", "Url": "https://api.github.com/repos/CS340Group/hit", "Date": "2012-11-08T20:01:16Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { permission = com.kritsit.casetracker.shared.domain.model.Permission.valueOf(((java.lang.String) (inputMap.get(\"permission\")))); } catch (java.lang.IllegalArgumentException e) { permission = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3663/buggy-version/client.src.main.java.com.kritsit.casetracker.client.domain.services.Administrator.java", "BodyUseAPI": ["com.kritsit.casetracker.shared.domain.model.Permission.valueOf(java.lang.Object)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "f97d65a7c71a69b0494873ae004fadb12ef20500", "Url": "https://api.github.com/repos/paddatrapper/CaseTracker", "Date": "2015-10-18T01:50:57Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (remote_view_in_memory) { if (((remoteViews) != null) && ((remoteViews.size()) > 0)) { row = remoteViews.get(position); }else { loadViewsToMemory(); row = remoteViews.get(position); } }else { row = getRow(position); } } catch (java.lang.IndexOutOfBoundsException ignored) { org.angelmariages.rodalieswidget.utils.U.setUserProperty(context, \"index_out_of_bounds\", (((((((\"origin: \" + (schedule.get(0).getOrigin())) + \" - destination: \") + (schedule.get(0).getDestination())) + \" - size:\") + (schedule.size())) + \" - position:\") + position)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3807/buggy-version/app.src.main.java.org.angelmariages.rodalieswidget.WidgetListViewFactory.java", "BodyUseAPI": ["org.angelmariages.rodalieswidget.WidgetListViewFactory.getRow(int)", "java.util.ArrayList<android.widget.RemoteViews>.size()", "java.util.ArrayList<android.widget.RemoteViews>.get(int)", "java.util.ArrayList<android.widget.RemoteViews>.get(int)", "org.angelmariages.rodalieswidget.WidgetListViewFactory.loadViewsToMemory()"], "Fixed commit": "b6528f942bc3df26239c0a4895b44ecf9666e83b", "Url": "https://api.github.com/repos/AngelMariages/RodaliesWidget", "Date": "2017-12-27T10:16:34Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { if (slot < 0) { return; } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/958/buggy-version/src.main.java.com.github.dsh105.echopet.listeners.MenuListener.java", "BodyUseAPI": [], "Fixed commit": "b930bdab4aee6c04f6f79df11506d02ee2886863", "Url": "https://api.github.com/repos/DSH105/EchoPet", "Date": "2013-07-23T07:03:41Z"},
{"Line": "=>618", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { selector.getSelector().close(); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6023/buggy-version/AndroidAsync.src.com.koushikdutta.async.AsyncServer.java", "BodyUseAPI": ["com.koushikdutta.async.SelectorWrapper.getSelector()", "selector.getSelector().close()"], "Fixed commit": "f74b6ba89fd51ada2ff9cba3cb5971f561aec4f3", "Url": "https://api.github.com/repos/CyanogenMod/AndroidAsync", "Date": "2014-09-17T17:18:35Z"},
{"Line": "=>590", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { selector.getSelector().close(); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6023/buggy-version/AndroidAsync.src.com.koushikdutta.async.AsyncServer.java", "BodyUseAPI": ["com.koushikdutta.async.SelectorWrapper.getSelector()", "selector.getSelector().close()"], "Fixed commit": "f74b6ba89fd51ada2ff9cba3cb5971f561aec4f3", "Url": "https://api.github.com/repos/CyanogenMod/AndroidAsync", "Date": "2014-09-17T17:18:35Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { songToAddToPlayQueue = mySongList.get(allSongsTable.getSelectedRow()); } catch (java.lang.Exception ex) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3500/buggy-version/src.view.NewGUIManager.java", "BodyUseAPI": ["javax.swing.JTable.getSelectedRow()", "view.SongDisplayList.get(int)"], "Fixed commit": "11a6794ab680480c4eaf698aaa871e38e95436fe", "Url": "https://api.github.com/repos/ianrtracey/jukebox", "Date": "2015-10-04T17:34:10Z"},
{"Line": "=>505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.Iterator<java.util.Map.Entry<java.lang.String, java.lang.Object>> i = entrySet().iterator(); while (i.hasNext()) { java.util.Map.Entry<java.lang.String, java.lang.Object> e = i.next(); java.lang.String key = e.getKey(); java.lang.Object value = e.getValue(); if (value == null) { if (!(((m.get(key)) == null) && (m.isSet(key)))) { return false; } }else { if (!(value.equals(m.get(key)))) { return false; } } } } catch (java.lang.ClassCastException unused) { return false; } catch (java.lang.NullPointerException unused) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5789/buggy-version/upa-impl.src.main.java.net.vpc.upa.impl.AbstractDocument.java", "BodyUseAPI": ["java.util.Set<java.util.Map.Entry<java.lang.String, java.lang.Object>>.iterator()", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()", "net.vpc.upa.Document.get(java.lang.String)", "java.lang.Object.equals(m.get(key))", "java.util.Iterator<java.util.Map.Entry<java.lang.String, java.lang.Object>>.next()", "net.vpc.upa.Document.isSet(java.lang.String)", "net.vpc.upa.Document.get(java.lang.String)", "java.util.Iterator<java.util.Map.Entry<java.lang.String, java.lang.Object>>.hasNext()", "net.vpc.upa.impl.AbstractDocument.entrySet()", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getKey()"], "Fixed commit": "4509be98f39e9099ecbe4026f6806c7dabd6eea2", "Url": "https://api.github.com/repos/thevpc/upa", "Date": "2017-08-18T20:26:39Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.state = cloneRepo.execute(); } catch (java.lang.Exception e) { this.addStepError(\"Unknown\", e.getMessage()); this.logger.debug(\"Exception catch while executing steps: \", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4370/buggy-version/repairnator.src.main.java.fr.inria.spirals.repairnator.process.ProjectInspector.java", "BodyUseAPI": ["fr.inria.spirals.repairnator.process.step.AbstractStep.execute()"], "Fixed commit": "0bc679e71f8de8e935770c80c167facb3edc3c67", "Url": "https://api.github.com/repos/Spirals-Team/repairnator", "Date": "2017-01-22T15:50:51Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { encodedUri = java.net.URLEncoder.encode(uri, \"UTF-8\").replace(\"+\", \"%20\"); } catch (java.io.UnsupportedEncodingException e) { encodedUri = uri; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4562/buggy-version/library.src.main.java.com.nostra13.universalimageloader.core.download.BaseImageDownloader.java", "BodyUseAPI": ["java.net.URLEncoder.encode(java.lang.String,java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "949b53691850d691246bb11bba37c42af293ad61", "Url": "https://api.github.com/repos/HiWong/Android-Universal-Image-Loader", "Date": "2016-09-09T13:22:55Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { encounterTransaction = bahmniEncounterModifierService.getModifiedEncounter(encounterModifierData.getBahmniEncounterTransaction(), encounterModifierData.getConceptSetData()); } catch (java.lang.Exception e) { org.openmrs.module.bahmnicore.web.v1_0.controller.BahmniEncounterModifierController.log.error((\"Error in running groovy script: \" + (e.getMessage())), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1198/buggy-version/bahmnicore-omod.src.main.java.org.openmrs.module.bahmnicore.web.v1_0.controller.BahmniEncounterModifierController.java", "BodyUseAPI": ["org.bahmni.module.bahmnicore.contract.encounter.data.EncounterModifierData.getBahmniEncounterTransaction()", "org.bahmni.module.bahmnicore.contract.encounter.data.EncounterModifierData.getConceptSetData()", "org.bahmni.module.bahmnicore.service.BahmniEncounterModifierService.getModifiedEncounter(encounterModifierData.getBahmniEncounterTransaction(),encounterModifierData.getConceptSetData())"], "Fixed commit": "679e4f59ccad458455dc606736bad175aa7cec83", "Url": "https://api.github.com/repos/Bhamni/bahmni-core", "Date": "2014-12-19T06:21:00Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.apache.hadoop.hive.ql.exec.FunctionInfo func = org.apache.hadoop.hive.ql.exec.FunctionRegistry.getFunctionInfo(funcName); udfClass = func.getFunctionClass(); } catch (org.apache.hadoop.hive.ql.parse.SemanticException s) { throw new java.io.IOException((\"Hive UDF raised SemanticException\" + funcName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5612/buggy-version/src.org.apache.pig.builtin.HiveUDFBase.java", "BodyUseAPI": ["org.apache.hadoop.hive.ql.exec.FunctionRegistry.getFunctionInfo(java.lang.String)", "org.apache.hadoop.hive.ql.exec.FunctionInfo.getFunctionClass()"], "Fixed commit": "0fb6fe74d672297976328ac2d4a90366f32d8fef", "Url": "https://api.github.com/repos/asonipsl/pig", "Date": "2015-09-09T09:20:47Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { indicator.setRating(indicatorObject.get(\"rating\").getAsDouble()); } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8736/buggy-version/threatconnect-sdk-addons.threatconnect-parser.src.main.java.com.threatconnect.sdk.parser.service.bulk.BulkIndicatorConverter.java", "BodyUseAPI": ["indicatorObject.get(\"rating\").getAsDouble()", "com.google.gson.JsonObject.get(java.lang.String)", "com.threatconnect.sdk.parser.model.Indicator.setRating(indicatorObject.get(\"rating\").getAsDouble())"], "Fixed commit": "7630b51e0cd17a1936e14b2ca1dabf563afceda3", "Url": "https://api.github.com/repos/ThreatConnect-Inc/threatconnect-java", "Date": "2016-07-27T19:07:37Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { simpleJsonWeatherData = com.example.sunshine.utilities.OpenWeatherJsonUtils.getSimpleWeatherStringsFromJson(this, jsonWeatherResponse); } catch (org.json.JSONException e) { e.printStackTrace(); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2775/buggy-version/Developing_Android_Apps.Sunshine.app.src.main.java.com.example.sunshine.MainActivity.java", "BodyUseAPI": ["com.example.sunshine.utilities.OpenWeatherJsonUtils.getSimpleWeatherStringsFromJson(com.example.sunshine.MainActivity,java.lang.String)"], "Fixed commit": "e92aee19637eb1da93b909b5aecf636abf65cf5e", "Url": "https://api.github.com/repos/k0syan/Udacity", "Date": "2017-08-01T12:50:27Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mClient.connect(); } catch (java.lang.IllegalStateException exception) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2690/buggy-version/MyApplication.app.src.main.java.com.xuPATHn.xximdemo.core.XXConnection.java", "BodyUseAPI": ["org.java_websocket.client.WebSocketClient.connect()"], "Fixed commit": "af5514cd6bfbc0f53e47427c824f0d8d1521c70c", "Url": "https://api.github.com/repos/foreverxiongtao/XXIMDEMO", "Date": "2016-08-08T03:50:27Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { db.getConnection().prepareStatement(\"ALTER TABLE mutes ADD COLUMN reason TEXT(100)\").execute(); java.lang.System.out.println(\"Updating mutes table (Adding reason column)\"); } catch (java.sql.SQLException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3759/buggy-version/MaxBans.src.org.maxgamer.maxbans.database.DatabaseHelper.java", "BodyUseAPI": ["org.maxgamer.maxbans.database.Database.getConnection()", "db.getConnection().prepareStatement(\"ALTER TABLE mutes ADD COLUMN reason TEXT(100)\").execute()", "db.getConnection().prepareStatement(java.lang.String)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "8a221487fa413eafad1f81048a0b44613f10967a", "Url": "https://api.github.com/repos/netherfoam/MaxBans", "Date": "2013-11-03T11:26:01Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (((mediaPlayer) != null) && (mediaPlayer.isPlaying())) { mediaPlayer.stop(); mediaPlayer.release(); } } catch (java.lang.IllegalStateException ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2229/buggy-version/PersianCalendar.src.main.java.com.byagowi.persiancalendar.view.activity.AthanActivity.java", "BodyUseAPI": ["android.media.MediaPlayer.stop()", "android.media.MediaPlayer.release()", "android.media.MediaPlayer.isPlaying()"], "Fixed commit": "776854cd21ba5c1099d35438d04b601a83135947", "Url": "https://api.github.com/repos/ebraminio/DroidPersianCalendar", "Date": "2016-03-08T15:45:42Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { de.cismet.tools.BrowserLauncher.openURL(\"https://gist.github.com/gists/4ef6a11c7ad17e2390ed/\"); } catch (java.lang.Exception ex) { log.error(\"Could not open Groovy GIST\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7162/buggy-version/src.main.java.de.cismet.lookupoptions.options.CismetDeveloperOptionsPanel.java", "BodyUseAPI": ["de.cismet.tools.BrowserLauncher.openURL(java.lang.String)"], "Fixed commit": "385cdde5f7ce19f2792668d6919cc58f6af024c9", "Url": "https://api.github.com/repos/cismet/cismet-gui-commons", "Date": "2012-02-15T09:39:04Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { type = app.getString(\"type\"); } catch (org.json.JSONException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4058/buggy-version/src.main.java.com.hortonworks.amstore.view.StoreApplicationFactory.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "0bd2d423d7f4b75ad0105eb2e5a5e183c3bcc681", "Url": "https://api.github.com/repos/jpplayer/amstore-view", "Date": "2015-06-13T00:27:01Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mItem.setQty(java.lang.Integer.parseInt(s.toString())); } catch (java.lang.NumberFormatException n) { mItem.setQty(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7475/buggy-version/src.com.coffeestrike.bettershoppinglist.EditItemDialog.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "com.coffeestrike.bettershoppinglist.Item.setQty(int)", "java.lang.CharSequence.toString()"], "Fixed commit": "36d239b9f278cb4912d9f83e307b53f397c594bd", "Url": "https://api.github.com/repos/supercoffee/BetterShoppingList", "Date": "2013-08-20T04:37:23Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { output = new java.io.FileOutputStream(outputFile); org.apache.commons.io.IOUtils.write(content.getContent(), output); } catch (java.lang.Exception e) { org.apache.nutch.tools.FileDumper.LOG.warn(((\"Write Error: [\" + outputFullPath) + \"]\")); e.printStackTrace(); } finally { if (output != null) { output.flush(); try { output.close(); } catch (java.lang.Exception ignore) { } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/9026/buggy-version/src.java.org.apache.nutch.tools.FileDumper.java", "BodyUseAPI": ["org.apache.commons.io.IOUtils.write(content.getContent(),java.io.FileOutputStream)", "org.apache.nutch.protocol.Content.getContent()"], "Fixed commit": "400f8d613a0b2d5973e420b7ba7813a60b6b4d72", "Url": "https://api.github.com/repos/karanjeets/nutch", "Date": "2015-10-13T16:30:42Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { wallet.saveToFile(walletFilename); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/883/buggy-version/BCH.plugin.crypto_network.fermat-bch-plugin-crypto-network-bitcoin-bitdubai.src.main.java.com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.structure.BitcoinNetworkEvents.java", "BodyUseAPI": ["org.bitcoinj.core.Wallet.saveToFile(java.io.File)"], "Fixed commit": "fb5a6e8b02bf3e317778ca85f8021f338fbd4828", "Url": "https://api.github.com/repos/acostarodrigo/fermat", "Date": "2016-02-25T17:08:06Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.System.out.println(client.generateIdentifier(\"0000002\", \"#UEDIN:214\")); } catch (java.io.UnsupportedEncodingException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5226/buggy-version/metis-identifiers.metis-identifier-client.src.main.java.eu.europeana.metis.identifier.IdentifierClientMain.java", "BodyUseAPI": ["eu.europeana.metis.identifier.RestClient.generateIdentifier(java.lang.String,java.lang.String)", "java.io.PrintStream.println(client.generateIdentifier(\"0000002\", \"#UEDIN:214\"))"], "Fixed commit": "1ce1ce291f8941d2173f338a7a739bf4c9b23bfc", "Url": "https://api.github.com/repos/europeana/metis-framework", "Date": "2017-03-27T09:46:22Z"},
{"Line": "=>1526", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { jxinfo.o = cclass.getConstructor().newInstance(); } catch (java.lang.Exception exc) { java.lang.reflect.Constructor constructor = cclass.getDeclaredConstructors()[0]; constructor.setAccessible(true); jxinfo.o = constructor.newInstance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6146/buggy-version/src.org.JXEngine.java", "BodyUseAPI": ["java.lang.Class.getConstructor()", "java.lang.reflect.Constructor.newInstance()"], "Fixed commit": "7ccae7c5aa1db8e65b0afe10a1b1521dcecc216d", "Url": "https://api.github.com/repos/gitcircuit/JXEngine", "Date": "2013-05-12T20:49:42Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { int indexNumber = com.gmail.eliterscripts.ConfigManager.addMessage(addingMessage); src.sendMessage(org.spongepowered.api.text.Text.of(((\"Your message was added to the list, indexed under '\" + indexNumber) + \"'.\"))); } catch (java.lang.NullPointerException e) { src.sendMessage(org.spongepowered.api.text.Text.of(\"Sorry, there was an error adding you message.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/9000/buggy-version/main.com.gmail.eliterscripts.command.AddCommand.java", "BodyUseAPI": ["org.spongepowered.api.command.CommandSource.sendMessage(org.spongepowered.api.text.Text.of(((\"Your message was added to the list, indexed under '\" + indexNumber) + \"'.\")))", "org.spongepowered.api.text.Text.of(java.lang.String)", "com.gmail.eliterscripts.ConfigManager.addMessage(java.util.Optional<java.lang.String>)"], "Fixed commit": "19a6ae4d2c816a9550e22e2d8249d3287ebe00e1", "Url": "https://api.github.com/repos/EliterScripts/AnnouncerPlus", "Date": "2016-04-06T04:51:29Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { errorData = new java.lang.String(response.data); statusCode = response.statusCode; } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8545/buggy-version/InterFON.app.src.main.java.com.android.casopisinterfon.interfon.internet.NetworkManager.java", "BodyUseAPI": [], "Fixed commit": "ce8eb0d167cfaa67307cc317f507ea02bb35931b", "Url": "https://api.github.com/repos/rristovic/casopisInterFON", "Date": "2017-04-05T20:33:39Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { exchangeRate = exchangeRateService.findOne(java.lang.Integer.valueOf(exchangeRateId)); org.springframework.util.Assert.notNull(exchangeRate); } catch (java.lang.Exception e) { exchangeRate = exchangeRateService.findByCurrency(\"EUR\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5761/buggy-version/WorkSpace.Acme-Six-Pack.src.main.java.controllers.ExchangeRateController.java", "BodyUseAPI": ["services.ExchangeRateService.findOne(java.lang.Integer)", "java.lang.Integer.valueOf(java.lang.String)", "org.springframework.util.Assert.notNull(domain.ExchangeRate)"], "Fixed commit": "4e65639eb92ecc833e1ecd0198aa4f837535f6fd", "Url": "https://api.github.com/repos/DPIRPSG/DP9Entrega", "Date": "2016-03-30T15:35:18Z"},
{"Line": "=>680", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.util.Log.d(mobile.tiis.staging.fragments.RegisterChildFragment.TAG, \"cumulative number filed\"); android.util.Log.d(mobile.tiis.staging.fragments.RegisterChildFragment.TAG, (\"registration year selected position = \" + (registryYearSpinner.getSelectedItemPosition()))); if ((registryYearSpinner.getSelectedItemPosition()) == 0) { android.app.AlertDialog.Builder alertDialogBuilder = new android.app.AlertDialog.Builder(getActivity()).setTitle(getString(R.string.alert_empty_fields)).setPositiveButton(android.R.string.yes, new android.content.DialogInterface.OnClickListener() { public void onClick(android.content.DialogInterface dialog, int which) { ((android.app.AlertDialog) (dialog)).dismiss(); } }); alertDialogBuilder.setMessage(\"Please Select the registration Year\"); alertDialogBuilder.show(); return false; }else if (mydb.isChildRegistrationNoPresentInDb(spinnerYears.get(((registryYearSpinner.getSelectedItemPosition()) - 1)), etChildCumulativeSn.getText().toString(), etbarcode.getText().toString())) { android.app.AlertDialog.Builder alertDialogBuilder = new android.app.AlertDialog.Builder(getActivity()).setTitle(getString(R.string.alert_empty_fields)).setPositiveButton(android.R.string.yes, new android.content.DialogInterface.OnClickListener() { public void onClick(android.content.DialogInterface dialog, int which) { ((android.app.AlertDialog) (dialog)).dismiss(); } }); alertDialogBuilder.setMessage(\"The entered Child Cumulative Sn and Year have already been used\"); alertDialogBuilder.show(); etChildCumulativeSn.setError(\"Please fill a valid Child Cumulative Sn\"); return false; } } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4914/buggy-version/appV2.src.main.java.mobile.tiis.staging.fragments.RegisterChildFragment.java", "BodyUseAPI": ["new android.app.AlertDialog.Builder(getActivity()).setTitle(getString(R.string.alert_empty_fields)).setPositiveButton(android.R.string.yes,android.content.DialogInterface.OnClickListener)", "mobile.tiis.staging.fragments.RegisterChildFragment.getString(R.string.alert_empty_fields)", "AlertDialog.Builder.setMessage(java.lang.String)", "android.content.DialogInterface.dismiss()", "android.app.AlertDialog.Builder.setTitle(getString(R.string.alert_empty_fields))", "etbarcode.getText().toString()", "android.content.DialogInterface.dismiss()", "android.util.Log.d(java.lang.String,java.lang.String)", "mobile.tiis.staging.database.DatabaseHandler.isChildRegistrationNoPresentInDb(java.lang.String,etChildCumulativeSn.getText().toString(),etbarcode.getText().toString())", "AlertDialog.Builder.show()", "mobile.tiis.staging.fragments.RegisterChildFragment.getActivity()", "com.rengwuPATHn.materialedittext.MaterialEditText.getText()", "mobile.tiis.staging.fragments.RegisterChildFragment.getActivity()", "android.util.Log.d(java.lang.String,(\"registration year selected position = \" + (registryYearSpinner.getSelectedItemPosition())))", "new android.app.AlertDialog.Builder(getActivity()).setTitle(getString(R.string.alert_empty_fields)).setPositiveButton(android.R.string.yes,android.content.DialogInterface.OnClickListener)", "mobile.tiis.staging.fragments.RegisterChildFragment.getString(R.string.alert_empty_fields)", "etChildCumulativeSn.getText().toString()", "android.app.AlertDialog.Builder.setTitle(getString(R.string.alert_empty_fields))", "AlertDialog.Builder.setMessage(java.lang.String)", "fr.ganfra.materialspinner.MaterialSpinner.getSelectedItemPosition()", "com.rengwuPATHn.materialedittext.MaterialEditText.getText()", "fr.ganfra.materialspinner.MaterialSpinner.getSelectedItemPosition()", "com.rengwuPATHn.materialedittext.MaterialEditText.setError(java.lang.String)", "java.util.List<java.lang.String>.get(((registryYearSpinner.getSelectedItemPosition()) - 1))", "fr.ganfra.materialspinner.MaterialSpinner.getSelectedItemPosition()", "AlertDialog.Builder.show()"], "Fixed commit": "610105e63cb0fc04aeee700140d28226efe73027", "Url": "https://api.github.com/repos/BIDMOH/TIIS2-Android-Mobile-Client-Application", "Date": "2017-05-31T07:32:07Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { core.StxDB.s.getConnection(); } catch (java.lang.Exception ex) { java.lang.Class.forName(\"com.mysql.jdbc.Driver\").newInstance(); java.lang.String urlStr = (\"jdbc:mysql://127.0.0.1:3306/\" + db_name) + \"?autoReconnect=true\"; core.StxDB.s = java.sql.DriverManager.getConnection(urlStr, \"root\", \"m1y2s3q7l8\").createStatement(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2203/buggy-version/core.StxDB.java", "BodyUseAPI": ["java.sql.Statement.getConnection()"], "Fixed commit": "47f22c3d5a5cb9d8fdae49d85ca8991052fc98c5", "Url": "https://api.github.com/repos/golden-dawn/java", "Date": "2016-11-20T06:01:33Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { wgutask4.Connect conn = new wgutask4.Connect(); stmt = conn.makeStatement(); java.lang.String sqlst = (\"Select studentID,firstName,lastName,gpa,status,mentor,level\" + (\" FROM registrar.student\" + \" WHERE studentID = \")) + (java.lang.Integer.toString(studentId)); rs = stmt.executeQuery(sqlst); while (rs.next()) { this.setStudentId(rs.getInt(\"StudentID\")); this.setFirstName(rs.getString(\"firstName\")); this.setLastName(rs.getString(\"lastName\")); this.setGpa(rs.getDouble(\"gpa\")); this.setStatus(rs.getString(\"status\")); this.setMentor(rs.getString(\"mentor\")); this.setLevel(rs.getString(\"level\")); } rs.close(); stmt.close(); conn.close(); return \"\"; } catch (java.sql.SQLException e) { e.printStackTrace(); java.lang.System.err.println(e.getMessage()); java.lang.System.err.println((\"MySQL SQL State:\" + (e.getSQLState()))); java.lang.System.err.println((\"Could not select student \" + studentId)); return ((\"MySql Error Message: \" + (e.getMessage())) + \"MySQL SQL State :\") + (e.getSQLState()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3439/buggy-version/src.wgutask4.Undergraduate.java", "BodyUseAPI": ["java.sql.ResultSet.close()", "java.sql.Statement.executeQuery(java.lang.String)", "java.sql.ResultSet.next()", "java.sql.ResultSet.getString(java.lang.String)", "java.sql.Statement.close()", "java.sql.ResultSet.getString(java.lang.String)", "wgutask4.Undergraduate.setGpa(double)", "java.sql.ResultSet.getString(java.lang.String)", "wgutask4.Undergraduate.setLastName(java.lang.String)", "java.sql.ResultSet.getDouble(java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)", "wgutask4.Undergraduate.setStatus(java.lang.String)", "wgutask4.Connect.makeStatement()", "java.lang.Integer.toString(int)", "wgutask4.Connect.close()", "wgutask4.Undergraduate.setStudentId(int)", "wgutask4.Undergraduate.setFirstName(java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)", "wgutask4.Undergraduate.setLevel(java.lang.String)", "wgutask4.Undergraduate.setMentor(java.lang.String)", "java.sql.ResultSet.getInt(java.lang.String)"], "Fixed commit": "8baed3dc57e748d6e7bc08dd862ae117d226a9ce", "Url": "https://api.github.com/repos/dgannon/wguTask4", "Date": "2013-09-29T22:00:07Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { final com.twitter.zipkin.gen.Span span = queue.poll(5, java.util.concurrent.TimeUnit.SECONDS); if (span == null) { subsequentEmptyBatches++; }else { logEntries.add(create(span)); } if ((((subsequentEmptyBatches >= (com.github.kristofa.brave.zipkin.SpanProcessingThread.MAX_SUBSEQUENT_EMPTY_BATCHES)) && (!(logEntries.isEmpty()))) || ((logEntries.size()) >= (maxBatchSize))) || ((!(logEntries.isEmpty())) && (stop))) { log(logEntries); logEntries.clear(); subsequentEmptyBatches = 0; } } catch (final java.lang.Exception e) { com.github.kristofa.brave.zipkin.SpanProcessingThread.LOGGER.error(\"Unexpected exception.\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6514/buggy-version/brave-zipkin-spancollector.src.main.java.com.github.kristofa.brave.zipkin.SpanProcessingThread.java", "BodyUseAPI": ["com.github.kristofa.brave.zipkin.SpanProcessingThread.log(java.util.List<com.twitter.zipkin.gen.LogEntry>)", "com.github.kristofa.brave.zipkin.SpanProcessingThread.create(com.twitter.zipkin.gen.Span)", "java.util.List<com.twitter.zipkin.gen.LogEntry>.isEmpty()", "java.util.concurrent.BlockingQueue<com.twitter.zipkin.gen.Span>.poll(int,java.util.concurrent.TimeUnit)", "java.util.List<com.twitter.zipkin.gen.LogEntry>.size()", "java.util.List<com.twitter.zipkin.gen.LogEntry>.isEmpty()", "java.util.List<com.twitter.zipkin.gen.LogEntry>.add(com.twitter.zipkin.gen.LogEntry)", "java.util.List<com.twitter.zipkin.gen.LogEntry>.clear()"], "Fixed commit": "f95524b90bf6223bc07819923ca365a1572b30f4", "Url": "https://api.github.com/repos/kristofa/brave", "Date": "2013-10-08T10:21:46Z"},
{"Line": "=>670", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { org.eclipse.moquette.spi.impl.MessagingEvent evt = t.getEvent(); org.eclipse.moquette.spi.impl.OutputMessagingEvent outEvent = ((org.eclipse.moquette.spi.impl.OutputMessagingEvent) (evt)); org.eclipse.moquette.spi.impl.ProtocolProcessor.LOG.debug(\"Output event, sending {}\", outEvent.getMessage()); outEvent.getChannel().write(outEvent.getMessage()); } finally { t.setEvent(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7659/buggy-version/broker.src.main.java.org.eclipse.moquette.spi.impl.ProtocolProcessor.java", "BodyUseAPI": ["org.eclipse.moquette.spi.impl.OutputMessagingEvent.getMessage()", "org.eclipse.moquette.spi.impl.ValueEvent.getEvent()", "org.slf4j.Logger.debug(java.lang.String,outEvent.getMessage())", "org.eclipse.moquette.spi.impl.OutputMessagingEvent.getChannel()", "org.eclipse.moquette.spi.impl.OutputMessagingEvent.getMessage()", "outEvent.getChannel().write(outEvent.getMessage())"], "Fixed commit": "e699d5ff2b40ca93b5c5de622e27ed57ba816b49", "Url": "https://api.github.com/repos/sgano1/moquette", "Date": "2015-06-07T15:57:42Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { texture_ = new com.badlogic.gdx.graphics.Texture(Gdx.files.internal(texture)); } catch (java.lang.Exception e) { java.lang.System.out.println((\"Working Directory = \" + (java.lang.System.getProperty(\"user.dir\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6220/buggy-version/core.src.com.sewm.defaultteam.Player.java", "BodyUseAPI": ["Gdx.files.internal(java.lang.String)"], "Fixed commit": "f079e1e60c70ab9126fabad2a0f9799ef7d43718", "Url": "https://api.github.com/repos/papsti7/Dots", "Date": "2016-05-10T17:49:55Z"},
{"Line": "=>1685", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String[] brMode = getMediaInfo(StreamKind.Audio, i, \"BitRate_Mode\").split(\"/\"); if ((brMode.length) > 1) { java.lang.String[] br = getMediaInfo(StreamKind.Audio, i, \"BitRate\").split(\"/\"); int brMult = 0; for (int j = 0; j < (br.length); j++) { int tmp = 0; try { tmp = java.lang.Integer.parseInt(br[j].trim()); } catch (java.lang.Exception ign) { } brMult += tmp; } stream.setBitrate((brMult / 1024)); }else { java.lang.String br = getMediaInfo(StreamKind.Audio, i, \"BitRate\"); stream.setBitrate(((java.lang.Integer.parseInt(br)) / 1024)); } } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/448/buggy-version/src.main.java.org.tinymediamanager.core.entities.MediaFile.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "org.tinymediamanager.core.entities.MediaFileAudioStream.setBitrate(int)", "org.tinymediamanager.core.entities.MediaFile.getMediaInfo(StreamKind.Audio,int,java.lang.String)", "java.lang.String.split(java.lang.String)", "org.tinymediamanager.core.entities.MediaFile.getMediaInfo(StreamKind.Audio,int,java.lang.String)", "org.tinymediamanager.core.entities.MediaFile.getMediaInfo(StreamKind.Audio,int,java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.trim()", "java.lang.Integer.parseInt(java.lang.String)", "org.tinymediamanager.core.entities.MediaFileAudioStream.setBitrate(int)"], "Fixed commit": "04c9e80b858e369ad93ef8fd9565ad8108370a52", "Url": "https://api.github.com/repos/ProIcons/tinyMediaManager", "Date": "2017-07-19T13:24:08Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { vertex.executionCanceled(); } finally { vertex.getExecutionGraph().deregisterExecution(this); if ((assignedResource) != null) { assignedResource.releaseSlot(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2818/buggy-version/flink-runtime.src.main.java.org.apache.flink.runtime.executiongraph.Execution.java", "BodyUseAPI": ["org.apache.flink.runtime.executiongraph.ExecutionVertex.executionCanceled()"], "Fixed commit": "a79239fbc5a9892061429b5ed5e070af656a6e8b", "Url": "https://api.github.com/repos/StephanEwen/incubator-flink", "Date": "2014-09-16T22:04:28Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { task = tasks[i]; if (task == null) continue; } catch (java.lang.Throwable t) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7971/buggy-version/src.com.wanikani.androidnotifier.TimerThreadsReaper.java", "BodyUseAPI": [], "Fixed commit": "1b815742463f58bbd524213d89b58c837dd50a28", "Url": "https://api.github.com/repos/WaniKani/Android-Notification", "Date": "2013-11-09T21:09:26Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (!(tempuser.getName().contains(\"@\"))) { return; } } catch (java.lang.NullPointerException e) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2761/buggy-version/src.il.ac.tau.team3.shareaprayer.LocServ.java", "BodyUseAPI": ["il.ac.tau.team3.common.GeneralUser.getName()", "tempuser.getName().contains(java.lang.String)"], "Fixed commit": "0cad5951f42eda38e9cc3e94ad35912325251f3a", "Url": "https://api.github.com/repos/ronialoni/Android", "Date": "2011-08-29T18:23:41Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Double.parseDouble(com.metabroadcast.common.persistence.translator.TranslatorUtils.toString(dbObject, org.atlasapi.persistence.media.entity.DescribedTranslator.ITEM_PRIORITY_KEY)); entity.setPriority(new org.atlasapi.media.entity.Priority(com.metabroadcast.common.persistence.translator.TranslatorUtils.toDouble(dbObject, org.atlasapi.persistence.media.entity.DescribedTranslator.ITEM_PRIORITY_KEY), null)); } catch (java.lang.NumberFormatException e) { entity.setPriority(priorityTranslator.getPriority(dbObject)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2300/buggy-version/src.main.java.org.atlasapi.persistence.media.entity.DescribedTranslator.java", "BodyUseAPI": ["java.lang.Double.parseDouble(com.metabroadcast.common.persistence.translator.TranslatorUtils.toString(dbObject, org.atlasapi.persistence.media.entity.DescribedTranslator.ITEM_PRIORITY_KEY))", "com.metabroadcast.common.persistence.translator.TranslatorUtils.toDouble(com.mongodb.DBObject,java.lang.String)", "com.metabroadcast.common.persistence.translator.TranslatorUtils.toString(com.mongodb.DBObject,java.lang.String)", "org.atlasapi.media.entity.Described.setPriority(org.atlasapi.media.entity.Priority)"], "Fixed commit": "2c5eb4ca256672e68f1c6a3191586af74b9e4774", "Url": "https://api.github.com/repos/atlasapi/atlas-persistence", "Date": "2015-08-25T14:30:06Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { accountId = new org.restcomm.connect.commons.dao.Sid(accountSid); } catch (final java.lang.IllegalArgumentException exception) { return status(org.restcomm.connect.http.INTERNAL_SERVER_ERROR).entity(exception.getMessage()).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6548/buggy-version/restcomm.restcomm.http.src.main.java.org.restcomm.connect.http.CallsEndpoint.java", "BodyUseAPI": [], "Fixed commit": "0c1d2a524e561befd7db13b7c88446d66ca286f2", "Url": "https://api.github.com/repos/forever3000/Restcomm-Connect", "Date": "2016-12-04T07:55:04Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { results = geocodingService.geocode(value); resultListModel.setObject(results); } catch (java.lang.Exception e) { log.error((((\"Geocoding API error in search for [\" + value) + \"]: \") + (e.getMessage())), e); resultListModel.setObject(java.util.Collections.<de.flower.rmt.service.geocoding.GeocodingResult>emptyList()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6405/buggy-version/rmt.src.main.java.de.flower.rmt.ui.page.venues.manager.geocode.GeocodePanel.java", "BodyUseAPI": ["de.flower.rmt.service.geocoding.IGeocodingService.geocode(java.lang.String)", "org.apache.wicket.model.IModel<java.util.List<de.flower.rmt.service.geocoding.GeocodingResult>>.setObject(java.util.List<de.flower.rmt.service.geocoding.GeocodingResult>)"], "Fixed commit": "4b19d730507857540b836d29413f1c1b7244b0cf", "Url": "https://api.github.com/repos/flowerrrr/RMT", "Date": "2012-04-23T21:27:31Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { Logic.executeCommand(userCommand); } catch (java.io.FileNotFoundException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4233/buggy-version/src.GUI.java", "BodyUseAPI": ["Logic.executeCommand(java.lang.String)"], "Fixed commit": "141a2b4e0cf5f167f4885a991dee3a1607d439f2", "Url": "https://api.github.com/repos/cs2103aug2015-f10-1j/SmarTask", "Date": "2015-10-02T10:13:14Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { p = builder.start(); java.lang.Runtime.getRuntime().addShutdownHook(new java.lang.Thread() { public void run() { p.destroy(); } }); p.waitFor(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7821/buggy-version/src.main.java.org.spideruci.tacoco.TacocoLauncher.java", "BodyUseAPI": ["java.lang.ProcessBuilder.start()", "java.lang.Thread()", "java.lang.Runtime.addShutdownHook(java.lang.Thread)", "java.lang.Runtime.getRuntime()", "java.lang.Process.destroy()", "java.lang.Process.waitFor()"], "Fixed commit": "af065a783c39a28cd68d151b8133bf6b8e8ead59", "Url": "https://api.github.com/repos/spideruci/tacoco", "Date": "2015-10-06T23:07:35Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { new io.FileSink(((this.getClass().getClassLoader().getResource(\"\").getPath()) + \"medias-TP2\\\\Test.wav\")); } catch (java.io.FileNotFoundException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1494/buggy-version/audio.WaveAudioFilter.java", "BodyUseAPI": ["java.lang.Class<? extends audio.WaveAudioFilter>.getClassLoader()", "java.lang.ClassLoader.getResource(java.lang.String)", "java.net.URL.getPath()", "audio.WaveAudioFilter.getClass()"], "Fixed commit": "27fc843a0070e2b4ef5336d8e5edf5d48f90916c", "Url": "https://api.github.com/repos/hubnic/GTI310-LAB2.1", "Date": "2015-01-29T19:57:58Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { findMinMaxValues(cacheImage, true); } catch (java.lang.Exception e) { org.weasis.core.api.media.data.ImageElement.mCache.remove(this); readable = false; org.weasis.core.api.media.data.ImageElement.LOGGER.error(\"Cannot read image: {}\", this, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7588/buggy-version/weasis-core.weasis-core-api.src.main.java.org.weasis.core.api.media.data.ImageElement.java", "BodyUseAPI": ["org.weasis.core.api.media.data.ImageElement.findMinMaxValues(javax.media.jai.PlanarImage,boolean)"], "Fixed commit": "9aa80d8e69d83a4fba789a815e7e0b7a08dc9bc1", "Url": "https://api.github.com/repos/nroduit/Weasis", "Date": "2017-04-15T06:45:14Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { if (org.openflexo.toolbox.StringUtils.isNotEmpty(org.openflexo.gina.view.widget.impl.FIBGenericTextWidgetImpl.getWidget().getText())) { getRenderingAdapter().setText(org.openflexo.gina.view.widget.impl.FIBGenericTextWidgetImpl.getTechnologyComponent(), org.openflexo.gina.view.widget.impl.FIBGenericTextWidgetImpl.getWidget().getText()); } } finally { widgetUpdating = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6173/buggy-version/gina-core.src.main.java.org.openflexo.gina.view.widget.impl.FIBGenericTextWidgetImpl.java", "BodyUseAPI": ["org.openflexo.toolbox.StringUtils.isNotEmpty(org.openflexo.gina.view.widget.impl.FIBGenericTextWidgetImpl.getWidget().getText())", "org.openflexo.gina.view.widget.impl.FIBGenericTextWidgetImpl.getWidget()", "org.openflexo.gina.view.widget.impl.FIBGenericTextWidgetImpl.getWidget()", "org.openflexo.gina.view.widget.impl.FIBGenericTextWidgetImpl.getTechnologyComponent()", "org.openflexo.gina.view.widget.impl.FIBGenericTextWidgetImpl<F, C>.getRenderingAdapter()", "org.openflexo.gina.view.widget.impl.FIBGenericTextWidgetImpl.getWidget().getText()", "org.openflexo.gina.view.widget.impl.FIBGenericTextWidgetImpl.getWidget().getText()", "org.openflexo.gina.view.widget.impl.GenericTextRenderingAdapter<C>.setText(org.openflexo.gina.view.widget.impl.FIBGenericTextWidgetImpl.getTechnologyComponent(),org.openflexo.gina.view.widget.impl.FIBGenericTextWidgetImpl.getWidget().getText())"], "Fixed commit": "736668f79ed74234a8e9a14af2de3683459bb754", "Url": "https://api.github.com/repos/openflexo-team/gina", "Date": "2016-03-23T15:04:29Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return super.call(method, args); } catch (java.lang.reflect.InvocationTargetException e) { if ((e.getCause()) instanceof java.lang.SecurityException) { return null; } throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1148/buggy-version/VirtualApp.lib.src.main.java.com.lody.virtual.client.hook.providers.SettingsProviderHook.java", "BodyUseAPI": ["com.lody.virtual.client.hook.providers.ExternalProviderHook.call(java.lang.reflect.Method,java.lang.Object[])"], "Fixed commit": "fae3d6d09fde8a2cf84ecefe02b32fde73003b88", "Url": "https://api.github.com/repos/dstmath/VirtualApp", "Date": "2016-09-12T07:12:10Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { causeOfDeath = org.simiancage.DeathTpPlus.helpers.DeathMessagesDTP.DeathEventType.valueOf(damageEvent.getCause().toString()); } catch (java.lang.IllegalArgumentException e) { causeOfDeath = org.simiancage.DeathTpPlus.helpers.DeathMessagesDTP.DeathEventType.UNKNOWN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1608/buggy-version/src.main.java.org.simiancage.DeathTpPlus.models.DeathDetailDTP.java", "BodyUseAPI": ["damageEvent.getCause().toString()", "org.simiancage.DeathTpPlus.helpers.DeathMessagesDTP.DeathEventType.valueOf(damageEvent.getCause().toString())", "org.bukkit.event.entity.EntityDamageEvent.getCause()"], "Fixed commit": "f8242a0eb83b56eb516dd16e49132491445c9c9d", "Url": "https://api.github.com/repos/dredhorse/DeathTpPlus", "Date": "2011-12-19T01:34:24Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ejb.removeAnswer(entry, answer); } catch (pt.uc.dei.aor.project.business.exception.IllegalAnswerOptionsException e) { addMessage(FacesMessage.SEVERITY_ERROR, \"At least 2 responses needed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/912/buggy-version/presentation.src.main.java.pt.uc.dei.aor.project.presentation.bean.ScriptEntryBean.java", "BodyUseAPI": ["pt.uc.dei.aor.project.business.service.IScriptEntryBusinessService.removeAnswer(pt.uc.dei.aor.project.business.model.IScriptEntry,java.lang.String)"], "Fixed commit": "ff0d7b8b1fcc4146996a0f30b5ce1477862fab79", "Url": "https://api.github.com/repos/kwakiutlCS/jobapplication", "Date": "2015-08-24T19:09:59Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(delayMillis); } catch (java.lang.InterruptedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4106/buggy-version/src.main.java.com.micabyte.android.graphics.MicaSurfaceView.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "def85043e06c74517fbd880aaed996c0f87aea4f", "Url": "https://api.github.com/repos/micabyte/lib_base", "Date": "2014-09-19T20:19:33Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ca.ualberta.trinkettrader.User.LoggedInUser.getInstance().saveToNetwork(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/694/buggy-version/app.src.main.java.ca.ualberta.trinkettrader.Inventory.Trinket.TrinketDetailsController.java", "BodyUseAPI": ["ca.ualberta.trinkettrader.User.LoggedInUser.getInstance().saveToNetwork()", "ca.ualberta.trinkettrader.User.LoggedInUser.getInstance()"], "Fixed commit": "ccc59d98d99d71f3b7eff22b5ddc5750f591f496", "Url": "https://api.github.com/repos/CMPUT301F15T01/YesWeCandroid", "Date": "2015-11-30T18:47:08Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { LocationServices.FusedLocationApi.requestLocationUpdates(googleApiClient, locationRequest, locationListener); } catch (java.lang.IllegalStateException e) { com.crashlytics.android.Crashlytics.log(Log.INFO, com.jakehilborn.speedr.MainService.class.getSimpleName(), \"Play Services illegal state, retrying connection\"); com.crashlytics.android.Crashlytics.logException(e); googleApiClient.connect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2173/buggy-version/app.src.main.java.com.jakehilborn.speedr.MainService.java", "BodyUseAPI": ["LocationServices.FusedLocationApi.requestLocationUpdates(com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.location.LocationRequest,com.google.android.gms.location.LocationListener)"], "Fixed commit": "1275925117f2a8fe8da92e69fbbaa87b8ee6c13d", "Url": "https://api.github.com/repos/jakehilborn/speedr", "Date": "2017-02-25T17:16:59Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.ghlh.data.db.MonitorstockVO monitorstockVO = ((com.ghlh.data.db.MonitorstockVO) (monitorStocksList.get(i))); com.ghlh.strategy.OneTimeStrategy ts = ((com.ghlh.strategy.OneTimeStrategy) (com.ghlh.util.ReflectUtil.getClassInstance(\"com.ghlh.strategy\", monitorstockVO.getTradealgorithm(), oneTimeType))); ts.processStockTrade(monitorstockVO); } catch (java.lang.Exception ex) { com.ghlh.autotrade.OneTimeJobUtil.logger.error(\"processOneTimeStrategy \", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4517/buggy-version/src.main.java.com.ghlh.autotrade.OneTimeJobUtil.java", "BodyUseAPI": ["com.ghlh.util.ReflectUtil.getClassInstance(java.lang.String,monitorstockVO.getTradealgorithm(),java.lang.String)", "com.ghlh.data.db.MonitorstockVO.getTradealgorithm()", "java.util.List.get(int)", "com.ghlh.strategy.OneTimeStrategy.processStockTrade(com.ghlh.data.db.MonitorstockVO)"], "Fixed commit": "ff748dd341e6b227d1528ecc7dade103f7f647ca", "Url": "https://api.github.com/repos/lqjliu/ghlh", "Date": "2014-02-18T00:09:41Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((nodeListener) != null) { io.jsync.spi.cluster.impl.Member member = memberAttributeEvent.getMember(); nodeListener.nodeAttributeChanged(member.getUuid(), memberAttributeEvent.getKey(), memberAttributeEvent.getValue()); } } catch (java.lang.Throwable t) { io.jsync.spi.cluster.impl.HazelcastClusterManager.log.error(\"Failed to handle memberAttributeChanged\", t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1641/buggy-version/src.main.java.io.jsync.spi.cluster.impl.HazelcastClusterManager.java", "BodyUseAPI": ["io.jsync.spi.cluster.NodeListener.nodeAttributeChanged(member.getUuid(),memberAttributeEvent.getKey(),memberAttributeEvent.getValue())", "io.jsync.spi.cluster.impl.MemberAttributeEvent.getValue()", "io.jsync.spi.cluster.impl.Member.getUuid()", "io.jsync.spi.cluster.impl.MemberAttributeEvent.getMember()", "io.jsync.spi.cluster.impl.MemberAttributeEvent.getKey()"], "Fixed commit": "5bf9ac87c2d25eca2997f02aeca47ad3dd049514", "Url": "https://api.github.com/repos/BestellenSoftware/jsync.io", "Date": "2016-03-11T06:41:01Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { branch = tryToRunGitCommand(canonical, \"symbolic-ref HEAD\"); if (branch != null) { branch = branch.replace(\"refs/heads/\", \"\"); } } catch (java.lang.RuntimeException e) { branch = getCommitId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8359/buggy-version/src.main.java.pl.project13.maven.git.NativeGitProvider.java", "BodyUseAPI": ["pl.project13.maven.git.NativeGitProvider.tryToRunGitCommand(java.io.File,java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "8e99f0ddb5967f293360e873ccbecf331278ee1e", "Url": "https://api.github.com/repos/TheSnoozer/maven-git-commit-id-plugin", "Date": "2014-12-11T23:54:16Z"},
{"Line": "=>432", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return org.appkit.osdependant.OSUtils.userDataFolder(name); } catch (java.lang.Throwable t) { path = java.lang.System.getProperty(\"user.dir\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2689/buggy-version/src.org.dyndns.fzoli.rccar.controller.Config.java", "BodyUseAPI": ["org.appkit.osdependant.OSUtils.userDataFolder(java.lang.String)"], "Fixed commit": "04b5caeae0ea952650e117c841c689a33cc89ed1", "Url": "https://api.github.com/repos/fzoli/RemoteControlCar", "Date": "2013-03-26T04:01:25Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { newTask.Duration = java.lang.Integer.parseInt(tokens[1]); } catch (java.lang.NumberFormatException e) { java.lang.System.out.println((\"Error with the duration of Task \" + (newTask.Name))); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5989/buggy-version/Homework4.src.scheduler.Main.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "1882945847c14de161e11ba78a8fdbd648c4d233", "Url": "https://api.github.com/repos/mollys1/329Projects", "Date": "2015-10-27T03:21:54Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { final android.graphics.Bitmap bitmap = loadImageFromNetwork(coverPhoto); cover.post(new java.lang.Runnable() { public void run() { cover.setImageBitmap(bitmap); } }); } catch (java.lang.Exception e) { android.util.Log.d(\"Image\", \"There is no photo for this event\"); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1467/buggy-version/FacebookEvents.app.src.main.java.edu.washington.crew.fbevents.EventDetailsFragment.java", "BodyUseAPI": ["android.widget.ImageView.setImageBitmap(android.graphics.Bitmap)", "java.lang.Object()", "android.widget.ImageView.post(java.lang.Runnable)", "edu.washington.crew.fbevents.EventDetailsFragment.1.loadImageFromNetwork(java.lang.String)"], "Fixed commit": "978e2e3922a2bd90c3fd101aff9b8676185a0dad", "Url": "https://api.github.com/repos/nadavash/fb-events", "Date": "2015-06-09T07:33:35Z"},
{"Line": "=>1704", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { targetSession.rollback(); } catch (java.lang.Throwable ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3265/buggy-version/hornetq-jms-server.src.main.java.org.hornetq.jms.bridge.impl.JMSBridgeImpl.java", "BodyUseAPI": ["javax.jms.Session.rollback()"], "Fixed commit": "c8dc6fb7f5d6b7d02072367f6f68ad70a3f478ce", "Url": "https://api.github.com/repos/msve/hornetq", "Date": "2013-08-16T21:46:05Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1745/buggy-version/src.uk.ac.kent.dover.fastGraph.ExactIsomorphism.java", "BodyUseAPI": [], "Fixed commit": "6a86361da855ab5f3ccb0bdb0c521ccd59c5db32", "Url": "https://api.github.com/repos/peterrodgers/dover", "Date": "2016-11-24T17:50:59Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { c = qb.query(db, sqlSelect, null, null, null, null, null); } catch (android.database.sqlite.SQLiteException e) { android.util.Log.e(\"SQL Error\", e.toString()); return matches; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4571/buggy-version/app.src.main.java.com.example.loganpatino.mlspickem.MyDatabase.java", "BodyUseAPI": ["android.database.sqlite.SQLiteQueryBuilder.query(android.database.sqlite.SQLiteDatabase,java.lang.String[],<nulltype>,<nulltype>,<nulltype>,<nulltype>,<nulltype>)"], "Fixed commit": "1b6b9d20dc4b4ac3e1e7486ab7bc32298dc49dcc", "Url": "https://api.github.com/repos/lpatino10/mls-pick-em", "Date": "2016-01-21T14:32:25Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { jds.bgsave(); } catch (redis.clients.jedis.exceptions.JedisDataException e) { java.lang.System.err.println(e); e.printStackTrace(java.lang.System.err); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5595/buggy-version/src.mxp.lucene.store.RedisDirectory.java", "BodyUseAPI": ["redis.clients.jedis.Jedis.bgsave()"], "Fixed commit": "e814951a7ca81507868e4b8ef6d568ea6fb0db6c", "Url": "https://api.github.com/repos/maxpert/RedisDirectory", "Date": "2012-10-10T11:57:41Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mProgressDialog.show(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1316/buggy-version/src.com.ds.avare.ChartsDownloadActivity.java", "BodyUseAPI": ["android.app.ProgressDialog.show()"], "Fixed commit": "9bc0cee8a4ff5efb309f469e68bbaf063c312bd9", "Url": "https://api.github.com/repos/apps4av/avare", "Date": "2014-09-30T01:07:28Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mProgressDialog.show(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1316/buggy-version/src.com.ds.avare.ChartsDownloadActivity.java", "BodyUseAPI": ["android.app.ProgressDialog.show()"], "Fixed commit": "9bc0cee8a4ff5efb309f469e68bbaf063c312bd9", "Url": "https://api.github.com/repos/apps4av/avare", "Date": "2014-09-30T01:07:28Z"},
{"Line": "=>550", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mAlertDialog.show(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1316/buggy-version/src.com.ds.avare.PlatesTagActivity.java", "BodyUseAPI": ["android.app.AlertDialog.show()"], "Fixed commit": "9bc0cee8a4ff5efb309f469e68bbaf063c312bd9", "Url": "https://api.github.com/repos/apps4av/avare", "Date": "2014-09-30T01:07:28Z"},
{"Line": "=>558", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mAlertDialog.show(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1316/buggy-version/src.com.ds.avare.PlatesTagActivity.java", "BodyUseAPI": ["android.app.AlertDialog.show()"], "Fixed commit": "9bc0cee8a4ff5efb309f469e68bbaf063c312bd9", "Url": "https://api.github.com/repos/apps4av/avare", "Date": "2014-09-30T01:07:28Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { dateTime = new java.text.SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ssZ\").parse(map.get(\"dateTime\")); } catch (java.text.ParseException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5346/buggy-version/src.main.java.com.dataart.controller.MessageController.java", "BodyUseAPI": ["java.text.SimpleDateFormat.parse(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "1be5be78117f1058470ffa28e66a87973c49f185", "Url": "https://api.github.com/repos/DimaOlefir/DataArtProject", "Date": "2017-12-12T20:34:06Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (settings.Settings.getInstance().isGuiEnabled()) { if ((gui.Gui.getInstance()) != null) { utils.SysTray.getInstance().createTrayIcon(); } } } catch (java.lang.Exception e) { java.lang.System.out.println((\"GUI ERROR: \" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8890/buggy-version/Qora.src.Start.java", "BodyUseAPI": ["settings.Settings.getInstance().isGuiEnabled()", "settings.Settings.getInstance()", "utils.SysTray.getInstance().createTrayIcon()", "gui.Gui.getInstance()", "utils.SysTray.getInstance()"], "Fixed commit": "a909a6379ebb77bd70961192d38711e7aabf2ab8", "Url": "https://api.github.com/repos/Qoracoin/Qora", "Date": "2015-07-10T14:53:33Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return java.lang.Integer.parseInt(profiles.getString((UID + (color))), 16); } catch (java.lang.NumberFormatException ex) { return 15; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/340/buggy-version/src.com.citizens.properties.properties.BasicProperties.java", "BodyUseAPI": ["java.lang.Integer.parseInt(profiles.getString((UID + (color))),int)", "com.citizens.properties.properties.BasicProperties.getString(java.lang.String)"], "Fixed commit": "62b858f631c434492cadfe933e08ad726c20b4ca", "Url": "https://api.github.com/repos/fullwall/Citizens", "Date": "2011-07-21T13:09:54Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mDatabase.execSQL((((((\"CREATE TABLE IF NOT EXISTS \" + (selectedTable)) + \" \") + \"(id INTEGER PRIMARY KEY, foodname text, calories DECIMAL(5,1), totalfat DECIMAL(5,1), transfat DECIMAL(5,1),\") + \"satfat DECIMAL(5,1), cholestrol DECIMAL(5,1), sodium DECIMAL(5,1), carbs DECIMAL(5,1),\") + \"fiber DECIMAL(5,1), sugar DECIMAL(5,1), protein DECIMAL(5,1));\")); } catch (java.lang.Exception e) { selectedTable = (\"[\" + (selectedTable)) + \"]\"; mDatabase.execSQL((((((\"CREATE TABLE IF NOT EXISTS \" + (selectedTable)) + \" \") + \"(id INTEGER PRIMARY KEY, foodname text, calories DECIMAL(5,1), totalfat DECIMAL(5,1), transfat DECIMAL(5,1),\") + \"satfat DECIMAL(5,1), cholestrol DECIMAL(5,1), sodium DECIMAL(5,1), carbs DECIMAL(5,1),\") + \"fiber DECIMAL(5,1), sugar DECIMAL(5,1), protein DECIMAL(5,1));\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3920/buggy-version/Source.app.src.main.java.fitness.cs115.a115fitnessapp.meal_viewAllMeals.java", "BodyUseAPI": ["android.database.sqlite.SQLiteDatabase.execSQL(java.lang.String)"], "Fixed commit": "61dbc712b8db8135b0b1022bedabdcfb987e5040", "Url": "https://api.github.com/repos/henry-pan/NutriFit", "Date": "2016-11-19T23:47:17Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return new java.lang.String(val.getBytes(\"ISO-8859-1\"), \"UTF-8\"); } catch (java.io.UnsupportedEncodingException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3840/buggy-version/jchess.StringResources.java", "BodyUseAPI": ["java.lang.String.getBytes(java.lang.String)"], "Fixed commit": "7e288f2425c4323a0d5256bf8eb19e96396bf977", "Url": "https://api.github.com/repos/ovgu-ccd/jchess", "Date": "2015-01-20T14:03:59Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return new java.lang.String(val.getBytes(\"ISO-8859-1\"), \"UTF-8\"); } catch (java.io.UnsupportedEncodingException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3840/buggy-version/jchess.StringResources.java", "BodyUseAPI": ["java.lang.String.getBytes(java.lang.String)"], "Fixed commit": "7e288f2425c4323a0d5256bf8eb19e96396bf977", "Url": "https://api.github.com/repos/ovgu-ccd/jchess", "Date": "2015-01-20T14:03:59Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { paintArea.image.setRGB(column, (((vp.vres) - row) - 1), c.getRGB()); } catch (java.lang.ArrayIndexOutOfBoundsException e) { java.lang.System.out.println((((\"column: \" + column) + \" row: \") + row)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2836/buggy-version/src.world.World.java", "BodyUseAPI": ["paintArea.image.setRGB(int,(((vp.vres) - row) - 1),int)", "java.awt.Color.getRGB()"], "Fixed commit": "f6b450168fb8be7d13db435eae97e7ff610c8563", "Url": "https://api.github.com/repos/derektriley/SwingRayTrace", "Date": "2015-02-13T02:42:43Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { r = region.get(get); } catch (java.io.IOException e) { com.xingcloud.xa.coprocessor.SecondaryIndexCoprocessor.LOG.debug(((\"Get property value got exception. MSG: \" + (e.getMessage())) + \"\\nTry get from HTable client...\")); com.xingcloud.xa.coprocessor.HTableInterface table = com.xingcloud.xa.coprocessor.HBaseResourceManager.getInstance().getTable(region.getTableDesc().getNameAsString()); try { r = table.get(get); } finally { if (table != null) { com.xingcloud.xa.coprocessor.HBaseResourceManager.getInstance().putTable(table); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3488/buggy-version/IndexGenerator.src.main.java.com.xingcloud.xa.coprocessor.SecondaryIndexCoprocessor.java", "BodyUseAPI": ["org.apache.hadoop.hbase.regionserver.HRegion.get(com.xingcloud.xa.coprocessor.Get)"], "Fixed commit": "7cfd957e945c1c24a49b8169c7c44f878a5d7430", "Url": "https://api.github.com/repos/XingCloud/HSecondaryIndex", "Date": "2013-07-30T06:40:39Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { json_children = json.getJSONArray(\"Children\"); } catch (org.json.JSONException ex) { json_children = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4403/buggy-version/client.src.com.scrye.badgertunes.Node.java", "BodyUseAPI": ["org.json.JSONObject.getJSONArray(java.lang.String)"], "Fixed commit": "4ec6921e922df199d454751b11b904eb413384d4", "Url": "https://api.github.com/repos/hersh/badger", "Date": "2013-09-29T05:32:39Z"},
{"Line": "=>1237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { final java.lang.Class jfxPanel = de.cismet.lagis.gui.main.LagisApp.class.getClassLoader().loadClass(\"javafx.embed.swing.JFXPanel\"); isJavaFxAvailable = true; } catch (java.lang.ClassNotFoundException e) { isJavaFxAvailable = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6802/buggy-version/src.main.java.de.cismet.lagis.gui.main.LagisApp.java", "BodyUseAPI": ["java.lang.Class.getClassLoader()", "java.lang.ClassLoader.loadClass(java.lang.String)"], "Fixed commit": "42b4c76ba61105125dd565b4d6697f4d2ea4efbc", "Url": "https://api.github.com/repos/cismet/lagis-client", "Date": "2015-07-17T13:07:43Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.bukkit.block.Sign sign = ((org.bukkit.block.Sign) (location.getBlock().getState())); signs.put(sign, key); } catch (java.lang.ClassCastException ex) { de.lordvader.Managers.SettingsManager.config.set((\"location.\" + key), null); de.lordvader.Managers.SettingsManager.config.set((\"port.\" + key), null); de.lordvader.Managers.SettingsManager.config.set((\"name.\" + key), null); de.lordvader.Managers.SettingsManager.saveConfig(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1097/buggy-version/src.de.lordvader.Managers.SettingsManager.java", "BodyUseAPI": ["location.getBlock().getState()", "org.bukkit.Location.getBlock()", "java.util.HashMap<org.bukkit.block.Sign, java.lang.String>.put(org.bukkit.block.Sign,java.lang.String)"], "Fixed commit": "febc6d6947adc1ce8596aa682eb6e652edcf0707", "Url": "https://api.github.com/repos/lordvaderde/SignPlugin", "Date": "2016-03-13T20:53:05Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.dd.plist.XMLPropertyListParser.FACTORY.setXIncludeAware(false); } catch (java.lang.UnsupportedOperationException e) { } catch (java.lang.NoSuchMethodError e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1151/buggy-version/src.main.java.com.dd.plist.XMLPropertyListParser.java", "BodyUseAPI": ["javax.xml.parsers.DocumentBuilderFactory.setXIncludeAware(boolean)"], "Fixed commit": "397239470910cd8c9ab8ea79c48baa9a2326099b", "Url": "https://api.github.com/repos/roremeol/dd-plist", "Date": "2017-02-06T17:14:29Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { serviceRegisterStatus.pass(); } catch (java.lang.Exception e) { com.loukou.jconsul.spring.ServiceRegisterLifecycle.LOG.warn(\"consul serivce pass error, msg: {}\", e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2940/buggy-version/jconsul-spring.src.main.java.com.loukou.jconsul.spring.ServiceRegisterLifecycle.java", "BodyUseAPI": ["com.loukou.jconsul.client.AgentRequestBuilder.RegisterStatus.pass()"], "Fixed commit": "7daa86b8040b3d1d85affd4d75199cf4ec67cc12", "Url": "https://api.github.com/repos/kdlan/jconsul", "Date": "2015-03-25T08:46:36Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { serviceRegisterStatus.fail(\"service stopped\"); } catch (java.lang.Exception e) { com.loukou.jconsul.spring.ServiceRegisterLifecycle.LOG.warn(\"consul serivce fail error, msg: {}\", e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2940/buggy-version/jconsul-spring.src.main.java.com.loukou.jconsul.spring.ServiceRegisterLifecycle.java", "BodyUseAPI": ["com.loukou.jconsul.client.AgentRequestBuilder.RegisterStatus.fail(java.lang.String)"], "Fixed commit": "7daa86b8040b3d1d85affd4d75199cf4ec67cc12", "Url": "https://api.github.com/repos/kdlan/jconsul", "Date": "2015-03-25T08:46:36Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { preferences.loadFromFile(); } catch (java.lang.Exception e1) { UnixLogger.LOGGER.warn(\"Error: could not load properties from file\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4173/buggy-version/src.com.github.unixpackage.data.Arguments.java", "BodyUseAPI": ["com.github.unixpackage.data.UnixPreferences.loadFromFile()"], "Fixed commit": "d0099754f6bcc4fd9053298bc63d6005cc673ac2", "Url": "https://api.github.com/repos/CarolinaFernandez/unixpackage", "Date": "2015-09-03T00:03:22Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { response = mRetrofitAPI.status().toBlocking().first(); } catch (java.lang.Exception ex) { android.util.Log.w(Constants.LOG_TAG, \"Error updating TBA status\"); ex.printStackTrace(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/713/buggy-version/android.src.main.java.com.thebluealliance.androidclient.datafeed.status.StatusRefreshService.java", "BodyUseAPI": ["mRetrofitAPI.status().toBlocking().first()", "mRetrofitAPI.status().toBlocking()", "com.thebluealliance.androidclient.datafeed.retrofit.APIv2.status()"], "Fixed commit": "802477bc66cc14d548aef29b0072033e55597252", "Url": "https://api.github.com/repos/phil-lopreiato/the-blue-alliance-android", "Date": "2015-12-03T20:22:11Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(1000); } catch (java.lang.InterruptedException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/744/buggy-version/LetMeInClient.src.FacialRecog.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "f9b78b1267308541a7db0197c6907e7b109df92f", "Url": "https://api.github.com/repos/philleonard/Let-Me-In", "Date": "2013-05-07T03:11:54Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { submissionDao.updateSections(section); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/587/buggy-version/src.main.java.com.siri.vresume.service.SubmsissionService.java", "BodyUseAPI": ["com.siri.vresume.dao.SubmissionDao.updateSections(com.siri.vresume.domain.Sections)"], "Fixed commit": "182693a5598af1f2bcd4815b588003af4b1c45ae", "Url": "https://api.github.com/repos/bthungapalli/vresume", "Date": "2017-11-08T17:12:26Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { pref = ve.com.abicelis.remindy.enums.TimeFormat.valueOf(tfPref); } catch (java.lang.IllegalArgumentException e) { pref = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5685/buggy-version/app.src.main.java.ve.com.abicelis.remindy.util.SharedPreferenceUtil.java", "BodyUseAPI": ["ve.com.abicelis.remindy.enums.TimeFormat.valueOf(java.lang.String)"], "Fixed commit": "fe021a3fc584dec17e320b1c0045039b501c0c91", "Url": "https://api.github.com/repos/abicelis/Remindy", "Date": "2017-05-04T04:40:00Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { pref = ve.com.abicelis.remindy.enums.DateFormat.valueOf(dfPref); } catch (java.lang.IllegalArgumentException e) { pref = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5685/buggy-version/app.src.main.java.ve.com.abicelis.remindy.util.SharedPreferenceUtil.java", "BodyUseAPI": ["ve.com.abicelis.remindy.enums.DateFormat.valueOf(java.lang.String)"], "Fixed commit": "fe021a3fc584dec17e320b1c0045039b501c0c91", "Url": "https://api.github.com/repos/abicelis/Remindy", "Date": "2017-05-04T04:40:00Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { pref = ve.com.abicelis.remindy.enums.TriggerMinutesBeforeNotificationType.valueOf(tmPref); } catch (java.lang.IllegalArgumentException e) { pref = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5685/buggy-version/app.src.main.java.ve.com.abicelis.remindy.util.SharedPreferenceUtil.java", "BodyUseAPI": ["ve.com.abicelis.remindy.enums.TriggerMinutesBeforeNotificationType.valueOf(java.lang.String)"], "Fixed commit": "fe021a3fc584dec17e320b1c0045039b501c0c91", "Url": "https://api.github.com/repos/abicelis/Remindy", "Date": "2017-05-04T04:40:00Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { pageId = getIntent().getExtras().getString(\"page_id\"); } catch (java.lang.Exception e) { pageId = \"home-not-configured\"; e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5705/buggy-version/src.main.java.com.apb.beacon.wizard.WizardActivity.java", "BodyUseAPI": ["getIntent().getExtras()", "getIntent().getExtras().getString(java.lang.String)", "com.apb.beacon.wizard.WizardActivity.getIntent()"], "Fixed commit": "8448b373a4c3a10a3b890272e24e9c126a8450f4", "Url": "https://api.github.com/repos/TeamPanicButton/PanicButton", "Date": "2014-03-24T22:28:04Z"},
{"Line": "=>447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ScheduleString = schedulearray.get(((DAYofMONTH) - 1)); NoticesParentString = titlearray_np.get(0); NoticeString = titlearray_n.get(0); } catch (java.lang.Exception e) { ScheduleString = getResources().getString(R.string.error); NoticesParentString = getResources().getString(R.string.error); NoticeString = getResources().getString(R.string.error); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4605/buggy-version/ZionHighSchool.src.main.java.com.licubeclub.zionhs.MainActivity.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)", "java.util.ArrayList<java.lang.String>.get(int)", "java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "b9f50ce7d6f888dcf093b2b40f4aad019f870b3e", "Url": "https://api.github.com/repos/sukso96100/zionhs", "Date": "2014-12-19T13:22:34Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { activeSessionKey = ((java.lang.String) (request.getSession().getAttribute(com.clickntap.smart.SmartContext.SMART_SESSION_KEY))); } catch (java.lang.Exception e1) { activeSessionKey = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6561/buggy-version/src.main.java.com.clickntap.smart.SmartContext.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getSession()", "request.getSession().getAttribute(java.lang.String)"], "Fixed commit": "914b929b28887d571292b2944960c6c7ca004ec9", "Url": "https://api.github.com/repos/clickntap/ClickFramework", "Date": "2016-09-30T09:24:58Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { view.setHeadImage(((com.service.customer.net.entity.HeadImageInfo) (baseEntity)).getAccountAvatar()); com.service.customer.components.utils.IOUtil.getInstance().deleteFile(com.service.customer.components.utils.IOUtil.getInstance().getExternalStoragePublicDirectory(com.service.customer.base.application.BaseApplication.getInstance(), com.service.customer.constant.Constant.FILE_NAME, (((Regex.LEFT_SLASH.getRegext()) + (com.service.customer.base.constant.net.RequestParameterKey.SAVE_HEAD_IMAGE)) + (Regex.IMAGE_JPG.getRegext())))); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6850/buggy-version/app.src.main.java.com.service.customer.ui.presenter.MinePresenter.java", "BodyUseAPI": ["com.service.customer.components.utils.IOUtil.getInstance().deleteFile(com.service.customer.components.utils.IOUtil.getInstance().getExternalStoragePublicDirectory(com.service.customer.base.application.BaseApplication.getInstance(), com.service.customer.constant.Constant.FILE_NAME, (((Regex.LEFT_SLASH.getRegext()) + (com.service.customer.base.constant.net.RequestParameterKey.SAVE_HEAD_IMAGE)) + (Regex.IMAGE_JPG.getRegext()))))", "Regex.LEFT_SLASH.getRegext()", "com.service.customer.components.utils.IOUtil.getInstance()", "com.service.customer.components.utils.IOUtil.getInstance().getExternalStoragePublicDirectory(com.service.customer.base.application.BaseApplication.getInstance(),com.service.customer.constant.Constant.FILE_NAME,(((Regex.LEFT_SLASH.getRegext()) + (com.service.customer.base.constant.net.RequestParameterKey.SAVE_HEAD_IMAGE)) + (Regex.IMAGE_JPG.getRegext())))", "MineContract.View.setHeadImage(((com.service.customer.net.entity.HeadImageInfo) (baseEntity)).getAccountAvatar())", "com.service.customer.components.utils.IOUtil.getInstance()", "com.service.customer.base.net.model.BaseEntity.getAccountAvatar()", "com.service.customer.base.application.BaseApplication.getInstance()", "Regex.IMAGE_JPG.getRegext()"], "Fixed commit": "10a826c8a403935fbab43450d8a137b5216c74c8", "Url": "https://api.github.com/repos/Crazy-Ann/LifeServicePlatform", "Date": "2017-08-07T11:41:52Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { proxMax = mProximity.getMaximumRange(); } catch (java.lang.Exception e) { prox = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7988/buggy-version/app.src.main.java.com.example.michael.cal.NthSense.java", "BodyUseAPI": ["android.hardware.Sensor.getMaximumRange()"], "Fixed commit": "bb6c98922432e7f9f23a83c6231a6e64560a0e7d", "Url": "https://api.github.com/repos/mbartling/Cal", "Date": "2014-11-05T16:05:50Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { jsonObject = new com.google.gson.Gson().fromJson(java.net.URLDecoder.decode(request.keyValues, \"UTF-8\"), com.google.gson.JsonObject.class); } catch (com.google.gson.JsonSyntaxException | java.io.UnsupportedEncodingException e) { throw new com.pratilipi.common.exception.UnexpectedServerException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1917/buggy-version/src.main.java.com.pratilipi.api.impl.i18n.i18nApi.java", "BodyUseAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)", "java.net.URLDecoder.decode(java.lang.String,java.lang.String)"], "Fixed commit": "7beac337ebba7284fa9e21f33540ded0189bb13e", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-12-29T13:18:18Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.pixbits.io.BinaryBuffer buffer = new com.pixbits.io.BinaryBuffer(\"/Users/jack/Documents/Dev/gba/sma-m.gba\", com.pixbits.io.BinaryBuffer.Mode.WRITE, java.nio.ByteOrder.LITTLE_ENDIAN); java.lang.System.out.println(buffer.length()); new jack.rm.files.GBASleepHack().patch(buffer); buffer.close(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8393/buggy-version/src.jack.rm.Main.java", "BodyUseAPI": ["java.io.PrintStream.println(buffer.length())", "com.pixbits.io.BinaryBuffer.length()", "com.pixbits.io.BinaryBuffer.close()", "jack.rm.files.GBASleepHack.patch(com.pixbits.io.BinaryBuffer)"], "Fixed commit": "8d77855b556411398ffb1540faf644ceb214b093", "Url": "https://api.github.com/repos/Jakz/rom-manager", "Date": "2015-07-31T01:47:31Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { clientOutput.writeObject((((\"START!@#\" + (command[1])) + \"!@#\") + (command[2]))); clientOutput.flush(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1377/buggy-version/GameOfLoyalty.src.Client.java", "BodyUseAPI": ["java.io.ObjectOutputStream.writeObject(java.lang.String)", "java.io.ObjectOutputStream.flush()"], "Fixed commit": "173dd56427f7d35eec6c7ac8accf70a62ba62759", "Url": "https://api.github.com/repos/jbrayo/cs145MP", "Date": "2014-03-27T04:51:33Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (me.ccrama.redditslide.SettingValues.immersiveMode) { final android.view.View decorView = getWindow().getDecorView(); decorView.setSystemUiVisibility(((((((android.view.View.SYSTEM_UI_FLAG_LAYOUT_STABLE) | (android.view.View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION)) | (android.view.View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN)) | (android.view.View.SYSTEM_UI_FLAG_HIDE_NAVIGATION)) | (android.view.View.SYSTEM_UI_FLAG_FULLSCREEN)) | (android.view.View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY))); decorView.setOnSystemUiVisibilityChangeListener(new android.view.View.OnSystemUiVisibilityChangeListener() { @java.lang.Override public void onSystemUiVisibilityChange(int visibility) { if (visibility == 0) { decorView.setSystemUiVisibility(((android.view.View.SYSTEM_UI_FLAG_LAYOUT_STABLE) | (android.view.View.SYSTEM_UI_FLAG_FULLSCREEN))); }else { decorView.setSystemUiVisibility(((((((android.view.View.SYSTEM_UI_FLAG_LAYOUT_STABLE) | (android.view.View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION)) | (android.view.View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN)) | (android.view.View.SYSTEM_UI_FLAG_HIDE_NAVIGATION)) | (android.view.View.SYSTEM_UI_FLAG_FULLSCREEN)) | (android.view.View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY))); } } }); } } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5464/buggy-version/app.src.main.java.me.ccrama.redditslide.Activities.BaseActivity.java", "BodyUseAPI": ["android.view.View.setSystemUiVisibility(((((((android.view.View.SYSTEM_UI_FLAG_LAYOUT_STABLE) | (android.view.View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION)) | (android.view.View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN)) | (android.view.View.SYSTEM_UI_FLAG_HIDE_NAVIGATION)) | (android.view.View.SYSTEM_UI_FLAG_FULLSCREEN)) | (android.view.View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY)))", "getWindow().getDecorView()", "android.view.View.setSystemUiVisibility(((android.view.View.SYSTEM_UI_FLAG_LAYOUT_STABLE) | (android.view.View.SYSTEM_UI_FLAG_FULLSCREEN)))", "me.ccrama.redditslide.Activities.BaseActivity.getWindow()", "android.view.View.setSystemUiVisibility(((((((android.view.View.SYSTEM_UI_FLAG_LAYOUT_STABLE) | (android.view.View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION)) | (android.view.View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN)) | (android.view.View.SYSTEM_UI_FLAG_HIDE_NAVIGATION)) | (android.view.View.SYSTEM_UI_FLAG_FULLSCREEN)) | (android.view.View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY)))", "android.view.View.setOnSystemUiVisibilityChangeListener(android.view.View.OnSystemUiVisibilityChangeListener)"], "Fixed commit": "10f6665a87b20ab5faa865e855d1ab60979887d1", "Url": "https://api.github.com/repos/mscg82/Slide", "Date": "2017-10-15T21:25:34Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.reflect.Constructor<? extends org.apache.hadoop.mapreduce.v2.app.rm.ScheduledRequests> meth = scheduledRequestsClass.getDeclaredConstructor(new java.lang.Class[]{ org.apache.hadoop.mapreduce.v2.app.rm.RMContainerAllocator.class }); meth.setAccessible(true); scheduledRequests = meth.newInstance(this); } catch (java.lang.Exception e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6886/buggy-version/hadoop-mapreduce-project.hadoop-mapreduce-client.hadoop-mapreduce-client-app.src.main.java.org.apache.hadoop.mapreduce.v2.app.rm.RMContainerAllocator.java", "BodyUseAPI": ["java.lang.reflect.Constructor<? extends org.apache.hadoop.mapreduce.v2.app.rm.ScheduledRequests>.setAccessible(boolean)", "java.lang.reflect.Constructor<? extends org.apache.hadoop.mapreduce.v2.app.rm.ScheduledRequests>.newInstance(org.apache.hadoop.mapreduce.v2.app.rm.RMContainerAllocator)", "java.lang.Class<? extends org.apache.hadoop.mapreduce.v2.app.rm.ScheduledRequests>.getDeclaredConstructor(java.lang.Class[])"], "Fixed commit": "0f607eed32879d93676342d9ae7d037e7b10136e", "Url": "https://api.github.com/repos/vmware-bdc/hadoop-common-topology", "Date": "2012-05-31T16:33:57Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { edu.wpi.cs.wpisuitetng.network.Network.getInstance().getDefaultNetworkConfiguration(); final edu.wpi.cs.wpisuitetng.network.Request request = edu.wpi.cs.wpisuitetng.network.Network.getInstance().makeRequest(\"planningpoker/planningpokersession\", HttpMethod.GET); request.addObserver(new edu.wpi.cs.wpisuitetng.modules.planningpoker.controller.GetPlanningPokerSessionRequestObserver(this)); request.send(); } catch (java.lang.RuntimeException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4529/buggy-version/PlanningPoker.src.edu.wpi.cs.wpisuitetng.modules.planningpoker.controller.GetPlanningPokerSessionController.java", "BodyUseAPI": ["edu.wpi.cs.wpisuitetng.network.Network.getInstance()", "edu.wpi.cs.wpisuitetng.network.Request.addObserver(edu.wpi.cs.wpisuitetng.modules.planningpoker.controller.GetPlanningPokerSessionRequestObserver)", "edu.wpi.cs.wpisuitetng.network.Network.getInstance()", "edu.wpi.cs.wpisuitetng.network.Network.getInstance().makeRequest(java.lang.String,HttpMethod.GET)", "edu.wpi.cs.wpisuitetng.network.Request.send()", "edu.wpi.cs.wpisuitetng.network.Network.getInstance().getDefaultNetworkConfiguration()"], "Fixed commit": "5c7abd74a000abd8a812890ec00eaa10890ea200", "Url": "https://api.github.com/repos/alexbragdon/wpi-suite", "Date": "2014-04-04T00:21:07Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.Set<java.lang.String> field_names = hit.getSource().keySet(); for (java.lang.String field_name : field_names) { if (!(result.containsKey(field_name))) { if ((hit.getSource().get(field_name)) != null) { result.put(field_name, hit.getSource().get(field_name).getClass()); } } } } catch (java.lang.Exception ex) { logger.warn((((\"Exception while handling hit:\\n\" + (hit.getSourceAsString())) + \"\\nError: \") + (ex.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/545/buggy-version/src.main.java.net.wedjaa.elasticparser.pager.ESHitsPager.java", "BodyUseAPI": ["hit.getSource().get(java.lang.String)", "hit.getSource().get(java.lang.String)", "org.elasticsearch.search.SearchHit.getSource()", "java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.String,hit.getSource().get(field_name).getClass())", "org.elasticsearch.search.SearchHit.getSource()", "hit.getSource().get(field_name).getClass()", "hit.getSource().keySet()", "java.util.Map<java.lang.String, java.lang.Class<?>>.containsKey(java.lang.String)", "org.elasticsearch.search.SearchHit.getSource()"], "Fixed commit": "7d9dd377548e98f03fa2495bf65c746088c93f41", "Url": "https://api.github.com/repos/WedjaaOpen/ElasticParser", "Date": "2015-07-27T21:20:44Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { orderDetails = ripplePublic.orderDetails(account, hash); } catch (final com.xeiam.xchange.ripple.dto.RippleException e) { if (((e.getHttpStatusCode()) == 500) && (e.getErrorType().equals(\"transaction\"))) { logger.error(\"exception reading order transaction[{}] for account[{}]\", hash, account, e); return null; }else { throw e; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1770/buggy-version/xchange-ripple.src.main.java.com.xeiam.xchange.ripple.service.polling.RippleTradeServiceRaw.java", "BodyUseAPI": ["com.xeiam.xchange.ripple.service.polling.RippleTradeServiceRaw.orderDetails(java.lang.String,java.lang.String)"], "Fixed commit": "de3a3b440b0f190dfdf7a36b8652dd253557d5ae", "Url": "https://api.github.com/repos/stachon/XChange", "Date": "2015-07-29T06:38:47Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { fsManager.closeFileSystem(fileObject.getParent().getFileSystem()); fileObject.close(); } catch (java.lang.Exception e) { org.apache.synapse.protocol.file.FilePollingConsumer.log.error((\"Unable to close the file system. \" + (e.getMessage()))); org.apache.synapse.protocol.file.FilePollingConsumer.log.error(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2143/buggy-version/modules.extensions.src.main.java.org.apache.synapse.protocol.file.FilePollingConsumer.java", "BodyUseAPI": ["org.apache.commons.vfs2.FileSystemManager.closeFileSystem(fileObject.getParent().getFileSystem())", "fileObject.getParent().getFileSystem()", "org.apache.commons.vfs2.FileObject.getParent()", "org.apache.commons.vfs2.FileObject.close()"], "Fixed commit": "37be52fa4f4f48e46ceb1247d23c31eace46206c", "Url": "https://api.github.com/repos/dushansachinda/wso2-synapse", "Date": "2014-07-18T18:24:30Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { tf.setAttribute(\"indent-number\", 4); } catch (java.lang.IllegalArgumentException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/675/buggy-version/kernel.src.main.java.com.qspin.qtaste.tcom.db.impl.ResultSetXMLConverter.java", "BodyUseAPI": ["javax.xml.transform.TransformerFactory.setAttribute(java.lang.String,int)"], "Fixed commit": "b57a424f14b76688f1b7422f40651a481a03cd39", "Url": "https://api.github.com/repos/qspin/qtaste", "Date": "2016-06-30T11:10:09Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { i = java.lang.Integer.parseInt(input.nextLine()); } catch (java.lang.Exception e) { i = -98; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8978/buggy-version/view.SplashScr.java", "BodyUseAPI": ["java.util.Scanner.nextLine()", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "e1baebbb80054f011853445b4409db8a88d22236", "Url": "https://api.github.com/repos/Nickkennedy/src", "Date": "2017-11-21T13:23:04Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { selector.restartTest(lapse); } catch (java.rmi.RemoteException e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/917/buggy-version/src.main.java.fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.java", "BodyUseAPI": ["fr.inria.spirals.npefix.resi.selector.Selector.restartTest(fr.inria.spirals.npefix.resi.context.Lapse)"], "Fixed commit": "4d50a0538622c14d9cf36f0d4656035f9d464113", "Url": "https://api.github.com/repos/Spirals-Team/npefix", "Date": "2017-07-20T07:17:21Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { gyro = new com.qualcomm.ftcrobotcontroller.opmodes.AdafruitIMU(hardwareMap, \"hydro\", ((byte) ((AdafruitIMU.BNO055_ADDRESS_A) * 2)), ((byte) (AdafruitIMU.OPERATION_MODE_IMU))); } catch (com.qualcomm.robotcore.exception.RobotCoreException e) { android.util.Log.i(\"FtcRobotController\", (\"Exception: \" + (e.getMessage()))); telemetry.addData(\"gyro\", \"fail\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1222/buggy-version/FtcRobotController.src.main.java.com.qualcomm.ftcrobotcontroller.opmodes.AutoMode.java", "BodyUseAPI": [], "Fixed commit": "9cbc476ca6f6d0a0cdd8c67a35e3492814323704", "Url": "https://api.github.com/repos/atxarib99/Hydra7161", "Date": "2016-02-10T02:51:03Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { remoteFences = getRemoteGeoFences(); } catch (java.io.IOException e) { e.printStackTrace(); mRealm.close(); return com.google.android.gms.gcm.GcmNetworkManager.RESULT_FAILURE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3164/buggy-version/app.src.main.java.de.alternadev.georenting.data.tasks.UpdateGeofencesTask.java", "BodyUseAPI": ["de.alternadev.georenting.data.tasks.UpdateGeofencesTask.getRemoteGeoFences()"], "Fixed commit": "d176a0421de55b5f5cdab3df1e714bfb35dba9e4", "Url": "https://api.github.com/repos/alternaDev/georenting-android", "Date": "2016-04-12T20:32:24Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { index = (java.lang.Integer.parseInt(split[1])) - 1; } catch (java.lang.Exception ex) { throw new MalformedTstlException(\"Are your pool variables in explicit guards formatted as: %INT,2%?\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1903/buggy-version/src.ActionEntry.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "38a1f55670acff29ae9605cb20411791ad9832f5", "Url": "https://api.github.com/repos/kkevlar/TSTL-Java", "Date": "2015-07-15T21:33:30Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.content.pm.PackageInfo pinfo = getPackageManager().getPackageInfo(this.getPackageName(), PackageManager.GET_CONFIGURATIONS); curentVersion = pinfo.versionName; } catch (android.content.pm.PackageManager e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5155/buggy-version/app.src.main.java.com.metis.meishuquan.MainActivity.java", "BodyUseAPI": ["com.metis.meishuquan.MainActivity.4.getPackageManager()", "com.metis.meishuquan.MainActivity.getPackageName()", "getPackageManager().getPackageInfo(this.getPackageName(),PackageManager.GET_CONFIGURATIONS)"], "Fixed commit": "5d6cd3f3bedd5913753eb6677f998bf3fde9e142", "Url": "https://api.github.com/repos/metisfe/MeiShuQuanAndroid", "Date": "2015-05-27T16:02:57Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (setDocumentContent(document, ((org.eclipse.ui.IEditorInput) (element)), getEncoding(element))) { setupDocument(element, document); } } catch (java.lang.Exception e) { if (e instanceof java.io.FileNotFoundException) { document = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5254/buggy-version/org.cfeclipse.cfml.src.org.cfeclipse.cfml.editors.CFDocumentProvider.java", "BodyUseAPI": ["org.cfeclipse.cfml.editors.CFDocumentProvider.getEncoding(java.lang.Object)", "org.cfeclipse.cfml.editors.CFDocumentProvider.setDocumentContent(org.cfeclipse.cfml.editors.ICFDocument,java.lang.Object,getEncoding(element))", "org.cfeclipse.cfml.editors.CFDocumentProvider.setupDocument(java.lang.Object,org.cfeclipse.cfml.editors.ICFDocument)"], "Fixed commit": "9811dbc2e395a94961c528902788718353edd962", "Url": "https://api.github.com/repos/cfeclipse/cfeclipse", "Date": "2011-09-11T08:14:42Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { inputStream.close(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4880/buggy-version/backend.src.main.java.com.sap.codeinsights.DocumentationProcessor.java", "BodyUseAPI": ["java.io.FileInputStream.close()"], "Fixed commit": "506b8ce765cdf6f199f2f4eac1f38b9063649613", "Url": "https://api.github.com/repos/Parth/code-insights", "Date": "2017-08-31T19:32:51Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { new com.github.javaparser.ast.visitor.VoidVisitorAdapter<java.lang.Object>() { @java.lang.Override public void visit(com.github.javaparser.ast.body.MethodDeclaration n, java.lang.Object args) { if (n.getComment().isPresent()) { hasComments(n); }else { noComments(n); } } }.visit(com.github.javaparser.JavaParser.parse(file), null); } catch (java.io.FileNotFoundException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4880/buggy-version/backend.src.main.java.com.sap.codeinsights.DocumentationProcessor.java", "BodyUseAPI": ["n.getComment().isPresent()", "com.sap.codeinsights.DocumentationProcessor.1.noComments(com.github.javaparser.ast.body.MethodDeclaration)", "com.github.javaparser.ast.body.MethodDeclaration.getComment()", "com.sap.codeinsights.DocumentationProcessor.1.hasComments(com.github.javaparser.ast.body.MethodDeclaration)", "com.github.javaparser.ast.visitor.VoidVisitorAdapter<java.lang.Object>.visit(com.github.javaparser.JavaParser.parse(file),<nulltype>)", "com.github.javaparser.JavaParser.parse(java.io.File)"], "Fixed commit": "506b8ce765cdf6f199f2f4eac1f38b9063649613", "Url": "https://api.github.com/repos/Parth/code-insights", "Date": "2017-08-31T19:32:51Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { getDialog().dismiss(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2304/buggy-version/Android.IrssiNotifier.src.fi.iki.murgo.irssinotifier.BackgroundAsyncTask.java", "BodyUseAPI": ["android.app.ProgressDialog.dismiss()", "fi.iki.murgo.irssinotifier.BackgroundAsyncTask<A, B, C>.getDialog()"], "Fixed commit": "f824651233730ec5feb4cb6f9eb80ec884dc62d6", "Url": "https://api.github.com/repos/murgo/IrssiNotifier", "Date": "2012-04-09T19:47:31Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { dialog.show(); if (linkify) { ((android.widget.TextView) (dialog.findViewById(android.R.id.message))).setMovementMethod(android.text.method.LinkMovementMethod.getInstance()); } } catch (android.view.WindowManager.BadTokenException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2304/buggy-version/Android.IrssiNotifier.src.fi.iki.murgo.irssinotifier.MessageBox.java", "BodyUseAPI": ["android.app.AlertDialog.findViewById(android.R.id.message)", "((android.widget.TextView) (dialog.findViewById(android.R.id.message))).setMovementMethod(android.text.method.LinkMovementMethod.getInstance())", "android.app.AlertDialog.show()", "android.text.method.LinkMovementMethod.getInstance()"], "Fixed commit": "f824651233730ec5feb4cb6f9eb80ec884dc62d6", "Url": "https://api.github.com/repos/murgo/IrssiNotifier", "Date": "2012-04-09T19:47:31Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { return new com.jcabi.github.mock.MkDeployKeys(this.storage, this.self, this.coords); } catch (final java.io.IOException ex) { throw new java.lang.IllegalStateException(ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4558/buggy-version/src.main.java.com.jcabi.github.mock.MkRepo.java", "BodyUseAPI": [], "Fixed commit": "bf9994b773242561f147df46fcf5b15342257ab2", "Url": "https://api.github.com/repos/carlosmiranda/jcabi-github", "Date": "2014-01-31T02:10:15Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(org.graalvm.compiler.hotspot.CompilationWatchDog.SPIN_TIMEOUT_MS); } catch (java.lang.InterruptedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5555/buggy-version/graal.org.graalvm.compiler.hotspot.src.org.graalvm.compiler.hotspot.CompilationWatchDog.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "1229053e031a7eff870a9900e31464a79e3d09aa", "Url": "https://api.github.com/repos/tkrodriguez/graal-core", "Date": "2017-01-26T09:11:36Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { job.downloadFailedLogs(log); } catch (java.lang.Exception e) { context.println(\"[INFO] Error while downloading log files\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2357/buggy-version/src.main.java.genepi.imputationserver.steps.ImputationMinimac3.java", "BodyUseAPI": ["genepi.hadoop.HadoopJob.downloadFailedLogs(java.lang.String)"], "Fixed commit": "78b6c0ff474ce6fd56ddbe5d7ba203bb5db5729e", "Url": "https://api.github.com/repos/genepi/imputationserver", "Date": "2017-04-28T19:27:33Z"},
{"Line": "=>918", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { gender = java.lang.Integer.parseInt(metadata.remove(\"gender\")); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5034/buggy-version/src.java.com.idega.user.business.UserApplicationEngineBean.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.remove(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "8ed4036469acbab30a343569ca9c36487cc1ee3f", "Url": "https://api.github.com/repos/idega/com.idega.user", "Date": "2017-07-03T12:51:23Z"},
{"Line": "=>931", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { final java.lang.reflect.Field setField = attrs.getClass().getDeclaredField(\"set\"); setField.setAccessible(true); final java.util.Set s = ((java.util.Set) (setField.get(attrs))); final java.util.Set t = new java.util.HashSet(s); s.clear(); s.addAll(t); } catch (final java.lang.Exception ex) { de.cismet.cids.abf.domainserver.project.cidsclass.NewCidsClassVisualPanel1.LOG.warn(\"cannot reinitialise hashcodes to ensure proper mappings\", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6837/buggy-version/abf-domainserver.src.main.java.de.cismet.cids.abf.domainserver.project.cidsclass.NewCidsClassVisualPanel1.java", "BodyUseAPI": ["java.lang.reflect.Field.setAccessible(boolean)", "java.util.Collection<de.cismet.cids.jpa.entity.cidsclass.Attribute>.getClass()", "java.lang.reflect.Field.get(java.util.Collection<de.cismet.cids.jpa.entity.cidsclass.Attribute>)", "java.util.Set.clear()", "java.util.Set.addAll(java.util.Set)", "attrs.getClass().getDeclaredField(java.lang.String)"], "Fixed commit": "248b50751e9a5f733cf5fae0a19e24ae95db5c65", "Url": "https://api.github.com/repos/cismet/abf", "Date": "2013-09-09T15:01:14Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { user = authenticatedUser.getSingleResult(); } catch (javax.persistence.NoResultException e) { java.lang.System.out.println(\"this exception should not be handled\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4671/buggy-version/src.main.java.service.EntityService.java", "BodyUseAPI": ["javax.persistence.TypedQuery<model.User>.getSingleResult()"], "Fixed commit": "237bdc76c3844f58ee950df817c8fb0830972ad8", "Url": "https://api.github.com/repos/coos88/Todo-backend", "Date": "2017-01-09T14:53:35Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { range = java.lang.Float.valueOf(txtRange.getText().toString().trim()); if (range < 1) { range = 1; txtRange.setText((range + \"\")); } } catch (java.lang.NumberFormatException e) { range = 1; txtRange.setText((range + \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5566/buggy-version/app.src.main.java.com.example.chamod.smartplanner.NewTaskActivity.java", "BodyUseAPI": ["android.widget.EditText.setText(java.lang.String)", "txtRange.getText().toString().trim()", "java.lang.Float.valueOf(txtRange.getText().toString().trim())", "android.widget.EditText.getText()", "txtRange.getText().toString()"], "Fixed commit": "17b636a811e34d7be127b4fe472a337b19481b88", "Url": "https://api.github.com/repos/ChamodDamitha/SmartPlanner", "Date": "2017-03-28T09:33:23Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { select(labels.split(\"\\\\|\"), 1); } catch (org.openqa.selenium.NoSuchElementException e) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6897/buggy-version/app.src.main.java.Main.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "Main.select(java.lang.String[],int)"], "Fixed commit": "57272802b9c0dc78b2b1494c9b41ba0c4c1c680d", "Url": "https://api.github.com/repos/cameoh/bgking", "Date": "2017-05-28T13:46:55Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { osProcessHandler.putUserDataIfAbsent(BuildManager.ALLOW_AUTOMAKE, true); } catch (java.lang.NoClassDefFoundError e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5690/buggy-version/src.krasa.grepconsole.action.OpenFileInConsoleAction.java", "BodyUseAPI": ["krasa.grepconsole.action.ProcessHandler.putUserDataIfAbsent(BuildManager.ALLOW_AUTOMAKE,boolean)"], "Fixed commit": "1d0734c5a023fd77c63233a85cf980442120c869", "Url": "https://api.github.com/repos/krasa/GrepConsole", "Date": "2014-11-03T15:59:04Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { content = new byte[(raw.length) - bodyOffset]; java.lang.System.arraycopy(raw, bodyOffset, content, 0, content.length); } catch (java.lang.NegativeArraySizeException e) { content = new byte[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/983/buggy-version/src.main.java.org.warcbase.data.ArcRecordUtils.java", "BodyUseAPI": ["java.lang.System.arraycopy(byte[],int,byte[],int,int)"], "Fixed commit": "63c3d5916d847e0e5d808b9cc759c4f492c25f47", "Url": "https://api.github.com/repos/youngbink/warcbase", "Date": "2016-06-15T14:06:15Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { userService2.insert(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4375/buggy-version/src.com.wung.springdemo.controller.UserServlet.java", "BodyUseAPI": ["com.wung.springdemo.service.UserService2.insert()"], "Fixed commit": "c6bd8947c38e2ed4538faa75da2a772ee7feada1", "Url": "https://api.github.com/repos/wungmc/springDemo", "Date": "2016-12-25T11:26:53Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { vTracker.recycle(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5491/buggy-version/src.com.yiqivr.tinderswipe.widget.FlingCardListener.java", "BodyUseAPI": ["android.view.VelocityTracker.recycle()"], "Fixed commit": "9b9ac70e7c43ecca4a9553d6ecb7b243bce800c7", "Url": "https://api.github.com/repos/lvning/TinderSwipe", "Date": "2014-09-27T02:42:20Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { vTracker.recycle(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5491/buggy-version/src.com.yiqivr.tinderswipe.widget.FlingCardListener.java", "BodyUseAPI": ["android.view.VelocityTracker.recycle()"], "Fixed commit": "9b9ac70e7c43ecca4a9553d6ecb7b243bce800c7", "Url": "https://api.github.com/repos/lvning/TinderSwipe", "Date": "2014-09-27T02:42:20Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((currentGame) < ((games.size()) - 1)) { this.setViewer(((currentGame) + 1), 0); } } catch (java.lang.NullPointerException npe) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/192/buggy-version/siemens2014.src.org.samjoey.gui.GraphicalViewer.java", "BodyUseAPI": ["java.util.LinkedList<org.samjoey.model.Game>.size()", "org.samjoey.gui.GraphicalViewer.setViewer(int,int)"], "Fixed commit": "ff8e5c67d6cc3b08d886e3643fd9f92997be7909", "Url": "https://api.github.com/repos/jmullercuber/siemens2014", "Date": "2014-08-17T17:21:24Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((currentGame) > 0) { this.setViewer(((currentGame) - 1), 0); } } catch (java.lang.NullPointerException npe) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/192/buggy-version/siemens2014.src.org.samjoey.gui.GraphicalViewer.java", "BodyUseAPI": ["org.samjoey.gui.GraphicalViewer.setViewer(int,int)"], "Fixed commit": "ff8e5c67d6cc3b08d886e3643fd9f92997be7909", "Url": "https://api.github.com/repos/jmullercuber/siemens2014", "Date": "2014-08-17T17:21:24Z"},
{"Line": "=>397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((currentPly) < (games.get(currentGame).getPlyCount())) { this.setViewer(currentGame, ((currentPly) + 1)); } } catch (java.lang.NullPointerException npe) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/192/buggy-version/siemens2014.src.org.samjoey.gui.GraphicalViewer.java", "BodyUseAPI": ["java.util.LinkedList<org.samjoey.model.Game>.get(int)", "org.samjoey.gui.GraphicalViewer.setViewer(int,int)", "games.get(currentGame).getPlyCount()"], "Fixed commit": "ff8e5c67d6cc3b08d886e3643fd9f92997be7909", "Url": "https://api.github.com/repos/jmullercuber/siemens2014", "Date": "2014-08-17T17:21:24Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((currentPly) > 0) { this.setViewer(currentGame, ((currentPly) - 1)); } } catch (java.lang.NullPointerException npe) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/192/buggy-version/siemens2014.src.org.samjoey.gui.GraphicalViewer.java", "BodyUseAPI": ["org.samjoey.gui.GraphicalViewer.setViewer(int,int)"], "Fixed commit": "ff8e5c67d6cc3b08d886e3643fd9f92997be7909", "Url": "https://api.github.com/repos/jmullercuber/siemens2014", "Date": "2014-08-17T17:21:24Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(Entity.Player.DASH_COOLDOWN); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8981/buggy-version/src.Entity.Player.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "bca694a6af5b6597b98c86dd12ca552c48afc717", "Url": "https://api.github.com/repos/arkuhn/PlatformerDemo", "Date": "2016-04-21T01:37:31Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { photoSrc = extras.getString(\"photo\"); } catch (java.lang.Exception ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4460/buggy-version/app.src.main.java.uz.samtuit.samapp.main.TourFeatureActivity.java", "BodyUseAPI": ["android.os.Bundle.getString(java.lang.String)"], "Fixed commit": "b95609578fff726dd21e6b58a60631beed3940d9", "Url": "https://api.github.com/repos/SamarkandTour/Samapp-mobile", "Date": "2016-04-23T11:27:37Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { int changedValue = java.lang.Integer.parseInt(((android.widget.EditText) (v)).getText().toString()); listPaidAmounts.put(loan, changedValue); loan.totalDue = changedValue; loan.save(); notifyDataSetChanged(); } catch (java.lang.NumberFormatException e) { android.widget.Toast.makeText(context, context.getString(R.string.error_invalid_amount), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/161/buggy-version/mifosng-android.src.main.java.com.mifos.mifosxdroid.adapters.ClientListAdapter.java", "BodyUseAPI": ["android.view.View.getText()", "com.mifos.mifosxdroid.adapters.ClientListAdapter.EditFocusChangeListener.notifyDataSetChanged()", "com.mifos.objects.db.Loan.save()", "((android.widget.EditText) (v)).getText().toString()", "java.util.Map<com.mifos.objects.db.Loan, java.lang.Integer>.put(com.mifos.objects.db.Loan,int)", "java.lang.Integer.parseInt(((android.widget.EditText) (v)).getText().toString())"], "Fixed commit": "9bc2032717999d34753545aac385cad9231be839", "Url": "https://api.github.com/repos/openMF/android-client", "Date": "2014-07-09T19:35:33Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { while ((iterator.hasNext()) && ((currentBatchSteps.get()) < (batchSize))) { T next = iterator.next(); totalSteps.incrementAndGet(); unitOfWork.execute(database, next, batchNo, currentBatchSteps.incrementAndGet()); } } catch (java.util.NoSuchElementException | java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3113/buggy-version/tx-executor.src.main.java.com.graphaware.tx.executor.batch.IterableInputBatchTransactionExecutor.java", "BodyUseAPI": ["java.util.Iterator<T>.next()", "java.util.Iterator<T>.hasNext()", "java.util.concurrent.atomic.AtomicInteger.get()", "com.graphaware.tx.executor.batch.UnitOfWork<T>.execute(org.neo4j.graphdb.GraphDatabaseService,T,int,int)", "java.util.concurrent.atomic.AtomicInteger.incrementAndGet()", "java.util.concurrent.atomic.AtomicInteger.incrementAndGet()"], "Fixed commit": "b4a873599f87702500f45616c08c8d7a4d83c800", "Url": "https://api.github.com/repos/leusonmario/neo4j-framework", "Date": "2014-09-01T17:15:24Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (topic) { revisions = org.jboss.pressgang.ccms.contentspec.utils.EntityUtilities.getTopicRevisionsById(getProviderFactory().getProvider(org.jboss.pressgang.ccms.provider.TopicProvider.class), getIds().get(0)); }else { revisions = org.jboss.pressgang.ccms.contentspec.utils.ContentSpecUtilities.getContentSpecRevisionsById(getProviderFactory().getProvider(org.jboss.pressgang.ccms.provider.ContentSpecProvider.class), getIds().get(0)); } } catch (org.jboss.pressgang.ccms.provider.exception.NotFoundException e) { printErrorAndShutdown(Constants.EXIT_FAILURE, Constants.ERROR_NO_ID_FOUND_MSG, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8578/buggy-version/src.main.java.org.jboss.pressgang.ccms.contentspec.client.commands.RevisionsCommand.java", "BodyUseAPI": ["org.jboss.pressgang.ccms.contentspec.utils.ContentSpecUtilities.getContentSpecRevisionsById(getProviderFactory().getProvider(org.jboss.pressgang.ccms.provider.ContentSpecProvider.class),java.lang.Integer)", "org.jboss.pressgang.ccms.contentspec.client.commands.RevisionsCommand.getProviderFactory()", "getProviderFactory().getProvider(java.lang.Class)", "java.util.List<java.lang.Integer>.get(int)", "org.jboss.pressgang.ccms.contentspec.client.commands.RevisionsCommand.getIds()", "org.jboss.pressgang.ccms.contentspec.utils.EntityUtilities.getTopicRevisionsById(getProviderFactory().getProvider(org.jboss.pressgang.ccms.provider.TopicProvider.class),java.lang.Integer)", "org.jboss.pressgang.ccms.contentspec.client.commands.RevisionsCommand.getIds()", "getProviderFactory().getProvider(java.lang.Class)", "org.jboss.pressgang.ccms.contentspec.client.commands.RevisionsCommand.getProviderFactory()", "java.util.List<java.lang.Integer>.get(int)"], "Fixed commit": "cb4b980633fb806e7f56ef08b71e7185649ad89d", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSCSPClient", "Date": "2013-09-03T06:16:08Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { action.execute(); } catch (java.lang.Throwable tt) { if (!(resetting)) throw tt; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4248/buggy-version/ServerV0000.src.org.reldb.rel.v0.engine.Rel.java", "BodyUseAPI": ["org.reldb.rel.v0.engine.Rel.Action.execute()"], "Fixed commit": "961c9bc3e21cfb06e38bbda05ec58e7f6804d05f", "Url": "https://api.github.com/repos/DaveVoorhis/Rel", "Date": "2017-03-04T11:39:04Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return com.sk89q.craftbook.mech.HeadDrops.MobSkullType.valueOf(entType.name()); } catch (java.lang.Exception e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6915/buggy-version/src.main.java.com.sk89q.craftbook.mech.HeadDrops.java", "BodyUseAPI": ["org.bukkit.entity.EntityType.name()", "com.sk89q.craftbook.mech.HeadDrops.MobSkullType.valueOf(entType.name())"], "Fixed commit": "933ac812d7b46bd857865fc4509ca7ba2e1af29a", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2013-05-18T23:26:57Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.isanwenyu.tabview.TabView.SavedState ss = ((com.isanwenyu.tabview.TabView.SavedState) (state)); super.onRestoreInstanceState(ss.getSuperState()); setChecked(ss.checked); requestLayout(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7083/buggy-version/tabview.src.main.java.com.isanwenyu.tabview.TabView.java", "BodyUseAPI": ["com.isanwenyu.tabview.TabView.setChecked(boolean)", "com.isanwenyu.tabview.TabView.SavedState.getSuperState()", "com.isanwenyu.tabview.TabView.requestLayout()", "com.andexert.library.RippleView.onRestoreInstanceState(ss.getSuperState())"], "Fixed commit": "5556a2539166ff8ae5250ee7fab749e2fcaf9392", "Url": "https://api.github.com/repos/isanwenyu/TabView", "Date": "2016-11-04T09:59:56Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { javax.swing.UIManager.setLookAndFeel(\"com.jtattoo.plaf.texture.TextureLookAndFeel\"); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/1917/buggy-version/src.main.paddletask.ui.view.MainFrame.java", "BodyUseAPI": ["javax.swing.UIManager.setLookAndFeel(java.lang.String)"], "Fixed commit": "c9a58813d0359346c53582ab6582582bcba9353b", "Url": "https://api.github.com/repos/cs2103aug2015-f10-3j/main", "Date": "2015-11-07T20:26:13Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { info = princeTron.UserInterface.Profile.setProfileString(profile); } catch (java.lang.Exception e) { info = \"The Server is down. Please try again.\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2672/buggy-version/src.princeTron.UserInterface.Profile.java", "BodyUseAPI": ["princeTron.UserInterface.Profile.setProfileString(int[])"], "Fixed commit": "3578128667c681035381e41d4bd17584c6b3b331", "Url": "https://api.github.com/repos/44maagnum/princetron_android", "Date": "2012-05-13T23:13:37Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return io.vertx.redis.RedisEncoding.encode(result); } catch (java.lang.Throwable th) { err = th; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/1142/buggy-version/src.main.java.io.vertx.redis.impl.DumpHandler.java", "BodyUseAPI": ["io.vertx.redis.RedisEncoding.encode(java.lang.String)"], "Fixed commit": "bda599307b6621ac26dd70f07994ec7199cf0156", "Url": "https://api.github.com/repos/mstruk/vertx-redis-service", "Date": "2015-02-26T11:15:38Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.json.JSONArray toppings_array = json.getJSONArray(com.gymkhana.iitbeats.items.MenuItem.JsonKeys.TOPPINGS); for (int index = 0; index < (toppings_array.length()); index++) { toppings.add(toppings_array.getInt(index)); } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8284/buggy-version/src.main.java.com.gymkhana.iitbeats.items.MenuItem.java", "BodyUseAPI": ["org.json.JSONArray.length()", "org.json.JSONObject.getJSONArray(java.lang.String)", "org.json.JSONArray.getInt(int)", "java.util.List<java.lang.Integer>.add(toppings_array.getInt(index))"], "Fixed commit": "ce6ccf3cc993f92314bc615e6f74e4853d4af385", "Url": "https://api.github.com/repos/the-coders-hub/IITBEats-AndroidClient", "Date": "2015-09-13T05:54:46Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { policy = findPolicy(context, pid); } catch (org.fcrepo.server.security.xacml.pdp.data.PolicyStoreException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4337/buggy-version/fcrepo-security.fcrepo-security-pdp.src.main.java.org.fcrepo.server.security.xacml.pdp.finder.policy.RightsMetadataPolicyFinderModule.java", "BodyUseAPI": ["org.fcrepo.server.security.xacml.pdp.finder.policy.RightsMetadataPolicyFinderModule.findPolicy(com.sun.xacml.EvaluationCtx,java.lang.String)"], "Fixed commit": "f62e496eea2212b89768ef23ae3f95ec6cce23bc", "Url": "https://api.github.com/repos/fcrepo/fcrepo", "Date": "2012-09-11T14:15:34Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { shape.setEndPoint(new java.awt.Point(e.getX(), e.getY())); addCurShape(shape); this.shape = null; this.repaint(); } catch (java.lang.NullPointerException ne) { java.lang.System.out.println(\"Error in getting the coordinations of the mouse.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4289/buggy-version/src.model.PanelPaint.java", "BodyUseAPI": ["model.PanelPaint.addCurShape(java.awt.Shape)", "java.awt.event.MouseEvent.getX()", "java.awt.Shape.setEndPoint(java.awt.Point)", "java.awt.event.MouseEvent.getY()", "model.PanelPaint.repaint()"], "Fixed commit": "a2d454fae99871a40ff8f2c60204cee831a62d44", "Url": "https://api.github.com/repos/alirezameftahi71/JavaPaint", "Date": "2017-10-07T11:05:08Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return userService.getUser(getLoggedInUsername()).isAdmin(); } catch (at.fhj.swd13.pse.db.EntityNotFoundException e) { org.primefaces.context.RequestContext context = org.primefaces.context.RequestContext.getCurrentInstance(); logger.info((((\"[LOGIN] isAdmin failed for \" + (username)) + \" from \") + (context.toString()))); javax.faces.application.FacesMessage message = new javax.faces.application.FacesMessage(javax.faces.application.FacesMessage.SEVERITY_WARN, \"GetIsAdmin Error\", \"Invalid user\"); javax.faces.context.FacesContext.getCurrentInstance().addMessage(null, message); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/927/buggy-version/pse-dbmodell.src.main.java.at.fhj.swd13.pse.controller.LoginController.java", "BodyUseAPI": ["at.fhj.swd13.pse.domain.user.UserService.getUser(java.lang.String)", "userService.getUser(getLoggedInUsername()).isAdmin()", "at.fhj.swd13.pse.controller.LoginController.getLoggedInUsername()"], "Fixed commit": "1384ca143560bde5da42b240e8cddba5e71c14ee", "Url": "https://api.github.com/repos/chr-krenn/fhj-ws2015-sd13-pse", "Date": "2015-10-18T13:33:20Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { bus.post(new com.gdziejestes.model.entities.Accounts.RefreshRequest(mainUser.getUsername(), mainUser.getPassword(), application.getAuth().getFirebaseToken(), getLat(), getLng())); } catch (java.lang.Exception e) { android.widget.Toast.makeText(this, \"Aby od\u015bwie\u017cy\u0107 musisz w\u0142\u0105czy\u0107 GPS\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3094/buggy-version/app.src.main.java.com.gdziejestes.ui.mainactivity.MainActivity.java", "BodyUseAPI": ["com.gdziejestes.model.User.getUsername()", "com.gdziejestes.ui.mainactivity.MainActivity.getAuth()", "com.gdziejestes.ui.mainactivity.MainActivity.post(com.gdziejestes.model.entities.Accounts.RefreshRequest)", "com.gdziejestes.ui.mainactivity.MainActivity.getLng()", "com.gdziejestes.model.User.getPassword()", "application.getAuth().getFirebaseToken()", "com.gdziejestes.ui.mainactivity.MainActivity.getLat()"], "Fixed commit": "68cb4eafbb6edf91aa0ceec9c3c75d2d28c687c5", "Url": "https://api.github.com/repos/Faelivrinx/GdzieJestes", "Date": "2017-04-26T15:05:02Z"},
{"Line": "=>515", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { return new org.spongepowered.tools.obfuscation.TypeHandle(element); } catch (java.lang.NullPointerException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7858/buggy-version/src.ap.java.org.spongepowered.tools.obfuscation.AnnotatedMixins.java", "BodyUseAPI": [], "Fixed commit": "49fd7e3da79017947a4527c465fa03481783e0f2", "Url": "https://api.github.com/repos/SpongePowered/Mixin", "Date": "2015-04-13T02:14:48Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return (outcome.longValue()) == (java.lang.Long.parseLong(expected.toString())); } catch (java.lang.NumberFormatException ex) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4054/buggy-version/src.main.java.ru.stqa.selenium.legrc.runner.steps.NumberOutcome.java", "BodyUseAPI": ["java.lang.Number.longValue()", "java.lang.Long.parseLong(java.lang.String)", "java.lang.Object.toString()"], "Fixed commit": "8693b2604626ebf733ecb0de646e89afb62de8f3", "Url": "https://api.github.com/repos/barancev/selenium3-html-suite-runner", "Date": "2016-01-08T09:38:30Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { residueCounter = startingPositions.get(chain); } catch (java.lang.NullPointerException e) { java.lang.System.out.println((\"Check file: \" + (aFile.getAbsolutePath()))); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2841/buggy-version/structures.src.main.java.org.semanticscience.narf.structures.lib.PdbHelper.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"], "Fixed commit": "1a12927edce656c23943a1e30ee250742b19acdb", "Url": "https://api.github.com/repos/jctoledo/narf", "Date": "2014-01-07T02:24:12Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { state = java.net.URLEncoder.encode(java.net.URLEncoder.encode(state, \"UTF-8\"), \"UTF-8\"); } catch (java.io.UnsupportedEncodingException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2517/buggy-version/src.main.java.space.pxls.auth.VKAuthService.java", "BodyUseAPI": ["java.net.URLEncoder.encode(java.lang.String,java.lang.String)", "java.net.URLEncoder.encode(java.lang.String,java.lang.String)"], "Fixed commit": "b8362173e636f14219f3ab59323a8d0709a2b4cc", "Url": "https://api.github.com/repos/xSke/Pxls", "Date": "2017-11-23T18:30:22Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { copy = source.getClass().newInstance(); } catch (java.lang.InstantiationException e) { copy = new java.util.ArrayList<T>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/41/buggy-version/src.main.src.main.java.org.geoserver.catalog.impl.ModificationProxyCloner.java", "BodyUseAPI": ["java.util.Collection<T>.getClass()", "java.lang.Class<? extends java.util.Collection>.newInstance()"], "Fixed commit": "bb906cdfe0ea81bcaaf0d5b78963ecd52094dedc", "Url": "https://api.github.com/repos/NielsCharlier/geoserver", "Date": "2016-01-29T16:31:00Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.reflect.Constructor<? extends org.openflexo.gina.controller.FIBController> c = fibComponent.getControllerClass().getConstructor(org.openflexo.gina.model.FIBComponent.class, org.openflexo.gina.view.GinaViewFactory.class); returned = c.newInstance(fibComponent, viewFactory); } catch (java.lang.NoSuchMethodException e) { java.lang.reflect.Constructor<? extends org.openflexo.gina.controller.FIBController> c = fibComponent.getControllerClass().getConstructor(org.openflexo.gina.model.FIBComponent.class); returned = c.newInstance(fibComponent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7126/buggy-version/gina-api.src.main.java.org.openflexo.gina.controller.FIBController.java", "BodyUseAPI": ["org.openflexo.gina.model.FIBComponent.getControllerClass()", "java.lang.reflect.Constructor<? extends org.openflexo.gina.controller.FIBController>.newInstance(org.openflexo.gina.model.FIBComponent,org.openflexo.gina.view.GinaViewFactory<?>)", "fibComponent.getControllerClass().getConstructor(java.lang.Class,java.lang.Class)"], "Fixed commit": "3883ac98f07ee606fb3848ddce691ba24351e70d", "Url": "https://api.github.com/repos/openflexo-team/gina", "Date": "2016-04-26T15:41:52Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((progressDialog) == null) { progressDialog = new android.app.ProgressDialog(context); progressDialog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL); progressDialog.setMessage(\"Loading...\"); progressDialog.setCancelable(false); progressDialog.show(); } progressDialog.setProgress(args[0]); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8112/buggy-version/src.main.java.net.hockeyapp.android.internal.DownloadFileTask.java", "BodyUseAPI": ["android.app.ProgressDialog.setMessage(java.lang.String)", "android.app.ProgressDialog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL)", "android.app.ProgressDialog.setCancelable(boolean)", "android.app.ProgressDialog.show()", "android.app.ProgressDialog.setProgress(java.lang.Integer)"], "Fixed commit": "91566eaf005bd0878fe1d6e4b492654d10a022f7", "Url": "https://api.github.com/repos/jobi/HockeySDK-Android", "Date": "2012-06-15T13:22:59Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.openqa.selenium.support.ui.WebDriverWait wait = new org.openqa.selenium.support.ui.WebDriverWait(driver, time_wait); if ((wait.until(org.openqa.selenium.support.ui.ExpectedConditions.alertIsPresent())) == null) return false; else return true; } catch (org.openqa.selenium.TimeoutException e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7743/buggy-version/web.src.web.Client.java", "BodyUseAPI": ["org.openqa.selenium.support.ui.WebDriverWait.until(org.openqa.selenium.support.ui.ExpectedConditions.alertIsPresent())", "org.openqa.selenium.support.ui.ExpectedConditions.alertIsPresent()"], "Fixed commit": "f328d2942b376192c7c59dac377eb9f69deb451a", "Url": "https://api.github.com/repos/mikh/WebClient-Library-Java", "Date": "2014-07-18T20:27:25Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { switch (com.gluonhq.charm.down.common.JavaFXPlatform.getCurrent()) { case ANDROID : return \"com.floopflop.AndroidNativePlatform\"; case IOS : return \"com.floopflop.IosNativePlatform\"; default : return \"com.floopflop.DesktopNativePlatform\"; } } catch (java.lang.NoClassDefFoundError e) { return \"com.floopflop.DesktopNativePlatform\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4705/buggy-version/src.main.java.com.floopflop.PlatformFactory.java", "BodyUseAPI": ["com.gluonhq.charm.down.common.JavaFXPlatform.getCurrent()"], "Fixed commit": "42c66974a2bedee28575058e9dc70267e91eb041", "Url": "https://api.github.com/repos/SudoTavo/FloopFlop9000", "Date": "2016-06-25T22:46:51Z"},
{"Line": "=>564", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { ret = new com.android.internal.telephony.gsm.GsmSmsAddress(pdu, cur, lengthBytes); } catch (java.text.ParseException e) { android.util.Log.e(com.android.internal.telephony.gsm.SmsMessage.LOG_TAG, e.getMessage()); ret = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1027/buggy-version/src.java.com.android.internal.telephony.gsm.SmsMessage.java", "BodyUseAPI": [], "Fixed commit": "069e7bdfbd01fb8b7d5dc31235681012da3c41f9", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-frameworks-base", "Date": "2012-08-20T20:51:16Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((url == null) || ((url.length()) == 0)) { printWriter.write((\"Incorrect address SPARQL endpoing. \" + \"Return on main page and try again.\")); }else { session.Session.setURL(url); util.Drools.fireAllRules(url); printWriter.write(data.ResultData.getResultData()); } } catch (java.lang.Exception e) { util.Logging.writeMessage(e.getMessage()); printWriter.write(e.getMessage()); printWriter.write(\"Error proccessing rules. Try again\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5906/buggy-version/src.main.java.servlet.ExecuteServlet.java", "BodyUseAPI": ["session.Session.setURL(java.lang.String)", "java.lang.String.length()", "data.ResultData.getResultData()", "java.io.PrintWriter.write(java.lang.String)", "util.Drools.fireAllRules(java.lang.String)", "java.io.PrintWriter.write(data.ResultData.getResultData())"], "Fixed commit": "ed0ca2bb295e5c983e9e9398a18255385d76a6bf", "Url": "https://api.github.com/repos/epidemia/webformforextractor", "Date": "2016-08-18T05:07:42Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { if (dateLexer.scanISO8601DateIfMatch()) { longVal = dateLexer.getCalendar().getTimeInMillis(); }else { java.text.DateFormat dateFormat = parser.getDateFormat(); try { java.util.Date date = ((java.util.Date) (dateFormat.parse(strVal))); java.sql.Timestamp sqlDate = new java.sql.Timestamp(date.getTime()); return ((T) (sqlDate)); } catch (java.text.ParseException e) { } longVal = java.lang.Long.parseLong(strVal); } } finally { dateLexer.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3477/buggy-version/src.main.java.com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer.java", "BodyUseAPI": ["com.alibaba.fastjson.parser.JSONScanner.scanISO8601DateIfMatch()", "java.lang.Long.parseLong(java.lang.String)", "java.text.DateFormat.parse(java.lang.String)", "com.alibaba.fastjson.parser.JSONScanner.getCalendar()", "com.alibaba.fastjson.parser.DefaultJSONParser.getDateFormat()", "dateLexer.getCalendar().getTimeInMillis()", "java.util.Date.getTime()"], "Fixed commit": "da11393b60592ba63d6e7b731806ae2151ee7218", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-04-15T09:48:07Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { tuple = sourceElement.source(key, value); } catch (cascading.flow.stack.StackException exception) { if ((exception.getCause()) instanceof java.lang.Error) throw ((java.lang.Error) (exception.getCause())); if ((exception.getCause()) instanceof java.io.IOException) throw ((java.io.IOException) (exception.getCause())); throw ((java.lang.RuntimeException) (exception.getCause())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3552/buggy-version/src.core.cascading.flow.stack.FlowMapperStack.java", "BodyUseAPI": ["cascading.flow.stack.SourceMapperStackElement.source(java.lang.Object,java.lang.Object)"], "Fixed commit": "862a6694e37afcaa5598b70e9ed8d6d6e16a98e5", "Url": "https://api.github.com/repos/cwensel/cascading", "Date": "2011-03-18T21:24:19Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.github.endercrypt.ytddb.backend.Backend.init(com.github.endercrypt.ytddb.Main.PORT); } catch (java.net.BindException e) { java.lang.Thread.sleep(1); java.lang.System.err.println(((\"ERROR, Port \" + (com.github.endercrypt.ytddb.Main.PORT)) + \" already in use\")); java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2051/buggy-version/src.com.github.endercrypt.ytddb.Main.java", "BodyUseAPI": ["com.github.endercrypt.ytddb.backend.Backend.init(int)"], "Fixed commit": "e7978ebe72eb1195ef9cc1b66e0f7b1678fa2f47", "Url": "https://api.github.com/repos/EnderCrypt/DistributedYoutubeMiner", "Date": "2016-07-23T08:03:17Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (java.util.Map.Entry<java.lang.Integer, java.util.concurrent.Future<java.lang.String>> entry : results.entrySet()) { map.put(entry.getKey(), entry.getValue().get()); } } catch (java.lang.InterruptedException e) { e.printStackTrace(); } catch (java.util.concurrent.ExecutionException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3462/buggy-version/src.info.dyndns.overflow.java.AbstractConcurrentFizzBuzz.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, java.util.concurrent.Future<java.lang.String>>.entrySet()", "java.util.Map<java.lang.Integer, java.lang.String>.put(java.lang.Integer,java.lang.String)", "java.util.concurrent.Future<java.lang.String>.get()", "java.util.Map.Entry<java.lang.Integer, java.util.concurrent.Future<java.lang.String>>.getValue()", "java.util.Map.Entry<java.lang.Integer, java.util.concurrent.Future<java.lang.String>>.getKey()"], "Fixed commit": "f0d504229329cea5d2f9aa4aafc190c05cac55c1", "Url": "https://api.github.com/repos/tsuyoshicho/FizzBuzzJava", "Date": "2017-09-27T14:25:48Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { conf.registerSerialization(java.lang.Class.forName(\"storm.trident.testing.MemoryMapState.MemoryMapStateBacking\")); } catch (java.lang.ClassNotFoundException ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/626/buggy-version/src.jvm.storm.bdconsistency.CounterTopology.java", "BodyUseAPI": ["backtype.storm.Config.registerSerialization(java.lang.Class<?>)", "java.lang.Class.forName(java.lang.String)"], "Fixed commit": "617cabca6bb217411357a6ca0998e3b3e644b64d", "Url": "https://api.github.com/repos/lbhat1/BDConsistency", "Date": "2013-10-14T21:37:43Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.hindrik.Main.moviesOutput.close(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5525/buggy-version/src.com.hindrik.Main.java", "BodyUseAPI": ["java.io.BufferedWriter.close()"], "Fixed commit": "f662033ce8a44e8fa29e91a9e341cc80df32bf12", "Url": "https://api.github.com/repos/Hindrik1997/IMDB-Ratings.list-Parser", "Date": "2017-01-13T09:18:16Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.hindrik.Main.seriesOutput.close(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5525/buggy-version/src.com.hindrik.Main.java", "BodyUseAPI": ["java.io.BufferedWriter.close()"], "Fixed commit": "f662033ce8a44e8fa29e91a9e341cc80df32bf12", "Url": "https://api.github.com/repos/Hindrik1997/IMDB-Ratings.list-Parser", "Date": "2017-01-13T09:18:16Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.support.v4.app.NotificationCompat.Builder builder = new android.support.v4.app.NotificationCompat.Builder(com.yy.httpproxy.service.ForegroundService.instance); builder.setPriority(Notification.PRIORITY_MIN); com.yy.httpproxy.service.ForegroundService.instance.startForeground(12345, builder.build()); } catch (java.lang.Exception e) { com.yy.httpproxy.util.Log.e(TAG, \"beginForeground error\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6750/buggy-version/android-push-sdk.src.main.java.com.yy.httpproxy.service.ForegroundService.java", "BodyUseAPI": ["NotificationCompat.Builder.build()", "NotificationCompat.Builder.setPriority(Notification.PRIORITY_MIN)", "com.yy.httpproxy.service.ConnectionService.startForeground(int,builder.build())"], "Fixed commit": "e96a8795b68c6effbf463c36d6d530544e6ba42d", "Url": "https://api.github.com/repos/xuduo/socket.io-push-android", "Date": "2016-09-13T08:30:27Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (((combinationFilter) != null) && (c.evalGroovyExpression(axisList, combinationFilter))) { configuration.put(c, true); }else { configuration.put(c, false); } } catch (java.lang.Exception e) { configuration.put(c, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5465/buggy-version/src.main.java.com.redhat.engineering.jenkins.report.plugin.results.Filter.java", "BodyUseAPI": ["java.util.Map<hudson.matrix.Combination, java.lang.Boolean>.put(hudson.matrix.Combination,boolean)", "hudson.matrix.Combination.evalGroovyExpression(hudson.matrix.AxisList,java.lang.String)", "java.util.Map<hudson.matrix.Combination, java.lang.Boolean>.put(hudson.matrix.Combination,boolean)"], "Fixed commit": "ae7fa48a362eb5a322933243aa9008337b49a3ea", "Url": "https://api.github.com/repos/jrusnack/reportPlugin", "Date": "2012-05-24T08:35:24Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.akquinet.audit.bsi.httpd.usersNrights.Quest9._uc.printExample(_serverRoot); } catch (java.lang.NullPointerException e) { throw new java.lang.RuntimeException(org.akquinet.audit.bsi.httpd.usersNrights.Quest9.SERVER_ROOT_NOT_SET, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1064/buggy-version/ApacheBSIAuditHelper.src.org.akquinet.audit.bsi.httpd.usersNrights.Quest9.java", "BodyUseAPI": ["org.akquinet.audit.ui.UserCommunicator.printExample(java.lang.String)"], "Fixed commit": "fe9fb2d678a620d7ec308e61a0a27ba11877708d", "Url": "https://api.github.com/repos/inspector-cochise/cochise", "Date": "2011-05-20T10:30:53Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { saveBill(); } catch (java.text.ParseException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6279/buggy-version/app.src.main.java.android.com.minus.activities.AddBillActivity.java", "BodyUseAPI": ["android.com.minus.activities.AddBillActivity.2.saveBill()"], "Fixed commit": "ab0710d32d29755f55bea160a367088a1b1c38d9", "Url": "https://api.github.com/repos/for3v3rInFriendZone/MiNuSAndroid", "Date": "2017-05-15T19:21:51Z"},
{"Line": "=>2044", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(1000); } catch (java.lang.InterruptedException ex) { java.lang.Thread.currentThread().interrupt(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1141/buggy-version/src.net.sf.memoranda.ui.htmleditor.HTMLEditor.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "b469005446ab315489831f5b34d8da4304591ff3", "Url": "https://api.github.com/repos/ser316asu/Dahlem_SER316", "Date": "2017-03-30T19:31:13Z"},
{"Line": "=>495", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { bean.setMessage(nnn.tickerText.toString()); bean.setAppName(ctx.getPackageManager().getApplicationLabel(ai).toString()); } catch (java.lang.Exception ex) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2852/buggy-version/PopupNotifications.src.com.bun.popupnotifications.NotificationParser.java", "BodyUseAPI": ["nnn.tickerText.toString()", "com.bun.popupnotifications.NotificationBean.setAppName(ctx.getPackageManager().getApplicationLabel(ai).toString())", "android.content.Context.getPackageManager()", "ctx.getPackageManager().getApplicationLabel(ai).toString()", "com.bun.popupnotifications.NotificationBean.setMessage(nnn.tickerText.toString())", "ctx.getPackageManager().getApplicationLabel(android.content.pm.ApplicationInfo)"], "Fixed commit": "866a5741d5a43745871f4a25613738491f0d50bc", "Url": "https://api.github.com/repos/vikrammiddha/PopupNotifications", "Date": "2013-11-23T18:19:35Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { java.net.ServerSocket serverSocket = new java.net.ServerSocket(42423); } catch (java.io.IOException e) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/721/buggy-version/StudentProgram.src.studentprogram.MainClass.java", "BodyUseAPI": [], "Fixed commit": "1d0d072728d7b16c5a3d313e55f74e85edfa4e80", "Url": "https://api.github.com/repos/samg2014/StudentProgram", "Date": "2014-08-27T23:17:36Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { trying = (((((se.mah.kingdom_v02.ResourcesKingdom.getFood()) <= 0) || ((se.mah.kingdom_v02.ResourcesKingdom.getGold()) <= 0)) || ((se.mah.kingdom_v02.ResourcesKingdom.getHappy()) <= 0)) || ((se.mah.kingdom_v02.ResourcesKingdom.getAmountOfEventsMade()) >= (se.mah.kingdom_v02.ResourcesKingdom.getMaxEvents()))) ? true : false; } catch (java.lang.Exception e) { trying = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3118/buggy-version/kingdom_v02.src.se.mah.kingdom_v02.ResourcesKingdom.java", "BodyUseAPI": ["se.mah.kingdom_v02.ResourcesKingdom.getMaxEvents()", "se.mah.kingdom_v02.ResourcesKingdom.getGold()", "se.mah.kingdom_v02.ResourcesKingdom.getAmountOfEventsMade()", "se.mah.kingdom_v02.ResourcesKingdom.getHappy()", "se.mah.kingdom_v02.ResourcesKingdom.getFood()"], "Fixed commit": "dc3403677fb105bc042d256ea6292572cbfc11b0", "Url": "https://api.github.com/repos/mynario/IntrusiveGame", "Date": "2014-01-16T11:04:54Z"},
{"Line": "=>537", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String location = \"\\\\src\\\\Maintance\\\\Reports\\\\OrderParts.jrxml\"; java.lang.System.err.println(location); java.lang.String query = \"SELECT * FROM Order_Part\"; MainSystem.MainWindow.autoReport.Query2Report(location, query); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3421/buggy-version/ERP_Garment_Ver-1.src.Maintance.OrderParts.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "Maintance.OrderParts.Query2Report(java.lang.String,java.lang.String)"], "Fixed commit": "d90ab1728ebffb851d8750cd073094000083f535", "Url": "https://api.github.com/repos/Dinushka95/ERP_Garment_Ver-1", "Date": "2017-05-08T02:54:16Z"},
{"Line": "=>525", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String location = (java.lang.System.getProperty(\"user.dir\")) + \"\\\\src\\\\Maintance\\\\Reports\\\\OrderParts.jrxml\"; java.lang.System.err.println(location); java.lang.String query = \"SELECT * FROM Order_Part\"; MainSystem.MainWindow.autoReport.Query2Report(location, query); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3421/buggy-version/ERP_Garment_Ver-1.src.Maintance.OrderParts.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "Maintance.OrderParts.Query2Report(java.lang.String,java.lang.String)", "java.lang.System.getProperty(java.lang.String)"], "Fixed commit": "d90ab1728ebffb851d8750cd073094000083f535", "Url": "https://api.github.com/repos/Dinushka95/ERP_Garment_Ver-1", "Date": "2017-05-08T02:54:16Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { getOutputStream(); } catch (final java.lang.IllegalStateException e) { writer = super.getWriter(); return writer; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4731/buggy-version/javamelody-core.src.main.java.net.bull.javamelody.FilterServletResponseWrapper.java", "BodyUseAPI": ["net.bull.javamelody.FilterServletResponseWrapper.getOutputStream()"], "Fixed commit": "1c6df051892769398917d78a96d7e35beba674e3", "Url": "https://api.github.com/repos/javamelody/javamelody", "Date": "2015-08-06T06:24:03Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return expr.resolveType(scope); } catch (java.lang.NullPointerException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8356/buggy-version/src.eclipseAgent.lombok.eclipse.agent.PatchVal.java", "BodyUseAPI": ["org.eclipse.jdt.internal.compiler.ast.Expression.resolveType(org.eclipse.jdt.internal.compiler.lookup.BlockScope)"], "Fixed commit": "c4761096715a8388e683b9b7f86f2c6a3be4f7a0", "Url": "https://api.github.com/repos/rzwitserloot/lombok", "Date": "2014-02-27T01:57:00Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return expr.resolveType(scope); } catch (java.lang.NullPointerException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8356/buggy-version/src.eclipseAgent.lombok.eclipse.agent.PatchVal.java", "BodyUseAPI": ["org.eclipse.jdt.internal.compiler.ast.Expression.resolveType(org.eclipse.jdt.internal.compiler.lookup.BlockScope)"], "Fixed commit": "c4761096715a8388e683b9b7f86f2c6a3be4f7a0", "Url": "https://api.github.com/repos/rzwitserloot/lombok", "Date": "2014-02-27T01:57:00Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { resolved = (decomponent) ? lombok.eclipse.agent.PatchVal.getForEachComponentType(init, scope) : init.resolveType(scope); } catch (java.lang.NullPointerException e) { resolved = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8356/buggy-version/src.eclipseAgent.lombok.eclipse.agent.PatchVal.java", "BodyUseAPI": ["org.eclipse.jdt.internal.compiler.ast.Expression.resolveType(org.eclipse.jdt.internal.compiler.lookup.BlockScope)", "lombok.eclipse.agent.PatchVal.getForEachComponentType(org.eclipse.jdt.internal.compiler.ast.Expression,org.eclipse.jdt.internal.compiler.lookup.BlockScope)"], "Fixed commit": "c4761096715a8388e683b9b7f86f2c6a3be4f7a0", "Url": "https://api.github.com/repos/rzwitserloot/lombok", "Date": "2014-02-27T01:57:00Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { backup(); } catch (java.io.IOException e) { logger.error(\"Problem backing up old copy of GEDCOM file\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3179/buggy-version/gedbrowser-writer.src.main.java.org.schoellerfamily.gedbrowser.writer.GedWriter.java", "BodyUseAPI": ["org.schoellerfamily.gedbrowser.writer.GedWriter.backup()"], "Fixed commit": "8ddec55df0216d37c5cbf0e86537fc0f02aa093f", "Url": "https://api.github.com/repos/dickschoeller/gedbrowser", "Date": "2017-09-08T13:00:26Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { v2av.VideoCaptureDevInfo.VideoCaptureDevice newDevice = new v2av.VideoCaptureDevInfo.VideoCaptureDevice(); if (((this.mDefaultDevName) == null) || (this.mDefaultDevName.isEmpty())) { this.mDefaultDevName = newDevice.deviceUniqueName; } android.hardware.Camera.CameraInfo info = new android.hardware.Camera.CameraInfo(); android.hardware.Camera.getCameraInfo(i, info); newDevice.index = i; newDevice.orientation = info.orientation; if ((info.facing) == (Camera.CameraInfo.CAMERA_FACING_BACK)) { newDevice.deviceUniqueName = v2av.VideoCaptureDevInfo.CAMERA_FACE_BACK; newDevice.frontCameraType = v2av.VideoCaptureDevInfo.FrontFacingCameraType.None; android.util.Log.d(v2av.VideoCaptureDevInfo.TAG, (((\"Camera \" + i) + \", Camera Facing back, Orientation \") + (info.orientation))); }else { newDevice.deviceUniqueName = v2av.VideoCaptureDevInfo.CAMERA_FACE_FRONT; newDevice.frontCameraType = v2av.VideoCaptureDevInfo.FrontFacingCameraType.Android23; android.util.Log.d(v2av.VideoCaptureDevInfo.TAG, (((\"Camera \" + i) + \", Camera Facing front, Orientation \") + (info.orientation))); this.mDefaultDevName = newDevice.deviceUniqueName; } camera = android.hardware.Camera.open(i); android.hardware.Camera.Parameters parameters = camera.getParameters(); AddDeviceInfo(newDevice, parameters); camera.release(); camera = null; deviceList.add(newDevice); } catch (java.lang.Exception ex) { android.util.Log.e(v2av.VideoCaptureDevInfo.TAG, (\"Failed to init VideoCaptureDeviceInfo ex\" + (ex.getLocalizedMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7737/buggy-version/source.src.v2av.VideoCaptureDevInfo.java", "BodyUseAPI": ["android.util.Log.d(java.lang.String,(((\"Camera \" + i) + \", Camera Facing front, Orientation \") + (info.orientation)))", "android.hardware.Camera.release()", "java.lang.String.isEmpty()", "android.hardware.Camera.open(int)", "android.hardware.Camera.getParameters()", "android.util.Log.d(java.lang.String,(((\"Camera \" + i) + \", Camera Facing back, Orientation \") + (info.orientation)))", "v2av.VideoCaptureDevInfo.AddDeviceInfo(v2av.VideoCaptureDevInfo.VideoCaptureDevice,Camera.Parameters)", "java.util.List<v2av.VideoCaptureDevInfo.VideoCaptureDevice>.add(v2av.VideoCaptureDevInfo.VideoCaptureDevice)", "android.hardware.Camera.getCameraInfo(int,Camera.CameraInfo)"], "Fixed commit": "86d1661d9a3dd67747703cc6164a1323cd26924f", "Url": "https://api.github.com/repos/jiangzhen1984/V2TechConferenceClient", "Date": "2015-01-31T02:42:40Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { userService.addUserEmail(username, email); java.lang.String fullname = ((java.lang.String) (org.benjp.utils.ChatUtils.fromString(b64Fullname))); userService.addUserFullName(username, fullname); } catch (java.lang.Exception e) { log.info((\"fullname wasn't serialized : \" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4714/buggy-version/server.src.main.java.org.benjp.server.ChatTools.java", "BodyUseAPI": ["org.benjp.services.UserService.addUserFullName(java.lang.String,java.lang.String)", "org.benjp.utils.ChatUtils.fromString(java.lang.String)", "org.benjp.services.UserService.addUserEmail(java.lang.String,java.lang.String)"], "Fixed commit": "6542a71393433bf5ab12c7608caad0eefc4b3c5c", "Url": "https://api.github.com/repos/exo-addons/chat-application", "Date": "2013-09-03T11:52:22Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { id = java.lang.Integer.parseInt(input); } catch (java.lang.NumberFormatException e) { client.getSurface().println(\"Bitte g\u00fcltigen Datei-Index als Parameter angeben\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7083/buggy-version/src.main.java.de.hff.ChatClient.commands.Download.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "95f835d323d530265b1698218da35116f750121e", "Url": "https://api.github.com/repos/clemens961/ChatClient", "Date": "2016-01-25T15:12:44Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { final java.lang.String responseAsString = response.asString(); callbackContext.success(responseAsString); } catch (java.lang.Exception ex) { android.util.Log.e(com.salesforce.androidsdk.phonegap.plugin.SalesforceNetworkPlugin.TAG, \"Error while converting response to String\", ex); } finally { if (response.isSuccess()) { callbackContext.success(); }else { onError(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4971/buggy-version/libs.SalesforceHybrid.src.com.salesforce.androidsdk.phonegap.plugin.SalesforceNetworkPlugin.java", "BodyUseAPI": ["com.salesforce.androidsdk.rest.RestResponse.asString()", "org.apache.cordova.CallbackContext.success(java.lang.String)"], "Fixed commit": "0df018526b781ef913e5698d5700e80988b6906f", "Url": "https://api.github.com/repos/helenren/SalesforceMobileSDK-Android", "Date": "2016-09-17T02:03:12Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { final java.lang.Object result = proceed.invoke(self, args); if (shouldAttachNewValue && (shouldUpdateProxy())) { proxyUpdater.updateConfig(self, getConfigDTOs()); } return result; } catch (final java.lang.reflect.InvocationTargetException e) { if ((e.getTargetException()) instanceof java.lang.RuntimeException) { throw e.getTargetException(); } throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6060/buggy-version/org.jeconfig.client.src.main.java.org.jeconfig.client.proxy.ConfigProxyMethodHandler.java", "BodyUseAPI": ["org.jeconfig.client.proxy.ProxyUpdater.updateConfig(java.lang.Object,getConfigDTOs())", "org.jeconfig.client.proxy.ConfigProxyMethodHandler.shouldUpdateProxy()", "java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object[])", "org.jeconfig.client.proxy.ConfigProxyMethodHandler.getConfigDTOs()"], "Fixed commit": "9893f18bd0b795baf90c7ecda702fc62eeb1d145", "Url": "https://api.github.com/repos/jeconfig/jeconfig", "Date": "2011-03-15T16:27:27Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (com.ubicomp.liveCamera.ImageViewActivity.isJPEG(files[i])) paths.add(files[i].getAbsolutePath()); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3461/buggy-version/app.src.main.java.com.ubicomp.liveCamera.ImageViewActivity.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "java.io.File.getAbsolutePath()", "com.ubicomp.liveCamera.ImageViewActivity.isJPEG(java.io.File)"], "Fixed commit": "8dce87f04e8411fae16da5cbaf095fffe7645477", "Url": "https://api.github.com/repos/WenchenLi/liveCamera", "Date": "2015-09-17T22:57:47Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String[] keys = this.store.keys(); sessionsId = new java.util.HashSet<>(java.util.Arrays.asList(keys)); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6711/buggy-version/tomcat-gcp-lib.src.main.java.com.google.cloud.runtimes.tomcat.session.DatastoreManager.java", "BodyUseAPI": ["java.util.Arrays.asList(java.lang.String[])", "org.apache.catalina.Store.keys()"], "Fixed commit": "4ba67ca6c9c9d6dd4d97c6923ea90f4f6de94304", "Url": "https://api.github.com/repos/GoogleCloudPlatform/tomcat-runtime", "Date": "2017-07-05T15:51:00Z"},
{"Line": "=>421", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { uuid = update(uuid, object); } catch (java.lang.IllegalArgumentException e) { sorcer.core.provider.dbp.DatabaseProvider.logger.error((((((\"GOT EXCEPTION in contextUpdate for:\" + id) + \"\\nObject to be updated: \") + (object.toString())) + \"CTX:\\n\") + context)); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8804/buggy-version/sos-providers.dbp.dbp-prv.src.main.java.sorcer.core.provider.dbp.DatabaseProvider.java", "BodyUseAPI": ["sorcer.core.provider.dbp.DatabaseProvider.update(net.jini.id.Uuid,java.lang.Object)"], "Fixed commit": "2183dd9c040d7515d2e069d6aa1cea843dac96e3", "Url": "https://api.github.com/repos/sorcersoft/sorcer", "Date": "2014-09-23T17:37:34Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { service.ServiceManager.getInstance().editLabel(label.toGhResource(), oldName); } catch (java.io.IOException e) { ui.TurboLabelGroup.logger.error(e.getLocalizedMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2360/buggy-version/src.ui.TurboLabelGroup.java", "BodyUseAPI": ["service.ServiceManager.getInstance()", "service.ServiceManager.getInstance().editLabel(label.toGhResource(),java.lang.String)", "model.TurboLabel.toGhResource()"], "Fixed commit": "2b17cf54945dc5ddc244fc512afcc8711216ba61", "Url": "https://api.github.com/repos/HubTurbo/HubTurbo", "Date": "2014-08-08T16:19:54Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { sp.setTransform(getLocalToSceneTransform().createInverse()); } catch (javafx.scene.transform.NonInvertibleTransformException ex) { java.util.logging.Logger.getLogger(ch.heigvd.layer.GEMMSCanvas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1374/buggy-version/GEMMS.src.main.java.ch.heigvd.layer.GEMMSCanvas.java", "BodyUseAPI": ["ch.heigvd.layer.GEMMSCanvas.getLocalToSceneTransform()", "javafx.scene.SnapshotParameters.setTransform(getLocalToSceneTransform().createInverse())", "getLocalToSceneTransform().createInverse()"], "Fixed commit": "a8a0f0c5d2e7a56554ac8056afe3ba46cf07a1e4", "Url": "https://api.github.com/repos/GuillaumeMilani/HEIGVD-PRO-Project", "Date": "2017-05-23T10:33:13Z"},
{"Line": "=>538", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { dueDate = new librarySystem.core.Date(java.lang.Integer.parseInt(dateHold[0]), java.lang.Integer.parseInt(dateHold[1]), java.lang.Integer.parseInt(dateHold[2]), librarySystem.core.LibraryRunner.jurrLibrary.getCal()); tempList = librarySystem.core.LibraryRunner.jurrLibrary.getOverdue(dueDate); if (tempList != null) { for (int i = 0; i < (tempList.length); i++) { java.lang.System.out.println(tempList[i]); } }else { java.lang.System.out.println(\"No items found with given overdue date\"); } } catch (java.lang.Exception e) { java.lang.System.out.println(\"Invalid input.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3909/buggy-version/core.LibraryRunner.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "librarySystem.core.Library.getCal()", "java.lang.Integer.parseInt(java.lang.String)", "java.io.PrintStream.println(tempList[i])", "librarySystem.core.Library.getOverdue(librarySystem.core.Date)"], "Fixed commit": "c9338ebac4a5e06ee2250f401019b7b27ec2c3d3", "Url": "https://api.github.com/repos/chjon/librarySystem", "Date": "2017-01-24T03:22:50Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { tab.getIcon().setColorFilter(tabIconColor, PorterDuff.Mode.SRC_IN); } catch (java.lang.NullPointerException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3257/buggy-version/app.src.main.java.com.example.manav.devkon.MainActivity.java", "BodyUseAPI": ["tab.getIcon().setColorFilter(int,PorterDuff.Mode.SRC_IN)", "TabLayout.Tab.getIcon()"], "Fixed commit": "f3a0774ab65cc76603fc44f1bcfc69a5545de489", "Url": "https://api.github.com/repos/andy-devlopers/DEVkon", "Date": "2017-12-21T20:58:34Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { response = it.wm.perdue.Utils.formatJSON(response); notizia = it.wm.perdue.Utils.getGson().fromJson(response, it.wm.perdue.businessLogic.Notizia[].class)[0]; loadPage(notizia.getTesto()); } catch (java.lang.NullPointerException e) { android.widget.Toast toast = android.widget.Toast.makeText(this, \"Errore di rete, riprova\", Toast.LENGTH_LONG); toast.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/9193/buggy-version/src.it.wm.perdue.NewsDetailActivity.java", "BodyUseAPI": ["it.wm.perdue.Utils.getGson()", "it.wm.perdue.Utils.getGson().fromJson(java.lang.String,java.lang.Class)", "it.wm.perdue.Utils.formatJSON(java.lang.String)", "it.wm.perdue.NewsDetailActivity.loadPage(notizia.getTesto())", "it.wm.perdue.businessLogic.Notizia.getTesto()"], "Fixed commit": "3d2feeec8f8def52cc41dda715cd8b7c48d03f92", "Url": "https://api.github.com/repos/eltazar/x2Android", "Date": "2013-04-21T14:55:52Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { java.io.FileInputStream saveFile = new java.io.FileInputStream((fname + \".sav\")); restore = new java.io.ObjectInputStream(saveFile); } catch (java.io.FileNotFoundException ex) { java.lang.System.out.println(\"File not found\"); this.name = UserInterface.promptFile(); readGame(this.name); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4188/buggy-version/src.Game.java", "BodyUseAPI": [], "Fixed commit": "c31fb2acbefed1d7e2dd339505aee11a3a8029f5", "Url": "https://api.github.com/repos/howardjohn/Risk", "Date": "2016-03-09T01:12:00Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { super.handle(request, response); } finally { org.restlet.Application.setCurrent(current); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1491/buggy-version/modules.org.restlet.src.org.restlet.engine.application.ApplicationHelper.java", "BodyUseAPI": ["org.restlet.engine.CompositeHelper<org.restlet.Application>.handle(org.restlet.Request,org.restlet.Response)"], "Fixed commit": "6afed5c70ae36316af4cf471b077d219bc022a00", "Url": "https://api.github.com/repos/restlet/restlet-framework-java", "Date": "2016-01-09T16:51:19Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.io.File bugFile = new java.io.File((\".\\\\Bugs\\\\Bug1\" + \".txt\")); java.io.FileWriter fileWriter = new java.io.FileWriter(bugFile); java.io.BufferedWriter bufferedWriter = new java.io.BufferedWriter(fileWriter); bufferedWriter.append(\"gsd\"); fileWriter.flush(); fileWriter.close(); bufferedWriter.close(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6464/buggy-version/src.main.java.com.jamesloyd.foldergenutility.Util.Utility.java", "BodyUseAPI": ["java.io.BufferedWriter.append(java.lang.String)", "java.io.BufferedWriter.close()", "java.io.FileWriter.flush()", "java.io.FileWriter.close()"], "Fixed commit": "a94720a6541a79447531b99b53431ad026f39328", "Url": "https://api.github.com/repos/carharttjimmy/FolderGenUtility", "Date": "2014-06-01T22:48:22Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { out.writeUTF(sw.toString()); } catch (java.io.UTFDataFormatException ex) { out.writeUTF(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7220/buggy-version/io.annotation-data-io.src.main.java.uk.ac.ebi.mdk.io.annotation.AtomContainerAnnotationWriter.java", "BodyUseAPI": ["java.io.StringWriter.toString()", "java.io.DataOutput.writeUTF(java.lang.String)"], "Fixed commit": "f30287562de320f208c6a32df1df1a2534f84599", "Url": "https://api.github.com/repos/johnmay/mdk", "Date": "2012-05-15T12:28:53Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { res = java.util.Arrays.copyOfRange(data, index, ((index + length) - 1)); } catch (java.lang.IllegalArgumentException e) { res = \"\".getBytes(); roboguice.util.Ln.e((\"getStringFromBytes -> IllegalArgumentException : \" + (res.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2083/buggy-version/app.src.main.java.net.nexusrcon.nexusrconark.network.Packet.java", "BodyUseAPI": ["java.util.Arrays.copyOfRange(byte[],int,int)"], "Fixed commit": "5b10170e2c9785dea5e314cdcd560cf0d6c07ea7", "Url": "https://api.github.com/repos/adenaud/nexusrcon-ark", "Date": "2015-10-17T16:53:56Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { rs[ind[0]] = exc.submit(new NonLinearImageFilter.CrankNicholson2D.AxThread(getColumn(ind[0], result), bCond, getColumn(ind[0], oldDiffCoef), getColumn(ind[0], newDiffCoef), lt1)); } catch (java.util.concurrent.RejectedExecutionException ex) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1422/buggy-version/src.NonLinearImageFilter.CrankNicholson2D.java", "BodyUseAPI": ["NonLinearImageFilter.CrankNicholson2D.getColumn(int,double[][])", "java.util.concurrent.ExecutorService.submit(NonLinearImageFilter.CrankNicholson2D.AxThread)", "NonLinearImageFilter.CrankNicholson2D.getColumn(int,double[][])", "NonLinearImageFilter.CrankNicholson2D.getColumn(int,double[][])"], "Fixed commit": "ebcd9d729ba09713199a08067b6494dc44dc3a36", "Url": "https://api.github.com/repos/Rusjava/Non-linearImageFilter", "Date": "2016-04-06T12:12:28Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { eventType = parser.next(); } catch (java.lang.Exception e) { text = \"\"; eventType = parser.nextToken(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4290/buggy-version/src.com.dandrex.malfriends.controller.util.FeedParser.java", "BodyUseAPI": ["org.xmlpull.v1.XmlPullParser.next()"], "Fixed commit": "62224fec7c9d06dca9a933e8eed108a5b2ae0b27", "Url": "https://api.github.com/repos/DandreX/MALFriends", "Date": "2014-09-26T23:33:21Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { serverInfo = mClientWrapper.deserializeJson(response, com.jaspersoft.android.sdk.network.entity.server.ServerInfoData.class); } catch (com.google.gson.JsonSyntaxException exception) { throw new com.jaspersoft.android.sdk.network.HttpException(\"Not Found. The URI requested is invalid or the resource requested does not exists.\", 404, response.body()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5913/buggy-version/core.src.main.java.com.jaspersoft.android.sdk.network.ServerRestApi.java", "BodyUseAPI": ["com.jaspersoft.android.sdk.network.NetworkClient.deserializeJson(com.squareup.okhttp.Response,java.lang.Class)"], "Fixed commit": "059d1ae7a088c6c301f349169a2087c5685c558e", "Url": "https://api.github.com/repos/Jaspersoft/js-android-sdk", "Date": "2016-08-23T08:54:47Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (pos.equals(source.GameMap.boxPositionsTo.get(i).get((time + 1)))) { return source.GameMap.boxCharacters.get(i); } if (pos.equals(source.GameMap.boxPositionsFrom.get(i).get((time + 1)))) { return source.GameMap.boxCharacters.get(i); } } catch (java.lang.IndexOutOfBoundsException e) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/9015/buggy-version/source.GameMap.java", "BodyUseAPI": ["source.Position.equals(source.GameMap.boxPositionsTo.get(i).get((time + 1)))", "java.util.ArrayList<java.util.ArrayList<source.Position>>.get(int)", "java.util.ArrayList<java.lang.Character>.get(int)", "source.Position.equals(source.GameMap.boxPositionsFrom.get(i).get((time + 1)))", "source.GameMap.boxPositionsTo.get(i).get(int)", "source.GameMap.boxPositionsFrom.get(i).get(int)", "java.util.ArrayList<java.util.ArrayList<source.Position>>.get(int)", "java.util.ArrayList<java.lang.Character>.get(int)"], "Fixed commit": "273fa69bbbaef7bcf8c236112d780a27aa62e5ae", "Url": "https://api.github.com/repos/N33t/WallE", "Date": "2016-04-27T15:53:02Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { final javax.ws.rs.client.Invocation.Builder request = buildRequest(); if ((state.get()) == (org.jboss.resteasy.plugins.providers.sse.SseEventSourceImpl.State.OPEN)) { eventInput = request.get(javax.ws.rs.sse.SseEventInput.class); } } finally { if ((connectedLatch) != null) { connectedLatch.countDown(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4653/buggy-version/providers.sse.src.main.java.org.jboss.resteasy.plugins.providers.sse.SseEventSourceImpl.java", "BodyUseAPI": ["org.jboss.resteasy.plugins.providers.sse.SseEventSourceImpl.EventHandler.buildRequest()", "java.util.concurrent.atomic.AtomicReference<org.jboss.resteasy.plugins.providers.sse.SseEventSourceImpl.State>.get()", "Invocation.Builder.get(java.lang.Class)"], "Fixed commit": "4384911234f5169103cc0f463133c06186d94ffd", "Url": "https://api.github.com/repos/asoldano/Resteasy", "Date": "2017-02-10T22:51:23Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { redirect.append(java.net.URLEncoder.encode(SN, \"UTF-8\")); } catch (java.io.UnsupportedEncodingException e) { logger.warn(\"The router SN has unexpected encoding\", e); redirect.append(SN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5655/buggy-version/src.main.java.com.citycon.controllers.servlets.RouterEditServlet.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.net.URLEncoder.encode(java.lang.String,java.lang.String)"], "Fixed commit": "69e546b135eda9e732ff128c115921cf28a3d48d", "Url": "https://api.github.com/repos/NcBsuirGr2/ncCityCon", "Date": "2016-12-20T08:00:13Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { freemarkerTemplate = cfg.getTemplate(templateName); } catch (java.io.IOException iOException) { logger.error(\"Error reading Freemarker Template {} \", templateName, iOException); throw new java.lang.RuntimeException(iOException); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/7515/buggy-version/ninja-core.src.main.java.ninja.template.TemplateEngineFreemarker.java", "BodyUseAPI": ["freemarker.template.Configuration.getTemplate(java.lang.String)"], "Fixed commit": "4571346261c33d6110639879902db81d875c02f0", "Url": "https://api.github.com/repos/ninjaframework/ninja", "Date": "2014-03-05T16:33:15Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { srValues = new double[countries.size()]; for (i = 0; i < (countries.size()); i++) { srValues[i] = sr.similarity(p.getTitle().getCanonicalTitle(), countries.get(i), false).getScore(); } } catch (java.lang.Exception e) { java.lang.System.out.println((((\"ERROR: calculating sr between \" + (p.getTitle().getCanonicalTitle())) + \" and \") + (countries.get(i)))); e.printStackTrace(); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3450/buggy-version/atlasify.src.main.java.org.wikibrain.atlasify.AtlasifyGameGenerator.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.size()", "sr.similarity(p.getTitle().getCanonicalTitle(), countries.get(i), false).getScore()", "java.util.ArrayList<java.lang.String>.get(int)", "org.wikibrain.sr.SRMetric.similarity(p.getTitle().getCanonicalTitle(),java.lang.String,boolean)", "p.getTitle().getCanonicalTitle()", "org.wikibrain.core.model.LocalPage.getTitle()", "java.util.ArrayList<java.lang.String>.size()"], "Fixed commit": "adeee746a79d6e72bd20328bf46f8c32eabafa1f", "Url": "https://api.github.com/repos/tobyli/wikibrain", "Date": "2015-04-03T20:58:08Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return android.database.sqlite.SQLiteDatabase.openDatabase(getDatabaseName(), null, SQLiteDatabase.OPEN_READWRITE); } catch (android.database.sqlite.SQLiteException e) { com.roscopeco.ormdroid.Entity.flushSchemaCreationCache(); return openOrCreateDatabase(getDatabaseName(), 0, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/7843/buggy-version/src.com.roscopeco.ormdroid.ORMDroidApplication.java", "BodyUseAPI": ["android.database.sqlite.SQLiteDatabase.openDatabase(java.lang.String,<nulltype>,SQLiteDatabase.OPEN_READWRITE)", "com.roscopeco.ormdroid.ORMDroidApplication.getDatabaseName()"], "Fixed commit": "2991e1d1ff06f10dd8beb6669b9cc3dd99b29fbe", "Url": "https://api.github.com/repos/roscopeco/ormdroid", "Date": "2013-10-28T09:50:09Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (!(support.isDataFlavorSupported(nodesFlavor))) { return false; } } catch (java.lang.NullPointerException ignored) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5114/buggy-version/src.main.java.com.timepath.swing.ReorderableJTree.java", "BodyUseAPI": ["javax.swing.TransferHandler.TransferSupport.isDataFlavorSupported(java.awt.datatransfer.DataFlavor)"], "Fixed commit": "b3a7ea3d7258ee130780ad2a8d1f9e2b6fc73ebc", "Url": "https://api.github.com/repos/TimePath/commons", "Date": "2014-09-25T04:27:27Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (is != null) { try { com.kloudtek.ktserializer.Serializer.logger.info((\"IS=\" + is)); java.lang.String filesStr = com.kloudtek.util.io.IOUtils.toString(is).trim(); java.lang.String[] files = filesStr.split(\"\\n\"); for (java.lang.String file : files) { com.kloudtek.ktserializer.Serializer.loadConfig(file.trim()); } } finally { com.kloudtek.util.io.IOUtils.close(is); } }else { com.kloudtek.ktserializer.Serializer.logger.info(((\"Unable to load \" + url) + \" stream is null\")); } } catch (java.lang.Throwable e) { com.kloudtek.ktserializer.Serializer.logger.log(java.util.logging.Level.WARNING, e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6604/buggy-version/runtime.src.main.java.com.kloudtek.ktserializer.Serializer.java", "BodyUseAPI": ["com.kloudtek.util.io.IOUtils.toString(java.io.InputStream)", "java.util.logging.Logger.info(java.lang.String)", "com.kloudtek.util.io.IOUtils.close(java.io.InputStream)", "java.lang.String.split(java.lang.String)", "com.kloudtek.util.io.IOUtils.toString(is).trim()", "com.kloudtek.ktserializer.Serializer.loadConfig(java.lang.String)", "java.util.logging.Logger.info(java.lang.String)", "java.lang.String.trim()"], "Fixed commit": "8c0c617f7769a0672b813881b2e28d592b760702", "Url": "https://api.github.com/repos/kloudtek/ktserializer", "Date": "2016-01-26T22:44:48Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (((java.nio.file.Files.exists(to)) && (java.nio.file.Files.isSameFile(from, to))) && (!(from.getFileName().toString().equals(to.getFileName().toString())))) { from.toFile().renameTo(to.toFile()); } } catch (java.io.IOException e) { App.settings.logStackTrace((((\"Failed to copy file \" + from) + \" to \") + to), e); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4533/buggy-version/src.main.java.com.atlauncher.utils.FileUtils.java", "BodyUseAPI": ["java.nio.file.Path.toString()", "java.nio.file.Path.getFileName()", "java.nio.file.Files.isSameFile(java.nio.file.Path,java.nio.file.Path)", "java.io.File.renameTo(java.io.File)", "java.nio.file.Files.exists(java.nio.file.Path)", "java.lang.String.equals(java.lang.String)", "java.nio.file.Path.getFileName()", "java.nio.file.Path.toString()", "java.nio.file.Path.toFile()", "java.nio.file.Path.toFile()"], "Fixed commit": "f553d1d5cdd5e405ffec08b638ac4a3e76549275", "Url": "https://api.github.com/repos/ATLauncher/ATLauncher", "Date": "2015-05-25T02:10:06Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { miniWindow = ((java.awt.Rectangle) (viewer.window.clone())); miniWindow.grow((-900), (-600)); g2.drawRect((((miniWindow.x) / 36) - 9), ((miniWindow.y) / 36), ((miniWindow.width) / 36), ((miniWindow.height) / 36)); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3430/buggy-version/src.view.MiniMap.java", "BodyUseAPI": ["viewer.window.clone()", "java.awt.Rectangle.grow(int,int)", "java.awt.Graphics2D.drawRect(int,int,int,int)"], "Fixed commit": "9eaf8f45ae510b4a740cadba871ab256a30127a6", "Url": "https://api.github.com/repos/razzintown/FinalProject", "Date": "2012-05-02T09:43:49Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return string.substring(0, ((string.length()) - 1)); } catch (java.lang.StringIndexOutOfBoundsException e) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2078/buggy-version/app.src.main.java.com.klinker.android.launcher.launcher3.allapps.PredictiveAppsProvider.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "4a44ed29217c58d30be74c958a6d2cfca736e037", "Url": "https://api.github.com/repos/klinker24/Android-Blur-Launcher", "Date": "2015-10-08T15:00:03Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { response = (status + \" \") + (outputStream.toString(WaarpStringUtils.UTF8.name())); } catch (java.io.UnsupportedEncodingException e) { response = (status + \" \") + (outputStream.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6119/buggy-version/src.main.java.org.waarp.commandexec.server.LocalExecServerHandler.java", "BodyUseAPI": ["java.io.ByteArrayOutputStream.toString(WaarpStringUtils.UTF8.name())", "WaarpStringUtils.UTF8.name()"], "Fixed commit": "bb5be215290a94cd5aab980003a48c31504f5eab", "Url": "https://api.github.com/repos/fredericBregier/WaarpExec", "Date": "2013-11-12T19:41:07Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { testInstance.setDataset(testSet); } catch (java.lang.Exception e) { android.util.Log.e(TAG, (\"set dataset: \" + (e.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/7767/buggy-version/app.src.main.java.example.weka.datacollector.ClassificationService.java", "BodyUseAPI": ["weka.core.Instance.setDataset(weka.core.Instances)"], "Fixed commit": "02d3611937d5bdf51847294f4348d5ad40777a47", "Url": "https://api.github.com/repos/prevnode/DataCollector", "Date": "2015-03-04T18:48:40Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { testInstance.setClassMissing(); } catch (java.lang.Exception e) { android.util.Log.e(TAG, (\"set Class Missing: \" + (e.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/7767/buggy-version/app.src.main.java.example.weka.datacollector.ClassificationService.java", "BodyUseAPI": ["weka.core.Instance.setClassMissing()"], "Fixed commit": "02d3611937d5bdf51847294f4348d5ad40777a47", "Url": "https://api.github.com/repos/prevnode/DataCollector", "Date": "2015-03-04T18:48:40Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { testSet.add(testInstance); } catch (java.lang.Exception e) { android.util.Log.e(TAG, (\"add: \" + (e.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/7767/buggy-version/app.src.main.java.example.weka.datacollector.ClassificationService.java", "BodyUseAPI": ["weka.core.Instances.add(weka.core.Instance)"], "Fixed commit": "02d3611937d5bdf51847294f4348d5ad40777a47", "Url": "https://api.github.com/repos/prevnode/DataCollector", "Date": "2015-03-04T18:48:40Z"},
{"Line": "=>703", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { type = de.st_ddt.crazyutil.databases.DatabaseType.valueOf(saveType.toUpperCase()); } catch (java.lang.Exception e) { type = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6777/buggy-version/CrazyLogin.src.de.st_ddt.crazylogin.CrazyLogin.java", "BodyUseAPI": ["de.st_ddt.crazyutil.databases.DatabaseType.valueOf(java.lang.String)", "java.lang.String.toUpperCase()"], "Fixed commit": "450c2bfdf5eeafdcbc1e83e333d2b53fbca04afb", "Url": "https://api.github.com/repos/ST-DDT/Crazy", "Date": "2012-05-28T14:15:52Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { type = de.st_ddt.crazyutil.databases.DatabaseType.valueOf(saveType.toUpperCase()); } catch (java.lang.Exception e) { java.lang.System.out.println((\"NO SUCH SAVETYPE \" + saveType)); type = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6777/buggy-version/CrazyLogin.src.de.st_ddt.crazylogin.CrazyLogin.java", "BodyUseAPI": ["java.lang.String.toUpperCase()", "de.st_ddt.crazyutil.databases.DatabaseType.valueOf(java.lang.String)"], "Fixed commit": "450c2bfdf5eeafdcbc1e83e333d2b53fbca04afb", "Url": "https://api.github.com/repos/ST-DDT/Crazy", "Date": "2012-05-28T14:15:52Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (ctx.getChannel().isWritable()) { com.rackspacecloud.blueflood.inputs.handlers.HttpMetricsIngestionServer.log.debug((((\"request decoder error \" + (e.getCause().toString())) + \" on channel \") + (ctx.getChannel().toString()))); ctx.getChannel().write(new org.jboss.netty.handler.codec.http.DefaultHttpResponse(org.jboss.netty.handler.codec.http.HttpVersion.HTTP_1_1, org.jboss.netty.handler.codec.http.HttpResponseStatus.BAD_REQUEST)).addListener(ChannelFutureListener.CLOSE); }else { com.rackspacecloud.blueflood.inputs.handlers.HttpMetricsIngestionServer.log.debug(((\"channel \" + (ctx.getChannel().toString())) + \" is no longer writeable, not sending 400 response back to client\")); } } catch (java.lang.Exception ex) { com.rackspacecloud.blueflood.inputs.handlers.HttpMetricsIngestionServer.log.debug((\"Can't write to channel \" + (ctx.getChannel().toString())), ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2118/buggy-version/blueflood-http.src.main.java.com.rackspacecloud.blueflood.inputs.handlers.HttpMetricsIngestionServer.java", "BodyUseAPI": ["org.slf4j.Logger.debug(((\"channel \" + (ctx.getChannel().toString())) + \" is no longer writeable, not sending 400 response back to client\"))", "ctx.getChannel().toString()", "com.rackspacecloud.blueflood.inputs.handlers.ChannelHandlerContext.getChannel()", "com.rackspacecloud.blueflood.inputs.handlers.ExceptionEvent.getCause()", "org.slf4j.Logger.debug((((\"request decoder error \" + (e.getCause().toString())) + \" on channel \") + (ctx.getChannel().toString())))", "e.getCause().toString()", "ctx.getChannel().isWritable()", "ctx.getChannel().toString()", "com.rackspacecloud.blueflood.inputs.handlers.ChannelHandlerContext.getChannel()", "com.rackspacecloud.blueflood.inputs.handlers.ChannelHandlerContext.getChannel()", "com.rackspacecloud.blueflood.inputs.handlers.ChannelHandlerContext.getChannel()", "ctx.getChannel().write(org.jboss.netty.handler.codec.http.DefaultHttpResponse)", "ctx.getChannel().write(new org.jboss.netty.handler.codec.http.DefaultHttpResponse(org.jboss.netty.handler.codec.http.HttpVersion.HTTP_1_1, org.jboss.netty.handler.codec.http.HttpResponseStatus.BAD_REQUEST)).addListener(ChannelFutureListener.CLOSE)"], "Fixed commit": "07f1091b7aaa53ecc7d54c2bf2c3dac9d6466406", "Url": "https://api.github.com/repos/rackerlabs/blueflood", "Date": "2016-07-06T15:25:54Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { variableUpdates.put(tempKey, valueConverter.convertValue(null, aValue, null)); } catch (de.gebit.integrity.utils.ParameterUtil.UnresolvableVariableException exc) { java.lang.System.err.println(((\"SKIPPED SYNCING OF VARIABLE '\" + tempKey) + \"' TO FORK - EXCEPTION OCCURRED\")); exc.printStackTrace(); } catch (de.gebit.integrity.operations.UnexecutableException exc) { java.lang.System.err.println(((\"SKIPPED SYNCING OF VARIABLE '\" + tempKey) + \"' TO FORK - EXCEPTION OCCURRED\")); exc.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/580/buggy-version/de.gebit.integrity.runner.src.de.gebit.integrity.runner.forking.Fork.java", "BodyUseAPI": ["de.gebit.integrity.parameter.conversion.ValueConverter.convertValue(<nulltype>,java.lang.Object,<nulltype>)", "java.util.HashMap<java.lang.String, java.lang.Object>.put(java.lang.String,valueConverter.convertValue(null, aValue, null))"], "Fixed commit": "3b7b2a1e77d2991e35f9bf254abf284c084f00ec", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2014-09-22T08:23:06Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { rat.setLongitude(java.lang.Double.parseDouble(((java.lang.String) (dataSnapshot.child(\"Longitude\").getValue())))); } catch (java.lang.ClassCastException e) { rat.setLongitude(java.lang.Double.parseDouble(java.lang.Long.toString(((java.lang.Long) (dataSnapshot.child(\"Longitude\").getValue()))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3181/buggy-version/TeamJon.app.src.main.java.com.example.michaelaki.teamjon.controller.ListActivity.java", "BodyUseAPI": ["dataSnapshot.child(\"Longitude\").getValue()", "java.lang.Double.parseDouble(((java.lang.String) (dataSnapshot.child(\"Longitude\").getValue())))", "com.google.firebase.database.DataSnapshot.child(java.lang.String)", "com.example.michaelaki.teamjon.model.RatSighting.setLongitude(double)"], "Fixed commit": "17cc14d158b35bcd97f548368f5556d918e45d01", "Url": "https://api.github.com/repos/michaelaki/TeamJon", "Date": "2017-11-20T16:02:08Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { rat.setLatitude(java.lang.Double.parseDouble(((java.lang.String) (dataSnapshot.child(\"Latitude\").getValue())))); } catch (java.lang.ClassCastException e) { rat.setLatitude(java.lang.Double.parseDouble(java.lang.Long.toString(((java.lang.Long) (dataSnapshot.child(\"Latitude\").getValue()))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3181/buggy-version/TeamJon.app.src.main.java.com.example.michaelaki.teamjon.controller.ListActivity.java", "BodyUseAPI": ["dataSnapshot.child(\"Latitude\").getValue()", "java.lang.Double.parseDouble(((java.lang.String) (dataSnapshot.child(\"Latitude\").getValue())))", "com.example.michaelaki.teamjon.model.RatSighting.setLatitude(double)", "com.google.firebase.database.DataSnapshot.child(java.lang.String)"], "Fixed commit": "17cc14d158b35bcd97f548368f5556d918e45d01", "Url": "https://api.github.com/repos/michaelaki/TeamJon", "Date": "2017-11-20T16:02:08Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { installation = com.parse.ParseInstallation.getCurrentInstallation().fetch(); } catch (com.parse.ParseException k) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8548/buggy-version/app.src.main.java.edu.dartmouth.cs.ontime.DispatchActivity.java", "BodyUseAPI": ["com.parse.ParseInstallation.getCurrentInstallation().fetch()", "com.parse.ParseInstallation.getCurrentInstallation()"], "Fixed commit": "a352d6cbc4378cefaea87656548e8d8b7e2d08ea", "Url": "https://api.github.com/repos/jason-feng/OnTime", "Date": "2015-03-09T15:39:05Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.List<java.lang.String> pids = domsClient.getPidFromOldIdentifier(oldId); if (!(pids.isEmpty())) { return pids.get(0); } } catch (dk.statsbiblioteket.doms.client.exceptions.NoObjectFound e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/7469/buggy-version/radio-tv.src.main.java.dk.statsbiblioteket.doms.ingesters.radiotv.RecordCreator.java", "BodyUseAPI": ["java.util.List<java.lang.String>.isEmpty()", "java.util.List<java.lang.String>.get(int)", "dk.statsbiblioteket.doms.client.DomsWSClient.getPidFromOldIdentifier(java.lang.String)"], "Fixed commit": "57410fdf761b4dd86a20ce2318a144865ad6741a", "Url": "https://api.github.com/repos/statsbiblioteket/doms-ingesters", "Date": "2012-12-13T09:39:48Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (rental.Quote quote : quotesList) { rental.CarRentalCompany crc = getRentalCompany(quote.getRentalCompany()); resList.add(crc.confirmQuote(quote)); } } catch (rental.ReservationException e) { for (rental.Reservation res : resList) { rental.CarRentalCompany crc = getRentalCompany(res.getRentalCompany()); crc.cancelReservation(res); } throw new rental.ReservationException(\"One of the quotes was not able to be confirmed, all quotes are rolled back\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5369/buggy-version/CarRental-ejb.src.java.session.CarRentalSession.java", "BodyUseAPI": ["session.CarRentalSession.getRentalCompany(quote.getRentalCompany())", "rental.Quote.getRentalCompany()", "rental.CarRentalCompany.confirmQuote(rental.Quote)", "java.util.List<rental.Reservation>.add(crc.confirmQuote(quote))"], "Fixed commit": "25e533acbebfc92bf154416560cc83bce6d8f56e", "Url": "https://api.github.com/repos/joschout/DistriJavaEESession1", "Date": "2014-10-15T11:33:16Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { index = new java.util.Random().nextInt(backup.size()); } catch (java.lang.IllegalArgumentException e) { index = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2857/buggy-version/EclipseProject.src.edu.upenn.cit594.miniYelp.RecommendRestaurant.java", "BodyUseAPI": ["java.util.Random.nextInt(backup.size())", "java.util.ArrayList<edu.upenn.cit594.miniYelp.Restaurant>.size()"], "Fixed commit": "9a861774fba82db92d3acf3ff691d723d02b4b63", "Url": "https://api.github.com/repos/yzhong9469/miniYelp", "Date": "2016-12-12T19:20:41Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (s.equals(java.net.InetAddress.getLocalHost().toString())) { Field.screen.putString(x, y, players.get(s)[2], Terminal.Color.BLACK, Terminal.Color.RED, ScreenCharacterStyle.Bold); }else { Field.screen.putString(x, y, players.get(s)[2], Terminal.Color.BLACK, Terminal.Color.YELLOW, ScreenCharacterStyle.Bold); } } catch (java.net.UnknownHostException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8781/buggy-version/NetworkGame.src.Field.java", "BodyUseAPI": ["com.googlecode.lanterna.screen.Screen.putString(int,int,java.lang.String,Terminal.Color.BLACK,Terminal.Color.RED,ScreenCharacterStyle.Bold)", "java.lang.String.equals(java.lang.String)", "com.googlecode.lanterna.screen.Screen.putString(int,int,java.lang.String,Terminal.Color.BLACK,Terminal.Color.YELLOW,ScreenCharacterStyle.Bold)", "java.util.HashMap<java.lang.String, java.lang.String[]>.get(java.lang.String)", "java.net.InetAddress.getLocalHost()", "java.util.HashMap<java.lang.String, java.lang.String[]>.get(java.lang.String)", "java.net.InetAddress.toString()"], "Fixed commit": "85efc931202b1f31a94cc595c195e6aa546ddf82", "Url": "https://api.github.com/repos/IgorFIE/MySpecialOne", "Date": "2016-06-26T15:41:23Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { in.close(); } catch (java.io.IOException e) { throw new org.apache.axis2.AxisFault(\"Axis fault while getting schemas.\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8979/buggy-version/components.policy-editor.org.wso2.carbon.policyeditor.src.main.java.org.wso2.carbon.policyeditor.PolicyEditorService.java", "BodyUseAPI": ["java.io.InputStream.close()"], "Fixed commit": "7c91f76a19eb0de05e5527247c49774b3372919f", "Url": "https://api.github.com/repos/thariyarox/carbon-identity-framework", "Date": "2016-05-17T12:49:06Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mapping.get().getCallable().call(source, ((parts.length) > 1 ? parts[1] : \"\"), java.util.Collections.unmodifiableList(passedParents)); } catch (org.spongepowered.api.util.command.CommandException c) { throw c; } catch (java.lang.Throwable t) { throw new org.spongepowered.api.util.command.InvocationCommandException(t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3941/buggy-version/src.main.java.org.spongepowered.api.util.command.dispatcher.SimpleDispatcher.java", "BodyUseAPI": ["mapping.get().getCallable()", "mapping.get().getCallable().call(org.spongepowered.api.util.command.CommandSource,((parts.length) > 1 ? parts[1] : \"\"),java.util.List<java.lang.String>)", "java.util.Collections.unmodifiableList(java.util.List<java.lang.String>)", "com.google.common.base.Optional<org.spongepowered.api.util.command.CommandMapping>.get()"], "Fixed commit": "e97f32c416a242afafdc5d38d0f4b26e9d4a0486", "Url": "https://api.github.com/repos/kenzierocks/SpongeAPI", "Date": "2015-04-02T03:25:10Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return new com.mappy.fpm.batches.tomtom.dbf.timedomains.TimeDomainsParser.Elements(parse(matcher.group(1)), parse(matcher.group(2)).get(0)); } catch (java.lang.Exception e) { log.info(\"Error when parsing element={}\", matcher); throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/9193/buggy-version/src.main.java.com.mappy.fpm.batches.tomtom.dbf.timedomains.TimeDomainsParser.java", "BodyUseAPI": ["java.util.regex.Matcher.group(int)", "com.mappy.fpm.batches.tomtom.dbf.timedomains.TimeDomainsParser.parse(java.lang.String)", "java.util.List<com.mappy.fpm.batches.tomtom.dbf.timedomains.TimeDomainsParser.Element>.get(int)", "com.mappy.fpm.batches.tomtom.dbf.timedomains.TimeDomainsParser.parse(java.lang.String)", "java.util.regex.Matcher.group(int)"], "Fixed commit": "c9d312b2586b2b4480363531d67300b5c3e5cb88", "Url": "https://api.github.com/repos/Mappy/fpm", "Date": "2017-10-27T15:50:59Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.google.firebase.database.FirebaseDatabase.getInstance().setPersistenceEnabled(true); } catch (com.google.firebase.database.DatabaseException e) { android.util.Log.d(TAG, (\"Persistence exception \" + e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4502/buggy-version/app.src.main.java.online.cagocapps.prtracker.Login.java", "BodyUseAPI": ["com.google.firebase.database.FirebaseDatabase.getInstance().setPersistenceEnabled(boolean)", "com.google.firebase.database.FirebaseDatabase.getInstance()"], "Fixed commit": "0a94b2e6b213a9a39116578dccba1250b319999e", "Url": "https://api.github.com/repos/calvingoc/PRTracker", "Date": "2017-03-31T20:40:42Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { entry.historyItem = historyItemResolver.apply(entry.commandId); if ((entry.historyItem) != null) entries.add(entry); } catch (java.lang.Exception e) { java.lang.System.err.println((((\"unable to restore \" + (entry.commandId)) + \" due to \") + (e.getMessage()))); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4763/buggy-version/dakara.eclipse.plugin.command.src.dakara.eclipse.plugin.command.settings.CommandDialogPersistedSettings.java", "BodyUseAPI": ["java.util.List<dakara.eclipse.plugin.command.settings.CommandDialogPersistedSettings<T>.HistoryEntry>.add(dakara.eclipse.plugin.command.settings.CommandDialogPersistedSettings<T>.HistoryEntry)", "java.util.function.Function<dakara.eclipse.plugin.command.settings.CommandDialogPersistedSettings.HistoryKey, T>.apply(dakara.eclipse.plugin.command.settings.CommandDialogPersistedSettings.HistoryKey)"], "Fixed commit": "decd13a6041c48ea0d2675f3a9125f14b07c4de6", "Url": "https://api.github.com/repos/dakaraphi/eclipse-plugin-commander", "Date": "2017-06-27T03:33:18Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { operatorB = operandStack.pop(); } catch (java.util.EmptyStackException e) { if (operand == '-') operandStack.push(((-1.0) * operatorA)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6791/buggy-version/evaluator.MathExpressionEvaluator.java", "BodyUseAPI": ["java.util.Stack<java.lang.Double>.pop()"], "Fixed commit": "baed0d6a053c9a09ad5b4b200e76490a59e6bf70", "Url": "https://api.github.com/repos/shkesar/MathExpressionEvaluator", "Date": "2014-02-22T12:06:26Z"},
{"Line": "=>847", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { cassandra_client.system_add_column_family(cfDef); } catch (org.apache.cassandra.thrift.InvalidRequestException irex) { updateExistingColumnFamily(tableInfo, ksDef, irex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/353/buggy-version/src.kundera-cassandra.src.main.java.com.impetus.client.cassandra.schemamanager.CassandraSchemaManager.java", "BodyUseAPI": ["Cassandra.Client.system_add_column_family(org.apache.cassandra.thrift.CfDef)"], "Fixed commit": "0ad39a25efcd494a2afa8ed910625965521c2488", "Url": "https://api.github.com/repos/impetus-opensource/Kundera", "Date": "2014-01-06T10:52:22Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { (returncodes.get(Icode)[0])++; } catch (java.lang.Exception exc) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2036/buggy-version/core.src.main.java.com.yahoo.ycsb.measurements.OneMeasurementTimeSeries.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Integer, int[]>.get(java.lang.Integer)"], "Fixed commit": "8ec9d0e306b7163aaaa57521d47df6703f0261fd", "Url": "https://api.github.com/repos/arnaud123/YCSB-1", "Date": "2014-05-12T09:03:28Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.view.View view = cordova.getActivity().getWindow().getDecorView(); view.playSoundEffect(SoundEffectConstants.CLICK); } catch (java.lang.Exception ex) { callbackContext.error(ex.getStackTrace()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6552/buggy-version/src.android.NativeClick.java", "BodyUseAPI": ["com.matimenich.plugins.nativeclick.NativeClick.1.getActivity()", "cordova.getActivity().getWindow().getDecorView()", "android.view.View.playSoundEffect(SoundEffectConstants.CLICK)", "cordova.getActivity().getWindow()"], "Fixed commit": "29e1d55f0a83f02719fe3a0b191fec29bedf0f5a", "Url": "https://api.github.com/repos/MatiMenich/cordova-plugin-nativeClickSound", "Date": "2015-08-10T01:57:01Z"},
{"Line": "=>484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { parentgroups = this.getGroupHome().findParentGroups(groupId); } catch (javax.ejb.FinderException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5518/buggy-version/src.java.com.idega.block.social.business.SocialServices.java", "BodyUseAPI": ["com.idega.user.data.GroupHome.findParentGroups(java.lang.Integer)", "com.idega.block.social.business.SocialServices.getGroupHome()"], "Fixed commit": "945a7b5671c74ceceb14e89aed9a6c78b214e57c", "Url": "https://api.github.com/repos/idega/com.idega.block.social", "Date": "2016-01-14T17:34:19Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.app.ActionBar actionbar = ((android.app.ActionBar) (getActivity().getActionBar())); actionbar.selectTab(null); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4572/buggy-version/src.main.java.com.mobileproto.lab5.UserFragment.java", "BodyUseAPI": ["com.mobileproto.lab5.UserFragment.getActivity()", "getActivity().getActionBar()", "android.app.ActionBar.selectTab(<nulltype>)"], "Fixed commit": "1069dcc5c6594432ed4d832cf9b08fabaedd9078", "Url": "https://api.github.com/repos/MaciCrowell/Lab5", "Date": "2013-10-04T15:23:43Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { new_Dip = it.unisalento.distributori.factory.FactoryDao.getIstance().getDipendenteDao().get(DipForm.getId(), it.unisalento.distributori.domain.Dipendente.class); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8226/buggy-version/src.it.unisalento.distributori.action.UpdateDipendente.java", "BodyUseAPI": ["it.unisalento.distributori.factory.FactoryDao.getIstance().getDipendenteDao().get(DipForm.getId(),java.lang.Class)", "it.unisalento.distributori.factory.FactoryDao.getIstance().getDipendenteDao()", "it.unisalento.distributori.model.PersonaModel.getId()", "it.unisalento.distributori.factory.FactoryDao.getIstance()"], "Fixed commit": "0c91f676df785160d37592d663acb0e8277453f3", "Url": "https://api.github.com/repos/aguinaldo92/distributori", "Date": "2017-03-02T14:43:29Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { it.unisalento.distributori.factory.FactoryDao.getIstance().getPersonaDao().update(new_persona); it.unisalento.distributori.factory.FactoryDao.getIstance().getDipendenteDao().update(new_Dip); } catch (java.lang.Exception e) { java.lang.System.out.println(\"La mail \ufffd gi\ufffd presente\"); addActionError(\"Email gi\ufffd presente\"); return INPUT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8226/buggy-version/src.it.unisalento.distributori.action.UpdateDipendente.java", "BodyUseAPI": ["it.unisalento.distributori.factory.FactoryDao.getIstance()", "it.unisalento.distributori.factory.FactoryDao.getIstance().getDipendenteDao().update(it.unisalento.distributori.domain.Dipendente)", "it.unisalento.distributori.factory.FactoryDao.getIstance().getPersonaDao().update(it.unisalento.distributori.domain.Persona)", "it.unisalento.distributori.factory.FactoryDao.getIstance().getPersonaDao()", "it.unisalento.distributori.factory.FactoryDao.getIstance().getDipendenteDao()", "it.unisalento.distributori.factory.FactoryDao.getIstance()"], "Fixed commit": "0c91f676df785160d37592d663acb0e8277453f3", "Url": "https://api.github.com/repos/aguinaldo92/distributori", "Date": "2017-03-02T14:43:29Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { Actor redbox = getOneIntersectingObject(RedBox.class); Actor balcony = getOneIntersectingObject(Box.class); if ((redbox != null) || (balcony != null)) { hit(); java.lang.Thread.sleep(150); } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8778/buggy-version/Ninja.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)", "Ninja.hit()", "Ninja.getOneIntersectingObject(java.lang.Class)", "Ninja.getOneIntersectingObject(java.lang.Class)"], "Fixed commit": "ab918b2c173b0f31babd063ab1e728ffd807d74e", "Url": "https://api.github.com/repos/harsh00008/easy-jump", "Date": "2014-11-27T22:37:44Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (tasks == null) { tasks = getClient().blockVolumes().create(create); }else { tasks.getTasks().addAll(getClient().blockVolumes().create(create).getTasks()); } } catch (com.emc.vipr.client.exceptions.ServiceErrorException ex) { logError(getMessage(\"CreateMultipleBlockVolumes.getTask.error\", create.getName(), ex.getDetailedMessage())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5694/buggy-version/vipr-portal.com.iwave.isa.content.src.java.com.emc.sa.service.vipr.block.tasks.CreateMultipleBlockVolumes.java", "BodyUseAPI": ["getClient().blockVolumes()", "getClient().blockVolumes()", "getClient().blockVolumes().create(create).getTasks()", "tasks.getTasks().addAll(getClient().blockVolumes().create(create).getTasks())", "com.emc.vipr.client.Tasks<com.emc.storageos.model.block.VolumeRestRep>.getTasks()", "com.emc.sa.service.vipr.block.tasks.CreateMultipleBlockVolumes.getClient()", "getClient().blockVolumes().create(com.emc.storageos.model.block.VolumeCreate)", "getClient().blockVolumes().create(com.emc.storageos.model.block.VolumeCreate)", "com.emc.sa.service.vipr.block.tasks.CreateMultipleBlockVolumes.getClient()"], "Fixed commit": "899573d622b9f55469eac30aec361d417247950e", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-12-23T21:54:22Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { worlds = ((org.bukkit.configuration.MemorySection) (this.getConfig().get(\"region\"))).getKeys(false); if ((worlds.size()) == 0) { sender.sendMessage(((org.bukkit.ChatColor.RED) + \"No NoTalk regions have been defined.\")); return true; } } catch (java.lang.Exception ex) { sender.sendMessage(((org.bukkit.ChatColor.RED) + \"No NoTalk regions have been defined.\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4401/buggy-version/src.net.robbytu.bukkit.NoTalk.NoTalk.java", "BodyUseAPI": ["this.getConfig().get(java.lang.String)", "java.util.Set<java.lang.String>.size()", "org.bukkit.command.CommandSender.sendMessage(((org.bukkit.ChatColor.RED) + \"No NoTalk regions have been defined.\"))", "net.robbytu.bukkit.NoTalk.NoTalk.getConfig()", "((org.bukkit.configuration.MemorySection) (this.getConfig().get(\"region\"))).getKeys(boolean)"], "Fixed commit": "7d1e0868cc7265914c56f9ef93d0c5ded042216b", "Url": "https://api.github.com/repos/robbietjuh/NoTalk", "Date": "2012-04-07T21:36:21Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { req = t.getRequestURI().toString().substring((3 + (tmplt.name.length()))); } catch (java.lang.Exception e) { req = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5793/buggy-version/Rdfstore.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.net.URI.toString()", "com.sun.net.httpserver.HttpExchange.getRequestURI()", "java.lang.String.length()"], "Fixed commit": "8007e844b7fa62b51cdbe1938335a6ff32a5a823", "Url": "https://api.github.com/repos/semitrivial/rdfstore", "Date": "2014-10-12T16:05:29Z"},
{"Line": "=>636", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { connection.connect(); connection.sendPacket(msg); android.widget.Toast.makeText(faActivity.getApplicationContext(), streaminglink, Toast.LENGTH_SHORT).show(); } catch (org.jivesoftware.smack.XMPPException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6114/buggy-version/src.easydarwin.android.videostreaming.VideoStreamingFragment.java", "BodyUseAPI": ["org.jivesoftware.smack.XMPPConnection.sendPacket(org.jivesoftware.smack.packet.Message)", "android.support.v4.app.FragmentActivity.getApplicationContext()", "android.widget.Toast.makeText(faActivity.getApplicationContext(), streaminglink, Toast.LENGTH_SHORT).show()", "org.jivesoftware.smack.XMPPConnection.connect()", "android.widget.Toast.makeText(faActivity.getApplicationContext(),java.lang.String,Toast.LENGTH_SHORT)"], "Fixed commit": "ed81b3a572dbba7dbbf1f9f6b43f399982aa6f3c", "Url": "https://api.github.com/repos/EricCheung3/vlc-android", "Date": "2015-05-01T21:08:33Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { serverSocket = new java.net.ServerSocket(port); } catch (java.io.IOException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5520/buggy-version/src.com.thoughtWorks.Server.Server.java", "BodyUseAPI": [], "Fixed commit": "4b3f2fcc08336df5326e81e319afd2c211206e85", "Url": "https://api.github.com/repos/jaideeprana45/step-unicorn", "Date": "2013-04-25T11:04:11Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { lm.requestLocationUpdates(provider, freq, dist, lnormal); } catch (java.lang.SecurityException se) { throw new java.lang.RuntimeException(se); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7012/buggy-version/src.org.mixare.MixContext.java", "BodyUseAPI": ["android.location.LocationManager.requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener)"], "Fixed commit": "44ac367080e1ea699c531e1bfe5b0fba933adff2", "Url": "https://api.github.com/repos/abduegal/mixare", "Date": "2012-03-26T16:14:21Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { getAdapter().selectOrDeselectAll(false); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8425/buggy-version/library.src.main.java.jahirfiquitiva.iconshowcase.fragments.RequestsFragment.java", "BodyUseAPI": ["jahirfiquitiva.iconshowcase.fragments.RequestsFragment.4.getAdapter()", "jahirfiquitiva.iconshowcase.adapters.RequestsAdapter.selectOrDeselectAll(boolean)"], "Fixed commit": "715a419bcbf93881811477c31028bedf16872bf4", "Url": "https://api.github.com/repos/jahirfiquitiva/IconShowcase", "Date": "2017-02-05T00:06:00Z"},
{"Line": "=>2017", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { processed = m_voltStatementProcessor.process(stmt, db, whichProcs); } catch (org.voltdb.compiler.VoltCompiler.VoltCompilerException e) { java.lang.String msg = ((\"VoltDB DDL Error: \\\"\" + (e.getMessage())) + \"\\\" in statement starting on lineno: \") + (stmt.lineNo); throw m_compiler.new org.voltdb.compiler.VoltCompiler.VoltCompilerException(msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5540/buggy-version/src.frontend.org.voltdb.compiler.DDLCompiler.java", "BodyUseAPI": ["org.voltdb.compiler.statements.VoltDBStatementProcessor.process(org.voltdb.compiler.DDLCompiler.DDLStatement,org.voltdb.catalog.Database,org.voltdb.compiler.VoltCompiler.DdlProceduresToLoad)"], "Fixed commit": "20292b6a4b28e60d3b7000a90605afdb0232052b", "Url": "https://api.github.com/repos/VoltDB/voltdb", "Date": "2017-05-18T18:44:33Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.woehlke.twitterwall.oodm.entities.entities.Url myUrl = this.urlApiService.fetchUrl(url); urlCache.setUrl(myUrl.getUrl()); urlCache.setExpanded(myUrl.getExpanded()); } catch (org.woehlke.twitterwall.oodm.exceptions.remote.FetchUrlException fue) { urlCache.setUrl(url); urlCache.setExpanded(url); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2158/buggy-version/src.main.java.org.woehlke.twitterwall.process.parts.UserApiServiceImpl.java", "BodyUseAPI": ["org.woehlke.twitterwall.process.parts.UrlApiService.fetchUrl(java.lang.String)", "org.woehlke.twitterwall.oodm.entities.entities.Url.getUrl()", "org.woehlke.twitterwall.oodm.entities.common.UrlCache.setExpanded(myUrl.getExpanded())", "org.woehlke.twitterwall.oodm.entities.common.UrlCache.setUrl(myUrl.getUrl())", "org.woehlke.twitterwall.oodm.entities.entities.Url.getExpanded()"], "Fixed commit": "8450b03b4fe3d8c9823e05c54e069ef0c9b89a32", "Url": "https://api.github.com/repos/thomaswoehlke/twitterwall2", "Date": "2017-06-24T11:29:50Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mViewPager.setAdapter(mScheduleAdapter); } catch (java.lang.Exception ex) { ex.getMessage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6474/buggy-version/TvPal.src.main.java.is.activites.scheduleActivites.DisplaySkjarinnActivity.java", "BodyUseAPI": ["android.support.v4.view.ViewPager.setAdapter(is.activites.scheduleActivites.DisplaySkjarinnActivity.SchedulePagerAdapter)"], "Fixed commit": "4131263445397382b5b78d242bc86ac9902c3bdc", "Url": "https://api.github.com/repos/thdg/TVpal", "Date": "2013-10-31T17:36:25Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { rm.join(m, id); } catch (java.rmi.RemoteException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/220/buggy-version/src.Gcom.src.main.java.se.umu.cs.dist.ht15.dali_ens15bsf.groupmanagement.MemberImpl.java", "BodyUseAPI": ["se.umu.cs.dist.ht15.dali_ens15bsf.groupmanagement.RemoteMember.join(se.umu.cs.dist.ht15.dali_ens15bsf.groupmanagement.RemoteMember,java.lang.String)"], "Fixed commit": "049f7dec59fcd4c966974fd0c2cd2ec2caf9420c", "Url": "https://api.github.com/repos/blasterbug/GMC", "Date": "2015-10-14T06:38:23Z"},
{"Line": "=>1020", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { locatePatientJITs(response, formInstanceTags.toString()); } catch (java.lang.Exception e) { log.error((\"Error locating JITS: \" + (formInstanceTags.toString())), e); response.setContentType(ChirdlUtilConstants.HTTP_CONTENT_TYPE_TEXT_HTML); response.setHeader(ChirdlUtilConstants.HTTP_HEADER_CACHE_CONTROL, ChirdlUtilConstants.HTTP_HEADER_CACHE_CONTROL_NO_CACHE); java.io.PrintWriter pw = response.getWriter(); pw.write(\"<p>An error occurred locating the file to display.</p>\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4948/buggy-version/web.src.org.openmrs.module.chica.web.ChicaServlet.java", "BodyUseAPI": ["org.openmrs.module.chica.web.ChicaServlet.locatePatientJITs(javax.servlet.http.HttpServletResponse,java.lang.String)", "java.lang.StringBuffer.toString()"], "Fixed commit": "9d31e5d1d12a4b2698e9100446feafbd62862f1b", "Url": "https://api.github.com/repos/CHIRDL-Openmrs-Modules/chica", "Date": "2016-01-05T16:02:10Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.io.File appJar = new java.io.File(org.sonar.application.PropsBuilder.class.getProtectionDomain().getCodeSource().getLocation().toURI()); return appJar.getParentFile().getParentFile(); } catch (java.net.URISyntaxException e) { throw new java.lang.IllegalStateException(\"Cannot detect path of main jar file\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2227/buggy-version/sonar-application.src.main.java.org.sonar.application.PropsBuilder.java", "BodyUseAPI": ["java.net.URL.toURI()", "java.security.CodeSource.getLocation()", "java.io.File.getParentFile()", "java.security.ProtectionDomain.getCodeSource()", "java.lang.Class.getProtectionDomain()", "java.io.File.getParentFile()"], "Fixed commit": "42c8af9253bd076c006eebe15c457b6bfde0ccb2", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2016-10-04T13:00:37Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.content.Intent myIntent = new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse(text.substring(((text.lastIndexOf(\" \", index)) + 1), (text + \" \").indexOf(\" \", index)))); startActivity(myIntent); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6899/buggy-version/SlidingMenu.src.info.androidhive.audlandroid.NowFragment.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String,int)", "java.lang.String.substring(int,int)", "1.startActivity(android.content.Intent)", "android.net.Uri.parse(java.lang.String)", "java.lang.String.lastIndexOf(java.lang.String,int)"], "Fixed commit": "f0276550c72c8eadd45fd04c90d4bf9b910f61ef", "Url": "https://api.github.com/repos/mkvisakan/AUDLAndroid", "Date": "2014-04-25T05:53:18Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { service.JDBC.connectionClose(); } catch (java.sql.SQLException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2979/buggy-version/src.main.java.dao.CpuDaoImpl.java", "BodyUseAPI": ["service.JDBC.connectionClose()"], "Fixed commit": "588822bf64ed345a5a3fee6f5acfa2e961ce19c5", "Url": "https://api.github.com/repos/alexlapada/LaptopStore", "Date": "2015-10-03T19:09:00Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { out = solver.solve(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/571/buggy-version/src.euler.SolverRunner.java", "BodyUseAPI": ["euler.Solver.solve()"], "Fixed commit": "3ac9ceec5dcbf2605c1bec880c29620ad15220c6", "Url": "https://api.github.com/repos/nikotan/myeuler", "Date": "2011-05-23T16:44:35Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ((com.stevenschoen.putionew.PutioApplication) (getApplication())).buildUtils(); } catch (com.stevenschoen.putionew.PutioUtils e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8903/buggy-version/app.src.main.java.com.stevenschoen.putionew.tv.TvActivity.java", "BodyUseAPI": ["((com.stevenschoen.putionew.PutioApplication) (getApplication())).buildUtils()", "com.stevenschoen.putionew.tv.TvActivity.getApplication()"], "Fixed commit": "5ca8dc4d19b3fe3a233c3064534a89db4b0d65d0", "Url": "https://api.github.com/repos/sregg/Put.io", "Date": "2015-01-18T01:35:44Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { result.reconfigure(width, height, ((result.getConfig()) != null ? result.getConfig() : Bitmap.Config.ARGB_8888)); } catch (java.lang.IllegalArgumentException e) { e.printStackTrace(); put(result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/777/buggy-version/sketch.src.main.java.me.PATHopan.sketch.cache.recycle.SizeConfigStrategy.java", "BodyUseAPI": ["android.graphics.Bitmap.getConfig()", "android.graphics.Bitmap.reconfigure(int,int,((result.getConfig()) != null ? result.getConfig() : Bitmap.Config.ARGB_8888))", "android.graphics.Bitmap.getConfig()"], "Fixed commit": "fbd4cc154978f7e5f2e47cabf005f24b2b24e188", "Url": "https://api.github.com/repos/panpf/sketch", "Date": "2017-04-09T11:01:35Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { date = format.parse(dateStr); } catch (java.text.ParseException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2696/buggy-version/app.src.main.java.lac.com.crimimalintent.database.CrimeCursorWrapper.java", "BodyUseAPI": ["java.text.DateFormat.parse(java.lang.String)"], "Fixed commit": "baee3b9d97101fdec65d3f4eb0f90fa2b30c9e56", "Url": "https://api.github.com/repos/Aicun/criminalintent", "Date": "2017-09-01T01:49:58Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { checkPermission(getPermissionChecker(), ddlRecordSetId, ActionKeys.VIEW); } catch (com.liferay.portal.kernel.exception.PortalException pe) { throw new com.liferay.portal.kernel.exception.SystemException(pe); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2118/buggy-version/webs.screens-web.docroot.WEB-INF.src.com.liferay.screens.service.impl.ScreensDDLRecordServiceImpl.java", "BodyUseAPI": ["com.liferay.screens.service.impl.ScreensDDLRecordServiceImpl.checkPermission(getPermissionChecker(),long,ActionKeys.VIEW)", "com.liferay.screens.service.impl.ScreensDDLRecordServiceImpl.getPermissionChecker()"], "Fixed commit": "44e763cf14cc881f6734815a459e451787ede8f0", "Url": "https://api.github.com/repos/neilking/liferay-plugins", "Date": "2016-02-29T22:29:00Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { checkPermission(getPermissionChecker(), ddlRecordSetId, ActionKeys.VIEW); } catch (com.liferay.portal.kernel.exception.PortalException pe) { throw new com.liferay.portal.kernel.exception.SystemException(pe); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2118/buggy-version/webs.screens-web.docroot.WEB-INF.src.com.liferay.screens.service.impl.ScreensDDLRecordServiceImpl.java", "BodyUseAPI": ["com.liferay.screens.service.impl.ScreensDDLRecordServiceImpl.getPermissionChecker()", "com.liferay.screens.service.impl.ScreensDDLRecordServiceImpl.checkPermission(getPermissionChecker(),long,ActionKeys.VIEW)"], "Fixed commit": "44e763cf14cc881f6734815a459e451787ede8f0", "Url": "https://api.github.com/repos/neilking/liferay-plugins", "Date": "2016-02-29T22:29:00Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.con.save(f); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8538/buggy-version/src.tv.mineinthebox.essentials.memory.xEssentialsPlayer.java", "BodyUseAPI": ["org.bukkit.configuration.file.FileConfiguration.save(java.io.File)"], "Fixed commit": "5ab7d15edfafa73d30ca5e35f4f17248f89256c3", "Url": "https://api.github.com/repos/xEssentials/xEssentials", "Date": "2014-03-05T15:27:01Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return moduleInfo.isEnabled() ? moduleInfo.getClassLoader() : null; } catch (java.lang.UnsupportedOperationException | java.lang.IllegalArgumentException ex) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4382/buggy-version/netbeans-gradle-plugin.src.main.java.org.netbeans.gradle.project.others.PluginClassFactory.java", "BodyUseAPI": ["org.openide.modules.ModuleInfo.isEnabled()", "org.openide.modules.ModuleInfo.getClassLoader()"], "Fixed commit": "07deb9fd14016f4daab69b1cd8a1fe7aa8dd05b2", "Url": "https://api.github.com/repos/kelemen/netbeans-gradle-project", "Date": "2015-02-28T12:57:41Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { senderManager.sendAlerts(scheduledAlerts); scheduledAlerts = new java.util.concurrent.ConcurrentHashMap(); } catch (java.lang.Exception e) { com.ctrip.xpipe.redis.console.alert.manager.NotificationManager.logger.error(\"[start][schedule]{}\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7551/buggy-version/redis.redis-console.src.main.java.com.ctrip.xpipe.redis.console.alert.manager.NotificationManager.java", "BodyUseAPI": ["com.ctrip.xpipe.redis.console.alert.manager.SenderManager.sendAlerts(java.util.Map<com.ctrip.xpipe.redis.console.alert.ALERT_TYPE, java.util.Set<com.ctrip.xpipe.redis.console.alert.AlertEntity>>)"], "Fixed commit": "a2091fe8e40113f41902d971eb27851ba9bb72ed", "Url": "https://api.github.com/repos/ctripcorp/x-pipe", "Date": "2017-10-20T07:03:35Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { img = javax.imageio.ImageIO.read(in); } catch (java.lang.Exception e) { net.pms.util.UMSUtils.LOGGER.debug((\"couldn't read thumb to manipulate it \" + e)); img = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4868/buggy-version/src.main.java.net.pms.util.UMSUtils.java", "BodyUseAPI": ["javax.imageio.ImageIO.read(java.io.InputStream)"], "Fixed commit": "681ffd7ca3df92638173c6e381d560b1785ac855", "Url": "https://api.github.com/repos/UniversalMediaServer/UniversalMediaServer", "Date": "2014-10-18T14:39:25Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { group = haveric.stackableItems.Perms.getPrimaryGroup(player).toUpperCase(); } catch (java.lang.Exception e) { if (haveric.stackableItems.Config.isDebugging()) { haveric.stackableItems.SIItems.plugin.log.warning(\"DEBUG: getItemMax() - No group found.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6795/buggy-version/src.haveric.stackableItems.SIItems.java", "BodyUseAPI": ["haveric.stackableItems.Perms.getPrimaryGroup(player).toUpperCase()", "haveric.stackableItems.Perms.getPrimaryGroup(org.bukkit.entity.Player)"], "Fixed commit": "b46cb1aacefcf1c4d2054cc6b8aabc87916b446f", "Url": "https://api.github.com/repos/haveric/StackableItems", "Date": "2013-08-14T03:05:43Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { output.writeObject(message); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7045/buggy-version/src.com.mlc.server.ClientInstance.java", "BodyUseAPI": ["java.io.ObjectOutputStream.writeObject(com.mlc.server.Message)"], "Fixed commit": "5bb72664888924820c610ab2a28a0e56297a296b", "Url": "https://api.github.com/repos/anvari1313/mlc-server", "Date": "2016-07-01T03:42:53Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { in.close(); out.close(); s.close(); } catch (java.io.IOException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6832/buggy-version/IT-Projekt_dominion.src.Dominion.Server.ServerClasses.ClientHandler.java", "BodyUseAPI": ["java.io.ObjectOutputStream.close()", "java.io.ObjectInputStream.close()", "java.net.Socket.close()"], "Fixed commit": "c11e643ec99ca12dead9caa5cdd6b9c8f54d1ca8", "Url": "https://api.github.com/repos/devteamfh/IT-Projekt_dominion", "Date": "2017-12-22T15:40:28Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((helpinfo.get(command)) == page) { msgmgr.sendMessage(PrefixType.INFO, commands.get(command).help(p), p); } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6122/buggy-version/src.main.java.org.mcsg.survivalgames.CommandHandler.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Integer>.get(java.lang.String)", "org.mcsg.survivalgames.MessageManager.sendMessage(PrefixType.INFO,commands.get(command).help(p),org.bukkit.entity.Player)", "java.util.HashMap<java.lang.String, org.mcsg.survivalgames.commands.SubCommand>.get(java.lang.String)", "commands.get(command).help(org.bukkit.entity.Player)"], "Fixed commit": "b8bffdb5a036ceba641d9a090bd737fac0e4331e", "Url": "https://api.github.com/repos/Double0negative/Survival-Games", "Date": "2013-05-12T05:39:03Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { response = chain.proceed(chain.request().newBuilder().header(\"Referer\", reference).build()); android.util.Log.d(\"RefererIn: \", (\"ref: \" + (reference))); } catch (java.lang.IllegalArgumentException e) { response = chain.proceed(chain.request().newBuilder().header(\"Referer\", \"\").build()); android.util.Log.d(\"RefererIn: \", (\"ref: \" + \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8816/buggy-version/app.src.main.java.ar.rulosoft.navegadores.RefererInterceptor.java", "BodyUseAPI": ["ar.rulosoft.navegadores.Chain.proceed(chain.request().newBuilder().header(\"Referer\", reference).build())", "ar.rulosoft.navegadores.Chain.request()", "chain.request().newBuilder().header(java.lang.String,java.lang.String)", "chain.request().newBuilder().header(\"Referer\", reference).build()", "chain.request().newBuilder()", "android.util.Log.d(java.lang.String,java.lang.String)"], "Fixed commit": "b0c96de9634792e2af905f08a790b26ac4be5005", "Url": "https://api.github.com/repos/raulhaag/MiMangaNu", "Date": "2016-05-10T11:46:56Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { final org.springframework.http.HttpEntity<java.lang.String> response = restTemplate.exchange(builder.build().encode().toUri(), HttpMethod.GET, entity, java.lang.String.class); com.vgilab.alternativ.ui.AlterNativApi.LOGGER.severe(response.getBody()); final org.springframework.http.ResponseEntity<java.util.List<com.vgilab.alternativ.generated.AlterNativ>> alterNativResponse = restTemplate.exchange(builder.build().encode().toUri(), HttpMethod.GET, entity, new org.springframework.core.ParameterizedTypeReference<java.util.List<com.vgilab.alternativ.generated.AlterNativ>>() {}); return alterNativResponse.getBody(); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8297/buggy-version/src.main.java.com.vgilab.alternativ.ui.AlterNativApi.java", "BodyUseAPI": ["builder.build().encode()", "org.springframework.web.util.UriComponentsBuilder.build()", "java.util.logging.Logger.severe(response.getBody())", "builder.build().encode()", "org.springframework.http.ResponseEntity<java.util.List<com.vgilab.alternativ.generated.AlterNativ>>.getBody()", "builder.build().encode().toUri()", "org.springframework.web.client.RestTemplate.exchange(builder.build().encode().toUri(),HttpMethod.GET,org.springframework.http.HttpEntity<?>,org.springframework.core.ParameterizedTypeReference<java.util.List<com.vgilab.alternativ.generated.AlterNativ>>)", "builder.build().encode().toUri()", "org.springframework.http.HttpEntity<java.lang.String>.getBody()", "org.springframework.web.client.RestTemplate.exchange(builder.build().encode().toUri(),HttpMethod.GET,org.springframework.http.HttpEntity<?>,java.lang.Class)", "org.springframework.web.util.UriComponentsBuilder.build()"], "Fixed commit": "f7d1d6d430e93069a165b390388aef0cae1e4402", "Url": "https://api.github.com/repos/geooeg/alternativ-ui", "Date": "2016-02-25T12:10:20Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { int result = java.lang.Integer.parseInt(toNumber); if (result > (lines.size())) { java.lang.System.out.println(\"Unable to remove: index is out of bound\"); }else lines.remove((result - 1)); java.nio.file.Files.write(myPath, lines); } catch (java.lang.Exception e) { java.lang.System.out.println(\"Unable to remove: index is not a number\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6512/buggy-version/src.TodoLista.java", "BodyUseAPI": ["java.util.List<java.lang.String>.remove(int)", "java.io.PrintStream.println(java.lang.String)", "java.util.List<java.lang.String>.size()", "java.nio.file.Files.write(java.nio.file.Path,java.util.List<java.lang.String>)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "f98f186e2357d4ed3a46a1fd176c6fa14024b4de", "Url": "https://api.github.com/repos/green-fox-academy/dzlica-todo-app", "Date": "2017-09-28T13:48:43Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.sql.Statement s = conn.createStatement(); s.executeUpdate(((\"DELETE FROM guest \" + \"WHERE guestID = \") + id)); } catch (java.sql.SQLException e) { java.lang.System.out.println(\"Error: Could not delete guest.\"); e.printStackTrace(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7267/buggy-version/HotelDatabase.src.Guest.java", "BodyUseAPI": ["java.sql.Statement.executeUpdate(java.lang.String)", "com.mysql.jdbc.Connection.createStatement()"], "Fixed commit": "e511ed18ec34615c4040adedd71a2a73eda46f6a", "Url": "https://api.github.com/repos/pmsardes/ECE456", "Date": "2013-03-24T20:52:52Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.sql.Statement s = conn.createStatement(); s.executeUpdate(((((((((\"UPDATE guest SET \" + \"guestName = '\") + name) + \"', \") + \"guestAddress = '\") + address) + \"' \") + \"WHERE guestID = \") + id)); } catch (java.sql.SQLException e) { java.lang.System.out.println(\"Error: Could not update guest.\"); e.printStackTrace(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7267/buggy-version/HotelDatabase.src.Guest.java", "BodyUseAPI": ["com.mysql.jdbc.Connection.createStatement()", "java.sql.Statement.executeUpdate(java.lang.String)"], "Fixed commit": "e511ed18ec34615c4040adedd71a2a73eda46f6a", "Url": "https://api.github.com/repos/pmsardes/ECE456", "Date": "2013-03-24T20:52:52Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { display.syncExec(wrapper); } catch (org.eclipse.swt.SWTException e) { if (display.isDisposed()) { org.eclipse.jubula.rc.swt.driver.EventThreadQueuerSwtImpl.log.warn(\"Display has disposed while waiting for IRunnable execution!\"); return null; } org.eclipse.jubula.rc.swt.driver.EventThreadQueuerSwtImpl.log.warn(\"SWTException while waiting for IRunnable execution!\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7172/buggy-version/org.eclipse.jubula.rc.swt.src.org.eclipse.jubula.rc.swt.driver.EventThreadQueuerSwtImpl.java", "BodyUseAPI": ["org.eclipse.swt.widgets.Display.syncExec(org.eclipse.jubula.rc.common.driver.RunnableWrapper)"], "Fixed commit": "d49b329aa4fe07bc37b32d69a43b8844e56dd0d7", "Url": "https://api.github.com/repos/eclipse/jubula.core", "Date": "2014-12-10T11:52:22Z"},
{"Line": "=>523", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { me.StevenLawson.BukkitTelnetClient.BukkitTelnetClient.setup(); } catch (java.io.IOException ex) { me.StevenLawson.BukkitTelnetClient.BukkitTelnetClient.logger.severe((\"SEVERE!!!!!\\n\" + (ex.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8564/buggy-version/src.me.StevenLawson.BukkitTelnetClient.BukkitTelnetClient.java", "BodyUseAPI": ["me.StevenLawson.BukkitTelnetClient.BukkitTelnetClient.setup()"], "Fixed commit": "3a0483b56a8f45e62d272d0f0411affed5ab12a7", "Url": "https://api.github.com/repos/Wilee999/BukkitTelnetClientPlus", "Date": "2013-12-16T00:07:08Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { btn_sendActionPerformed(evt); } catch (java.io.IOException ex) { me.StevenLawson.BukkitTelnetClient.BukkitTelnetClient.logger.severe(ex.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8564/buggy-version/src.me.StevenLawson.BukkitTelnetClient.BukkitTelnetClient.java", "BodyUseAPI": ["me.StevenLawson.BukkitTelnetClient.BukkitTelnetClient.7.btn_sendActionPerformed(java.awt.event.ActionEvent)"], "Fixed commit": "3a0483b56a8f45e62d272d0f0411affed5ab12a7", "Url": "https://api.github.com/repos/Wilee999/BukkitTelnetClientPlus", "Date": "2013-12-16T00:07:08Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { gameThread.wait(); } catch (java.lang.InterruptedException exception) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5247/buggy-version/src.AlphabetPopGame.java", "BodyUseAPI": ["java.lang.Thread.wait()"], "Fixed commit": "f332a15acfeaeac669889049b1134b0c79f61862", "Url": "https://api.github.com/repos/samicsproject/AlphabetPop", "Date": "2016-05-30T15:12:42Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { write(key); } catch (java.io.IOException ioe) { disconnect(((java.nio.channels.SocketChannel) (key.channel()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6985/buggy-version/src.main.java.net.bitdroid.network.BitcoinReactorNetwork.java", "BodyUseAPI": ["net.bitdroid.network.BitcoinReactorNetwork.write(java.nio.channels.SelectionKey)"], "Fixed commit": "476f4173a46f5b95d51d89811a9372658d4c10bb", "Url": "https://api.github.com/repos/cdecker/BitDroid-Network", "Date": "2011-09-15T13:05:09Z"},
{"Line": "=>720", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { Interface.showEmployeeData(Interface.employees.get(Interface.list.getSelectedIndex())); } catch (java.lang.Exception ex) { Interface.errorMessage(\"No Employee was selected.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3567/buggy-version/src.Interface.java", "BodyUseAPI": ["javax.swing.JList<java.lang.String>.getSelectedIndex()", "java.util.ArrayList<Employee>.get(int)", "Interface.showEmployeeData(Interface.employees.get(Interface.list.getSelectedIndex()))"], "Fixed commit": "f6ce870b8f54f6006e3231362dbeda8ef322fe9a", "Url": "https://api.github.com/repos/twonjee2002/HR-System", "Date": "2015-02-18T19:42:31Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { long waitMillis = 10000; while (update_game_thread.isAlive()) { update_game_thread.join(waitMillis); } } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4813/buggy-version/app.src.main.java.hamburg.haw.polyshift.Adapter.MyGamesAdapter.java", "BodyUseAPI": ["java.lang.Thread.join(long)", "java.lang.Thread.isAlive()"], "Fixed commit": "b5f4f9ce87cb0d8c90789e1cb40a66695ef0ebe6", "Url": "https://api.github.com/repos/AndreasHelms/Polyshift", "Date": "2015-05-18T15:57:09Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { updateList.run(); } catch (java.lang.Throwable e) { directory = android.os.Environment.getExternalStorageDirectory(); updateList.run(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5981/buggy-version/app.src.main.java.com.nikolaynik.aideprojectsetup.item.DestinationItem.java", "BodyUseAPI": ["java.lang.Runnable.run()"], "Fixed commit": "74a4013380a54a07092d54aded90142ad8e88675", "Url": "https://api.github.com/repos/NikolayNIK/AIDE-Project-Setup", "Date": "2017-06-03T21:50:15Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { covMat = new CovarianceMatrix(data.getVariables(), tm, numInstances); } catch (java.lang.Exception e) { TetradDataConversion.addToErrorMessages((\"Input data is not a covariance matrix: \" + (e.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6218/buggy-version/TetradDataConversion.program.TetradDataConversion.java", "BodyUseAPI": ["DataSet.getVariables()"], "Fixed commit": "d53424e32c4f5f13006191a46502431670192e62", "Url": "https://api.github.com/repos/LearnSphere/WorkflowComponents", "Date": "2017-10-23T21:23:05Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { int resID = c.getResources().getIdentifier((\"pajaro\" + i), \"raw\", c.getPackageName()); android.media.MediaPlayer mediaPlayer = android.media.MediaPlayer.create(c, resID); mediaPlayer.start(); } catch (java.lang.Exception e) { android.util.Log.e(br.dayanelima.passarinhos.SoundManager.TAG, \"ERROR LOADING SOUND!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4619/buggy-version/Passarinhos.app.src.main.java.br.dayanelima.passarinhos.SoundManager.java", "BodyUseAPI": ["android.content.Context.getResources()", "android.content.Context.getPackageName()", "android.media.MediaPlayer.create(android.content.Context,int)", "android.media.MediaPlayer.start()", "c.getResources().getIdentifier(java.lang.String,java.lang.String,c.getPackageName())"], "Fixed commit": "deefbe70afc5d16a6e14eacba396e56f362b6032", "Url": "https://api.github.com/repos/DayLima/TobiDay", "Date": "2015-07-19T20:11:49Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { type = java.lang.Integer.parseInt(typeAux); } catch (java.lang.NumberFormatException e) { java.lang.System.out.println(\"Opcao invalida\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8057/buggy-version/src.Utilities.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "21dfdf744154bea9c23219fe7e975b0b269b8747", "Url": "https://api.github.com/repos/EmanuelAdler/ResourcesSystem", "Date": "2016-03-07T19:26:07Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { option = java.lang.Integer.parseInt(optionAux); } catch (java.lang.NumberFormatException e) { java.lang.System.out.println(\"Opcao invalida\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8057/buggy-version/src.Utilities.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "21dfdf744154bea9c23219fe7e975b0b269b8747", "Url": "https://api.github.com/repos/EmanuelAdler/ResourcesSystem", "Date": "2016-03-07T19:26:07Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mContext.unregisterReceiver(this); } catch (java.lang.IllegalArgumentException e) { if (!(e.getMessage().startsWith(\"Receiver not registered\"))) { throw e; }else { android.util.Log.d(ecnu.cs14.garagelocation.env.Wifi.TAG, \"destroy: Duplicate un-registration caught.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8314/buggy-version/app.src.main.java.ecnu.cs14.garagelocation.env.Wifi.java", "BodyUseAPI": ["android.content.Context.unregisterReceiver(ecnu.cs14.garagelocation.env.Wifi)"], "Fixed commit": "e63c0bb78260a4825333395f14e24824c4e5c80d", "Url": "https://api.github.com/repos/halfdb/Garage_LBS", "Date": "2017-02-06T14:17:43Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { entry.onClose(this, ((org.liveSense.core.session.SessionEntry) (entry))); } catch (java.lang.Throwable th) { error = th; err = entry; entry.onError(this, ((org.liveSense.core.session.SessionEntry) (entry)), error, err); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6600/buggy-version/src.main.java.org.liveSense.core.session.SessionImpl.java", "BodyUseAPI": ["org.liveSense.core.session.SessionEntry<?>.onClose(org.liveSense.core.session.SessionImpl,org.liveSense.core.session.SessionEntry<?>)"], "Fixed commit": "e7c64a0106882944270fbc8ddba4942ccca913e4", "Url": "https://api.github.com/repos/liveSense/org.liveSense.core", "Date": "2011-11-30T18:54:51Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { file.createNewFile(); new com.estevaocoelho.localfilemanagerlib.FileManagerDownloader(file, url, downloadCallback).execute(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/9014/buggy-version/localfilemanagerlib.src.main.java.com.estevaocoelho.localfilemanagerlib.FileManager.java", "BodyUseAPI": ["java.io.File.createNewFile()", "com.estevaocoelho.localfilemanagerlib.FileManagerDownloader.execute()"], "Fixed commit": "b944f499c979a85a669b02d7011407d7465bd5bf", "Url": "https://api.github.com/repos/EstevaoCoelho647/FileDownloadManager", "Date": "2017-12-08T12:30:52Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { new java.net.URL(value); } catch (java.net.MalformedURLException e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6647/buggy-version/src.main.java.com.PATHoleilu.hutool.Validator.java", "BodyUseAPI": [], "Fixed commit": "6925e73d194af84877a9c7c808514cd54cadd15f", "Url": "https://api.github.com/repos/looly/hutool", "Date": "2015-09-18T06:26:24Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.interval = java.lang.Long.parseLong(pollingInterval); } catch (java.lang.NumberFormatException e) { throw new org.wso2.carbon.messaging.exceptions.ServerConnectorException(((\"Could not parse parameter: \" + (Constants.POLLING_INTERVAL)) + \" to numeric type: Long\"), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/22/buggy-version/connector-framework.src.main.java.org.wso2.carbon.connector.framework.server.polling.PollingServerConnector.java", "BodyUseAPI": ["java.lang.Long.parseLong(java.lang.String)"], "Fixed commit": "07eae21742e44b0f3061e504fc0e81f08914722c", "Url": "https://api.github.com/repos/wso2/carbon-transports", "Date": "2017-04-07T05:15:05Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { serverConnectorController.bindInterface(this); } catch (java.lang.Exception e) { throw new org.wso2.carbon.messaging.exceptions.ServerConnectorException((((\"Cannot bind to \" + (this)) + \" : \") + (e.getMessage())), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/22/buggy-version/http.org.wso2.carbon.transport.http.netty.src.main.java.org.wso2.carbon.transport.http.netty.listener.HTTPServerConnector.java", "BodyUseAPI": ["org.wso2.carbon.transport.http.netty.listener.ServerConnectorController.bindInterface(org.wso2.carbon.transport.http.netty.listener.HTTPServerConnector)"], "Fixed commit": "07eae21742e44b0f3061e504fc0e81f08914722c", "Url": "https://api.github.com/repos/wso2/carbon-transports", "Date": "2017-04-07T05:15:05Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.concurrent.TimeUnit.SECONDS.sleep(5); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7113/buggy-version/src.main.java.com.cimat.meetme.view.FileDownloadView.java", "BodyUseAPI": ["java.util.concurrent.TimeUnit.sleep(int)"], "Fixed commit": "29cb2d137766a987a6ed70812fa3454ab5bc005e", "Url": "https://api.github.com/repos/cpinedogarcia/MeetMe", "Date": "2016-05-14T03:13:00Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { n = java.lang.Integer.parseInt(token); } catch (java.lang.NumberFormatException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7546/buggy-version/hudson-core.src.main.java.hudson.util.VersionNumber.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "9bdc9d79002fe3a81fdcbcc50f26a18d8e30aef4", "Url": "https://api.github.com/repos/8nevil8/hudson", "Date": "2011-06-20T23:26:50Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (response.contains(\"<?xml\")) { update = com.pindroid.client.Update.valueOf(response); }else { android.util.Log.e(com.pindroid.client.PinboardApi.TAG, \"Server error in fetching bookmark list\"); throw new java.io.IOException(); } } catch (java.lang.Exception e) { android.util.Log.e(com.pindroid.client.PinboardApi.TAG, \"Server error in fetching bookmark list\"); throw new java.io.IOException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3238/buggy-version/src.com.pindroid.client.PinboardApi.java", "BodyUseAPI": ["com.pindroid.client.Update.valueOf(java.lang.String)", "java.lang.String.contains(java.lang.String)", "android.util.Log.e(java.lang.String,java.lang.String)"], "Fixed commit": "79be93f738c2e7af3f1572a2bcf9d077389d8c60", "Url": "https://api.github.com/repos/maxpower47/PinDroid", "Date": "2011-06-22T18:49:22Z"},
{"Line": "=>532", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((data.cx) != null) { org.mozilla.javascript.Context.exit(); } } catch (java.lang.Exception er) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6063/buggy-version/engine.src.main.java.org.pentaho.di.trans.steps.scriptvalues_mod.ScriptValuesMod.java", "BodyUseAPI": ["org.mozilla.javascript.Context.exit()"], "Fixed commit": "bdc70c883bc4dd31d336a467dd101a406c574881", "Url": "https://api.github.com/repos/pentaho-jrice/pentaho-kettle", "Date": "2017-12-04T15:44:03Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((stackFrame.location().method().argumentTypes().size()) == 0) { return res; } } catch (com.sun.jdi.ClassNotLoadedException ex2) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4438/buggy-version/org.eclipse.jdt.ls.debug.src.org.eclipse.jdt.ls.debug.adapter.variables.VariableUtils.java", "BodyUseAPI": ["com.sun.jdi.StackFrame.location()", "com.sun.jdi.Method.argumentTypes()", "com.sun.jdi.Location.method()", "java.util.List<com.sun.jdi.Type>.size()"], "Fixed commit": "dff553806e2229255b1bc2ac64f0cfbb611dff9a", "Url": "https://api.github.com/repos/vscjavaci/eclipse.jdt.ls", "Date": "2017-08-31T03:29:12Z"},
{"Line": "=>1790", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { expGen = new com.linkedin.drelephant.exceptions.ExceptionFinder(url, scheduler); flowException = expGen.getExceptions(); } catch (java.lang.RuntimeException e) { parent.add(\"workflow-exceptions\", new com.google.gson.JsonArray()); return status(500, \"Unexpected error occured\"); } catch (java.lang.Exception e) { parent.add(\"workflow-exceptions\", new com.google.gson.JsonArray()); return status(500, \"Unexpected error occured\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8642/buggy-version/app.controllers.api.v1.Web.java", "BodyUseAPI": ["com.linkedin.drelephant.exceptions.ExceptionFinder.getExceptions()"], "Fixed commit": "76aa981074f49b65e77d6599ce08b003800e7744", "Url": "https://api.github.com/repos/nntnag17/dr-elephant-1", "Date": "2017-04-18T09:43:31Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.codehaus.jackson.map.ObjectMapper mapper = new org.codehaus.jackson.map.ObjectMapper(); java.util.Map<java.lang.String, java.lang.Object> results = performYQLQuery(yql); java.util.Map leagueMap = ((java.util.Map<java.lang.String, java.lang.Object>) (results.get(\"league\"))); java.util.Map scoreboardMap = ((java.util.Map<java.lang.String, java.lang.Object>) (leagueMap.get(\"scoreboard\"))); result = mapper.readValue(com.yahoo.utils.json.JacksonPojoMapper.toJson(scoreboardMap, false), com.yahoo.services.LeagueScoreboard.class); } catch (java.lang.Exception e) { java.util.logging.Logger.getLogger(com.yahoo.services.LeagueService.class.getName()).log(java.util.logging.Level.SEVERE, null, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6253/buggy-version/src.main.java.com.yahoo.services.LeagueService.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.util.Map.get(java.lang.String)", "org.codehaus.jackson.map.ObjectMapper.readValue(com.yahoo.utils.json.JacksonPojoMapper.toJson(scoreboardMap, false),java.lang.Class)", "com.yahoo.services.LeagueService.performYQLQuery(java.lang.String)", "com.yahoo.utils.json.JacksonPojoMapper.toJson(java.util.Map,boolean)"], "Fixed commit": "226c9f5d785449592936666a575ba47d67310dba", "Url": "https://api.github.com/repos/cjcharles777/Yahoo-Fantasy-Football-API-Library", "Date": "2015-09-27T17:28:35Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (net.minecraft.entity.Entity entity : ((java.util.List<net.minecraft.entity.Entity>) (event.world.loadedEntityList))) { pneumaticCraft.client.render.pneumaticArmor.hacking.HackableHandler.HackingEntityProperties hackingProps = ((pneumaticCraft.client.render.pneumaticArmor.hacking.HackableHandler.HackingEntityProperties) (entity.getExtendedProperties(\"PneumaticCraftHacking\"))); if (hackingProps != null) { hackingProps.update(entity); }else { pneumaticCraft.lib.Log.warning((\"Extended entity props HackingEntityProperties couldn't be found in the entity \" + (entity.getCommandSenderName()))); } } } catch (java.lang.Throwable e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/272/buggy-version/src.pneumaticCraft.common.HackTickHandler.java", "BodyUseAPI": ["net.minecraft.entity.Entity.getCommandSenderName()", "net.minecraft.entity.Entity.getExtendedProperties(java.lang.String)", "pneumaticCraft.client.render.pneumaticArmor.hacking.HackableHandler.HackingEntityProperties.update(net.minecraft.entity.Entity)", "pneumaticCraft.lib.Log.warning((\"Extended entity props HackingEntityProperties couldn't be found in the entity \" + (entity.getCommandSenderName())))"], "Fixed commit": "8b00fe5c2d7689cc547d7a06998150d190ed0f2e", "Url": "https://api.github.com/repos/MineMaarten/PneumaticCraft", "Date": "2015-06-06T16:50:31Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { timeBetweenTwoTimestamps.setCurrentDate(dateFormat.parse(datenow)); timeBetweenTwoTimestamps.setListDate(dateFormat.parse(date1)); timeBetweenTwoTimestamps.displayCurrentTimeAndListTime(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6248/buggy-version/app.src.main.java.com.psu.acc.list_reminder.Reminder.java", "BodyUseAPI": ["java.text.SimpleDateFormat.parse(java.lang.String)", "com.psu.acc.list_reminder.TimeBetweenTwoTimestamps.setCurrentDate(java.util.Date)", "com.psu.acc.list_reminder.TimeBetweenTwoTimestamps.setListDate(java.util.Date)", "java.text.SimpleDateFormat.parse(java.lang.String)", "com.psu.acc.list_reminder.TimeBetweenTwoTimestamps.displayCurrentTimeAndListTime()"], "Fixed commit": "657926a64c5cdd752107561ac8e04d4e03391c06", "Url": "https://api.github.com/repos/sector46/List_Reminder_App", "Date": "2016-03-09T14:29:24Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { fs.close(); } catch (java.io.IOException ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1033/buggy-version/asakusa-cleaner.src.main.java.com.asakusafw.cleaner.main.HDFSCleaner.java", "BodyUseAPI": ["org.apache.hadoop.fs.FileSystem.close()"], "Fixed commit": "c5eff1df127817670fd76f89e74a90d04c009492", "Url": "https://api.github.com/repos/asakusafw/asakusafw", "Date": "2012-05-31T05:28:49Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { m_transactionManager.commitTransaction(ctx); } finally { release(ctx); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8064/buggy-version/dal.dal-jdbc.src.main.java.com.site.dal.jdbc.engine.DefaultQueryEngine.java", "BodyUseAPI": ["com.site.dal.jdbc.transaction.TransactionManager.commitTransaction(com.site.dal.jdbc.engine.QueryContext)"], "Fixed commit": "b09f1439cd0dd61a6b44cb4d6ffd64a58273d9b0", "Url": "https://api.github.com/repos/unidal/workshop", "Date": "2012-05-02T03:20:59Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { deck.addCard(players.get((i % (players.size()))).takeCard()); } catch (java.lang.IndexOutOfBoundsException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6652/buggy-version/src.Poker.Table.java", "BodyUseAPI": ["Poker.Deck.addCard(players.get((i % (players.size()))).takeCard())", "java.util.ArrayList<Poker.Player>.get((i % (players.size())))", "players.get((i % (players.size()))).takeCard()", "java.util.ArrayList<Poker.Player>.size()"], "Fixed commit": "636aa13ad09b7fec350fa430ae76ed1fd74ee7a6", "Url": "https://api.github.com/repos/tnewman16/Texas-Hold-em", "Date": "2015-12-14T17:25:17Z"},
{"Line": "=>1417", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.bukkit.plugin.Plugin plugin = org.bukkit.Bukkit.getServer().getPluginManager().getPlugin(\"WorldGuard\"); if ((plugin == null) || (!(plugin instanceof com.sk89q.worldguard.bukkit.WorldGuardPlugin))) { return null; } return ((com.sk89q.worldguard.bukkit.WorldGuardPlugin) (plugin)); } catch (java.lang.Exception e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2069/buggy-version/src.com.WildAmazing.marinating.Demigods.DUtil.java", "BodyUseAPI": ["org.bukkit.Bukkit.getServer().getPluginManager().getPlugin(java.lang.String)", "org.bukkit.Bukkit.getServer()", "org.bukkit.Bukkit.getServer().getPluginManager()"], "Fixed commit": "4ee0f4bef1cab1046ae1157576c0ff83399b09b7", "Url": "https://api.github.com/repos/Clashnia/Demigods", "Date": "2012-12-19T03:42:56Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { int vers = java.lang.Integer.valueOf(mVersion); vers += mCycleAdjust; mVersion = \"\" + vers; } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5500/buggy-version/src.com.ds.avare.network.Download.java", "BodyUseAPI": ["java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "b5197ae307145ec71a15e7dde3ceec3757bbf852", "Url": "https://api.github.com/repos/rasii/avare", "Date": "2014-07-23T16:01:18Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { dialingSound.prepareAsync(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/9040/buggy-version/app.src.main.java.io.rtek.rtvoice.Main.java", "BodyUseAPI": ["android.media.MediaPlayer.prepareAsync()"], "Fixed commit": "b702ed78e3af2227dd198a5bfbde20b73ababbda", "Url": "https://api.github.com/repos/rctl/CryptoVoice", "Date": "2017-03-24T13:00:39Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { com.intellij.openapi.util.io.FileUtil.copy(inputStream, outputStream); return file; } finally { inputStream.close(); outputStream.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5862/buggy-version/src.org.elixir_lang.exunit.ElixirModules.java", "BodyUseAPI": ["com.intellij.openapi.util.io.FileUtil.copy(java.io.BufferedInputStream,java.io.BufferedOutputStream)"], "Fixed commit": "c5223e4e7589c52f51abb66752e9d2e6707bca1d", "Url": "https://api.github.com/repos/JakeBecker/intellij-elixir", "Date": "2016-10-28T01:09:28Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { factory.convert(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1681/buggy-version/week4.april_23.Mini.java", "BodyUseAPI": ["Assembly_Factory.convert()"], "Fixed commit": "32f7319a2159dcc58b945f9d779fc088ceace886", "Url": "https://api.github.com/repos/IceFist66/MiniCompiler", "Date": "2014-05-28T23:20:42Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Class.forName(de.jClipCorn.database.DerbyDatabase.DRIVER).newInstance(); } catch (java.lang.InstantiationException | java.lang.IllegalAccessException | java.lang.ClassNotFoundException e) { de.jClipCorn.gui.log.CCLog.addUndefinied(java.lang.Thread.currentThread(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7109/buggy-version/src.de.jClipCorn.database.DerbyDatabase.java", "BodyUseAPI": ["java.lang.Class<?>.newInstance()", "java.lang.Class.forName(java.lang.String)"], "Fixed commit": "44aff5091d6a9e28e998ed36893b79c25dd1b4d0", "Url": "https://api.github.com/repos/Mikescher/jClipCorn", "Date": "2016-07-06T19:06:08Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { examFacade.createExam(request.getDrillId(), userId); } catch (com.fprochazka.drill.model.exceptions.ExamAlreadyExistsException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1801/buggy-version/api.src.main.java.com.fprochazka.drill.api.exam.ExamController.java", "BodyUseAPI": ["com.fprochazka.drill.api.exam.CreateExamRequest.getDrillId()", "com.fprochazka.drill.model.exam.ExamFacade.createExam(request.getDrillId(),java.util.UUID)"], "Fixed commit": "ad306404386310ac6e1cc4b8e3233e2a158be9c5", "Url": "https://api.github.com/repos/fprochazka/fi-muni-PB138-2016-procvicovani-otazek", "Date": "2016-06-10T21:10:21Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.content.pm.PackageInfo packageManager = getPackageManager().getPackageInfo(getPackageName(), 0); } catch (android.content.pm.PackageManager e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5908/buggy-version/app.src.main.java.com.example.stoycho.traveling.activities.SplashActivity.java", "BodyUseAPI": ["getPackageManager().getPackageInfo(getPackageName(),int)", "com.example.stoycho.traveling.activities.SplashActivity.getPackageName()", "com.example.stoycho.traveling.activities.SplashActivity.getPackageManager()"], "Fixed commit": "301fab8c4413be6ec42b0e587e1e8e7ec9402cfb", "Url": "https://api.github.com/repos/StoychoPetrov/Traveling-master", "Date": "2017-04-30T19:45:54Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { if ((hashRes[j]) >= (filterAtI.length)) break; else if ((filterAtI[hashRes[j]]) == 0) break; else count++; } catch (java.lang.Exception ex) { java.lang.System.out.println((((((((hashRes[j]) + \"\\t\") + (filterAtI.length)) + \"\\t\") + (filterSize)) + \"\\t\") + j)); throw new java.lang.ArrayIndexOutOfBoundsException(ex.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2526/buggy-version/src.pa1.DynamicFilter.java", "BodyUseAPI": [], "Fixed commit": "2b8a2631f398ba1b18442f28b0f4f6fb35a86031", "Url": "https://api.github.com/repos/pdhung3012/CS535", "Date": "2017-10-02T06:23:49Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { m_locationManager.requestSingleUpdate(m_criteria, this, m_looper); } catch (java.lang.RuntimeException e) { android.widget.Toast.makeText(m_context, \"Your device firmware is non-conforming. Location services disabled.\", 15); android.content.SharedPreferences prefs = android.preference.PreferenceManager.getDefaultSharedPreferences(m_context); prefs.edit().putString(Constants.PREF_MY_LOCATION, \"0\").apply(); m_mainHandler.post(m_dispatchLocationUpdates); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3398/buggy-version/src.eu.e43.impeller.LocationServices.java", "BodyUseAPI": ["android.location.LocationManager.requestSingleUpdate(android.location.Criteria,eu.e43.impeller.LocationServices,android.os.Looper)"], "Fixed commit": "0f34641fb99dda842081d4f4c856ca5bd68fbdfa", "Url": "https://api.github.com/repos/oshepherd/Impeller", "Date": "2013-11-24T04:19:04Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { userId = java.lang.Long.parseLong(this.id); } catch (java.lang.Exception e) { userId = visitorId; id = java.lang.String.valueOf(visitorId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2181/buggy-version/src.main.java.sitecreators.managedbeans.users.ShowUserInfoBean.java", "BodyUseAPI": ["java.lang.Long.parseLong(java.lang.String)"], "Fixed commit": "355e244670dfc68b729cd526662ac3962f93e83c", "Url": "https://api.github.com/repos/IvViktor/shoptemplate", "Date": "2016-06-05T13:49:50Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return (db.insert(this.getTableName(), null, getContentValues(obj))) != (-1); } catch (android.database.SQLException e) { android.util.Log.e(((\"BelzeBase.DaoObject.insert(\" + (this.getTableName())) + \")\"), e.getMessage()); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/556/buggy-version/belzebase.src.main.java.com.vcarvalho27.belzebase.DaoObject.java", "BodyUseAPI": ["com.vcarvalho27.belzebase.DaoObject<T>.getContentValues(T)", "android.database.sqlite.SQLiteDatabase.insert(java.lang.String,<nulltype>,android.content.ContentValues)", "com.vcarvalho27.belzebase.DaoObject<T>.getTableName()"], "Fixed commit": "5c41affae25276202530f0ddef25c0d963415ee9", "Url": "https://api.github.com/repos/vcarvalho27/BelzeBase", "Date": "2017-01-31T02:26:25Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (java.lang.String s : scripts) { db.execSQL(s); } } catch (android.database.SQLException e) { android.util.Log.e(((\"BelzeBase.DatabaseHelper.onUpgrade(newVersion=\" + newVersion) + \")\"), e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/556/buggy-version/belzebase.src.main.java.com.vcarvalho27.belzebase.DatabaseHelper.java", "BodyUseAPI": ["android.database.sqlite.SQLiteDatabase.execSQL(java.lang.String)"], "Fixed commit": "5c41affae25276202530f0ddef25c0d963415ee9", "Url": "https://api.github.com/repos/vcarvalho27/BelzeBase", "Date": "2017-01-31T02:26:25Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(2000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5685/buggy-version/src.serverGUI.MainScreen.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "58d1bcc8ec501ee523ea8030295d3e516b576144", "Url": "https://api.github.com/repos/TzoofHemed/DNNServer", "Date": "2017-06-23T12:18:40Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.memcachedClient.add(key, 0, java.lang.String.valueOf(this.initialValue)); } catch (java.lang.InterruptedException e) { java.lang.Thread.currentThread().interrupt(); } catch (java.lang.Exception e) { throw new java.lang.IllegalStateException(\"Initialize counter failed\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/968/buggy-version/src.main.java.net.rubyeye.xmemcached.Counter.java", "BodyUseAPI": ["net.rubyeye.xmemcached.MemcachedClient.add(java.lang.String,int,java.lang.String)", "java.lang.String.valueOf(long)"], "Fixed commit": "979eb04d9fcc1a1fcbb2ff39782ea1581ca646c5", "Url": "https://api.github.com/repos/killme2008/xmemcached", "Date": "2011-09-05T13:23:47Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((!(Config.CONFIG.getCbUser().equals(\"\"))) && (!(Config.CONFIG.getCbKey().equals(\"\")))) { fredboat.FredBoat.log.info(\"Starting CleverBot\"); fredboat.FredBoat.jca = new frederikam.jca.JCABuilder().setKey(Config.CONFIG.getCbKey()).setUser(Config.CONFIG.getCbUser()).buildBlocking(); }else { fredboat.FredBoat.log.warn(\"Credentials not found for cleverbot authentication. Skipping...\"); } } catch (java.lang.Exception e) { fredboat.FredBoat.log.error(\"Error when starting JCA\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1708/buggy-version/FredBoat.src.main.java.fredboat.FredBoat.java", "BodyUseAPI": ["Config.CONFIG.getCbUser()", "Config.CONFIG.getCbKey()", "Config.CONFIG.getCbUser()", "frederikam.jca.JCABuilder.setKey(Config.CONFIG.getCbKey())", "Config.CONFIG.getCbKey()", "new frederikam.jca.JCABuilder().setKey(Config.CONFIG.getCbKey()).setUser(Config.CONFIG.getCbUser()).buildBlocking()", "org.slf4j.Logger.info(java.lang.String)", "Config.CONFIG.getCbKey().equals(java.lang.String)", "new frederikam.jca.JCABuilder().setKey(Config.CONFIG.getCbKey()).setUser(Config.CONFIG.getCbUser())", "Config.CONFIG.getCbUser().equals(java.lang.String)", "org.slf4j.Logger.warn(java.lang.String)"], "Fixed commit": "0abee1d45b905acf052c6572e199563ecc493d88", "Url": "https://api.github.com/repos/napstr/FredBoat", "Date": "2017-03-22T20:24:29Z"},
{"Line": "=>1052", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { aClass = java.lang.Class.forName(aType.toString().split(\" \")[2].substring(0, ((aTypes[0].toString().split(\" \")[2].length()) - 1))); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1569/buggy-version/core.src.com.clarkparsia.empire.annotation.RdfGenerator.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.reflect.Type.toString()", "java.lang.Class.forName(java.lang.String)", "java.lang.reflect.Type.toString()", "java.lang.String.split(java.lang.String)", "java.lang.String.length()"], "Fixed commit": "9e502790580db9b83593c88fd1ae2360aeafd59b", "Url": "https://api.github.com/repos/ewpatton/Empire", "Date": "2012-01-24T17:32:52Z"},
{"Line": "=>739", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((this.poisByType) != null) { java.util.Iterator<java.util.ArrayList<org.mtransit.android.data.POIManager>> it = this.poisByType.values().iterator(); while (it.hasNext()) { org.mtransit.android.commons.LocationUtils.updateDistanceWithString(this.getContext(), it.next(), params[0], this); } } } catch (java.lang.Exception e) { org.mtransit.android.commons.MTLog.w(this, e, \"Error while update POIs distance strings!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4772/buggy-version/src.org.mtransit.android.data.POIArrayAdapter.java", "BodyUseAPI": ["java.util.Iterator<java.util.ArrayList<org.mtransit.android.data.POIManager>>.next()", "java.util.Iterator<java.util.ArrayList<org.mtransit.android.data.POIManager>>.hasNext()", "org.mtransit.android.data.POIArrayAdapter.getContext()", "org.mtransit.android.commons.LocationUtils.updateDistanceWithString(this.getContext(),it.next(),params[0],org.mtransit.android.data.POIArrayAdapter.5)", "java.util.LinkedHashMap<java.lang.Integer, java.util.ArrayList<org.mtransit.android.data.POIManager>>.values()", "this.poisByType.values().iterator()"], "Fixed commit": "a106ec466cca40136aae3830971598766fd1cf0f", "Url": "https://api.github.com/repos/mtransitapps/mtransit-for-android", "Date": "2015-04-20T15:37:09Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((_connection) == null) { return; } org.apache.helix.manager.zk.ZkClient.LOG.info((\"Closing zkclient: \" + (((org.I0Itec.zkclient.ZkConnection) (_connection)).getZookeeper()))); super.close(); } catch (org.I0Itec.zkclient.exception.ZkInterruptedException e) { if ((_connection) != null) { try { java.lang.Thread.interrupted(); _connection.close(); _connection = null; java.lang.Thread.currentThread().interrupt(); } catch (java.lang.InterruptedException e1) { throw new org.I0Itec.zkclient.exception.ZkInterruptedException(e1); } } } finally { getEventLock().unlock(); org.apache.helix.manager.zk.ZkClient.LOG.info(\"Closed zkclient\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2174/buggy-version/helix-core.src.main.java.org.apache.helix.manager.zk.ZkClient.java", "BodyUseAPI": ["org.apache.log4j.Logger.info((\"Closing zkclient: \" + (((org.I0Itec.zkclient.ZkConnection) (_connection)).getZookeeper())))", "org.apache.helix.manager.zk.ZkClient.getZookeeper()", "org.I0Itec.zkclient.ZkClient.close()"], "Fixed commit": "0c3796b304c1b26f5887073295faee324f8411fa", "Url": "https://api.github.com/repos/jfim/helix", "Date": "2013-10-18T21:28:43Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(100L); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1306/buggy-version/Racetrack.src.main.java.com.ComServer.java", "BodyUseAPI": ["java.lang.Thread.sleep(long)"], "Fixed commit": "963e209144710fecb68d51ffdc17b2821e86fc5c", "Url": "https://api.github.com/repos/michaelbekos/racetrack", "Date": "2016-01-04T11:16:27Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { v = org.zkoss.zk.ui.Executions.evaluate(comp, el_path, java.lang.Object.class); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2406/buggy-version/zk.src.org.zkoss.zk.ui.sys.ComponentsCtrl.java", "BodyUseAPI": ["org.zkoss.zk.ui.Executions.evaluate(org.zkoss.zk.ui.Component,java.lang.String,java.lang.Class)"], "Fixed commit": "b226a97c3c17e51910e7b512144a14449a0ec277", "Url": "https://api.github.com/repos/chunfuchang/zk", "Date": "2015-05-18T08:23:40Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.apache.http.entity.ContentType type = org.apache.http.entity.ContentType.get(entity); if (type != null) { webResponse.charSet = type.getCharset(); } } catch (java.nio.charset.UnsupportedCharsetException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3007/buggy-version/src.main.java.com.sangupta.jerry.http.WebResponseHandler.java", "BodyUseAPI": ["org.apache.http.entity.ContentType.get(org.apache.http.HttpEntity)", "org.apache.http.entity.ContentType.getCharset()"], "Fixed commit": "dcc8871af1d564ef65628d3f24f591cebdc02070", "Url": "https://api.github.com/repos/sangupta/jerry", "Date": "2013-02-20T09:26:03Z"},
{"Line": "=>677", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { setCaretPosition(classHighlights.get(0).startPos); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5428/buggy-version/src.com.jpexs.decompiler.flash.gui.abc.DecompiledEditorPane.java", "BodyUseAPI": ["java.util.List<com.jpexs.decompiler.flash.helpers.hilight.Highlighting>.get(int)", "com.jpexs.decompiler.flash.gui.abc.DecompiledEditorPane.setCaretPosition(classHighlights.get(0).startPos)"], "Fixed commit": "2a63daf3f08dc595cc89aa2834b0a1fec4d7f85b", "Url": "https://api.github.com/repos/jindrapetrik/jpexs-decompiler", "Date": "2015-10-30T09:47:31Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (!(this.threadPool.awaitTermination(10, java.util.concurrent.TimeUnit.MILLISECONDS))) { this.threadPool.shutdownNow(); } } catch (java.lang.InterruptedException e) { this.threadPool.shutdownNow(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4675/buggy-version/src.main.java.com.zjh.tears.Server.java", "BodyUseAPI": ["java.util.concurrent.ExecutorService.awaitTermination(int,java.util.concurrent.TimeUnit)", "java.util.concurrent.ExecutorService.shutdownNow()"], "Fixed commit": "a877af0170cd6e02aad9f4cb959be7fed4d0122e", "Url": "https://api.github.com/repos/zjhch123/Tears", "Date": "2017-02-21T11:59:33Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { AppleCoreCompiler.Compiler.Parser parser = new AppleCoreCompiler.Compiler.Parser(importFileName); AppleCoreCompiler.Compiler.SourceFile importFile = parser.parse(); for (AppleCoreCompiler.Compiler.Declaration decl : importFile.decls) { if (!(decl instanceof AppleCoreCompiler.Compiler.IncludeDecl)) { decl.isExternal = true; sourceFile.importedDecls.add(decl); } } } catch (java.io.FileNotFoundException e) { throw new AppleCoreCompiler.Compiler.FileNotFoundError(importFileName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2624/buggy-version/Compiler.java.AppleCoreCompiler.Compiler.Main.java", "BodyUseAPI": ["AppleCoreCompiler.Compiler.Parser.parse()", "sourceFile.importedDecls.add(AppleCoreCompiler.Compiler.Declaration)"], "Fixed commit": "f38362d64faedaca4f6864a45aca45049e5dc9cf", "Url": "https://api.github.com/repos/bocchino/AppleCore", "Date": "2013-03-21T21:26:51Z"},
{"Line": "=>504", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (isLocal) { org.cytoscape.util.swing.FileChooserFilter fileChooserFilter = new org.cytoscape.util.swing.FileChooserFilter(\"BridgeDb Derby file\", new java.lang.String[]{ \"txt\" }); java.io.File source = fileUtil.getFile(this, \"Select a ID mapping file\", FileUtil.LOAD, java.util.Collections.singleton(fileChooserFilter)); if (source == null) { return; } url = source.toURI().toURL(); strURL = url.toString(); textFileTextField.setText(strURL); }else { strURL = textFileTextField.getText(); if ((strURL == null) || ((strURL.length()) == 0)) { return; } url = new java.net.URL(strURL); } } catch (java.lang.Exception e) { javax.swing.JOptionPane.showMessageDialog(this, \"Error: unable to open the file.\"); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8701/buggy-version/src.main.java.org.bridgedb.cytoscape.internal.ui.FileIDMappingClientConfigDialog.java", "BodyUseAPI": ["org.cytoscape.util.swing.FileUtil.getFile(org.bridgedb.cytoscape.internal.ui.FileIDMappingClientConfigDialog,java.lang.String,FileUtil.LOAD,java.util.Set)", "javax.swing.JTextField.getText()", "java.lang.String.length()", "java.net.URI.toURL()", "javax.swing.JTextField.setText(java.lang.String)", "java.util.Collections.singleton(org.cytoscape.util.swing.FileChooserFilter)", "java.io.File.toURI()", "java.net.URL.toString()"], "Fixed commit": "e72881fa2640c0e004b324124aa0c81983d5ae38", "Url": "https://api.github.com/repos/jjgao/bridgedb.cytoscape", "Date": "2014-05-28T02:59:53Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { seed = java.lang.Integer.parseInt(args[0]); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8818/buggy-version/src.yahtzee.Stats.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "5feb3bed69f21a08c14a74ed8ab82df4faf84c09", "Url": "https://api.github.com/repos/rasmusgreve/yahtzee", "Date": "2014-04-08T11:28:35Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { db.execSQL(\"alter table accountdata_reservations add column expire text\"); } catch (android.database.sqlite.SQLiteException sqle) { sqle.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1911/buggy-version/src.de.geeksfactory.opacclient.storage.AccountDatabase.java", "BodyUseAPI": ["android.database.sqlite.SQLiteDatabase.execSQL(java.lang.String)"], "Fixed commit": "9c954c4231cbee683a37e3ece2f2c85a75b8cd8b", "Url": "https://api.github.com/repos/raphaelm/opacclient", "Date": "2013-03-24T17:07:50Z"},
{"Line": "=>948", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { knownSnps = variants.getDouble(\"total.known\"); qcList.add(\"total.known\", knownSnps); } catch (json.JSONException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8430/buggy-version/src.main.java.util.QCJsonReader.java", "BodyUseAPI": ["json.JSONObject.getDouble(java.lang.String)", "util.QCJsonReader.QCInfoList.add(java.lang.String,java.lang.Double)"], "Fixed commit": "d3b5163d4a521c8a334e3e6ee553c1670c963981", "Url": "https://api.github.com/repos/ARUP-NGS/Pipeline", "Date": "2015-05-04T18:43:51Z"},
{"Line": "=>544", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { listener.sessionClosed(this); } catch (java.lang.RuntimeException e) { log.warn((((e.getClass().getSimpleName()) + \" while signal session closed: \") + (e.getMessage())), e); } finally { this.sessionListeners.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6608/buggy-version/sshd-core.src.main.java.org.apache.sshd.common.session.AbstractSession.java", "BodyUseAPI": ["org.apache.sshd.common.session.SessionListener.sessionClosed(org.apache.sshd.common.session.AbstractSession)"], "Fixed commit": "1cb74ba7d8c055cba37ac520f55ed24d255fae7e", "Url": "https://api.github.com/repos/lgoldstein/mina-sshd", "Date": "2015-08-24T08:15:29Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { final mondrian.olap.MondrianServer server = mondrian.olap.MondrianServer.forConnection(con); mondrian.server.FileRepository fr = new mondrian.server.FileRepository(makeContentFinder(makeDataSourcesUrl(servletConfig)), makeCatalogLocator(servletConfig)); return fr.getConnection(server, databaseName, catalogName, roleName, props); } finally { con.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3713/buggy-version/extensions.src.org.pentaho.platform.web.servlet.PentahoXmlaServlet.java", "BodyUseAPI": ["mondrian.olap.MondrianServer.forConnection(mondrian.olap.Connection)", "mondrian.server.FileRepository.getConnection(mondrian.olap.MondrianServer,java.lang.String,java.lang.String,java.lang.String,java.util.Properties)", "org.pentaho.platform.web.servlet.PentahoXmlaServlet.3.makeContentFinder(java.lang.String)", "org.pentaho.platform.web.servlet.PentahoXmlaServlet.3.makeCatalogLocator(javax.servlet.ServletConfig)", "org.pentaho.platform.web.servlet.PentahoXmlaServlet.3.makeDataSourcesUrl(javax.servlet.ServletConfig)"], "Fixed commit": "35dabaa5db3e01cf5bdd942986cb344f9706ac80", "Url": "https://api.github.com/repos/bytekast/pentaho-platform", "Date": "2013-03-21T15:58:22Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { return new com.redhat.qe.helpers.ssh.FileHelper().listFiles(session, new com.redhat.qe.helpers.utils.AbsolutePath(com.redhat.qe.helpers.utils.Path.from(brick.getDir()))).getStdout(); } finally { session.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/769/buggy-version/src.main.java.com.redhat.qe.helpers.rebalance.BrickFiles.java", "BodyUseAPI": ["com.redhat.qe.helpers.ssh.FileHelper.listFiles(com.redhat.qe.ssh.ExecSshSession,com.redhat.qe.helpers.utils.AbsolutePath)", "new com.redhat.qe.helpers.ssh.FileHelper().listFiles(session, new com.redhat.qe.helpers.utils.AbsolutePath(com.redhat.qe.helpers.utils.Path.from(brick.getDir()))).getStdout()", "com.redhat.qe.model.Brick.getDir()", "com.redhat.qe.helpers.utils.Path.from(brick.getDir())"], "Fixed commit": "8e14b08d630aee8100bbf44c9b060c66f4ff9733", "Url": "https://api.github.com/repos/rhscqe/rhsc-shell-rest-api-automation", "Date": "2014-04-22T02:45:34Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { messageParser.send(message); } catch (ds.android.tasknet.exceptions.InvalidMessageException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5802/buggy-version/src.ds.android.tasknet.activity.CaptureEventActivity.java", "BodyUseAPI": ["ds.android.tasknet.msgpasser.MessagePasser.send(ds.android.tasknet.msgpasser.Message)"], "Fixed commit": "c5199083f6ec740769ddbd2ab1a3f7e1edfd98ff", "Url": "https://api.github.com/repos/dilipgudlur/TaskNet", "Date": "2011-03-20T09:16:31Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { metadata = metaDao.findOne(tweet.getUser(), tweet.getClassification()); } catch (java.lang.NullPointerException e) { metadata = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/150/buggy-version/src.main.java.uk.ac.ncl.tweetsim.network.InjectionWorker.java", "BodyUseAPI": ["br.les.opus.twitter.repositories.TweetsMetadataRepository.findOne(tweet.getUser(),tweet.getClassification())", "br.les.opus.twitter.domain.Tweet.getUser()", "br.les.opus.twitter.domain.Tweet.getClassification()"], "Fixed commit": "c7fa8299d24b26edbc08b6097257df175cb82026", "Url": "https://api.github.com/repos/JonoCX/tweet-sim", "Date": "2017-07-05T11:59:43Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { response.setCharacterEncoding(\"utf-8\"); java.io.PrintWriter out = response.getWriter(); out.println(jo); out.flush(); out.close(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/765/buggy-version/src.main.java.cn.internship.action.StuWeeklyPlanAction.java", "BodyUseAPI": ["javax.servlet.http.HttpServletResponse.setCharacterEncoding(java.lang.String)", "java.io.PrintWriter.flush()", "javax.servlet.http.HttpServletResponse.getWriter()", "java.io.PrintWriter.close()", "java.io.PrintWriter.println(org.json.JSONObject)"], "Fixed commit": "333e1a8593e272028236c52541ecc215c92a8b66", "Url": "https://api.github.com/repos/bjut-2014/internship", "Date": "2016-04-10T07:40:37Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { lab0.Employee emp = new lab0.Employee(\"Jim\", \"Smith\", \"3333333333\", 28); fullNameInCaps = ((emp.getFirstName().toUpperCase()) + \" \") + (emp.getLastName().toUpperCase()); } catch (java.lang.IllegalArgumentException ia) { java.lang.System.out.println(ia.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3410/buggy-version/src.lab0.Startup.java", "BodyUseAPI": ["emp.getFirstName().toUpperCase()", "lab0.Employee.getFirstName()", "emp.getLastName().toUpperCase()", "lab0.Employee.getLastName()"], "Fixed commit": "7bad93b7d47e5dc7da21514b25d689a03e482e77", "Url": "https://api.github.com/repos/Cschultz13/ExceptionsLab", "Date": "2016-10-13T20:16:47Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { startActivity(new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse(\"https://play.google.com/store/apps/developer?id=Prem+Bros\"))); } catch (java.lang.Exception e) { e.printStackTrace(); android.widget.Toast.makeText(getContext(), \"No app found for this action!\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4521/buggy-version/app.src.main.java.com.prembros.programming.quizapp.About.java", "BodyUseAPI": ["android.net.Uri.parse(java.lang.String)", "com.prembros.programming.quizapp.About.1.startActivity(android.content.Intent)"], "Fixed commit": "43782da803e04accae79d10ab0b8dd077e3f6f93", "Url": "https://api.github.com/repos/premacck1/QuizApp", "Date": "2016-09-02T08:08:24Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.mWakeLock.release(); } catch (java.lang.Throwable th) { mService.logEvent(\"Warning, code 01.1\", false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6093/buggy-version/habmodem.src.com.brejza.matt.habmodem.Map_Activity.java", "BodyUseAPI": ["PowerManager.WakeLock.release()"], "Fixed commit": "d3aef988c8f5d4601a489b83bd7fb0bea5972b52", "Url": "https://api.github.com/repos/mattbrejza/rtty_modem", "Date": "2013-08-04T20:26:33Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { initDetailFragment(\"\"); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8069/buggy-version/popularmovies.src.main.java.com.example.jose_gonzalez.popularmovies.ui.MoviesListActivity.java", "BodyUseAPI": ["com.example.jose_gonzalez.popularmovies.ui.MoviesListActivity.initDetailFragment(java.lang.String)"], "Fixed commit": "060768e3aa4b65a5f09857bb64665c123df11941", "Url": "https://api.github.com/repos/josemg08/MyUdacityPortfolio", "Date": "2016-02-25T03:08:45Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.example.jose_gonzalez.popularmovies.ui.ReviewAdapter mReviewAdapter = new com.example.jose_gonzalez.popularmovies.ui.ReviewAdapter(reviewListDto.getReviewDtos()); ((com.example.jose_gonzalez.popularmovies.ui.ReviewListFragment) (mFragmentPages.get(1))).setReviewAdapter(mReviewAdapter); } catch (java.lang.Exception e) { if (trailerKey.equals(\"\")) { mPager.setVisibility(View.GONE); mTabLayout.setVisibility(View.GONE); } e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8069/buggy-version/popularmovies.src.main.java.com.example.jose_gonzalez.popularmovies.ui.MovieDetailFragment.java", "BodyUseAPI": ["com.example.jose_gonzalez.popularmovies.dto.ReviewListDto.getReviewDtos()", "java.util.List<android.support.v4.app.Fragment>.get(int)", "((com.example.jose_gonzalez.popularmovies.ui.ReviewListFragment) (mFragmentPages.get(1))).setReviewAdapter(com.example.jose_gonzalez.popularmovies.ui.ReviewAdapter)"], "Fixed commit": "060768e3aa4b65a5f09857bb64665c123df11941", "Url": "https://api.github.com/repos/josemg08/MyUdacityPortfolio", "Date": "2016-02-25T03:08:45Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.google.lecture_manager.server.utils.FileUtil.deleteFile(path); } catch (java.lang.Exception e) { e.printStackTrace(); throw new java.lang.Exception(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6623/buggy-version/src.com.google.lecture_manager.server.LectureServiceImpl.java", "BodyUseAPI": ["com.google.lecture_manager.server.utils.FileUtil.deleteFile(java.lang.String)"], "Fixed commit": "e7570f07e77f3603a186f35c5ff3b0ff6ea258ea", "Url": "https://api.github.com/repos/razvanolar/LectureManager", "Date": "2017-01-31T16:24:25Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String[] roles = userStoreManager.getRoleListOfUser(userId); for (java.lang.String role : roles) { org.activiti.engine.identity.Group group = new org.activiti.engine.impl.persistence.entity.GroupEntity(role); groups.add(group); } } catch (org.wso2.carbon.user.api.UserStoreException e) { java.lang.String msg = (\"Failed to get roles of the user: \" + userId) + \". Returning an empty roles list.\"; org.wso2.carbon.bpmn.core.integration.BPSGroupIdentityManager.log.error(msg, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4076/buggy-version/components.bpmn.org.wso2.carbon.bpmn.src.main.java.org.wso2.carbon.bpmn.core.integration.BPSGroupIdentityManager.java", "BodyUseAPI": ["java.util.List<org.activiti.engine.identity.Group>.add(org.activiti.engine.identity.Group)", "org.wso2.carbon.user.core.UserStoreManager.getRoleListOfUser(java.lang.String)"], "Fixed commit": "a8c52a92ea6fd12958f1ca9a789c58811731e0fd", "Url": "https://api.github.com/repos/wso2/carbon-business-process", "Date": "2015-05-27T09:12:57Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { if (((map1[y1][x1]) == (-5)) || ((map2[y2][x2]) == (-5))) { ++action; continue; } } catch (java.lang.ArrayIndexOutOfBoundsException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4628/buggy-version/src.mirroruniverse.g4.AStar_2.java", "BodyUseAPI": [], "Fixed commit": "868b8649a9994685e36091b43750e9b8006510db", "Url": "https://api.github.com/repos/jonnyboy205/MirrorUniverse", "Date": "2011-11-23T16:22:10Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return input == null ? new byte[]{ } : input.getBytes(\"UTF-8\"); } catch (java.io.UnsupportedEncodingException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8364/buggy-version/src.main.java.com.redhat.ecs.commonutils.StringUtilities.java", "BodyUseAPI": ["java.lang.String.getBytes(java.lang.String)"], "Fixed commit": "2186ff3f7b68ff64100529bfd30e419416fb3807", "Url": "https://api.github.com/repos/mcasperson/Common-utilities", "Date": "2012-07-18T05:55:12Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Integer converted = java.lang.Integer.valueOf((first_value + second_value).toLowerCase(), 16); int converted_int = ((int) (converted)); subject_bytes.write(((byte) (converted_int))); } catch (java.lang.NumberFormatException e) { android.util.Log.d(\"Encoding\", (((\"Wasn't able to convert '\" + first_value) + second_value) + \"' to Integer (HEX)\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8131/buggy-version/app.src.main.java.com.freeteam01.androidnewsgroupreader.Models.NewsGroupArticle.java", "BodyUseAPI": ["java.io.ByteArrayOutputStream.write(int)", "java.lang.Integer.valueOf(java.lang.String,int)", "java.lang.String.toLowerCase()"], "Fixed commit": "7c27f4be77175099ffc7c552eddb63cd25c8697c", "Url": "https://api.github.com/repos/johanneskopf/AndroidNewsGroupReader", "Date": "2017-06-07T12:22:44Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { document = javax.xml.parsers.DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(new java.io.ByteArrayInputStream(requestBody.getBytes(java.nio.charset.StandardCharsets.UTF_8))); } catch (org.xml.sax.SAXException | java.io.IOException | javax.xml.parsers.ParserConfigurationException e) { throw new java.lang.IllegalStateException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2940/buggy-version/api-stub-core.src.main.java.com.kazuki43zoo.api.key.XPathKeyExtractor.java", "BodyUseAPI": ["javax.xml.parsers.DocumentBuilderFactory.newDocumentBuilder()", "javax.xml.parsers.DocumentBuilder.parse(java.io.ByteArrayInputStream)", "javax.xml.parsers.DocumentBuilderFactory.newInstance()", "java.lang.String.getBytes(java.nio.charset.Charset)"], "Fixed commit": "a40d9f2637cfbdaea9b9dea945efad74a62072aa", "Url": "https://api.github.com/repos/kazuki43zoo/api-stub", "Date": "2016-09-25T16:40:39Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(120000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4375/buggy-version/src.udo.logic.Reminder.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "03350289f60eb0e91ed59dde36022bddef43e3ba", "Url": "https://api.github.com/repos/cs2103jan2015-w13-3j/main", "Date": "2015-03-30T02:28:04Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { kaaes.spotify.webapi.android.SpotifyApi spotifyApi = new kaaes.spotify.webapi.android.SpotifyApi(); kaaes.spotify.webapi.android.SpotifyService spotifyService = spotifyApi.getService(); java.util.Map<java.lang.String, java.lang.Object> options = new java.util.HashMap<>(); options.put(\"country\", \"US\"); kaaes.spotify.webapi.android.models.Tracks tracks = spotifyService.getArtistTopTrack(params[0], options); return tracks.tracks; } catch (retrofit.RetrofitError e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6942/buggy-version/app.src.main.java.com.example.gabrielmojica.spotify3.TrackActivityFragment.java", "BodyUseAPI": ["kaaes.spotify.webapi.android.SpotifyApi.getService()", "kaaes.spotify.webapi.android.SpotifyService.getArtistTopTrack(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)", "java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.String)"], "Fixed commit": "95a98459b16a010a10b5413b83bdc15a7ceae244", "Url": "https://api.github.com/repos/gabriel2761/SpotifyStreamer", "Date": "2015-06-28T04:41:26Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return getValue(java.lang.Integer.class, key); } catch (java.lang.ClassCastException e) { return java.lang.Integer.parseInt(getString(key)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6462/buggy-version/deep-commons.src.main.java.com.stratio.deep.commons.config.ExtractorConfig.java", "BodyUseAPI": ["com.stratio.deep.commons.config.ExtractorConfig<T>.getValue(java.lang.Class,java.lang.String)"], "Fixed commit": "26fe6283092caf9a5c541d61f39bc11699214baf", "Url": "https://api.github.com/repos/Stratio/deep-spark", "Date": "2014-10-15T11:28:25Z"},
{"Line": "=>1164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (doUpdates) nitezh.ministock.widget.WidgetBase.updateWidgets(context, nitezh.ministock.widget.WidgetBase.VIEW_UPDATE); else nitezh.ministock.widget.WidgetBase.updateWidgets(context, nitezh.ministock.widget.WidgetBase.VIEW_NO_UPDATE); } catch (java.util.concurrent.RejectedExecutionException ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1401/buggy-version/src.nitezh.ministock.widget.WidgetBase.java", "BodyUseAPI": ["nitezh.ministock.widget.WidgetBase.updateWidgets(android.content.Context,int)", "nitezh.ministock.widget.WidgetBase.updateWidgets(android.content.Context,int)"], "Fixed commit": "704fc94e857c561a67951e5448b7b15264ff734a", "Url": "https://api.github.com/repos/niteshpatel/ministocks", "Date": "2015-04-19T16:50:05Z"},
{"Line": "=>989", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { success = getActiveIndex().manuallyInjectChunkMarkerUrls(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1126/buggy-version/app.src.main.java.com.door43.translationstudio.core.Library.java", "BodyUseAPI": ["com.door43.translationstudio.core.Indexer.manuallyInjectChunkMarkerUrls()", "com.door43.translationstudio.core.Library.getActiveIndex()"], "Fixed commit": "07f20a1d157bd9d9482b11b0a51aac5261600daa", "Url": "https://api.github.com/repos/neutrinog/ts-android", "Date": "2016-04-08T20:56:53Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { locMgr.requestLocationUpdates(provider, 0, 0, listener); } catch (java.lang.IllegalArgumentException e) { quit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/457/buggy-version/src.com.commonsware.cwac.locpoll.LocationPollerService.java", "BodyUseAPI": ["android.location.LocationManager.requestLocationUpdates(java.lang.String,int,int,android.location.LocationListener)"], "Fixed commit": "45059c185112901a45538f3cc8e852af18bdaa72", "Url": "https://api.github.com/repos/chrisjenx/cwac-locpoll", "Date": "2012-06-04T22:19:15Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { childView.setText(this.text); } catch (java.lang.ArrayIndexOutOfBoundsException a) { this.childView.setText(this.text.toString()); } catch (java.lang.IndexOutOfBoundsException ie) { this.childView.setText(this.text.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6250/buggy-version/src.net.nightwhistler.pageturner.view.bookview.ScrollingStrategy.java", "BodyUseAPI": ["android.widget.TextView.setText(android.text.Spannable)"], "Fixed commit": "6de59a6bb9af8023d60d068f4d66adf1b2ae615c", "Url": "https://api.github.com/repos/NightWhistler/PageTurner", "Date": "2014-03-24T15:06:07Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.childView.setText(sequence); } catch (java.lang.ArrayIndexOutOfBoundsException a) { this.childView.setText(sequence.toString()); } catch (java.lang.IndexOutOfBoundsException ie) { this.childView.setText(sequence.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6250/buggy-version/src.net.nightwhistler.pageturner.view.bookview.FixedPagesStrategy.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.CharSequence)"], "Fixed commit": "6de59a6bb9af8023d60d068f4d66adf1b2ae615c", "Url": "https://api.github.com/repos/NightWhistler/PageTurner", "Date": "2014-03-24T15:06:07Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { metadata = rx.read(LogicalDatastoreType.OPERATIONAL, iid).get(); } catch (java.lang.InterruptedException | java.util.concurrent.ExecutionException e) { throw e; } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4683/buggy-version/alto-basic.simple-ird.impl.src.main.java.org.opendaylight.alto.basic.impl.rfc7285.SimpleIrdRfc7285DefaultNetworkMapListener.java", "BodyUseAPI": ["rx.read(LogicalDatastoreType.OPERATIONAL, iid).get()", "org.opendaylight.controller.md.sal.binding.api.ReadTransaction.read(LogicalDatastoreType.OPERATIONAL,org.opendaylight.yangtools.yang.binding.InstanceIdentifier<org.opendaylight.yang.gen.v1.urn.opendaylight.alto.basic.simple.ird.rfc7285.rev151021.Rfc7285IrdMetadata>)"], "Fixed commit": "58eef73b99df7d3ecb8e28e706429f3f42645309", "Url": "https://api.github.com/repos/inocybe/odl-alto", "Date": "2015-12-31T07:22:47Z"},
{"Line": "=>419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { writer.println(((\"\\t<updated>\" + updated) + \"</updated>\")); } catch (java.lang.NullPointerException e) { writer.println(\"\\t<updated></updated>\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3494/buggy-version/src.com.agroknow.cimmyt.utils.CimmytWriter.java", "BodyUseAPI": ["java.io.PrintWriter.println(java.lang.String)"], "Fixed commit": "b18c9be550465fa27cfa833a5ad139acc5d12b0a", "Url": "https://api.github.com/repos/mihalispap/CIMYTEnricher", "Date": "2016-05-23T13:45:41Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String date = created.get(i).toString(); writer.println(((\"\\t<created>\" + date) + \"</created>\")); } catch (java.lang.NullPointerException e) { writer.println(\"<created></created>\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3494/buggy-version/src.com.agroknow.cimmyt.utils.CimmytWriter.java", "BodyUseAPI": ["javax.xml.datatype.XMLGregorianCalendar.toString()", "java.util.List<javax.xml.datatype.XMLGregorianCalendar>.get(int)", "java.io.PrintWriter.println(java.lang.String)"], "Fixed commit": "b18c9be550465fa27cfa833a5ad139acc5d12b0a", "Url": "https://api.github.com/repos/mihalispap/CIMYTEnricher", "Date": "2016-05-23T13:45:41Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return context.select(value).from(table).where(this.row.eq(row)).and(this.column.eq(column)).fetchOne().getValue(value); } catch (java.lang.RuntimeException e) { throw new java.lang.RuntimeException((((((\" Failed to fetch row \" + row) + \", column \") + column) + \" from \") + (table)), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4634/buggy-version/dataset.domain.src.main.java.edu.dfci.cccb.mev.dataset.domain.jooq.JooqBasedDataSourceValues.java", "BodyUseAPI": ["context.select(value).from(table).where(this.row.eq(row)).and(this.column.eq(column)).fetchOne().getValue(org.jooq.Field<java.lang.Double>)", "org.jooq.DSLContext.select(org.jooq.Field<java.lang.Double>)", "context.select(value).from(org.jooq.Table<?>)", "org.jooq.Field<java.lang.String>.eq(java.lang.String)", "context.select(value).from(table).where(this.row.eq(row)).and(this.column.eq(column))", "org.jooq.Field<java.lang.String>.eq(java.lang.String)", "context.select(value).from(table).where(this.row.eq(row)).and(this.column.eq(column)).fetchOne()", "context.select(value).from(table).where(this.row.eq(row))"], "Fixed commit": "7f169d4254a9028d7febf6a44a926487980f2c4b", "Url": "https://api.github.com/repos/dfci-cccb/mev", "Date": "2014-02-24T23:44:06Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.nio.file.Files.delete(cardBean.getImageBack().toPath()); } catch (java.lang.Exception e) { com.sebastiandine.cardcollectionmanager.logging.Logger.warn(\"Old file not found at the specified path.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8603/buggy-version/src.com.sebastiandine.cardcollectionmanager.services.CardBeanImageServices.java", "BodyUseAPI": ["com.sebastiandine.cardcollectionmanager.bean.CardBean.getImageBack()", "java.nio.file.Files.delete(cardBean.getImageBack().toPath())", "cardBean.getImageBack().toPath()"], "Fixed commit": "0bcbef069e78aafb639e587a3e6f83aa77215fe1", "Url": "https://api.github.com/repos/sebastiandine/Card-Collection-Manager", "Date": "2017-09-28T12:50:30Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.nio.file.Files.delete(cardBean.getImageFront().toPath()); } catch (java.lang.Exception e) { com.sebastiandine.cardcollectionmanager.logging.Logger.warn(\"Old file not found at the specified path.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8603/buggy-version/src.com.sebastiandine.cardcollectionmanager.services.CardBeanImageServices.java", "BodyUseAPI": ["com.sebastiandine.cardcollectionmanager.bean.CardBean.getImageFront()", "java.nio.file.Files.delete(cardBean.getImageFront().toPath())", "cardBean.getImageFront().toPath()"], "Fixed commit": "0bcbef069e78aafb639e587a3e6f83aa77215fe1", "Url": "https://api.github.com/repos/sebastiandine/Card-Collection-Manager", "Date": "2017-09-28T12:50:30Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { vertexEvaluators.mark(v, de.uni_koblenz.jgralab.greql2.evaluator.vertexeval.VertexEvaluator.createVertexEvaluator(((de.uni_koblenz.jgralab.greql2.schema.Greql2Vertex) (v)), this)); } catch (java.lang.RuntimeException e) { if (!((e.getCause()) instanceof java.lang.ClassNotFoundException)) { throw e; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7165/buggy-version/src.de.uni_koblenz.jgralab.greql2.evaluator.QueryImpl.java", "BodyUseAPI": ["de.uni_koblenz.jgralab.greql2.evaluator.vertexeval.VertexEvaluator.createVertexEvaluator(de.uni_koblenz.jgralab.Vertex,de.uni_koblenz.jgralab.greql2.evaluator.QueryImpl)", "de.uni_koblenz.jgralab.graphmarker.GraphMarker<de.uni_koblenz.jgralab.greql2.evaluator.vertexeval.VertexEvaluator<? extends de.uni_koblenz.jgralab.greql2.schema.Greql2Vertex>>.mark(de.uni_koblenz.jgralab.Vertex,de.uni_koblenz.jgralab.greql2.evaluator.vertexeval.VertexEvaluator.createVertexEvaluator(((de.uni_koblenz.jgralab.greql2.schema.Greql2Vertex) (v)), this))"], "Fixed commit": "073f806684e837e1ea2350dd670efe144a8f7dd8", "Url": "https://api.github.com/repos/jgralab/jgralab", "Date": "2012-04-04T12:12:00Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (strTime.endsWith(\"s\")) { time = (java.lang.Float.parseFloat(strTime.replace(\"s\", \"\"))) * 1; }else if (strTime.endsWith(\"m\")) { time = (java.lang.Float.parseFloat(strTime.replace(\"m\", \"\"))) * 60; }else if (strTime.endsWith(\"h\")) { time = ((java.lang.Float.parseFloat(strTime.replace(\"h\", \"\"))) * 60) * 60; }else if (strTime.endsWith(\"d\")) { time = (((java.lang.Float.parseFloat(strTime.replace(\"d\", \"\"))) * 60) * 60) * 24; }else time = java.lang.Float.parseFloat(strTime); } catch (java.lang.Throwable e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2975/buggy-version/src.main.java.org.eweb4j.util.CommonUtil.java", "BodyUseAPI": ["java.lang.Float.parseFloat(java.lang.String)", "java.lang.Float.parseFloat(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.endsWith(java.lang.String)", "java.lang.Float.parseFloat(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.endsWith(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.endsWith(java.lang.String)", "java.lang.Float.parseFloat(java.lang.String)", "java.lang.String.endsWith(java.lang.String)", "java.lang.Float.parseFloat(java.lang.String)"], "Fixed commit": "fc96fcdaf87f21f2c3b53f22f33cf9e9f0eae275", "Url": "https://api.github.com/repos/laiweiwei/eweb4j-framework", "Date": "2013-02-18T10:42:46Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { runClass.runJob(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2270/buggy-version/code.src.edu.wisc.cs.will.GroundRelationalRandomWalks.RunGroundRelationalRandomWalks.java", "BodyUseAPI": ["edu.wisc.cs.will.Boosting.Common.RunBoostedModels.runJob()"], "Fixed commit": "74fa52fe291a733efa68ecdfef36d7f88d148406", "Url": "https://api.github.com/repos/starling-lab/BoostSRL", "Date": "2017-10-23T22:45:02Z"},
{"Line": "=>943", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (org.bukkit.inventory.ItemStack iStack : inv.getStorageContents()) { if ((iStack == null) || ((iStack.getType()) == (org.bukkit.Material.AIR))) { space += item.getMaxStackSize(); }else if (org.maxgamer.quickshop.Util.Util.matches(item, iStack)) { space += (item.getMaxStackSize()) - (iStack.getAmount()); } } } catch (java.lang.Exception e) { for (org.bukkit.inventory.ItemStack iStack : inv.getContents()) { if ((iStack == null) || ((iStack.getType()) == (org.bukkit.Material.AIR))) { space += item.getMaxStackSize(); }else if (org.maxgamer.quickshop.Util.Util.matches(item, iStack)) { space += (item.getMaxStackSize()) - (iStack.getAmount()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5218/buggy-version/src.main.java.org.maxgamer.quickshop.Util.Util.java", "BodyUseAPI": ["org.bukkit.inventory.ItemStack.getMaxStackSize()", "org.bukkit.inventory.ItemStack.getAmount()", "org.maxgamer.quickshop.Util.Util.matches(org.bukkit.inventory.ItemStack,org.bukkit.inventory.ItemStack)", "org.bukkit.inventory.ItemStack.getType()", "org.bukkit.inventory.ItemStack.getMaxStackSize()", "org.bukkit.inventory.Inventory.getStorageContents()"], "Fixed commit": "44213b2e6071b33c148f4d6a97aef5e61de24d52", "Url": "https://api.github.com/repos/KaiKikuchi/QuickShop", "Date": "2016-03-19T20:09:53Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { fsDataOutputStream.close(); } catch (java.io.IOException e) { org.apache.hadoop.io.IOUtils.closeStream(fsDataOutputStream); throw new org.springframework.data.hadoop.store.StoreException(\"Error while closing stream\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2845/buggy-version/spring-xd-hadoop.src.main.java.org.springframework.xd.batch.item.hadoop.HdfsTextItemWriter.java", "BodyUseAPI": ["org.apache.hadoop.fs.FSDataOutputStream.close()"], "Fixed commit": "3aebe1b020872b5639c35c278ab31422c2e44be4", "Url": "https://api.github.com/repos/felipeg48/spring-xd", "Date": "2015-03-09T18:37:28Z"},
{"Line": "=>702", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { des = model.getProjectDescription(project, writable); } catch (java.lang.Exception e) { if (project.isAccessible()) { org.eclipse.cdt.core.CCorePlugin.log(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7763/buggy-version/core.org.eclipse.cdt.core.model.org.eclipse.cdt.core.model.CoreModelUtil.java", "BodyUseAPI": ["org.eclipse.cdt.core.model.CoreModel.getProjectDescription(org.eclipse.core.resources.IProject,boolean)"], "Fixed commit": "75d1510005d75387b8aa4de2affebdff38a51ed0", "Url": "https://api.github.com/repos/sba1/cdt", "Date": "2013-09-12T12:47:10Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { pickUpCards(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5097/buggy-version/core.src.cs3750.cardtrick.Dealer.java", "BodyUseAPI": ["cs3750.cardtrick.Dealer.pickUpCards()"], "Fixed commit": "c7dc207cbacd5003600af0849ff7438aa293a2c1", "Url": "https://api.github.com/repos/log-n-hunt/21CardTrick", "Date": "2015-09-21T14:11:11Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { connection.sendTCP(loadPList(r.p.email.split(\"@\")[1])); } catch (java.lang.Exception e) { java.lang.System.out.println(\"Send Error\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3637/buggy-version/src.com.GGI.uParty.Server.UPServer.java", "BodyUseAPI": ["com.GGI.uParty.Server.UPServer.1.loadPList(r.p.email.split(\"@\")[1])", "com.esotericsoftware.kryonet.Connection.sendTCP(com.GGI.uParty.Network.PList)", "r.p.email.split(java.lang.String)"], "Fixed commit": "a943c9dec8dfe7d8d13ef162015f2d29c821016e", "Url": "https://api.github.com/repos/GoodGameIndustries/uParty-Server", "Date": "2015-09-25T01:50:37Z"},
{"Line": "=>8", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { int usedSize = com.marakana.android.lib.log.LibLog.getUsedLogSize(handle); int totalSize = com.marakana.android.lib.log.LibLog.getTotalLogSize(handle); com.marakana.android.lib.log.LibLog.flushLog(handle); } finally { com.marakana.android.lib.log.LibLog.close(handle); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6387/buggy-version/framework.libmrknlog_jni.java.com.marakana.android.lib.log.Main.java", "BodyUseAPI": ["com.marakana.android.lib.log.LibLog.flushLog(int)", "com.marakana.android.lib.log.LibLog.getTotalLogSize(int)", "com.marakana.android.lib.log.LibLog.getUsedLogSize(int)"], "Fixed commit": "fa2a179592595b3cb4bd7f5dc24665ad736bba0b", "Url": "https://api.github.com/repos/marakana/alpha", "Date": "2012-10-16T07:04:27Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { double taxRate = percentFormat.parse(taxRatePercent).doubleValue(); setPreference(actionRequest, \"taxRate\", java.lang.String.valueOf(taxRate)); } catch (java.text.ParseException pe) { com.liferay.portal.kernel.servlet.SessionErrors.add(actionRequest, \"taxRate\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/9163/buggy-version/portal-impl.src.com.liferay.portlet.shopping.action.ConfigurationActionImpl.java", "BodyUseAPI": ["com.liferay.portlet.shopping.action.ConfigurationActionImpl.setPreference(javax.portlet.ActionRequest,java.lang.String,java.lang.String)", "java.text.NumberFormat.parse(java.lang.String)", "java.lang.String.valueOf(double)", "java.lang.Number.doubleValue()"], "Fixed commit": "d2969b72ac636ebbce47330973296be82194f979", "Url": "https://api.github.com/repos/epgarcia/liferay-portal", "Date": "2014-03-05T14:36:17Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { getContentResolver().delete(AlexandriaContract.BookEntry.buildBookUri(java.lang.Long.parseLong(ean)), null, null); } catch (java.lang.NumberFormatException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6690/buggy-version/app.src.main.java.it.jaschke.alexandria.services.BookService.java", "BodyUseAPI": ["it.jaschke.alexandria.services.BookService.getContentResolver()", "java.lang.Long.parseLong(java.lang.String)", "AlexandriaContract.BookEntry.buildBookUri(long)", "getContentResolver().delete(AlexandriaContract.BookEntry.buildBookUri(java.lang.Long.parseLong(ean)),<nulltype>,<nulltype>)"], "Fixed commit": "5a2c13d7e4d3c845fbbde23fc5c4fce2724a6e1d", "Url": "https://api.github.com/repos/eamontaaffe/Alexandria", "Date": "2015-09-02T01:17:08Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { while (true) { java.util.Iterator<autohost.irc.RateLimitedChannel> it = m_client.getChannels().values().iterator(); synchronized(it) { while (it.hasNext()) { autohost.irc.RateLimitedChannel limiter = it.next(); java.lang.String line = limiter.poll(); if (line != null) m_client.write(line); } autohost.util.ThreadUtils.sleepQuietly(m_delay); } } } catch (java.util.ConcurrentModificationException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/427/buggy-version/src.autohost.irc.RateLimitedFlusher.java", "BodyUseAPI": ["autohost.irc.IRCClient.getChannels()", "java.util.Iterator<autohost.irc.RateLimitedChannel>.next()", "autohost.irc.IRCClient.write(java.lang.String)", "java.util.Iterator<autohost.irc.RateLimitedChannel>.hasNext()", "autohost.irc.RateLimitedChannel.poll()", "m_client.getChannels().values()", "autohost.util.ThreadUtils.sleepQuietly(int)", "m_client.getChannels().values().iterator()"], "Fixed commit": "277163cd3dd08b808eccac8b76f2d2fffc659978", "Url": "https://api.github.com/repos/tsbreuer/IRCAutoHost", "Date": "2017-10-23T18:50:44Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.myapp.beans.Contact contact = contactService.show(id); java.lang.System.out.println((\"Contact: \" + contact)); return org.springframework.http.ResponseEntity.ok(contact); } catch (com.myapp.exception.SpringCacheException e) { java.lang.System.out.println((\"An exception was thrown: \" + (e.getMessage()))); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/108/buggy-version/src.main.java.com.myapp.controller.ContactController.java", "BodyUseAPI": ["com.myapp.service.ContactService.show(int)", "org.springframework.http.ResponseEntity.ok(com.myapp.beans.Contact)", "java.io.PrintStream.println((\"Contact: \" + contact))"], "Fixed commit": "4149e9f501b5e889c0c60ab27ad7fe7df26f90fd", "Url": "https://api.github.com/repos/olantobi/SpringCaching", "Date": "2017-10-22T06:26:50Z"},
{"Line": "=>758", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { setLoggerDefFilePath(availableLoggerDefFiles.values().iterator().next().getAbsolutePath()); } catch (java.lang.Exception e) { loggerDefExists = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/224/buggy-version/src.main.java.com.romraider.Settings.java", "BodyUseAPI": ["com.romraider.Settings.setLoggerDefFilePath(java.lang.String)", "java.util.Map<java.lang.String, java.io.File>.values()", "java.io.File.getAbsolutePath()", "java.util.Iterator<java.io.File>.next()", "java.util.Collection<java.io.File>.iterator()"], "Fixed commit": "7dfd8878600d352a94f8e600d1330b83c4698598", "Url": "https://api.github.com/repos/Merp/RomRaider", "Date": "2013-03-09T01:11:51Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { template = new org.commcare.xml.TextParser(parser).parse(); builder.setTemplate(template); } catch (org.commcare.xml.util.InvalidStructureException ise) { throw new org.commcare.xml.util.InvalidStructureException((((\"Error in suite detail with id \" + id) + \" : \") + (ise.getMessage())), parser); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1754/buggy-version/backend.src.org.commcare.xml.DetailParser.java", "BodyUseAPI": ["DetailField.Builder.setTemplate(org.commcare.suite.model.DetailTemplate)", "org.commcare.xml.TextParser.parse()"], "Fixed commit": "c5bbc7968c08ca364cbf284294fa2c0950827ba7", "Url": "https://api.github.com/repos/dimagi/commcare", "Date": "2014-10-07T16:31:29Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return ((com.alibaba.fastjson.JSONObject) (com.alibaba.fastjson.JSON.toJSON(obj))); } catch (java.lang.RuntimeException e) { throw new com.alibaba.fastjson.JSONException(\"can not cast to JSONObject.\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2099/buggy-version/src.main.java.com.alibaba.fastjson.JSON.java", "BodyUseAPI": ["com.alibaba.fastjson.JSON.toJSON(java.lang.Object)"], "Fixed commit": "10a21cd7db273847f94462aa83237e37ccea80fc", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2017-07-02T12:08:06Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.util.List<org.kei.android.phone.cellhistory.towers.AreaInfo> areas = app.getSQL().getAreas(); for (org.kei.android.phone.cellhistory.towers.AreaInfo ai : areas) { ai.setDistance(ai.getLocation().distanceTo(app.getGlobalTowerInfo().getCurrentLocation())); } app.getGlobalTowerInfo().getAreas().clear(); app.getGlobalTowerInfo().getAreas().addAll(areas); } catch (java.lang.Exception e) { android.util.Log.e(getClass().getSimpleName(), (\"Exception: \" + e), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1674/buggy-version/src.org.kei.android.phone.cellhistory.services.tasks.GpsServiceTask.java", "BodyUseAPI": ["org.kei.android.phone.cellhistory.towers.AreaInfo.getLocation()", "org.kei.android.phone.cellhistory.CellHistoryApp.getGlobalTowerInfo()", "app.getGlobalTowerInfo().getAreas()", "org.kei.android.phone.cellhistory.CellHistoryApp.getGlobalTowerInfo()", "app.getSQL().getAreas()", "org.kei.android.phone.cellhistory.towers.AreaInfo.setDistance(ai.getLocation().distanceTo(app.getGlobalTowerInfo().getCurrentLocation()))", "app.getGlobalTowerInfo().getAreas().clear()", "org.kei.android.phone.cellhistory.CellHistoryApp.getSQL()", "ai.getLocation().distanceTo(app.getGlobalTowerInfo().getCurrentLocation())", "app.getGlobalTowerInfo().getCurrentLocation()", "app.getGlobalTowerInfo().getAreas().addAll(java.util.List<org.kei.android.phone.cellhistory.towers.AreaInfo>)", "app.getGlobalTowerInfo().getAreas()", "org.kei.android.phone.cellhistory.CellHistoryApp.getGlobalTowerInfo()"], "Fixed commit": "b513c8ed77bcc56fde87de28e221deae00714e28", "Url": "https://api.github.com/repos/Keidan/CellHistory", "Date": "2016-01-16T21:50:52Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.openforis.collect.model.CollectRecord record = recordManager.load(survey, summary.getId(), step, false); databaseExporter.insertRecordData(record, ProgressListener.NULL_PROGRESS_LISTENER); } catch (org.openforis.collect.relational.CollectRdbException e) { org.openforis.collect.relational.CollectRDBPublisher.LOG.error(e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4895/buggy-version/collect-rdb.src.main.java.org.openforis.collect.relational.CollectRDBPublisher.java", "BodyUseAPI": ["org.openforis.collect.model.CollectRecord.getId()", "org.openforis.collect.relational.DatabaseExporter.insertRecordData(org.openforis.collect.model.CollectRecord,ProgressListener.NULL_PROGRESS_LISTENER)", "org.openforis.collect.manager.RecordManager.load(org.openforis.collect.model.CollectSurvey,summary.getId(),org.openforis.collect.model.CollectRecord.Step,boolean)"], "Fixed commit": "9fc3e8cf2d70bdaca9d79f37488375d2123b4edb", "Url": "https://api.github.com/repos/openforis/collect", "Date": "2016-05-11T10:06:14Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.openforis.collect.model.CollectRecord record = recordManager.load(survey, s.getId(), step, false); modelWriter.printData(record); } catch (java.lang.Exception e) { org.openforis.collect.io.data.CSVDataExportProcess.LOG.error(e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4895/buggy-version/collect-core.src.main.java.org.openforis.collect.io.data.CSVDataExportProcess.java", "BodyUseAPI": ["org.openforis.collect.manager.RecordManager.load(org.openforis.collect.model.CollectSurvey,s.getId(),org.openforis.collect.model.CollectRecord.Step,boolean)", "org.openforis.collect.io.data.csv.ModelCsvWriter.printData(org.openforis.collect.model.CollectRecord)", "org.openforis.collect.model.CollectRecord.getId()"], "Fixed commit": "9fc3e8cf2d70bdaca9d79f37488375d2123b4edb", "Url": "https://api.github.com/repos/openforis/collect", "Date": "2016-05-11T10:06:14Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(1); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1975/buggy-version/src.main.java.edu.wpi.hapticDevice.HIDSimpleComsDevice.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "73d6057c470996f7cfbc117af1beaddf54f673ed", "Url": "https://api.github.com/repos/StrokeRehabilitationRobot/connectToHardWare", "Date": "2017-10-06T16:41:26Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { auth = headers.get(\"Authorization\"); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3873/buggy-version/Library.src.main.java.lk.dialog.ideabiz.library.APICall.APICall.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "ec8194ae0c350a0e44fc50e27af6156cf1619521", "Url": "https://api.github.com/repos/ideabizlk/IdeaBiz-Request-Handler-JAVA", "Date": "2017-10-14T12:45:42Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { return ((voldemort.server.rebalance.RebalancerState) (metadataCache.get(voldemort.store.metadata.MetadataStore.REBALANCING_STEAL_INFO).getValue())); } finally { readLock.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1312/buggy-version/src.java.voldemort.store.metadata.MetadataStore.java", "BodyUseAPI": ["metadataCache.get(voldemort.store.metadata.MetadataStore.REBALANCING_STEAL_INFO).getValue()", "java.util.Map<java.lang.String, voldemort.versioning.Versioned<java.lang.Object>>.get(java.lang.String)"], "Fixed commit": "bca4a12e937859dbee15f9cfa6d91fec183d0deb", "Url": "https://api.github.com/repos/zhongjiewu/voldemort", "Date": "2012-09-06T20:40:02Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { results.initializeFromJSONObject(adapter); return results; } catch (org.sagebionetworks.schema.adapter.JSONObjectAdapterException e) { throw new org.sagebionetworks.client.exceptions.SynapseException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7346/buggy-version/client.synapseJavaClient.src.main.java.org.sagebionetworks.client.SynapseAdministration.java", "BodyUseAPI": ["org.sagebionetworks.repo.model.PaginatedResults<org.sagebionetworks.repo.model.MigratableObjectData>.initializeFromJSONObject(org.sagebionetworks.schema.adapter.JSONObjectAdapter)"], "Fixed commit": "a4bb46be0bb4747f2685cf0e392309736672490c", "Url": "https://api.github.com/repos/ezephyr/Synapse-Repository-Services", "Date": "2012-08-02T23:01:21Z"},
{"Line": "=>1798", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return org.sagebionetworks.schema.adapter.org.json.EntityFactory.createEntityFromJSONObject(jsonObject, clazz); } catch (java.lang.Exception e) { throw new org.sagebionetworks.client.exceptions.SynapseException(((\"Failed to create an Entity for <<\" + jsonObject) + \">>\"), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7346/buggy-version/client.synapseJavaClient.src.main.java.org.sagebionetworks.client.Synapse.java", "BodyUseAPI": ["org.sagebionetworks.schema.adapter.org.json.EntityFactory.createEntityFromJSONObject(org.json.JSONObject,java.lang.Class<? extends T>)"], "Fixed commit": "a4bb46be0bb4747f2685cf0e392309736672490c", "Url": "https://api.github.com/repos/ezephyr/Synapse-Repository-Services", "Date": "2012-08-02T23:01:21Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { org.evosuite.TestGenerationContext.getInstance().goingToExecuteSUTCode(); java.lang.Thread.currentThread().setContextClassLoader(testClasses[0].getClassLoader()); org.evosuite.runtime.classhandling.JDKClassResetter.reset(); result = runner.run(testClasses); } finally { java.lang.Thread.currentThread().setContextClassLoader(currentLoader); org.evosuite.TestGenerationContext.getInstance().doneWithExecutingSUTCode(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7980/buggy-version/client.src.main.java.org.evosuite.junit.JUnitAnalyzer.java", "BodyUseAPI": ["org.evosuite.TestGenerationContext.getInstance()", "org.junit.runner.JUnitCore.run(java.lang.Class<?>[])", "java.lang.Thread.currentThread()", "java.lang.Thread.setContextClassLoader(java.lang.ClassLoader)", "org.evosuite.runtime.classhandling.JDKClassResetter.reset()", "org.evosuite.TestGenerationContext.getInstance().goingToExecuteSUTCode()", "java.lang.Class<?>.getClassLoader()"], "Fixed commit": "c915a7d3cb576579c4559e1298020f975a9b3a54", "Url": "https://api.github.com/repos/EvoSuite/evosuite", "Date": "2016-02-20T17:06:37Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { final java.io.File clean = new java.io.File(pb.getPackagePath()); if (clean.exists()) org.apache.commons.io.FileUtils.deleteDirectory(clean); } catch (final java.lang.Throwable e) { placebooks.controller.PlaceBooksAdminHelper.log.error(e.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3789/buggy-version/placebooks-webapp.src.placebooks.controller.PlaceBooksAdminHelper.java", "BodyUseAPI": ["java.io.File.exists()", "placebooks.model.PlaceBookBinder.getPackagePath()", "org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)"], "Fixed commit": "4aa37c5d157b367f554ed62c9c3a45bbcf0e658b", "Url": "https://api.github.com/repos/horizon-institute/Bridging-the-Rural-Divide--Placebooks", "Date": "2012-02-02T12:59:45Z"},
{"Line": "=>400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { dbWrite(); } catch (java.lang.Throwable e) { org.ethereum.net.rlpx.discover.NodeManager.logger.warn((\"Problem during NodeManager persist in close: \" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/609/buggy-version/ethereumj-core.src.main.java.org.ethereum.net.rlpx.discover.NodeManager.java", "BodyUseAPI": ["org.ethereum.net.rlpx.discover.NodeManager.dbWrite()"], "Fixed commit": "07fa571e2066dd53115610f85bb9acfad6e6081e", "Url": "https://api.github.com/repos/dsapaev/ethereumj", "Date": "2017-03-06T08:34:05Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(10000000); } catch (java.lang.Exception ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2787/buggy-version/eagle-core.eagle-embed.eagle-embed-server.src.main.java.eagle.service.embedded.tomcat.EmbeddedServer.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "1b65d02abfefa1ee377bb244b7266f07bbeeebfc", "Url": "https://api.github.com/repos/zombieJ/Eagle", "Date": "2015-10-25T08:21:05Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mMenuDrawer.setDrawerIndicatorEnabled(false); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8219/buggy-version/src.org.wordpress.android.ui.reader.ReaderActivity.java", "BodyUseAPI": ["org.wordpress.android.ui.reader.ReaderActivity.setDrawerIndicatorEnabled(boolean)"], "Fixed commit": "0d82ef196a52ad88a2ef397ad93381905ba23304", "Url": "https://api.github.com/repos/beaucollins/WordPress-Android", "Date": "2013-06-11T20:43:03Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mMenuDrawer.setDrawerIndicatorEnabled(true); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8219/buggy-version/src.org.wordpress.android.ui.reader.ReaderActivity.java", "BodyUseAPI": ["org.wordpress.android.ui.reader.ReaderActivity.setDrawerIndicatorEnabled(boolean)"], "Fixed commit": "0d82ef196a52ad88a2ef397ad93381905ba23304", "Url": "https://api.github.com/repos/beaucollins/WordPress-Android", "Date": "2013-06-11T20:43:03Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mMenuDrawer.setDrawerIndicatorEnabled(true); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8219/buggy-version/src.org.wordpress.android.ui.reader.ReaderActivity.java", "BodyUseAPI": ["org.wordpress.android.ui.reader.ReaderActivity.setDrawerIndicatorEnabled(boolean)"], "Fixed commit": "0d82ef196a52ad88a2ef397ad93381905ba23304", "Url": "https://api.github.com/repos/beaucollins/WordPress-Android", "Date": "2013-06-11T20:43:03Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Long.parseLong(id); } catch (java.lang.Exception e) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/774/buggy-version/matchmaker.src.main.java.com.microwise.smartservices.moroesdb.powerswitch.PoRecorder.java", "BodyUseAPI": ["java.lang.Long.parseLong(java.lang.String)"], "Fixed commit": "73a98f37c079c9022003c45cfb2215728514612a", "Url": "https://api.github.com/repos/do-nothing/matchmaker", "Date": "2017-07-21T02:31:23Z"},
{"Line": "=>1000", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (celsius) { temperatureView.setText(((java.lang.Integer.toString(temperature)) + \"C\")); }else { temperatureView.setText(((java.lang.Integer.toString(temperature)) + \"F\")); } } catch (java.lang.NullPointerException e) { e.printStackTrace(); temperatureView.setText(\"F\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2304/buggy-version/src.com.example.weather.MainActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)", "java.lang.Integer.toString(int)", "android.widget.TextView.setText(java.lang.String)", "java.lang.Integer.toString(int)"], "Fixed commit": "7d143893e7148aafda0ecea3e338f3fd0b27bd22", "Url": "https://api.github.com/repos/gnayar/Weather", "Date": "2013-03-10T14:20:59Z"},
{"Line": "=>991", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { values[i] = new dna.series.data.Value(value, b.getMetricRuntimes().get(value).getRuntime()); } catch (java.lang.NullPointerException e) { values[i] = new dna.series.data.Value(value, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5439/buggy-version/src.dna.plot.Plot.java", "BodyUseAPI": ["b.getMetricRuntimes().get(java.lang.String)", "dna.series.data.BatchData.getMetricRuntimes()", "b.getMetricRuntimes().get(value).getRuntime()"], "Fixed commit": "037954d0ff19ca6220064211ddd5d018d7360843", "Url": "https://api.github.com/repos/Rwilmes/DNA", "Date": "2016-01-11T16:25:41Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { field = fieldRef.resolvedField(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4107/buggy-version/src.main.java.me.ygy.jjvm.instructions.references.PutStatic.java", "BodyUseAPI": ["me.ygy.jjvm.instructions.references.FieldRef.resolvedField()"], "Fixed commit": "3b0d31caf4250a5ea7eaf30a6f9120bac0bc1797", "Url": "https://api.github.com/repos/ab409/jjvm", "Date": "2016-10-18T11:27:50Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { wsOntologyTreeCreator.createTree(recommendedOntologies); } catch (java.io.FileNotFoundException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5237/buggy-version/src.main.java.org.isatools.isacreator.ontologyselectiontool.OntologySelectionTool.java", "BodyUseAPI": ["org.isatools.isacreator.ontologybrowsingutils.WSOntologyTreeCreator.createTree(java.util.Map<java.lang.String, org.isatools.isacreator.configuration.RecommendedOntology>)"], "Fixed commit": "5a5e601b3c8933a475c5e1e53d204194a6a035ea", "Url": "https://api.github.com/repos/ISA-tools/ISAcreator", "Date": "2013-04-18T18:28:07Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { return nl.nn.adapterframework.util.JdbcUtil.executeStringQuery(conn, query); } finally { if (conn != null) { try { conn.close(); } catch (java.sql.SQLException e) { log.warn(\"Could not close connection\", e); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1337/buggy-version/core.src.main.java.nl.nn.adapterframework.extensions.api.ApiStreamPipe.java", "BodyUseAPI": ["nl.nn.adapterframework.util.JdbcUtil.executeStringQuery(java.sql.Connection,java.lang.String)"], "Fixed commit": "0e8e3397a621a11ee3eea72a74f20ebb5fc6219e", "Url": "https://api.github.com/repos/Bazzu/iaf", "Date": "2017-05-16T09:26:20Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { return nl.nn.adapterframework.util.JdbcUtil.executeBlobQuery(conn, query); } finally { if (conn != null) { try { conn.close(); } catch (java.sql.SQLException e) { log.warn(\"Could not close connection\", e); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1337/buggy-version/core.src.main.java.nl.nn.adapterframework.extensions.api.ApiStreamPipe.java", "BodyUseAPI": ["nl.nn.adapterframework.util.JdbcUtil.executeBlobQuery(java.sql.Connection,java.lang.String)"], "Fixed commit": "0e8e3397a621a11ee3eea72a74f20ebb5fc6219e", "Url": "https://api.github.com/repos/Bazzu/iaf", "Date": "2017-05-16T09:26:20Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { nl.nn.adapterframework.util.JdbcUtil.executeStatement(conn, query); } finally { if (conn != null) { try { conn.close(); } catch (java.sql.SQLException e) { log.warn(\"Could not close connection\", e); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1337/buggy-version/core.src.main.java.nl.nn.adapterframework.extensions.api.ApiStreamPipe.java", "BodyUseAPI": ["nl.nn.adapterframework.util.JdbcUtil.executeStatement(java.sql.Connection,java.lang.String)"], "Fixed commit": "0e8e3397a621a11ee3eea72a74f20ebb5fc6219e", "Url": "https://api.github.com/repos/Bazzu/iaf", "Date": "2017-05-16T09:26:20Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { pat_ScAp = new GUI.PAT_ScAp(500, 500); } catch (java.sql.SQLException e2) { e2.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7233/buggy-version/GUI.ApplicationGUI.java", "BodyUseAPI": [], "Fixed commit": "9577695aef0e8bb32cd7c94f650a3b19c9edc84d", "Url": "https://api.github.com/repos/360projectGroup2/project", "Date": "2015-10-23T23:07:20Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { connected = rec.connect(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4676/buggy-version/src.client.connect.ConnectionRefresh.java", "BodyUseAPI": ["client.connect.RemoteExClient.connect()"], "Fixed commit": "ae87b6c2cd5fce3469ec254d27f3eba19db84e2f", "Url": "https://api.github.com/repos/drshriveer/iTunesRemote", "Date": "2013-12-07T05:27:03Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (java.lang.String file : args) { be.kuleuven.cs.flexsim.experimentation.tosg.utils.WriteFileCreator.logger.info(\"Writing ouput caching files for {}\", file); be.kuleuven.cs.flexsim.persistence.MapDBMemoizationContext.builder().setFileName(file).ensureFileExists().build(); be.kuleuven.cs.flexsim.experimentation.tosg.utils.WriteFileCreator.sleep(be.kuleuven.cs.flexsim.experimentation.tosg.utils.WriteFileCreator.SLEEP_TIME); } } catch (java.lang.InterruptedException e) { be.kuleuven.cs.flexsim.experimentation.tosg.utils.WriteFileCreator.logger.error(\"Sleep after after file write got interrupted\", e); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1821/buggy-version/project.src.main.java.be.kuleuven.cs.flexsim.experimentation.tosg.utils.WriteFileCreator.java", "BodyUseAPI": ["be.kuleuven.cs.flexsim.persistence.MapDBMemoizationContext.builder().setFileName(file).ensureFileExists()", "be.kuleuven.cs.flexsim.experimentation.tosg.utils.WriteFileCreator.sleep(int)", "be.kuleuven.cs.flexsim.persistence.MapDBMemoizationContext.builder().setFileName(file).ensureFileExists().build()", "be.kuleuven.cs.flexsim.persistence.MapDBMemoizationContext.builder()", "be.kuleuven.cs.flexsim.persistence.MapDBMemoizationContext.builder().setFileName(java.lang.String)", "org.slf4j.Logger.info(java.lang.String,java.lang.String)"], "Fixed commit": "2a20efdea0460d8f97d40e099fb5faed78c32c0d", "Url": "https://api.github.com/repos/KrisC369/GridFlex-Simulator", "Date": "2017-03-28T13:41:55Z"},
{"Line": "=>1772", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (((py(((conto.x) / 100), ((checkpoints.x[fpnt[l7]]) / 100), ((conto.z) / 100), ((checkpoints.z[fpnt[l7]]) / 100))) < i5) || (i5 == (-10))) { i5 = py(((conto.x) / 100), ((checkpoints.x[fpnt[l7]]) / 100), ((conto.z) / 100), ((checkpoints.z[fpnt[l7]]) / 100)); l6 = l7; } } catch (java.lang.ArrayIndexOutOfBoundsException ex) { if (((py(((conto.x) / 100), ((checkpoints.x[0]) / 100), ((conto.z) / 100), ((checkpoints.z[0]) / 100))) < i5) || (i5 == (-10))) { i5 = py(((conto.x) / 100), ((checkpoints.x[0]) / 100), ((conto.z) / 100), ((checkpoints.z[0]) / 100)); l6 = l7; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1011/buggy-version/Control.java", "BodyUseAPI": ["Control.py(((conto.x) / 100),((checkpoints.x[fpnt[l7]]) / 100),((conto.z) / 100),((checkpoints.z[fpnt[l7]]) / 100))", "Control.py(((conto.x) / 100),((checkpoints.x[fpnt[l7]]) / 100),((conto.z) / 100),((checkpoints.z[fpnt[l7]]) / 100))"], "Fixed commit": "18b5f3e142d249706f1bd1cdc8dc496d9016d575", "Url": "https://api.github.com/repos/uwx/OpenNFM", "Date": "2015-08-31T02:29:51Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { progressDialog.show(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4375/buggy-version/src.ca.chekit.android.screen.BaseScreen.java", "BodyUseAPI": ["android.app.ProgressDialog.show()"], "Fixed commit": "631dd8d6dac2632d013243f392fa88f52e5942fa", "Url": "https://api.github.com/repos/kroywen/Chekit", "Date": "2014-08-04T11:54:57Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { bitmap = android.graphics.BitmapFactory.decodeStream(is, null, options); } catch (java.lang.OutOfMemoryError error) { error.printStackTrace(); bitmap = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4375/buggy-version/src.ca.chekit.android.model.Photo.java", "BodyUseAPI": ["android.graphics.BitmapFactory.decodeStream(java.io.InputStream,<nulltype>,BitmapFactory.Options)"], "Fixed commit": "631dd8d6dac2632d013243f392fa88f52e5942fa", "Url": "https://api.github.com/repos/kroywen/Chekit", "Date": "2014-08-04T11:54:57Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return new main.java.com.webkonsept.minecraft.lagmeter.LagMeterConfig().getConfig(); } catch (java.lang.Exception e) { this.sendConsoleMessage(main.java.com.webkonsept.minecraft.lagmeter.LagMeter.Severity.SEVERE, (\"An error occurred while loading the configuration: \" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4709/buggy-version/main.java.com.webkonsept.minecraft.lagmeter.LagMeter.java", "BodyUseAPI": ["main.java.com.webkonsept.minecraft.lagmeter.LagMeterConfig.getConfig()"], "Fixed commit": "2f48d3b17a8d12d6025d82d947f4b304a3721ae9", "Url": "https://api.github.com/repos/TheLunarFrog/LagMeter", "Date": "2013-11-15T22:06:50Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { encodedPW = java.net.URLEncoder.encode(userPassword, \"utf-8\"); } catch (java.io.UnsupportedEncodingException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/604/buggy-version/app.src.main.java.org.zeropage.causcheduler.Network.PortalNetworkQueue.java", "BodyUseAPI": ["java.net.URLEncoder.encode(java.lang.String,java.lang.String)"], "Fixed commit": "ec4c213f1f87a74ebac6d4c7a78ce8510d2c4af6", "Url": "https://api.github.com/repos/ZeroPage/CAUScheduler", "Date": "2016-01-14T15:39:20Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { cs = net.praqma.vcs.util.CommandLine.run(cmd, localRepositoryPath.getAbsoluteFile()).stdoutList; } catch (net.praqma.util.execute.AbnormalProcessTerminationException e) { cs = new java.util.ArrayList<java.lang.String>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7627/buggy-version/src.main.java.net.praqma.vcs.model.git.GitBranch.java", "BodyUseAPI": ["net.praqma.vcs.util.CommandLine.run(java.lang.String,localRepositoryPath.getAbsoluteFile())", "net.praqma.vcs.model.git.GitBranch.getAbsoluteFile()"], "Fixed commit": "a768547ca8921cc993d760b80c11aac12170fe87", "Url": "https://api.github.com/repos/Praqma/AbstractVcsApi", "Date": "2011-09-13T06:29:24Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { pneumaticCraft.common.AchievementHandler.giveAchievement(event.player, event.crafting); } catch (java.lang.Throwable e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1772/buggy-version/src.pneumaticCraft.common.recipes.CraftingHandler.java", "BodyUseAPI": ["pneumaticCraft.common.AchievementHandler.giveAchievement(event.player,event.crafting)"], "Fixed commit": "be380ca4a45962dca2b31fd7a6b46a9c993190b9", "Url": "https://api.github.com/repos/MineMaarten/PneumaticCraft", "Date": "2015-09-06T11:11:20Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { threadAll.start(); threadAll.join(); } catch (java.lang.InterruptedException e) { java.lang.System.err.println((\"InterruptedException: \" + (e.getMessage()))); } finally { TwitterMonitorSimulator.producer.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8326/buggy-version/loopa.src.main.java.org.loopa.TwitterMonitorSimulator.TwitterMonitorSimulator.java", "BodyUseAPI": ["java.lang.Thread.join()", "java.lang.Thread.start()"], "Fixed commit": "aed6ee9a69bd871bc1ea17c0b19a7e0dae0917c6", "Url": "https://api.github.com/repos/Martouta/loopa", "Date": "2017-12-28T17:29:03Z"},
{"Line": "=>1476", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { bank.selectBank((vdpaddr / 16384)); vdpMemory.touchMemory(vdpaddr); } finally { bank.selectBank(oldBank); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7204/buggy-version/v9t9.v9t9-java.v9t9-engine.src.v9t9.engine.video.v9938.VdpV9938.java", "BodyUseAPI": ["v9t9.engine.video.v9938.VdpV9938.touchMemory(int)", "v9t9.engine.memory.BankedMemoryEntry.selectBank(int)"], "Fixed commit": "3a7a302df1b9113c1e4cc9d2dc95ac1ca8ec43ed", "Url": "https://api.github.com/repos/eswartz/emul", "Date": "2016-10-30T20:56:44Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.net.Uri uri = android.net.Uri.parse(getString(R.string.sendto)); android.content.Intent intent = new android.content.Intent(android.content.Intent.ACTION_SENDTO, uri); intent.putExtra(Intent.EXTRA_SUBJECT, getString(R.string.topic)); intent.putExtra(Intent.EXTRA_TEXT, ((((((getString(R.string.phone_modle)) + (android.os.Build.MODEL)) + \"\\n\") + (getString(R.string.sdk_version))) + (Build.VERSION.RELEASE)) + \"\\n\")); startActivity(intent); } catch (com.marktony.translator.Activities.android ex) { android.support.design.widget.Snackbar.make(tvFeedback, R.string.no_mail_app, Snackbar.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2897/buggy-version/app.src.main.java.com.marktony.translator.Activities.AboutActivity.java", "BodyUseAPI": ["android.net.Uri.parse(getString(R.string.sendto))", "com.marktony.translator.Activities.AboutActivity.2.startActivity(android.content.Intent)", "android.content.Intent.putExtra(Intent.EXTRA_SUBJECT,getString(R.string.topic))", "com.marktony.translator.Activities.AboutActivity.2.getString(R.string.sendto)", "com.marktony.translator.Activities.AboutActivity.2.getString(R.string.phone_modle)", "android.content.Intent.putExtra(Intent.EXTRA_TEXT,((((((getString(R.string.phone_modle)) + (android.os.Build.MODEL)) + \"\\n\") + (getString(R.string.sdk_version))) + (Build.VERSION.RELEASE)) + \"\\n\"))", "com.marktony.translator.Activities.AboutActivity.2.getString(R.string.sdk_version)", "com.marktony.translator.Activities.AboutActivity.2.getString(R.string.topic)"], "Fixed commit": "6427f4748c8e0f3a8c467af17bf9b63f1c4269a7", "Url": "https://api.github.com/repos/TonnyL/Translator", "Date": "2016-02-23T13:35:54Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { final java.lang.String componentKey = request.mandatoryParam(\"key\"); final org.sonar.db.component.ComponentDto component = componentFinder.getByKey(session, componentKey); userSession.checkProjectUuidPermission(UserRole.USER, component.projectUuid()); response.stream().setMediaType(\"text/plain\"); java.io.OutputStreamWriter writer = new java.io.OutputStreamWriter(response.stream().output(), java.nio.charset.StandardCharsets.UTF_8); try { org.sonar.server.source.ws.HashAction.HashFunction hashFunction = new org.sonar.server.source.ws.HashAction.HashFunction(writer, componentKey); dbClient.fileSourceDao().readLineHashesStream(session, component.uuid(), hashFunction); if (!(hashFunction.hasData())) { response.noContent(); } } finally { writer.close(); } } finally { session.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/27/buggy-version/server.sonar-server.src.main.java.org.sonar.server.source.ws.HashAction.java", "BodyUseAPI": ["org.sonar.api.server.ws.Response.stream()", "java.io.OutputStreamWriter.close()", "dbClient.fileSourceDao().readLineHashesStream(org.sonar.db.DbSession,component.uuid(),org.sonar.server.source.ws.HashAction.HashFunction)", "org.sonar.db.component.ComponentDto.uuid()", "org.sonar.api.server.ws.Response.noContent()", "org.sonar.server.component.ComponentFinder.getByKey(org.sonar.db.DbSession,java.lang.String)", "response.stream().setMediaType(java.lang.String)", "response.stream().output()", "org.sonar.api.server.ws.Response.stream()", "org.sonar.server.user.UserSession.checkProjectUuidPermission(UserRole.USER,component.projectUuid())", "org.sonar.server.source.ws.HashAction.HashFunction.hasData()", "org.sonar.db.DbClient.fileSourceDao()", "org.sonar.api.server.ws.Request.mandatoryParam(java.lang.String)", "org.sonar.db.component.ComponentDto.projectUuid()"], "Fixed commit": "b4d84b51ba7e3366651ad281ca729199c1870bf2", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2015-07-29T10:32:36Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { book = node.getBook(); } catch (org.sefaria.sefaria.database.Book e) { book = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6719/buggy-version/app.src.main.java.org.sefaria.sefaria.activities.TOCActivity.java", "BodyUseAPI": ["org.sefaria.sefaria.database.Node.getBook()"], "Fixed commit": "eb1d9a1a861f55488d9ed6283aec0530e349a708", "Url": "https://api.github.com/repos/Sefaria/Sefaria-Android", "Date": "2016-06-07T15:53:52Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { viewPager.setCurrentItem(1, false); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8718/buggy-version/bannerslider.src.main.java.ss.com.bannerslider.views.BannerSlider.java", "BodyUseAPI": ["ss.com.bannerslider.views.CustomViewPager.setCurrentItem(int,boolean)"], "Fixed commit": "22232b7f3ff274876ce164ac19363bbc1f0b5f4d", "Url": "https://api.github.com/repos/amgadserry/Banner-Slider", "Date": "2017-11-30T10:34:59Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { viewPager.setCurrentItem(banners.size(), false); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8718/buggy-version/bannerslider.src.main.java.ss.com.bannerslider.views.BannerSlider.java", "BodyUseAPI": ["ss.com.bannerslider.views.CustomViewPager.setCurrentItem(banners.size(),boolean)", "java.util.List<ss.com.bannerslider.banners.Banner>.size()"], "Fixed commit": "22232b7f3ff274876ce164ac19363bbc1f0b5f4d", "Url": "https://api.github.com/repos/amgadserry/Banner-Slider", "Date": "2017-11-30T10:34:59Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { de.robv.android.xposed.XposedHelpers.findAndHookMethod(mContainer.getClass(), \"onConfigurationChanged\", android.content.res.Configuration.class, new de.robv.android.xposed.XC_MethodHook() { @java.lang.Override protected void afterHookedMethod(com.ceco.lollipop.gravitybox.MethodHookParam param) throws java.lang.Throwable { if ((mPercentText) != null) { mPercentText.setTextSize(java.lang.Integer.valueOf(mPrefs.getString(GravityBoxSettings.PREF_KEY_BATTERY_PERCENT_TEXT_SIZE, \"16\"))); } } }); } catch (java.lang.Throwable t) { de.robv.android.xposed.XposedBridge.log(t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6481/buggy-version/src.com.ceco.lollipop.gravitybox.BatteryStyleController.java", "BodyUseAPI": ["android.view.ViewGroup.getClass()", "com.ceco.lollipop.gravitybox.StatusbarBatteryPercentage.setTextSize(java.lang.Integer)", "de.robv.android.xposed.XposedHelpers.findAndHookMethod(mContainer.getClass(),java.lang.String,java.lang.Class,de.robv.android.xposed.XC_MethodHook)", "java.lang.Integer.valueOf(mPrefs.getString(GravityBoxSettings.PREF_KEY_BATTERY_PERCENT_TEXT_SIZE, \"16\"))", "de.robv.android.xposed.XSharedPreferences.getString(GravityBoxSettings.PREF_KEY_BATTERY_PERCENT_TEXT_SIZE,java.lang.String)"], "Fixed commit": "d1c52f3cac0be7785d326e20d89d75b631855fcd", "Url": "https://api.github.com/repos/GravityBox/GravityBox", "Date": "2016-02-07T14:52:04Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return game.Grid.cells.get(game.Grid.XYtoIndex((x + ((game.Grid.cellsX) / 2)), (y + ((game.Grid.cellsY) / 2)))); } catch (java.lang.Exception e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4031/buggy-version/src.game.Grid.java", "BodyUseAPI": ["java.util.List<game.GridCell>.get(int)", "game.Grid.XYtoIndex(int,int)"], "Fixed commit": "2c82fbcfdf51ca89f6ed112a8102a593eb7e5983", "Url": "https://api.github.com/repos/ForceField-IndieGames/marscity", "Date": "2013-05-26T20:23:44Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { session.getRemote().sendString(script); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3490/buggy-version/src.controller.TweetController.java", "BodyUseAPI": ["org.eclipse.jetty.websocket.api.Session.getRemote()", "session.getRemote().sendString(java.lang.String)"], "Fixed commit": "1049efd55b7df2b20616409e0fde08b8a964976f", "Url": "https://api.github.com/repos/Margotv06/Trustthesourejava", "Date": "2016-01-20T13:28:51Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.getLogger().debug((((\"Get GH login: \" + (fr.inria.spirals.jtravis.helpers.GithubTokenHelper.getInstance().getGithubLogin())) + \"; OAuth (10 first characters): \") + (fr.inria.spirals.jtravis.helpers.GithubTokenHelper.getInstance().getGithubOauth().substring(0, 10)))); this.github = org.kohsuke.github.GitHubBuilder.fromEnvironment().withOAuthToken(fr.inria.spirals.jtravis.helpers.GithubTokenHelper.getInstance().getGithubOauth(), fr.inria.spirals.jtravis.helpers.GithubTokenHelper.getInstance().getGithubLogin()).build(); } catch (java.io.IOException e) { this.getLogger().warn(\"Error while using credentials: try to use anonymous access to github.\", e); this.github = org.kohsuke.github.GitHub.connectAnonymously(); this.getLogger().warn(\"No github information has been given to connect (set GITHUB_OAUTH and GITHUB_LOGIN), you will have a very low ratelimit for github requests.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5374/buggy-version/jtravis.src.main.java.fr.inria.spirals.jtravis.helpers.AbstractHelper.java", "BodyUseAPI": ["fr.inria.spirals.jtravis.helpers.GithubTokenHelper.getInstance()", "org.kohsuke.github.GitHubBuilder.fromEnvironment().withOAuthToken(fr.inria.spirals.jtravis.helpers.GithubTokenHelper.getInstance().getGithubOauth(),fr.inria.spirals.jtravis.helpers.GithubTokenHelper.getInstance().getGithubLogin())", "fr.inria.spirals.jtravis.helpers.GithubTokenHelper.getInstance().getGithubOauth()", "fr.inria.spirals.jtravis.helpers.GithubTokenHelper.getInstance().getGithubOauth().substring(int,int)", "fr.inria.spirals.jtravis.helpers.GithubTokenHelper.getInstance().getGithubLogin()", "fr.inria.spirals.jtravis.helpers.GithubTokenHelper.getInstance()", "org.kohsuke.github.GitHubBuilder.fromEnvironment()", "org.kohsuke.github.GitHubBuilder.fromEnvironment().withOAuthToken(fr.inria.spirals.jtravis.helpers.GithubTokenHelper.getInstance().getGithubOauth(), fr.inria.spirals.jtravis.helpers.GithubTokenHelper.getInstance().getGithubLogin()).build()", "fr.inria.spirals.jtravis.helpers.GithubTokenHelper.getInstance().getGithubOauth()", "org.slf4j.Logger.debug((((\"Get GH login: \" + (fr.inria.spirals.jtravis.helpers.GithubTokenHelper.getInstance().getGithubLogin())) + \"; OAuth (10 first characters): \") + (fr.inria.spirals.jtravis.helpers.GithubTokenHelper.getInstance().getGithubOauth().substring(0, 10))))", "fr.inria.spirals.jtravis.helpers.GithubTokenHelper.getInstance()", "fr.inria.spirals.jtravis.helpers.GithubTokenHelper.getInstance()", "fr.inria.spirals.jtravis.helpers.AbstractHelper.getLogger()", "fr.inria.spirals.jtravis.helpers.GithubTokenHelper.getInstance().getGithubLogin()"], "Fixed commit": "292dc3783993cd91a48a1a34b365fd4e03a54283", "Url": "https://api.github.com/repos/Spirals-Team/repairnator", "Date": "2017-08-22T15:05:31Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { lock.lock(); java.lang.String memberId = this.getMemberIdFromTaskName(taskName, true); this.setServerLocationOfTask(taskName, memberId); this.scheduleTask(memberId, taskName); } finally { lock.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4672/buggy-version/components.ntask.org.wso2.carbon.ntask.core.src.main.java.org.wso2.carbon.ntask.core.impl.clustered.ClusteredTaskManager.java", "BodyUseAPI": ["org.wso2.carbon.ntask.core.impl.clustered.ClusteredTaskManager.setServerLocationOfTask(java.lang.String,java.lang.String)", "org.wso2.carbon.ntask.core.impl.clustered.ClusteredTaskManager.scheduleTask(java.lang.String,java.lang.String)", "org.wso2.carbon.ntask.core.impl.clustered.ClusteredTaskManager.getMemberIdFromTaskName(java.lang.String,boolean)", "java.util.concurrent.locks.Lock.lock()"], "Fixed commit": "43a7ad094ed4ec5c3abdf10654570c903d7ae519", "Url": "https://api.github.com/repos/wso2/carbon-commons", "Date": "2015-08-05T04:30:20Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { loginAccount = new User(\"UserDB.txt\"); } catch (java.lang.Exception r) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6759/buggy-version/TicTacToeGui.java", "BodyUseAPI": [], "Fixed commit": "7cbf240500d3da0740962d73243cda8a758cda79", "Url": "https://api.github.com/repos/Oakga/Hollywood_squares", "Date": "2016-05-19T18:21:42Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { domainModel = super.addDomainModel(dnsPack.domain, dnsPack.localhostSp, domainModel); } catch (android.database.sqlite.SQLiteDatabaseLockedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8645/buggy-version/httpdns.src.main.java.com.sina.util.dnscache.cache.DnsCacheManager.java", "BodyUseAPI": ["com.sina.util.dnscache.cache.DNSCacheDatabaseHelper.addDomainModel(dnsPack.domain,dnsPack.localhostSp,com.sina.util.dnscache.model.DomainModel)"], "Fixed commit": "c0c3d3cccc99303e1f21b539cb18a85b312901b7", "Url": "https://api.github.com/repos/PureDark/H-Viewer", "Date": "2017-03-05T11:46:04Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.librepilot.lp2go.ui.SingleToast.mToast = android.widget.Toast.makeText(context, text, duration); } catch (java.lang.RuntimeException e) { org.librepilot.lp2go.VisualLog.e(\"SINGLETOAST\", e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8783/buggy-version/app.src.main.java.org.librepilot.lp2go.ui.SingleToast.java", "BodyUseAPI": ["android.widget.Toast.makeText(android.content.Context,java.lang.String,int)"], "Fixed commit": "2a5a21bf783497472c40bb45fb76dc034e25e997", "Url": "https://api.github.com/repos/MarcProe/lp2go", "Date": "2016-07-26T16:40:24Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mUsbManager.requestPermission(device, mPermissionIntent); } catch (java.lang.SecurityException e) { org.librepilot.lp2go.VisualLog.e(\"MAINACTIVITY\", e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8783/buggy-version/app.src.main.java.org.librepilot.lp2go.MainActivity.java", "BodyUseAPI": ["android.hardware.usb.UsbManager.requestPermission(android.hardware.usb.UsbDevice,android.app.PendingIntent)"], "Fixed commit": "2a5a21bf783497472c40bb45fb76dc034e25e997", "Url": "https://api.github.com/repos/MarcProe/lp2go", "Date": "2016-07-26T16:40:24Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.activeandroid.ActiveAndroid.endTransaction(transaction); } catch (android.database.sqlite.SQLiteException e) { com.activeandroid.util.Log.e(br.com.battista.myoffers.controller.OfferController.TAG_CLASSNAME, e.getLocalizedMessage(), e); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2694/buggy-version/app.src.main.java.br.com.battista.myoffers.controller.OfferController.java", "BodyUseAPI": ["com.activeandroid.ActiveAndroid.endTransaction(BriteDatabase.Transaction)"], "Fixed commit": "f0c57053df64702ff13b66e3fae5525e6e97c931", "Url": "https://api.github.com/repos/rafaelbscit/myoffers", "Date": "2016-04-16T07:52:34Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.activeandroid.ActiveAndroid.endTransaction(transaction); } catch (android.database.sqlite.SQLiteException e) { com.activeandroid.util.Log.e(br.com.battista.myoffers.controller.OfferController.TAG_CLASSNAME, e.getLocalizedMessage(), e); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2694/buggy-version/app.src.main.java.br.com.battista.myoffers.controller.OfferController.java", "BodyUseAPI": ["com.activeandroid.ActiveAndroid.endTransaction(BriteDatabase.Transaction)"], "Fixed commit": "f0c57053df64702ff13b66e3fae5525e6e97c931", "Url": "https://api.github.com/repos/rafaelbscit/myoffers", "Date": "2016-04-16T07:52:34Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { sendError(error.getStatusCode()); } catch (java.lang.Exception e) { error.addSuppressed(e); LOG.warn(error); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/376/buggy-version/src.main.java.info.orestes.rest.service.RestResponse.java", "BodyUseAPI": ["info.orestes.rest.error.RestException.getStatusCode()", "info.orestes.rest.service.RestResponse.sendError(error.getStatusCode())"], "Fixed commit": "a35c6533e96b0407be49e8edb6b342861d66f0b9", "Url": "https://api.github.com/repos/Baqend/restful-jetty", "Date": "2015-03-10T16:53:26Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { newPropVal = org.apache.commons.beanutils.PropertyUtils.getProperty(newObj, fieldname); } catch (java.lang.Exception e) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1897/buggy-version/mycollab-services.src.main.java.com.esofthead.mycollab.common.service.ibatis.AuditLogServiceImpl.java", "BodyUseAPI": ["org.apache.commons.beanutils.PropertyUtils.getProperty(java.lang.Object,java.lang.String)"], "Fixed commit": "1b8f96682d4e86d5875fefb50b6356084c383238", "Url": "https://api.github.com/repos/esofthead/mycollab", "Date": "2014-10-20T06:37:20Z"},
{"Line": "=>702", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { pluginStores.migrateAllPluginStores(container, node.nodeDBHandle); } catch (com.db4o.ext.Db4oException e) { java.lang.System.err.println(((\"Failed to migrate plugin stores due to database error: \" + e) + \" - assuming node.db4o[.crypt] is corrupt.\")); freenet.support.Logger.error(this, ((\"Failed to migrate plugin stores due to database error: \" + e) + \" - assuming node.db4o[.crypt] is corrupt.\"), e); killedDatabase = true; } catch (java.lang.Throwable e) { java.lang.System.err.println(((\"Failed to migrate plugin stores due to database error: \" + e) + \" - assuming node.db4o[.crypt] is corrupt.\")); freenet.support.Logger.error(this, ((\"Failed to migrate plugin stores due to database error: \" + e) + \" - assuming node.db4o[.crypt] is corrupt.\"), e); killedDatabase = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8927/buggy-version/src.freenet.node.NodeClientCore.java", "BodyUseAPI": ["freenet.pluginmanager.PluginStores.migrateAllPluginStores(com.db4o.ObjectContainer,node.nodeDBHandle)"], "Fixed commit": "fa79676f883503c12a9c9f5fc3c2bb74c2b916e1", "Url": "https://api.github.com/repos/xor-freenet/fred-staging", "Date": "2013-09-21T15:43:33Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { federationAdminService.updateRegistryEntry(metacard, locations); } catch (org.codice.ddf.registry.federationadmin.service.internal.FederationAdminException e) { federationAdminService.addRegistryEntry(metacard, locations); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/320/buggy-version/catalog.spatial.registry.registry-federation-admin-service-impl.src.main.java.org.codice.ddf.registry.federationadmin.service.impl.RegistryPublicationServiceImpl.java", "BodyUseAPI": ["org.codice.ddf.registry.federationadmin.service.internal.FederationAdminService.updateRegistryEntry(ddf.catalog.data.Metacard,java.util.Set<java.lang.String>)"], "Fixed commit": "a3e2c9961d0ec113b2101e4a2e10e12ed06e6ce5", "Url": "https://api.github.com/repos/ricklarsen/ddf", "Date": "2016-09-14T16:28:19Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { session = contentRemoteCredentials.login(contentRepository); } finally { thread.setContextClassLoader(loader); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7153/buggy-version/oak-remote.src.main.java.org.apache.jackrabbit.oak.remote.content.ContentRemoteRepository.java", "BodyUseAPI": ["org.apache.jackrabbit.oak.remote.content.ContentRemoteCredentials.login(org.apache.jackrabbit.oak.api.ContentRepository)"], "Fixed commit": "9fd93ce63a8bb4e4b5a4032a4eeecc035a3e8635", "Url": "https://api.github.com/repos/francescomari/jackrabbit-oak", "Date": "2015-04-13T10:29:28Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.support.v4.app.FragmentTransaction transaction = getActivity().getSupportFragmentManager().beginTransaction(); transaction.replace(R.id.fragment_container, summary_fragment, com.example.stacjonarny.graulamki.fragments.Game.GAME_SUMMARY_TAG); transaction.commit(); } catch (java.lang.NullPointerException e) { android.util.Log.w(\"NullPointerException\", (\"Controlled NullPointerException: \" + e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4614/buggy-version/app.src.main.java.com.example.stacjonarny.graulamki.fragments.Game.java", "BodyUseAPI": ["getActivity().getSupportFragmentManager().beginTransaction()", "com.example.stacjonarny.graulamki.fragments.Game.getActivity()", "getActivity().getSupportFragmentManager()", "android.support.v4.app.FragmentTransaction.replace(R.id.fragment_container,com.example.stacjonarny.graulamki.fragments.GameSummary,java.lang.String)", "android.support.v4.app.FragmentTransaction.commit()"], "Fixed commit": "0054bbaa160556b273c2fcae1ff5e2287f6b8f84", "Url": "https://api.github.com/repos/piterpti/Ulamki-Dziesietne", "Date": "2016-05-09T09:36:04Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { refresh(); connect(); } catch (org.openease.client.EASEError e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5418/buggy-version/knowrob_cloud_logger.oeclient.src.main.java.org.openease.client.BridgeClient.java", "BodyUseAPI": ["org.openease.client.BridgeClient.RefreshTask.refresh()", "org.openease.client.BridgeClient.RefreshTask.connect()"], "Fixed commit": "b16b236d6683c2ec278d5cc7bbedfbb79b9ca201", "Url": "https://api.github.com/repos/knowrob/knowrob_addons", "Date": "2017-11-02T15:16:54Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { value = java.lang.Integer.valueOf(QuestionNumericValue.getText().toString()); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4362/buggy-version/app.src.main.java.deeplife.gcme.com.deeplife.Wbs.WbsQuestionParentViewHolder.java", "BodyUseAPI": ["java.lang.Integer.valueOf(QuestionNumericValue.getText().toString())", "QuestionNumericValue.getText().toString()", "android.widget.TextView.getText()"], "Fixed commit": "d65257985f1dd24c5ddd44657cb5a1da1438f5ec", "Url": "https://api.github.com/repos/CruSea/NewDeepLife", "Date": "2017-01-24T08:29:43Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ps = conn.prepareStatement(\"select p.name,p.osm_id,p.way,p.\\\"addr:housenumber\\\" from planet_osm_point p where p.\\\"addr:street\\\" = ?\"); ps.setString(1, streetAddr); rs = ps.executeQuery(); while (rs.next()) { results.add(new com.stefano.Point(rs.getString(1), rs.getLong(2), ((com.stefano.PGgeometry) (rs.getObject(3))), rs.getString(4))); } } catch (java.sql.SQLException ex) { exceptions.add(ex); } finally { try { rs.close(); } catch (java.sql.SQLException ex) { exceptions.add(ex); } try { ps.close(); } catch (java.sql.SQLException ex) { exceptions.add(ex); } if ((exceptions.size()) != 0) { throw new com.stefano.OsmException(exceptions); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3751/buggy-version/Alw-AddrCoverage.src.main.java.com.stefano.GeomLib.java", "BodyUseAPI": ["java.util.ArrayList<com.stefano.Point>.add(com.stefano.Point)", "java.sql.ResultSet.next()", "java.sql.PreparedStatement.setString(int,java.lang.String)", "java.sql.PreparedStatement.executeQuery()", "java.sql.ResultSet.getString(int)", "java.sql.ResultSet.getLong(int)", "java.sql.ResultSet.getObject(int)", "java.sql.ResultSet.getString(int)", "java.sql.Connection.prepareStatement(java.lang.String)"], "Fixed commit": "dcee4111c33b15b11173e1b560e6ede570dbe674", "Url": "https://api.github.com/repos/sidious1991/Alw-AddrCoverage", "Date": "2017-10-27T16:10:45Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { normalOutput = new java.lang.String(normalOutput.getBytes(\"UTF8\")); output = normalOutput; } catch (java.io.UnsupportedEncodingException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4937/buggy-version/src.cryptography.Crypto.java", "BodyUseAPI": ["java.lang.String.getBytes(java.lang.String)"], "Fixed commit": "7c6ed750dbbb44dba86c5ef125d1a69551138a06", "Url": "https://api.github.com/repos/JihoChoi/CS307-Team-19-Sentinel-Data-Vault", "Date": "2015-11-18T18:22:35Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { d = f.parse(string_date); } catch (java.text.ParseException e) { d = new java.util.Date(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4289/buggy-version/src.com.ht1.cc.cgm.DexcomReader.java", "BodyUseAPI": ["java.text.SimpleDateFormat.parse(java.lang.String)"], "Fixed commit": "bbdef8628ca8abd57b3aa21a641f36bb7debe55c", "Url": "https://api.github.com/repos/jasoncalabrese/original-android-cgm", "Date": "2014-03-09T16:01:24Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { data = io.ably.lib.util.Base64Coder.decode(((java.lang.String) (data))); } catch (java.lang.IllegalArgumentException e) { throw io.ably.lib.types.AblyException.fromThrowable(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/75/buggy-version/lib.src.main.java.io.ably.lib.types.BaseMessage.java", "BodyUseAPI": ["io.ably.lib.util.Base64Coder.decode(java.lang.Object)"], "Fixed commit": "eccac6c639b7333a992b550faba35dade1082aa4", "Url": "https://api.github.com/repos/ably/ably-java", "Date": "2016-11-03T11:52:04Z"},
{"Line": "=>574", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { sendMessageToOtherPlayer(); } catch (java.lang.Exception ex) { java.util.logging.Logger.getLogger(Pong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7229/buggy-version/Pong.java", "BodyUseAPI": ["Pong.sendMessageToOtherPlayer()"], "Fixed commit": "c273402b8ef62003c96ced7dc3d0fae09db801c6", "Url": "https://api.github.com/repos/waldemarduarte/Pong", "Date": "2014-08-24T04:57:53Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { equalizerController.saveSettings(); if (!(equalizer.getEnabled())) { equalizerController.release(); } } catch (java.lang.Exception e) { android.util.Log.w(github.daneren2005.dsub.fragments.EqualizerFragment.TAG, \"Failed to release controller\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/199/buggy-version/app.src.main.java.github.daneren2005.dsub.fragments.EqualizerFragment.java", "BodyUseAPI": ["github.daneren2005.dsub.audiofx.EqualizerController.saveSettings()", "github.daneren2005.dsub.audiofx.EqualizerController.release()", "android.media.audiofx.Equalizer.getEnabled()"], "Fixed commit": "57e13e94620b837e4945858b6d7f3f1d4abf6941", "Url": "https://api.github.com/repos/daneren2005/Subsonic", "Date": "2015-10-20T16:15:59Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { new ChatClient(ChatClient.host, ChatClient.ePort); } catch (java.lang.Exception ex) { java.util.logging.Logger.getLogger(ChatClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1843/buggy-version/src.ChatClient.java", "BodyUseAPI": [], "Fixed commit": "2a15ac0af6448078207d7e24f5706c31a4c62f07", "Url": "https://api.github.com/repos/hyejin106/ChatWithSSLFileTransfer", "Date": "2017-06-19T04:59:23Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { checkResponse(variableSdkResponse); return variableSdkResponse.getData(); } catch (java.lang.Exception e) { e.printStackTrace(); return new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8319/buggy-version/quantimodo-sdk-tools.src.main.java.com.quantimodo.tools.sdk.request.GetPublicSuggestedVariablesRequest.java", "BodyUseAPI": ["com.quantimodo.tools.sdk.request.GetPublicSuggestedVariablesRequest.checkResponse(com.quantimodo.android.sdk.SdkResponse<java.util.ArrayList<com.quantimodo.android.sdk.model.Variable>>)", "com.quantimodo.android.sdk.SdkResponse<java.util.ArrayList<com.quantimodo.android.sdk.model.Variable>>.getData()"], "Fixed commit": "ef8450047791d3e6404e1d16ec20585b61e76069", "Url": "https://api.github.com/repos/QuantiModo/quantimodo-sdk-android", "Date": "2015-11-28T03:31:52Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { checkResponse(variableSdkResponse); return variableSdkResponse.getData(); } catch (java.lang.Exception e) { e.printStackTrace(); return new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8319/buggy-version/quantimodo-sdk-tools.src.main.java.com.quantimodo.tools.sdk.request.GetSuggestedVariablesRequest.java", "BodyUseAPI": ["com.quantimodo.android.sdk.SdkResponse<java.util.ArrayList<com.quantimodo.android.sdk.model.Variable>>.getData()", "com.quantimodo.tools.sdk.request.GetSuggestedVariablesRequest.checkResponse(com.quantimodo.android.sdk.SdkResponse<java.util.ArrayList<com.quantimodo.android.sdk.model.Variable>>)"], "Fixed commit": "ef8450047791d3e6404e1d16ec20585b61e76069", "Url": "https://api.github.com/repos/QuantiModo/quantimodo-sdk-android", "Date": "2015-11-28T03:31:52Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { startActivityForResult(intent, com.github.barteksc.sample.PDFViewActivity.REQUEST_CODE); } catch (android.content.ActivityNotFoundException e) { android.widget.Toast.makeText(this, R.string.toast_pick_file_error, Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2128/buggy-version/sample.src.main.java.com.github.barteksc.sample.PDFViewActivity.java", "BodyUseAPI": ["com.github.barteksc.sample.PDFViewActivity.startActivityForResult(android.content.Intent,int)"], "Fixed commit": "422576c077a2f7f6f93a5125cadbfde33b090e67", "Url": "https://api.github.com/repos/barteksc/AndroidPdfViewer", "Date": "2016-09-26T22:30:24Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { workers = access.filteringWorker(new java.math.BigInteger(req.getParameter(\"id\")), filters); } catch (java.lang.NumberFormatException e) { workers = access.filteringWorker(null, filters); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5426/buggy-version/src.ua.ivanchenko.eman.processors.FilterActionProcessor.java", "BodyUseAPI": ["ua.ivanchenko.eman.model.IDataAccessor.filteringWorker(java.math.BigInteger,java.util.HashMap<java.lang.String, java.lang.String>)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Fixed commit": "ff4e8745b313d48592dd5d05143a9063db286163", "Url": "https://api.github.com/repos/warloc69/EMan", "Date": "2012-03-27T13:28:48Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { gruppeModel.setMotherGroup(Gruppe.find.byId(java.lang.Long.parseLong(new models.HttpRequestData().get(\"motherGruppe\")))); } catch (java.lang.Exception e) { gruppeModel.setMotherGroup(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6731/buggy-version/app.controllers.GruppeController.java", "BodyUseAPI": ["java.lang.Long.parseLong(new models.HttpRequestData().get(\"motherGruppe\"))", "models.HttpRequestData.get(java.lang.String)", "Gruppe.find.byId(long)", "models.Gruppe.setMotherGroup(Gruppe.find.byId(java.lang.Long.parseLong(new models.HttpRequestData().get(\"motherGruppe\"))))"], "Fixed commit": "f6b89e28b82c3d77977c6aca724df5862c36c6f2", "Url": "https://api.github.com/repos/Brax94/Calendar", "Date": "2015-03-12T13:27:41Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (todayWeather.getCountry().isEmpty()) { preloadWeather(); return; } } catch (java.lang.Exception e) { preloadWeather(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7958/buggy-version/app.src.main.java.cz.martykan.forecastie.activities.MainActivity.java", "BodyUseAPI": ["cz.martykan.forecastie.activities.MainActivity.preloadWeather()", "todayWeather.getCountry().isEmpty()", "cz.martykan.forecastie.models.Weather.getCountry()"], "Fixed commit": "a8e43236c6bb7057c149daa6419d32e5caf77938", "Url": "https://api.github.com/repos/martykan/forecastie", "Date": "2016-08-17T17:22:01Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { state.put(fieldName, com.psddev.cms.db.RichTextDatabase.PUBLISHABLES.getUnchecked(((java.lang.String) (value)))); } catch (java.lang.IllegalStateException error) { java.util.List<java.lang.Object> publishables = new com.psddev.dari.db.ReferentialText(((java.lang.String) (value)), true).toPublishables(true, new com.psddev.cms.db.RichTextCleaner()); state.put(fieldName, (publishables.isEmpty() ? \"\" : ((java.lang.String) (publishables.get(0))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1933/buggy-version/db.src.main.java.com.psddev.cms.db.RichTextDatabase.java", "BodyUseAPI": ["com.psddev.dari.db.State.put(java.lang.String,com.psddev.cms.db.RichTextDatabase.PUBLISHABLES.getUnchecked(((java.lang.String) (value))))", "com.google.common.cache.LoadingCache<java.lang.String, java.lang.String>.getUnchecked(java.lang.Object)"], "Fixed commit": "f90b9e98be920d6361633f7f08b1654686c13efb", "Url": "https://api.github.com/repos/perfectsense/brightspot-cms", "Date": "2014-12-04T16:47:02Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { camera = android.hardware.Camera.open(); } catch (java.lang.Exception e) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6141/buggy-version/app.src.main.java.com.qtree.xuebacamera.MyCamera.CameraManager.java", "BodyUseAPI": ["android.hardware.Camera.open()"], "Fixed commit": "7afbc9b242b7c1e3ada0ba4ede37b700a0e748b9", "Url": "https://api.github.com/repos/402335257/XuebaCamera", "Date": "2016-10-15T10:27:31Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { realm = io.realm.Realm.getDefaultInstance(); } catch (java.lang.IllegalStateException fuckYouTooAndroid) { io.realm.Realm.init(context.getApplicationContext()); realm = io.realm.Realm.getDefaultInstance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/592/buggy-version/app.src.main.java.apps.savvisingh.nanakshahicalendar.broadcast_receiver.AlarmReceiver.java", "BodyUseAPI": ["io.realm.Realm.getDefaultInstance()"], "Fixed commit": "c349b6f7366ffe7f7a6f5262e344adb513de3433", "Url": "https://api.github.com/repos/savvisingh/NanakShahi-Calendar", "Date": "2017-06-26T11:38:21Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (game.getWorld().getEntityManager().isTileFilledWithWater(local.getRow(), local.getCol())) { g.drawString(\"Tile has water.\", 10, 60); }else { g.drawString(\"Tile doesn't have water.\", 10, 60); } if (((game.getWorld().getEntityManager().getTile(local)) != null) && ((game.getWorld().getEntityManager().getTile(local).getEntity()) instanceof com.jpii.navalbattle.game.entity.BattleShip)) { g.drawString(\"Tile is part of a battleship.\", 10, 80); } g.drawString(((\"Percent land \" + (game.getWorld().getEntityManager().getTilePercentLand(local.getRow(), local.getCol()))) + \"%\"), 10, 100); } catch (java.lang.Throwable t) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/938/buggy-version/src.com.jpii.navalbattle.pavo.gui.GridWindow.java", "BodyUseAPI": ["game.getWorld().getEntityManager()", "com.jpii.navalbattle.pavo.grid.Location.getCol()", "java.awt.Graphics2D.drawString(((\"Percent land \" + (game.getWorld().getEntityManager().getTilePercentLand(local.getRow(), local.getCol()))) + \"%\"),int,int)", "com.jpii.navalbattle.pavo.Game.getWorld()", "game.getWorld().getEntityManager().getTilePercentLand(local.getRow(),local.getCol())", "game.getWorld().getEntityManager().getTile(com.jpii.navalbattle.pavo.grid.Location)", "com.jpii.navalbattle.pavo.grid.Location.getRow()", "java.awt.Graphics2D.drawString(java.lang.String,int,int)", "com.jpii.navalbattle.pavo.grid.Location.getCol()", "game.getWorld().getEntityManager().getTile(local).getEntity()", "game.getWorld().getEntityManager().getTile(com.jpii.navalbattle.pavo.grid.Location)", "com.jpii.navalbattle.pavo.grid.Location.getRow()", "game.getWorld().getEntityManager()", "game.getWorld().getEntityManager()", "com.jpii.navalbattle.pavo.Game.getWorld()", "game.getWorld().getEntityManager().isTileFilledWithWater(local.getRow(),local.getCol())", "game.getWorld().getEntityManager()", "com.jpii.navalbattle.pavo.Game.getWorld()", "java.awt.Graphics2D.drawString(java.lang.String,int,int)", "java.awt.Graphics2D.drawString(java.lang.String,int,int)", "com.jpii.navalbattle.pavo.Game.getWorld()"], "Fixed commit": "664faa4411811edd1a3099b4e73e3d6f1136d450", "Url": "https://api.github.com/repos/JPII/NavalBattle", "Date": "2013-02-01T04:11:46Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.javax.sip.header.AcceptHeader textPlainAcceptHeader = headerMaker.createAcceptHeader(\"text\", \"plain\"); android.javax.sip.header.AcceptHeader instantMessageAcceptHeader = headerMaker.createAcceptHeader(\"application\", \"im-iscomposing+xml\"); additionalHeaderList.add(textPlainAcceptHeader); additionalHeaderList.add(instantMessageAcceptHeader); } catch (java.text.ParseException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2328/buggy-version/src.org.github.sipuada.SipUserAgentClient.java", "BodyUseAPI": ["java.util.List<android.javax.sip.header.Header>.add(android.javax.sip.header.AcceptHeader)", "android.javax.sip.header.HeaderFactory.createAcceptHeader(java.lang.String,java.lang.String)", "android.javax.sip.header.HeaderFactory.createAcceptHeader(java.lang.String,java.lang.String)", "java.util.List<android.javax.sip.header.Header>.add(android.javax.sip.header.AcceptHeader)"], "Fixed commit": "db6e01be261c13336ac80d3f74b8464555aad01b", "Url": "https://api.github.com/repos/Sipuada/sipuada", "Date": "2016-04-13T14:54:32Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { parameters.put(\"username\", java.net.URLEncoder.encode(login_uid.getText().toString().trim(), \"UTF-8\")); } catch (java.io.UnsupportedEncodingException e) { parameters.put(\"username\", login_uid.getText().toString().trim()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6258/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.activities.LoginActivity.java", "BodyUseAPI": ["login_uid.getText().toString().trim()", "android.widget.EditText.getText()", "java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "login_uid.getText().toString()", "java.net.URLEncoder.encode(login_uid.getText().toString().trim(),java.lang.String)"], "Fixed commit": "ef4061fd4485359ed729f403f54ad3199212d93f", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2017-12-21T12:29:51Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { date = new java.sql.Date(sessionModel.getMostRecent(null).date_created); } catch (java.lang.Exception e) { date = new java.sql.Date(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5259/buggy-version/src.com.vorsk.crossfitr.CrossFitrActivity.java", "BodyUseAPI": ["com.vorsk.crossfitr.models.WorkoutSessionModel.getMostRecent(<nulltype>)"], "Fixed commit": "8115f27cdf062b5fc8d57d49e05c8ad7a1adc307", "Url": "https://api.github.com/repos/mrlanrat/CrossFitr", "Date": "2012-06-04T01:43:57Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { lock.lock(); isBufferEmptyOccurred = false; } finally { lock.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/761/buggy-version/gobblin-core.src.main.java.gobblin.async.AsyncDataDispatcher.java", "BodyUseAPI": ["java.util.concurrent.locks.Lock.lock()"], "Fixed commit": "15d0d8214059edde7f504c1465e83899f1f457c7", "Url": "https://api.github.com/repos/zxcware/gobblin", "Date": "2017-05-04T01:11:03Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { option = args[0]; } catch (java.lang.ArrayIndexOutOfBoundsException e) { player.sendMessage(\"A help message will go here :)\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6676/buggy-version/src.main.java.mc.alk.bungeearena.CommandExec.TeamExecutor.java", "BodyUseAPI": [], "Fixed commit": "100a3c4b6cbc40bdd955c60817aaadd5f715e7d6", "Url": "https://api.github.com/repos/slimshadeey1/Bungee-Arena", "Date": "2014-07-21T06:43:27Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { option = args[0]; } catch (java.lang.ArrayIndexOutOfBoundsException e) { player.sendMessage(\"A help message will go here :)\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6676/buggy-version/src.main.java.mc.alk.bungeearena.CommandExec.ArenaExecutor.java", "BodyUseAPI": [], "Fixed commit": "100a3c4b6cbc40bdd955c60817aaadd5f715e7d6", "Url": "https://api.github.com/repos/slimshadeey1/Bungee-Arena", "Date": "2014-07-21T06:43:27Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { option = args[0]; } catch (java.lang.ArrayIndexOutOfBoundsException e) { player.sendMessage(\"A help message will go here :)\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6676/buggy-version/src.main.java.mc.alk.bungeearena.CommandExec.EventExecutor.java", "BodyUseAPI": [], "Fixed commit": "100a3c4b6cbc40bdd955c60817aaadd5f715e7d6", "Url": "https://api.github.com/repos/slimshadeey1/Bungee-Arena", "Date": "2014-07-21T06:43:27Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { option = args[0]; } catch (java.lang.ArrayIndexOutOfBoundsException e) { player.sendMessage(\"A help message will go here :)\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6676/buggy-version/src.main.java.mc.alk.bungeearena.CommandExec.GameExecutor.java", "BodyUseAPI": [], "Fixed commit": "100a3c4b6cbc40bdd955c60817aaadd5f715e7d6", "Url": "https://api.github.com/repos/slimshadeey1/Bungee-Arena", "Date": "2014-07-21T06:43:27Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mCordovaWebView.loadUrl(url); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6161/buggy-version/src.com.PATHomei.yanyu.leveltwo.GoodsDetailActivity.java", "BodyUseAPI": ["org.apache.cordova.CordovaWebView.loadUrl(java.lang.String)"], "Fixed commit": "7486e429c0d87a2f40ffa75af26ae33465e80791", "Url": "https://api.github.com/repos/seedzi/PATHomei_eclipse", "Date": "2015-09-13T08:26:09Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.michael.corelib.config.CoreConfig.LOGD(msg); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1815/buggy-version/src.main.java.com.michael.corelib.internet.NetworkLog.java", "BodyUseAPI": ["com.michael.corelib.config.CoreConfig.LOGD(java.lang.String)"], "Fixed commit": "4bd375898dbe43d989bafe694c85bd7c5dc56b94", "Url": "https://api.github.com/repos/MichaelSun/corelib", "Date": "2015-12-10T09:28:34Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { android.arch.persistence.db.SimpleSQLiteQuery.bind(statement, whereArgs); return statement.executeUpdateDelete(); } finally { try { statement.close(); } catch (java.lang.Exception e) { throw new java.lang.RuntimeException(\"Exception attempting to close statement\", e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3788/buggy-version/saferoom.src.main.java.com.commonsware.cwac.saferoom.Database.java", "BodyUseAPI": ["android.arch.persistence.db.SupportSQLiteStatement.executeUpdateDelete()", "android.arch.persistence.db.SimpleSQLiteQuery.bind(android.arch.persistence.db.SupportSQLiteStatement,java.lang.Object[])"], "Fixed commit": "8df057cd519da23f981a60ef07bf6ac034cd09ba", "Url": "https://api.github.com/repos/commonsguy/cwac-saferoom", "Date": "2017-11-14T12:43:47Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { if ((strategyId == 0) || (strategyId == 3)) { if ((((macd[(lookback - 1)]) > 0) && ((macd[lookback]) < 0)) || (((histogram[(lookback - 1)]) < 0) && ((histogram[lookback]) > 0))) toReturn = true; }else if (strategyId == 1) { if (((((macd[(lookback - 1)]) > 0) && ((macd[lookback]) < 0)) || (((histogram[(lookback - 1)]) < 0) && ((histogram[lookback]) > 0))) || ((macd[(lookback - 1)]) < (macd[lookback]))) toReturn = true; }else if ((strategyId == 2) || (strategyId == 4)) { if ((macd[(lookback - 1)]) < (macd[lookback])) toReturn = true; }else if (strategyId == 5) { if ((((macd[(lookback - 1)]) < 0) && ((macd[lookback]) > 0)) || (((histogram[(lookback - 1)]) > 0) && ((histogram[lookback]) < 0))) toReturn = true; }else if (strategyId == 6) { if (((((macd[(lookback - 1)]) < 0) && ((macd[lookback]) > 0)) || (((histogram[(lookback - 1)]) > 0) && ((histogram[lookback]) < 0))) || ((macd[(lookback - 1)]) > (macd[lookback]))) toReturn = true; }else if (strategyId == 7) { if ((macd[(lookback - 1)]) > (macd[lookback])) toReturn = true; } } catch (java.lang.ArrayIndexOutOfBoundsException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2751/buggy-version/MacDSignalCrossoverStrategies.java", "BodyUseAPI": [], "Fixed commit": "9960ad13087686518e975efe6fd325b8bb358e9f", "Url": "https://api.github.com/repos/jschilla/S-Central", "Date": "2011-04-18T02:04:40Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { connect(com.ra1ph.MainThread.user, com.ra1ph.MainThread.pass); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7052/buggy-version/src.com.ra1ph.MainThread.java", "BodyUseAPI": ["com.ra1ph.MainThread.connect(java.lang.String,java.lang.String)"], "Fixed commit": "02ef40344f0aa4c83ff292b278e90b7b8b664ed2", "Url": "https://api.github.com/repos/ra1ph/GetPicBot", "Date": "2013-06-20T18:24:56Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mWebSocketClient.send(json); txtSpeechInput.setText(msg); } catch (org.java_websocket.exceptions.WebsocketNotConnectedException e) { android.widget.Toast.makeText(getApplicationContext(), getResources().getString(R.string.websocket_closed), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2533/buggy-version/app.src.main.java.mycroft.ai.MainActivity.java", "BodyUseAPI": ["org.java_websocket.client.WebSocketClient.send(java.lang.String)", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "9068d88503521dc6e0822203e0a75ae5acd32322", "Url": "https://api.github.com/repos/Cliabhach/Mycroft-Android", "Date": "2016-06-22T09:14:03Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.dismiss(); } catch (java.lang.IllegalArgumentException iae) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7039/buggy-version/facebook.src.com.facebook.android.FbDialog.java", "BodyUseAPI": ["com.facebook.android.FbDialog.dismiss()"], "Fixed commit": "c985303f47b4f7023a47d35f2c433af23ce88416", "Url": "https://api.github.com/repos/gnr/facebook-android-sdk", "Date": "2011-06-28T20:44:41Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.dismiss(); } catch (java.lang.IllegalArgumentException iae) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7039/buggy-version/facebook.src.com.facebook.android.FbDialog.java", "BodyUseAPI": ["com.facebook.android.FbDialog.dismiss()"], "Fixed commit": "c985303f47b4f7023a47d35f2c433af23ce88416", "Url": "https://api.github.com/repos/gnr/facebook-android-sdk", "Date": "2011-06-28T20:44:41Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mSpinner.dismiss(); } catch (java.lang.IllegalArgumentException iae) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7039/buggy-version/facebook.src.com.facebook.android.FbDialog.java", "BodyUseAPI": ["android.app.ProgressDialog.dismiss()"], "Fixed commit": "c985303f47b4f7023a47d35f2c433af23ce88416", "Url": "https://api.github.com/repos/gnr/facebook-android-sdk", "Date": "2011-06-28T20:44:41Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.dismiss(); } catch (java.lang.IllegalArgumentException iae) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7039/buggy-version/facebook.src.com.facebook.android.FbDialog.java", "BodyUseAPI": ["com.facebook.android.FbDialog.dismiss()"], "Fixed commit": "c985303f47b4f7023a47d35f2c433af23ce88416", "Url": "https://api.github.com/repos/gnr/facebook-android-sdk", "Date": "2011-06-28T20:44:41Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.dismiss(); } catch (java.lang.IllegalArgumentException iae) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7039/buggy-version/facebook.src.com.facebook.android.FbDialog.java", "BodyUseAPI": ["com.facebook.android.FbDialog.dismiss()"], "Fixed commit": "c985303f47b4f7023a47d35f2c433af23ce88416", "Url": "https://api.github.com/repos/gnr/facebook-android-sdk", "Date": "2011-06-28T20:44:41Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { buildPackage(pkg, rebuild); } catch (java.io.IOException e) { logger.error((\"Failed to build helium package: \" + (pkg.getArtifact())), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4402/buggy-version/zeppelin-zengine.src.main.java.org.apache.zeppelin.helium.HeliumBundleFactory.java", "BodyUseAPI": ["org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage(org.apache.zeppelin.helium.HeliumPackage,boolean)"], "Fixed commit": "53145fa7ec6d218703bf18f192ef22f5855c351c", "Url": "https://api.github.com/repos/1ambda/zeppelin", "Date": "2017-03-31T14:06:08Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { resetPassword(context, request, response, e); } catch (javax.mail.MessagingException e1) { org.dspace.app.webui.util.JSPManager.showJSP(request, response, \"/dspace-admin/eperson-resetpassword-error.jsp\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/623/buggy-version/dspace-jspui.src.main.java.org.dspace.app.webui.servlet.admin.EPersonAdminServlet.java", "BodyUseAPI": ["org.dspace.app.webui.servlet.admin.EPersonAdminServlet.resetPassword(org.dspace.core.Context,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.dspace.eperson.EPerson)"], "Fixed commit": "1a85f249400469f8853a5c7f860fc13c62fb3d7a", "Url": "https://api.github.com/repos/lap82/DSpace", "Date": "2013-08-20T22:18:03Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { resetPassword(context, request, response, e); } catch (javax.mail.MessagingException e1) { org.dspace.app.webui.util.JSPManager.showJSP(request, response, \"/dspace-admin/eperson-resetpassword-error.jsp\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/623/buggy-version/dspace-jspui.src.main.java.org.dspace.app.webui.servlet.admin.EPersonAdminServlet.java", "BodyUseAPI": ["org.dspace.app.webui.servlet.admin.EPersonAdminServlet.resetPassword(org.dspace.core.Context,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.dspace.eperson.EPerson)"], "Fixed commit": "1a85f249400469f8853a5c7f860fc13c62fb3d7a", "Url": "https://api.github.com/repos/lap82/DSpace", "Date": "2013-08-20T22:18:03Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.io.File imageSnapshot = fileStorageService.getFile(speedTestWebSiteDAO.getS3FileAddress()); double analyzedImageResult = imageAnalyzerService.analyzeImage(speedTestWebSiteDAO.getSpeedTestIdentifier(), imageSnapshot); speedTestWebSiteRepository.updateAnalyzedImageResult(speedTestWebSiteDAO.getId(), analyzedImageResult); } catch (java.lang.Exception e) { logger.error((\"AnalyzeImage failed, \" + (e.getMessage())), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3754/buggy-version/src.main.java.com.caseyellow.server.central.domain.analyzer.image.ImageAnalyzer.java", "BodyUseAPI": ["com.caseyellow.server.central.persistence.website.dao.SpeedTestWebSiteDAO.getSpeedTestIdentifier()", "com.caseyellow.server.central.services.storage.FileStorageService.getFile(speedTestWebSiteDAO.getS3FileAddress())", "com.caseyellow.server.central.services.analyze.ImageAnalyzerService.analyzeImage(speedTestWebSiteDAO.getSpeedTestIdentifier(),java.io.File)", "com.caseyellow.server.central.persistence.website.dao.SpeedTestWebSiteDAO.getId()", "com.caseyellow.server.central.persistence.website.repository.SpeedTestWebSiteRepository.updateAnalyzedImageResult(speedTestWebSiteDAO.getId(),double)", "com.caseyellow.server.central.persistence.website.dao.SpeedTestWebSiteDAO.getS3FileAddress()"], "Fixed commit": "5d2b926a0a299a3b72a1af640ad0fc278aa1b80e", "Url": "https://api.github.com/repos/dango24/case-yellow-server-central", "Date": "2017-10-25T15:51:58Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.reflect.Field mFirstLayout = android.support.v4.view.ViewPager.class.getDeclaredField(\"mFirstLayout\"); mFirstLayout.setAccessible(true); mFirstLayout.set(this, false); } catch (java.lang.NoSuchFieldException e) { e.printStackTrace(); } catch (java.lang.IllegalAccessException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2156/buggy-version/framelibrary.src.main.java.com.example.mylibrary.view.indicator.banner.BannerViewPager.java", "BodyUseAPI": ["java.lang.reflect.Field.setAccessible(boolean)", "java.lang.reflect.Field.set(com.example.mylibrary.view.indicator.banner.BannerViewPager,boolean)", "java.lang.Class.getDeclaredField(java.lang.String)"], "Fixed commit": "5438e6de54a009b2700fa37d60c069b92112204b", "Url": "https://api.github.com/repos/renzhenming/AppMarketDemo", "Date": "2017-11-16T10:43:26Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.knime.core.node.util.CheckUtils.checkDestinationDirectory(m_directory.getStringValue()); } catch (org.knime.core.node.InvalidSettingsException e) { if ((!(e.getMessage().endsWith(\"does not exist\"))) || (!(m_forceMkdir.getBooleanValue()))) { throw e; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1266/buggy-version/org.knime.knip.io.src.org.knime.knip.io.nodes.imgwriter2.ImgWriter2NodeModel.java", "BodyUseAPI": ["org.knime.core.node.util.CheckUtils.checkDestinationDirectory(m_directory.getStringValue())", "org.knime.core.node.defaultnodesettings.SettingsModelString.getStringValue()"], "Fixed commit": "ee20d6d238ff89eb88a4baf8decb0ddadf193e0a", "Url": "https://api.github.com/repos/knime-ip/knip", "Date": "2015-05-25T13:33:22Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.giswater.util.Utils.bundleText = java.util.ResourceBundle.getBundle(\"text\", locale); } catch (java.lang.Exception e) { org.giswater.util.Utils.logError(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/380/buggy-version/src.org.giswater.util.Utils.java", "BodyUseAPI": ["java.util.ResourceBundle.getBundle(java.lang.String,java.util.Locale)"], "Fixed commit": "d5064c5240a38fcd20472d36040622df5c47a7a8", "Url": "https://api.github.com/repos/Giswater/giswater", "Date": "2015-04-30T07:47:38Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { cat7_prev.setEnabled(false); } catch (java.lang.Exception e) { finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/877/buggy-version/src.in.bizquiz.app.Category7.java", "BodyUseAPI": ["android.widget.Button.setEnabled(boolean)"], "Fixed commit": "df087093090fa9b8e80d036b352893cb0cc4101d", "Url": "https://api.github.com/repos/sarthakmeh03/BizQuiz", "Date": "2013-11-09T21:51:56Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (system) { return com.redhat.ceylon.common.config.ConfigParser.loadSystemConfig(); } if (user) { return com.redhat.ceylon.common.config.ConfigParser.loadUserConfig(); } if (local) { return com.redhat.ceylon.common.config.ConfigParser.loadConfigFromFile(com.redhat.ceylon.common.config.ConfigParser.findLocalConfig(applyCwd(new java.io.File(\".\")))); } } catch (java.io.FileNotFoundException ex) { return new com.redhat.ceylon.common.config.CeylonConfig(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/526/buggy-version/src.com.redhat.ceylon.common.tools.config.CeylonConfigTool.java", "BodyUseAPI": ["com.redhat.ceylon.common.tools.config.CeylonConfigTool.applyCwd(java.io.File)", "com.redhat.ceylon.common.config.ConfigParser.loadConfigFromFile(com.redhat.ceylon.common.config.ConfigParser.findLocalConfig(applyCwd(new java.io.File(\".\"))))", "com.redhat.ceylon.common.config.ConfigParser.loadUserConfig()", "com.redhat.ceylon.common.config.ConfigParser.findLocalConfig(applyCwd(new java.io.File(\".\")))", "com.redhat.ceylon.common.config.ConfigParser.loadSystemConfig()"], "Fixed commit": "7437ef7de80d9907138a991af5b2a202bda8bf49", "Url": "https://api.github.com/repos/ceylon/ceylon-common", "Date": "2014-04-30T00:10:18Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { columnChartData.put(edu.isi.karma.controller.update.WorksheetCleaningServiceInvocationResultsUpdate.JsonKeys.chartData.name(), new org.json.JSONObject(cleaningInvocationOutput.get(hNodeId))); } catch (org.json.JSONException e) { edu.isi.karma.controller.update.WorksheetCleaningServiceInvocationResultsUpdate.logger.error((\"Error occured with cleaning service for HNode: \" + hNodeId), e); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2296/buggy-version/src.main.java.edu.isi.karma.controller.update.WorksheetCleaningServiceInvocationResultsUpdate.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "org.json.JSONObject.put(java.lang.String,org.json.JSONObject)", "edu.isi.karma.controller.update.WorksheetCleaningServiceInvocationResultsUpdate.JsonKeys.name()"], "Fixed commit": "1c81a3616c6179b145ecaf8ccad647c0a8f8285e", "Url": "https://api.github.com/repos/InformationIntegrationGroup/Web-Karma-Public", "Date": "2013-09-05T18:24:26Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { getEventDispatcher().fireEventListeners(metadata, e, javax.persistence.PrePersist.class); } catch (java.lang.Exception es) { es.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3364/buggy-version/kundera-core.src.main.java.com.impetus.kundera.persistence.PersistenceDelegator.java", "BodyUseAPI": ["com.impetus.kundera.persistence.PersistenceDelegator.getEventDispatcher()", "com.impetus.kundera.persistence.event.EntityEventDispatcher.fireEventListeners(com.impetus.kundera.metadata.model.EntityMetadata,java.lang.Object,java.lang.Class)"], "Fixed commit": "c4c4166588ac465a1f2043f0cc803bec74e6fa04", "Url": "https://api.github.com/repos/impetus-opensource/Kundera", "Date": "2013-03-07T16:43:52Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { out.writeInt(java.lang.Integer.parseInt(arr[0])); } catch (java.lang.NumberFormatException e) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/642/buggy-version/src.dist.edu.umd.cloud9.collection.wikipedia.WikipediaDocnoMapping.java", "BodyUseAPI": ["org.apache.hadoop.fs.FSDataOutputStream.writeInt(int)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "7543b059fc011dd736536ba6b8ca6efca2d1569c", "Url": "https://api.github.com/repos/antoine-tran/Cloud9", "Date": "2014-05-29T11:49:01Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { positionOffset.x = (java.lang.Integer.parseInt(attributes.getValue(\"x\"))) * (tileSize.width); positionOffset.y = (java.lang.Integer.parseInt(attributes.getValue(\"y\"))) * (tileSize.height); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1103/buggy-version/cocos2d-android.src.org.cocos2d.layers.CCTMXMapInfo.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "org.xml.sax.Attributes.getValue(java.lang.String)", "org.xml.sax.Attributes.getValue(java.lang.String)"], "Fixed commit": "6ccf1abc9918eef1076ad869fda38c6f722afd3a", "Url": "https://api.github.com/repos/ZhouWeikuan/cocos2d", "Date": "2011-09-29T00:52:40Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return ((org.nuxeo.ecm.liveconnect.core.LiveConnectBlobProvider) (provider)).toBlob(new org.nuxeo.ecm.liveconnect.core.LiveConnectFileInfo(jsonObject.get(\"user\").getTextValue(), jsonObject.get(\"fileId\").getTextValue())); } catch (java.io.IOException e) { throw new org.nuxeo.ecm.core.api.NuxeoException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8462/buggy-version/nuxeo-liveconnect-core.src.main.java.org.nuxeo.ecm.liveconnect.core.JSONLiveConnectBlobDecoder.java", "BodyUseAPI": ["org.codehaus.jackson.node.ObjectNode.get(java.lang.String)", "org.codehaus.jackson.node.ObjectNode.get(java.lang.String)", "jsonObject.get(\"fileId\").getTextValue()", "org.nuxeo.ecm.core.blob.BlobProvider.toBlob(org.nuxeo.ecm.liveconnect.core.LiveConnectFileInfo)", "jsonObject.get(\"user\").getTextValue()"], "Fixed commit": "a41a327b9affe13644aaeea54ae26e590d82cd5a", "Url": "https://api.github.com/repos/nuxeo/nuxeo-liveconnect", "Date": "2017-11-27T12:20:05Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { userObject = userDao.getUserByApiKey(apiKey); } catch (java.lang.Exception e) { log.error(\"ProcessCreate.addPriceFact error\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/476/buggy-version/src.main.java.edu.matc.pricecheck.ProcessCreate.java", "BodyUseAPI": ["edu.matc.pricecheck.UserDao.getUserByApiKey(java.lang.String)"], "Fixed commit": "19250b5bf8c6360204e6e5b2736fa5d5c187fa37", "Url": "https://api.github.com/repos/Tubakien/PriceCheckCrowdSourceAPI", "Date": "2017-04-05T00:11:01Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { algVariables.put(name, content[1].trim()); } catch (java.lang.ArrayIndexOutOfBoundsException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7045/buggy-version/RSLB2.start.src.start.RmasGui.java", "BodyUseAPI": ["java.lang.String.trim()", "java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "c1cf6af2955927bfc9f20a5af12e2ca0f842e023", "Url": "https://api.github.com/repos/fama88/RMASBench", "Date": "2013-05-07T08:51:29Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { result.setInitialized(uk.ac.ed.ph.jqtiplus.internal.util.StringUtilities.fromTrueFalse(documentElement.getAttribute(\"initialized\"))); } catch (final java.lang.IllegalArgumentException e) { throw new uk.ac.ed.ph.qtiworks.domain.binding.MarshallingException(\"Expected initialized attribute to be 'true' or 'false'\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/190/buggy-version/qtiworks-engine.src.main.java.uk.ac.ed.ph.qtiworks.domain.binding.ItemSesssionStateXmlMarshaller.java", "BodyUseAPI": ["uk.ac.ed.ph.jqtiplus.state.ItemSessionState.setInitialized(uk.ac.ed.ph.jqtiplus.internal.util.StringUtilities.fromTrueFalse(documentElement.getAttribute(\"initialized\")))", "org.w3c.dom.Element.getAttribute(java.lang.String)", "uk.ac.ed.ph.jqtiplus.internal.util.StringUtilities.fromTrueFalse(java.lang.String)"], "Fixed commit": "a885f8530867ec2cb21bccdf0ad1d85fecefb0cd", "Url": "https://api.github.com/repos/davemckain/qtiworks", "Date": "2012-05-17T16:10:27Z"},
{"Line": "=>650", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { rset.last(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4029/buggy-version/proj1.java", "BodyUseAPI": ["java.sql.ResultSet.last()"], "Fixed commit": "1d392e0fc9b21f773984fefa3f87cf4c61b8040a", "Url": "https://api.github.com/repos/awwong1/c291p1", "Date": "2013-03-10T00:09:11Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return ((ch.heigvd.amt.moussaraser.model.entities.ApiKey) (em.createNamedQuery(\"ApiKey.findByApiKeyStr\").setParameter(\"apiKey\", apiKeyStr).getSingleResult())); } catch (javax.persistence.NoResultException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1311/buggy-version/projet.MoussaRaser.src.main.java.ch.heigvd.amt.moussaraser.services.dao.ApiKeyDAO.java", "BodyUseAPI": ["em.createNamedQuery(\"ApiKey.findByApiKeyStr\").setParameter(\"apiKey\", apiKeyStr).getSingleResult()", "ch.heigvd.amt.moussaraser.services.dao.ApiKeyDAO.createNamedQuery(java.lang.String)", "em.createNamedQuery(\"ApiKey.findByApiKeyStr\").setParameter(java.lang.String,java.lang.String)"], "Fixed commit": "a97648b5718d2a3edf3e76ae02307953ccdacac3", "Url": "https://api.github.com/repos/Kjnokeer/Teaching-HEIGVD-AMT-2015-Project", "Date": "2015-11-28T09:53:51Z"},
{"Line": "=>1111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (execFrom instanceof java.lang.Class) field = ((java.lang.Class<?>) (execFrom)).getDeclaredField(trimmedParameter); else field = execFrom.getClass().getDeclaredField(trimmedParameter); } catch (java.lang.NoSuchFieldException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1124/buggy-version/src.com.zero1.realjavascript.RJSCommand.java", "BodyUseAPI": ["java.lang.Object.getDeclaredField(java.lang.String)", "java.lang.Object.getClass()", "java.lang.Class<? extends java.lang.Object>.getDeclaredField(java.lang.String)"], "Fixed commit": "2e6d67077e8b10f7521f6657aa8766b6edd6196d", "Url": "https://api.github.com/repos/sanjulr/RealJavaScript", "Date": "2017-02-11T11:28:39Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { try { org.apache.velocity.app.Velocity.init(); } catch (java.lang.Exception e) { throw new org.apache.velocity.exception.VelocityException(e); } org.apache.velocity.VelocityContext context = new org.apache.velocity.VelocityContext(); populateContext(context); boolean evaluate = org.apache.velocity.app.Velocity.evaluate(context, writer, \"velocity class rendering\", reader); if (evaluate == false) { throw new java.lang.Exception(\"Evaluation of the template failed.\"); } } finally { java.lang.Thread.currentThread().setContextClassLoader(oldClassloader); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2802/buggy-version/org.mule.tooling.devkit.src.org.mule.tooling.devkit.template.replacer.VelocityReplacer.java", "BodyUseAPI": ["org.mule.tooling.devkit.template.replacer.VelocityReplacer.populateContext(org.apache.velocity.VelocityContext)", "org.apache.velocity.app.Velocity.init()", "org.apache.velocity.app.Velocity.evaluate(org.apache.velocity.VelocityContext,java.io.Writer,java.lang.String,java.io.Reader)"], "Fixed commit": "529f3b4c36b541304fea7d56f97f30eb3ce140b9", "Url": "https://api.github.com/repos/mulesoft/mule-tooling-incubator", "Date": "2015-10-06T19:09:23Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.easybusiness.attendancepersistence.userdeviceeffort.UserDeviceEffortDao.LOGGER.info((\"size is \" + (userDeviceEffortRepository.findByUserAndEffortDateAndTask(userDeviceEffort.getUser(), userDeviceEffort.getEffortDate(), userDeviceEffort.getTask()).size()))); if ((userDeviceEffortRepository.findByUserAndEffortDateAndTask(userDeviceEffort.getUser(), userDeviceEffort.getEffortDate(), userDeviceEffort.getTask()).size()) > 0) { userDeviceEffort.setId(userDeviceEffortRepository.findByUserAndEffortDateAndTask(userDeviceEffort.getUser(), userDeviceEffort.getEffortDate(), userDeviceEffort.getTask()).get(0).getId()); } } catch (java.lang.Exception e) { com.easybusiness.attendancepersistence.userdeviceeffort.UserDeviceEffortDao.LOGGER.error(\"no effort already present {}\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3094/buggy-version/src.main.java.com.easybusiness.attendancepersistence.userdeviceeffort.UserDeviceEffortDao.java", "BodyUseAPI": ["com.easybusiness.attendancepersistence.entity.UserDeviceEffort.getTask()", "com.easybusiness.attendancepersistence.userdeviceeffort.UserDeviceEffortRepository.findByUserAndEffortDateAndTask(userDeviceEffort.getUser(),userDeviceEffort.getEffortDate(),userDeviceEffort.getTask())", "com.easybusiness.attendancepersistence.entity.UserDeviceEffort.getEffortDate()", "userDeviceEffortRepository.findByUserAndEffortDateAndTask(userDeviceEffort.getUser(), userDeviceEffort.getEffortDate(), userDeviceEffort.getTask()).get(0).getId()", "com.easybusiness.attendancepersistence.entity.UserDeviceEffort.getUser()", "com.easybusiness.attendancepersistence.userdeviceeffort.UserDeviceEffortRepository.findByUserAndEffortDateAndTask(userDeviceEffort.getUser(),userDeviceEffort.getEffortDate(),userDeviceEffort.getTask())", "com.easybusiness.attendancepersistence.entity.UserDeviceEffort.getUser()", "userDeviceEffortRepository.findByUserAndEffortDateAndTask(userDeviceEffort.getUser(), userDeviceEffort.getEffortDate(), userDeviceEffort.getTask()).size()", "userDeviceEffortRepository.findByUserAndEffortDateAndTask(userDeviceEffort.getUser(), userDeviceEffort.getEffortDate(), userDeviceEffort.getTask()).get(int)", "userDeviceEffortRepository.findByUserAndEffortDateAndTask(userDeviceEffort.getUser(), userDeviceEffort.getEffortDate(), userDeviceEffort.getTask()).size()", "com.easybusiness.attendancepersistence.userdeviceeffort.UserDeviceEffortRepository.findByUserAndEffortDateAndTask(userDeviceEffort.getUser(),userDeviceEffort.getEffortDate(),userDeviceEffort.getTask())", "com.easybusiness.attendancepersistence.entity.UserDeviceEffort.getUser()", "com.easybusiness.attendancepersistence.entity.UserDeviceEffort.setId(userDeviceEffortRepository.findByUserAndEffortDateAndTask(userDeviceEffort.getUser(), userDeviceEffort.getEffortDate(), userDeviceEffort.getTask()).get(0).getId())", "com.easybusiness.attendancepersistence.entity.UserDeviceEffort.getEffortDate()", "org.slf4j.Logger.info((\"size is \" + (userDeviceEffortRepository.findByUserAndEffortDateAndTask(userDeviceEffort.getUser(), userDeviceEffort.getEffortDate(), userDeviceEffort.getTask()).size())))", "com.easybusiness.attendancepersistence.entity.UserDeviceEffort.getTask()", "com.easybusiness.attendancepersistence.entity.UserDeviceEffort.getTask()", "com.easybusiness.attendancepersistence.entity.UserDeviceEffort.getEffortDate()"], "Fixed commit": "8b04cad6ec7cdd26c0336d900329311abf846855", "Url": "https://api.github.com/repos/singhmanishkumar3007/AttendanceManagementPersistenceApplication", "Date": "2017-10-22T17:03:12Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { holder.textView_Date.setText(format.format(penaltyRecord.created.value)); } catch (java.lang.NullPointerException e) { android.util.Log.d(\"SpeedingRecordsAdapter\", e.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5853/buggy-version/app.src.main.java.ch.ffhs.students.speedbump.userinterface.mainscreen.fragments.SpeedingRecordsAdapter.java", "BodyUseAPI": ["java.text.SimpleDateFormat.format(penaltyRecord.created.value)", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "c56e15cf028d56cd5f32319d7d5d0f279e70bfa6", "Url": "https://api.github.com/repos/vinzent/ffhs-esa", "Date": "2017-06-04T20:56:51Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { org.terasology.logic.inventory.InventoryUtils.moveItem(request.getInstigator(), request.getFromInventory(), request.getFromSlot(), request.getToInventory(), request.getToSlot()); } finally { entity.send(new org.terasology.logic.inventory.events.InventoryChangeAcknowledgedRequest(request.getChangeId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3483/buggy-version/engine.src.main.java.org.terasology.logic.inventory.InventoryAuthoritySystem.java", "BodyUseAPI": ["org.terasology.logic.inventory.events.MoveItemRequest.getToSlot()", "org.terasology.logic.inventory.events.MoveItemRequest.getFromSlot()", "org.terasology.logic.inventory.InventoryUtils.moveItem(request.getInstigator(),request.getFromInventory(),request.getFromSlot(),request.getToInventory(),request.getToSlot())", "org.terasology.logic.inventory.events.MoveItemRequest.getInstigator()", "org.terasology.logic.inventory.events.MoveItemRequest.getToInventory()", "org.terasology.logic.inventory.events.MoveItemRequest.getFromInventory()"], "Fixed commit": "9b3670edff9b29d38cd2816480e0a983907419fa", "Url": "https://api.github.com/repos/MarcinSc/Terasology", "Date": "2014-04-22T23:44:48Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { readFileData(br); } catch (java.io.IOException e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7061/buggy-version/src.main.java.org.jboss.pressgang.ccms.contentspec.processor.ContentSpecParser.java", "BodyUseAPI": ["org.jboss.pressgang.ccms.contentspec.processor.ContentSpecParser.readFileData(java.io.BufferedReader)"], "Fixed commit": "c880d00a0a0e4c0a6a4c194ae97cae6dfb383c1e", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSContentSpecProcessor", "Date": "2013-02-08T00:54:26Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { nearBySchools = googlePlacesWebclient.nearBySearch(keyword, location, radius); } catch (java.lang.Exception e) { e.printStackTrace(); return \"error\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2990/buggy-version/src.main.java.com.schoollocator.controller.SchoolLocatorController.java", "BodyUseAPI": ["com.schoollocator.webclient.GooglePlacesWebclient.nearBySearch(java.lang.String,java.lang.String,int)"], "Fixed commit": "8dd53376fcc5ff936764bc5daaf8f68c751da4e6", "Url": "https://api.github.com/repos/arunponnaiah/schoollocator", "Date": "2013-10-27T06:12:30Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { location = googleGeocodeWebclient.getPlaceLocation(zipCode); } catch (java.lang.Exception e) { e.printStackTrace(); return \"error\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2990/buggy-version/src.main.java.com.schoollocator.controller.SchoolLocatorController.java", "BodyUseAPI": ["com.schoollocator.webclient.GoogleGeocodeWebclient.getPlaceLocation(int)"], "Fixed commit": "8dd53376fcc5ff936764bc5daaf8f68c751da4e6", "Url": "https://api.github.com/repos/arunponnaiah/schoollocator", "Date": "2013-10-27T06:12:30Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { propertyValue = configPropertyConverter.convertFromString(propertyValue.toString()); } catch (java.lang.RuntimeException ex) { throw new com.ehxnv.util.config.ConfigurationException(java.lang.String.format(\"Failed to convert \\\"%s\\\" into %s type\", propertyValue.toString(), configProperty.getType().getClazz())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2830/buggy-version/src.main.java.com.ehxnv.util.config.Configuration.java", "BodyUseAPI": ["com.ehxnv.util.config.converter.ConfigPropertyConverter.convertFromString(java.lang.String)", "java.lang.Object.toString()"], "Fixed commit": "f6cdc0c6fd8b355ef5a15506fb3825f386876091", "Url": "https://api.github.com/repos/vox889/pojo-config", "Date": "2012-07-09T14:08:11Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { setEncoding(\"ISO-8859-1\"); } catch (java.lang.Exception ex) { java.lang.System.err.println(ex.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/223/buggy-version/src.dreamhackbotpro.IrcHandler.java", "BodyUseAPI": ["dreamhackbotpro.IrcHandler.setEncoding(java.lang.String)"], "Fixed commit": "718858bbd505d69a963f908c8c75fc4083947a34", "Url": "https://api.github.com/repos/RAMPKORV/Benis", "Date": "2011-07-22T17:18:26Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String recoded = new java.lang.String(message.getBytes(\"ISO-8859-1\")); if ((recoded.length()) != (message.length())) { message = recoded; } } catch (java.lang.Exception ex) { java.lang.System.err.println(ex.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/223/buggy-version/src.dreamhackbotpro.IrcHandler.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.length()", "java.lang.String.getBytes(java.lang.String)"], "Fixed commit": "718858bbd505d69a963f908c8c75fc4083947a34", "Url": "https://api.github.com/repos/RAMPKORV/Benis", "Date": "2011-07-22T17:18:26Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String cubeName = queryAdapter.getCubeName(); org.olap4j.metadata.Schema schema = connection.getOlapSchema(); cube = schema.getCubes().get(cubeName); if ((cube == null) && (cubeName != null)) { org.slf4j.Logger logger = org.slf4j.LoggerFactory.getLogger(getClass()); if (logger.isWarnEnabled()) { logger.warn((\"Cube with the specified name cannot be found : \" + cubeName)); } if (logger.isDebugEnabled()) { logger.debug((\"List of cubes in schema : \" + (schema.getName()))); for (org.olap4j.metadata.Cube c : schema.getCubes()) { logger.debug((((c.getCaption()) + \" - \") + (c.getUniqueName()))); } } } } catch (org.olap4j.OlapException e) { throw new com.eyeq.pivot4j.PivotException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1263/buggy-version/src.main.java.com.eyeq.pivot4j.impl.PivotModelImpl.java", "BodyUseAPI": ["schema.getCubes().get(java.lang.String)", "org.olap4j.OlapConnection.getOlapSchema()", "org.slf4j.Logger.isDebugEnabled()", "org.olap4j.metadata.Schema.getCubes()", "org.slf4j.Logger.debug((((c.getCaption()) + \" - \") + (c.getUniqueName())))", "org.slf4j.Logger.debug((\"List of cubes in schema : \" + (schema.getName())))", "org.slf4j.LoggerFactory.getLogger(java.lang.Class<? extends com.eyeq.pivot4j.impl.PivotModelImpl>)", "org.olap4j.metadata.Cube.getUniqueName()", "com.eyeq.pivot4j.query.QueryAdapter.getCubeName()", "org.olap4j.metadata.Schema.getName()", "org.olap4j.metadata.Cube.getCaption()", "com.eyeq.pivot4j.impl.PivotModelImpl.getClass()", "org.olap4j.metadata.Schema.getCubes()", "org.slf4j.Logger.warn(java.lang.String)", "org.slf4j.Logger.isWarnEnabled()"], "Fixed commit": "ffbcd2647c0bbc4392d34cd6f7649a7db481f116", "Url": "https://api.github.com/repos/mysticfall/pivot4j", "Date": "2013-02-22T11:01:37Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return consumers.get(getNextConsumerIndex()).onMessage(message); } catch (java.lang.IndexOutOfBoundsException ignored) { return Ack.HALT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3126/buggy-version/src.main.java.com.orctom.rmq.Queue.java", "BodyUseAPI": ["java.util.List<com.orctom.rmq.RMQConsumer>.get(int)", "consumers.get(getNextConsumerIndex()).onMessage(com.orctom.rmq.Message)", "com.orctom.rmq.Queue.getNextConsumerIndex()"], "Fixed commit": "b3d38f8a363a5bd4af90c5f257506243ccea7649", "Url": "https://api.github.com/repos/orctom/rmq", "Date": "2017-01-05T11:58:22Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (channel.finishConnect()) { channel.register(this.selector, java.nio.channels.SelectionKey.OP_WRITE); } } catch (java.io.IOException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6819/buggy-version/MyPaxos.src.main.java.com.github.luohaha.paxos.utils.NonBlockClientImpl.java", "BodyUseAPI": ["java.nio.channels.SocketChannel.register(java.nio.channels.Selector,int)", "java.nio.channels.SocketChannel.finishConnect()"], "Fixed commit": "514f7f71cc5cec92bdfa90fab848d47acad5b1ed", "Url": "https://api.github.com/repos/luohaha/MyPaxos", "Date": "2017-04-29T13:57:12Z"},
{"Line": "=>1419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.compiere.util.Trx.run(r); } catch (java.lang.Exception e) { org.adempiere.webui.window.FDialog.error(m_WindowNo, parameterPanel, \"Error\", e.getLocalizedMessage()); statusBar.setStatusLine((\"Error: \" + (e.getLocalizedMessage()))); e.printStackTrace(); return; } finally { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6924/buggy-version/zkwebui.WEB-INF.src.org.spin.form.WLoadOrder.java", "BodyUseAPI": ["org.compiere.util.Trx.run(org.compiere.util.TrxRunnable)"], "Fixed commit": "2ae67439e4089647c95cbca23ebb775cca135f29", "Url": "https://api.github.com/repos/erpcya/FTA", "Date": "2015-02-06T11:11:58Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.editorconfig.netbeans.model.EditorConfigProperty property = parseProperty(line); addProperty(section, property); } catch (org.editorconfig.netbeans.parser.InvalidPropertyException ex) { org.editorconfig.netbeans.parser.EditorConfigParser.LOG.log(java.util.logging.Level.SEVERE, ex.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8953/buggy-version/src.main.java.org.editorconfig.netbeans.parser.EditorConfigParser.java", "BodyUseAPI": ["org.editorconfig.netbeans.parser.EditorConfigParser.addProperty(java.lang.String,org.editorconfig.netbeans.model.EditorConfigProperty)", "org.editorconfig.netbeans.parser.EditorConfigParser.parseProperty(java.lang.String)"], "Fixed commit": "e1843b999b190b4b8e1a309a6476d0094481be26", "Url": "https://api.github.com/repos/we-love-coding/editorconfig-netbeans", "Date": "2014-10-06T14:15:32Z"},
{"Line": "=>1981", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { outputMixer.close(); } catch (java.lang.IllegalStateException e) { log.error(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1009/buggy-version/src.com.lfv.lanzius.application.Controller.java", "BodyUseAPI": ["javax.sound.sampled.Mixer.close()"], "Fixed commit": "381f0e0c57e248f01fc6e5db5c7ec01ebfb2fb47", "Url": "https://api.github.com/repos/lfv-mssm/yada", "Date": "2015-08-18T14:17:46Z"},
{"Line": "=>1986", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { inputMixer.close(); } catch (java.lang.IllegalStateException e) { log.error(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1009/buggy-version/src.com.lfv.lanzius.application.Controller.java", "BodyUseAPI": ["javax.sound.sampled.Mixer.close()"], "Fixed commit": "381f0e0c57e248f01fc6e5db5c7ec01ebfb2fb47", "Url": "https://api.github.com/repos/lfv-mssm/yada", "Date": "2015-08-18T14:17:46Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.akamai.netstorage.cli.CMS.execute(action, user, key, netstorageURI, uploadfile, outputfile, targetFilename, dstFilename, indexZip, connectTimeout, readTimeout); } catch (com.akamai.netstorage.NetStorageException e) { java.lang.System.out.println(e.getMessage()); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5338/buggy-version/src.com.akamai.netstorage.cli.CMS.java", "BodyUseAPI": ["com.akamai.netstorage.cli.CMS.execute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,int,int)"], "Fixed commit": "b497fe52b59f49ad5cdee3a5de139b66cab092e9", "Url": "https://api.github.com/repos/wyvern8/NetStorageKit-Java", "Date": "2017-03-15T21:45:08Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { output.createNewFile(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4654/buggy-version/dom.src.main.java.org.estatio.dscm.services.SyncService.java", "BodyUseAPI": ["java.io.File.createNewFile()"], "Fixed commit": "f6d203c52ac040ec2e807b9560a625278a298127", "Url": "https://api.github.com/repos/jcvanderwal/dscm", "Date": "2014-07-22T16:11:54Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { active.callback.succeeded(); } catch (java.lang.Throwable t) { org.eclipse.jetty.websocket.common.io.WriteBytesProvider.LOG.warn(\"Callback failure\", t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/657/buggy-version/jetty-websocket.websocket-common.src.main.java.org.eclipse.jetty.websocket.common.io.WriteBytesProvider.java", "BodyUseAPI": ["org.eclipse.jetty.util.Callback.succeeded()"], "Fixed commit": "0ef9b23724c8add8e7250b222cbe1306e66a8b75", "Url": "https://api.github.com/repos/eclipse/jetty.project", "Date": "2012-12-19T17:05:25Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { net.hirschauer.yaas.lighthouse.LightHouseMidi.getInstance().setDevice(name); } catch (javax.sound.midi.MidiUnavailableException e) { logger.error((\"Could not set midi device \" + name), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3294/buggy-version/src.main.java.net.hirschauer.yaas.lighthouse.visual.MidiLogController.java", "BodyUseAPI": ["net.hirschauer.yaas.lighthouse.LightHouseMidi.getInstance()", "net.hirschauer.yaas.lighthouse.LightHouseMidi.getInstance().setDevice(java.lang.String)"], "Fixed commit": "0011f0e3197f31daad7f25c891462e7b2e93ef47", "Url": "https://api.github.com/repos/shouldmakemusic/lighthouse", "Date": "2015-03-29T00:09:04Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.jboss.nio2.server.async.Nio2AsyncClientManager manager = new org.jboss.nio2.server.async.Nio2AsyncClientManager(channel); manager.setSessionId(org.jboss.nio2.server.SessionGenerator.generateId()); pool.execute(manager); org.jboss.nio2.server.async.Nio2AsyncServer.logger.info(\"Waiting for new connection...\"); listener.accept(attachment, this); } catch (java.lang.Exception e) { org.jboss.nio2.server.async.Nio2AsyncServer.logger.log(java.util.logging.Level.SEVERE, e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4403/buggy-version/src.main.java.org.jboss.nio2.server.async.Nio2AsyncServer.java", "BodyUseAPI": ["org.jboss.nio2.server.async.Nio2AsyncClientManager.setSessionId(org.jboss.nio2.server.SessionGenerator.generateId())", "java.util.logging.Logger.info(java.lang.String)", "java.util.concurrent.ExecutorService.execute(org.jboss.nio2.server.async.Nio2AsyncClientManager)", "java.nio.channels.AsynchronousServerSocketChannel.accept(java.lang.Void,org.jboss.nio2.server.async.Nio2AsyncServer.1)", "org.jboss.nio2.server.SessionGenerator.generateId()"], "Fixed commit": "dfde2778a6a9032007df93f5d7c7a81593d00dba", "Url": "https://api.github.com/repos/benothman/nio2-test", "Date": "2011-11-03T12:33:55Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { clip.open(ais); } catch (java.lang.IllegalArgumentException iae) { clip = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1452/buggy-version/VirtualCommando.src.main.java.me.martin.radev.game.virtualcommando.sound.SoundEffect.java", "BodyUseAPI": ["javax.sound.sampled.Clip.open(javax.sound.sampled.AudioInputStream)"], "Fixed commit": "0f8b630d85a68e79ae9d7f29ad10b3ddb46d7683", "Url": "https://api.github.com/repos/martinradev/2dShooter", "Date": "2014-05-02T13:07:34Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { result = launcher.sendCommand(\"cisco_sendConfigCommand.groovy\", cmdParams); } catch (java.lang.RuntimeException tmc) { net.itransformers.expect4groovy.Expect4GroovyScriptLauncher.logger.trace((\"TimeoutMatchClosure\" + (tmc.getMessage().toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5707/buggy-version/src.main.java.net.itransformers.expect4groovy.Expect4GroovyScriptLauncher.java", "BodyUseAPI": ["net.itransformers.expect4groovy.Expect4GroovyScriptLauncher.sendCommand(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)"], "Fixed commit": "9e0fe4cca1a65783fa7790f4c81fdec9aed80de7", "Url": "https://api.github.com/repos/iTransformers/expect4groovy", "Date": "2016-07-31T13:46:58Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.util.List<java.lang.Integer> hiddenNeuronList = sidebarModel.getHiddenNeurons(); java.lang.Integer neuronCountForSelectedHiddenLayer = hiddenNeuronList.get((selectedItem - 1)); sidebar.topolgyPanel.hiddenNeuronSpinner.setValue(neuronCountForSelectedHiddenLayer); } catch (java.lang.IndexOutOfBoundsException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4702/buggy-version/src.main.java.de.unikassel.ann.controller.ActionController.java", "BodyUseAPI": ["de.unikassel.ann.model.SidebarModel.getHiddenNeurons()", "java.util.List<java.lang.Integer>.get(int)", "sidebar.topolgyPanel.hiddenNeuronSpinner.setValue(java.lang.Integer)"], "Fixed commit": "8503a8ffa6aa64fda4389560f67185c256dcfe55", "Url": "https://api.github.com/repos/timaschew/jANN", "Date": "2011-09-21T14:43:20Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (!(mBluetoothAdapter.isEnabled())) { android.content.Intent enableBtIntent = new android.content.Intent(android.bluetooth.BluetoothAdapter.ACTION_REQUEST_ENABLE); startActivityForResult(enableBtIntent, edu.kettering.blackbox.MainActivity.REQUEST_ENABLE_BT); } } catch (java.lang.Exception e) { textView.setText(e.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3624/buggy-version/src.edu.kettering.blackbox.MainActivity.java", "BodyUseAPI": ["android.bluetooth.BluetoothAdapter.isEnabled()", "edu.kettering.blackbox.MainActivity.startActivityForResult(android.content.Intent,int)"], "Fixed commit": "a80cd98f44dcee7d3e06e57c5f8fa54f274e0936", "Url": "https://api.github.com/repos/kbdavid15/BlackBox", "Date": "2013-04-25T04:20:17Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { logger.info(\"Se va a exportar...\"); gitHubCreateFileExporter.export(getGitHubParameter()); logger.info(\"Exportado...\"); } catch (java.lang.Exception e) { logger.info((((\"ERROR AL CREAR EN GITHUB: \" + (e.getMessage())) + \" -- \") + (e.getCause()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6834/buggy-version/src.main.java.org.geowe.client.local.layermanager.tool.export.ExportDataTool.java", "BodyUseAPI": ["org.geowe.client.local.layermanager.tool.export.exporter.GitHubCreateFileExporter.export(org.geowe.client.local.github.request.GitHubParameter)", "org.geowe.client.local.layermanager.tool.export.ExportDataTool.3.getGitHubParameter()", "org.slf4j.Logger.info(java.lang.String)", "org.slf4j.Logger.info(java.lang.String)"], "Fixed commit": "d40fe57a79545167389e4ac9d166d4ba947f4cd6", "Url": "https://api.github.com/repos/jmmluna/geowe-core", "Date": "2016-12-15T08:56:34Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Class.forName(org.deidentifier.arx.gui.Main.JDK16_FRAME); } catch (java.lang.Exception e) { org.eclipse.swt.awt.SWT_AWT.embeddedFrameClass = org.deidentifier.arx.gui.Main.JDK17_FRAME; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5209/buggy-version/src.gui.org.deidentifier.arx.gui.Main.java", "BodyUseAPI": ["java.lang.Class.forName(java.lang.String)"], "Fixed commit": "2b48e10c2bb74bce2ebdef85acd4aaabcad5b4ca", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2014-02-21T17:30:19Z"},
{"Line": "=>510", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { final org.bonitasoft.engine.bpm.process.ProcessInstance processInstance = processApi.getProcessInstance(processInstanceId); rootProcessInstanceId = processInstance.getRootProcessInstanceId(); } catch (final org.bonitasoft.engine.bpm.process.ProcessInstanceNotFoundException e) { final org.bonitasoft.engine.bpm.process.ArchivedProcessInstance archivedProcessInstance = getLatestArchivedProcessInstance(processApi, processInstanceId); rootProcessInstanceId = archivedProcessInstance.getRootProcessInstanceId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4480/buggy-version/forms.forms-server.src.main.java.org.bonitasoft.forms.server.api.impl.FormWorkflowAPIImpl.java", "BodyUseAPI": ["org.bonitasoft.engine.api.ProcessAPI.getProcessInstance(long)", "org.bonitasoft.engine.bpm.process.ProcessInstance.getRootProcessInstanceId()"], "Fixed commit": "3d9b0910969dadfeb9f58c0914c983edada61242", "Url": "https://api.github.com/repos/bonitasoft/bonita-web", "Date": "2015-01-15T09:03:19Z"},
{"Line": "=>1632", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.controlsfx.dialog.Dialog aboutDialog = new org.controlsfx.dialog.Dialog(this.app.getStage(), \"About\"); javafx.scene.Node viewNode = javafx.fxml.FXMLLoader.load(getClass().getResource(\"/fxml/AboutAppView.fxml\")); aboutDialog.setIconifiable(false); aboutDialog.setResizable(false); aboutDialog.setContent(viewNode); aboutDialog.show(); } catch (java.io.IOException ex) { java.util.logging.Logger.getLogger(com.github.daytron.flipit.map.creator.ViewController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); this.showExceptionDialog(ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4589/buggy-version/src.main.java.com.github.daytron.flipit.map.creator.ViewController.java", "BodyUseAPI": ["com.github.daytron.flipit.map.creator.MainApp.getStage()", "org.controlsfx.dialog.Dialog.setIconifiable(boolean)", "com.github.daytron.flipit.map.creator.ViewController.getClass()", "org.controlsfx.dialog.Dialog.setContent(javafx.scene.Node)", "org.controlsfx.dialog.Dialog.show()", "java.lang.Class<? extends com.github.daytron.flipit.map.creator.ViewController>.getResource(java.lang.String)", "org.controlsfx.dialog.Dialog.setResizable(boolean)", "javafx.fxml.FXMLLoader.load(java.net.URL)"], "Fixed commit": "f567fb6b2c3f42dc15a3609db6c8ba1c0b53c229", "Url": "https://api.github.com/repos/Daytron/Flipit-Map-Creator", "Date": "2014-11-21T14:10:04Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (int i = 0; i < (c.length); i++) { javax.servlet.http.Cookie coo = c[i]; java.lang.String cooVal = \"\"; if (coo.getName().equals(\"L2G_LSID\")) cooVal = c[i].getValue(); if (cooVal.equals(((video.getLectureseriesId()) + \"\"))) { video.setAccessPermitted(1); } } } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7918/buggy-version/portlets.lecture2go-portlet.docroot.WEB-INF.src.de.uhh.l2g.plugins.guest.OpenAccessVideos.java", "BodyUseAPI": ["coo.getName().equals(java.lang.String)", "javax.servlet.http.Cookie.getName()", "java.lang.String.equals(((video.getLectureseriesId()) + \"\"))", "de.uhh.l2g.plugins.model.Video.getLectureseriesId()", "c[i].getValue()", "de.uhh.l2g.plugins.model.Video.setAccessPermitted(int)"], "Fixed commit": "c04b8f7c44db338ec67fded06d48b8c941863b4e", "Url": "https://api.github.com/repos/lecture2go/plugins-sdk-6.2", "Date": "2017-06-08T08:17:49Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (java.net.HttpCookie cookie : java.net.HttpCookie.parse(cookieItem)) { if (cookie.getName().equals(aName)) { return java.net.URLDecoder.decode(cookie.getValue(), \"UTF-8\"); } } } catch (java.lang.Exception e) { log.warn((\"Could not parse cookie: \" + cookieItem), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7752/buggy-version/server.pony.web.src.main.java.net.dorokhov.pony.web.server.security.UserTokenReaderImpl.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.net.HttpCookie.getValue()", "java.net.HttpCookie.getName()", "java.net.URLDecoder.decode(java.lang.String,java.lang.String)", "java.net.HttpCookie.parse(java.lang.String)"], "Fixed commit": "154656decc94a0dc82a4d0a19446d3113b8fbabb", "Url": "https://api.github.com/repos/DenisDorokhov/pony", "Date": "2015-04-07T11:30:06Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { invite.getInvited().fetch(); invite.getInvited().fetchIfNeeded(); } catch (com.parse.ParseException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1218/buggy-version/VoiceConf.app.src.main.java.com.voiceconf.voiceconf.ui.conference.FriendHorizontalViewHolder.java", "BodyUseAPI": ["invite.getInvited().fetchIfNeeded()", "invite.getInvited().fetch()", "com.voiceconf.voiceconf.storage.models.Invite.getInvited()", "com.voiceconf.voiceconf.storage.models.Invite.getInvited()"], "Fixed commit": "d51ac7fc82bfe1d627a13c732e68e432e258071b", "Url": "https://api.github.com/repos/kadartamascsaba/deep-learning-ubbse2015", "Date": "2016-01-02T11:27:44Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.announcerTask.cancel(); } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7803/buggy-version/necessities.src.main.java.com.crossge.necessities.Announcer.java", "BodyUseAPI": ["org.bukkit.scheduler.BukkitRunnable.cancel()"], "Fixed commit": "e9e48bae323aad9f694d5b335028abdf72f201c3", "Url": "https://api.github.com/repos/pupnewfster/Lavasurvival", "Date": "2016-11-29T01:49:18Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { size = terminal.getTerminalSize(); } catch (java.io.IOException e) { size = new com.googlecode.lanterna.TerminalSize(51, 19); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2442/buggy-version/src.main.java.org.squiddev.studio.interact.laterna.LanternaTerminal.java", "BodyUseAPI": ["org.squiddev.studio.interact.laterna.Terminal.getTerminalSize()"], "Fixed commit": "f235509f1e68720d78728f054429e0c5426fc15d", "Url": "https://api.github.com/repos/SquidDev-CC/Studio", "Date": "2016-04-28T10:28:24Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { return new dan200.computercraft.core.filesystem.JarMount(MountHelpers.mainJar, subPath); } catch (java.io.IOException e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2442/buggy-version/src.main.java.org.squiddev.studio.computer.ComputerEnvironment.java", "BodyUseAPI": [], "Fixed commit": "f235509f1e68720d78728f054429e0c5426fc15d", "Url": "https://api.github.com/repos/SquidDev-CC/Studio", "Date": "2016-04-28T10:28:24Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { folder = java.net.URLDecoder.decode(folder, \"UTF-8\"); } catch (java.io.UnsupportedEncodingException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5582/buggy-version/TheGameRemastered.src.main.java.persistence.WriteInXML.java", "BodyUseAPI": ["java.net.URLDecoder.decode(java.lang.String,java.lang.String)"], "Fixed commit": "03fa1a442b08b36b6ac1bf745ff56e1f23b1fe4a", "Url": "https://api.github.com/repos/rvdav1/TGR", "Date": "2017-05-20T09:09:52Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (item.isLocked()) intent.putExtra(\"password_verified\", \"verified\"); else intent.putExtra(\"password_verified\", \"no_need\"); } catch (java.lang.NullPointerException e) { intent.putExtra(\"password_verified\", \"no_need\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7254/buggy-version/src.org.anurag.file.quest.MasterPassword.java", "BodyUseAPI": ["android.content.Intent.putExtra(java.lang.String,java.lang.String)", "android.content.Intent.putExtra(java.lang.String,java.lang.String)", "org.anurag.file.quest.Item.isLocked()"], "Fixed commit": "97c78063e31cd9281c7f599c3810efb8872edf68", "Url": "https://api.github.com/repos/Drawnzer/File_Quest", "Date": "2014-09-06T18:25:44Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { timer.cancel(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2421/buggy-version/src.simpleserver.Authenticator.java", "BodyUseAPI": ["java.util.Timer.cancel()"], "Fixed commit": "bdc302c03fe631b9c9528609c60f6f5ac9a5b00f", "Url": "https://api.github.com/repos/SimpleServer/SimpleServer", "Date": "2011-07-02T13:26:42Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(10); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8710/buggy-version/src.main.java.com.order.www.service.OrderService.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "d3642f5856b29387098ca19a57f056438a124319", "Url": "https://api.github.com/repos/kongtrio/seller_order", "Date": "2017-09-12T08:49:04Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { table.addConsumable(name, price, quantity); } catch (java.lang.Exception e) { throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4379/buggy-version/src.table.organizer.ConsumableActivity.java", "BodyUseAPI": ["table.organizer.model.TableManager.addConsumable(java.lang.String,int,int)"], "Fixed commit": "4a15cea43ac0b44e90450d5123842184b5110274", "Url": "https://api.github.com/repos/piva/TableOrganizer", "Date": "2011-12-08T19:14:01Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { consumableAdapter.add(name, ((int) (price * 100)), quantity); } catch (java.lang.Exception e) { android.widget.Toast.makeText(getApplicationContext(), R.string.consumableAddError, Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4379/buggy-version/src.table.organizer.ConsumableActivity.java", "BodyUseAPI": ["table.organizer.ConsumableActivity.ConsumableAdapter.add(java.lang.String,double,int)"], "Fixed commit": "4a15cea43ac0b44e90450d5123842184b5110274", "Url": "https://api.github.com/repos/piva/TableOrganizer", "Date": "2011-12-08T19:14:01Z"},
{"Line": "=>397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { target = c.getTarget(); } catch (java.lang.ClassCastException cce) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3349/buggy-version/src.com.garbagemule.MobArena.MASpawnThread.java", "BodyUseAPI": ["org.bukkit.entity.Creature.getTarget()"], "Fixed commit": "a277bf2b338388dcefd0ad0eef66eb5c1f5ae9cc", "Url": "https://api.github.com/repos/garbagemule/MobArena", "Date": "2011-07-19T21:10:34Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return new org.cobbzilla.util.http.HttpResponseBean().setStatus(connection.getResponseCode()).setEntity(connection.getInputStream()).setHttpHeaders(connection.getHeaderFields()); } catch (java.io.IOException ioe) { return new org.cobbzilla.util.http.HttpResponseBean().setStatus(connection.getResponseCode()).setEntity(connection.getErrorStream()).setHttpHeaders(connection.getHeaderFields()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/372/buggy-version/src.main.java.org.cobbzilla.util.http.HttpUtil.java", "BodyUseAPI": ["java.net.HttpURLConnection.getInputStream()", "java.net.HttpURLConnection.getResponseCode()", "new org.cobbzilla.util.http.HttpResponseBean().setStatus(connection.getResponseCode()).setEntity(connection.getInputStream()).setHttpHeaders(java.util.Map<java.lang.String, java.util.List<java.lang.String>>)", "org.cobbzilla.util.http.HttpResponseBean.setStatus(int)", "java.net.HttpURLConnection.getHeaderFields()", "new org.cobbzilla.util.http.HttpResponseBean().setStatus(connection.getResponseCode()).setEntity(java.io.InputStream)"], "Fixed commit": "2d2bb73b8cd67e87eb4fcbb996edc706e0bee3ca", "Url": "https://api.github.com/repos/cobbzilla/cobbzilla-utils", "Date": "2017-12-27T14:48:10Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { previousStream = revision.getStorage(null).getContents(); saveStreamAsFile(previousStream, previous); } catch (org.eclipse.core.runtime.CoreException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5006/buggy-version/ic-depress-metric-astcompare.src.org.impressivecode.depress.mr.astcompare.ast.AstController.java", "BodyUseAPI": ["org.eclipse.team.core.history.IFileRevision.getStorage(<nulltype>)", "revision.getStorage(null).getContents()", "org.impressivecode.depress.mr.astcompare.ast.AstController.saveStreamAsFile(java.io.InputStream,java.io.File)"], "Fixed commit": "e33187104d3f32c7ac219420d3c840e6d7868c87", "Url": "https://api.github.com/repos/mkutyba/ic-depress", "Date": "2014-12-30T11:34:59Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { parser.parse(gherkin, convertPathToUri(resource.getPath()), 0); } catch (java.lang.Exception e) { throw new cucumber.runtime.CucumberException(java.lang.String.format(\"Error parsing feature file %s\", resource.getPath()), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3276/buggy-version/core.src.main.java.cucumber.runtime.FeatureBuilder.java", "BodyUseAPI": ["cucumber.runtime.io.Resource.getPath()", "gherkin.parser.Parser.parse(java.lang.String,java.lang.String,int)", "cucumber.runtime.FeatureBuilder.convertPathToUri(resource.getPath())"], "Fixed commit": "03a106a0422297602425b418a12cdd784bff7bd4", "Url": "https://api.github.com/repos/cucumber/cucumber-jvm", "Date": "2013-08-15T20:50:37Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(4000); } catch (java.lang.InterruptedException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1665/buggy-version/src.inspire.ServerModel.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "8de2c0aabf766bd75305e5edf59fac4c930eb3d1", "Url": "https://api.github.com/repos/INSPIRE-Lab-BITS-Pilani/DataDeliveryRobots", "Date": "2016-11-14T13:11:54Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { length = scan.nextDouble(); } catch (java.util.InputMismatchException e) { java.lang.System.err.println(\"Incorrect format of length\"); boatInfo(index, mIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1832/buggy-version/src.View.Console.java", "BodyUseAPI": ["java.util.Scanner.nextDouble()"], "Fixed commit": "68394271bd4ae89fe1b0b843f4bcd863015899a0", "Url": "https://api.github.com/repos/cj222jb/Workshop2_UML", "Date": "2016-10-14T11:39:47Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { switch (moveAction.getDirection()) { case com.fishteam.pacman.json.MoveAction.UP : game.moveGhostTop(); break; case com.fishteam.pacman.json.MoveAction.RIGHT : game.moveGhostRight(); break; case com.fishteam.pacman.json.MoveAction.DOWN : game.moveGhostBot(); break; case com.fishteam.pacman.json.MoveAction.LEFT : game.moveGhostLeft(); break; default : result.setSuccess(false); result.setMessage(\"Unknown command!\"); } } catch (com.fishteam.pacman.models.BlockException e) { result.setSuccess(false); result.setMessage(\"WAY IS BLOCKED!!!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5554/buggy-version/src.main.java.com.fishteam.pacman.controllers.ActionController.java", "BodyUseAPI": ["com.fishteam.pacman.json.ActionResult.setSuccess(boolean)", "com.fishteam.pacman.models.Game.moveGhostLeft()", "com.fishteam.pacman.json.MoveAction.getDirection()", "com.fishteam.pacman.json.ActionResult.setMessage(java.lang.String)", "com.fishteam.pacman.models.Game.moveGhostRight()", "com.fishteam.pacman.models.Game.moveGhostTop()", "com.fishteam.pacman.models.Game.moveGhostBot()"], "Fixed commit": "144c5f06dbfd50dc9f925366549d7d776a14043b", "Url": "https://api.github.com/repos/yarphen/PacMan", "Date": "2016-09-26T22:04:28Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ftDev = ftD2xx.openByIndex(mContext, 0); } catch (java.lang.NullPointerException e) { android.util.Log.e(org.droidplanner.android.communication.connection.UsbFTDIConnection.TAG, e.getMessage(), e); } finally { if ((ftDev) == null) { throw new java.io.IOException(\"No Devices found\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4843/buggy-version/Android.src.org.droidplanner.android.communication.connection.UsbFTDIConnection.java", "BodyUseAPI": ["com.ftdi.j2xx.D2xxManager.openByIndex(org.droidplanner.android.communication.connection.UsbFTDIConnection,int)"], "Fixed commit": "79c25c7f5eebab24c565df1fb9dc09bbe8f61303", "Url": "https://api.github.com/repos/ne0fhyk/droidplanner", "Date": "2014-09-02T12:19:21Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.graphics.Bitmap imageBitmap = decodeFromFirebaseBase64(adapter.getItem(position).url); i.putExtra(\"imageURL\", imageBitmap.toString()); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4621/buggy-version/app.src.main.java.com.example.zen.healthyrecord.fragments.FoodFragment.java", "BodyUseAPI": ["android.content.Intent.putExtra(java.lang.String,imageBitmap.toString())", "com.example.zen.healthyrecord.fragments.FoodFragment.2.decodeFromFirebaseBase64(adapter.getItem(position).url)", "com.firebase.ui.database.FirebaseListAdapter<com.example.zen.healthyrecord.model.DietRecord>.getItem(int)", "android.graphics.Bitmap.toString()"], "Fixed commit": "15fa558520afe61916c48a6a515f650fa282501b", "Url": "https://api.github.com/repos/codepath-TeamG/HealthyRecord", "Date": "2017-03-27T07:35:57Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { newImage = com.hiveworkshop.wc3.gui.BLPHandler.get().getTexture((workingDirectory == null ? null : workingDirectory.getPath()), path); } catch (final java.lang.Exception exc) { newImage = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3013/buggy-version/JWC3.src.com.hiveworkshop.wc3.mdl.Material.java", "BodyUseAPI": ["com.hiveworkshop.wc3.gui.BLPHandler.get().getTexture((workingDirectory == null ? null : workingDirectory.getPath()),java.lang.String)", "com.hiveworkshop.wc3.gui.BLPHandler.get()", "java.io.File.getPath()"], "Fixed commit": "c2d50fb68b202e573761c3dfecdc7149b86e248a", "Url": "https://api.github.com/repos/Retera/JWC3", "Date": "2017-04-22T21:16:27Z"},
{"Line": "=>771", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mStatFs.restat(mDropBoxDir.getPath()); } catch (java.lang.IllegalArgumentException e) { throw new java.io.IOException((\"Can't restat: \" + (mDropBoxDir))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3282/buggy-version/services.core.java.com.android.server.DropBoxManagerService.java", "BodyUseAPI": ["java.io.File.getPath()", "android.os.StatFs.restat(java.lang.String)"], "Fixed commit": "5ca366e0f44af1cb86ca713978372357768a6fe5", "Url": "https://api.github.com/repos/nickdoherty81/android_frameworks_base", "Date": "2016-10-16T22:50:45Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { super.modulesVisited(); } catch (java.lang.Exception x) { throw new com.redhat.ceylon.ceylondoc.CeylondException(\"error.languageModuleSourcesMissing\", tool.getSourceDirs().toArray()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2173/buggy-version/src.com.redhat.ceylon.ceylondoc.CeylonDocModuleManager.java", "BodyUseAPI": ["com.redhat.ceylon.model.loader.impl.reflect.model.ReflectionModuleManager.modulesVisited()"], "Fixed commit": "42564dddb053cf36430669d3e70718833cbd5b07", "Url": "https://api.github.com/repos/ceylon/ceylon-compiler", "Date": "2015-10-28T10:32:47Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.xCamera.runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { android.widget.Toast.makeText(xCamera, toastMessage, Toast.LENGTH_SHORT).show(); } }); } catch (java.lang.Exception e) { com.xxboy.log.Logger.log(e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1889/buggy-version/src.com.xxboy.services.XToast.java", "BodyUseAPI": ["com.xxboy.xcamera.XCamera.runOnUiThread(java.lang.Runnable)", "android.widget.Toast.makeText(com.xxboy.xcamera.XCamera,java.lang.String,Toast.LENGTH_SHORT)", "java.lang.Object()", "android.widget.Toast.makeText(xCamera, toastMessage, Toast.LENGTH_SHORT).show()"], "Fixed commit": "9ad0850069d7872bcb69d1e0da2d2782004460ae", "Url": "https://api.github.com/repos/armstrongli/XCamera", "Date": "2014-12-28T06:19:40Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return originStream.toString(getCharacterEncoding()); } catch (java.io.UnsupportedEncodingException e) { throw new java.lang.IllegalStateException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/865/buggy-version/src.main.java.jetbrick.web.servlet.BufferedHttpServletResponse.java", "BodyUseAPI": ["jetbrick.web.servlet.BufferedHttpServletResponse.getCharacterEncoding()", "jetbrick.io.stream.UnsafeByteArrayOutputStream.toString(getCharacterEncoding())"], "Fixed commit": "ef4083e9196b92aff2904d55830e3b6be99bb0b6", "Url": "https://api.github.com/repos/subchen/jetbrick-commons", "Date": "2014-11-25T12:18:21Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return originWriter.toString().getBytes(getCharacterEncoding()); } catch (java.io.UnsupportedEncodingException e) { throw new java.lang.IllegalStateException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/865/buggy-version/src.main.java.jetbrick.web.servlet.BufferedHttpServletResponse.java", "BodyUseAPI": ["jetbrick.io.stream.UnsafeCharArrayWriter.toString()", "jetbrick.web.servlet.BufferedHttpServletResponse.getCharacterEncoding()", "originWriter.toString().getBytes(getCharacterEncoding())"], "Fixed commit": "ef4083e9196b92aff2904d55830e3b6be99bb0b6", "Url": "https://api.github.com/repos/subchen/jetbrick-commons", "Date": "2014-11-25T12:18:21Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return originStream.toString(getCharacterEncoding()).toCharArray(); } catch (java.io.UnsupportedEncodingException e) { throw new java.lang.IllegalStateException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/865/buggy-version/src.main.java.jetbrick.web.servlet.BufferedHttpServletResponse.java", "BodyUseAPI": ["originStream.toString(getCharacterEncoding()).toCharArray()", "jetbrick.io.stream.UnsafeByteArrayOutputStream.toString(getCharacterEncoding())", "jetbrick.web.servlet.BufferedHttpServletResponse.getCharacterEncoding()"], "Fixed commit": "ef4083e9196b92aff2904d55830e3b6be99bb0b6", "Url": "https://api.github.com/repos/subchen/jetbrick-commons", "Date": "2014-11-25T12:18:21Z"},
{"Line": "=>520", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (!(mEnable)) return super.onTouchEvent(event); mHelper.processTouchEvent(event); return true; } catch (java.lang.IllegalArgumentException ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7985/buggy-version/fragmentation_swipeback.src.main.java.me.yokeyword.fragmentation.SwipeBackLayout.java", "BodyUseAPI": ["android.widget.FrameLayout.onTouchEvent(android.view.MotionEvent)", "android.support.v4.widget.ViewDragHelper.processTouchEvent(android.view.MotionEvent)"], "Fixed commit": "4b9fd4650cf1ebba37740b291da34db922f3850c", "Url": "https://api.github.com/repos/LonelyMushroom/Fragmentation", "Date": "2017-09-28T11:19:47Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { p.score(\"JM_Scorer\", scoreStructure(q.getRaw_text(), a.candidate_text, p.text, false)); } catch (opennlp.tools.util.InvalidFormatException e) { e.printStackTrace(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/497/buggy-version/src.main.java.uncc2014watsonsim.research.JM_Scorer.java", "BodyUseAPI": ["uncc2014watsonsim.Passage.score(java.lang.String,double)", "uncc2014watsonsim.research.JM_Scorer.scoreStructure(q.getRaw_text(),a.candidate_text,p.text,boolean)", "uncc2014watsonsim.Question.getRaw_text()"], "Fixed commit": "bfb004fbd42cbdf4dc03c14c07ed33c3d8f72cde", "Url": "https://api.github.com/repos/SeanTater/uncc2014watsonsim", "Date": "2014-04-27T12:17:17Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { previousSslTerm = sslTerminationService.getSslTermination(loadBalancerId, accountId); } catch (org.openstack.atlas.service.domain.exceptions.EntityNotFoundException e) { previousSslTerm = new org.openstack.atlas.service.domain.entities.SslTermination(); previousSslTerm.setEnabled(false); } catch (java.lang.Exception e) { return org.openstack.atlas.api.helpers.ResponseFactory.getErrorResponse(e, null, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3674/buggy-version/api.common-api.src.main.java.org.openstack.atlas.api.resources.SslTerminationResource.java", "BodyUseAPI": ["org.openstack.atlas.api.resources.SslTerminationResource.getSslTermination(java.lang.Integer,java.lang.Integer)"], "Fixed commit": "f7ec1dac3d004c7379c84e231f653621d33ae30a", "Url": "https://api.github.com/repos/lbrackspace/atlas-lb", "Date": "2013-12-10T17:48:29Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { query = new railo.runtime.type.QueryImpl(dc, sqlSelect, (-1), (-1), (-1), \"query\"); } catch (java.lang.Throwable t) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4020/buggy-version/railo-java.railo-core.src.railo.runtime.type.scope.storage.db.Ansi92.java", "BodyUseAPI": [], "Fixed commit": "bd8873667c9bda6c59008408566eea21021afb75", "Url": "https://api.github.com/repos/clitnak/mcrailo", "Date": "2012-10-30T09:25:56Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Integer.parseInt(display); isInteger = true; } catch (java.lang.NumberFormatException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6996/buggy-version/app.src.main.java.com.bluetheta.calculator.BasicCalculator.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "34cb1046dd7b4c94055c29f38e4ee217dc0b9e61", "Url": "https://api.github.com/repos/RougeAssassin/Calculator", "Date": "2015-08-20T18:55:58Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { component = profileSpecificationComponents.get(id); return component; } catch (java.lang.NullPointerException npe) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5795/buggy-version/container.components.components.src.main.java.org.mobicents.slee.container.component.ComponentRepositoryImpl.java", "BodyUseAPI": ["java.util.concurrent.ConcurrentHashMap<javax.slee.profile.ProfileSpecificationID, org.mobicents.slee.container.component.profile.ProfileSpecificationComponent>.get(javax.slee.profile.ProfileSpecificationID)"], "Fixed commit": "e74e910bbd6a5214b40fed6330a4e3aecaafb9a8", "Url": "https://api.github.com/repos/RestComm/jain-slee", "Date": "2016-04-05T12:12:36Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { super.onMessage(new org.bitsofinfo.ehcache.jms.custom.JMSEventMessageCarrier(msg)); } catch (java.lang.Exception e) { if ((e.getMessage().indexOf(\"No cache named\")) != (-1)) { LOG.warn(((\"Error attempting to evaluate inbound \" + \"TextMessage converting payload to BatchJMSEventMessage?: \") + (e.getMessage()))); }else { LOG.error(((\"Error attempting to evaluate inbound \" + \"TextMessage converting payload to BatchJMSEventMessage?: \") + (e.getMessage())), e); } continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2111/buggy-version/src.main.java.org.bitsofinfo.ehcache.jms.custom.BatchingJMSCachePeer.java", "BodyUseAPI": ["net.sf.ehcache.distribution.jms.JMSCachePeer.onMessage(org.bitsofinfo.ehcache.jms.custom.JMSEventMessageCarrier)"], "Fixed commit": "feb3d696fe4e252ba4d4150239abdc1438a30acf", "Url": "https://api.github.com/repos/bitsofinfo/ehcache-jms-wan-replicator", "Date": "2014-05-14T16:49:18Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(500); } catch (java.lang.InterruptedException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/9111/buggy-version/src.network.Connection.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "98620f4b6363d2d9b7dd349defc7befdbabfa02e", "Url": "https://api.github.com/repos/Weirdbob95/Forge", "Date": "2016-04-11T05:44:42Z"},
{"Line": "=>360", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (edu.isi.karma.rep.HNode hn : hNodes2) { java.lang.String paramName = columnLabelMappings.get(hn.getColumnName()); edu.isi.karma.rep.Node valNode = r.getNode(hn.getId()); edu.isi.karma.rep.CellValue cellVal = valNode.getValue(); java.lang.String param = org.apache.commons.httpclient.util.URIUtil.encodeQuery(cellVal.asString()); edu.isi.karma.controller.command.alignment.InvokePredefinedServiceCommand.logger.info(param); urlParams.append(paramName).append(\"=\").append(param).append(\"&\"); } responseString = edu.isi.karma.util.HTTPUtil.executeHTTPGetRequest((((this.serviceUrl) + \"?\") + (urlParams.toString())), \"text/plain\"); } catch (java.lang.Exception e2) { edu.isi.karma.controller.command.alignment.InvokePredefinedServiceCommand.logger.error(\"Failed to invoke service.\", e2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2341/buggy-version/karma-commands.commands-publish-alignment-openrdf.src.main.java.edu.isi.karma.controller.command.alignment.InvokePredefinedServiceCommand.java", "BodyUseAPI": ["java.lang.StringBuffer.toString()", "edu.isi.karma.rep.HNode.getColumnName()", "edu.isi.karma.util.HTTPUtil.executeHTTPGetRequest(java.lang.String,java.lang.String)", "java.lang.StringBuffer.append(java.lang.String)", "java.lang.StringBuffer.append(java.lang.String)", "edu.isi.karma.rep.CellValue.asString()", "edu.isi.karma.rep.HNode.getId()", "org.slf4j.Logger.info(java.lang.String)", "java.lang.StringBuffer.append(java.lang.String)", "edu.isi.karma.rep.Node.getValue()", "java.util.HashMap<java.lang.String, java.lang.String>.get(hn.getColumnName())", "edu.isi.karma.rep.Row.getNode(hn.getId())", "org.apache.commons.httpclient.util.URIUtil.encodeQuery(cellVal.asString())", "java.lang.StringBuffer.append(java.lang.String)"], "Fixed commit": "7920153ccc519ca241d4a496db043db0ddd3de49", "Url": "https://api.github.com/repos/shrikanthn/Web-Karma", "Date": "2014-07-29T03:21:32Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { _transport.send(_transport.getPickler().newPacket(new org.dancres.paxos.impl.faildet.Heartbeat(_metaData)), _transport.getBroadcastAddress()); } catch (java.lang.Throwable aT) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2038/buggy-version/src.main.java.org.dancres.paxos.impl.faildet.HeartbeaterImpl.java", "BodyUseAPI": ["org.dancres.paxos.impl.Transport.send(_transport.getPickler().newPacket(new org.dancres.paxos.impl.faildet.Heartbeat(_metaData)),_transport.getBroadcastAddress())", "org.dancres.paxos.impl.Transport.getPickler()", "_transport.getPickler().newPacket(org.dancres.paxos.impl.faildet.Heartbeat)", "org.dancres.paxos.impl.Transport.getBroadcastAddress()"], "Fixed commit": "e6748c578240f86b0f19c0eab5288f62b7299ba1", "Url": "https://api.github.com/repos/dancres/paxos", "Date": "2013-12-24T17:04:54Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { childTriValue = annoFactory.childOfAnnotationHandler.execute(this, childName); } catch (io.milton.http.exceptions.NotFoundException ex) { io.milton.http.annotated.AnnoCollectionResource.log.warn(\"Failed to lookup child\", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4538/buggy-version/milton-server-ce.src.main.java.io.milton.http.annotated.AnnoCollectionResource.java", "BodyUseAPI": ["annoFactory.childOfAnnotationHandler.execute(io.milton.http.annotated.AnnoCollectionResource,java.lang.String)"], "Fixed commit": "7274162518ee93b282caaae8095c0e9c8b9d33de", "Url": "https://api.github.com/repos/miltonio/milton2", "Date": "2013-07-15T07:22:58Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.bukkit.plugin.RegisteredServiceProvider<net.milkbowl.vault.economy.Economy> economyProvider = getServer().getServicesManager().getRegistration(net.milkbowl.vault.economy.Economy.class); if (economyProvider != null) { econ = economyProvider.getProvider(); } return (econ) != null; } catch (java.lang.Exception e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/410/buggy-version/src.main.java.com.forgenz.forgecore.v1_0.bukkit.ForgePlugin.java", "BodyUseAPI": ["getServer().getServicesManager()", "com.forgenz.forgecore.v1_0.bukkit.ForgePlugin.getServer()", "org.bukkit.plugin.RegisteredServiceProvider<net.milkbowl.vault.economy.Economy>.getProvider()", "getServer().getServicesManager().getRegistration(java.lang.Class)"], "Fixed commit": "2e7d2b94c5dc6b354e4c3de7e2fa7724ffdc90ad", "Url": "https://api.github.com/repos/ShadowDog007/Horses", "Date": "2013-07-04T14:57:00Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { parser.parseReleaseLinks(entry); } catch (com.xitxer.uateam.notification.server.parser.exceptions.PageNotAvailableException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5059/buggy-version/src.com.xitxer.uateam.notification.server.CronRecentReleaseParser.java", "BodyUseAPI": ["com.xitxer.uateam.notification.server.parser.RecentReleasesParser.parseReleaseLinks(com.xitxer.uateam.notification.server.model.ReleaseEntry)"], "Fixed commit": "df807999b01f4ab5385cdf81ef62b52d22446529", "Url": "https://api.github.com/repos/uateam-app-team/uateam-app-server", "Date": "2012-07-08T10:01:15Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { T queueBuffer = _ringBuffer.get(seq); _entryHandler.copy(_tmpBuffer, queueBuffer); } finally { _ringBuffer.publish(seq); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/948/buggy-version/Core.src.main.java.com.adamroughton.concentus.disruptor.MultiProducerEventQueuePublisher.java", "BodyUseAPI": ["com.lmax.disruptor.RingBuffer<T>.get(long)", "com.adamroughton.concentus.disruptor.EventEntryHandler<T>.copy(T,T)"], "Fixed commit": "44dc5426f84bc7d2aebe64f96bd159d395961a1f", "Url": "https://api.github.com/repos/adam-roughton/Concentus", "Date": "2013-05-23T00:40:08Z"},
{"Line": "=>825", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { loading.setIndeterminate(b); if (b) { loading.setVisibility(View.VISIBLE); }else { loading.setVisibility(View.GONE); } } catch (java.lang.Exception e) { android.util.Log.w(\"TextFiction\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3197/buggy-version/src.de.onyxbits.textfiction.GameActivity.java", "BodyUseAPI": ["android.widget.ProgressBar.setVisibility(View.VISIBLE)", "android.widget.ProgressBar.setIndeterminate(boolean)", "android.widget.ProgressBar.setVisibility(View.GONE)"], "Fixed commit": "65cc9305b3e29a8488ddf40783fcd1648d9c64c5", "Url": "https://api.github.com/repos/onyxbits/TextFiction", "Date": "2014-09-11T22:11:19Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { record = iter.next(); } catch (java.lang.Exception e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8854/buggy-version/warcbase-core.src.main.java.org.warcbase.mapreduce.WacGenericInputFormat.java", "BodyUseAPI": ["java.util.Iterator<org.archive.io.ArchiveRecord>.next()"], "Fixed commit": "8a34bd04702044cba5aa11504384cea1aa104981", "Url": "https://api.github.com/repos/ukwa/warcbase", "Date": "2016-09-30T01:11:31Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream(); java.io.DataOutputStream dout = new java.io.DataOutputStream(baos); org.warcbase.data.WarcRecordUtils.copyStream(record, len, true, dout); return baos.toByteArray(); } catch (java.lang.Exception e) { return new byte[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8854/buggy-version/warcbase-core.src.main.java.org.warcbase.data.WarcRecordUtils.java", "BodyUseAPI": ["org.warcbase.data.WarcRecordUtils.copyStream(org.archive.io.warc.WARCRecord,int,boolean,java.io.DataOutputStream)", "java.io.ByteArrayOutputStream.toByteArray()"], "Fixed commit": "8a34bd04702044cba5aa11504384cea1aa104981", "Url": "https://api.github.com/repos/ukwa/warcbase", "Date": "2016-09-30T01:11:31Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (!(oldValue.equals(newValue))) changes.add(new it.lorenzoingrilli.icarus.impl.PropertyChange(fieldName, oldValue, newValue)); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2571/buggy-version/src.main.java.it.lorenzoingrilli.icarus.impl.Changelog.java", "BodyUseAPI": ["java.lang.Object.equals(java.lang.Object)", "java.util.ArrayList<it.lorenzoingrilli.icarus.impl.PropertyChange>.add(it.lorenzoingrilli.icarus.impl.PropertyChange)"], "Fixed commit": "0c94704a668fe061ce600ad792c2353ec8ea9acb", "Url": "https://api.github.com/repos/lorenzoingrilli/icarus", "Date": "2017-10-04T00:19:22Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { slabTest = zornco.bedcraftbeyond.core.util.items.ItemHandlerGridHelper.getItemsWrapped(wrapped, new java.awt.Dimension(3, 3), new java.awt.Rectangle(0, 1, 3, 1)); stoneTest = zornco.bedcraftbeyond.core.util.items.ItemHandlerGridHelper.getItemsWrapped(wrapped, new java.awt.Dimension(3, 3), new java.awt.Rectangle(0, 2, 3, 1)); } catch (java.lang.IndexOutOfBoundsException iob) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3566/buggy-version/src.main.java.zornco.bedcraftbeyond.frames.stone.RecipeBedFrameStone.java", "BodyUseAPI": ["zornco.bedcraftbeyond.core.util.items.ItemHandlerGridHelper.getItemsWrapped(net.minecraftforge.items.wrapper.InvWrapper,java.awt.Dimension,java.awt.Rectangle)", "zornco.bedcraftbeyond.core.util.items.ItemHandlerGridHelper.getItemsWrapped(net.minecraftforge.items.wrapper.InvWrapper,java.awt.Dimension,java.awt.Rectangle)"], "Fixed commit": "581d05d88fdeae33b3c5edfc4d08ebe5e2024cb8", "Url": "https://api.github.com/repos/ZornTaov/BedcraftAndBeyond", "Date": "2016-07-27T01:24:51Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { ipContext.put(\"org.grouplens.grapht.injectionPoint\", cd.toString()); } finally { ipContext.finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3732/buggy-version/src.main.java.org.grouplens.grapht.reflect.internal.ClassInstantiator.java", "BodyUseAPI": ["org.grouplens.grapht.reflect.internal.ConstructorParameterInjectionPoint.toString()", "org.grouplens.grapht.util.LogContext.put(java.lang.String,cd.toString())"], "Fixed commit": "c1809c08cc0533a512b8b6b8a4214ec8b8ac600c", "Url": "https://api.github.com/repos/grouplens/grapht", "Date": "2015-03-20T22:03:48Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { res.put(\"code\", 0); res.put(\"message\", getIPEntry(ip_decimal)); com.evilisn.ipUtils.IPQueryController.log.info(java.lang.String.format(\"Request coming from [%s],query for IP v4 [%s].\", request.getRemoteAddr(), ip_v4)); } catch (java.lang.Exception e) { com.evilisn.ipUtils.IPQueryController.log.error((\"DB error.\" + (e.getMessage()))); throw new javax.servlet.ServletException(\"Internal Error.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7722/buggy-version/src.main.java.com.evilisn.ipUtils.IPQueryController.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,request.getRemoteAddr(),java.lang.String)", "com.evilisn.ipUtils.IPQueryController.getIPEntry(long)", "java.util.HashMap<java.lang.String, java.lang.Object>.put(java.lang.String,int)", "org.slf4j.Logger.info(java.lang.String)", "javax.servlet.http.HttpServletRequest.getRemoteAddr()", "java.util.HashMap<java.lang.String, java.lang.Object>.put(java.lang.String,com.evilisn.ipUtils.DAO.IPEntry)"], "Fixed commit": "11e4f0caf8584baa60e7a2818cd467ad8fd924f0", "Url": "https://api.github.com/repos/kasimok/IP2Location", "Date": "2016-04-23T15:47:25Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { jobHour = java.lang.String.valueOf(((java.lang.Integer) (item.get(AppConstants.MongoNames.HOURLY_JOB_NUMBER_KEY)))); } catch (java.lang.Exception e) { jobHour = ((java.lang.String) (item.get(AppConstants.MongoNames.HOURLY_JOB_NUMBER_KEY))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7926/buggy-version/src.main.java.com.m3958.visitrank.DailyCopyWorkVerticle.java", "BodyUseAPI": ["com.mongodb.DBObject.get(AppConstants.MongoNames.HOURLY_JOB_NUMBER_KEY)", "java.lang.String.valueOf(((java.lang.Integer) (item.get(AppConstants.MongoNames.HOURLY_JOB_NUMBER_KEY))))"], "Fixed commit": "c95457c25871d91b527e5e488d120daae3319ef6", "Url": "https://api.github.com/repos/jianglibo/visitrank", "Date": "2014-04-03T01:04:14Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (com.avaje.ebean.PrimaryServer.isSkip()) { com.avaje.ebean.Ebean.logger.debug(\"PrimaryServer.isSkip()\"); }else { java.lang.String primaryName = com.avaje.ebean.PrimaryServer.getPrimaryServerName(); com.avaje.ebean.Ebean.logger.debug((\"primaryName:\" + primaryName)); if ((primaryName != null) && ((primaryName.trim().length()) > 0)) { primaryServer = getWithCreate(primaryName.trim()); } } } catch (java.lang.RuntimeException e) { com.avaje.ebean.Ebean.logger.error(\"Error trying to create the default EbeanServer\", e); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7337/buggy-version/src.main.java.com.avaje.ebean.Ebean.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String)", "com.avaje.ebean.PrimaryServer.getPrimaryServerName()", "org.slf4j.Logger.debug(java.lang.String)", "com.avaje.ebean.PrimaryServer.isSkip()", "java.lang.String.trim()", "java.lang.String.trim()", "com.avaje.ebean.Ebean.ServerManager.getWithCreate(java.lang.String)", "java.lang.String.length()"], "Fixed commit": "6c37dc494bd7cc5eb63cae140211fc9f5dd3f057", "Url": "https://api.github.com/repos/hei1233212000/avaje-ebeanorm", "Date": "2015-04-11T07:40:39Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.execute(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6604/buggy-version/src.main.java.net.pme.jobcenter.Job.java", "BodyUseAPI": ["net.pme.jobcenter.Job.execute()"], "Fixed commit": "1f576847006321456a5d373816324008a02084a5", "Url": "https://api.github.com/repos/PenguinMenaceTechnologies/PenguinMenaceEngine", "Date": "2014-05-18T22:53:32Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { result = exec.execute(command, phpDocFile); } catch (org.phpmaven.exec.PhpWarningException ex) { result = ex.getAppendedOutput(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4211/buggy-version/branches.2.0-SNAPSHOT.maven-php-phpdoc.src.main.java.org.phpmaven.phpdoc.impl.PhpdocBatchSupport.java", "BodyUseAPI": ["org.phpmaven.exec.IPhpExecutable.execute(java.lang.String,java.io.File)"], "Fixed commit": "ae8b45cfe805546a5df35769981f26c3df5b24ef", "Url": "https://api.github.com/repos/php-maven/maven-php-plugin", "Date": "2012-04-02T07:23:39Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { result = exec.execute(command, phpDocFile); } catch (org.phpmaven.exec.PhpWarningException ex) { result = ex.getAppendedOutput(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4211/buggy-version/branches.2.0-SNAPSHOT.maven-php-phpdoc.src.main.java.org.phpmaven.phpdoc.impl.PhpdocPearSupport.java", "BodyUseAPI": ["org.phpmaven.exec.IPhpExecutable.execute(java.lang.String,java.io.File)"], "Fixed commit": "ae8b45cfe805546a5df35769981f26c3df5b24ef", "Url": "https://api.github.com/repos/php-maven/maven-php-plugin", "Date": "2012-04-02T07:23:39Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { int depth = 0; java.util.ArrayList curArray = a; while (depth < ((indicies.length) - 1)) { curArray = ((java.util.ArrayList) (curArray.get(indicies[depth]))); depth++; } return ((edu.jhu.cs.elanmike.Probability) (curArray.get(indicies[depth]))); } catch (java.lang.ArrayIndexOutOfBoundsException ex) { java.lang.System.err.printf(\"indices:\"); for (int i : indicies) { java.lang.System.err.printf(\"%d, \", i); } ex.printStackTrace(); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5639/buggy-version/edu.jhu.cs.elanmike.GibbsSampler.java", "BodyUseAPI": ["java.util.ArrayList.get(int)", "java.util.ArrayList.get(int)"], "Fixed commit": "e2dcea412537c3cad1ac106cbd6c11d6addb5c6c", "Url": "https://api.github.com/repos/themikesmith/mlcd-hw3", "Date": "2013-12-04T05:17:35Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { extractedFolderName = org.wso2.carbon.apimgt.importexport.utils.APIImportUtil.extractArchive(new java.io.File((absolutePath + uploadFileName)), absolutePath); } catch (org.wso2.carbon.apimgt.importexport.APIImportException e) { return javax.ws.rs.core.Response.status(Status.BAD_REQUEST).entity(e.getMessage()).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8764/buggy-version/modules.api-import-export.src.main.java.org.wso2.carbon.apimgt.importexport.APIService.java", "BodyUseAPI": ["org.wso2.carbon.apimgt.importexport.utils.APIImportUtil.extractArchive(java.io.File,java.lang.String)"], "Fixed commit": "0678b8aeff2a719a64d1b3d1d372195a62955fe9", "Url": "https://api.github.com/repos/wso2/product-apim", "Date": "2017-12-21T12:21:57Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { if ((netAttrsTable.getColumn(org.cytoscape.view.layout.AbstractLayoutTask.LAYOUT_ALGORITHM)) == null) netAttrsTable.createColumn(org.cytoscape.view.layout.AbstractLayoutTask.LAYOUT_ALGORITHM, java.lang.String.class, true); networkAttributes.set(org.cytoscape.view.layout.AbstractLayoutTask.LAYOUT_ALGORITHM, displayName); } finally { lock.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1541/buggy-version/layout-api.src.main.java.org.cytoscape.view.layout.AbstractLayoutTask.java", "BodyUseAPI": ["org.cytoscape.model.CyTable.createColumn(java.lang.String,java.lang.Class,boolean)", "org.cytoscape.model.CyTable.getColumn(java.lang.String)", "org.cytoscape.model.CyRow.set(java.lang.String,java.lang.String)"], "Fixed commit": "aa959899fef821d625261e30b8ec8c452774c3b8", "Url": "https://api.github.com/repos/cytoscape/cytoscape-api", "Date": "2014-03-27T18:54:14Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return clazz.getMethod(name); } catch (java.lang.NoSuchMethodException | java.lang.SecurityException ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2553/buggy-version/src.main.java.org.assertj.core.util.introspection.Introspection.java", "BodyUseAPI": ["java.lang.Class<?>.getMethod(java.lang.String)"], "Fixed commit": "725e737e7097858a5e138d93801e8e94acab76a0", "Url": "https://api.github.com/repos/hazendaz/assertj-core", "Date": "2017-01-21T07:10:41Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { long r = issue.getResult().occurrenceCount(); if (issue.getResult().isProblematic()) res = java.lang.Long.toString(issue.getResult().occurrenceCount()); else res = \"0\"; lval = new org.openrdf.model.impl.LiteralImpl(res, org.openrdf.model.vocabulary.XMLSchema.INTEGER); } catch (java.lang.UnsupportedOperationException e) { if (issue.getResult().isProblematic()) lval = new org.openrdf.model.impl.LiteralImpl(\"true\", org.openrdf.model.vocabulary.XMLSchema.BOOLEAN); else lval = new org.openrdf.model.impl.LiteralImpl(\"false\", org.openrdf.model.vocabulary.XMLSchema.BOOLEAN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6855/buggy-version/src.main.java.at.ac.univie.mminf.qskos4j.cmd.ReportCollector.java", "BodyUseAPI": ["at.ac.univie.mminf.qskos4j.issues.Issue.getResult()", "issue.getResult().isProblematic()", "java.lang.Long.toString(issue.getResult().occurrenceCount())", "at.ac.univie.mminf.qskos4j.issues.Issue.getResult()", "issue.getResult().occurrenceCount()", "issue.getResult().occurrenceCount()", "at.ac.univie.mminf.qskos4j.issues.Issue.getResult()"], "Fixed commit": "1eda0c08b886676038b3c2dc235d3f4298ecbfb9", "Url": "https://api.github.com/repos/riccardoAlbertoni/qSKOS", "Date": "2017-02-01T13:17:03Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { trustStore = java.security.KeyStore.getInstance(java.security.KeyStore.getDefaultType()); } catch (java.security.KeyStoreException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7718/buggy-version/src.com.loopj.android.http.AsyncHttpClient.java", "BodyUseAPI": ["java.security.KeyStore.getDefaultType()", "java.security.KeyStore.getInstance(java.lang.String)"], "Fixed commit": "870286a6036e563ab3c9384977ded97fd4c1a22d", "Url": "https://api.github.com/repos/kyze8439690/android-async-http", "Date": "2013-05-25T17:33:55Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { sf = new com.loopj.android.http.MySSLSocketFactory(trustStore); } catch (java.security.KeyManagementException e) { e.printStackTrace(); } catch (java.security.UnrecoverableKeyException e) { e.printStackTrace(); } catch (java.security.NoSuchAlgorithmException e) { e.printStackTrace(); } catch (java.security.KeyStoreException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7718/buggy-version/src.com.loopj.android.http.AsyncHttpClient.java", "BodyUseAPI": [], "Fixed commit": "870286a6036e563ab3c9384977ded97fd4c1a22d", "Url": "https://api.github.com/repos/kyze8439690/android-async-http", "Date": "2013-05-25T17:33:55Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { trustStore.load(null, null); } catch (java.security.NoSuchAlgorithmException e) { e.printStackTrace(); } catch (java.security.cert.CertificateException e) { e.printStackTrace(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7718/buggy-version/src.com.loopj.android.http.AsyncHttpClient.java", "BodyUseAPI": ["java.security.KeyStore.load(<nulltype>,<nulltype>)"], "Fixed commit": "870286a6036e563ab3c9384977ded97fd4c1a22d", "Url": "https://api.github.com/repos/kyze8439690/android-async-http", "Date": "2013-05-25T17:33:55Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { jdxComp1 = net.sf.mzmine.modules.peaklistmethods.normalization.rtadjuster.JDXCompound.parseJDXfile(jdxFileC1); jdxComp2 = net.sf.mzmine.modules.peaklistmethods.normalization.rtadjuster.JDXCompound.parseJDXfile(jdxFileC2); } catch (org.jcamp.parser.JCAMPException e) { java.lang.String msg = \"Could not search standard compounds\"; net.sf.mzmine.modules.peaklistmethods.normalization.rtadjuster.JDXCompoundsIdentificationSingleTask.LOG.log(java.util.logging.Level.WARNING, msg, e); setStatus(TaskStatus.ERROR); setErrorMessage(((msg + \": \") + (net.sf.mzmine.util.ExceptionUtils.exceptionToString(e)))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8649/buggy-version/src.main.java.net.sf.mzmine.modules.peaklistmethods.normalization.rtadjuster.JDXCompoundsIdentificationSingleTask.java", "BodyUseAPI": ["net.sf.mzmine.modules.peaklistmethods.normalization.rtadjuster.JDXCompound.parseJDXfile(java.io.File)", "net.sf.mzmine.modules.peaklistmethods.normalization.rtadjuster.JDXCompound.parseJDXfile(java.io.File)"], "Fixed commit": "b11030664d5853aae741da5ae7ad5b325fb6fd1a", "Url": "https://api.github.com/repos/golgauth/mzmine2", "Date": "2016-02-25T12:59:17Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { jdxComp1 = net.sf.mzmine.modules.peaklistmethods.normalization.rtadjuster.JDXCompound.parseJDXfile(jdxFileC1); jdxComp2 = net.sf.mzmine.modules.peaklistmethods.normalization.rtadjuster.JDXCompound.parseJDXfile(jdxFileC2); } catch (org.jcamp.parser.JCAMPException e) { java.lang.String msg = \"Could not search standard compounds\"; net.sf.mzmine.modules.peaklistmethods.normalization.rtadjuster.JDXCompoundsIdentificationTask.LOG.log(java.util.logging.Level.WARNING, msg, e); setStatus(TaskStatus.ERROR); setErrorMessage(((msg + \": \") + (net.sf.mzmine.util.ExceptionUtils.exceptionToString(e)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8649/buggy-version/src.main.java.net.sf.mzmine.modules.peaklistmethods.normalization.rtadjuster.JDXCompoundsIdentificationTask.java", "BodyUseAPI": ["net.sf.mzmine.modules.peaklistmethods.normalization.rtadjuster.JDXCompound.parseJDXfile(java.io.File)", "net.sf.mzmine.modules.peaklistmethods.normalization.rtadjuster.JDXCompound.parseJDXfile(java.io.File)"], "Fixed commit": "b11030664d5853aae741da5ae7ad5b325fb6fd1a", "Url": "https://api.github.com/repos/golgauth/mzmine2", "Date": "2016-02-25T12:59:17Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.metrics.enable(); } catch (java.lang.Exception e) { me.maiome.openauth.bukkit.OpenAuth.log.warning(\"Could not load PluginMetrics!\"); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/9183/buggy-version/src.me.maiome.openauth.bukkit.OpenAuth.java", "BodyUseAPI": ["me.maiome.openauth.bukkit.Metrics.enable()"], "Fixed commit": "aa804c2439a369cb7dff0f8806b64619dce4df27", "Url": "https://api.github.com/repos/pirogoeth/OpenAuth", "Date": "2012-06-26T02:02:33Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (H2.ID.equals(db.getDialect().getId())) { org.slf4j.LoggerFactory.getLogger(org.sonar.server.db.DatabaseChecker.class).warn(\"H2 database should be used for evaluation purpose only\"); }else if (Oracle.ID.equals(db.getDialect().getId())) { checkOracleDriverVersion(); } } catch (java.lang.Exception e) { com.google.common.base.Throwables.propagate(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5006/buggy-version/server.sonar-server.src.main.java.org.sonar.server.db.DatabaseChecker.java", "BodyUseAPI": ["org.sonar.server.db.DatabaseChecker.checkOracleDriverVersion()", "org.slf4j.LoggerFactory.getLogger(java.lang.Class)", "H2.ID.equals(db.getDialect().getId())", "db.getDialect().getId()", "db.getDialect().getId()", "org.sonar.core.persistence.Database.getDialect()", "Oracle.ID.equals(db.getDialect().getId())", "org.slf4j.LoggerFactory.getLogger(org.sonar.server.db.DatabaseChecker.class).warn(java.lang.String)", "org.sonar.core.persistence.Database.getDialect()"], "Fixed commit": "2214f910aaf56b18a5c4ae09839390edea00c995", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2014-07-29T07:14:52Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { result = java.lang.Integer.parseInt(item.select(com.bogdan_kolomiets_1996.bogdan.dou_feed.api.helper.FeedParserHelper.SELECTOR_COMMENT_COUNT).first().html()); } catch (java.lang.NumberFormatException exception) { result = 1000; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2930/buggy-version/app.src.main.java.com.bogdan_kolomiets_1996.bogdan.dou_feed.api.helper.FeedParserHelper.java", "BodyUseAPI": ["item.select(com.bogdan_kolomiets_1996.bogdan.dou_feed.api.helper.FeedParserHelper.SELECTOR_COMMENT_COUNT).first().html()", "java.lang.Integer.parseInt(item.select(com.bogdan_kolomiets_1996.bogdan.dou_feed.api.helper.FeedParserHelper.SELECTOR_COMMENT_COUNT).first().html())", "item.select(com.bogdan_kolomiets_1996.bogdan.dou_feed.api.helper.FeedParserHelper.SELECTOR_COMMENT_COUNT).first()", "org.jsoup.nodes.Element.select(java.lang.String)"], "Fixed commit": "db06f594df38190d176b1b006c4faf35a18da92d", "Url": "https://api.github.com/repos/bogdankolomiets/DOU_Feed", "Date": "2017-01-23T10:34:08Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.sql.PreparedStatement preparedStatement = getConnection().prepareStatement(((\"SELECT * FROM \" + (getTableName())) + \" WHERE horse_breed=?\")); preparedStatement.setString(1, java.lang.String.valueOf(horseBreed.getId())); return handleSelectAll(preparedStatement); } catch (java.sql.SQLException e) { e.printStackTrace(); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1223/buggy-version/src.main.java.service.HorseService.java", "BodyUseAPI": ["getConnection().prepareStatement(((\"SELECT * FROM \" + (getTableName())) + \" WHERE horse_breed=?\"))", "service.HorseService.handleSelectAll(java.sql.PreparedStatement)", "java.lang.String.valueOf(horseBreed.getId())", "service.HorseService.getTableName()", "service.HorseService.getConnection()", "java.sql.PreparedStatement.setString(int,java.lang.String)", "entity.HorseBreed.getId()"], "Fixed commit": "f8555a51a5c9d1dc8c0f0390039da2e40a1737ec", "Url": "https://api.github.com/repos/Pkawa/spring-hibernate-project-stable", "Date": "2016-12-01T12:24:01Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { unregisterReceiver(mHandlerBroadcast); } catch (java.lang.IllegalArgumentException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7014/buggy-version/src.it.fdev.unisaconnect.MainActivity.java", "BodyUseAPI": ["it.fdev.unisaconnect.MainActivity.unregisterReceiver(android.content.BroadcastReceiver)"], "Fixed commit": "a522b44a0f9e679423afe7c4cfee5b21efc5dd89", "Url": "https://api.github.com/repos/fcapano/UnisaConnect", "Date": "2014-10-09T10:06:02Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (!(userIdIsAlreadyIn(participants, userId))) { participants.put(userId); } } catch (com.example.ttpm.game_on.models.org.json jsonException) { jsonException.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/800/buggy-version/Game-On.app.src.main.java.com.example.ttpm.game_on.models.GameOnSession.java", "BodyUseAPI": ["org.json.JSONArray.put(java.lang.String)", "com.example.ttpm.game_on.models.GameOnSession.userIdIsAlreadyIn(org.json.JSONArray,java.lang.String)"], "Fixed commit": "af911a15f64cea7a03ac8e948453da25218d06e5", "Url": "https://api.github.com/repos/trihan51/Game-On", "Date": "2016-03-15T23:32:39Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { pid = java.lang.Integer.parseInt(pidStr); parentPid = java.lang.Integer.parseInt(statElements[1]); userMillis = (java.lang.Long.parseLong(statElements[11])) * (1000 / (userHz)); systemMillis = (java.lang.Long.parseLong(statElements[12])) * (1000 / (userHz)); } catch (java.lang.NumberFormatException e) { throw new com.jezhumble.javasysmon.ParseException(((\"Unable to parse stat '\" + (stat)) + \"'\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1505/buggy-version/src.main.java.com.jezhumble.javasysmon.LinuxProcessInfoParser.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.Long.parseLong(java.lang.String)", "java.lang.Long.parseLong(java.lang.String)"], "Fixed commit": "6ff3f1f6c60a93cd5b6ecce13bc2363b65bba4fe", "Url": "https://api.github.com/repos/jezhumble/javasysmon", "Date": "2011-10-03T07:16:30Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { residentBytes = (java.lang.Long.parseLong(getFirstMatch(com.jezhumble.javasysmon.LinuxProcessInfoParser.STATUS_VM_RSS_MATCHER, status))) * 1024; totalBytes = (java.lang.Long.parseLong(getFirstMatch(com.jezhumble.javasysmon.LinuxProcessInfoParser.STATUS_VM_SIZE_MATCHER, status))) * 1024; } catch (java.lang.NumberFormatException e) { throw new com.jezhumble.javasysmon.ParseException(((\"Unable to extract memory usage information from status '\" + (status)) + \"'\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1505/buggy-version/src.main.java.com.jezhumble.javasysmon.LinuxProcessInfoParser.java", "BodyUseAPI": ["com.jezhumble.javasysmon.LinuxProcessInfoParser.getFirstMatch(java.util.regex.Pattern,java.lang.String)", "java.lang.Long.parseLong(java.lang.String)", "java.lang.Long.parseLong(java.lang.String)", "com.jezhumble.javasysmon.LinuxProcessInfoParser.getFirstMatch(java.util.regex.Pattern,java.lang.String)"], "Fixed commit": "6ff3f1f6c60a93cd5b6ecce13bc2363b65bba4fe", "Url": "https://api.github.com/repos/jezhumble/javasysmon", "Date": "2011-10-03T07:16:30Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { xlinkResolverPool.join(); tmpXlinkPool.join(); } catch (java.lang.InterruptedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4717/buggy-version/src.de.tub.citydb.modules.citygml.importer.database.xlink.resolver.DBXlinkSplitter.java", "BodyUseAPI": ["de.tub.citydb.api.concurrent.WorkerPool<de.tub.citydb.modules.citygml.common.database.xlink.DBXlink>.join()", "de.tub.citydb.api.concurrent.WorkerPool<de.tub.citydb.modules.citygml.common.database.xlink.DBXlink>.join()"], "Fixed commit": "bd7d748a2a4c5e7746b8e27bce23b868dcc5007e", "Url": "https://api.github.com/repos/3dcitydb/importer-exporter", "Date": "2014-03-18T19:49:31Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { network.put(com.whd.wifikeyview.network.NetworkParser.SupplicantKey.valueOf(key), value); } catch (java.lang.IllegalArgumentException iae) { com.whd.wifikeyview.WiFiKeyView.verboseLog(com.whd.wifikeyview.network.NetworkParser.class, \"parse(List<String>)\", (\"Unknown key in supplicant file: \" + key)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6288/buggy-version/src.com.whd.wifikeyview.network.NetworkParser.java", "BodyUseAPI": ["com.whd.wifikeyview.network.NetworkParser.Network.put(com.whd.wifikeyview.network.NetworkParser.SupplicantKey,java.lang.String)", "com.whd.wifikeyview.network.NetworkParser.SupplicantKey.valueOf(java.lang.String)"], "Fixed commit": "dd870720419342c898833b2c0bdfab67cab6495a", "Url": "https://api.github.com/repos/whdeveloper/WiFiKeyView", "Date": "2015-03-25T08:23:55Z"},
{"Line": "=>438", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { org.apache.axis2.engine.AxisEngine.send(mainOutMsgContext); } finally { mainOutMsgContext.getAxisService().getSchema().removeAll(tenantOutMsgContext.getAxisService().getSchema()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3039/buggy-version/core.org.wso2.carbon.core.src.main.java.org.wso2.carbon.core.multitenancy.MultitenantMessageReceiver.java", "BodyUseAPI": ["org.apache.axis2.engine.AxisEngine.send(org.apache.axis2.context.MessageContext)"], "Fixed commit": "be70e792a2a918bcb3e8e52e902980d0359a25db", "Url": "https://api.github.com/repos/wso2/carbon-kernel", "Date": "2015-08-06T01:37:28Z"},
{"Line": "=>679", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.transportManagement.startAssociation(this.associationName); } catch (java.lang.Exception e) { org.mobicents.protocols.ss7.m3ua.impl.AspFactoryImpl.logger.error(java.lang.String.format(\"Error while trying to start underlying Association for AspFactpry=%s\", this.getName()), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5679/buggy-version/m3ua.impl.src.main.java.org.mobicents.protocols.ss7.m3ua.impl.AspFactoryImpl.java", "BodyUseAPI": ["org.mobicents.protocols.api.Management.startAssociation(java.lang.String)"], "Fixed commit": "1f65c5d7b9a51e890c979ca821302dccbadf0258", "Url": "https://api.github.com/repos/Mobicents/jss7", "Date": "2013-09-05T10:17:52Z"},
{"Line": "=>672", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.transportManagement.stopAssociation(this.associationName); } catch (java.lang.Exception e) { org.mobicents.protocols.ss7.m3ua.impl.AspFactoryImpl.logger.warn(java.lang.String.format(\"Error while trying to stop underlying Association for AspFactpry=%s\", this.getName()), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5679/buggy-version/m3ua.impl.src.main.java.org.mobicents.protocols.ss7.m3ua.impl.AspFactoryImpl.java", "BodyUseAPI": ["org.mobicents.protocols.api.Management.stopAssociation(java.lang.String)"], "Fixed commit": "1f65c5d7b9a51e890c979ca821302dccbadf0258", "Url": "https://api.github.com/repos/Mobicents/jss7", "Date": "2013-09-05T10:17:52Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.util.Map<java.lang.String, java.lang.String> requiredManifest = org.opennms.karaf.featuremgr.ManifestUtils.csvStringToManifestMap(newManifestStr); synchronizeRequiredManifest(requiredManifest); } catch (java.lang.Exception e) { throw new java.lang.RuntimeException(\"problem installing manifest\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7041/buggy-version/org.opennms.plugin.pluginmanager.featuremanager.src.main.java.org.opennms.karaf.featuremgr.PluginFeatureManagerImpl.java", "BodyUseAPI": ["org.opennms.karaf.featuremgr.ManifestUtils.csvStringToManifestMap(java.lang.String)", "org.opennms.karaf.featuremgr.PluginFeatureManagerImpl.synchronizeRequiredManifest(java.util.Map<java.lang.String, java.lang.String>)"], "Fixed commit": "5ac131d0b3cbe26d2d3049b84ca3ab938f737320", "Url": "https://api.github.com/repos/OpenNMS/osgi-plugin-manager", "Date": "2017-08-22T19:15:57Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { java.lang.String output = runDockerCommand(\"ps\"); java.util.List<java.lang.String> ps = com.google.common.base.Splitter.on(com.google.common.base.CharMatcher.anyOf(\"\\r\\n\")).omitEmptyStrings().splitToList(output); if ((ps.size()) > 1) { for (int i = 1; i < (ps.size()); i++) { java.lang.String line = ps.get(i); java.lang.String id = brooklyn.util.text.Strings.getFirstWord(line); com.google.common.base.Optional<brooklyn.entity.Entity> container = com.google.common.collect.Iterables.tryFind(getDockerContainerCluster().getMembers(), com.google.common.base.Predicates.compose(brooklyn.util.text.StringPredicates.startsWith(id), brooklyn.entity.basic.EntityFunctions.attribute(DockerContainer.CONTAINER_ID))); if (container.isPresent()) continue; java.lang.String containerId = brooklyn.util.text.Strings.getFirstWord(runDockerCommand((\"inspect --format {{.Id}} \" + id))); java.lang.String imageId = brooklyn.util.text.Strings.getFirstWord(runDockerCommand((\"inspect --format {{.Image}} \" + id))); java.lang.String imageName = brooklyn.util.text.Strings.getFirstWord(runDockerCommand((\"inspect --format {{.Config.Image}} \" + id))); brooklyn.entity.proxying.EntitySpec<brooklyn.entity.container.docker.DockerContainer> containerSpec = brooklyn.entity.proxying.EntitySpec.create(getConfig(brooklyn.entity.container.docker.DOCKER_CONTAINER_SPEC)).configure(SoftwareProcess.ENTITY_STARTED, java.lang.Boolean.TRUE).configure(DockerContainer.DOCKER_HOST, this).configure(DockerContainer.DOCKER_INFRASTRUCTURE, getInfrastructure()).configure(DockerContainer.DOCKER_IMAGE_ID, imageId).configure(DockerAttributes.DOCKER_IMAGE_NAME, imageName).configure(DockerContainer.LOCATION_FLAGS, brooklyn.util.collections.MutableMap.of(\"container\", ((brooklyn.location.jclouds.JcloudsSshMachineLocation) (getMachine())))); brooklyn.entity.container.docker.DockerContainer added = getDockerContainerCluster().addChild(containerSpec); brooklyn.entity.basic.Entities.manage(added); getDockerContainerCluster().addMember(added); ((brooklyn.entity.basic.EntityLocal) (added)).setAttribute(DockerContainer.CONTAINER_ID, containerId); added.start(com.google.common.collect.ImmutableList.of(getDynamicLocation().getMachine())); } } } finally { getDynamicLocation().releaseMutex(DockerHostLocation.CONTAINER_MUTEX); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2872/buggy-version/docker.src.main.java.brooklyn.entity.container.docker.DockerHostImpl.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "brooklyn.util.text.StringPredicates.startsWith(java.lang.String)", "brooklyn.entity.container.docker.DockerContainer.start(com.google.common.collect.ImmutableList.of(getDynamicLocation().getMachine()))", "com.google.common.base.Splitter.on(com.google.common.base.CharMatcher.anyOf(\"\\r\\n\")).omitEmptyStrings()", "com.google.common.base.Splitter.on(com.google.common.base.CharMatcher.anyOf(\"\\r\\n\")).omitEmptyStrings().splitToList(java.lang.String)", "brooklyn.util.collections.MutableMap.of(java.lang.String,((brooklyn.location.jclouds.JcloudsSshMachineLocation) (getMachine())))", "brooklyn.util.text.Strings.getFirstWord(java.lang.String)", "brooklyn.entity.container.docker.DockerHostImpl.getMachine()", "brooklyn.entity.container.docker.DockerContainer.setAttribute(DockerContainer.CONTAINER_ID,java.lang.String)", "com.google.common.base.CharMatcher.anyOf(java.lang.String)", "brooklyn.entity.container.docker.DockerHostImpl.getConfig(brooklyn.entity.container.docker.DOCKER_CONTAINER_SPEC)", "brooklyn.util.text.Strings.getFirstWord(java.lang.String)", "brooklyn.entity.container.docker.DockerHostImpl.runDockerCommand(java.lang.String)", "java.util.List<java.lang.String>.size()", "brooklyn.util.text.Strings.getFirstWord(java.lang.String)", "brooklyn.entity.container.docker.DockerHostImpl.getInfrastructure()", "brooklyn.entity.group.DynamicCluster.getMembers()", "brooklyn.entity.container.docker.DockerHostImpl.runDockerCommand(java.lang.String)", "brooklyn.util.text.Strings.getFirstWord(java.lang.String)", "com.google.common.collect.ImmutableList.of(getDynamicLocation().getMachine())", "brooklyn.entity.proxying.EntitySpec.create(getConfig(brooklyn.entity.container.docker.DOCKER_CONTAINER_SPEC)).configure(SoftwareProcess.ENTITY_STARTED,java.lang.Boolean)", "brooklyn.entity.container.docker.DockerHostImpl.getDockerContainerCluster()", "brooklyn.entity.proxying.EntitySpec.create(getConfig(brooklyn.entity.container.docker.DOCKER_CONTAINER_SPEC)).configure(SoftwareProcess.ENTITY_STARTED, java.lang.Boolean.TRUE).configure(DockerContainer.DOCKER_HOST, this).configure(DockerContainer.DOCKER_INFRASTRUCTURE, getInfrastructure()).configure(DockerContainer.DOCKER_IMAGE_ID, imageId).configure(DockerAttributes.DOCKER_IMAGE_NAME,java.lang.String)", "brooklyn.entity.proxying.EntitySpec.create(getConfig(brooklyn.entity.container.docker.DOCKER_CONTAINER_SPEC)).configure(SoftwareProcess.ENTITY_STARTED, java.lang.Boolean.TRUE).configure(DockerContainer.DOCKER_HOST,brooklyn.entity.container.docker.DockerHostImpl)", "brooklyn.entity.proxying.EntitySpec.create(getConfig(brooklyn.entity.container.docker.DOCKER_CONTAINER_SPEC)).configure(SoftwareProcess.ENTITY_STARTED, java.lang.Boolean.TRUE).configure(DockerContainer.DOCKER_HOST, this).configure(DockerContainer.DOCKER_INFRASTRUCTURE,brooklyn.entity.container.docker.DockerInfrastructure)", "brooklyn.entity.container.docker.DockerHostImpl.runDockerCommand(java.lang.String)", "com.google.common.base.Optional<brooklyn.entity.Entity>.isPresent()", "brooklyn.entity.container.docker.DockerHostImpl.getDynamicLocation()", "com.google.common.collect.Iterables.tryFind(getDockerContainerCluster().getMembers(),com.google.common.base.Predicates.compose(brooklyn.util.text.StringPredicates.startsWith(id), brooklyn.entity.basic.EntityFunctions.attribute(DockerContainer.CONTAINER_ID)))", "brooklyn.entity.container.docker.DockerHostImpl.getDockerContainerCluster()", "brooklyn.entity.container.docker.DockerHostImpl.runDockerCommand(java.lang.String)", "brooklyn.entity.proxying.EntitySpec.create(getConfig(brooklyn.entity.container.docker.DOCKER_CONTAINER_SPEC)).configure(SoftwareProcess.ENTITY_STARTED, java.lang.Boolean.TRUE).configure(DockerContainer.DOCKER_HOST, this).configure(DockerContainer.DOCKER_INFRASTRUCTURE, getInfrastructure()).configure(DockerContainer.DOCKER_IMAGE_ID,java.lang.String)", "brooklyn.entity.basic.Entities.manage(brooklyn.entity.container.docker.DockerContainer)", "brooklyn.entity.container.docker.DockerHostImpl.getDockerContainerCluster()", "java.util.List<java.lang.String>.get(int)", "brooklyn.entity.proxying.EntitySpec.create(getConfig(brooklyn.entity.container.docker.DOCKER_CONTAINER_SPEC))", "brooklyn.entity.proxying.EntitySpec.create(getConfig(brooklyn.entity.container.docker.DOCKER_CONTAINER_SPEC)).configure(SoftwareProcess.ENTITY_STARTED, java.lang.Boolean.TRUE).configure(DockerContainer.DOCKER_HOST, this).configure(DockerContainer.DOCKER_INFRASTRUCTURE, getInfrastructure()).configure(DockerContainer.DOCKER_IMAGE_ID, imageId).configure(DockerAttributes.DOCKER_IMAGE_NAME, imageName).configure(DockerContainer.LOCATION_FLAGS,brooklyn.util.collections.MutableMap.of(\"container\", ((brooklyn.location.jclouds.JcloudsSshMachineLocation) (getMachine()))))", "com.google.common.base.Splitter.on(com.google.common.base.CharMatcher.anyOf(\"\\r\\n\"))", "com.google.common.base.Predicates.compose(brooklyn.util.text.StringPredicates.startsWith(id),brooklyn.entity.basic.EntityFunctions.attribute(DockerContainer.CONTAINER_ID))", "brooklyn.entity.group.DynamicCluster.addChild(brooklyn.entity.proxying.EntitySpec<brooklyn.entity.container.docker.DockerContainer>)", "brooklyn.location.docker.DockerHostLocation.getMachine()", "brooklyn.entity.basic.EntityFunctions.attribute(DockerContainer.CONTAINER_ID)", "brooklyn.entity.group.DynamicCluster.addMember(brooklyn.entity.container.docker.DockerContainer)"], "Fixed commit": "8a9a29e12df336e5b40247af181d1599637992b7", "Url": "https://api.github.com/repos/brooklyncentral/clocker", "Date": "2014-10-10T19:52:42Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { c = ((android.database.Cursor) (parent.getItemAtPosition(position))); car_id = c.getInt(c.getColumnIndexOrThrow(Vehicle.C_ID)); } catch (java.lang.Exception e) { android.util.Log.e(com.kulkarni.refueler.FragmentFillup.TAG, e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1861/buggy-version/Refueler.src.main.java.com.kulkarni.refueler.FragmentFillup.java", "BodyUseAPI": ["android.database.Cursor.getColumnIndexOrThrow(Vehicle.C_ID)", "android.database.Cursor.getInt(c.getColumnIndexOrThrow(Vehicle.C_ID))", "android.widget.AdapterView<?>.getItemAtPosition(int)"], "Fixed commit": "2cb3469a193b8debf70ae8fc3e192d4bcca0a1e2", "Url": "https://api.github.com/repos/amey-kulkarni/MyApplicationProject", "Date": "2014-02-19T23:08:30Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { data.putExtra(\"filename\", outputFile.getAbsolutePath()); data.putExtra(\"thumbnail\", thumbNailFile.getAbsolutePath()); } catch (java.lang.NullPointerException e) { com.kurtbautista.lab4.FoodReview review = ((com.kurtbautista.lab4.FoodReview) (getIntent().getSerializableExtra(\"review\"))); data.putExtra(\"filename\", review.getFilename()); data.putExtra(\"thumbnail\", review.getThumbnail()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5930/buggy-version/app.src.main.java.com.kurtbautista.lab4.NewEditReviewActivity.java", "BodyUseAPI": ["android.content.Intent.putExtra(java.lang.String,java.lang.String)", "java.io.File.getAbsolutePath()", "android.content.Intent.putExtra(java.lang.String,java.lang.String)", "java.io.File.getAbsolutePath()"], "Fixed commit": "95045223348e2b31742e0a3efc8a42189659e08a", "Url": "https://api.github.com/repos/kurt-bautista/cs119.3-lab4", "Date": "2016-07-04T07:30:05Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { n = db.findNode(label, \"id\", code); } catch (org.neo4j.graphdb.MultipleFoundException mfe) { throw new org.neo4j.graphdb.MultipleFoundException((((\"Label: \" + (label.name())) + \", Code: \") + code)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2830/buggy-version/src.org.eihg.phevor.plugins.AddParents.java", "BodyUseAPI": ["org.neo4j.graphdb.GraphDatabaseService.findNode(org.neo4j.graphdb.Label,java.lang.String,java.lang.String)"], "Fixed commit": "5770d6042baa027617b9d3b14f9e345a7b47c261", "Url": "https://api.github.com/repos/glemmon/ontology", "Date": "2017-04-21T03:14:32Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { resultSocket = new java.net.Socket(ip, iport); resultSocket.setSoTimeout(src.RequestThread.SO_TIMEOUT_MS); return resultSocket; } catch (java.io.IOException e) { if (resultSocket != null) { try { resultSocket.close(); } catch (java.io.IOException e2) { } } return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6955/buggy-version/projProxy.src.RequestThread.java", "BodyUseAPI": ["java.net.Socket.setSoTimeout(int)"], "Fixed commit": "d3580472a979dee115b21f5537afa826a50b8871", "Url": "https://api.github.com/repos/kennanmell/tor", "Date": "2017-11-16T09:13:41Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { errorAttributes = gson.fromJson(((org.springframework.web.client.HttpStatusCodeException) (ex)).getResponseBodyAsString(), com.ctrip.framework.apollo.common.controller.GlobalDefaultExceptionHandler.mapType); status = ((org.springframework.web.client.HttpStatusCodeException) (ex)).getStatusCode(); errorHandled = true; } catch (java.lang.Throwable th) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/9036/buggy-version/apollo-common.src.main.java.com.ctrip.framework.apollo.common.controller.GlobalDefaultExceptionHandler.java", "BodyUseAPI": ["java.lang.Throwable.getResponseBodyAsString()", "com.google.gson.Gson.fromJson(((org.springframework.web.client.HttpStatusCodeException) (ex)).getResponseBodyAsString(),java.lang.reflect.Type)", "java.lang.Throwable.getStatusCode()"], "Fixed commit": "eaa877cf5c066eaa801069c0c0b8be607c976d21", "Url": "https://api.github.com/repos/nobodyiam/apollo", "Date": "2016-08-15T06:27:02Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { minimumGooVersion = getBackupVersion(); } catch (java.io.IOException e) { e.printStackTrace(); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2159/buggy-version/src.com.aokp.backup.Restore.java", "BodyUseAPI": ["com.aokp.backup.Restore.getBackupVersion()"], "Fixed commit": "230cd76320cf16e17dacb43d9978c6e4de9e6aef", "Url": "https://api.github.com/repos/romanbb/AOKP_Backup", "Date": "2012-06-11T03:53:07Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return consumers.get(getNextConsumerIndex()).onMessage(message); } catch (java.lang.IndexOutOfBoundsException ignored) { return Ack.HALT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4361/buggy-version/src.main.java.com.orctom.rmq.Queue.java", "BodyUseAPI": ["com.orctom.rmq.Queue.getNextConsumerIndex()", "java.util.List<com.orctom.rmq.RMQConsumer>.get(int)", "consumers.get(getNextConsumerIndex()).onMessage(com.orctom.rmq.Message)"], "Fixed commit": "17d0f64b6a73c66ab1093930ffaab969418978c9", "Url": "https://api.github.com/repos/orctom/rmq", "Date": "2017-01-05T11:58:22Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { stringValue = \"https://\" + stringValue; oldUri = new java.net.URI(stringValue); } catch (java.net.URISyntaxException e1) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6890/buggy-version/app.src.main.java.com.nicewuerfel.musicbot.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "1a430c9283f36083f685f8ff3397d2e2c77d6158", "Url": "https://api.github.com/repos/BjoernPetersen/AndroidMusicBot", "Date": "2016-08-31T19:04:30Z"},
{"Line": "=>504", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { f.set(this, country.get(next)); } catch (java.lang.IllegalArgumentException e) { android.util.Log.e(\"TOPBREWERY\", e.getMessage().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5984/buggy-version/app.src.main.java.group10.tcss450.uw.edu.challengeapp.BrewTour.TopBrewery.java", "BodyUseAPI": ["java.lang.reflect.Field.set(group10.tcss450.uw.edu.challengeapp.BrewTour.TopBrewery.country,country.get(next))", "org.json.JSONObject.get(java.lang.String)"], "Fixed commit": "0b48924835c46c5c5dbf648a77858d7e42924100", "Url": "https://api.github.com/repos/grwyler/beerButler", "Date": "2017-05-06T02:46:46Z"},
{"Line": "=>613", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { f.set(this, images.get(next)); } catch (java.lang.IllegalArgumentException e) { android.util.Log.e(\"TOPBREWERY\", e.getMessage().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5984/buggy-version/app.src.main.java.group10.tcss450.uw.edu.challengeapp.BrewTour.TopBrewery.java", "BodyUseAPI": ["java.lang.reflect.Field.set(group10.tcss450.uw.edu.challengeapp.BrewTour.TopBrewery.images,images.get(next))", "org.json.JSONObject.get(java.lang.String)"], "Fixed commit": "0b48924835c46c5c5dbf648a77858d7e42924100", "Url": "https://api.github.com/repos/grwyler/beerButler", "Date": "2017-05-06T02:46:46Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { f.set(this, brewery.get(next)); } catch (java.lang.IllegalArgumentException e) { android.util.Log.e(\"TOPBREWERY\", e.getMessage().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5984/buggy-version/app.src.main.java.group10.tcss450.uw.edu.challengeapp.BrewTour.TopBrewery.java", "BodyUseAPI": ["java.lang.reflect.Field.set(group10.tcss450.uw.edu.challengeapp.BrewTour.TopBrewery.brewery,brewery.get(next))", "org.json.JSONObject.get(java.lang.String)"], "Fixed commit": "0b48924835c46c5c5dbf648a77858d7e42924100", "Url": "https://api.github.com/repos/grwyler/beerButler", "Date": "2017-05-06T02:46:46Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { conn.close(); jedis.close(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5911/buggy-version/src.main.java.hedis.io.api.DataApi.java", "BodyUseAPI": ["java.sql.Connection.close()", "redis.clients.jedis.Jedis.close()"], "Fixed commit": "01e669b6213c87a99510954ad9f90bb0450a0265", "Url": "https://api.github.com/repos/hedisdb/benchmark-java", "Date": "2015-07-10T05:48:42Z"},
{"Line": "=>587", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { getAndCreateChannel(address, nettyClientConfig.getParallelism()); } catch (java.lang.InterruptedException e) { com.alibaba.rocketmq.remoting.netty.NettyRemotingClient.log.info(\"Error while creating connection\", e); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3914/buggy-version/rocketmq-remoting.src.main.java.com.alibaba.rocketmq.remoting.netty.NettyRemotingClient.java", "BodyUseAPI": ["com.alibaba.rocketmq.remoting.netty.NettyClientConfig.getParallelism()", "com.alibaba.rocketmq.remoting.netty.NettyRemotingClient.getAndCreateChannel(java.lang.String,nettyClientConfig.getParallelism())"], "Fixed commit": "7dd172587c6e8daa678dffa57a465e2bfb0e459c", "Url": "https://api.github.com/repos/lizhanhui/Alibaba_RocketMQ", "Date": "2015-08-25T10:35:03Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { startActivity(intent); } catch (android.content.ActivityNotFoundException e) { startActivity(new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse((\"http://play.google.com/store/apps/details?id=\" + \"com.google.android.apps.maps\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2658/buggy-version/app.src.main.java.com.example.quotes.AboutActivity.java", "BodyUseAPI": ["com.example.quotes.AboutActivity.startActivity(android.content.Intent)"], "Fixed commit": "c111b95ac101cb2a6ac21d2c7b9467504a84f254", "Url": "https://api.github.com/repos/BaranMichal25/MyQuotes", "Date": "2017-02-05T22:06:40Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { super.onRelease(); } catch (java.lang.IndexOutOfBoundsException IOOBEx) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6210/buggy-version/RobotRun.src.ui.MyDropdownList.java", "BodyUseAPI": ["controlP5.DropdownList.onRelease()"], "Fixed commit": "f2a727ee9e6e72ab8301ad6de4047e3268638f0b", "Url": "https://api.github.com/repos/skuhl/RobotRun", "Date": "2017-01-17T12:57:38Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.io.File folder = new java.io.File(path); for (java.io.File fileEntry : folder.listFiles()) { if (fileEntry.isDirectory()) { }else { fileList.add(fileEntry.getName()); } } } catch (java.lang.Exception ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4792/buggy-version/src.net.fodev.tools.frm.control.FrmFileSelector.java", "BodyUseAPI": ["java.io.File.listFiles()", "java.io.File.isDirectory()", "java.util.List<java.lang.String>.add(java.lang.String)", "java.io.File.getName()"], "Fixed commit": "db56730def79f4a30ec3b798442cac6e09425f6c", "Url": "https://api.github.com/repos/SlowhandFastfeet/FEV", "Date": "2016-07-29T02:52:32Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { wait(((org.mobicents.servlet.sip.restcomm.util.TimeUtils.SECOND_IN_MILLIS) * (timeLimit))); } catch (final java.lang.InterruptedException exception) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6518/buggy-version/restcomm.rcml.src.main.java.org.mobicents.servlet.sip.restcomm.interpreter.tagstrategy.voice.ForkSubStrategy.java", "BodyUseAPI": ["org.mobicents.servlet.sip.restcomm.interpreter.tagstrategy.voice.ForkSubStrategy.wait(((org.mobicents.servlet.sip.restcomm.util.TimeUtils.SECOND_IN_MILLIS) * (timeLimit)))"], "Fixed commit": "2efc9650f97a6d3f6014699c8f6f643e53c74695", "Url": "https://api.github.com/repos/Mobicents/RestComm", "Date": "2012-12-16T19:38:20Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { return new com.couchbase.lite.javascript.ViewMapRhino(source, ddoc); } catch (com.couchbase.lite.javascript.org.mozilla e) { com.couchbase.lite.util.Log.e(Database.TAG, (\"Javascript syntax error in view:\\n\" + source), e); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3728/buggy-version/src.main.java.com.couchbase.lite.javascript.JavaScriptViewCompiler.java", "BodyUseAPI": [], "Fixed commit": "e692ba5b730733e2a8f0b99736c89a21c7a346a0", "Url": "https://api.github.com/repos/Spotme/couchbase-lite-java-javascript", "Date": "2015-10-16T10:32:58Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String newLine = java.lang.System.getProperty(\"line.separator\"); java.io.FileWriter arq = new java.io.FileWriter(\"/home/airton/Downloads/Trabalho/saidaYY\"); java.io.PrintWriter gravarArq = new java.io.PrintWriter(arq); for (util.Resultado resultado : this.resultadoFinal) { java.lang.System.out.println(resultado.resultadoMontado()); } arq.close(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7253/buggy-version/src.main.Intermediaria.java", "BodyUseAPI": ["java.lang.System.getProperty(java.lang.String)", "java.io.PrintStream.println(resultado.resultadoMontado())", "util.Resultado.resultadoMontado()", "java.io.FileWriter.close()"], "Fixed commit": "a74e4ba1829f6e85a8a1610ae80b3a762850863f", "Url": "https://api.github.com/repos/jmoreirafilho/LeitorTransacaoRedes", "Date": "2017-11-24T01:01:51Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { table = stuff.get(edu.lclark.orego.mcts.LgrfTable.class); } catch (java.lang.IllegalArgumentException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3815/buggy-version/src.edu.lclark.orego.mcts.McRunnable.java", "BodyUseAPI": ["edu.lclark.orego.mcts.CopiableStructure.get(java.lang.Class)"], "Fixed commit": "a25abe77f59996dfc00da6ee7aee00cf3936e24e", "Url": "https://api.github.com/repos/Orego/Orego", "Date": "2014-07-07T20:05:39Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { execute = pipeline.syncAndReturnAll(); } finally { pipeline = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2533/buggy-version/src.main.java.org.springframework.data.redis.connection.jedis.JedisConnection.java", "BodyUseAPI": ["redis.clients.jedis.Pipeline.syncAndReturnAll()"], "Fixed commit": "c9f0ecca02fc67e3cfc228880908cd28f10149c3", "Url": "https://api.github.com/repos/oznyang/spring-data-redis", "Date": "2012-10-13T08:53:18Z"},
{"Line": "=>587", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { hs = in.readLine(); } catch (java.io.IOException ex) { hs = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1063/buggy-version/src.tauargus.model.OptiSuppress.java", "BodyUseAPI": ["java.io.BufferedReader.readLine()"], "Fixed commit": "b0c3dad7ce77a5c17321074a34896224c6a03f70", "Url": "https://api.github.com/repos/sdcTools/tauargus", "Date": "2017-05-09T09:49:20Z"},
{"Line": "=>575", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { hs = in.readLine(); } catch (java.io.IOException ex) { hs = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1063/buggy-version/src.tauargus.model.OptiSuppress.java", "BodyUseAPI": ["java.io.BufferedReader.readLine()"], "Fixed commit": "b0c3dad7ce77a5c17321074a34896224c6a03f70", "Url": "https://api.github.com/repos/sdcTools/tauargus", "Date": "2017-05-09T09:49:20Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { cbArray[i] = new javax.swing.JCheckBox(cbToppings[i].getName()); panel.add(cbArray[i]); } catch (java.lang.NullPointerException E) { java.lang.System.out.println(\"OUCH\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4927/buggy-version/src.PizzaOrder.java", "BodyUseAPI": ["cbToppings[i].getName()", "javax.swing.JPanel.add(javax.swing.JCheckBox)"], "Fixed commit": "09b6be699027e6fb7b5d03d53cb79e19b1691caf", "Url": "https://api.github.com/repos/CHADALAK1/Java_II_3_Lab", "Date": "2015-10-08T16:47:19Z"},
{"Line": "=>479", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.removeRelation(a, b); } catch (RelationException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4220/buggy-version/ReteSociale.java", "BodyUseAPI": ["ReteSociale.removeRelation(Utente,Utente)"], "Fixed commit": "cf277ed3cc1a46c2a3e70a33829cd24d89cb0d3c", "Url": "https://api.github.com/repos/ellepannitto/Progetto_Java", "Date": "2016-04-27T21:26:32Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((getGithubOrgByName(username)) != null) { return null; } } catch (io.github.ibuildthecloud.gdapi.exception.ClientVisibleException ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/993/buggy-version/code.iaas.auth-logic.src.main.java.io.cattle.platform.iaas.api.auth.integration.github.resource.GithubClient.java", "BodyUseAPI": ["io.cattle.platform.iaas.api.auth.integration.github.resource.GithubClient.getGithubOrgByName(java.lang.String)"], "Fixed commit": "6a6d9bcea5f8fd02cd2db0ffc298eb63ee4657fa", "Url": "https://api.github.com/repos/alena1108/cattle", "Date": "2016-03-07T16:26:06Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { customLoginService.autoLogin(userService.addOrUpdate(user)); } catch (java.lang.Exception e) { redirectAttr.addFlashAttribute(\"error\", \"Une erreur est survenue lors de la modification du nom d'utilisateur. Il est surement d\u00e9j\u00e0 utilis\u00e9.\"); return new org.springframework.web.servlet.ModelAndView(\"redirect:/profil\", model); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6279/buggy-version/src.main.java.co.simplon.kif.web.UserController.java", "BodyUseAPI": ["co.simplon.kif.core.service.authentication.ICustomLoginService.autoLogin(userService.addOrUpdate(user))", "co.simplon.kif.core.service.UserService.addOrUpdate(co.simplon.kif.core.model.User)"], "Fixed commit": "115fb449a6dd8f566875b5b593b6f422f4513030", "Url": "https://api.github.com/repos/simplon-CQP-Java/kif", "Date": "2016-12-13T13:30:34Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { query = java.net.URLEncoder.encode(query, \"UTF-8\"); } catch (java.io.UnsupportedEncodingException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6953/buggy-version/App.src.com.dozuki.ifixit.ui.search.SearchActivity.java", "BodyUseAPI": ["java.net.URLEncoder.encode(java.lang.String,java.lang.String)"], "Fixed commit": "955a53f3e00f05284dc13650fb91b654e465a80d", "Url": "https://api.github.com/repos/iFixit/iFixitAndroid", "Date": "2013-10-08T19:39:12Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { entity = objectMapper.readValue(response.getBody(), mandelabros.co.jp.linebot.response.entity.GurunaviRestaurantSearchResponseEntity.class); } catch (com.fasterxml.jackson.databind.JsonMappingException e) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5235/buggy-version/src.main.java.mandelabros.co.jp.linebot.service.GurunaviServiceImpl.java", "BodyUseAPI": ["org.springframework.http.ResponseEntity<java.lang.String>.getBody()", "com.fasterxml.jackson.databind.ObjectMapper.readValue(response.getBody(),java.lang.Class)"], "Fixed commit": "363c8cf2699caab187d3e728ff2002f57606e5a2", "Url": "https://api.github.com/repos/MandelaBros/yakisoba", "Date": "2017-07-29T06:03:19Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { raw = new org.json.JSONObject(se.hj.androidgroupa2.objects.ApiHelper.getFromApi(\"http://doelibs-001-site1.myasp.net/api/search/?searchTerm=&searchOption=Title\")); } catch (org.json.JSONException e) { android.util.Log.e(\"JSON PARSE\", \"Parse to get current user from api\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5658/buggy-version/src.se.hj.androidgroupa2.objects.ExtendedTitle.java", "BodyUseAPI": ["se.hj.androidgroupa2.objects.ApiHelper.getFromApi(java.lang.String)"], "Fixed commit": "c974a8912ba15301aa5b85b2a9bbd887e2615a03", "Url": "https://api.github.com/repos/kyesh/AndroidGroupA2", "Date": "2014-12-09T11:01:34Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { db.execSQL((\"DROP TABLE IF EXISTS \" + (edu.mit.mitmobile2.news.net.NewsDbHelper.TABLE_NAME))); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2837/buggy-version/src.edu.mit.mitmobile2.news.net.NewsDbHelper.java", "BodyUseAPI": ["android.database.sqlite.SQLiteDatabase.execSQL(java.lang.String)"], "Fixed commit": "a434096892bb550c33566ad5673c933b8c06d0e3", "Url": "https://api.github.com/repos/MIT-Mobile/MIT-Mobile-for-Android", "Date": "2014-03-31T17:53:56Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { id = codeu.chat.util.Uuid.parse(args[0]); } catch (java.io.IOException ex) { java.lang.System.out.println(\"Invalid id - shutting down server\"); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/807/buggy-version/src.codeu.chat.ServerMain.java", "BodyUseAPI": ["codeu.chat.util.Uuid.parse(java.lang.String)"], "Fixed commit": "2ec9b18be354b3a5165d5996bafe7c84a09c93e6", "Url": "https://api.github.com/repos/shadowfirex/codeu_project_2017", "Date": "2017-06-03T02:19:29Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String outMessage = stdin.readLine(); if (outMessage.equals(\"bye\")) { java.lang.System.exit(1); }else if (outMessage.equals(\"join\")) { sendMessage(\"test from n1\", \"127.0.1.1\", \"5001\"); }else if (outMessage.contains(\"ser\")) { java.lang.String searchQuery = outMessage.split(\" \")[1]; java.util.Random r = new java.util.Random(); Neighbour randomSuccessor = joinedNodes.get(r.nextInt(joinedNodes.size())); java.lang.String searchCommand = ((((((\" SER \" + (ip_address)) + \" \") + (node_port)) + \" \") + searchQuery) + \" \") + (maxHops); searchCommand = (\"00\" + ((searchCommand.length()) + 4)) + searchCommand; sendMessage(searchCommand, randomSuccessor.getIp(), java.lang.String.valueOf(randomSuccessor.getPort())); }else { echo(\"Enter valid command\"); } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8961/buggy-version/Node.src.Node.java", "BodyUseAPI": ["Node.echo(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.System.exit(int)", "Node.sendMessage(java.lang.String,randomSuccessor.getIp(),java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.util.List<Neighbour>.get(int)", "java.lang.String.split(java.lang.String)", "java.lang.String.length()", "java.util.Random.nextInt(joinedNodes.size())", "Neighbour.getPort()", "Node.sendMessage(java.lang.String,java.lang.String,java.lang.String)", "java.util.List<Neighbour>.size()", "Neighbour.getIp()", "java.io.BufferedReader.readLine()", "java.lang.String.equals(java.lang.String)", "java.lang.String.valueOf(randomSuccessor.getPort())"], "Fixed commit": "a2fb3c76730d1b985f8bd7f4bda842c2d0162626", "Url": "https://api.github.com/repos/dinukasal/p2p_fs", "Date": "2017-10-25T16:01:47Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { do { java.lang.System.out.println(\"Please enter number 1\"); java.lang.Double num1 = java.lang.Double.parseDouble(new java.io.BufferedReader(new java.io.InputStreamReader(java.lang.System.in)).readLine()); java.lang.System.out.println(\"Please enter number 2\"); java.lang.Double num2 = java.lang.Double.parseDouble(new java.io.BufferedReader(new java.io.InputStreamReader(java.lang.System.in)).readLine()); java.lang.System.out.println(\"Please enter what operation you want to perform (+, -, /, *)\"); java.lang.String op = new java.io.BufferedReader(new java.io.InputStreamReader(java.lang.System.in)).readLine(); if (op.equals(\"+\")) { java.lang.System.out.println((num1 + num2)); }else if (op.equals(\"-\")) { java.lang.System.out.println((num1 - num2)); }else if (op.equals(\"/\")) { java.lang.System.out.println((num1 / num2)); }else if (op.equals(\"*\")) { java.lang.System.out.println((num1 * num2)); } java.lang.System.out.println(); java.lang.System.out.println(\"Do you want to perform another calculation? (yes/no)\"); yesNo = new java.io.BufferedReader(new java.io.InputStreamReader(java.lang.System.in)).readLine(); } while (yesNo.equals(\"yes\") ); } catch (java.lang.Exception ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1128/buggy-version/src.com.company.Main.java", "BodyUseAPI": ["java.io.PrintStream.println(double)", "java.io.BufferedReader.readLine()", "java.io.PrintStream.println(double)", "java.io.PrintStream.println(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.io.PrintStream.println(double)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.io.PrintStream.println(double)", "java.io.PrintStream.println(java.lang.String)", "java.lang.Double.parseDouble(java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "java.lang.Double.parseDouble(java.lang.String)", "java.io.BufferedReader.readLine()", "java.io.BufferedReader.readLine()", "java.io.BufferedReader.readLine()", "java.lang.String.equals(java.lang.String)", "java.io.PrintStream.println()", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "3c596a7b7ccd39cd13dc8f4f9e5863244f9e5886", "Url": "https://api.github.com/repos/sajadj313/untitled", "Date": "2017-12-05T18:43:54Z"},
{"Line": "=>758", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { setLoggerDefFilePath(availableLoggerDefFiles.values().iterator().next().getAbsolutePath()); } catch (java.lang.Exception e) { loggerDefExists = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6801/buggy-version/src.main.java.com.romraider.Settings.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()", "com.romraider.Settings.setLoggerDefFilePath(java.lang.String)", "java.util.Iterator<java.io.File>.next()", "java.util.Collection<java.io.File>.iterator()", "java.util.Map<java.lang.String, java.io.File>.values()"], "Fixed commit": "dfa709bd7c5f589ebc6af852ae8b8bcac9478eef", "Url": "https://api.github.com/repos/Merp/RomRaider", "Date": "2013-03-09T01:11:51Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return org.apache.commons.lang3.LocaleUtils.toLocale(value); } catch (java.lang.IllegalArgumentException e) { throw new org.primeframework.mvc.parameter.convert.ConversionException(((\"Invalid locale [\" + value) + \"]\"), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4606/buggy-version/src.main.java.org.primeframework.mvc.parameter.convert.converters.LocaleConverter.java", "BodyUseAPI": ["org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)"], "Fixed commit": "0b79fb95c8cc74a576c6ed3f7eae1c7367fe5c1e", "Url": "https://api.github.com/repos/prime-framework/prime-mvc", "Date": "2014-07-02T15:46:15Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { minioning.clientconnection.Login.file.toFile().createNewFile(); java.lang.System.out.println(\"file created\"); } catch (java.io.IOException ex) { java.lang.System.out.println(ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/9131/buggy-version/MinioningServer.ClientConnection.src.main.java.minioning.clientconnection.Login.java", "BodyUseAPI": ["java.nio.file.Path.toFile()", "java.io.PrintStream.println(java.lang.String)", "java.io.File.createNewFile()"], "Fixed commit": "d1588fc69be479887b68a2dbe19f79f537a8e58d", "Url": "https://api.github.com/repos/MadsSMogensen/MinioningServer", "Date": "2017-03-07T13:58:31Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { while (dbCursor.hasNext()) { com.mongodb.DBObject dbObject = dbCursor.next(); if ((kclass) == null) { result.add(dbObject.toMap()); }else { result.add(net.csdn.common.reflect.ReflectHelper.staticMethod(kclass, \"create\", dbObject.toMap())); } } } finally { dbCursor.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2723/buggy-version/src.net.csdn.mongo.Criteria.java", "BodyUseAPI": ["com.mongodb.DBObject.toMap()", "com.mongodb.DBObject.toMap()", "java.util.List.add(dbObject.toMap())", "net.csdn.common.reflect.ReflectHelper.staticMethod(java.lang.Class<net.csdn.mongo.Document>,java.lang.String,dbObject.toMap())", "java.util.List.add(net.csdn.common.reflect.ReflectHelper.staticMethod(kclass, \"create\", dbObject.toMap()))", "com.mongodb.DBCursor.hasNext()", "com.mongodb.DBCursor.next()"], "Fixed commit": "124adbbeb599f9508751f491ad9879fea87b1e62", "Url": "https://api.github.com/repos/allwefantasy/mongomongo", "Date": "2013-01-24T03:17:44Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { xvsm.Space.getCapi().write(new org.mozartspaces.core.Entry(auftag, org.mozartspaces.capi3.FifoCoordinator.newCoordinationData()), xvsm.Space.createOrLookUpContainer(Standort.UNBEARBEITETE_AUFTRAEGE)); } catch (org.mozartspaces.core.MzsCoreException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5772/buggy-version/src.xvsm.GUIDataMangerXVSMImpl.java", "BodyUseAPI": ["xvsm.Space.createOrLookUpContainer(Standort.UNBEARBEITETE_AUFTRAEGE)", "org.mozartspaces.capi3.FifoCoordinator.newCoordinationData()", "xvsm.Space.getCapi()", "xvsm.Space.getCapi().write(org.mozartspaces.core.Entry,xvsm.Space.createOrLookUpContainer(Standort.UNBEARBEITETE_AUFTRAEGE))"], "Fixed commit": "8f65c32dda7e50de1c4720423d70a1a1f2d333b3", "Url": "https://api.github.com/repos/Taper21/SBC", "Date": "2014-01-21T00:37:04Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.util.List<org.mozartspaces.capi3.FifoCoordinator.FifoSelector> selector = new java.util.ArrayList<org.mozartspaces.capi3.FifoCoordinator.FifoSelector>(); selector.add(org.mozartspaces.capi3.FifoCoordinator.newSelector(MzsConstants.Selecting.COUNT_ALL)); java.util.List<xvsm.Auftrag> liste = xvsm.Space.getCapi().read(xvsm.Space.createOrLookUpContainer(Standort.UNBEARBEITETE_AUFTRAEGE), org.mozartspaces.capi3.FifoCoordinator.newSelector(MzsConstants.Selecting.COUNT_ALL), MzsConstants.RequestTimeout.INFINITE, null); java.util.ArrayList<domain.IAuftrag> auftragliste = new java.util.ArrayList<domain.IAuftrag>(); auftragliste.addAll(liste); return auftragliste; } catch (org.mozartspaces.core.MzsCoreException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5772/buggy-version/src.xvsm.GUIDataMangerXVSMImpl.java", "BodyUseAPI": ["java.util.List<org.mozartspaces.capi3.FifoCoordinator.FifoSelector>.add(org.mozartspaces.capi3.FifoCoordinator.newSelector(MzsConstants.Selecting.COUNT_ALL))", "xvsm.Space.getCapi().read(xvsm.Space.createOrLookUpContainer(Standort.UNBEARBEITETE_AUFTRAEGE),org.mozartspaces.capi3.FifoCoordinator.newSelector(MzsConstants.Selecting.COUNT_ALL),MzsConstants.RequestTimeout.INFINITE,<nulltype>)", "java.util.ArrayList<domain.IAuftrag>.addAll(java.util.List<xvsm.Auftrag>)", "xvsm.Space.createOrLookUpContainer(Standort.UNBEARBEITETE_AUFTRAEGE)", "org.mozartspaces.capi3.FifoCoordinator.newSelector(MzsConstants.Selecting.COUNT_ALL)", "org.mozartspaces.capi3.FifoCoordinator.newSelector(MzsConstants.Selecting.COUNT_ALL)", "xvsm.Space.getCapi()"], "Fixed commit": "8f65c32dda7e50de1c4720423d70a1a1f2d333b3", "Url": "https://api.github.com/repos/Taper21/SBC", "Date": "2014-01-21T00:37:04Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { net.minecraft.block.state.IBlockState state = block.getStateFromMeta(itemStack.getItemDamage()); str = java.lang.String.format(\"%s, %s\", itemStack.getDisplayName(), state.toString()); NameWakander.NameWakander.blockstatesList.add(str); } catch (java.lang.IllegalArgumentException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/621/buggy-version/java.NameWakander.NameWakander.java", "BodyUseAPI": ["net.minecraft.block.Block.getStateFromMeta(itemStack.getItemDamage())", "net.minecraft.block.state.IBlockState.toString()", "net.minecraft.item.ItemStack.getItemDamage()", "java.util.List<java.lang.String>.add(java.lang.String)", "java.lang.String.format(java.lang.String,itemStack.getDisplayName(),state.toString())", "net.minecraft.item.ItemStack.getDisplayName()"], "Fixed commit": "32341b2f6bfc506c69cb3358e72f6feeecaaf5bc", "Url": "https://api.github.com/repos/aksource/NameWakander", "Date": "2015-11-23T08:39:43Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.util.Scanner console = new java.util.Scanner(f); for (int i = 0; i < n; i++) { console.next(); } return console.next(); } catch (java.util.NoSuchElementException g) { return \"ERROR\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4301/buggy-version/Phrase.java", "BodyUseAPI": ["java.util.Scanner.next()", "java.util.Scanner.next()"], "Fixed commit": "02ac3181157c1a73bef9168540291ba33d7a81da", "Url": "https://api.github.com/repos/NamesAreAPain/Cowway2", "Date": "2016-01-12T01:42:47Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.content.Intent intent = com.magiclive.WallPaperUtils.createLiveWallpaperIntent(context.getPackageName(), com.magiclive.service.TransparentLiveWallPaperService.class.getName()); if (context instanceof android.app.Activity) { ((android.app.Activity) (context)).startActivityForResult(intent, com.magiclive.service.TransparentLiveWallPaperService.REQUEST_TRANSPERENT_CODE); }else { context.startActivity(intent); } } catch (java.lang.Throwable e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1103/buggy-version/app.src.main.java.com.magiclive.service.TransparentLiveWallPaperService.java", "BodyUseAPI": ["java.lang.Class.getName()", "com.magiclive.WallPaperUtils.createLiveWallpaperIntent(context.getPackageName(),java.lang.String)", "android.content.Context.startActivity(android.content.Intent)", "android.content.Context.getPackageName()", "android.content.Context.startActivityForResult(android.content.Intent,int)"], "Fixed commit": "6a5d8ec13d7746d0886578d6f22a6076fdeb6cb3", "Url": "https://api.github.com/repos/LIYANJU2015/MagicLiveWallPaper", "Date": "2017-06-14T03:02:36Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mContext.startActivity(com.magiclive.util.IntentUtils.getShareTextIntent(getString(R.string.share_content))); } catch (java.lang.Throwable e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1103/buggy-version/app.src.main.java.com.magiclive.ui.MainActivity.java", "BodyUseAPI": ["com.magiclive.ui.MainActivity.getString(R.string.share_content)", "android.content.Context.startActivity(com.magiclive.util.IntentUtils.getShareTextIntent(getString(R.string.share_content)))", "com.magiclive.util.IntentUtils.getShareTextIntent(getString(R.string.share_content))"], "Fixed commit": "6a5d8ec13d7746d0886578d6f22a6076fdeb6cb3", "Url": "https://api.github.com/repos/LIYANJU2015/MagicLiveWallPaper", "Date": "2017-06-14T03:02:36Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { db.update(designDoc); } catch (org.ektorp.support.UpdateConflictException e) { org.ektorp.support.CouchDbRepositorySupport.log.warn(\"Update conflict occurred when trying to update design document: {}\", designDoc.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3506/buggy-version/org.ektorp.src.main.java.org.ektorp.support.CouchDbRepositorySupport.java", "BodyUseAPI": ["org.ektorp.support.CouchDbConnector.update(org.ektorp.support.DesignDocument)"], "Fixed commit": "ef78c346a30cf8f200dc8ef87f63c36944433747", "Url": "https://api.github.com/repos/helun/Ektorp", "Date": "2011-10-16T09:41:35Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.linkinpark213.compiler.analyzer.lexical.tokens.Token token = tokenQueue.get(tokenQueue.getFarthestTokenNum()); throw new com.linkinpark213.compiler.error.syntactical.SyntaxError(token.getRow(), token.getColumn(), (((\"Expected \" + (tokenQueue.getFarthestExpectation())) + \", but found \") + (token.toString()))); } catch (java.lang.IndexOutOfBoundsException e) { com.linkinpark213.compiler.analyzer.lexical.tokens.Token token = tokenQueue.get(((tokenQueue.getFarthestTokenNum()) - 1)); throw new com.linkinpark213.compiler.error.syntactical.SyntaxError(token.getRow(), token.getColumn(), ((\"Expected \" + (tokenQueue.getFarthestExpectation())) + \", but code ended\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/676/buggy-version/src.com.linkinpark213.compiler.analyzer.syntactic.SyntacticalAnalyzer.java", "BodyUseAPI": ["com.linkinpark213.compiler.analyzer.lexical.tokens.Token.getRow()", "com.linkinpark213.compiler.analyzer.syntactic.TokenQueue.get(tokenQueue.getFarthestTokenNum())", "com.linkinpark213.compiler.analyzer.syntactic.TokenQueue.getFarthestTokenNum()", "com.linkinpark213.compiler.analyzer.lexical.tokens.Token.getColumn()", "com.linkinpark213.compiler.analyzer.syntactic.TokenQueue.getFarthestExpectation()", "com.linkinpark213.compiler.analyzer.lexical.tokens.Token.toString()"], "Fixed commit": "9a7d3afa61f92a9507fe5a30671aa7f8ccc89b1e", "Url": "https://api.github.com/repos/linkinpark213/coq-compiler", "Date": "2017-07-17T11:21:28Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { courseList.set(index, new mathsmate.Course(titleField.getText(), addressField.getText(), urlField.getText(), java.lang.Integer.parseInt(priceField.getText()), java.lang.Integer.parseInt(pointsField.getText()), java.lang.Integer.parseInt(levelField.getText()), java.lang.Integer.parseInt(yearsField.getText()))); statusLbl.setText(\"<html>Status: <span style=\\\"color:#00FF00\\\">Added Record</span></html>\"); awaitingRecord = false; } catch (java.lang.NumberFormatException e) { java.lang.System.out.println((\"Error: \" + e)); statusLbl.setText(\"<html>Status: <span style=\\\"color:#FF0000\\\">Number Error</span></html>\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7306/buggy-version/src.mathsmate.CourseFinderAdmin.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "javax.swing.JLabel.setText(java.lang.String)", "javax.swing.JTextField.getText()", "java.util.ArrayList<mathsmate.Course>.set(int,mathsmate.Course)", "java.lang.Integer.parseInt(java.lang.String)", "javax.swing.JTextField.getText()", "javax.swing.JTextField.getText()", "javax.swing.JTextField.getText()", "javax.swing.JTextField.getText()", "java.lang.Integer.parseInt(java.lang.String)", "javax.swing.JTextField.getText()", "javax.swing.JTextField.getText()"], "Fixed commit": "c27ca4b02e2543e9436cc04f11c416a3e0cb3896", "Url": "https://api.github.com/repos/MathsMate/MathsMate", "Date": "2015-04-13T11:38:36Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ch.uzh.csg.mbps.client.util.ClientController.setUser(response.getReadAccountTO().getUserAccount(), true); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/138/buggy-version/client.src.ch.uzh.csg.mbps.client.LoginActivity.java", "BodyUseAPI": ["response.getReadAccountTO().getUserAccount()", "ch.uzh.csg.mbps.client.util.ClientController.setUser(response.getReadAccountTO().getUserAccount(),boolean)", "ch.uzh.csg.mbps.responseobject.CustomResponseObject.getReadAccountTO()"], "Fixed commit": "aa27563eb94304622a54b665f5c62a7302e2c2b7", "Url": "https://api.github.com/repos/MBPS-Project/mbps_client", "Date": "2014-06-11T21:02:39Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((this.getId(name)) == ((java.lang.Integer) (def))) { defaultGroup = name; return defaultGroup.equals(name); } } catch (java.sql.SQLException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8408/buggy-version/src.main.java.com.nijiko.data.SqlGroupStorage.java", "BodyUseAPI": ["com.nijiko.data.SqlGroupStorage.getId(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "ae6089aaca1bcc92c212102a96c4d0caada30053", "Url": "https://api.github.com/repos/dotblank/PermissionsSql", "Date": "2011-06-13T21:36:33Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { channel.getPipeline().getContext(com.ning.http.client.providers.netty.NettyAsyncHttpProvider.class).setAttachment(new com.ning.http.client.providers.netty.NettyAsyncHttpProvider.DiscardEvent()); channel.close(); } catch (java.lang.Throwable t) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5326/buggy-version/providers.netty.src.main.java.com.ning.http.client.providers.netty.NettyResponseFuture.java", "BodyUseAPI": ["channel.getPipeline().getContext(com.ning.http.client.providers.netty.NettyAsyncHttpProvider.class).setAttachment(com.ning.http.client.providers.netty.NettyAsyncHttpProvider.DiscardEvent)", "channel.getPipeline().getContext(java.lang.Class)", "org.jboss.netty.channel.Channel.getPipeline()", "org.jboss.netty.channel.Channel.close()"], "Fixed commit": "3e19b9c790333efee0987ed56b5b850c2ae25f41", "Url": "https://api.github.com/repos/softprops/async-http-client", "Date": "2012-11-28T10:17:05Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mvi = catClient.getVersionInfo(new us.kbase.catalog.SelectModuleVersionParams().withModuleName(moduleName).withGitCommitHash(imageVersion)); } catch (java.lang.Exception ex) { throw new java.lang.IllegalStateException((((\"Error retrieving module version info about image \" + moduleName) + \" with version \") + imageVersion), ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3138/buggy-version/src.us.kbase.narrativejobservice.AweClientDockerJobScript.java", "BodyUseAPI": ["us.kbase.catalog.CatalogClient.getVersionInfo(new us.kbase.catalog.SelectModuleVersionParams().withModuleName(moduleName).withGitCommitHash(imageVersion))", "new us.kbase.catalog.SelectModuleVersionParams().withModuleName(moduleName).withGitCommitHash(java.lang.String)", "us.kbase.catalog.SelectModuleVersionParams.withModuleName(java.lang.String)"], "Fixed commit": "3fcb658207db0131d2ea1c803635cffd4cd8814d", "Url": "https://api.github.com/repos/kbase/njs_wrapper", "Date": "2016-01-19T20:04:11Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return type.equals(\"Parking lot\") ? com.jerry.network.POI.Type.ParkingLot : com.jerry.network.POI.Type.valueOf(type); } catch (java.lang.IllegalArgumentException e) { throw new java.lang.RuntimeException(\"Invalid Input in Activity Domain!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7291/buggy-version/web.src.main.java.com.jerry.main.action.Interface.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "com.jerry.network.POI.Type.valueOf(java.lang.String)"], "Fixed commit": "83160f38678de6dfe2b8098f2518b8772356f5ed", "Url": "https://api.github.com/repos/linPATHokun528/ASC", "Date": "2017-05-06T15:05:36Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (tasks == null) { tasks = getClient().blockVolumes().create(create); }else { tasks.getTasks().addAll(getClient().blockVolumes().create(create).getTasks()); } } catch (com.emc.vipr.client.exceptions.ServiceErrorException ex) { logError(getMessage(\"CreateMultipleBlockVolumes.getTask.error\", create.getName(), ex.getDetailedMessage())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1350/buggy-version/vipr-portal.com.iwave.isa.content.src.java.com.emc.sa.service.vipr.block.tasks.CreateMultipleBlockVolumes.java", "BodyUseAPI": ["getClient().blockVolumes().create(com.emc.storageos.model.block.VolumeCreate)", "com.emc.sa.service.vipr.block.tasks.CreateMultipleBlockVolumes.getClient()", "com.emc.vipr.client.Tasks<com.emc.storageos.model.block.VolumeRestRep>.getTasks()", "com.emc.sa.service.vipr.block.tasks.CreateMultipleBlockVolumes.getClient()", "getClient().blockVolumes().create(com.emc.storageos.model.block.VolumeCreate)", "getClient().blockVolumes()", "getClient().blockVolumes().create(create).getTasks()", "tasks.getTasks().addAll(getClient().blockVolumes().create(create).getTasks())", "getClient().blockVolumes()"], "Fixed commit": "be39e73c9ce0b9290d40c3735287e02bcaa9ff56", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-12-08T18:07:33Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String msg = \"Hello\"; java.net.InetAddress group = deviceIpAddress; java.net.MulticastSocket s = new java.net.MulticastSocket(6789); s.joinGroup(group); java.net.DatagramPacket hi = new java.net.DatagramPacket(msg.getBytes(), msg.length(), group, 6789); s.send(hi); } catch (java.io.IOException e) { e.printStackTrace(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/126/buggy-version/src.android.ZeroConf.java", "BodyUseAPI": ["java.net.MulticastSocket.send(java.net.DatagramPacket)", "java.lang.String.length()", "java.lang.String.getBytes()", "java.net.MulticastSocket.joinGroup(java.net.InetAddress)"], "Fixed commit": "4a259fe47746295f42b99f42b402e57e30c50fde", "Url": "https://api.github.com/repos/sorenjuul/ZeroConf", "Date": "2014-04-24T11:48:49Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { stream = game.Utils.class.getResourceAsStream((\"/resources/images/\" + name)); return javax.imageio.ImageIO.read(stream); } catch (java.lang.Exception e) { throw e; } finally { if (stream != null) stream.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5731/buggy-version/src.game.Utils.java", "BodyUseAPI": ["javax.imageio.ImageIO.read(java.io.InputStream)", "java.lang.Class.getResourceAsStream(java.lang.String)"], "Fixed commit": "a9a3f70f0dc99187a7842d26908d186f2d662564", "Url": "https://api.github.com/repos/teichtier/doubledash", "Date": "2015-12-06T14:00:46Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { Common.LICENSE_PATH = java.nio.file.Paths.get(Common.PROJECT_PATH, \"GroupDocs.Conversion.Java.lic\").toString(); com.groupdocs.conversion.Common.applyLicense(Common.LICENSE_PATH); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8108/buggy-version/src.main.java.com.groupdocs.conversion.Main.java", "BodyUseAPI": ["java.nio.file.Path.toString()", "java.nio.file.Paths.get(Common.PROJECT_PATH,java.lang.String)", "com.groupdocs.conversion.Common.applyLicense(Common.LICENSE_PATH)"], "Fixed commit": "e46462cca9c02a4b33c9857070631fa910174fb2", "Url": "https://api.github.com/repos/groupdocs-archive/groupdocs-conversion-java-sample", "Date": "2016-10-04T12:20:48Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (((currentCreature.getClass()) != (org.bukkit.craftbukkit.entity.CraftPlayer.class)) && ((currentCreature.getClass()) != (org.bukkit.craftbukkit.entity.CraftItem.class))) { ((org.bukkit.entity.Creature) (currentCreature)).setTarget(cow); } } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/97/buggy-version/src.aor.SimplePlugin.Spells.DecoySpell.java", "BodyUseAPI": ["org.bukkit.entity.Entity.getClass()", "org.bukkit.entity.Entity.getClass()", "org.bukkit.entity.Entity.setTarget(org.bukkit.entity.LivingEntity)"], "Fixed commit": "3533e18e6ab386833eeeaf142b8ca9f87522aa8f", "Url": "https://api.github.com/repos/Hypersonic/SimplePlugin", "Date": "2011-06-09T14:49:03Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.forgeessentials.playerlogger.FilterConfig.globalConfig.parse(null); } catch (net.minecraft.command.CommandException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7352/buggy-version/src.main.java.com.forgeessentials.playerlogger.FilterConfig.java", "BodyUseAPI": ["com.forgeessentials.playerlogger.FilterConfig.parse(<nulltype>)"], "Fixed commit": "69655fb700be73f74870f5ded2649fa4eef24d6c", "Url": "https://api.github.com/repos/ForgeEssentials/ForgeEssentials", "Date": "2017-04-21T02:15:13Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { events.get(event).remove(o); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/452/buggy-version/nars_java.nars.core.EventEmitter.java", "BodyUseAPI": ["java.util.Map<java.lang.Class<?>, java.util.List<nars.core.EventEmitter.EventObserver>>.get(java.lang.Class<?>)", "java.util.List<nars.core.EventEmitter.EventObserver>.remove(nars.core.EventEmitter.EventObserver)"], "Fixed commit": "e4f1cc933e6d415f58fdce3da4cb20c1ca2cac1d", "Url": "https://api.github.com/repos/opennars/opennars", "Date": "2015-05-01T02:53:25Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String url = \"https://gist.githubusercontent.com/Maximvdw/9bfe721f9efc7e9f1eca9f45234cdafc/raw/81becb5b0807dcf4d03e373150fb7cf1044221f6\"; java.io.File file = be.maximvdw.qaplugin.QAPlugin.getInstance().getFile(); java.io.InputStream fis = new java.io.FileInputStream(file); byte[] buffer = new byte[1024]; java.security.MessageDigest complete = java.security.MessageDigest.getInstance(\"MD5\"); int numRead; do { numRead = fis.read(buffer); if (numRead > 0) { complete.update(buffer, 0, numRead); } } while (numRead != (-1) ); fis.close(); java.lang.StringBuffer hexString = new java.lang.StringBuffer(); byte[] hash = complete.digest(); for (int i = 0; i < (hash.length); i++) { if ((255 & (hash[i])) < 16) { hexString.append((\"0\" + (java.lang.Integer.toHexString((255 & (hash[i])))))); }else { hexString.append(java.lang.Integer.toHexString((255 & (hash[i])))); } } java.lang.String hashStr = hexString.toString().trim(); java.net.URL urlObj = new java.net.URL(url); java.net.URLConnection conn = urlObj.openConnection(); java.io.BufferedReader in = new java.io.BufferedReader(new java.io.InputStreamReader(conn.getInputStream(), \"UTF-8\")); java.lang.String inputLine; java.lang.StringBuilder a = new java.lang.StringBuilder(); while ((inputLine = in.readLine()) != null) a.append((inputLine + \"\\n\")); in.close(); java.lang.String source = a.toString(); java.lang.String[] lines = source.split(\"\\\\n\"); for (java.lang.String line : lines) { if (line.trim().equalsIgnoreCase(hashStr)) { info(\"Incorrect QAPlugin version!\"); org.bukkit.Bukkit.getPluginManager().disablePlugin(be.maximvdw.qaplugin.QAPlugin.getInstance()); break; } } } catch (java.lang.Exception ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1640/buggy-version/src.main.java.be.maximvdw.qaplugin.modules.UrbanDictionaryModule.java", "BodyUseAPI": ["java.io.BufferedReader.readLine()", "java.lang.Integer.toHexString(int)", "be.maximvdw.qaplugin.QAPlugin.getInstance().getFile()", "java.lang.StringBuffer.append(java.lang.String)", "java.lang.String.trim()", "java.security.MessageDigest.update(byte[],int,int)", "be.maximvdw.qaplugin.QAPlugin.getInstance()", "org.bukkit.Bukkit.getPluginManager().disablePlugin(be.maximvdw.qaplugin.QAPlugin.getInstance())", "java.lang.StringBuffer.toString()", "java.io.InputStream.close()", "java.security.MessageDigest.getInstance(java.lang.String)", "be.maximvdw.qaplugin.QAPlugin.getInstance()", "java.lang.StringBuilder.append(java.lang.String)", "java.security.MessageDigest.digest()", "java.net.URL.openConnection()", "java.lang.StringBuilder.toString()", "java.io.BufferedReader.close()", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.trim()", "java.lang.StringBuffer.append(java.lang.String)", "org.bukkit.Bukkit.getPluginManager()", "java.io.InputStream.read(byte[])", "java.lang.Integer.toHexString(int)", "java.lang.String.split(java.lang.String)", "be.maximvdw.qaplugin.modules.UrbanDictionaryModule.info(java.lang.String)", "java.net.URLConnection.getInputStream()"], "Fixed commit": "d05d07a57e50cdab703f8f90d583144d110cf47b", "Url": "https://api.github.com/repos/Maximvdw/QAPlugin-module-urbandictionary", "Date": "2017-02-12T13:05:31Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { final long queueTime = java.lang.Long.valueOf(queueTimeString); final java.lang.Long startTimeMillis = java.lang.Long.valueOf(event.customAttributes.get(\"startTimeMillis\")); attributes.put(\"timeElapsedToStart\", java.lang.Long.toString((startTimeMillis - queueTime))); } catch (java.lang.NumberFormatException nfe) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6218/buggy-version/src.main.java.com.forter.monitoring.Monitor.java", "BodyUseAPI": ["event.customAttributes.get(java.lang.String)", "java.lang.Long.valueOf(event.customAttributes.get(\"startTimeMillis\"))", "java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.lang.Long.valueOf(java.lang.String)", "java.lang.Long.toString(long)"], "Fixed commit": "d5aa3146d283595cff15b6da5020993760143ada", "Url": "https://api.github.com/repos/forter/riemann-storm-monitor", "Date": "2015-03-20T13:09:45Z"},
{"Line": "=>538", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((s3Client.getObject(buildBucketName, cancelledRequestedPath)) != null) { build.setStatus(Build.Status.CANCEL_REQUESTED); return true; } } catch (java.lang.Exception e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2542/buggy-version/data-service.src.main.java.org.ihtsdo.buildcloud.dao.BuildDAOImpl.java", "BodyUseAPI": ["org.ihtsdo.otf.dao.s3.S3Client.getObject(java.lang.String,java.lang.String)", "org.ihtsdo.buildcloud.entity.Build.setStatus(Build.Status.CANCEL_REQUESTED)"], "Fixed commit": "5b733e4f058c054acd2ef0139ad669e6ea5205ee", "Url": "https://api.github.com/repos/QuyenLy87/snomed-release-service", "Date": "2017-08-28T10:27:20Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { object = object1.getJSONObject(\"player\"); } catch (org.json.JSONException e) { try { tmpmsg.editMessage(\"Pablo couldn't find any Hypixel Info on that player!\").complete(false); } catch (net.dv8tion.jda.core.exceptions.RateLimitedException e1) { e1.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/345/buggy-version/src.me.Logicism.PabloBot.Hypixel.Commands.PlayerInfoCommand.java", "BodyUseAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Fixed commit": "c4265eba645715f62ad06cbe0d3b16de7f8d198a", "Url": "https://api.github.com/repos/PabloBotOfficial/PabloBot-Hypixel", "Date": "2017-11-05T12:12:18Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { long id = args.getLong(0); com.iiunknown.cordova.xinge.XGPushConfig.setAccessId(this.cordova.getActivity(), id); } catch (java.lang.Exception e) { java.lang.System.err.println((\"Exception: \" + (e.getMessage()))); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7308/buggy-version/src.android.Xinge.java", "BodyUseAPI": ["com.iiunknown.cordova.xinge.XGPushConfig.setAccessId(this.cordova.getActivity(),long)", "this.cordova.getActivity()", "org.json.JSONArray.getLong(int)"], "Fixed commit": "9588a048f87f0386a9b99076a25c61a032158663", "Url": "https://api.github.com/repos/iiunknown/cordova.xinge", "Date": "2014-08-04T02:31:08Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { sb.setLength(((sb.length()) - 1)); } catch (java.lang.StringIndexOutOfBoundsException e) { sb.setLength(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3122/buggy-version/app.src.main.java.edu.uml.android.keepthegrade.Chart.java", "BodyUseAPI": ["java.lang.StringBuilder.setLength(int)", "java.lang.StringBuilder.length()"], "Fixed commit": "19de8ecac51b476eedb79f807f6a1b3cf986fe68", "Url": "https://api.github.com/repos/uml-app1-2016/Keep-the-Grade", "Date": "2016-12-03T23:13:43Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { dataStillAvail = new byte[(data.length) - packetLen]; dataStillAvail = net.kennux.cwinspect.packets.helpers.ByteUtils.getBytesRange(data, packetLen, (packetLength - packetLen)); data = net.kennux.cwinspect.packets.helpers.ByteUtils.getBytesRange(data, 0, packetLen); } catch (java.lang.Exception e) { java.lang.System.out.println((\"Error in packet class: \" + (packet.getClass().getSimpleName()))); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7768/buggy-version/src.net.kennux.cwinspect.networking.SocketProxy.java", "BodyUseAPI": ["net.kennux.cwinspect.packets.helpers.ByteUtils.getBytesRange(byte[],int,int)", "net.kennux.cwinspect.packets.helpers.ByteUtils.getBytesRange(byte[],int,int)"], "Fixed commit": "476f1f5d009d2899884305378c1792fbf56e13bf", "Url": "https://api.github.com/repos/kennux/CWInspect", "Date": "2013-07-13T19:51:15Z"},
{"Line": "=>394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { dataStillAvail = new byte[(data.length) - packetLen]; dataStillAvail = net.kennux.cwinspect.packets.helpers.ByteUtils.getBytesRange(data, packetLen, (packetLength - packetLen)); data = net.kennux.cwinspect.packets.helpers.ByteUtils.getBytesRange(data, 0, packetLen); } catch (java.lang.Exception e) { java.lang.System.out.println((\"Error in packet class: \" + (packet.getClass().getSimpleName()))); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7768/buggy-version/src.net.kennux.cwinspect.networking.SocketProxy.java", "BodyUseAPI": ["net.kennux.cwinspect.packets.helpers.ByteUtils.getBytesRange(byte[],int,int)", "net.kennux.cwinspect.packets.helpers.ByteUtils.getBytesRange(byte[],int,int)"], "Fixed commit": "476f1f5d009d2899884305378c1792fbf56e13bf", "Url": "https://api.github.com/repos/kennux/CWInspect", "Date": "2013-07-13T19:51:15Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { projects = gitlab.getProjectsViaSudo(user); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/9036/buggy-version/src.main.java.conn.Conn.java", "BodyUseAPI": ["org.gitlab.api.GitlabAPI.getProjectsViaSudo(org.gitlab.api.models.GitlabUser)"], "Fixed commit": "05ce3d0346f11e4104276cad42ca9428801e99ff", "Url": "https://api.github.com/repos/GJen123/selab245_gitlab", "Date": "2017-04-23T19:14:47Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { gitlabUser.setId(user.getGitLabId()); projects = gitlab.getProjectsViaSudo(gitlabUser); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/9036/buggy-version/src.main.java.conn.Conn.java", "BodyUseAPI": ["data.User.getGitLabId()", "org.gitlab.api.GitlabAPI.getProjectsViaSudo(org.gitlab.api.models.GitlabUser)", "org.gitlab.api.models.GitlabUser.setId(user.getGitLabId())"], "Fixed commit": "05ce3d0346f11e4104276cad42ca9428801e99ff", "Url": "https://api.github.com/repos/GJen123/selab245_gitlab", "Date": "2017-04-23T19:14:47Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { webapp = azure.webApps().getByResourceGroup(app.resourceGroup(), app.name()); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1362/buggy-version/PluginsAndFeatures.azure-toolkit-for-eclipse.com.microsoft.azuretools.container.src.com.microsoft.azuretools.container.utils.WebAppOnLinuxUtil.java", "BodyUseAPI": ["com.microsoft.azure.management.appservice.implementation.SiteInner.name()", "azure.webApps().getByResourceGroup(app.resourceGroup(),app.name())", "com.microsoft.azure.management.appservice.implementation.SiteInner.resourceGroup()", "com.microsoft.azure.management.Azure.webApps()"], "Fixed commit": "b5a623296f2721e44d5b86764a3b7a02ecf3a478", "Url": "https://api.github.com/repos/wezhang/azure-tools-for-java", "Date": "2017-07-10T03:25:05Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { propertyDemolitionService.saveProperty(oldProperty, property, status, approvalComent, workFlowAction, approvalPosition, org.egov.ptis.web.controller.demolition.DEMOLITION); } catch (org.egov.ptis.exceptions.TaxCalculatorExeption e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4611/buggy-version/egov.egov-ptisweb.src.main.java.org.egov.ptis.web.controller.demolition.UpdatePropertyDemolitionController.java", "BodyUseAPI": ["org.egov.ptis.domain.service.demolition.PropertyDemolitionService.saveProperty(org.egov.ptis.domain.entity.property.Property,org.egov.ptis.domain.entity.property.Property,java.lang.Character,java.lang.String,java.lang.String,java.lang.Long,org.egov.ptis.web.controller.demolition.DEMOLITION)"], "Fixed commit": "91b7af3db466705cbe87e51479d5746a062552f4", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2015-11-27T15:12:26Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { propertyDemolitionService.saveProperty(oldProperty, property, status, approvalComent, workFlowAction, approvalPosition, org.egov.ptis.web.controller.demolition.DEMOLITION); } catch (org.egov.ptis.exceptions.TaxCalculatorExeption e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4611/buggy-version/egov.egov-ptisweb.src.main.java.org.egov.ptis.web.controller.demolition.PropertyDemolitionController.java", "BodyUseAPI": ["org.egov.ptis.domain.service.demolition.PropertyDemolitionService.saveProperty(org.egov.ptis.domain.entity.property.PropertyImpl,org.egov.ptis.domain.entity.property.Property,java.lang.Character,java.lang.String,java.lang.String,java.lang.Long,org.egov.ptis.web.controller.demolition.DEMOLITION)"], "Fixed commit": "91b7af3db466705cbe87e51479d5746a062552f4", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2015-11-27T15:12:26Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { country = getCountry(com.mg.ip.core.Util.getIpByteArrayFromString(ip)); } catch (java.lang.Exception e) { e.getMessage(); } finally { return country; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3535/buggy-version/core-all.ip-core.src.main.java.com.mg.ip.core.IPSeeker.java", "BodyUseAPI": ["com.mg.ip.core.Util.getIpByteArrayFromString(java.lang.String)", "com.mg.ip.core.IPSeeker.getCountry(com.mg.ip.core.Util.getIpByteArrayFromString(ip))"], "Fixed commit": "6f947c64a84783ed79a2590a4b370adf3bd8858f", "Url": "https://api.github.com/repos/BennieSun/utils-core", "Date": "2017-09-20T13:33:40Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((deserializer) != null) { result = getBeanObjByDeserializer(reader, resClazz, deserializer); }else { result = getBeanObj(reader, resClazz); } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3742/buggy-version/app.src.main.java.com.heaven.core.net.nettask.GsonHttpTask.java", "BodyUseAPI": ["com.heaven.core.net.nettask.GsonHttpTask<T>.getBeanObj(java.io.Reader,java.lang.Class<T>)", "com.heaven.core.net.nettask.GsonHttpTask<T>.getBeanObjByDeserializer(java.io.Reader,java.lang.Class<T>,com.google.gson.JsonDeserializer<T>)"], "Fixed commit": "19b3878f01c4d9900f2c66a698f4150f86a35f50", "Url": "https://api.github.com/repos/heavenisme/BaseCore", "Date": "2016-12-30T02:19:31Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { capabilitiesLock.writeLock().lock(); endpointUrl = request.getHttpRequest().getRequestURL().toString(); for (java.util.Map.Entry<java.lang.String, java.lang.String> op : capabilities.getGetServers().entrySet()) capabilities.getGetServers().put(op.getKey(), endpointUrl); for (java.util.Map.Entry<java.lang.String, java.lang.String> op : capabilities.getPostServers().entrySet()) capabilities.getPostServers().put(op.getKey(), endpointUrl); } finally { capabilitiesLock.writeLock().unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3744/buggy-version/sensorhub-service-swe.src.main.java.org.sensorhub.impl.service.sps.SPSServlet.java", "BodyUseAPI": ["org.sensorhub.impl.service.sps.SPSServiceCapabilities.getPostServers()", "java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()", "java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()", "capabilities.getGetServers().put(java.lang.String,java.lang.String)", "org.sensorhub.impl.service.sps.SPSServiceCapabilities.getGetServers()", "capabilities.getPostServers().put(java.lang.String,java.lang.String)", "org.sensorhub.impl.service.sps.SPSServiceCapabilities.getGetServers()", "org.sensorhub.impl.service.sps.SPSServiceCapabilities.getPostServers()", "capabilities.getPostServers().entrySet()", "java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.lock()", "capabilities.getGetServers().entrySet()", "request.getHttpRequest().getRequestURL()", "org.vast.ows.GetCapabilitiesRequest.getHttpRequest()", "request.getHttpRequest().getRequestURL().toString()", "java.util.concurrent.locks.ReentrantReadWriteLock.writeLock()"], "Fixed commit": "327601f568569f3df9b19827f06fc53b7674b2d3", "Url": "https://api.github.com/repos/opensensorhub/osh-core", "Date": "2016-07-05T09:54:38Z"},
{"Line": "=>816", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { environment = ((io.subutai.core.environment.impl.entity.EnvironmentImpl) (loadEnvironment(environmentId))); } catch (io.subutai.common.environment.EnvironmentNotFoundException e) { environment = findRemoteEnvironment(environmentId); if (environment == null) { throw e; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/9221/buggy-version/management.server.core.environment-manager.environment-manager-impl.src.main.java.io.subutai.core.environment.impl.EnvironmentManagerImpl.java", "BodyUseAPI": ["io.subutai.core.environment.impl.EnvironmentManagerImpl.loadEnvironment(java.lang.String)"], "Fixed commit": "fed777af45d3340a065b10f0aeff8a600bf70ba3", "Url": "https://api.github.com/repos/subutai-io/peer-os", "Date": "2016-11-21T17:43:51Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mCamera.autoFocus(autoFocusCB); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5052/buggy-version/android.src.main.java.com.ddeath.ZebraScanner.ZebraScannerView.java", "BodyUseAPI": ["android.hardware.Camera.autoFocus(Camera.AutoFocusCallback)"], "Fixed commit": "92daf974d1538392cd669d0420ff06152b631a70", "Url": "https://api.github.com/repos/ddeath/react-native-zebra-scanner", "Date": "2017-10-18T07:37:01Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { s = board.get(p); } catch (java.lang.NullPointerException e) { throw new com.checkerbot.checkerbot.InvalidMoveException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2474/buggy-version/app.src.main.java.com.checkerbot.checkerbot.Game.java", "BodyUseAPI": ["com.checkerbot.checkerbot.Board.get(android.graphics.Point)"], "Fixed commit": "3fb9ec82446241db917fdea6a4ae2cfd19c873fe", "Url": "https://api.github.com/repos/THS-CompSci/Project_CheckerBot", "Date": "2016-04-14T18:36:11Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { logic(boardView.getPoint()); } catch (com.checkerbot.checkerbot.InvalidMoveException e) { android.widget.Toast.makeText(this, \"Invalid Move\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2474/buggy-version/app.src.main.java.com.checkerbot.checkerbot.Game.java", "BodyUseAPI": ["com.checkerbot.checkerbot.Game.logic(boardView.getPoint())", "com.checkerbot.checkerbot.BoardView.getPoint()"], "Fixed commit": "3fb9ec82446241db917fdea6a4ae2cfd19c873fe", "Url": "https://api.github.com/repos/THS-CompSci/Project_CheckerBot", "Date": "2016-04-14T18:36:11Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(10); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8235/buggy-version/src.gsingh.learnkirtan.keys.Key.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "37f04fee153a5baf0545d2301d1d7fd904a9f95d", "Url": "https://api.github.com/repos/gsingh93/Learn-Kirtan", "Date": "2012-04-01T00:33:02Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { value = value.substring((index - 1), ((index - 1) + count)); } catch (java.lang.ArrayIndexOutOfBoundsException e) { value = value.substring(index, (index + count)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6254/buggy-version/src.main.java.org.dvare.expression.operation.arithmetic.Substring.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "b0aa94b1bcdffd9442b99664cbb11a8261fc90ab", "Url": "https://api.github.com/repos/hammadirshad/dvare-framework", "Date": "2016-10-20T14:32:33Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { securityContext = this.auth.acceptSecurityToken(connectionId, tokenBuffer, securityPackage); } catch (final waffle.apache.Win32Exception e) { this.log.warn(\"error logging in user: {}\", e.getMessage()); this.log.trace(\"{}\", e); sendUnauthorized(response); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7458/buggy-version/Source.JNA.waffle-tomcat5.src.main.java.waffle.apache.NegotiateAuthenticator.java", "BodyUseAPI": ["this.auth.acceptSecurityToken(java.lang.String,byte[],java.lang.String)"], "Fixed commit": "f58a3ff5fd6451c1c7c289b4f55265788392a975", "Url": "https://api.github.com/repos/hazendaz/waffle", "Date": "2015-05-13T02:34:13Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { firebaseApp = com.google.firebase.FirebaseApp.getInstance(); } catch (java.lang.Exception instanceException) { try { firebaseApp = com.google.firebase.FirebaseApp.initializeApp(context, new com.google.firebase.FirebaseOptions.Builder().setApplicationId(context.getPackageName()).setGcmSenderId(com.cube.storm.MessageSettings.getInstance().getProjectNumber()).build()); } catch (java.lang.Exception initialiseException) { instanceException.printStackTrace(); initialiseException.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8332/buggy-version/library.src.main.java.com.cube.storm.MessageSettings.java", "BodyUseAPI": ["com.google.firebase.FirebaseApp.getInstance()"], "Fixed commit": "b452e4d283fc405d345f714c9f137b7a889113c3", "Url": "https://api.github.com/repos/3sidedcube/Android-LightningMessage", "Date": "2017-02-22T15:02:26Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { inventPiece = game.getMovPiece(x, y, type, color); } catch (exceptions.InvalidPieceException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4443/buggy-version/P2_EINDOPDRACHT.src.client.ActionWindow.java", "BodyUseAPI": ["game.Game.getMovPiece(int,int,int,int)"], "Fixed commit": "48415c7bca2ec6893ecd496bf7620f60e6cf8ad5", "Url": "https://api.github.com/repos/TheMSB/P2EO", "Date": "2013-04-03T19:58:57Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { bytesRead = is.read(byteBuffer); } catch (java.io.IOException e) { bytesRead = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7388/buggy-version/lab7.Communicator.java", "BodyUseAPI": ["java.io.InputStream.read(byte[])"], "Fixed commit": "666460315288b0d53ea87237276de705c4746721", "Url": "https://api.github.com/repos/blevinstein/cs3240", "Date": "2013-04-07T23:50:09Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { os.write(m.toString().getBytes()); } catch (java.io.IOException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7388/buggy-version/lab7.Communicator.java", "BodyUseAPI": ["m.toString().getBytes()", "java.io.OutputStream.write(m.toString().getBytes())", "Message.toString()"], "Fixed commit": "666460315288b0d53ea87237276de705c4746721", "Url": "https://api.github.com/repos/blevinstein/cs3240", "Date": "2013-04-07T23:50:09Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { is.close(); os.close(); } catch (java.io.IOException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7388/buggy-version/lab7.Communicator.java", "BodyUseAPI": ["java.io.OutputStream.close()", "java.io.InputStream.close()"], "Fixed commit": "666460315288b0d53ea87237276de705c4746721", "Url": "https://api.github.com/repos/blevinstein/cs3240", "Date": "2013-04-07T23:50:09Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { new com.ard.oosd.a.sqlscripts.DumpSQL().restoreDatabase(com.ard.oosd.a.sqlscripts.DatabaseConnection.USER, com.ard.oosd.a.sqlscripts.DatabaseConnection.PASSWORD); } catch (java.io.IOException | java.lang.InterruptedException e) { e.printStackTrace(); } finally { try { new com.ard.oosd.a.sqlscripts.DumpSQL().backupDatabase(com.ard.oosd.a.sqlscripts.DatabaseConnection.USER, com.ard.oosd.a.sqlscripts.DatabaseConnection.PASSWORD, com.ard.oosd.a.sqlscripts.DatabaseConnection.DATABASE); } catch (java.io.IOException | java.lang.InterruptedException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4827/buggy-version/src.com.ard.oosd.a.sqlscripts.DatabaseConnection.java", "BodyUseAPI": ["com.ard.oosd.a.sqlscripts.DumpSQL.restoreDatabase(java.lang.String,java.lang.String)"], "Fixed commit": "23ff9b769995796c134c5ec696e927ddf67b8360", "Url": "https://api.github.com/repos/Arkoprabho/Time-Table-Management", "Date": "2017-04-02T15:05:14Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return new projectmsn.network.KeyExchangePayload(rawPayload, context.getAcceptor().getOwnPrivateKey()); } catch (java.security.GeneralSecurityException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/561/buggy-version/src.projectmsn.network.Payload.java", "BodyUseAPI": ["projectmsn.network.PayloadContext.getAcceptor()", "context.getAcceptor().getOwnPrivateKey()"], "Fixed commit": "81589d9e6b043a24cf9a5432a86b243500383341", "Url": "https://api.github.com/repos/Washi1337/ProjectMSN", "Date": "2016-04-07T12:45:40Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { grabbedDealParser(message); } catch (org.json.JSONException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5295/buggy-version/app.src.main.java.com.example.colak.gogodeals.Parsers.java", "BodyUseAPI": ["com.example.colak.gogodeals.Parsers.grabbedDealParser(org.eclipse.paho.client.mqttv3.MqttMessage)"], "Fixed commit": "e16a966f22b6c9acb006123ae93a8167b4d16e13", "Url": "https://api.github.com/repos/XtremeSE/GogoDealsApp", "Date": "2016-12-01T15:28:14Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.reflect.Field field = com.liferay.portal.kernel.util.ReflectionUtil.getDeclaredField(com.liferay.portal.kernel.util.ServerDetector.class, \"_serverType\"); field.set(null, serverType); } catch (java.lang.Exception e) { com.liferay.portal.kernel.util.ReflectionUtil.throwException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3648/buggy-version/portal-kernel.src.com.liferay.portal.kernel.util.ServerDetector.java", "BodyUseAPI": ["java.lang.reflect.Field.set(<nulltype>,com.liferay.portal.kernel.util.ServerDetector.ServerType)", "com.liferay.portal.kernel.util.ReflectionUtil.getDeclaredField(java.lang.Class,java.lang.String)"], "Fixed commit": "4a8f1bf963c08ff4bed083d69c85ac1db039a9f4", "Url": "https://api.github.com/repos/brandizzi/liferay-portal", "Date": "2016-09-16T23:43:37Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { reserveStock(order); } catch (java.lang.Exception e) { message = e.getMessage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2121/buggy-version/base.org.spin.process.StorageMaintaining.java", "BodyUseAPI": ["org.spin.process.StorageMaintaining.reserveStock(org.compiere.model.MOrder)"], "Fixed commit": "09895c5580db289b6d4b777ed7500c5b19f2bdde", "Url": "https://api.github.com/repos/erpcya/LVE-ADempiere", "Date": "2015-06-11T20:09:32Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { str = java.net.URLDecoder.decode(str, Encoding.UTF8); } catch (java.io.UnsupportedEncodingException e1) { throw org.nutz.lang.Lang.impossible(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5928/buggy-version/src.org.nutz.resource.Scans.java", "BodyUseAPI": ["java.net.URLDecoder.decode(java.lang.String,Encoding.UTF8)"], "Fixed commit": "19fa597c2d02d686ef82f56ed16bfeae559aeb68", "Url": "https://api.github.com/repos/hzl7652/nutz", "Date": "2012-10-26T00:36:36Z"},
{"Line": "=>878", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { localTopologyManager.setCacheAvailability(getName(), availability); } catch (java.lang.Exception e) { throw new org.infinispan.commons.CacheException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2573/buggy-version/core.src.main.java.org.infinispan.cache.impl.CacheImpl.java", "BodyUseAPI": ["org.infinispan.cache.impl.CacheImpl<K, V>.getName()", "org.infinispan.topology.LocalTopologyManager.setCacheAvailability(java.lang.String,org.infinispan.partionhandling.AvailabilityMode)"], "Fixed commit": "7e9fcea208662c2d17a6cae16c2b5be52c56c7c5", "Url": "https://api.github.com/repos/danberindei/infinispan", "Date": "2014-10-20T14:43:22Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return syncRule == null ? (altSearchSchemas == null) || (altSearchSchemas.isEmpty()) ? findByAccountIdItem(uid, resource, attrUtil) : findByAttributableSearch(connObj, altSearchSchemas, resource, attrUtil) : findByCorrelationRule(connObj, syncRule, org.apache.syncope.common.types.SubjectType.valueOf(attrUtil.getType().name())); } catch (java.lang.RuntimeException e) { return java.util.Collections.<java.lang.Long>emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/9171/buggy-version/core.src.main.java.org.apache.syncope.core.sync.SyncUtilities.java", "BodyUseAPI": ["org.apache.syncope.common.types.SubjectType.valueOf(attrUtil.getType().name())", "org.apache.syncope.core.sync.SyncUtilities.findByAccountIdItem(java.lang.String,org.apache.syncope.core.persistence.beans.ExternalResource,org.apache.syncope.core.util.AttributableUtil)", "java.util.List<java.lang.String>.isEmpty()", "org.apache.syncope.core.sync.SyncUtilities.findByAttributableSearch(org.identityconnectors.framework.common.objects.ConnectorObject,java.util.List<java.lang.String>,org.apache.syncope.core.persistence.beans.ExternalResource,org.apache.syncope.core.util.AttributableUtil)", "org.apache.syncope.core.util.AttributableUtil.getType()", "attrUtil.getType().name()", "org.apache.syncope.core.sync.SyncUtilities.findByCorrelationRule(org.identityconnectors.framework.common.objects.ConnectorObject,org.apache.syncope.core.sync.SyncCorrelationRule,org.apache.syncope.common.types.SubjectType.valueOf(attrUtil.getType().name()))"], "Fixed commit": "7980b807cdf385ce7abc1717d6ac3334b3fb2717", "Url": "https://api.github.com/repos/apache/syncope", "Date": "2016-03-29T08:23:04Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { userRepository.save(user); } catch (java.lang.Exception e) { return new org.springframework.http.ResponseEntity<java.lang.Void>(org.springframework.http.HttpStatus.CONFLICT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3847/buggy-version/spring-server.src.main.java.ch.heigvd.gamification.api.EventEndpoint.java", "BodyUseAPI": ["ch.heigvd.gamification.database.dao.UserRepository.save(ch.heigvd.gamification.database.model.User)"], "Fixed commit": "7385ace6b4f3763ef0f233426d910d1a65a5ee98", "Url": "https://api.github.com/repos/gsern1/AMT-Gamification-Platform", "Date": "2017-01-25T10:20:46Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { in = new java.io.FileInputStream((((platformResourceConfigurationProperties.getImageLibraryDirectory()) + \"/layout-miniature/\") + fileName)); } catch (java.io.FileNotFoundException e) { in = new java.io.FileInputStream(((platformResourceConfigurationProperties.getImageLibraryDirectory()) + \"/layout-miniature/default-layout-icon.png\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1901/buggy-version/abixen-platform-core.src.main.java.com.abixen.platform.core.controller.common.ImageLibraryController.java", "BodyUseAPI": ["com.abixen.platform.core.configuration.properties.AbstractPlatformResourceConfigurationProperties.getImageLibraryDirectory()"], "Fixed commit": "01dd3c02c5fa22b6438c38e29cdc19c8986d5cc0", "Url": "https://api.github.com/repos/pmaingi/abixen-platform", "Date": "2017-03-21T19:43:51Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { command.setMailThreadingActive(true); commandDao.update(command); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5589/buggy-version/lider-taskmanager-impl.src.main.java.tr.org.liderahenk.lider.taskmanager.notifiers.MailManagerNotifier.java", "BodyUseAPI": ["tr.org.liderahenk.lider.core.api.persistence.entities.ICommand.setMailThreadingActive(boolean)", "tr.org.liderahenk.lider.core.api.persistence.dao.ICommandDao.update(tr.org.liderahenk.lider.core.api.persistence.entities.ICommand)"], "Fixed commit": "375326ce35b3bb9d8ad3d8c6a096bb96155d396e", "Url": "https://api.github.com/repos/Pardus-LiderAhenk/lider", "Date": "2017-09-20T12:53:02Z"},
{"Line": "=>1498", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { folder.updatePointValue(getMe(), pv.getPropertyIdentifier(), pv.getValue()); } catch (java.lang.Exception e) { bacnet.BacnetPoint.LOGGER.debug(\"\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3829/buggy-version/src.main.java.bacnet.BacnetPoint.java", "BodyUseAPI": ["com.serotonin.bacnet4j.type.constructed.PropertyValue.getValue()", "bacnet.BacnetPoint.2.getMe()", "bacnet.DeviceFolder.updatePointValue(bacnet.BacnetPoint,pv.getPropertyIdentifier(),pv.getValue())", "com.serotonin.bacnet4j.type.constructed.PropertyValue.getPropertyIdentifier()"], "Fixed commit": "b789ed12cfb789c5c5c3808abafab8ff6d527517", "Url": "https://api.github.com/repos/IOT-DSA/dslink-java-bacnet", "Date": "2016-07-09T00:09:56Z"},
{"Line": "=>1526", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { devicefold.getProperties(refs, points); } catch (java.lang.Exception e) { bacnet.BacnetPoint.LOGGER.debug(\"\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3829/buggy-version/src.main.java.bacnet.BacnetPoint.java", "BodyUseAPI": ["bacnet.DeviceFolder.getProperties(com.serotonin.bacnet4j.util.PropertyReferences,java.util.Map<com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, bacnet.BacnetPoint>)"], "Fixed commit": "b789ed12cfb789c5c5c3808abafab8ff6d527517", "Url": "https://api.github.com/repos/IOT-DSA/dslink-java-bacnet", "Date": "2016-07-09T00:09:56Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { updatePointValue(pt, pid, encodable); } catch (java.lang.Exception e) { bacnet.DeviceFolder.LOGGER.debug(\"\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3829/buggy-version/src.main.java.bacnet.DeviceFolder.java", "BodyUseAPI": ["bacnet.DeviceFolder.2.updatePointValue(bacnet.BacnetPoint,com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier,com.serotonin.bacnet4j.type.Encodable)"], "Fixed commit": "b789ed12cfb789c5c5c3808abafab8ff6d527517", "Url": "https://api.github.com/repos/IOT-DSA/dslink-java-bacnet", "Date": "2016-07-09T00:09:56Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.settingsFrame.updatePrinterField(this.printerField, new dennis.markmann.MyLibraries.DefaultJobs.Print.PrinterSelector().selectPrinter().getName()); } catch (final java.lang.NullPointerException e) { new com.kn.groupBuilder.Exceptions.NotToHandleException(e.getStackTrace()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/147/buggy-version/GroupBuilder.src.com.kn.groupBuilder.Gui.Menu.Listener.SettingsFrameListener.java", "BodyUseAPI": ["new dennis.markmann.MyLibraries.DefaultJobs.Print.PrinterSelector().selectPrinter().getName()", "dennis.markmann.MyLibraries.DefaultJobs.Print.PrinterSelector.selectPrinter()", "com.kn.groupBuilder.Gui.Menu.SettingsFrame.updatePrinterField(javax.swing.JTextField,new dennis.markmann.MyLibraries.DefaultJobs.Print.PrinterSelector().selectPrinter().getName())"], "Fixed commit": "54d937a755cd7724cde86a94687e9ca0adaafd4a", "Url": "https://api.github.com/repos/DennisMarkmann/GroupBuilder", "Date": "2013-07-24T13:07:52Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { server.stop(); } catch (java.lang.Exception exp) { android.util.Log.e(io.github.billhsu.sensorserver.SensorServer.LOG_TAG, exp.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6120/buggy-version/app.src.main.java.io.github.billhsu.sensorserver.SensorServer.java", "BodyUseAPI": ["io.github.billhsu.sensorserver.SensorWebSocketServer.stop()"], "Fixed commit": "ca45b3d356be85aea850745bb40d29233d2fc261", "Url": "https://api.github.com/repos/billhsu/SensorServer", "Date": "2014-10-12T09:11:29Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String nam = com.ForgeEssentials.util.FunctionHelper.getNameFromItemStack(is).toLowerCase().replace(\" \", \"\").replace(\".\", \"\"); if (nam.equals(revised)) return new com.ForgeEssentials.util.BlockInfo.SingularBlockInfo(block, m, null); } catch (java.lang.IndexOutOfBoundsException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7394/buggy-version/src.FE_SRC_COMMON.com.ForgeEssentials.util.BlockInfo.java", "BodyUseAPI": ["com.ForgeEssentials.util.FunctionHelper.getNameFromItemStack(is).toLowerCase().replace(\" \", \"\").replace(java.lang.String,java.lang.String)", "com.ForgeEssentials.util.FunctionHelper.getNameFromItemStack(net.minecraft.item.ItemStack)", "com.ForgeEssentials.util.FunctionHelper.getNameFromItemStack(is).toLowerCase()", "com.ForgeEssentials.util.FunctionHelper.getNameFromItemStack(is).toLowerCase().replace(java.lang.String,java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "627c24a1f8ac2af068c830d7ca313213233d9304", "Url": "https://api.github.com/repos/ForgeEssentials/ForgeEssentialsMain", "Date": "2013-02-24T09:36:27Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { cls = c.load(); instance = ((logisticspipes.network.abstractpackets.ModernPacket) (cls.getConstructors()[0].newInstance(currentid))); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2382/buggy-version/common.logisticspipes.network.PacketHandler.java", "BodyUseAPI": ["java.lang.reflect.Constructor<?>.newInstance(int)", "java.lang.Class<?>.getConstructors()", "com.google.common.reflect.ClassPath.ClassInfo.load()"], "Fixed commit": "9c4af791b99bebab90ad02d4834854ad13e41f9f", "Url": "https://api.github.com/repos/RS485/LogisticsPipes-Dev", "Date": "2013-07-12T21:27:05Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (game.getWinner().equals(pname)) { score = score + 1; } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3220/buggy-version/uCarsRace.src.net.stormdev.ucars.race.URaceListener.java", "BodyUseAPI": ["net.stormdev.ucars.race.Race.getWinner()", "game.getWinner().equals(java.lang.String)"], "Fixed commit": "5d60571b9316318a9acf1bd5b31f28028f3e3fa4", "Url": "https://api.github.com/repos/storm345dev/uCarsRace", "Date": "2013-09-23T18:53:15Z"},
{"Line": "=>439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String refDesc = referenceMap.get(referenceId).getRefDesc(); return refDesc; } catch (java.lang.Exception e) { e.printStackTrace(); return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1447/buggy-version/src.main.java.org.volunteertech.pledges.reference.ReferenceStoreImpl.java", "BodyUseAPI": ["referenceMap.get(referenceId).getRefDesc()", "java.util.Map<java.lang.Long, org.volunteertech.pledges.reference.dao.Reference>.get(java.lang.Long)"], "Fixed commit": "8e603bac195bc14850bfa262ca02a726747d2a33", "Url": "https://api.github.com/repos/niamhmphelan/pledge", "Date": "2016-06-29T20:35:55Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { index = parseIndex(args); } catch (java.lang.Exception e) { return new seedu.taskboss.logic.commands.IncorrectCommand(java.lang.String.format(seedu.taskboss.logic.parser.MESSAGE_INVALID_COMMAND_FORMAT, UnmarkCommand.MESSAGE_USAGE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6986/buggy-version/src.main.java.seedu.taskboss.logic.parser.UnmarkCommandParser.java", "BodyUseAPI": ["seedu.taskboss.logic.parser.UnmarkCommandParser.parseIndex(java.lang.String)"], "Fixed commit": "451fa0c5073a68ac8461c82adb708478530ef581", "Url": "https://api.github.com/repos/CS2103JAN2017-W14-B2/main", "Date": "2017-04-08T20:22:08Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (java.lang.String index : indexes) { taskIndex.add(java.lang.Integer.parseInt(index)); } } catch (java.lang.NumberFormatException e) { throw new java.lang.Exception(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6986/buggy-version/src.main.java.seedu.taskboss.logic.parser.UnmarkCommandParser.java", "BodyUseAPI": ["java.util.Set<java.lang.Integer>.add(int)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "451fa0c5073a68ac8461c82adb708478530ef581", "Url": "https://api.github.com/repos/CS2103JAN2017-W14-B2/main", "Date": "2017-04-08T20:22:08Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { original.setTypeIdAndData(newBlock.getItemTypeId(), newBlock.getData(), false); } catch (java.util.ConcurrentModificationException cme) { com.wolvencraft.prison.mines.util.Message.debug(\"ConcurrentModificationException thrown\"); continue; } catch (java.lang.Exception ex) { com.wolvencraft.prison.mines.util.Message.debug(\"Unknown exceptiont thrown\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2815/buggy-version/src.com.wolvencraft.prison.mines.generation.RandomGenerator.java", "BodyUseAPI": ["org.bukkit.block.Block.setTypeIdAndData(newBlock.getItemTypeId(),newBlock.getData(),boolean)", "org.bukkit.material.MaterialData.getItemTypeId()", "org.bukkit.material.MaterialData.getData()"], "Fixed commit": "42ff843ef42077e4e2742e0b8083c697bd65d8cc", "Url": "https://api.github.com/repos/bitWolfy/PrisonMine", "Date": "2013-01-09T00:36:12Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { original.setTypeIdAndData(newBlock.getItemTypeId(), newBlock.getData(), false); } catch (java.util.ConcurrentModificationException cme) { com.wolvencraft.prison.mines.util.Message.debug(\"ConcurrentModificationException thrown\"); continue; } catch (java.lang.Exception ex) { com.wolvencraft.prison.mines.util.Message.debug(\"Unknown exceptiont thrown\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2815/buggy-version/src.com.wolvencraft.prison.mines.generation.RandomGenerator.java", "BodyUseAPI": ["org.bukkit.material.MaterialData.getData()", "org.bukkit.block.Block.setTypeIdAndData(newBlock.getItemTypeId(),newBlock.getData(),boolean)", "org.bukkit.material.MaterialData.getItemTypeId()"], "Fixed commit": "42ff843ef42077e4e2742e0b8083c697bd65d8cc", "Url": "https://api.github.com/repos/bitWolfy/PrisonMine", "Date": "2013-01-09T00:36:12Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { original.setTypeIdAndData(newBlock.getItemTypeId(), newBlock.getData(), false); } catch (java.util.ConcurrentModificationException cme) { com.wolvencraft.prison.mines.util.Message.debug(\"ConcurrentModificationException thrown\"); continue; } catch (java.lang.Exception ex) { com.wolvencraft.prison.mines.util.Message.debug(\"Unknown exceptiont thrown\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2815/buggy-version/src.com.wolvencraft.prison.mines.generation.RandomGenerator.java", "BodyUseAPI": ["org.bukkit.material.MaterialData.getData()", "org.bukkit.block.Block.setTypeIdAndData(newBlock.getItemTypeId(),newBlock.getData(),boolean)", "org.bukkit.material.MaterialData.getItemTypeId()"], "Fixed commit": "42ff843ef42077e4e2742e0b8083c697bd65d8cc", "Url": "https://api.github.com/repos/bitWolfy/PrisonMine", "Date": "2013-01-09T00:36:12Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { subQuery.stop(reason); } catch (java.lang.Throwable t) { slog.error(((\"araqne logdb: cannot stop proc subquery [\" + (subQuery.getQueryString())) + \"]\"), t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3314/buggy-version/araqne-logdb.src.main.java.org.araqne.logdb.query.command.Proc.java", "BodyUseAPI": ["org.araqne.logdb.Query.stop(org.araqne.logdb.QueryStopReason)"], "Fixed commit": "2d6f0e39258bda4f5d94824b2bbb3f957f621fa0", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2015-04-19T14:58:32Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { recipient = envConfigService.getEnvVarAsString(EnvConfigService.PPRB_TECH_EMAIL); if (recipient == null) { throw new org.myweb.utils.config.EnvConfigServiceException(\"PPRB_TECH_EMAIL is not set.\"); } } catch (org.myweb.utils.config.EnvConfigServiceException e) { mailerConfigOK = false; Logger.error((\"Exception when trying to get PPRB_TECH_EMAIL env var :\\n\" + (org.apache.commons.lang3.exception.ExceptionUtils.getStackTrace(e)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/256/buggy-version/app.Global.java", "BodyUseAPI": ["org.myweb.utils.config.EnvConfigService.getEnvVarAsString(EnvConfigService.PPRB_TECH_EMAIL)"], "Fixed commit": "bea586a527d7d7968cac34fb386756070b66e868", "Url": "https://api.github.com/repos/MarcLoupias/poc-play-rest-backend", "Date": "2014-02-25T09:19:53Z"},
{"Line": "=>494", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { session.resetCurrentProcessInstance(processId); } catch (com.silverpeas.processManager.servlets.ProcessManagerException e) { return \"/admin/jsp/documentNotFound.jsp\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8057/buggy-version/process-manager.process-manager-war.src.main.java.com.silverpeas.processManager.servlets.ProcessManagerRequestRouter.java", "BodyUseAPI": ["com.silverpeas.processManager.servlets.ProcessManagerSessionController.resetCurrentProcessInstance(java.lang.String)"], "Fixed commit": "0b27caae8eb347fee90752792df797a0320035fe", "Url": "https://api.github.com/repos/SilverYoCha/Silverpeas-Components", "Date": "2015-10-22T22:08:25Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { lastChat = ((pojos.PrivateChat) (criteria.list().get(0))); } catch (java.lang.Exception e) { } finally { session.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7596/buggy-version/src.dao.IChatImpl.java", "BodyUseAPI": ["criteria.list().get(int)", "org.hibernate.Criteria.list()"], "Fixed commit": "76de5f96a1104043b4e92673eaa3ac2c0ad4fa19", "Url": "https://api.github.com/repos/sahilajmani/RideShareApp", "Date": "2015-11-13T15:50:23Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (((event.getThrowableInformation()) != null) && ((event.getThrowableInformation().getThrowable()) != null)) { java.io.StringWriter errors = new java.io.StringWriter(); event.getThrowableInformation().getThrowable().printStackTrace(new java.io.PrintWriter(errors)); final java.lang.String stacktrace = errors.toString(); for (final io.subutai.core.appender.SubutaiErrorEventListener listener : io.subutai.core.appender.SubutaiAppender.listeners) { notifierPool.execute(new java.lang.Runnable() { @java.lang.Override public void run() { try { listener.onEvent(new io.subutai.core.appender.SubutaiErrorEvent(event.getTimeStamp(), event.getLoggerName(), event.getRenderedMessage(), stacktrace)); } catch (java.lang.Exception e) { } } }); } } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5431/buggy-version/management.server.core.subutai-appender.src.main.java.io.subutai.core.appender.SubutaiAppender.java", "BodyUseAPI": ["event.getThrowableInformation().getThrowable()", "java.util.concurrent.ExecutorService.execute(java.lang.Runnable)", "java.io.StringWriter.toString()", "org.apache.log4j.spi.LoggingEvent.getThrowableInformation()", "org.apache.log4j.spi.LoggingEvent.getLoggerName()", "org.apache.log4j.spi.LoggingEvent.getRenderedMessage()", "event.getThrowableInformation().getThrowable()", "org.apache.log4j.spi.LoggingEvent.getThrowableInformation()", "org.apache.log4j.spi.LoggingEvent.getTimeStamp()", "event.getThrowableInformation().getThrowable().printStackTrace(java.io.PrintWriter)", "java.lang.Object()", "io.subutai.core.appender.SubutaiErrorEventListener.onEvent(io.subutai.core.appender.SubutaiErrorEvent)", "org.apache.log4j.spi.LoggingEvent.getThrowableInformation()"], "Fixed commit": "9f1d695a68c3ac8239512c456ca875127cafa0e7", "Url": "https://api.github.com/repos/subutai-io/peer-os", "Date": "2016-03-11T16:42:19Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { channelManager.addRemoteNode(node); } catch (org.buddycloud.channelserver.db.exception.NodeStoreException e) { org.buddycloud.channelserver.packetprocessor.message.event.SubscriptionProcessor.logger.error(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/645/buggy-version/src.main.java.org.buddycloud.channelserver.packetprocessor.message.event.SubscriptionProcessor.java", "BodyUseAPI": ["org.buddycloud.channelserver.channel.ChannelManager.addRemoteNode(java.lang.String)"], "Fixed commit": "4d972f2274ba7bb6f34a9dd4dbdf817a237360a9", "Url": "https://api.github.com/repos/surevine/buddycloud-server-java", "Date": "2012-11-19T18:09:56Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { body.setActive(false); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6116/buggy-version/core.src.com.game.box2d.mapobjects.Door.java", "BodyUseAPI": ["com.game.box2d.mapobjects.Door.setActive(boolean)"], "Fixed commit": "ba552281c7b523d199763e61815fb50baabf7323", "Url": "https://api.github.com/repos/arHergert/ProjectHB", "Date": "2017-07-02T09:09:51Z"},
{"Line": "=>463", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { onlineVersion = java.lang.Integer.parseInt(splitted[1]); } catch (java.lang.NumberFormatException e) { if (com.nilhcem.frcndict.core.Config.LOG_ERROR) android.util.Log.e(com.nilhcem.frcndict.updatedb.ImportUpdateService.DownloadFileAsync.TAG, \"NumberFormatException\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/905/buggy-version/src.com.nilhcem.frcndict.updatedb.ImportUpdateService.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "e17acd3bdc1e181e3f45500528b47eae568a9c6d", "Url": "https://api.github.com/repos/Nilhcem/frcndict-android", "Date": "2012-06-15T22:24:08Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { minVersionCode = java.lang.Integer.parseInt(splitted[1]); } catch (java.lang.NumberFormatException e) { if (com.nilhcem.frcndict.core.Config.LOG_ERROR) android.util.Log.e(com.nilhcem.frcndict.updatedb.CheckForUpdatesService.class.getSimpleName(), \"\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/905/buggy-version/src.com.nilhcem.frcndict.updatedb.CheckForUpdatesService.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "e17acd3bdc1e181e3f45500528b47eae568a9c6d", "Url": "https://api.github.com/repos/Nilhcem/frcndict-android", "Date": "2012-06-15T22:24:08Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mutex.writeLock().acquire(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/354/buggy-version/framework.runtime.src.main.java.fr.liglab.adele.cilia.internals.factories.MediatorComponentManager.java", "BodyUseAPI": ["fr.liglab.adele.cilia.util.concurrent.ReadWriteLock.writeLock()", "mutex.writeLock().acquire()"], "Fixed commit": "265a117150e7bbc21e5e7e4c601e8d367ec4d270", "Url": "https://api.github.com/repos/AdeleResearchGroup/Cilia", "Date": "2012-11-26T15:58:07Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { adapter.addPostListToAdapter(responseAction.getPosts()); } catch (java.lang.NullPointerException e) { ((com.chalmers.tda367.localfeud.net.responseActions.RequestPostsResponseAction) (source)).setResponseError(ResponseError.REALLYBAD); onResponseFailure(source); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2072/buggy-version/project.app.src.main.java.com.chalmers.tda367.localfeud.net.responseListeners.RequestPostsResponseListener.java", "BodyUseAPI": ["com.chalmers.tda367.localfeud.control.PostAdapter.addPostListToAdapter(responseAction.getPosts())", "com.chalmers.tda367.localfeud.net.responseActions.RequestPostsResponseAction.getPosts()"], "Fixed commit": "3a098522f017ec2975aee19a34427db374c975c4", "Url": "https://api.github.com/repos/ericwenn/local-feud", "Date": "2016-05-10T14:49:39Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { net.sourceforge.fenixedu.applicationTier.Servico.teacher.UpdateProfessorshipWithPerson.run(person, executionYear, java.util.Arrays.asList(executionCourseResponsabilities)); } catch (net.sourceforge.fenixedu.applicationTier.Servico.exceptions.NotAuthorizedException e) { org.apache.struts.action.ActionMessages messages = new org.apache.struts.action.ActionMessages(); org.apache.struts.action.ActionMessage message = new org.apache.struts.action.ActionMessage(\"error.teacher.not.belong.department\"); messages.add(\"error.teacher.not.belong.department\", message); addMessages(request, messages); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4677/buggy-version/src.main.java.net.sourceforge.fenixedu.presentationTier.Action.teacher.professorship.UpdateTeacherExecutionCourseResponsabilitiesAction.java", "BodyUseAPI": ["net.sourceforge.fenixedu.applicationTier.Servico.teacher.UpdateProfessorshipWithPerson.run(net.sourceforge.fenixedu.domain.Person,net.sourceforge.fenixedu.domain.ExecutionYear,java.util.List<java.lang.Integer>)", "java.util.Arrays.asList(java.lang.Integer[])"], "Fixed commit": "772f180558665e83f62092592d9fdac6aa02bce2", "Url": "https://api.github.com/repos/jcarvalho/fenix", "Date": "2013-07-05T17:24:40Z"},
{"Line": "=>2306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { name = java.net.URLDecoder.decode(name, \"UTF-8\"); name = name.trim(); } catch (java.lang.Throwable t) { com.yb.sys.controller.FrontEndController.logger.warn((\"failed to decode URI parameter name:\" + name)); map.put(key, (-1)); return map; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7293/buggy-version/src.main.java.com.yb.sys.controller.FrontEndController.java", "BodyUseAPI": ["java.net.URLDecoder.decode(java.lang.String,java.lang.String)", "java.lang.String.trim()"], "Fixed commit": "ed032061b0aa5fbccec2e917de4bd3a5486a69c6", "Url": "https://api.github.com/repos/yibang886/yibang", "Date": "2015-03-03T18:51:17Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { connection = ((java.net.HttpURLConnection) (url.openConnection())); } catch (java.io.IOException ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5223/buggy-version/src.main.java.edu.usf.cutr.gtfsrtvalidator.api.resource.GtfsFeed.java", "BodyUseAPI": ["java.net.URL.openConnection()"], "Fixed commit": "5e9200393209af4eccf507fb319323b19c6b46aa", "Url": "https://api.github.com/repos/CUTR-at-USF/gtfs-realtime-validator", "Date": "2015-09-30T14:51:38Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { @java.lang.SuppressWarnings(\"unchecked\") java.util.Collection<java.util.Map<?, ?>> co = ((java.util.Collection<java.util.Map<?, ?>>) (obj)); com.twosigma.beaker.jvm.object.TableDisplay t = new com.twosigma.beaker.jvm.object.TableDisplay(co, parent); jgen.writeObject(t); return true; } catch (java.lang.Exception e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6253/buggy-version/plugin.jvm.src.main.java.com.twosigma.beaker.jvm.serialization.BasicObjectSerializer.java", "BodyUseAPI": ["org.codehaus.jackson.JsonGenerator.writeObject(com.twosigma.beaker.jvm.object.TableDisplay)"], "Fixed commit": "0990530d4a35e8160129625ae7e7b7912f50c414", "Url": "https://api.github.com/repos/twosigma/beakerx", "Date": "2015-10-07T20:26:43Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { form.getBodyParts().add(new com.sun.jersey.multipart.file.FileDataBodyPart(\"id\", new java.io.File(archiveFile.toURI()))); } catch (java.net.URISyntaxException e1) { throw new org.jboss.arquillian.container.spi.client.container.DeploymentException(\"Could not convert exported deployment URL to URI?\", e1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3232/buggy-version/glassfish-remote-3.1.src.main.java.org.jboss.arquillian.container.glassfish.remote_3_1.GlassFishRestDeployableContainer.java", "BodyUseAPI": ["form.getBodyParts().add(com.sun.jersey.multipart.file.FileDataBodyPart)", "com.sun.jersey.multipart.FormDataMultiPart.getBodyParts()", "java.net.URL.toURI()"], "Fixed commit": "b69e3d6fed9b0d03877d0224c3991a297feae70b", "Url": "https://api.github.com/repos/arquillian/arquillian-container-glassfish", "Date": "2011-05-25T21:51:29Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { configHandler.saveRunningShow(args[0]); sender.sendMessage(((((org.bukkit.ChatColor.GOLD) + \"The current shows have been saved as: \") + (org.bukkit.ChatColor.RED)) + (args[0]))); } catch (java.io.IOException ex) { sender.sendMessage(((org.bukkit.ChatColor.GOLD) + \"Couldn't save the current shows!\")); java.util.logging.Logger.getLogger(net.omniscimus.fireworks.commands.SaveCommand.class.getName()).log(java.util.logging.Level.WARNING, \"Couldn't save the current shows\", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3642/buggy-version/src.main.java.net.omniscimus.fireworks.commands.SaveCommand.java", "BodyUseAPI": ["org.bukkit.command.CommandSender.sendMessage(((((org.bukkit.ChatColor.GOLD) + \"The current shows have been saved as: \") + (org.bukkit.ChatColor.RED)) + (args[0])))", "net.omniscimus.fireworks.ConfigHandler.saveRunningShow(java.lang.String)"], "Fixed commit": "d8f3d94131bfcf60c5fd0782a6096c2dd89a3398", "Url": "https://api.github.com/repos/Omniscimus/Fireworks", "Date": "2016-08-05T13:48:14Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { return new org.openqa.selenium.firefox.FirefoxBinary(file); } catch (org.openqa.selenium.WebDriverException wde) { throw new org.openqa.selenium.SessionNotCreatedException(wde.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4405/buggy-version/java.client.src.org.openqa.selenium.firefox.FirefoxDriver.java", "BodyUseAPI": [], "Fixed commit": "242a570c43e6b51aeb89c1750266e6b8e2e1237d", "Url": "https://api.github.com/repos/pbi-qfs/selenium", "Date": "2016-10-04T02:00:06Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { int blockSize; do { blockSize = read(); rawData.position(((rawData.position()) + blockSize)); } while (blockSize > 0 ); } catch (java.lang.IllegalArgumentException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2680/buggy-version/library.src.main.java.com.felipecsl.gifimageview.library.GifHeaderParser.java", "BodyUseAPI": ["java.nio.ByteBuffer.position(int)", "com.felipecsl.gifimageview.library.GifHeaderParser.read()", "java.nio.ByteBuffer.position()"], "Fixed commit": "5f755d10bad171491d68ac2a973e1e3d09ce0abf", "Url": "https://api.github.com/repos/gabepaez/GifImageView", "Date": "2016-02-25T20:00:26Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { imageDownload.searchForBook(x).loadFirstResult().getAllEditions().saveAllCoverImages(); } catch (java.lang.Exception e) { com.chaosenterprise.goodreads.Main.log.warn(\"Failed to find element for {}\", x); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1058/buggy-version/src.main.java.com.chaosenterprise.goodreads.Main.java", "BodyUseAPI": ["com.chaosenterprise.goodreads.ImageDownloader.searchForBook(java.lang.String)", "imageDownload.searchForBook(x).loadFirstResult()", "imageDownload.searchForBook(x).loadFirstResult().getAllEditions()", "imageDownload.searchForBook(x).loadFirstResult().getAllEditions().saveAllCoverImages()"], "Fixed commit": "7771a0dd67b566c316c4d0f64d05446e7fbcdcd2", "Url": "https://api.github.com/repos/ChaosStream/GoodReads", "Date": "2017-02-02T04:36:52Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (1 == (mainWindow.getSelected().size())) dateText.setText(mainWindow.getSelected().iterator().next().getCreationDate()); else dateText.setText(\"\"); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2626/buggy-version/code.src.itemfiler.ui.DetailsArea.java", "BodyUseAPI": ["mainWindow.getSelected().iterator()", "mainWindow.getSelected().iterator().next().getCreationDate()", "org.eclipse.swt.widgets.Text.setText(java.lang.String)", "mainWindow.getSelected().iterator().next()", "mainWindow.getSelected().size()", "org.eclipse.swt.widgets.Text.setText(mainWindow.getSelected().iterator().next().getCreationDate())", "itemfiler.ui.MainWindow.getSelected()", "itemfiler.ui.MainWindow.getSelected()"], "Fixed commit": "15b328bddbef727de2ab4f6245c5f5f9cf481124", "Url": "https://api.github.com/repos/freimair/photofiler", "Date": "2013-02-24T14:31:09Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { value = keyboard.readLine(); } catch (java.io.IOException ex) { java.util.logging.Logger.getLogger(byui.cit260.escapeGame.view.GameEndMenuView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6154/buggy-version/Escape-Game-.src.byui.cit260.escapeGame.view.GameEndMenuView.java", "BodyUseAPI": ["byui.cit260.escapeGame.view.GameEndMenuView.readLine()"], "Fixed commit": "bc36a79c0ef70e835fa9345e08c2dae0b97d3730", "Url": "https://api.github.com/repos/Taggart-McKenzie/Escape-Game-", "Date": "2017-03-31T03:10:08Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { friendListAdapter = new com.onemobilekidz.mobilekidz.FriendListAdapter(getApplicationContext(), mFirebaseRef, this, R.layout.babysitter_list_row); } catch (java.lang.Exception e) { android.util.Log.v(com.onemobilekidz.mobilekidz.MakeRequests.LOG, e.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5200/buggy-version/app.src.main.java.com.onemobilekidz.mobilekidz.MakeRequests.java", "BodyUseAPI": ["com.onemobilekidz.mobilekidz.MakeRequests.getApplicationContext()"], "Fixed commit": "fd4a2b0599104000dc635bbc62314436b6770372", "Url": "https://api.github.com/repos/vfischer256/MobileKidz", "Date": "2015-04-10T04:36:54Z"},
{"Line": "=>740", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { fr.ens.transcriptome.eoulsan.EoulsanLogger.getLogger().info(((\"Start \" + (action.getName())) + \" action\")); action.action(fr.ens.transcriptome.eoulsan.Main.main.getActionArgs()); fr.ens.transcriptome.eoulsan.EoulsanLogger.getLogger().info(((\"End of \" + (action.getName())) + \" action\")); } catch (java.lang.Throwable e) { fr.ens.transcriptome.eoulsan.Common.errorExit(e, e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5050/buggy-version/src.main.java.fr.ens.transcriptome.eoulsan.Main.java", "BodyUseAPI": ["fr.ens.transcriptome.eoulsan.actions.Action.action(java.util.List<java.lang.String>)", "fr.ens.transcriptome.eoulsan.actions.Action.getName()", "fr.ens.transcriptome.eoulsan.EoulsanLogger.getLogger()", "fr.ens.transcriptome.eoulsan.EoulsanLogger.getLogger().info(((\"End of \" + (action.getName())) + \" action\"))", "fr.ens.transcriptome.eoulsan.EoulsanLogger.getLogger()", "fr.ens.transcriptome.eoulsan.EoulsanLogger.getLogger().info(((\"Start \" + (action.getName())) + \" action\"))", "fr.ens.transcriptome.eoulsan.actions.Action.getName()", "fr.ens.transcriptome.eoulsan.Main.getActionArgs()"], "Fixed commit": "a11dc3bf347e37c3375c4747b7a391a4423425cc", "Url": "https://api.github.com/repos/GenomicParisCentre/eoulsan", "Date": "2015-08-19T11:43:03Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { boolean flag = recruitService.insertByImport(files); result.setSuccess(flag); if (!flag) { result.setMsg(\"\u7cfb\u7edf\u7e41\u5fd9\uff0c\u8bf7\u7a0d\u540e\u518d\u8bd5\uff01\"); result.setSuccess(false); } } catch (java.lang.Exception exp) { result.setSuccess(false); result.setMsg(exp.toString()); return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1985/buggy-version/src.main.java.com.wangzhixuan.controller.RecruitController.java", "BodyUseAPI": ["com.wangzhixuan.code.Result.setMsg(java.lang.String)", "com.wangzhixuan.service.RecruitService.insertByImport(org.springframework.web.multipart.commons.CommonsMultipartFile[])", "com.wangzhixuan.code.Result.setSuccess(boolean)", "com.wangzhixuan.code.Result.setSuccess(boolean)"], "Fixed commit": "95e8a517f19e2703853843de4557ee21fa257425", "Url": "https://api.github.com/repos/puppylsy/spring-shiro-training", "Date": "2017-03-19T05:04:48Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream(); javax.imageio.ImageIO.write(img, \"png\", baos); baos.flush(); byte[] imageInByte = baos.toByteArray(); baos.close(); return java.nio.ByteBuffer.wrap(imageInByte); } catch (java.io.IOException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2670/buggy-version/ShootEmUp.src.Image.java", "BodyUseAPI": ["java.io.ByteArrayOutputStream.flush()", "java.io.ByteArrayOutputStream.close()", "java.io.ByteArrayOutputStream.toByteArray()", "javax.imageio.ImageIO.write(java.awt.image.BufferedImage,java.lang.String,java.io.ByteArrayOutputStream)", "java.nio.ByteBuffer.wrap(byte[])"], "Fixed commit": "987567fb0b0907ad1a87e5388b170d9a702203ea", "Url": "https://api.github.com/repos/Callum-Shipton/JACAPP", "Date": "2015-02-08T17:09:54Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(500); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3912/buggy-version/src.Server.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "a65e56bd400d4aa36af070c505918a4a3243a5de", "Url": "https://api.github.com/repos/Alexander-Hjelm/chatbot", "Date": "2017-03-02T11:31:28Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { gi = java.lang.Integer.parseInt(split[0].trim()); } catch (java.lang.NumberFormatException e) { java.lang.System.out.println(split[0]); java.lang.System.out.println(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2367/buggy-version/src.db.ram.RamDb.java", "BodyUseAPI": ["java.lang.String.trim()", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "6e856812bcc0d27c0218cfc70996dbfbd5d5fe76", "Url": "https://api.github.com/repos/axrt/TUIT", "Date": "2014-10-29T01:16:39Z"},
{"Line": "=>644", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { onResetStates(); } catch (java.lang.Throwable t) { log.warn(((\"araqne log api: logger [\" + (getFullName())) + \"] throws exception at onResetStates()\"), t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6915/buggy-version/araqne-log-api.src.main.java.org.araqne.log.api.AbstractLogger.java", "BodyUseAPI": ["org.araqne.log.api.AbstractLogger.onResetStates()"], "Fixed commit": "171aba3a83828d9e7fcbe7c4c3cbd48181dd671f", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2014-09-05T16:46:45Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { jsonObject = bench.UrlShortener.getJSON(\"http://localhost:5984/shortener/_design/couchview/_view/autoinc?startkey=2000000000&descending=true&limit=1\"); } catch (java.lang.Exception e) { createView(); return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8520/buggy-version/Web.src.bench.UrlShortener.java", "BodyUseAPI": ["bench.UrlShortener.getJSON(java.lang.String)"], "Fixed commit": "3ca6f43d1aab89a0f95d11f178219743b9f9471c", "Url": "https://api.github.com/repos/msveshnikov/url-shortener", "Date": "2014-09-28T15:29:56Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { dd = ucar.unidata.util.DateUtil.parse(dString); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7450/buggy-version/src.ucar.unidata.ui.DateTimePicker.java", "BodyUseAPI": ["ucar.unidata.util.DateUtil.parse(java.lang.String)"], "Fixed commit": "1f8ae769dc551d104a43f061c49ec0a9595e0803", "Url": "https://api.github.com/repos/Unidata/IDV", "Date": "2013-08-15T04:11:26Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { return org.apache.commons.io.IOUtils.toString(input); } finally { org.apache.commons.io.IOUtils.closeQuietly(input); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6363/buggy-version/cpf-pentaho.src.pt.webdetails.cpf.repository.PentahoRepositoryAccess.java", "BodyUseAPI": ["org.apache.commons.io.IOUtils.toString(java.io.InputStream)"], "Fixed commit": "4b64a9bd25eeadc50f347e73712bf1ba484119b8", "Url": "https://api.github.com/repos/webdetails/cpf", "Date": "2013-07-19T16:20:14Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { destiny = \"/\" + (login.login(request.getParameter(\"username\"), request.getParameter(\"password\"))); request.setAttribute(\"error\", login.isError); } catch (com.inigo.thermostat.exceptions.ThermostatException e) { destiny = \"/login\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7822/buggy-version/src.com.inigo.thermostat.LoginServlet.java", "BodyUseAPI": ["com.inigo.thermostat.Login.login(request.getParameter(\"username\"),request.getParameter(\"password\"))", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,login.isError)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Fixed commit": "fc23880b729501e1744a1953fa93c8420777e4df", "Url": "https://api.github.com/repos/inigodm/thermostat", "Date": "2016-07-30T00:59:34Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String option = javax.swing.JOptionPane.showInputDialog((\"Please choose which reservation you want to cancel\" + \"(i.e.input a reservation number).\")); optint = java.lang.Integer.parseInt(option); choice = javax.swing.JOptionPane.showConfirmDialog(null, (((\"Are you sure you want to delete reservation\" + \" number \") + optint) + \" ?\"), \"Cancellation Confirmation\", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION); } catch (java.lang.Exception g) { java.lang.System.out.print(\"No input\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8004/buggy-version/src.MyReservationGUI.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "javax.swing.JOptionPane.showConfirmDialog(<nulltype>,java.lang.String,java.lang.String,int)", "javax.swing.JOptionPane.showInputDialog(java.lang.String)"], "Fixed commit": "bbceb77485c06f34fbdbb6143e02514ba8a91656", "Url": "https://api.github.com/repos/denizmak/FinalProject", "Date": "2014-11-27T02:01:01Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { user = datastore.get(com.google.appengine.api.datastore.KeyFactory.createKey(\"User\", username)); return; } catch (com.google.appengine.api.datastore.EntityNotFoundException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/9154/buggy-version/src.com.qrmor.RegisterUser.java", "BodyUseAPI": ["com.google.appengine.api.datastore.KeyFactory.createKey(java.lang.String,java.lang.String)", "com.google.appengine.api.datastore.DatastoreService.get(com.google.appengine.api.datastore.KeyFactory.createKey(\"User\", username))"], "Fixed commit": "2b98e7df3bb85b71f205110faf55c362a255cf37", "Url": "https://api.github.com/repos/stevenheidel/CMPT352-Server", "Date": "2011-11-27T05:19:13Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { decodeService = new org.vudroid.core.DecodeServiceBase(new org.vudroid.pdfdroid.codec.PdfContext()); decodeService.setContentResolver(pdfView.getContext().getContentResolver()); decodeService.open(uri); } catch (java.lang.Exception e) { decodeService = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6447/buggy-version/android-pdfview.src.main.java.com.joanzapata.pdfview.DecodingAsyncTask.java", "BodyUseAPI": ["pdfView.getContext().getContentResolver()", "com.joanzapata.pdfview.PDFView.getContext()", "org.vudroid.core.DecodeService.open(android.net.Uri)", "org.vudroid.core.DecodeService.setContentResolver(pdfView.getContext().getContentResolver())"], "Fixed commit": "884da0450054ac77f49007b46eb3a76b5e764236", "Url": "https://api.github.com/repos/kk121/android-pdfview", "Date": "2017-10-12T10:12:40Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.birthdayDate = dateFormat.parse(this.birthday); } catch (java.text.ParseException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8948/buggy-version/src.main.java.com.pratilipi.api.user.shared.FacebookUserData.java", "BodyUseAPI": ["java.text.DateFormat.parse(java.lang.String)"], "Fixed commit": "c80ff148b2049b089a677ff093082b67d966c0e3", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2015-08-27T10:59:03Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { success = org.apache.pdfbox.tools.imageio.ImageIOUtil.writeImage(image, format, output, new java.lang.Integer(dpi)); } finally { output.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1643/buggy-version/giles-spring.src.main.java.edu.asu.giles.service.handlers.PdfFileHandler.java", "BodyUseAPI": ["org.apache.pdfbox.tools.imageio.ImageIOUtil.writeImage(java.awt.image.BufferedImage,java.lang.String,java.io.OutputStream,java.lang.Integer)"], "Fixed commit": "2f79a064a216f4509aa427cbaf1b6e5cc254b630", "Url": "https://api.github.com/repos/diging/giles", "Date": "2016-10-22T10:53:54Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { clone = ((backend.agents.Agent) (super.clone())); } catch (java.lang.CloneNotSupportedException e) { throw new java.lang.RuntimeException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8820/buggy-version/Code.DoubleAuctionWithNetworks.src.backend.agents.Agent.java", "BodyUseAPI": ["java.lang.Object.clone()"], "Fixed commit": "62e7b7840825accd873d28fcb7e2108146d70c30", "Url": "https://api.github.com/repos/thalerjonathan/Masterthesis", "Date": "2016-03-01T09:51:34Z"},
{"Line": "=>402", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { userInformantStorage.rentMovies(1, new int[]{ 8, 13, 24 }); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8236/buggy-version/src.main.java.pl.mszkwarkowski.data.Creator.java", "BodyUseAPI": ["pl.mszkwarkowski.api.UserInformantStorage.rentMovies(int,int[])"], "Fixed commit": "d23e1d33dea985d7decccb0fdf8580ba08aec6ea", "Url": "https://api.github.com/repos/MateuszSz93/FirstTask", "Date": "2017-01-16T20:39:18Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return org.sonar.api.utils.DateUtils.parseDateTime(s); } catch (org.sonar.api.utils.SonarException notDateTime) { try { return org.sonar.api.utils.DateUtils.parseDate(s); } catch (org.sonar.api.utils.SonarException notDateEither) { throw new org.sonar.api.utils.SonarException(java.lang.String.format(\"'%s' cannot be parsed as either a date or date+time\", s)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6888/buggy-version/sonar-plugin-api.src.main.java.org.sonar.api.server.ws.Request.java", "BodyUseAPI": ["org.sonar.api.utils.DateUtils.parseDateTime(java.lang.String)"], "Fixed commit": "f7448d03e2ac1921975c89b4572fe1efe6ba81bb", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2014-07-30T09:46:11Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { table = gson.fromJson(content, greymerk.roguelike.treasure.loot.provider.tables.FileTable.class); } catch (java.lang.Exception ex) { throw new java.lang.RuntimeException(((\"Error while parsing \" + (file.getName())) + \":\"), ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/718/buggy-version/src.main.java.greymerk.roguelike.treasure.loot.provider.tables.FileTable.java", "BodyUseAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Fixed commit": "64a98d7144579312d4ace7bf680914ad4e777bd9", "Url": "https://api.github.com/repos/CannibalVox/minecraft-roguelike", "Date": "2015-01-23T20:40:02Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { metaDataResponse = mapper.treeToValue(response, org.embulk.output.mailchimp.model.MetaDataResponse.class); org.embulk.output.mailchimp.MailChimpClient.mailchimpEndpoint = java.text.MessageFormat.format(org.embulk.output.mailchimp.MailChimpClient.mailchimpEndpoint, metaDataResponse.getDc()); } catch (com.fasterxml.jackson.core.JsonProcessingException e) { throw new org.embulk.spi.DataException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5086/buggy-version/src.main.java.org.embulk.output.mailchimp.MailChimpClient.java", "BodyUseAPI": ["org.embulk.output.mailchimp.model.MetaDataResponse.getDc()", "com.fasterxml.jackson.databind.ObjectMapper.treeToValue(com.fasterxml.jackson.databind.JsonNode,java.lang.Class)", "java.text.MessageFormat.format(java.lang.String,metaDataResponse.getDc())"], "Fixed commit": "a7aee63eb106da29182ed49431f53a70f4e9821b", "Url": "https://api.github.com/repos/treasure-data/embulk-output-mailchimp", "Date": "2017-08-21T04:51:20Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { client.sendRequest(endpoint, HttpMethod.GET, task); org.embulk.output.mailchimp.MailChimpClient.mailchimpEndpoint = java.text.MessageFormat.format(org.embulk.output.mailchimp.MailChimpClient.mailchimpEndpoint, domain); } catch (org.eclipse.jetty.client.HttpResponseException re) { throw new org.embulk.config.ConfigException(\"Your API key may be invalid, or you've attempted to access the wrong datacenter.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5086/buggy-version/src.main.java.org.embulk.output.mailchimp.MailChimpClient.java", "BodyUseAPI": ["java.text.MessageFormat.format(java.lang.String,java.lang.String)", "org.embulk.output.mailchimp.MailChimpHttpClient.sendRequest(java.lang.String,HttpMethod.GET,MailChimpOutputPluginDelegate.PluginTask)"], "Fixed commit": "a7aee63eb106da29182ed49431f53a70f4e9821b", "Url": "https://api.github.com/repos/treasure-data/embulk-output-mailchimp", "Date": "2017-08-21T04:51:20Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { pattern = bundle.getString(key); if ((arguments.length) > 0) return java.text.MessageFormat.format(pattern, arguments); else return pattern; } catch (java.lang.Exception ex) { if (pattern != null) return pattern; else return (\"- \" + key) + \" -\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/812/buggy-version/VotingSystemWebAPI.src.main.java.org.votingsystem.web.util.MessagesVS.java", "BodyUseAPI": ["java.util.ResourceBundle.getString(java.lang.String)", "java.text.MessageFormat.format(java.lang.String,java.lang.Object[])"], "Fixed commit": "3e8fccd77ec33b9428639f86cd10380cf9c21c44", "Url": "https://api.github.com/repos/votingsystem/votingsystem", "Date": "2016-08-15T12:37:10Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { loaddata.loadAll(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2159/buggy-version/EscapeFromCastleDreadCliff.app.src.main.java.com.example.deadmountain.escapefromcastledreadcliff.MainActivity.java", "BodyUseAPI": ["com.example.deadmountain.escapefromcastledreadcliff.loadData.loadAll()"], "Fixed commit": "ea3d05ef114cfdebf0f4091f55f791917865fed0", "Url": "https://api.github.com/repos/OliverJ20/Escape-from-Castle-Dreadcliff", "Date": "2017-05-03T12:28:41Z"},
{"Line": "=>420", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mBackoffPolicy = com.evernote.android.job.JobRequest.BackoffPolicy.valueOf(cursor.getString(cursor.getColumnIndex(JobStorage.COLUMN_BACKOFF_POLICY))); } catch (java.lang.Throwable t) { com.evernote.android.job.JobRequest.CAT.e(t); mBackoffPolicy = com.evernote.android.job.JobRequest.DEFAULT_BACKOFF_POLICY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7268/buggy-version/library.src.main.java.com.evernote.android.job.JobRequest.java", "BodyUseAPI": ["com.evernote.android.job.JobRequest.BackoffPolicy.valueOf(cursor.getString(cursor.getColumnIndex(JobStorage.COLUMN_BACKOFF_POLICY)))", "android.database.Cursor.getColumnIndex(JobStorage.COLUMN_BACKOFF_POLICY)", "android.database.Cursor.getString(cursor.getColumnIndex(JobStorage.COLUMN_BACKOFF_POLICY))"], "Fixed commit": "d81de8c87c5bfc7917e700252d2fb5b491db80d3", "Url": "https://api.github.com/repos/evernote/android-job", "Date": "2015-11-13T12:38:39Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mNetworkType = com.evernote.android.job.JobRequest.NetworkType.valueOf(cursor.getString(cursor.getColumnIndex(JobStorage.COLUMN_NETWORK_TYPE))); } catch (java.lang.Throwable t) { com.evernote.android.job.JobRequest.CAT.e(t); mNetworkType = com.evernote.android.job.JobRequest.DEFAULT_NETWORK_TYPE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7268/buggy-version/library.src.main.java.com.evernote.android.job.JobRequest.java", "BodyUseAPI": ["android.database.Cursor.getString(cursor.getColumnIndex(JobStorage.COLUMN_NETWORK_TYPE))", "android.database.Cursor.getColumnIndex(JobStorage.COLUMN_NETWORK_TYPE)", "com.evernote.android.job.JobRequest.NetworkType.valueOf(cursor.getString(cursor.getColumnIndex(JobStorage.COLUMN_NETWORK_TYPE)))"], "Fixed commit": "d81de8c87c5bfc7917e700252d2fb5b491db80d3", "Url": "https://api.github.com/repos/evernote/android-job", "Date": "2015-11-13T12:38:39Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { newGame.setYear(java.lang.Integer.parseInt(tableData.get(5).text())); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1882/buggy-version/src.com.rfgeneration.scrapers.SearchScraper.java", "BodyUseAPI": ["tableData.get(5).text()", "java.lang.Integer.parseInt(tableData.get(5).text())", "com.rfgeneration.objects.Game.setYear(int)", "org.jsoup.select.Elements.get(int)"], "Fixed commit": "c77dd7ce19006db9645054261fc2b0c84015913b", "Url": "https://api.github.com/repos/theGrue/RFGeneration", "Date": "2011-09-17T23:52:08Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.conn.close(); } catch (java.sql.SQLException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/9172/buggy-version/src.com.oltpbenchmark.api.Worker.java", "BodyUseAPI": ["java.sql.Connection.close()"], "Fixed commit": "e693c623165ea98da37e4d70094eb9b79deedddf", "Url": "https://api.github.com/repos/oltpbenchmark/oltpbench", "Date": "2015-06-18T20:03:28Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { rs = bodyToUnitGraph.getUnchecked(body); } catch (java.lang.Exception e) { nu.NUDisplay.error((\"exception: \" + (e.toString())), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5746/buggy-version/src.soot.jimple.toolkits.ide.icfg.AbstractJimpleBasedICFG.java", "BodyUseAPI": ["com.google.common.cache.LoadingCache<soot.Body, soot.toolkits.graph.DirectedGraph<soot.Unit>>.getUnchecked(soot.Body)"], "Fixed commit": "e37252b14162fa885ea4399691da790fc3c04e38", "Url": "https://api.github.com/repos/xph906/SootNew", "Date": "2017-03-30T16:08:26Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.dbunit.Assertion.assertEquals(expectedTableWithFilteredColumns, actualTableWithFilteredColumns, diffCollector); } catch (java.lang.Throwable e) { errorCollector.collect(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1821/buggy-version/dbunit.src.main.java.org.jboss.arquillian.persistence.dbunit.DataSetComparator.java", "BodyUseAPI": ["org.dbunit.Assertion.assertEquals(org.jboss.arquillian.persistence.dbunit.ITable,org.jboss.arquillian.persistence.dbunit.ITable,org.dbunit.assertion.DiffCollectingFailureHandler)"], "Fixed commit": "6577f0357b16f49cc0ea43c2ae2eef625cc9efdf", "Url": "https://api.github.com/repos/arquillian/arquillian-extension-persistence", "Date": "2014-08-11T18:48:07Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { workerMgr.onJarResponse(worker, false); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6078/buggy-version/SkynetServer.src.main.java.com.skynetcomputing.skynetserver.ServerConnection.java", "BodyUseAPI": ["com.skynetcomputing.skynetserver.WorkerManager.onJarResponse(com.skynetcomputing.skynetserver.Worker,boolean)"], "Fixed commit": "e0fd7026aa300cc46f59b2d45a4654fd52fbcbc3", "Url": "https://api.github.com/repos/SkynetComputing/Skynet", "Date": "2016-05-11T09:30:15Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { workerMgr.onOutputReceived(worker, aFile); } catch (java.io.IOException e) { throw new java.lang.IllegalStateException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6078/buggy-version/SkynetServer.src.main.java.com.skynetcomputing.skynetserver.ServerConnection.java", "BodyUseAPI": ["com.skynetcomputing.skynetserver.WorkerManager.onOutputReceived(com.skynetcomputing.skynetserver.Worker,java.io.File)"], "Fixed commit": "e0fd7026aa300cc46f59b2d45a4654fd52fbcbc3", "Url": "https://api.github.com/repos/SkynetComputing/Skynet", "Date": "2016-05-11T09:30:15Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { workerMgr.onJarResponse(worker, true); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6078/buggy-version/SkynetServer.src.main.java.com.skynetcomputing.skynetserver.ServerConnection.java", "BodyUseAPI": ["com.skynetcomputing.skynetserver.WorkerManager.onJarResponse(com.skynetcomputing.skynetserver.Worker,boolean)"], "Fixed commit": "e0fd7026aa300cc46f59b2d45a4654fd52fbcbc3", "Url": "https://api.github.com/repos/SkynetComputing/Skynet", "Date": "2016-05-11T09:30:15Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { final javax.ws.rs.client.Invocation.Builder request = buildRequest(); if ((state.get()) == (org.jboss.resteasy.plugins.providers.sse.SseEventSourceImpl.State.OPEN)) { eventInput = request.get(javax.ws.rs.sse.SseEventInput.class); } } finally { if ((connectedLatch) != null) { connectedLatch.countDown(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6693/buggy-version/providers.sse.src.main.java.org.jboss.resteasy.plugins.providers.sse.SseEventSourceImpl.java", "BodyUseAPI": ["org.jboss.resteasy.plugins.providers.sse.SseEventSourceImpl.EventHandler.buildRequest()", "java.util.concurrent.atomic.AtomicReference<org.jboss.resteasy.plugins.providers.sse.SseEventSourceImpl.State>.get()", "Invocation.Builder.get(java.lang.Class)"], "Fixed commit": "d43f1538e3542997e77ad5181d17f76c2f4ce635", "Url": "https://api.github.com/repos/asoldano/Resteasy", "Date": "2017-02-10T22:51:23Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { launchTimeoutSec = java.lang.Integer.parseInt(java.lang.System.getProperty(\"jclouds.plugin.launchTimeoutSec\")); } catch (java.lang.NumberFormatException e) { jenkins.plugins.jclouds.compute.JCloudsCloud.LOGGER.log(java.util.logging.Level.WARNING, \"Failed to get system property \\\"jclouds.plugin.launchTimeoutSec\\\"\"); launchTimeoutSec = 5 * 60; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8425/buggy-version/jclouds-plugin.src.main.java.jenkins.plugins.jclouds.compute.JCloudsCloud.java", "BodyUseAPI": ["java.lang.System.getProperty(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "ef72e32169e75b36027694cff1ef9be46769c085", "Url": "https://api.github.com/repos/KasperDeng/jclouds-plugin", "Date": "2016-08-18T10:57:22Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { connectInterval = java.lang.Integer.parseInt(java.lang.System.getProperty(\"jclouds.plugin.connectInterval\")); } catch (java.lang.NumberFormatException e) { jenkins.plugins.jclouds.compute.JCloudsCloud.LOGGER.log(java.util.logging.Level.WARNING, \"Failed to get system property \\\"jclouds.plugin.connectInterval\\\"\"); connectInterval = 10; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8425/buggy-version/jclouds-plugin.src.main.java.jenkins.plugins.jclouds.compute.JCloudsCloud.java", "BodyUseAPI": ["java.lang.System.getProperty(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "ef72e32169e75b36027694cff1ef9be46769c085", "Url": "https://api.github.com/repos/KasperDeng/jclouds-plugin", "Date": "2016-08-18T10:57:22Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { longip = ip2num(ip); } catch (java.lang.NumberFormatException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3676/buggy-version/src.freenet.clients.http.geoip.IPConverter.java", "BodyUseAPI": ["freenet.clients.http.geoip.IPConverter.ip2num(java.lang.String)"], "Fixed commit": "3e432aa7485f5aa7234e2515c394e25bb8e744a0", "Url": "https://api.github.com/repos/freenet/fred", "Date": "2011-05-31T21:36:57Z"},
{"Line": "=>1739", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { new java.net.URL(url); } catch (java.net.MalformedURLException mue) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2603/buggy-version/src.com.ichi2.anki.AbstractFlashcardViewer.java", "BodyUseAPI": [], "Fixed commit": "62cc0e49bb8787b5287a3d3abed64e0b9ef4166b", "Url": "https://api.github.com/repos/hssm/Anki-Android", "Date": "2014-07-21T13:03:24Z"},
{"Line": "=>1256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { stmt.executeUpdate(\"ALTER TABLE ONLY keys DROP CONSTRAINT keys_reftable_fkey\"); } catch (java.lang.Exception e) { if (!(e.getMessage().contains(\"constraint \\\"keys_reftable_fkey\\\" of relation \\\"keys\\\" does not exist\"))) { throw e; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7526/buggy-version/src.org.pine.dao.Dao.java", "BodyUseAPI": ["java.sql.Statement.executeUpdate(java.lang.String)"], "Fixed commit": "b5ce87d9d5781b17dfc57ea17b46d8abd781e452", "Url": "https://api.github.com/repos/barik87/pine", "Date": "2013-05-14T13:34:53Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { redirectUri = com.schibsted.android.sdk.utils.SPiDUrl.getAuthorizationURL(); } catch (java.io.UnsupportedEncodingException e) { com.schibsted.android.sdk.logger.SPiDLogger.log(\"Could not encode authorization redirect uri, falling back to app redirect uri\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/183/buggy-version/SPiDSDK.src.com.schibsted.android.sdk.user.SPiDUser.java", "BodyUseAPI": ["com.schibsted.android.sdk.utils.SPiDUrl.getAuthorizationURL()"], "Fixed commit": "aac4d93ea51bfa456d47fde76ad1044fb1b84c76", "Url": "https://api.github.com/repos/schibsted/sdk-android", "Date": "2013-07-08T13:08:15Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { return methodInvocation.proceed(); } finally { _shardAdvice.popCompanyService(); com.liferay.portal.kernel.dao.shard.ShardUtil.setTargetSource(currentShardName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6411/buggy-version/portal-impl.src.com.liferay.portal.dao.shard.advice.ShardPersistenceAdvice.java", "BodyUseAPI": ["org.aopalliance.intercept.MethodInvocation.proceed()"], "Fixed commit": "d19823670c26b2c91b70b8e0927761a7a45d9015", "Url": "https://api.github.com/repos/miles-huang/liferay-portal", "Date": "2014-02-20T02:45:33Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { gm = org.bukkit.GameMode.getByValue(java.lang.Integer.parseInt(args[0])); } catch (java.lang.NumberFormatException e) { gm = org.bukkit.GameMode.valueOf(args[0].toUpperCase()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/827/buggy-version/src.info.bytecraft.commands.GameModeCommand.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "org.bukkit.GameMode.getByValue(int)"], "Fixed commit": "3bf8a616f1cd0b181bd3c013862b637ec1ea5aa9", "Url": "https://api.github.com/repos/sabersamus/Bytecraft", "Date": "2014-01-28T05:39:01Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { w = new java.io.OutputStreamWriter(out); w.write(content.toString()); } finally { if (w != null) { w.close(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6954/buggy-version/CriminalIntent.app.src.main.java.com.erikars.criminalintent.serialization.CriminalIntentJsonSerializer.java", "BodyUseAPI": ["java.io.Writer.write(content.toString())", "org.json.JSONArray.toString()"], "Fixed commit": "805e813b8dcfda5be919bd844b802860bf47128e", "Url": "https://api.github.com/repos/ErikaRS/BigNerdRanch", "Date": "2014-09-28T21:43:32Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return ((com.google.gson.JsonObject) (executedMethod.invoke(handler, request, session))); } catch (java.lang.reflect.InvocationTargetException e) { invocationTargetExceptionResolve(e); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/919/buggy-version/src.main.java.com.devicehive.websockets.Endpoint.java", "BodyUseAPI": ["java.lang.reflect.Method.invoke(com.devicehive.websockets.handlers.HiveMessageHandlers,com.google.gson.JsonObject,javax.websocket.Session)"], "Fixed commit": "786e275613c5996a78d63309c10e5392bdd07437", "Url": "https://api.github.com/repos/devicehive/devicehive-java", "Date": "2013-08-10T07:22:36Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { event.setDescription(appt.getBody().toString()); } catch (microsoft.exchange.webservices.data.core.exception.service.local.ServiceLocalException e) { event.setDescription(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3458/buggy-version/src.main.java.org.dsa.iot.calendar.ews.ExchangeCalendar.java", "BodyUseAPI": ["org.dsa.iot.calendar.abstractions.DSAEvent.setDescription(appt.getBody().toString())", "microsoft.exchange.webservices.data.core.service.item.Appointment.getBody()", "appt.getBody().toString()"], "Fixed commit": "fd74f361f42402b17ae543ad97f75c9ccabe3df1", "Url": "https://api.github.com/repos/IOT-DSA/dslink-java-calendar", "Date": "2016-07-28T22:10:34Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { localhost = java.net.InetAddress.getLocalHost().getHostName(); } catch (java.net.UnknownHostException e) { localhost = \"unknown\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8710/buggy-version/src.com.t_oster.liblasercut.drivers.EpilogCutter.java", "BodyUseAPI": ["java.net.InetAddress.getHostName()", "java.net.InetAddress.getLocalHost()"], "Fixed commit": "8fdf2d1e6a67a05da63a12c9cd898f2539344c8a", "Url": "https://api.github.com/repos/t-oster/VisiCut", "Date": "2011-10-24T17:44:13Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { in.outputImage(args[3], args[4]); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3136/buggy-version/Driver.java", "BodyUseAPI": ["ImageDN.outputImage(java.lang.String,java.lang.String)"], "Fixed commit": "caf05b41cf327f5a262f3b16cdb82425c0e7b0a4", "Url": "https://api.github.com/repos/moog500/FinalProjJavaSem1", "Date": "2016-01-19T00:58:27Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return userProfileDao.findProfileByUserId(userId); } catch (javax.persistence.NoResultException nre) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5992/buggy-version/src.main.java.com.jay.news.fiddle.service.UserProfileService.java", "BodyUseAPI": ["com.jay.news.fiddle.dao.UserProfileDao.findProfileByUserId(int)"], "Fixed commit": "8c5a888dc1a85deac651d4f229d74c8fff368743", "Url": "https://api.github.com/repos/jayandh06/newsFiddle", "Date": "2014-03-21T02:50:48Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { int mCurrentPosition = mMediaPlayer.getCurrentPosition(); mTrackProgress.setProgress(mCurrentPosition); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/651/buggy-version/app.src.main.java.com.bojie.musicbo.StreamerActivityFragment.java", "BodyUseAPI": ["android.media.MediaPlayer.getCurrentPosition()", "android.widget.SeekBar.setProgress(int)"], "Fixed commit": "19410b2a9a4ce8b292a3861f913c7ec62cb7988b", "Url": "https://api.github.com/repos/jbj88817/MusicBo-android", "Date": "2015-08-30T22:44:34Z"},
{"Line": "=>475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { unregisterReceiver(mReceiver); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/537/buggy-version/app.src.main.java.com.onerun.onerun.onerun.Running.java", "BodyUseAPI": ["com.onerun.onerun.onerun.Running.unregisterReceiver(android.content.BroadcastReceiver)"], "Fixed commit": "d8038b2991b52e0abb446651a74812139d940b02", "Url": "https://api.github.com/repos/HarrisYip/oneRun", "Date": "2015-04-01T20:37:01Z"},
{"Line": "=>505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { unregisterReceiver(mReceiver); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/537/buggy-version/app.src.main.java.com.onerun.onerun.onerun.Running.java", "BodyUseAPI": ["com.onerun.onerun.onerun.Running.6.unregisterReceiver(android.content.BroadcastReceiver)"], "Fixed commit": "d8038b2991b52e0abb446651a74812139d940b02", "Url": "https://api.github.com/repos/HarrisYip/oneRun", "Date": "2015-04-01T20:37:01Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { getActivity().unregisterReceiver(mStateSetReceiver); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8309/buggy-version/app.src.main.java.org.cm.podd.report.fragment.DashboardFeedFragment.java", "BodyUseAPI": ["org.cm.podd.report.fragment.DashboardFeedFragment.getActivity()", "getActivity().unregisterReceiver(android.content.BroadcastReceiver)"], "Fixed commit": "08d9ce947b2cd8ef57a09d4e4d0e0f9730db6a65", "Url": "https://api.github.com/repos/openpodd/podd-android", "Date": "2017-04-28T03:56:52Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { user = query.getSingleResult(); return ((com.duggan.workflow.server.dao.model.User) (user)); } catch (javax.persistence.NoResultException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1917/buggy-version/src.com.duggan.workflow.server.dao.UserGroupDaoImpl.java", "BodyUseAPI": ["javax.persistence.Query.getSingleResult()"], "Fixed commit": "e269db62a34751d5a7919edc2ab834a5d0098f76", "Url": "https://api.github.com/repos/duggankimani/JBPMHT", "Date": "2013-09-21T11:37:24Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { tempWriter.flush(); outState.putInt(\"index\", index); outState.putByteArray(\"lastBytes\", lastBytes); } catch (java.io.IOException e) { android.widget.Toast.makeText(getApplicationContext(), (\"ERROR: Failed to flush data to \" + (tempFile.getPath())), Toast.LENGTH_LONG).show(); e.printStackTrace(); setResult(com.github.xloem.qrstream.RESULT_CANCELED, getIntent()); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2914/buggy-version/android.app.src.main.java.com.github.xloem.qrstream.Receive.java", "BodyUseAPI": ["java.io.BufferedWriter.flush()", "android.os.Bundle.putByteArray(java.lang.String,byte[])", "android.os.Bundle.putInt(java.lang.String,int)"], "Fixed commit": "979ea75288ca5877ae893cf0cad0e9cd3003c5e6", "Url": "https://api.github.com/repos/xloem/qrstream", "Date": "2015-05-13T19:42:53Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return super.onTouchEvent(ev); } catch (java.lang.Exception ignored) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6884/buggy-version/src.com.arcusapp.soundbox.util.CustomViewPager.java", "BodyUseAPI": ["android.support.v4.view.ViewPager.onTouchEvent(android.view.MotionEvent)"], "Fixed commit": "afb87cf33a17fda28281920e655948ab8230adaf", "Url": "https://api.github.com/repos/FlyingPumba/SoundBox", "Date": "2014-03-13T00:53:12Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return super.onInterceptTouchEvent(ev); } catch (java.lang.Exception ignored) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6884/buggy-version/src.com.arcusapp.soundbox.util.CustomViewPager.java", "BodyUseAPI": ["android.support.v4.view.ViewPager.onInterceptTouchEvent(android.view.MotionEvent)"], "Fixed commit": "afb87cf33a17fda28281920e655948ab8230adaf", "Url": "https://api.github.com/repos/FlyingPumba/SoundBox", "Date": "2014-03-13T00:53:12Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { version = ((java.lang.Double) (jsonObject.get(\"version\"))); } catch (java.lang.ClassCastException e) { version = ((java.lang.Long) (jsonObject.get(\"version\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5529/buggy-version/src.main.java.org.parabot.core.parsers.servers.PublicServers.java", "BodyUseAPI": ["org.json.simple.JSONObject.get(java.lang.String)"], "Fixed commit": "e4b6ad4beddf377ed87dd28de0a3ae0f4331f731", "Url": "https://api.github.com/repos/Parabot/Parabot", "Date": "2017-02-21T00:45:19Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.sun.faban.driver.transport.sunhttp.HttpClient.getMethod = sun.net.www.http.HttpClient.kac.getClass().getMethod(\"get\", new java.lang.Class[]{ java.net.URL.class, java.lang.Object.class }); } catch (java.lang.NoSuchMethodException nsme) { throw new java.lang.ExceptionInInitializerError(nsme); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/9029/buggy-version/driver.src.com.sun.faban.driver.transport.sunhttp.HttpClient.java", "BodyUseAPI": ["java.lang.Class<? extends sun.net.www.http.KeepAliveCache>.getMethod(java.lang.String,java.lang.Class[])", "sun.net.www.http.KeepAliveCache.getClass()"], "Fixed commit": "04fcb239594aba0cd0c720dc9dc1073fdd1f88da", "Url": "https://api.github.com/repos/johnaoahra80/faban", "Date": "2014-04-16T03:06:23Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { busyDialog.dismiss(); } catch (java.lang.IllegalArgumentException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8795/buggy-version/src.com.picdora.player.ChannelViewActivity.java", "BodyUseAPI": ["android.app.Dialog.dismiss()"], "Fixed commit": "b00ad745a0113aa3b3f132c67559866b97f88280", "Url": "https://api.github.com/repos/elihart/picdora-android", "Date": "2014-02-28T23:42:17Z"},
{"Line": "=>542", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String song = mPlayer.formatReceiterSDCardSong(mTafseerManager.getAyaAudioFileNames().get(playingTrack), mTafseerManager.getLoggedInUser().getDefaultReciter()); HighLightPlayingAya(playingTrack); mPlayer.playFromSdcardWithCompletion(song); android.util.Log.i(\"MY SONG PATH\", song); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7825/buggy-version/AlMoufasserAlSaghir.src.com.almoufasseralsaghir.EyetPlayerActivity.java", "BodyUseAPI": ["mTafseerManager.getAyaAudioFileNames().get(int)", "com.almoufasseralsaghir.external.TafseerMediaPlayer.playFromSdcardWithCompletion(java.lang.String)", "mTafseerManager.getLoggedInUser().getDefaultReciter()", "com.almoufasseralsaghir.EyetPlayerActivity.HighLightPlayingAya(int)", "android.util.Log.i(java.lang.String,java.lang.String)", "com.almoufasseralsaghir.EyetPlayerActivity.getAyaAudioFileNames()", "com.almoufasseralsaghir.external.TafseerMediaPlayer.formatReceiterSDCardSong(mTafseerManager.getAyaAudioFileNames().get(playingTrack),mTafseerManager.getLoggedInUser().getDefaultReciter())", "com.almoufasseralsaghir.EyetPlayerActivity.getLoggedInUser()"], "Fixed commit": "d0c2f7089672d32ff7b9b09852051e7c1fafe869", "Url": "https://api.github.com/repos/SuperHich/AlMoufasserAlSaghir", "Date": "2014-07-14T14:32:38Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { for (android.content.ContentValues value : values) { com.zhangwx.z_utils.Z_DB.DataBaseHelper.getInstance().getWritableDatabase().insert(com.zhangwx.z_utils.Z_DB.UserInfoTable.TABLE_USER_INFO, null, value); } database.setTransactionSuccessful(); } finally { database.endTransaction(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6035/buggy-version/app.src.main.java.com.zhangwx.z_utils.Z_DB.UserInfoTable.java", "BodyUseAPI": ["com.zhangwx.z_utils.Z_DB.DataBaseHelper.getInstance()", "com.zhangwx.z_utils.Z_DB.DataBaseHelper.getInstance().getWritableDatabase().insert(java.lang.String,<nulltype>,android.content.ContentValues)", "android.database.sqlite.SQLiteDatabase.setTransactionSuccessful()", "com.zhangwx.z_utils.Z_DB.DataBaseHelper.getInstance().getWritableDatabase()"], "Fixed commit": "a7a730767c80631c9ae9f318498094bbee03df66", "Url": "https://api.github.com/repos/iamzhangweixiong/Z_Utils", "Date": "2017-05-14T10:45:03Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.nimpres.android.NimpresObjects.presentationPassword = java.net.URLEncoder.encode(NimpresObjects.presentationPassword, \"UTF-8\"); } catch (java.io.UnsupportedEncodingException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1384/buggy-version/src.com.nimpres.android.ui.HostPresentation.java", "BodyUseAPI": ["java.net.URLEncoder.encode(NimpresObjects.presentationPassword,java.lang.String)"], "Fixed commit": "1760e94d8e4de659802747090ab632f21748bbd7", "Url": "https://api.github.com/repos/mattixtech/Nimpres", "Date": "2011-04-06T14:41:53Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { asynchWithPool.multiplyPool(left.getMatrix(), right.getMatrix(), 8); } catch (java.lang.IllegalArgumentException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8471/buggy-version/src.homework.Main.java", "BodyUseAPI": ["homework.Matrix.multiplyPool(left.getMatrix(),right.getMatrix(),int)", "homework.Matrix.getMatrix()", "homework.Matrix.getMatrix()"], "Fixed commit": "2be32c752f7101e1f8b3e0942bcd86fffe55bcd5", "Url": "https://api.github.com/repos/DiBochev/JAVA_SAP_project", "Date": "2015-01-15T16:38:56Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { bus = com.pi4j.io.i2c.I2CFactory.getInstance(busId); } catch (com.pi4j.io.i2c.I2CFactory e) { throw new java.io.IOException(\"Unsupported Bus Number\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/4271/buggy-version/src.main.java.com.dexterind.grovepi.Board.java", "BodyUseAPI": ["com.pi4j.io.i2c.I2CFactory.getInstance(int)"], "Fixed commit": "158970c262db01f104d8b9e91f207cc85ae6c670", "Url": "https://api.github.com/repos/jonasliekens/htfGrovePi", "Date": "2016-12-01T10:23:48Z"},
{"Line": "=>712", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { file = new java.net.URL(((\"file:./\" + (me.drton.jmavsim.Visualizer3D.TEX_DIR)) + (me.drton.jmavsim.Visualizer3D.COMPASS_IMG))); } catch (java.net.MalformedURLException e) { java.lang.System.err.println(((\"Error, could not load image: \" + (me.drton.jmavsim.Visualizer3D.TEX_DIR)) + (me.drton.jmavsim.Visualizer3D.COMPASS_IMG))); java.lang.System.err.println(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/984/buggy-version/src.me.drton.jmavsim.Visualizer3D.java", "BodyUseAPI": [], "Fixed commit": "23f6a6581aab911eb2beac55483d64be1805e521", "Url": "https://api.github.com/repos/whyscience/jMAVSim_Ubuntu", "Date": "2016-04-04T06:36:47Z"},
{"Line": "=>558", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (apns.get(0).MMSCenterUrl.equals(\"\")) { com.google.android.mms.APNHelper helper = new com.google.android.mms.APNHelper(context); apns = helper.getMMSApns(); } } catch (java.lang.Exception e) { markMmsFailed(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1650/buggy-version/src.com.klinker.android.send_message.Transaction.java", "BodyUseAPI": ["java.util.List<com.google.android.mms.APN>.get(int)", "com.google.android.mms.APNHelper.getMMSApns()", "apns.get(0).MMSCenterUrl.equals(java.lang.String)"], "Fixed commit": "4cde5cd6095db5dacaabcc00099d77907e1d8cff", "Url": "https://api.github.com/repos/klinker41/android-smsmms", "Date": "2013-10-07T01:34:54Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { launch(args); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/701/buggy-version/src.smp.SuperMarioPaint.java", "BodyUseAPI": ["smp.SuperMarioPaint.launch(java.lang.String[])"], "Fixed commit": "20772b9361718c065ecd5c8b513a9e3aa8c0abc5", "Url": "https://api.github.com/repos/DC37/Super-Mario-Paint", "Date": "2013-11-16T07:20:19Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { launch(args); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/701/buggy-version/src.smp.SuperMarioPaint.java", "BodyUseAPI": ["smp.SuperMarioPaint.launch(java.lang.String[])"], "Fixed commit": "20772b9361718c065ecd5c8b513a9e3aa8c0abc5", "Url": "https://api.github.com/repos/DC37/Super-Mario-Paint", "Date": "2013-11-16T07:20:19Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(5000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2607/buggy-version/src.main.java.ar.edu.tp.domain.processor.StatisticalProcessorDeamonStrategy.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "7b82ea1cd20b90722d93d1ae0cc40a99e436885f", "Url": "https://api.github.com/repos/lunaechechuriignacio/aydoo2015_tpfinal", "Date": "2015-07-10T04:35:08Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (destClass.equals(org.joda.time.DateTime.class)) return org.joda.time.DateTime.parse(((java.lang.String) (src)), org.joda.time.format.DateTimeFormat.forPattern(findFormat(((java.lang.String) (src))))); else return org.joda.time.DateTime.parse(((java.lang.String) (src)), org.joda.time.format.DateTimeFormat.forPattern(findFormat(((java.lang.String) (src))))).toLocalDate(); } catch (java.lang.IllegalArgumentException e) { logger.error(\"Error occurred\", e); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6339/buggy-version/whp-common.src.main.java.org.motechproject.whp.common.mapping.StringToDateTime.java", "BodyUseAPI": ["org.joda.time.DateTime.parse(((java.lang.String) (src)), org.joda.time.format.DateTimeFormat.forPattern(findFormat(((java.lang.String) (src))))).toLocalDate()", "org.motechproject.whp.common.mapping.StringToDateTime.findFormat(java.lang.Object)", "org.joda.time.DateTime.parse(java.lang.Object,org.joda.time.format.DateTimeFormat.forPattern(findFormat(((java.lang.String) (src)))))", "org.joda.time.format.DateTimeFormat.forPattern(java.lang.String)", "org.motechproject.whp.common.mapping.StringToDateTime.findFormat(java.lang.Object)", "java.lang.Class<?>.equals(java.lang.Class)", "org.joda.time.format.DateTimeFormat.forPattern(java.lang.String)", "org.joda.time.DateTime.parse(java.lang.Object,org.joda.time.format.DateTimeFormat.forPattern(findFormat(((java.lang.String) (src)))))"], "Fixed commit": "a6495f3f477f1fa3a203526aa376a9ea3787f60a", "Url": "https://api.github.com/repos/motech/motech-whp", "Date": "2012-10-26T06:13:27Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { networks = getNetworksByQuery(query, column); } catch (java.lang.Exception e) { throw getError(\"Could not get networks.\", e, Response.Status.INTERNAL_SERVER_ERROR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5526/buggy-version/src.main.java.org.cytoscape.rest.internal.resource.NetworkResource.java", "BodyUseAPI": ["org.cytoscape.rest.internal.resource.NetworkResource.getNetworksByQuery(java.lang.String,java.lang.String)"], "Fixed commit": "427b6ee72b84c5f6171df3e565a806f2b0682bff", "Url": "https://api.github.com/repos/keiono/cy-rest", "Date": "2014-10-13T21:48:48Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { snapshot = history.get(currentNode); } catch (java.lang.Exception e) { snapshot = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2395/buggy-version/src.main.org.deidentifier.arx.framework.check.StateMachine.java", "BodyUseAPI": ["org.deidentifier.arx.framework.check.history.History.get(int[])"], "Fixed commit": "fc6d68983011aa60c23fb74891e759e370a17423", "Url": "https://api.github.com/repos/RaffaelBild/arx", "Date": "2017-07-15T13:23:07Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { info.topActivity = taskInfo.topActivity; info.baseActivity = taskInfo.baseActivity; } catch (java.lang.Throwable e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/9/buggy-version/VirtualApp.lib.src.main.java.com.lody.virtual.client.hook.proxies.am.ActivityManagerStub.java", "BodyUseAPI": [], "Fixed commit": "1cd5da53b89feba9898f5ef8a92de858fa29eac3", "Url": "https://api.github.com/repos/dstmath/VirtualApp", "Date": "2017-07-03T09:41:51Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { info.origActivity = taskInfo.baseActivity; info.baseIntent = taskInfo.baseIntent; } catch (java.lang.Throwable e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/9/buggy-version/VirtualApp.lib.src.main.java.com.lody.virtual.client.hook.proxies.am.ActivityManagerStub.java", "BodyUseAPI": [], "Fixed commit": "1cd5da53b89feba9898f5ef8a92de858fa29eac3", "Url": "https://api.github.com/repos/dstmath/VirtualApp", "Date": "2017-07-03T09:41:51Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { trackString = trackString.substring(0, trackString.indexOf('/')); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5012/buggy-version/src.model.SongEntry.java", "BodyUseAPI": ["java.lang.String.indexOf(char)", "java.lang.String.substring(int,int)"], "Fixed commit": "e94192c5cf78fd0ed1e880d975495dd57003ce94", "Url": "https://api.github.com/repos/scottstav/aural", "Date": "2017-03-17T22:33:28Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { gameModel = new gomokuonline.GameModel(); gameController = new gomokuonline.GameController(); gameController.createView(); java.lang.String hostIP = gameModel.getServerIP(); int portNum = gameModel.getServerPort(); socketOut.write(((((((\"CREATE_P2P \" + hostIP) + \" \") + portNum) + \" \") + player) + \" \")); gameModel.hostGame(); } catch (java.io.IOException ex) { java.util.logging.Logger.getLogger(gomokuonline.AdminModel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2565/buggy-version/GomokuOnline.src.gomokuonline.AdminModel.java", "BodyUseAPI": ["gomokuonline.GameModel.getServerIP()", "java.io.BufferedWriter.write(java.lang.String)", "gomokuonline.GameModel.hostGame()", "gomokuonline.GameController.createView()", "gomokuonline.GameModel.getServerPort()"], "Fixed commit": "5caf3e6c2f097bd2af32a6a6c8ec15a5a2527c85", "Url": "https://api.github.com/repos/MathMonsterX/GomokuOnline", "Date": "2015-04-30T16:57:11Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mHead.setNext(mHead.getNext().getNext()); (mSize)--; } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8609/buggy-version/GeneralLibrary.src.com.dspit.musicplayer.PlayingQueue.java", "BodyUseAPI": ["com.dspit.musicplayer.PlayingQueue.Node.getNext()", "com.dspit.musicplayer.PlayingQueue.Node.getNext()", "com.dspit.musicplayer.PlayingQueue.Node.setNext(com.dspit.musicplayer.PlayingQueue.Node)"], "Fixed commit": "a0a6edc952417702b57b24fd83504f7d4e66094b", "Url": "https://api.github.com/repos/DSpit/GeneralLibrary", "Date": "2015-10-19T01:15:24Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { fstats = new org.apache.hadoop.fs.FileStatus[1]; fstats[0] = fs.getFileStatus(path); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8943/buggy-version/src.main.java.com.flipkart.fdp.migration.distcp.state.HDFSStateManager.java", "BodyUseAPI": ["org.apache.hadoop.fs.FileSystem.getFileStatus(org.apache.hadoop.fs.Path)"], "Fixed commit": "22ceb7aeb086fe709163ef134c3a14faba99a822", "Url": "https://api.github.com/repos/flipkart-incubator/BlueShift", "Date": "2015-08-22T12:37:46Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mTurnData.update(mMatch.getData()); updateView(); if ((mMatch.getTurnStatus()) == (com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatch.MATCH_TURN_STATUS_MY_TURN)) { updateMatch(); } } catch (org.json.JSONException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6056/buggy-version/javaplay.app.src.main.java.com.levigilad.javaplay.infra.PlayFragment.java", "BodyUseAPI": ["com.levigilad.javaplay.infra.entities.Turn.update(mMatch.getData())", "com.levigilad.javaplay.infra.PlayFragment.updateView()", "com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatch.getData()", "com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatch.getTurnStatus()", "com.levigilad.javaplay.infra.PlayFragment.updateMatch()"], "Fixed commit": "f3f187b48a484764aa433a1c7ade88f1dd8c1081", "Url": "https://api.github.com/repos/idanlv/JavaPlay_Android", "Date": "2016-10-20T18:25:46Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { workspace = ((com.horstmann.violet.workspace.Workspace) (mainFrame.getActiveWorkspace())); } catch (java.lang.RuntimeException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/187/buggy-version/violetproduct-swing.src.main.java.com.horstmann.violet.application.menu.FileMenu.java", "BodyUseAPI": ["com.horstmann.violet.application.gui.MainFrame.getActiveWorkspace()"], "Fixed commit": "8c8c54bf400f8c9e3de438eb754663356c667eaa", "Url": "https://api.github.com/repos/violetumleditor/violetumleditor", "Date": "2014-10-28T09:50:39Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { onSuccess(result); } catch (java.lang.Exception e) { onError(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6154/buggy-version/library.src.cn.ieclipse.af.common.AsyncTimeoutTask.java", "BodyUseAPI": ["cn.ieclipse.af.common.AsyncTimeoutTask<Params, Progress, Result>.onSuccess(Result)"], "Fixed commit": "521b2316904599639e30d43d3088e13f4b9aab0f", "Url": "https://api.github.com/repos/Jamling/QuickAF", "Date": "2017-07-19T07:52:47Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { new we.should.list.GenericCategory(mName.getText().toString(), fields, this).save(); } catch (java.lang.IllegalArgumentException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8753/buggy-version/src.we.should.NewCategory.java", "BodyUseAPI": ["android.widget.EditText.getText()", "we.should.list.GenericCategory.save()", "mName.getText().toString()"], "Fixed commit": "d3d2d94677bad9b47f1ded2a5d78c8e9caca38ac", "Url": "https://api.github.com/repos/ccemeraldeyes/AndroidLunch", "Date": "2012-05-21T05:34:29Z"},
{"Line": "=>386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { exp = exp.replaceAll((((com.github.sahasatvik.math.ExpressionParser.numberRegex) + \"\\\\s+-\\\\s+\") + (com.github.sahasatvik.math.ExpressionParser.numberRegex)), \" $1 + -($6) \"); exp = parseParenthesis(exp); } catch (java.lang.Exception e) { java.lang.System.out.print(\"You should never see this message. If you do, please inform the author.\"); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1878/buggy-version/src.com.github.sahasatvik.math.ExpressionParser.java", "BodyUseAPI": ["com.github.sahasatvik.math.ExpressionParser.parseParenthesis(java.lang.String)", "java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "f9cfd6df0c75576e9b3e70ba0c324353d8915199", "Url": "https://api.github.com/repos/sahasatvik/Calculator", "Date": "2016-10-19T14:26:37Z"},
{"Line": "=>1517", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.apache.hadoop.hbase.client.crosssite.HBaseAdmin.checkHBaseAvailable(clusterConf); } catch (java.lang.Exception e) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7466/buggy-version/csbt-client.src.main.java.org.apache.hadoop.hbase.client.crosssite.CrossSiteHTable.java", "BodyUseAPI": ["org.apache.hadoop.hbase.client.crosssite.HBaseAdmin.checkHBaseAvailable(org.apache.hadoop.conf.Configuration)"], "Fixed commit": "c7759ffe278e2357914af281b467b7e5236fdeb7", "Url": "https://api.github.com/repos/intel-hadoop/CSBT", "Date": "2014-07-31T02:38:57Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (root.has(\"ansible_host\")) { hostname = root.get(\"ansible_host\").getAsString(); }else if (root.has(\"ansible_ssh_host\")) { hostname = root.get(\"ansible_ssh_host\").getAsString(); } } catch (java.lang.Exception ex) { java.lang.System.out.println((\"[warn] Problem getting the ansible_host attribute from node \" + hostname)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4377/buggy-version/src.main.java.com.batix.rundeck.plugins.AnsibleResourceModelSource.java", "BodyUseAPI": ["com.google.gson.JsonObject.has(java.lang.String)", "com.google.gson.JsonObject.get(java.lang.String)", "root.get(\"ansible_host\").getAsString()", "com.google.gson.JsonObject.has(java.lang.String)", "com.google.gson.JsonObject.get(java.lang.String)", "root.get(\"ansible_ssh_host\").getAsString()"], "Fixed commit": "024db32efad50541d4ad2fff24b06345b68830bb", "Url": "https://api.github.com/repos/ltamaster/rundeck-ansible-plugin", "Date": "2017-04-26T20:36:20Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { put(key, ((ContentBody) (new org.apache.http.entity.mime.content.StringBody(((java.lang.String) (value)), java.nio.charset.Charset.forName(\"UTF-8\"))))); } catch (java.io.UnsupportedEncodingException e) { try { put(key, ((ContentBody) (new org.apache.http.entity.mime.content.StringBody(((java.lang.String) (value)), java.nio.charset.Charset.defaultCharset())))); } catch (java.io.UnsupportedEncodingException e1) { put(key, ((ContentBody) (new org.apache.http.entity.mime.content.StringBody(((java.lang.String) (value)), org.apache.http.entity.ContentType.DEFAULT_TEXT)))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8930/buggy-version/app.src.main.java.com.volleypro.util.ContentHashMap.java", "BodyUseAPI": ["java.nio.charset.Charset.forName(java.lang.String)", "com.volleypro.util.ContentHashMap<String, ContentBody>.put(String,org.apache.http.entity.mime.content.StringBody)"], "Fixed commit": "fb966e7094bd320c8520ac4459e21d4256bba159", "Url": "https://api.github.com/repos/voicetube/android_toolkit_volley", "Date": "2017-09-01T10:09:53Z"},
{"Line": "=>465", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mLond = java.lang.Double.parseDouble(mParams.get(DataBaseHelper.LONGITUDE)); mLatd = java.lang.Double.parseDouble(mParams.get(DataBaseHelper.LATITUDE)); } catch (java.lang.Exception e) { mFound = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6790/buggy-version/src.com.ds.avare.place.Destination.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)", "java.util.LinkedHashMap<java.lang.String, java.lang.String>.get(DataBaseHelper.LATITUDE)", "java.lang.Double.parseDouble(java.lang.String)", "java.util.LinkedHashMap<java.lang.String, java.lang.String>.get(DataBaseHelper.LONGITUDE)"], "Fixed commit": "d83cd314109e50f4d6aba23d84888c24b3608c89", "Url": "https://api.github.com/repos/apps4av/avare", "Date": "2013-04-03T02:17:18Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { image = com.itextpdf.text.Image.getInstance(((imagePath + (custProdPrice.getProductCode())) + \".jpg\")); } catch (java.lang.Exception e) { image = com.itextpdf.text.Image.getInstance(((imagePath + (custProdPrice.getProductCode())) + \".jpeg\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8295/buggy-version/dps-web-service.src.main.java.com.dps.web.service.controller.CustomerProductPriceController.java", "BodyUseAPI": ["com.dps.web.service.model.CustomerProductPricesDTO.getProductCode()", "com.itextpdf.text.Image.getInstance(((imagePath + (custProdPrice.getProductCode())) + \".jpg\"))"], "Fixed commit": "20af67a78635ba47a31a9fa49972f164b76392bc", "Url": "https://api.github.com/repos/ashanbhag12/dps", "Date": "2016-10-01T05:39:25Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { topic_content = document.getElementsByClass(\"topic_content\").first().html(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1450/buggy-version/app.src.main.java.me.xunhou.v2ex.utils.V2EXPaser.java", "BodyUseAPI": ["document.getElementsByClass(\"topic_content\").first().html()", "document.getElementsByClass(\"topic_content\").first()", "org.jsoup.nodes.Document.getElementsByClass(java.lang.String)"], "Fixed commit": "ae72d2a8ba54397fc5e3fa8ae6879ac65b03f5e5", "Url": "https://api.github.com/repos/ihgoo/V2EX", "Date": "2015-05-26T06:28:17Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { c = mDbHelper.getCellData(); } catch (java.lang.IllegalStateException ix) { android.util.Log.e(TAG, ix.getMessage(), ix); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/250/buggy-version/app.src.main.java.com.SecUpwN.AIMSICD.activities.MapViewerOsmDroid.java", "BodyUseAPI": ["com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.getCellData()"], "Fixed commit": "a2ab83fe3d5af3cf4013f848c8f575a581f041f2", "Url": "https://api.github.com/repos/tobykurien/Android-IMSI-Catcher-Detector", "Date": "2014-12-19T22:35:20Z"},
{"Line": "=>808", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { packMessages = messages.newMessages(PackHelper.LANG_FILE_NAME); } catch (java.lang.Exception ex) { com.izforge.izpack.installer.unpacker.UnpackerBase.logger.fine(ex.getLocalizedMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3747/buggy-version/izpack-installer.src.main.java.com.izforge.izpack.installer.unpacker.UnpackerBase.java", "BodyUseAPI": ["com.izforge.izpack.api.resource.Messages.newMessages(PackHelper.LANG_FILE_NAME)"], "Fixed commit": "7f44114acd21370f99165b4f35114a2e266cb224", "Url": "https://api.github.com/repos/izpack/izpack", "Date": "2014-11-03T09:49:47Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { method.call(result); } catch (java.lang.Exception e) { java.lang.System.err.println(\"Post Task Success Event Handler Failed\"); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4120/buggy-version/src.main.java.ledger.controller.register.TaskWithArgsReturn.java", "BodyUseAPI": ["ledger.controller.register.CallableMethod<R>.call(R)"], "Fixed commit": "2af49c715f5b9b25c7077c3b49d492240d506923", "Url": "https://api.github.com/repos/Ledger-Software/Ledger", "Date": "2017-02-12T19:35:29Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { method.call(); } catch (java.lang.Exception e) { java.lang.System.err.println(\"Post Task Success Event Handler Failed\"); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4120/buggy-version/src.main.java.ledger.controller.register.TaskWithArgs.java", "BodyUseAPI": ["ledger.controller.register.CallableMethodVoidNoArgs.call()"], "Fixed commit": "2af49c715f5b9b25c7077c3b49d492240d506923", "Url": "https://api.github.com/repos/Ledger-Software/Ledger", "Date": "2017-02-12T19:35:29Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { method.call(result); } catch (java.lang.Exception e) { java.lang.System.err.println(\"Post Task Success Event Handler Failed\"); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4120/buggy-version/src.main.java.ledger.controller.register.TaskWithReturn.java", "BodyUseAPI": ["ledger.controller.register.CallableMethod<R>.call(R)"], "Fixed commit": "2af49c715f5b9b25c7077c3b49d492240d506923", "Url": "https://api.github.com/repos/Ledger-Software/Ledger", "Date": "2017-02-12T19:35:29Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { connector.receiveFromComponent(connection, packet); } catch (botto.xmpp.botto.xmpp.connector.ConnectorException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5141/buggy-version/botto-service.src.main.java.botto.xmpp.connectors.whack.WhackBotComponent.java", "BodyUseAPI": ["botto.xmpp.connectors.whack.WhackConnector.receiveFromComponent(botto.xmpp.connectors.whack.WhackBotConnection,org.xmpp.packet.Packet)"], "Fixed commit": "fce7fb31fac3d4d3e589fc63efd971e606d7a596", "Url": "https://api.github.com/repos/mcaprari/botto", "Date": "2013-09-04T08:37:29Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { thread.join(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1678/buggy-version/CMPUT301T02Project.src.ca.ualberta.cs.cmput301t02project.Server.java", "BodyUseAPI": ["java.lang.Thread.join()"], "Fixed commit": "320116228330555fe96f4e115ad34719e2cee4bd", "Url": "https://api.github.com/repos/CMPUT301W14T02/Comput301Project", "Date": "2014-03-24T20:27:07Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (org.jdom2.Element e : Layer) { mapLayer.add(new de.game.asylumjam.World.Layer(e.getAttribute(\"height\").getIntValue(), e.getAttribute(\"width\").getIntValue(), e.getAttribute(\"name\").toString())); generateMapArray(e); } } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6850/buggy-version/source.de.game.asylumjam.World.TMXReader.java", "BodyUseAPI": ["e.getAttribute(\"width\").getIntValue()", "org.jdom2.Element.getAttribute(java.lang.String)", "e.getAttribute(\"name\").toString()", "e.getAttribute(\"height\").getIntValue()", "java.util.ArrayList<de.game.asylumjam.World.Layer>.add(de.game.asylumjam.World.Layer)", "org.jdom2.Element.getAttribute(java.lang.String)", "org.jdom2.Element.getAttribute(java.lang.String)", "de.game.asylumjam.World.TMXReader.generateMapArray(org.jdom2.Element)"], "Fixed commit": "5d641b0407cb7fc1dfd8bc0e5fb1924532c68cb6", "Url": "https://api.github.com/repos/deB4SH/asylumjam2013", "Date": "2013-10-12T10:11:52Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { wr.write(java.nio.file.Files.readAllBytes(java.nio.file.Paths.get(cli.getString(\"file\")))); } catch (nohorjo.cli.InvalidCLIArgException e1) { throw new nohorjo.cli.InvalidCLIArgException(\"data or file not set\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7373/buggy-version/java.src.Wget.java", "BodyUseAPI": ["java.io.DataOutputStream.write(byte[])", "java.nio.file.Files.readAllBytes(java.nio.file.Path)", "java.nio.file.Paths.get(cli.getString(\"file\"))", "nohorjo.cli.CLIArgs.getString(java.lang.String)"], "Fixed commit": "5987ccf599ce1b41205fa65f52496a6c7293446e", "Url": "https://api.github.com/repos/nohorjo/Tools", "Date": "2017-03-29T15:02:54Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (tasks == null) { tasks = getClient().blockVolumes().create(create); }else { tasks.getTasks().addAll(getClient().blockVolumes().create(create).getTasks()); } } catch (com.emc.vipr.client.exceptions.ServiceErrorException ex) { logError(getMessage(\"CreateMultipleBlockVolumes.getTask.error\", create.getName(), ex.getDetailedMessage())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/806/buggy-version/vipr-portal.com.iwave.isa.content.src.java.com.emc.sa.service.vipr.block.tasks.CreateMultipleBlockVolumes.java", "BodyUseAPI": ["com.emc.sa.service.vipr.block.tasks.CreateMultipleBlockVolumes.getClient()", "com.emc.vipr.client.Tasks<com.emc.storageos.model.block.VolumeRestRep>.getTasks()", "com.emc.sa.service.vipr.block.tasks.CreateMultipleBlockVolumes.getClient()", "getClient().blockVolumes()", "getClient().blockVolumes().create(com.emc.storageos.model.block.VolumeCreate)", "tasks.getTasks().addAll(getClient().blockVolumes().create(create).getTasks())", "getClient().blockVolumes().create(com.emc.storageos.model.block.VolumeCreate)", "getClient().blockVolumes()", "getClient().blockVolumes().create(create).getTasks()"], "Fixed commit": "5fb7e76de6e2941013bfe60cd8017ae929e7e2b6", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-12-07T19:07:16Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.usage = cmd.getCallable().getUsage(source).toPlain(); } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4484/buggy-version/src.main.java.valandur.webapi.cache.command.CachedCommand.java", "BodyUseAPI": ["org.spongepowered.api.command.CommandMapping.getCallable()", "cmd.getCallable().getUsage(org.spongepowered.api.command.CommandSource)", "cmd.getCallable().getUsage(source).toPlain()"], "Fixed commit": "56dd76cbc61926c45bffa665afa20b694457692b", "Url": "https://api.github.com/repos/Valandur/Web-API", "Date": "2017-08-21T14:30:53Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { authorityValue = projectService.getProjectByAuthorityId(context, metadatum.authority); } catch (java.lang.IllegalArgumentException e) { org.dspace.app.xmlui.objectmanager.RioxxProjectFunderEnricher.log.error(e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3399/buggy-version/dspace.modules.xmlui.src.main.java.org.dspace.app.xmlui.objectmanager.RioxxProjectFunderEnricher.java", "BodyUseAPI": ["org.dspace.app.xmlui.objectmanager.ProjectService.getProjectByAuthorityId(org.dspace.app.xmlui.objectmanager.Context,metadatum.authority)"], "Fixed commit": "491f9f9ad808dcbba04558ba60eafb27fcf61bbd", "Url": "https://api.github.com/repos/atmire/RIOXX52", "Date": "2017-01-02T14:22:32Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((java.lang.System.in.available()) != 0) { int key = java.lang.System.in.read(); move(key); } } catch (java.io.IOException e) { java.lang.System.out.println(\"IOException\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1130/buggy-version/Pong.java", "BodyUseAPI": ["java.io.InputStream.available()", "Pong.move(int)", "java.io.InputStream.read()"], "Fixed commit": "bb0bbbd11ea000219cb05157e6394bba09c3fb33", "Url": "https://api.github.com/repos/nicolecheng/final2", "Date": "2016-05-17T15:44:40Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { diagram = ((java.io.File) (org.flowerplatform.editor.EditorPlugin.getInstance().getFileAccessController().getFile(path))); } catch (java.lang.Exception e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/305/buggy-version/org.flowerplatform.codesync.src.org.flowerplatform.codesync.remote.CodeSyncOperationsService.java", "BodyUseAPI": ["org.flowerplatform.editor.EditorPlugin.getInstance().getFileAccessController().getFile(java.lang.String)", "org.flowerplatform.editor.EditorPlugin.getInstance().getFileAccessController()", "org.flowerplatform.editor.EditorPlugin.getInstance()"], "Fixed commit": "8f36dc068550af0306810d4cfdeaeee653260ea0", "Url": "https://api.github.com/repos/flower-platform/main", "Date": "2013-10-25T15:32:05Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { item = getItem(path); } catch (javax.jcr.PathNotFoundException e) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8754/buggy-version/terye-firsthops.src.main.java.ch.x42.terye.ItemManager.java", "BodyUseAPI": ["ch.x42.terye.ItemManager.getItem(ch.x42.terye.Path)"], "Fixed commit": "0f1c8ea0d65049cf7e2a2518045a2d1d5d05bba7", "Url": "https://api.github.com/repos/bdelacretaz/terye", "Date": "2012-09-24T09:06:09Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { net.visualillusionsent.utils.FileUtils.cloneFileFromJar(net.visualillusionsent.utils.JarUtils.getJarPath(getClass()), \"resources/default_config.cfg\", configDir.concat(\"settings.cfg\")); } catch (java.io.IOException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1573/buggy-version/src.main.java.net.visualillusionsent.dconomy.addon.bank.data.BankProperties.java", "BodyUseAPI": ["net.visualillusionsent.utils.JarUtils.getJarPath(java.lang.Class<? extends net.visualillusionsent.dconomy.addon.bank.data.BankProperties>)", "java.lang.String.concat(java.lang.String)", "net.visualillusionsent.dconomy.addon.bank.data.BankProperties.getClass()", "net.visualillusionsent.utils.FileUtils.cloneFileFromJar(net.visualillusionsent.utils.JarUtils.getJarPath(getClass()),java.lang.String,java.lang.String)"], "Fixed commit": "36cbdfe009ee284b8664a63fa7ef68878d7dbdd2", "Url": "https://api.github.com/repos/Visual-Illusions/dBankLite", "Date": "2014-09-29T01:52:03Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { net.blay09.mods.eirairc.command.base.IRCCommandHandler.processCommand(sender, args, false); } catch (net.minecraft.command.WrongUsageException e) { net.minecraft.util.IChatComponent chatComponent = new net.minecraft.util.ChatComponentTranslation(\"commands.generic.usage\", net.blay09.mods.eirairc.util.Utils.getLocalizedMessageNoPrefix(e.getMessage(), e.getErrorOjbects())); chatComponent.getChatStyle().setColor(EnumChatFormatting.RED); sender.addChatMessage(chatComponent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4630/buggy-version/src.main.java.net.blay09.mods.eirairc.command.base.CommandServIRC.java", "BodyUseAPI": ["net.blay09.mods.eirairc.command.base.IRCCommandHandler.processCommand(net.minecraft.command.ICommandSender,java.lang.String[],boolean)"], "Fixed commit": "2d91cdccf152830acaefe24dbb45e680111d4a8d", "Url": "https://api.github.com/repos/blay09/EiraIRC", "Date": "2014-05-18T17:34:04Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { obj = ((org.json.simple.JSONArray) (((org.json.simple.JSONObject) (new org.json.simple.parser.JSONParser().parse(new java.io.FileReader(com.HyperCauliflower.handlers.JSONHandler.PATH)))).get(name))); map = new java.util.HashMap<java.lang.String, T>(); for (java.lang.Object j : obj) { map.put(((java.lang.String) (((org.json.simple.JSONObject) (j)).get(\"name\"))), load(((org.json.simple.JSONObject) (j)))); } } catch (java.io.IOException e) { e.printStackTrace(); java.lang.System.out.println((\"JSON File not found at: \" + (com.HyperCauliflower.handlers.JSONHandler.PATH))); } catch (org.json.simple.parser.ParseException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6996/buggy-version/src.com.HyperCauliflower.handlers.JSONHandler.java", "BodyUseAPI": ["java.lang.Object.get(java.lang.String)", "org.json.simple.parser.JSONParser.parse(java.io.FileReader)", "java.util.HashMap<java.lang.String, T>.put(((java.lang.String) (((org.json.simple.JSONObject) (j)).get(\"name\"))),T)", "com.HyperCauliflower.handlers.JSONHandler<T>.load(java.lang.Object)", "((org.json.simple.JSONObject) (new org.json.simple.parser.JSONParser().parse(new java.io.FileReader(com.HyperCauliflower.handlers.JSONHandler.PATH)))).get(java.lang.String)"], "Fixed commit": "ac628a9c008cbc436881650cf5920720a37b48ad", "Url": "https://api.github.com/repos/HenryCadogan/Hyper-Cauliflower", "Date": "2016-06-28T01:29:41Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { emp = db.getUser(java.lang.Integer.parseInt(uidString)); } catch (java.lang.Exception e) { return new org.restlet.ext.json.JsonRepresentation(\"{\\\"message\\\":\\\"error\\\"}\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7159/buggy-version/src.com.pj3.pos_manager.router.UserRouter.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "com.pj3.pos_manager.router.DatabaseSource.getUser(int)"], "Fixed commit": "4681ae17cb42a9584a11ad7cc4013c00517cbc91", "Url": "https://api.github.com/repos/tuanict/POS_Manager", "Date": "2014-11-30T09:44:18Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { client.executeMethod(method); return xmlParser.parse(method.getResponseBodyAsStream()); } finally { method.releaseConnection(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2050/buggy-version/src.main.java.org.wikipathways.cytoscapeapp.internal.webclient.WPClientREST.java", "BodyUseAPI": ["org.apache.commons.httpclient.HttpClient.executeMethod(org.apache.commons.httpclient.methods.GetMethod)", "javax.xml.parsers.DocumentBuilder.parse(method.getResponseBodyAsStream())", "org.apache.commons.httpclient.methods.GetMethod.getResponseBodyAsStream()"], "Fixed commit": "059e6c5570d0825811fa1da0481ccf5b09bae44d", "Url": "https://api.github.com/repos/wikipathways/cytoscape-wikipathways-app", "Date": "2013-12-10T14:45:29Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { data = com.example.android.sunshine.utilities.OpenWeatherJsonUtils.getSimpleWeatherStringsFromJson(this, response); } catch (org.json.JSONException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1829/buggy-version/S02.01-Exercise-Networking.app.src.main.java.com.example.android.sunshine.MainActivity.java", "BodyUseAPI": ["com.example.android.sunshine.utilities.OpenWeatherJsonUtils.getSimpleWeatherStringsFromJson(com.example.android.sunshine.MainActivity,java.lang.String)"], "Fixed commit": "dc191a491fc655ff8e5998febc99b6af98b8a433", "Url": "https://api.github.com/repos/gmiragliotta/ud851-Sunshine", "Date": "2017-11-20T20:16:50Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mCursor.close(); } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8531/buggy-version/AndiCar.src.main.java.andicar.n.activity.CommonListActivity.java", "BodyUseAPI": ["android.database.Cursor.close()"], "Fixed commit": "843cd54185d99a363583b3ca61354aeb36605618", "Url": "https://api.github.com/repos/mkeresztes/AndiCar", "Date": "2017-07-26T19:32:44Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { artistObj.save(); } catch (java.lang.Exception e) { play.Logger.error(\"Probably trying to save an object already saved in another thread\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2840/buggy-version/app.utils.RdioHelper.java", "BodyUseAPI": ["models.Artist.save()"], "Fixed commit": "e71263b2a52aed2885f1420cbad4a78f855674dd", "Url": "https://api.github.com/repos/eltmon/auricle", "Date": "2017-03-21T17:19:21Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (!(contactFragment.isAdded())) { getSupportFragmentManager().beginTransaction().add(R.id.fragment_container, recentFragment).add(R.id.fragment_container, contactFragment).hide(contactFragment).show(recentFragment).commitAllowingStateLoss(); } } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5259/buggy-version/src.com.bmob.im.demo.ui.MainActivity.java", "BodyUseAPI": ["com.bmob.im.demo.ui.MainActivity.getSupportFragmentManager()", "getSupportFragmentManager().beginTransaction().add(R.id.fragment_container, recentFragment).add(R.id.fragment_container, contactFragment).hide(contactFragment).show(com.bmob.im.demo.ui.fragment.RecentFragment)", "getSupportFragmentManager().beginTransaction()", "getSupportFragmentManager().beginTransaction().add(R.id.fragment_container,com.bmob.im.demo.ui.fragment.RecentFragment)", "getSupportFragmentManager().beginTransaction().add(R.id.fragment_container, recentFragment).add(R.id.fragment_container, contactFragment).hide(contactFragment).show(recentFragment).commitAllowingStateLoss()", "getSupportFragmentManager().beginTransaction().add(R.id.fragment_container, recentFragment).add(R.id.fragment_container, contactFragment).hide(com.bmob.im.demo.ui.fragment.ContactFragment)", "com.bmob.im.demo.ui.fragment.ContactFragment.isAdded()", "getSupportFragmentManager().beginTransaction().add(R.id.fragment_container, recentFragment).add(R.id.fragment_container,com.bmob.im.demo.ui.fragment.ContactFragment)"], "Fixed commit": "f675068066fbd0cc61b845d317fe232f2c1cbe5c", "Url": "https://api.github.com/repos/XuptScore-client/xupt_score_android", "Date": "2015-09-05T13:08:19Z"},
{"Line": "=>2250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (!(contactFragment.isAdded())) { getSupportFragmentManager().beginTransaction().add(R.id.fragment_container, recentFragment).add(R.id.fragment_container, contactFragment).hide(contactFragment).show(recentFragment).commitAllowingStateLoss(); } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5259/buggy-version/src.com.xy.fy.main.MainActivity.java", "BodyUseAPI": ["getSupportFragmentManager().beginTransaction().add(R.id.fragment_container,com.bmob.im.demo.ui.fragment.RecentFragment)", "getSupportFragmentManager().beginTransaction().add(R.id.fragment_container, recentFragment).add(R.id.fragment_container, contactFragment).hide(contactFragment).show(recentFragment).commitAllowingStateLoss()", "getSupportFragmentManager().beginTransaction().add(R.id.fragment_container, recentFragment).add(R.id.fragment_container, contactFragment).hide(com.bmob.im.demo.ui.fragment.ContactFragment)", "getSupportFragmentManager().beginTransaction()", "com.xy.fy.main.MainActivity.getSupportFragmentManager()", "getSupportFragmentManager().beginTransaction().add(R.id.fragment_container, recentFragment).add(R.id.fragment_container, contactFragment).hide(contactFragment).show(com.bmob.im.demo.ui.fragment.RecentFragment)", "getSupportFragmentManager().beginTransaction().add(R.id.fragment_container, recentFragment).add(R.id.fragment_container,com.bmob.im.demo.ui.fragment.ContactFragment)", "com.bmob.im.demo.ui.fragment.ContactFragment.isAdded()"], "Fixed commit": "f675068066fbd0cc61b845d317fe232f2c1cbe5c", "Url": "https://api.github.com/repos/XuptScore-client/xupt_score_android", "Date": "2015-09-05T13:08:19Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { filtering = p.getBoolean(\"filter\", false); } catch (java.lang.ClassCastException e) { filtering = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7775/buggy-version/app.src.main.java.xyz.jhughes.laundry.activities.MachineActivity.java", "BodyUseAPI": ["android.content.SharedPreferences.getBoolean(java.lang.String,boolean)"], "Fixed commit": "25d52c795b9665506a876d76800a01b92b11f69f", "Url": "https://api.github.com/repos/Purdue-ACM-SIGApp/PurdueLaundry-android", "Date": "2017-02-22T01:24:32Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.reflect.Field field = com.vaadin.data.util.filter.AbstractJunctionFilter.class.getDeclaredField(\"filters\"); field.setAccessible(true); field.set(this, java.util.Collections.unmodifiableCollection(f)); } catch (java.lang.NoSuchFieldException | java.lang.IllegalAccessException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3373/buggy-version/jpacontainer-addon.src.main.java.com.vaadin.addon.jpacontainer.filter.InListFilter.java", "BodyUseAPI": ["java.util.Collections.unmodifiableCollection(java.util.List<Container.Filter>)", "java.lang.reflect.Field.setAccessible(boolean)", "java.lang.reflect.Field.set(com.vaadin.addon.jpacontainer.filter.InListFilter,java.util.Collection<Container.Filter>)", "java.lang.Class.getDeclaredField(java.lang.String)"], "Fixed commit": "d2a97d87d750dbd6550cb20f3133017b116143c0", "Url": "https://api.github.com/repos/venam777/jpacontainer", "Date": "2016-03-24T10:10:16Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { request.setAttribute(\"pos\", mainPageModel.getPOS()); } catch (java.sql.SQLException ex) { java.util.logging.Logger.getLogger(Servlets.GetModules.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6879/buggy-version/src.java.Servlets.GetModules.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,mainPageModel.getPOS())", "Models.MainPageModel.getPOS()"], "Fixed commit": "9356cb92d2e92efe1f725bde28730b8b6dde38f5", "Url": "https://api.github.com/repos/kukawka/AgileWebsite", "Date": "2017-03-19T19:36:24Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { request.setAttribute(\"pos\", mainPageModel.getPOS()); } catch (java.sql.SQLException ex) { java.util.logging.Logger.getLogger(Servlets.GetModules.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6879/buggy-version/src.java.Servlets.GetModules.java", "BodyUseAPI": ["Models.MainPageModel.getPOS()", "javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,mainPageModel.getPOS())"], "Fixed commit": "9356cb92d2e92efe1f725bde28730b8b6dde38f5", "Url": "https://api.github.com/repos/kukawka/AgileWebsite", "Date": "2017-03-19T19:36:24Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { request.setAttribute(\"items\", mainPageModel.getPOS()); } catch (java.sql.SQLException ex) { java.util.logging.Logger.getLogger(Servlets.MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6879/buggy-version/src.java.Servlets.MainPage.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,mainPageModel.getPOS())", "Models.MainPageModel.getPOS()"], "Fixed commit": "9356cb92d2e92efe1f725bde28730b8b6dde38f5", "Url": "https://api.github.com/repos/kukawka/AgileWebsite", "Date": "2017-03-19T19:36:24Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.flipturnapps.quinton.xmldata.World w = gen.readWorld(new java.io.File(((com.flipturnapps.kevinLibrary.helper.FileHelper.getAppDataDir(\"flipturnapps\", \"qork\")) + filename))); qMain.setWorld(w); } catch (java.lang.Exception ex) { world.println(\"fail\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/9259/buggy-version/src.com.flipturnapps.quinton.command.LoadCommand.java", "BodyUseAPI": ["com.flipturnapps.quinton.worldgeneration.WorldGenerator.readWorld(java.io.File)", "com.flipturnapps.kevinLibrary.helper.FileHelper.getAppDataDir(java.lang.String,java.lang.String)", "com.flipturnapps.quinton.main.QuintonMain.setWorld(com.flipturnapps.quinton.xmldata.World)"], "Fixed commit": "2f2c3e30abdf6ca19c142627b8ed6a64d5a9e606", "Url": "https://api.github.com/repos/kkevlar/Quinton", "Date": "2015-05-27T02:05:02Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { is = new java.io.BufferedInputStream(asset.openStream()); while ((len = is.read(buf, 0, buf.length)) != (-1)) { crc32.update(buf, 0, len); contentSize += len; } } finally { if (is != null) { is.close(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2439/buggy-version/impl-base.src.main.java.org.jboss.shrinkwrap.impl.base.exporter.zip.ZipOnDemandInputStream.java", "BodyUseAPI": ["java.util.zip.CRC32.update(byte[],int,int)", "java.io.InputStream.read(byte[],int,int)", "org.jboss.shrinkwrap.api.asset.Asset.openStream()"], "Fixed commit": "6f017a2cf7524774b662a161032d20d9ce0240e8", "Url": "https://api.github.com/repos/lordofthejars/shrinkwrap", "Date": "2016-05-25T08:13:26Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(20); } catch (java.lang.InterruptedException e) { java.lang.System.out.println(\"Interrupted while waiting for the buffer to be created.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3157/buggy-version/src.ca.claytonrogers.Client.Application.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "60ac649337ee4ba33d65749a843ff92d8a87680b", "Url": "https://api.github.com/repos/clayton-rogers/12Golf", "Date": "2015-07-12T22:26:05Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { webapp = azure.webApps().getByResourceGroup(app.resourceGroup(), app.name()); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1309/buggy-version/PluginsAndFeatures.azure-toolkit-for-eclipse.com.microsoft.azuretools.container.src.com.microsoft.azuretools.container.utils.WebAppOnLinuxUtil.java", "BodyUseAPI": ["azure.webApps().getByResourceGroup(app.resourceGroup(),app.name())", "com.microsoft.azure.management.appservice.implementation.SiteInner.resourceGroup()", "com.microsoft.azure.management.appservice.implementation.SiteInner.name()", "com.microsoft.azure.management.Azure.webApps()"], "Fixed commit": "4d5bb4104be06bc5fff80ec77b5115a69b083814", "Url": "https://api.github.com/repos/Eskibear/azure-tools-for-java", "Date": "2017-07-10T03:25:05Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return ((value.length()) - start) < 3 ? dflt : java.lang.Integer.parseInt(value.substring((start + 1), ((value.length()) - 1))); } catch (java.lang.Exception ex) { return dflt; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6891/buggy-version/ksoap2-base.src.main.java.org.ksoap2.serialization.SoapSerializationEnvelope.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.length()", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "416be091da1c86a1803fca17400696c0ebfa93ad", "Url": "https://api.github.com/repos/robocik/ksoap2-android", "Date": "2014-02-21T08:50:14Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { connectionResult.startResolutionForResult(this, GAME_SIGN_IN_CODE); } catch (java.lang.Exception e) { games_client.connect(); resolving_failure = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7898/buggy-version/app.src.main.java.name.cantanima.idealnim.MainActivity.java", "BodyUseAPI": ["com.google.android.gms.common.ConnectionResult.startResolutionForResult(name.cantanima.idealnim.MainActivity,int)"], "Fixed commit": "049285782a712d37b137fd56362403289fda22c0", "Url": "https://api.github.com/repos/johnperry-math/IdealNim", "Date": "2017-08-29T02:06:01Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { newAccountTotal = (userAccount.getUserAccountTotal()) - (java.lang.Double.parseDouble(jTextField2.getText())); userAccount.setUserAccountTotal(newAccountTotal); } catch (java.lang.NumberFormatException e) { java.lang.System.out.println(\"Not a number\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6543/buggy-version/src.ist412group6project.ExpenseUI.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)", "javax.swing.JTextField.getText()", "ist412group6project.UserAccount.setUserAccountTotal(double)", "ist412group6project.UserAccount.getUserAccountTotal()"], "Fixed commit": "dec16607872555b5683706fee48890b9e763094e", "Url": "https://api.github.com/repos/Nabisco/IST412Group6Project", "Date": "2016-11-21T02:35:18Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.media.AudioTrack audioTrack = getAudioTrack(noteAudio.length); audioTrack.write(noteAudio, 0, noteAudio.length); audioTrack.play(); } catch (java.lang.IllegalStateException e) { playNote(note); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/498/buggy-version/app.src.main.java.ezturner.ampup.services.TimerService.java", "BodyUseAPI": ["ezturner.ampup.services.TimerService.getAudioTrack(int)", "android.media.AudioTrack.write(byte[],int,int)", "android.media.AudioTrack.play()"], "Fixed commit": "98be039138b6462c23a3c5797db96574d87296c7", "Url": "https://api.github.com/repos/ezturner/AmpUp-Timer", "Date": "2016-09-01T19:50:23Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return licenceManagingService.installLicence(licenceFilePath, signatureFilePath); } catch (org.jgrades.lic.api.exception.LicenceException ex) { org.jgrades.rest.lic.LicenceManagerService.LOGGER.error(\"Problem during installation licence: {} and signature: {}\", licenceFilePath, signatureFilePath, ex); org.jgrades.rest.lic.LicenceManagerService.LOGGER.error(\"Due to exception during installation saved file will be removed: {} , {}\", licenceFilePath, signatureFilePath); org.apache.commons.io.FileUtils.deleteQuietly(licenceFile); org.apache.commons.io.FileUtils.deleteQuietly(signatureFile); throw ex; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4342/buggy-version/jg-backend.interface.jg-rest-ws.src.main.java.org.jgrades.rest.lic.LicenceManagerService.java", "BodyUseAPI": ["org.jgrades.lic.api.service.LicenceManagingService.installLicence(java.lang.String,java.lang.String)"], "Fixed commit": "66fe33dc611fca0fea1f5ea2891e5667d97346bc", "Url": "https://api.github.com/repos/jgrades/jgrades-legacy", "Date": "2015-08-11T21:36:16Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return java.lang.String.format(text, textArgs); } catch (java.util.MissingFormatArgumentException e) { throw new com.coradec.coracore.trouble.FormatArgumentMismatchException(text, textArgs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4903/buggy-version/CoraLog.src.main.java.com.coradec.coralog.model.impl.BasicStringLogEntry.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.Object[])"], "Fixed commit": "6698a117afe6ddf29cb253df2d5713fcb3ec1c92", "Url": "https://api.github.com/repos/freedio/coradeck", "Date": "2017-06-24T14:23:19Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { res = ((org.clueminer.clustering.api.Clustering<? extends org.clueminer.clustering.api.Cluster>) (c.newInstance())); } catch (java.lang.InstantiationException | java.lang.IllegalAccessException ex) { org.openide.util.Exceptions.printStackTrace(ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3885/buggy-version/modules.clustering-api.src.main.java.org.clueminer.clustering.api.factory.Clusterings.java", "BodyUseAPI": ["java.lang.Class.newInstance()"], "Fixed commit": "6ecd14055bb77cd875173b50b5865156ef50e8bb", "Url": "https://api.github.com/repos/martinkrecek/clueminer", "Date": "2015-05-22T09:08:41Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { final java.util.Optional<java.lang.String> result = saver.makeRelation(vertex, prop.getPropertyName(), currentCollection, prop.getMetadata()[0], value); if (result.isPresent()) { results.put(prop.getId(), nl.knaw.huygens.timbuctoo.experimental.bulkupload.parsingstatemachine.Result.failure(result.get())); }else { results.put(prop.getId(), nl.knaw.huygens.timbuctoo.experimental.bulkupload.parsingstatemachine.Result.success()); } } catch (java.lang.ArrayIndexOutOfBoundsException e) { results.put(prop.getId(), nl.knaw.huygens.timbuctoo.experimental.bulkupload.parsingstatemachine.Result.failure((((((\"Relation \" + (prop.getPropertyName())) + \" of \") + (currentCollection.getCollectionName())) + \" has no target \") + \"collection set\"))); idsToSkip.add(prop.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5339/buggy-version/timbuctoo-instancev4.src.main.java.nl.knaw.huygens.timbuctoo.experimental.bulkupload.parsingstatemachine.Importer.java", "BodyUseAPI": ["nl.knaw.huygens.timbuctoo.experimental.bulkupload.parsingstatemachine.Result.success()", "nl.knaw.huygens.timbuctoo.experimental.bulkupload.parsingstatemachine.ImportPropertyDescription.getPropertyName()", "java.util.HashMap<java.lang.Integer, nl.knaw.huygens.timbuctoo.experimental.bulkupload.parsingstatemachine.Result>.put(prop.getId(),nl.knaw.huygens.timbuctoo.experimental.bulkupload.parsingstatemachine.Result.failure(result.get()))", "java.util.Optional<java.lang.String>.isPresent()", "nl.knaw.huygens.timbuctoo.experimental.bulkupload.parsingstatemachine.Result.failure(java.lang.String)", "java.util.HashMap<java.lang.Integer, nl.knaw.huygens.timbuctoo.experimental.bulkupload.parsingstatemachine.Result>.put(prop.getId(),nl.knaw.huygens.timbuctoo.experimental.bulkupload.parsingstatemachine.Result.success())", "nl.knaw.huygens.timbuctoo.experimental.bulkupload.savers.Saver.makeRelation(org.apache.tinkerpop.gremlin.structure.Vertex,prop.getPropertyName(),nl.knaw.huygens.timbuctoo.model.vre.Collection,prop.getMetadata()[0],java.lang.String)", "nl.knaw.huygens.timbuctoo.experimental.bulkupload.parsingstatemachine.ImportPropertyDescription.getMetadata()", "nl.knaw.huygens.timbuctoo.experimental.bulkupload.parsingstatemachine.ImportPropertyDescription.getId()", "java.util.Optional<java.lang.String>.get()", "nl.knaw.huygens.timbuctoo.experimental.bulkupload.parsingstatemachine.ImportPropertyDescription.getId()"], "Fixed commit": "8a9bf050cd733054ef3b80b84fa4b258903c0c21", "Url": "https://api.github.com/repos/HuygensING/timbuctoo", "Date": "2016-06-28T09:39:51Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { element = parser.parse(message); } catch (com.google.gson.JsonParseException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6841/buggy-version/src.main.java.sx.blah.discord.util.Requests.java", "BodyUseAPI": ["com.google.gson.JsonParser.parse(java.lang.String)"], "Fixed commit": "b27b3f2b167cfea23bdf2c5a05555d2260af0be2", "Url": "https://api.github.com/repos/Discord4J/Discord4J", "Date": "2016-02-17T01:53:11Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { element = parser.parse(message); } catch (com.google.gson.JsonParseException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6841/buggy-version/src.main.java.sx.blah.discord.util.Requests.java", "BodyUseAPI": ["com.google.gson.JsonParser.parse(java.lang.String)"], "Fixed commit": "b27b3f2b167cfea23bdf2c5a05555d2260af0be2", "Url": "https://api.github.com/repos/Discord4J/Discord4J", "Date": "2016-02-17T01:53:11Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { writer.setOutput(output); javax.imageio.IIOImage image = new javax.imageio.IIOImage(bufferedImage, null, metadata); writer.write(null, image, iwp); writer.dispose(); } finally { output.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5919/buggy-version/xchart.src.main.java.org.knowm.xchart.BitmapEncoder.java", "BodyUseAPI": ["javax.imageio.ImageWriter.setOutput(javax.imageio.stream.FileImageOutputStream)", "javax.imageio.ImageWriter.write(<nulltype>,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)", "javax.imageio.ImageWriter.dispose()"], "Fixed commit": "d5135b551dd7163cab9af6ca4d59d2fc862ab0e1", "Url": "https://api.github.com/repos/dluzzon/XChart", "Date": "2016-03-12T20:52:11Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.sql.Blob blob = conn.createBlob(); blob.setBytes(1, railo.runtime.op.Caster.toBinary(value)); return blob; } catch (java.lang.Throwable t) { return railo.runtime.type.sql.BlobImpl.toBlob(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8668/buggy-version/railo-java.railo-core.src.railo.commons.sql.SQLUtil.java", "BodyUseAPI": ["railo.runtime.op.Caster.toBinary(java.lang.Object)", "java.sql.Connection.createBlob()", "java.sql.Blob.setBytes(int,railo.runtime.op.Caster.toBinary(value))"], "Fixed commit": "18d896736e8983cbc1be847070d613f0a726326c", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2014-10-26T07:11:20Z"},
{"Line": "=>1242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { storage.createContainer(org.roda.storage.DefaultStoragePath.parse(RodaConstants.STORAGE_CONTAINER_ACTIONLOG), new java.util.HashMap()); } catch (org.roda.storage.StorageActionException sae) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1969/buggy-version/roda-common.roda-common-storage.src.main.java.org.roda.model.ModelService.java", "BodyUseAPI": ["org.roda.storage.DefaultStoragePath.parse(RodaConstants.STORAGE_CONTAINER_ACTIONLOG)", "org.roda.storage.StorageService.createContainer(org.roda.storage.DefaultStoragePath.parse(RodaConstants.STORAGE_CONTAINER_ACTIONLOG),java.util.HashMap)"], "Fixed commit": "543db10857f32a2aee98814c3d4d3dd0a464efa8", "Url": "https://api.github.com/repos/keeps/roda", "Date": "2015-07-27T16:44:59Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { uk.gov.indexer.SourcePostgresDB sourceDB = uk.gov.indexer.Application.createSourceDBObject(register, configuration); uk.gov.indexer.DestinationPostgresDB destinationDB = uk.gov.indexer.Application.createDestinationDBObject(register, configuration); executorService.scheduleAtFixedRate(new uk.gov.indexer.IndexerTask(register, sourceDB, destinationDB), 0, 10, java.util.concurrent.TimeUnit.SECONDS); } catch (java.lang.Throwable e) { e.printStackTrace(); uk.gov.indexer.ConsoleLogger.log((((\"Error occurred while setting indexer for register: \" + register) + \". Error is -> \") + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6085/buggy-version/src.main.java.uk.gov.indexer.Application.java", "BodyUseAPI": ["uk.gov.indexer.Application.createDestinationDBObject(java.lang.String,uk.gov.indexer.Configuration)", "uk.gov.indexer.Application.createSourceDBObject(java.lang.String,uk.gov.indexer.Configuration)", "java.util.concurrent.ScheduledExecutorService.scheduleAtFixedRate(uk.gov.indexer.IndexerTask,int,int,java.util.concurrent.TimeUnit)"], "Fixed commit": "40941f1d348be8ca89436351775cdd31713e0bd9", "Url": "https://api.github.com/repos/openregister/indexer", "Date": "2015-09-11T15:30:58Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { int closingBracketPosition = errorMessage.indexOf(']'); int linePosition = errorMessage.lastIndexOf(\"line\"); java.lang.String errorLineNumber = errorMessage.substring((linePosition + 4), closingBracketPosition).trim(); return java.lang.Integer.parseInt(errorLineNumber); } catch (java.lang.Exception e) { java.lang.System.out.println((\"Unable to locate erroneous line: \" + (e.getMessage()))); return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8198/buggy-version/src.main.java.com.github.drexler.TransformerUtils.java", "BodyUseAPI": ["java.lang.String.indexOf(char)", "java.lang.String.substring(int,int)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.trim()"], "Fixed commit": "4ccf82778c84020f831f7999b1a8074ca6f996b4", "Url": "https://api.github.com/repos/drexler/velson", "Date": "2017-09-08T15:04:40Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { fab.setVisibility(View.GONE); if (((puzzleManager) != null) && (puzzleManager.isSuccessfullyLoaded())) { puzzleManager.resetHelp(); puzzleManager.resetVibration(); } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3020/buggy-version/app.src.main.java.jbdev.puzzlegame.android.MainActivity.java", "BodyUseAPI": ["jbdev.puzzlegame.PuzzleCommon.PuzzleManager.resetVibration()", "android.support.design.widget.FloatingActionButton.setVisibility(View.GONE)", "jbdev.puzzlegame.PuzzleCommon.PuzzleManager.resetHelp()", "jbdev.puzzlegame.PuzzleCommon.PuzzleManager.isSuccessfullyLoaded()"], "Fixed commit": "f5e465a5379b70fad767b9241384f8cefe6114fc", "Url": "https://api.github.com/repos/jillybetti/PuzzleGame", "Date": "2016-07-03T10:58:17Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { realFilename = realFilename.replaceAll(\"\\\\\\\\\", java.io.File.separator); } catch (java.lang.Exception e) { realFilename = realFilename.replace(\"\\\\\\\\\", java.io.File.separator); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2625/buggy-version/src.org.nschmidt.ldparteditor.helpers.compositetext.SubfileCompiler.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "6839f362ea51548cea00fd3bb42140fbd23b59ec", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-04-02T06:00:55Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return ((org.apache.tajo.algebra.Expr) (session.getQueryCache().get(sql.trim()).clone())); } catch (java.util.concurrent.ExecutionException e) { throw e.getCause(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4036/buggy-version/tajo-core.src.main.java.org.apache.tajo.master.GlobalEngine.java", "BodyUseAPI": ["session.getQueryCache().get(java.lang.String)", "session.getQueryCache().get(sql.trim()).clone()", "org.apache.tajo.session.Session.getQueryCache()", "java.lang.String.trim()"], "Fixed commit": "d095b4a6bf6db2d43e08bdcdfef3aebc454a0bca", "Url": "https://api.github.com/repos/hyunsik/tajo", "Date": "2015-08-19T11:25:18Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { direction = Direction.valueOf(command.getSecondWord().toUpperCase()); } catch (java.lang.IllegalArgumentException e) { java.lang.System.out.println(\"Invalid direction!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1538/buggy-version/Game.java", "BodyUseAPI": ["command.getSecondWord().toUpperCase()", "Direction.valueOf(command.getSecondWord().toUpperCase())", "Command.getSecondWord()"], "Fixed commit": "e6466ee2a712371b6354b51fd56db4c757eb138b", "Url": "https://api.github.com/repos/Touzen/inda-game", "Date": "2013-12-12T19:18:58Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.text.SimpleDateFormat df = new java.text.SimpleDateFormat(\"dd/mm/yyyy\"); java.util.Date dObj = df.parse(((((dayOfMonth + \"/\") + (monthOfYear + 1)) + \"/\") + year)); java.util.Calendar myCal = java.util.Calendar.getInstance(); myCal.setTime(dObj); myCal.add(java.util.Calendar.DAY_OF_YEAR, 1); currentDate.setText(df.format(myCal.getTime())); displayAppointmentForDate(currentDate.getText().toString()); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4445/buggy-version/app.src.main.java.com.example.prashant.dentist.viewAppiontmentPage.java", "BodyUseAPI": ["com.example.prashant.dentist.viewAppiontmentPage.7.displayAppointmentForDate(currentDate.getText().toString())", "android.widget.TextView.getText()", "java.util.Calendar.add(int,int)", "java.text.SimpleDateFormat.parse(java.lang.String)", "android.widget.TextView.setText(java.lang.String)", "java.util.Calendar.getTime()", "currentDate.getText().toString()", "java.util.Calendar.getInstance()", "java.util.Calendar.setTime(java.util.Date)", "java.text.SimpleDateFormat.format(java.util.Date)"], "Fixed commit": "5b7085b77504f9cd0bd2556faaf9ffbbdc7b30bc", "Url": "https://api.github.com/repos/prashantalhat1406/Dentist", "Date": "2015-06-05T18:23:26Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { if ((printStatusMap.get(\"printStatus\")) == false) { java.lang.System.out.println(\"We are started !!\"); printStatusMap.put(\"printStatus\", true); } } finally { printStatusMap.unlock(\"printStatus\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1338/buggy-version/src.com.prajna.demo.MultiNodeApplication.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "com.hazelcast.core.IMap<java.lang.String, java.lang.Boolean>.put(java.lang.String,boolean)", "com.hazelcast.core.IMap<java.lang.String, java.lang.Boolean>.get(java.lang.String)"], "Fixed commit": "7c264497f767db754c7b9925219dd3ea877a6d7d", "Url": "https://api.github.com/repos/PrajnaShetty/MultiNodeApp", "Date": "2015-03-20T06:57:44Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return socketReader.readLine().equals(\"OK\"); } catch (java.lang.NullPointerException e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3895/buggy-version/src.org.maneulyori.seoip.ConnectionService.java", "BodyUseAPI": ["java.io.BufferedReader.readLine()", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "fc42d6cc3572ac9e68723a66f5ff68a9597edb25", "Url": "https://api.github.com/repos/maneulyori/SEoIP", "Date": "2014-03-19T07:07:49Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { uri = new java.net.URI(s); if ((uri.getScheme()) == null) { return s; } } catch (java.net.URISyntaxException e) { return s; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8041/buggy-version/jetty-quickstart.src.main.java.org.eclipse.jetty.quickstart.AttributeNormalizer.java", "BodyUseAPI": ["java.net.URI.getScheme()"], "Fixed commit": "7256d75e9cb3f6a641a1e67e969607723d5f197a", "Url": "https://api.github.com/repos/WalkerWatch/jetty.project", "Date": "2016-10-26T23:09:12Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { lookupAutori.setSelectedItems(autorKnjigaServiceBean.getAutorsOnKnjiga(k)); } catch (java.lang.IllegalStateException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3946/buggy-version/src.swing.knjigaPanels.NovaKnjiga.java", "BodyUseAPI": ["util.Lookup<jpa.Autor, bussines.AutorServiceBean>.setSelectedItems(autorKnjigaServiceBean.getAutorsOnKnjiga(k))", "bussines.AutorKnjigaServiceBean.getAutorsOnKnjiga(jpa.Knjiga)"], "Fixed commit": "f9b74a29416841e55edc12716e16c0e19098283c", "Url": "https://api.github.com/repos/namikklapic/library", "Date": "2017-08-26T18:01:00Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return userDao.findUserByName(login); } catch (java.lang.IndexOutOfBoundsException ex) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4528/buggy-version/src.main.java.service.UserDataToolsImpl.java", "BodyUseAPI": ["dao.UserDao.findUserByName(java.lang.String)"], "Fixed commit": "8563bd118781893e08428731202175692eeb3b3e", "Url": "https://api.github.com/repos/Escorial/MenuApp", "Date": "2013-08-30T09:52:30Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { typeDeclClassChanged = ((org.eclipse.jdt.core.dom.TypeDeclaration) (cuClassChanged.types().get(0))); } catch (java.lang.ClassCastException e1) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6978/buggy-version/src.refaco.refactorings.CollapseHierarchyRefactoring.java", "BodyUseAPI": ["org.eclipse.jdt.core.dom.CompilationUnit.types()", "cuClassChanged.types().get(int)"], "Fixed commit": "a4142f6e4ae3a7b701d74f88d86643daad0eb2fe", "Url": "https://api.github.com/repos/moar82/RefGen", "Date": "2017-09-14T20:58:44Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (actualLocation != null) { if ((actualLocation.getBlock()) != null) { if ((((me.avery246813579.hotpotato.util.SignUtil.parseLocation(location).getBlock().getState().getType()) == (org.bukkit.Material.SIGN)) || ((me.avery246813579.hotpotato.util.SignUtil.parseLocation(location).getBlock().getState().getType()) == (org.bukkit.Material.WALL_SIGN))) || ((me.avery246813579.hotpotato.util.SignUtil.parseLocation(location).getBlock().getState().getType()) == (org.bukkit.Material.SIGN_POST))) { me.avery246813579.hotpotato.util.SignUtil.updateSign(me.avery246813579.hotpotato.util.SignUtil.parseLocation(location), game); me.avery246813579.hotpotato.util.SignUtil.signs.put(me.avery246813579.hotpotato.util.SignUtil.parseLocation(location), game); } }else { me.avery246813579.hotpotato.util.SignUtil.deleteSign(location); } }else { me.avery246813579.hotpotato.util.SignUtil.deleteSign(location); } } catch (java.lang.Exception ex) { me.avery246813579.hotpotato.util.SignUtil.deleteSign(location); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1959/buggy-version/src.me.avery246813579.hotpotato.util.SignUtil.java", "BodyUseAPI": ["me.avery246813579.hotpotato.util.SignUtil.parseLocation(location).getBlock().getState()", "me.avery246813579.hotpotato.util.SignUtil.parseLocation(location).getBlock().getState().getType()", "me.avery246813579.hotpotato.util.SignUtil.parseLocation(java.lang.String)", "org.bukkit.Location.getBlock()", "me.avery246813579.hotpotato.util.SignUtil.deleteSign(java.lang.String)", "me.avery246813579.hotpotato.util.SignUtil.parseLocation(java.lang.String)", "me.avery246813579.hotpotato.util.SignUtil.parseLocation(java.lang.String)", "me.avery246813579.hotpotato.util.SignUtil.parseLocation(location).getBlock().getState()", "me.avery246813579.hotpotato.util.SignUtil.parseLocation(java.lang.String)", "org.bukkit.Location.getBlock()", "me.avery246813579.hotpotato.util.SignUtil.parseLocation(location).getBlock().getState()", "me.avery246813579.hotpotato.util.SignUtil.parseLocation(location).getBlock().getState().getType()", "org.bukkit.Location.getBlock()", "me.avery246813579.hotpotato.util.SignUtil.updateSign(org.bukkit.Location,java.lang.String)", "me.avery246813579.hotpotato.util.SignUtil.deleteSign(java.lang.String)", "me.avery246813579.hotpotato.util.SignUtil.parseLocation(java.lang.String)", "java.util.concurrent.ConcurrentHashMap<org.bukkit.Location, java.lang.String>.put(org.bukkit.Location,java.lang.String)", "org.bukkit.Location.getBlock()", "me.avery246813579.hotpotato.util.SignUtil.parseLocation(location).getBlock().getState().getType()"], "Fixed commit": "5421b1e17ba6361ce610e6bfe9afd3a656fb8f4f", "Url": "https://api.github.com/repos/Avery246813579/HotPotato", "Date": "2015-08-28T00:58:22Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { org.eclipse.core.runtime.jobs.Job.getJobManager().beginRule(workspaceLock, monitor); refreshProject(destProj, org.jboss.tools.openshift.express.internal.core.behaviour.OpenShiftServerPublishMethod.submon(monitor, 100)); commitAndPushProject(destProj, behaviour, org.jboss.tools.openshift.express.internal.core.behaviour.OpenShiftServerPublishMethod.submon(monitor, 100)); } finally { org.eclipse.core.runtime.jobs.Job.getJobManager().endRule(workspaceLock); org.eclipse.core.runtime.jobs.Job.getJobManager().beginRule(originalRule, monitor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/10/buggy-version/plugins.org.jboss.tools.openshift.express.core.src.org.jboss.tools.openshift.express.internal.core.behaviour.OpenShiftServerPublishMethod.java", "BodyUseAPI": ["org.jboss.tools.openshift.express.internal.core.behaviour.OpenShiftServerPublishMethod.refreshProject(org.eclipse.core.resources.IProject,org.eclipse.core.runtime.IProgressMonitor)", "org.eclipse.core.runtime.jobs.Job.getJobManager().beginRule(org.eclipse.core.runtime.jobs.ISchedulingRule,org.eclipse.core.runtime.IProgressMonitor)", "org.eclipse.core.runtime.jobs.Job.getJobManager()", "org.jboss.tools.openshift.express.internal.core.behaviour.OpenShiftServerPublishMethod.commitAndPushProject(org.eclipse.core.resources.IProject,org.jboss.ide.eclipse.as.core.server.IDeployableServerBehaviour,org.eclipse.core.runtime.IProgressMonitor)", "org.jboss.tools.openshift.express.internal.core.behaviour.OpenShiftServerPublishMethod.submon(org.eclipse.core.runtime.IProgressMonitor,int)", "org.jboss.tools.openshift.express.internal.core.behaviour.OpenShiftServerPublishMethod.submon(org.eclipse.core.runtime.IProgressMonitor,int)"], "Fixed commit": "24a860af68da5aaeb78279ccee6a30c92ce870c1", "Url": "https://api.github.com/repos/alexeykazakov/jbosstools-openshift", "Date": "2013-10-15T18:22:57Z"},
{"Line": "=>438", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { org.apache.axis2.engine.AxisEngine.send(mainOutMsgContext); } finally { mainOutMsgContext.getAxisService().getSchema().removeAll(tenantOutMsgContext.getAxisService().getSchema()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3117/buggy-version/core.org.wso2.carbon.core.src.main.java.org.wso2.carbon.core.multitenancy.MultitenantMessageReceiver.java", "BodyUseAPI": ["org.apache.axis2.engine.AxisEngine.send(org.apache.axis2.context.MessageContext)"], "Fixed commit": "095d62476a45a1425ab76b78f00eda1e95e3a58e", "Url": "https://api.github.com/repos/damithsenanayake/carbon-kernel", "Date": "2015-07-30T11:21:12Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { result = java.lang.Integer.parseInt(value); } catch (java.lang.NumberFormatException e) { result = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1843/buggy-version/core.src.com.retroMachines.data.models.GlobalVariables.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "c83faea118a2c7841dc2d65779e5536655b57b64", "Url": "https://api.github.com/repos/Die-anonymen-PSEler/game", "Date": "2015-02-27T22:04:04Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { retrofit.RestAdapter restAdapter = new retrofit.RestAdapter.Builder().setEndpoint(mContext.getString(R.string.api_url)).build(); com.walmartlabs.productlist.api.FeedDataInterface feedDataInterface = restAdapter.create(com.walmartlabs.productlist.api.FeedDataInterface.class); response = feedDataInterface.getProductList(pageNumber, pageSize); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5123/buggy-version/ProductList.app.src.main.java.com.walmartlabs.productlist.api.FeedDataAPI.java", "BodyUseAPI": ["retrofit.RestAdapter.create(java.lang.Class)", "com.walmartlabs.productlist.api.FeedDataInterface.getProductList(int,int)", "retrofit.RestAdapter.Builder.setEndpoint(mContext.getString(R.string.api_url))", "android.content.Context.getString(R.string.api_url)", "new retrofit.RestAdapter.Builder().setEndpoint(mContext.getString(R.string.api_url)).build()"], "Fixed commit": "21470e728d1b7e3cf85a8fb9aad32a343b0ab9bb", "Url": "https://api.github.com/repos/reneargento/android-product-list", "Date": "2014-09-22T04:32:30Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { photoFile = createImageFile(); } catch (java.io.IOException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4406/buggy-version/app.src.main.java.com.doandstevensen.lifecollage.ui.collage_detail.CollageActivity.java", "BodyUseAPI": ["com.doandstevensen.lifecollage.ui.collage_detail.CollageActivity.createImageFile()"], "Fixed commit": "21f12f264a94291d0591596869bcdac7721632bb", "Url": "https://api.github.com/repos/sheenanick/life-collage", "Date": "2017-02-07T23:53:10Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { hub.await(); } catch (java.lang.InterruptedException ex) { org.openide.util.Exceptions.printStackTrace(ex); } catch (java.util.concurrent.ExecutionException ex) { org.openide.util.Exceptions.printStackTrace(ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2160/buggy-version/praxis.live.core.src.net.neilcsmith.praxis.live.core.DefaultHubManager.java", "BodyUseAPI": ["net.neilcsmith.praxis.hub.Hub.await()"], "Fixed commit": "7962878478280858097800a11fa16384924bb5d0", "Url": "https://api.github.com/repos/praxis-live/praxis-live", "Date": "2016-09-11T18:30:20Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { metadata = context.getPackageManager().getApplicationInfo(context.getPackageName(), PackageManager.GET_META_DATA).metaData; } catch (android.content.pm.PackageManager e) { android.util.Log.e(uk.ac.mdx.cs.ie.workstress.service.XmlRpcUploader.LOG_TAG, e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/91/buggy-version/app.src.main.java.uk.ac.mdx.cs.ie.workstress.service.XmlRpcUploader.java", "BodyUseAPI": ["context.getPackageManager().getApplicationInfo(context.getPackageName(),PackageManager.GET_META_DATA)", "android.content.Context.getPackageManager()", "android.content.Context.getPackageName()"], "Fixed commit": "d0537280d2b998bffe2a85b4ebe18958792f1fb1", "Url": "https://api.github.com/repos/deankramer/WorkStress", "Date": "2016-10-06T12:51:59Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { byteArray = reader_.readNextProtoBytes(); } catch (java.io.IOException ioe) { com.twitter.elephantbird.mapreduce.input.LzoBinaryBlockRecordReader.LOG.error(\"Error reading split, skip it. \", ioe); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1868/buggy-version/core.src.main.java.com.twitter.elephantbird.mapreduce.input.LzoBinaryBlockRecordReader.java", "BodyUseAPI": ["com.twitter.elephantbird.mapreduce.io.BinaryBlockReader<M>.readNextProtoBytes()"], "Fixed commit": "ffe3d8f555bdbaab751260aa9ac3224c27780597", "Url": "https://api.github.com/repos/zhuguangbin/elephant-bird", "Date": "2016-12-16T06:39:50Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { location = new java.io.File(t.file().getParentFile(), location).getCanonicalPath(); } catch (java.io.IOException ex) { throw new com.laytonsmith.core.exceptions.ConfigRuntimeException(((((\"Bad file location '\" + location) + \"' (\") + (ex.getMessage())) + \")\"), com.laytonsmith.core.functions.Exceptions.ExceptionType.IOException, t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7322/buggy-version/src.main.java.com.laytonsmith.core.functions.FileHandling.java", "BodyUseAPI": ["java.io.File.getCanonicalPath()", "com.laytonsmith.core.constructs.Target.file()", "t.file().getParentFile()"], "Fixed commit": "334bcc57a3b98550a17390b0f3aca512ade722e5", "Url": "https://api.github.com/repos/MariuszT/commandhelper", "Date": "2014-01-14T02:45:12Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((((org.eclipse.ui.PlatformUI.getWorkbench()) == null) || ((org.eclipse.ui.PlatformUI.getWorkbench().getActiveWorkbenchWindow()) == null)) || ((org.eclipse.ui.PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage()) == null)) { org.eclipse.swt.widgets.Display.getDefault().timerExec(1000, new java.lang.Runnable() { public void run() { org.sf.feeling.decompiler.SetupRunnable.this.run(); } }); }else { checkDecompilerUpdate(); checkClassFileAssociation(); setupPartListener(); checkDecompilerExtension(); } } catch (java.lang.Throwable e) { org.sf.feeling.decompiler.util.Logger.debug(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4513/buggy-version/org.sf.feeling.decompiler.src.org.sf.feeling.decompiler.SetupRunnable.java", "BodyUseAPI": ["org.sf.feeling.decompiler.SetupRunnable.checkDecompilerExtension()", "org.eclipse.ui.PlatformUI.getWorkbench().getActiveWorkbenchWindow()", "org.eclipse.ui.PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage()", "org.eclipse.swt.widgets.Display.getDefault()", "org.sf.feeling.decompiler.SetupRunnable.checkClassFileAssociation()", "org.sf.feeling.decompiler.SetupRunnable.setupPartListener()", "org.eclipse.ui.PlatformUI.getWorkbench()", "org.sf.feeling.decompiler.SetupRunnable.run()", "org.eclipse.ui.PlatformUI.getWorkbench().getActiveWorkbenchWindow()", "org.sf.feeling.decompiler.SetupRunnable.checkDecompilerUpdate()", "org.eclipse.swt.widgets.Display.getDefault().timerExec(int,java.lang.Runnable)", "org.eclipse.ui.PlatformUI.getWorkbench()", "java.lang.Object()", "org.eclipse.ui.PlatformUI.getWorkbench()"], "Fixed commit": "1c5bdba09cc56293fc7e486afb94c40386a1c9c6", "Url": "https://api.github.com/repos/cpupk/ecd", "Date": "2017-07-08T19:38:29Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { name = d.child(\"name\").getValue().toString(); } catch (java.lang.Exception e) { name = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6070/buggy-version/app.src.main.java.sunglass.com.loco.newFriendsActivity.java", "BodyUseAPI": ["com.firebase.client.DataSnapshot.child(java.lang.String)", "d.child(\"name\").getValue().toString()", "d.child(\"name\").getValue()"], "Fixed commit": "5b577d1ca33829e9c3981c65f29036a5b8273233", "Url": "https://api.github.com/repos/cmccord/Flare", "Date": "2015-05-07T21:18:36Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { name = snapshot.child(uid).child(\"name\").getValue().toString(); } catch (java.lang.Exception e) { name = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6070/buggy-version/app.src.main.java.sunglass.com.loco.NewCircleActivity.java", "BodyUseAPI": ["snapshot.child(uid).child(\"name\").getValue()", "snapshot.child(uid).child(\"name\").getValue().toString()", "snapshot.child(uid).child(java.lang.String)", "com.firebase.client.DataSnapshot.child(java.lang.String)"], "Fixed commit": "5b577d1ca33829e9c3981c65f29036a5b8273233", "Url": "https://api.github.com/repos/cmccord/Flare", "Date": "2015-05-07T21:18:36Z"},
{"Line": "=>675", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { authClient.logout(); } catch (java.lang.Exception e) { android.util.Log.v(\"Error Logging Out\", \"Not authenticated\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6070/buggy-version/app.src.main.java.sunglass.com.loco.editProfileActivity.java", "BodyUseAPI": ["com.firebase.simplelogin.SimpleLogin.logout()"], "Fixed commit": "5b577d1ca33829e9c3981c65f29036a5b8273233", "Url": "https://api.github.com/repos/cmccord/Flare", "Date": "2015-05-07T21:18:36Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String hash = org.mindrot.jbcrypt.BCrypt.hashpw(args[0].val(), org.mindrot.jbcrypt.BCrypt.gensalt(log_rounds)); return new com.laytonsmith.core.constructs.CString(hash, t); } catch (java.lang.IllegalArgumentException ex) { throw new com.laytonsmith.core.functions.Exceptions.RangeException(ex.getMessage(), t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8971/buggy-version/src.main.java.com.laytonsmith.core.functions.Crypto.java", "BodyUseAPI": ["org.mindrot.jbcrypt.BCrypt.gensalt(int)", "org.mindrot.jbcrypt.BCrypt.hashpw(args[0].val(),org.mindrot.jbcrypt.BCrypt.gensalt(log_rounds))", "args[0].val()"], "Fixed commit": "620e6b9dcdce6836931eb3189b469d068897bb4d", "Url": "https://api.github.com/repos/jb-aero/commandhelper", "Date": "2013-08-19T19:18:02Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { heatMapQueue.put(current.toString()); } catch (java.lang.InterruptedException e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4878/buggy-version/seep-system.examples.acita_demo_2015.src.uk.ac.imperial.lsds.seep.acita15.operators.LocationSource.java", "BodyUseAPI": ["uk.ac.imperial.lsds.seep.acita15.operators.HeatMap.toString()", "java.util.concurrent.BlockingQueue<java.lang.String>.put(current.toString())"], "Fixed commit": "2de94e660ef04752d82f64890c83e2e592b7f0d6", "Url": "https://api.github.com/repos/lsds/SEEP", "Date": "2015-09-04T15:55:18Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.wahtod.wififixer.HttpHostup.response = org.wahtod.wififixer.HttpHostup.httpclient.execute(org.wahtod.wififixer.HttpHostup.head); status = org.wahtod.wififixer.HttpHostup.response.getStatusLine().getStatusCode(); } catch (java.lang.IllegalStateException e) { status = -1; org.wahtod.wififixer.HttpHostup.httpclient = null; e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2962/buggy-version/wififixer.src.org.wahtod.wififixer.HttpHostup.java", "BodyUseAPI": ["org.apache.http.impl.client.DefaultHttpClient.execute(org.apache.http.client.methods.HttpHead)", "org.wahtod.wififixer.HttpHostup.response.getStatusLine().getStatusCode()", "org.apache.http.HttpResponse.getStatusLine()"], "Fixed commit": "0050037a7fa5ca7eee6582425a6276c59a1633e1", "Url": "https://api.github.com/repos/Zanshinmu/Wifi-Fixer", "Date": "2011-07-13T01:22:04Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { listReader.parseListReader(); } catch (java.io.IOException e) { nhs.genetics.cardiff.Main.log.log(java.util.logging.Level.SEVERE, (\"Could not read gene list \" + (e.getMessage()))); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4143/buggy-version/Main.java", "BodyUseAPI": ["nhs.genetics.cardiff.ListReader.parseListReader()"], "Fixed commit": "1657280d598385a3643b8d9a339c0665224a5484", "Url": "https://api.github.com/repos/mcgml/CoverageCalculator", "Date": "2016-06-17T09:23:35Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { delete.executeUpdate(); java.lang.System.out.println(\"Course successfully unregistered\"); } catch (java.sql.SQLException se) { java.lang.System.out.println(se.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6024/buggy-version/lab5.StudentPortal.java", "BodyUseAPI": ["java.sql.PreparedStatement.executeUpdate()", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "8e2f4051e317b56c5692a394eb136734ee7e4913", "Url": "https://api.github.com/repos/johanamagnusson/dblabs", "Date": "2016-12-13T17:19:58Z"},
{"Line": "=>969", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { if ((!(highPriority.isEmpty())) && (!(lowPriority.isEmpty()))) { transportHandler.transmit(highPriority); transportHandler.transmit(lowPriority); }else { for (final org.jboss.errai.bus.client.api.messaging.Message message : storedMessages) { try { throw new org.jboss.errai.bus.client.api.base.NoSubscribersToDeliverTo(message.getSubject()); } catch (org.jboss.errai.bus.client.api.base.NoSubscribersToDeliverTo ex) { if ((message.getErrorCallback()) != null) { message.getErrorCallback().error(message, ex); } } } } } finally { deferredMessages.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1808/buggy-version/errai-bus.src.main.java.org.jboss.errai.bus.client.framework.ClientMessageBusImpl.java", "BodyUseAPI": ["java.util.List<org.jboss.errai.bus.client.api.messaging.Message>.isEmpty()", "org.jboss.errai.bus.client.api.messaging.Message.getErrorCallback()", "org.jboss.errai.bus.client.api.messaging.Message.getSubject()", "message.getErrorCallback().error(org.jboss.errai.bus.client.api.messaging.Message,org.jboss.errai.bus.client.api.base.NoSubscribersToDeliverTo)", "org.jboss.errai.bus.client.framework.transports.TransportHandler.transmit(java.util.List<org.jboss.errai.bus.client.api.messaging.Message>)", "java.util.List<org.jboss.errai.bus.client.api.messaging.Message>.isEmpty()", "org.jboss.errai.bus.client.framework.transports.TransportHandler.transmit(java.util.List<org.jboss.errai.bus.client.api.messaging.Message>)", "org.jboss.errai.bus.client.api.messaging.Message.getErrorCallback()"], "Fixed commit": "6aa81967646131ecf99c702d039d69056ba360bc", "Url": "https://api.github.com/repos/BenDol/errai", "Date": "2017-11-14T13:56:50Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { getRemotePeer().flushBatch(); } catch (java.io.IOException e) { org.nextrtc.signalingserver.domain.InternalMessage.log.debug(((\"Unable to send message: \" + (transformToExternalMessage())) + \" error on flush!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6041/buggy-version/src.main.java.org.nextrtc.signalingserver.domain.InternalMessage.java", "BodyUseAPI": ["javax.websocket.RemoteEndpoint.Async.flushBatch()", "org.nextrtc.signalingserver.domain.InternalMessage.getRemotePeer()"], "Fixed commit": "5f0c32202252d94fa3a22310df1eaf6f8bbcdaa9", "Url": "https://api.github.com/repos/ddertoni/nextrtc-signaling-server", "Date": "2017-04-19T18:16:45Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { try { libLock.lock(); spotifyLib.SpPumpEvents(); } finally { libLock.unlock(); } try { java.lang.Thread.sleep(100); } catch (java.lang.InterruptedException ignored) { } } catch (java.lang.Exception e) { com.shuffle.scplayer.core.SpotifyConnectPlayerImpl.log.error(\"PumpEvents thread error\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8091/buggy-version/src.main.java.com.shuffle.scplayer.core.SpotifyConnectPlayerImpl.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)", "java.util.concurrent.locks.Lock.lock()", "com.shuffle.scplayer.jna.SpotifyLibrary.SpPumpEvents()", "java.util.concurrent.locks.Lock.unlock()"], "Fixed commit": "bbecfab97d195b88060626e30f1eebf18e289a66", "Url": "https://api.github.com/repos/LeanderK/scplayer", "Date": "2015-11-09T21:36:09Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((input) != null) input.close(); } catch (java.io.IOException e) { com.shuffle.scplayer.core.AudioPlayer.log.error(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8091/buggy-version/src.main.java.com.shuffle.scplayer.core.AudioPlayer.java", "BodyUseAPI": ["java.io.PipedInputStream.close()"], "Fixed commit": "bbecfab97d195b88060626e30f1eebf18e289a66", "Url": "https://api.github.com/repos/LeanderK/scplayer", "Date": "2015-11-09T21:36:09Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { PLAYING_TRACK_POSITION = mBucketList.indexOf(new com.sidzi.circleofmusic.entities.Track(track_path)); com.sidzi.circleofmusic.services.MusicPlayerService.PLAYING_TRACK = mBucketList.get(PLAYING_TRACK_POSITION); } catch (java.lang.IndexOutOfBoundsException | java.lang.NullPointerException ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/9095/buggy-version/app.src.main.java.com.sidzi.circleofmusic.services.MusicPlayerService.java", "BodyUseAPI": ["java.util.List<com.sidzi.circleofmusic.entities.Track>.indexOf(com.sidzi.circleofmusic.entities.Track)", "java.util.List<com.sidzi.circleofmusic.entities.Track>.get(int)"], "Fixed commit": "fbb728a7e04c8d4c564071a9c33e714c75ee0704", "Url": "https://api.github.com/repos/Circle-Of-Music-Makers/com-android", "Date": "2017-01-08T23:39:08Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return db.getDefinition().doDateRepeatEqualsTransform(getFirst().toSQLString(db), getSecond().toSQLString(db)); } catch (java.lang.UnsupportedOperationException exp) { final nz.co.gregs.dbvolution.expressions.DateRepeatExpression left = this.getFirst(); final nz.co.gregs.dbvolution.expressions.DateRepeatExpression right = this.getSecond(); return nz.co.gregs.dbvolution.expressions.BooleanExpression.allOf(left.getYears().is(right.getYears()), left.getMonths().is(right.getMonths()), left.getDays().is(right.getDays()), left.getHours().is(right.getHours()), left.getMinutes().is(right.getMinutes()), left.getSeconds().is(right.getSeconds())).toSQLString(db); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4727/buggy-version/src.main.java.nz.co.gregs.dbvolution.expressions.DateRepeatExpression.java", "BodyUseAPI": ["nz.co.gregs.dbvolution.expressions.DateRepeatExpression.5.getFirst()", "nz.co.gregs.dbvolution.DBDatabase.getDefinition()", "nz.co.gregs.dbvolution.expressions.DateRepeatExpression.toSQLString(nz.co.gregs.dbvolution.DBDatabase)", "nz.co.gregs.dbvolution.expressions.DateRepeatExpression.5.getSecond()", "db.getDefinition().doDateRepeatEqualsTransform(java.lang.String,java.lang.String)", "nz.co.gregs.dbvolution.expressions.DateRepeatExpression.toSQLString(nz.co.gregs.dbvolution.DBDatabase)"], "Fixed commit": "12d499a73503e08ac14aae9ac898e55cd265d96d", "Url": "https://api.github.com/repos/gregorydgraham/DBvolution7", "Date": "2017-03-01T09:12:43Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { repositoryLocation = amStub.getAMConfiguration().getRepositoryLocation(); } catch (com.abiquo.appliancemanager.client.ApplianceManagerResourceStubImpl.ApplianceManagerStubException amEx) { remoteService.setStatus(com.abiquo.api.services.STATUS_ERROR); com.abiquo.api.exceptions.APIError error = com.abiquo.api.exceptions.APIError.REMOTE_SERVICE_CONNECTION_FAILED; configurationErrors.add(new com.abiquo.model.transport.error.ErrorDto(error.getCode(), (((remoteService.getType().getName()) + \", \") + (amEx.getMessage())))); return configurationErrors; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5070/buggy-version/api.src.main.java.com.abiquo.api.services.RemoteServiceService.java", "BodyUseAPI": ["com.abiquo.appliancemanager.client.ApplianceManagerResourceStubImpl.getAMConfiguration()", "amStub.getAMConfiguration().getRepositoryLocation()"], "Fixed commit": "d2f855341069a69e24312457116403d5e4912122", "Url": "https://api.github.com/repos/abiquo/abiquo", "Date": "2011-10-11T14:45:37Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { t = java.util.concurrent.TimeUnit.MILLISECONDS.convert(java.lang.Long.parseLong(time), java.util.concurrent.TimeUnit.MINUTES); } catch (java.lang.NumberFormatException e) { throw new java.lang.Exception(\"Invalid format.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/349/buggy-version/src.main.java.com.graywolf336.jail.Util.java", "BodyUseAPI": ["java.util.concurrent.TimeUnit.convert(long,java.util.concurrent.TimeUnit)", "java.lang.Long.parseLong(java.lang.String)"], "Fixed commit": "978bd044fe982332820f7a66082c5a082f405286", "Url": "https://api.github.com/repos/graywolf336/Jail", "Date": "2013-12-25T01:36:14Z"},
{"Line": "=>761", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mAllCards.addAll(cards); mCards.addAll(cards); } catch (java.lang.OutOfMemoryError e) { android.util.Log.e(AnkiDroidApp.TAG, (\"CardBrowser: mLoadCardsHandler: OutOfMemoryError: \" + e)); com.ichi2.themes.Themes.showThemedToast(this, getResources().getString(R.string.error_insufficient_memory), false); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/337/buggy-version/src.com.ichi2.anki.CardBrowser.java", "BodyUseAPI": ["java.util.ArrayList<java.util.HashMap<java.lang.String, java.lang.String>>.addAll(java.util.ArrayList<java.util.HashMap<java.lang.String, java.lang.String>>)", "java.util.ArrayList<java.util.HashMap<java.lang.String, java.lang.String>>.addAll(java.util.ArrayList<java.util.HashMap<java.lang.String, java.lang.String>>)"], "Fixed commit": "32ebe4a719a88bbf84b0c84e6b8afa3573f0291a", "Url": "https://api.github.com/repos/trurlo/Anki-Android", "Date": "2011-10-07T20:35:54Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.apache.http.client.methods.HttpGet request = new org.apache.http.client.methods.HttpGet(doi); request.setHeader(\"Accept\", \"text/x-bibliography; style=cse\"); citation = new org.apache.http.impl.client.DefaultHttpClient().execute(request, new org.apache.http.impl.client.BasicResponseHandler()); if (org.apache.commons.lang3.StringUtils.isNotBlank(citation)) { citation = citation.replaceFirst(\"^1\\\\. \", \"\"); } } catch (java.lang.IllegalArgumentException ex) { org.eol.globi.service.DOIResolverImpl.LOG.warn(((\"potientially malformed doi found [\" + doi) + \"]\"), ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5071/buggy-version/eol-globi-data-tool.src.main.java.org.eol.globi.service.DOIResolverImpl.java", "BodyUseAPI": ["java.lang.String.replaceFirst(java.lang.String,java.lang.String)", "org.apache.http.client.methods.HttpGet.setHeader(java.lang.String,java.lang.String)", "org.apache.http.impl.client.DefaultHttpClient.execute(org.apache.http.client.methods.HttpGet,org.apache.http.impl.client.BasicResponseHandler)", "org.apache.commons.lang3.StringUtils.isNotBlank(java.lang.String)"], "Fixed commit": "e7fd3e54b46d7f8afdaaf058e854dd2eae4b19a7", "Url": "https://api.github.com/repos/jhpoelen/eol-globi-data", "Date": "2013-12-14T21:03:05Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { Minibase.DiskManager.read_page(pageno, frames[replacementIndex].getPage()); } catch (java.lang.Exception dskMgre) { throw new diskmgr.DiskMgrException(dskMgre, (\"DiskManager failed to read page \" + (pageno.pid))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5511/buggy-version/src.bufmgr.BufMgr.java", "BodyUseAPI": ["Minibase.DiskManager.read_page(global.PageId,frames[replacementIndex].getPage())", "frames[replacementIndex].getPage()"], "Fixed commit": "363e8e07f5a869562cddb1ac8a83ae6453e56a21", "Url": "https://api.github.com/repos/centauroWaRRIor/OurMinibase", "Date": "2015-03-01T22:21:50Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { context.unregisterReceiver(wifiScanReceiver); } catch (java.lang.IllegalArgumentException e) { android.util.Log.v(com.inceptai.dobby.DobbyApplication.TAG, (\"Exception while unregistering wifi receiver: \" + e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/540/buggy-version/Dobby.app.src.main.java.com.inceptai.dobby.wifi.WifiAnalyzer.java", "BodyUseAPI": ["android.content.Context.unregisterReceiver(com.inceptai.dobby.wifi.WifiAnalyzer.WifiReceiver)"], "Fixed commit": "80b34bde507257756ec69416dcd5ae9561d52678", "Url": "https://api.github.com/repos/InceptAi/dobby-android", "Date": "2017-04-14T17:53:03Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { context.unregisterReceiver(wifiStateReceiver); } catch (java.lang.IllegalArgumentException e) { android.util.Log.v(com.inceptai.dobby.DobbyApplication.TAG, (\"Exception while unregistering wifi state receiver: \" + e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/540/buggy-version/Dobby.app.src.main.java.com.inceptai.dobby.wifi.WifiAnalyzer.java", "BodyUseAPI": ["android.content.Context.unregisterReceiver(com.inceptai.dobby.wifi.WifiAnalyzer.WifiReceiver)"], "Fixed commit": "80b34bde507257756ec69416dcd5ae9561d52678", "Url": "https://api.github.com/repos/InceptAi/dobby-android", "Date": "2017-04-14T17:53:03Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { localCoordinate = keyboard.nextInt(); } catch (java.util.InputMismatchException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8326/buggy-version/src.model.Human.java", "BodyUseAPI": ["java.util.Scanner.nextInt()"], "Fixed commit": "c51ce7ea2038a7da017bf013c8d3f33d7571f0e9", "Url": "https://api.github.com/repos/KolesnikSergey/X0Game", "Date": "2016-02-04T21:13:14Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(1000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5884/buggy-version/JavaBase.src.com.ddb.javacore.thread.WriteArticleRunable.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "9e203e5c48cd4cd6e5fa618b48c9a4d986b27321", "Url": "https://api.github.com/repos/1797890817/Java4", "Date": "2017-04-14T03:12:08Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return java.lang.Double.parseDouble(getStringValue(et)); } catch (java.lang.NumberFormatException e) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6845/buggy-version/app.src.main.java.com.example.nataliechanfreau.myapplication.Row.java", "BodyUseAPI": ["com.example.nataliechanfreau.myapplication.Row.getStringValue(android.widget.EditText)", "java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "7004ba8a7601fd83b866114d8f4367a81f68b4b5", "Url": "https://api.github.com/repos/nchanfreau/first", "Date": "2015-05-20T17:53:14Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { round = ((double) (java.lang.Math.round(((java.lang.Double.parseDouble(change)) * 100)))) / 100; } catch (java.lang.Exception e) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8400/buggy-version/app.src.main.java.com.sam_chordas.android.stockhawk.rest.Utils.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)", "java.lang.Math.round(double)"], "Fixed commit": "8a56082a9ec000738fdf849e4197ec7ab00fd678", "Url": "https://api.github.com/repos/sbchaos/StockHawk", "Date": "2016-04-04T18:32:49Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { pudelCommand.sqlite = new net.partstudios.utility.commandDBwrapper(\"commanddb\", this); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4594/buggy-version/src.net.partstudios.utility.Utility.java", "BodyUseAPI": [], "Fixed commit": "960c054024188970831baf1b81e537071bbb44e2", "Url": "https://api.github.com/repos/part174/freyUtility", "Date": "2013-01-02T13:04:01Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { agh.cs.lab9.Wyjazdy[] wyjazdy = context.deserialize(jLayers.get(\"wyjazdy\"), agh.cs.lab9.Wyjazdy[].class); posel.setWyjazdy(wyjazdy); } catch (java.lang.Exception ex) { posel.setNoInfo(\"Niema informacji o wyjazdach.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7609/buggy-version/src.agh.cs.lab9.AddPoselDeserializer.java", "BodyUseAPI": ["agh.cs.lab9.JsonDeserializationContext.deserialize(jLayers.get(\"wyjazdy\"),java.lang.Class)", "agh.cs.lab9.JsonObject.get(java.lang.String)", "agh.cs.lab9.Posel.setWyjazdy(agh.cs.lab9.Wyjazdy[])"], "Fixed commit": "147cb44bec0785aff7a87e4fc7f4a20cef20e607", "Url": "https://api.github.com/repos/GillinedUp/agh.cs.lab9", "Date": "2016-12-28T20:19:58Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { request = edu.wpi.cs.wpisuitetng.network.Network.getInstance().makeRequest(\"defecttracker/defect\", RequestMethod.PUT); request.setRequestBody(view.getModel().toJSON()); request.addObserver(requestObserver); request.send(); } catch (java.net.MalformedURLException e) { e.printStackTrace(); throw new java.lang.RuntimeException(); } catch (java.lang.NullPointerException e) { e.printStackTrace(); throw new java.lang.RuntimeException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6984/buggy-version/DefectTracker.src.edu.wpi.cs.wpisuitetng.modules.defecttracker.create.SaveDefectController.java", "BodyUseAPI": ["edu.wpi.cs.wpisuitetng.network.Network.getInstance().makeRequest(java.lang.String,RequestMethod.PUT)", "edu.wpi.cs.wpisuitetng.network.Request.send()", "view.getModel().toJSON()", "edu.wpi.cs.wpisuitetng.modules.defecttracker.create.DefectPanel.getModel()", "edu.wpi.cs.wpisuitetng.network.Request.addObserver(edu.wpi.cs.wpisuitetng.modules.defecttracker.create.SaveRequestObserver)", "edu.wpi.cs.wpisuitetng.network.Request.setRequestBody(view.getModel().toJSON())", "edu.wpi.cs.wpisuitetng.network.Network.getInstance()"], "Fixed commit": "3963351b182c9d49e91ad0ec6ec8f655a11cf4d0", "Url": "https://api.github.com/repos/fracture91/wpi-suite-tng", "Date": "2012-11-28T02:31:58Z"},
{"Line": "=>1695", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mRevQueue.removeLast(); } catch (java.util.NoSuchElementException e) { android.util.Log.w(AnkiDroidApp.TAG, \"mRevQueue empty\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/500/buggy-version/src.com.ichi2.anki.Deck.java", "BodyUseAPI": ["java.util.LinkedList<com.ichi2.anki.Deck.QueueItem>.removeLast()"], "Fixed commit": "f41b4fbb1f25b7a942c76d4fa8fc5607b19110c5", "Url": "https://api.github.com/repos/nobnago/Anki-Android", "Date": "2011-02-15T04:16:23Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.view.ViewConfiguration config = android.view.ViewConfiguration.get(this); java.lang.reflect.Field menuKeyField = android.view.ViewConfiguration.class.getDeclaredField(\"sHasPermanentMenuKey\"); if (menuKeyField != null) { menuKeyField.setAccessible(true); menuKeyField.setBoolean(config, false); } } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5899/buggy-version/app.src.main.java.com.okedroid.mysimplebrowser.MainActivity.java", "BodyUseAPI": ["java.lang.Class.getDeclaredField(java.lang.String)", "java.lang.reflect.Field.setBoolean(android.view.ViewConfiguration,boolean)", "android.view.ViewConfiguration.get(com.okedroid.mysimplebrowser.MainActivity)", "java.lang.reflect.Field.setAccessible(boolean)"], "Fixed commit": "cd0a082c152feb86483ecd2914277de549f1ca9f", "Url": "https://api.github.com/repos/fathurzero/mysimplebrowser", "Date": "2017-01-24T01:11:43Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.onesignal.OneSignal.setEmail(data.getString(0)); } catch (java.lang.Throwable t) { t.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/931/buggy-version/src.android.com.plugin.gcm.OneSignalPush.java", "BodyUseAPI": ["org.json.JSONArray.getString(int)", "com.onesignal.OneSignal.setEmail(data.getString(0))"], "Fixed commit": "ad672f1060a03d0e57c16b01fa8a82c50a52327e", "Url": "https://api.github.com/repos/OneSignal/OneSignal-Cordova-SDK", "Date": "2016-04-05T17:52:06Z"},
{"Line": "=>488", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { group = loadGroupByGroupname(username); } catch (org.springframework.dao.DataRetrievalFailureException e) { org.jenkinsci.plugins.GithubSecurityRealm.LOGGER.config((\"No group found with name: \" + username)); } catch (org.acegisecurity.userdetails.UsernameNotFoundException e) { org.jenkinsci.plugins.GithubSecurityRealm.LOGGER.config((\"No group found with name: \" + username)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2688/buggy-version/src.main.java.org.jenkinsci.plugins.GithubSecurityRealm.java", "BodyUseAPI": ["org.jenkinsci.plugins.GithubSecurityRealm.loadGroupByGroupname(java.lang.String)"], "Fixed commit": "f5f8d405ef72e8f39a14d2f3cb2e8493646d05d3", "Url": "https://api.github.com/repos/martonsereg/github-oauth-plugin", "Date": "2014-03-28T16:52:08Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { gda.scan.ScanBase.checkForInterrupts(); } catch (java.lang.InterruptedException e) { throw new gda.device.DeviceException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7592/buggy-version/uk.ac.gda.epics.src.gda.device.scannable.PIE725ConstantVelocityRasterScannable.java", "BodyUseAPI": ["gda.scan.ScanBase.checkForInterrupts()"], "Fixed commit": "54c5a5899c46548b3967e42da5907fc4a25bc823", "Url": "https://api.github.com/repos/openGDA/gda-epics", "Date": "2014-03-14T15:16:21Z"},
{"Line": "=>451", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { converted = (convertToDB) ? typeConverter.getDBValue(object) : object; } catch (java.lang.ClassCastException c) { com.raizlabs.android.dbflow.config.FlowLog.log(FlowLog.Level.W, c); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4831/buggy-version/dbflow.src.main.java.com.raizlabs.android.dbflow.sql.language.Condition.java", "BodyUseAPI": ["com.raizlabs.android.dbflow.converter.TypeConverter.getDBValue(java.lang.Object)"], "Fixed commit": "0c0597cbf2cc2b8460c3ab49c3d9ff934aef45b8", "Url": "https://api.github.com/repos/madisp/DBFlow", "Date": "2017-02-03T22:01:41Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { sess.getConnection().setAutoCommit(false); } catch (java.lang.Exception e) { sess.close(); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5327/buggy-version/Khalifa.src.com.khalifa.process.ProtobufRequestProcessor.java", "BodyUseAPI": ["org.apache.ibatis.session.SqlSession.getConnection()", "sess.getConnection().setAutoCommit(boolean)"], "Fixed commit": "ba3d180c92ecd6e964963fca7553a56363eb0a5e", "Url": "https://api.github.com/repos/diohpix/qasr", "Date": "2014-05-16T07:51:21Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(10); } catch (java.lang.InterruptedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6015/buggy-version/src.GamePanel.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "52464bcc106c2209ebe7a662392e7c4d3565f352", "Url": "https://api.github.com/repos/maomihz/SlidingPuzzleJava", "Date": "2015-07-19T21:42:07Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.io.File file = new java.io.File(confFile); f.createNewFile(); java.io.BufferedWriter bw = new java.io.BufferedWriter(new java.io.FileWriter(file)); bw.write(jsonFile); bw.flush(); bw.close(); } catch (java.io.IOException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3755/buggy-version/src.main.java.com.davies.babble.util.JSONUtils.java", "BodyUseAPI": ["java.io.BufferedWriter.flush()", "java.io.BufferedWriter.write(java.lang.String)", "java.io.BufferedWriter.close()", "java.io.File.createNewFile()"], "Fixed commit": "032d6350211388feb08cd3753b50a7b261cabd8b", "Url": "https://api.github.com/repos/BenDaviesGFX/BabbleBot", "Date": "2017-01-25T13:21:02Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { portableEditFile(file); } catch (java.io.IOException ioe) { java.lang.String[] commands = new java.lang.String[]{ \"open\", \"-nt\", file.getAbsolutePath() }; java.lang.Runtime.getRuntime().exec(commands); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2294/buggy-version/packaging.neo4j-desktop.src.main.java.org.neo4j.desktop.config.osx.DarwinEnvironment.java", "BodyUseAPI": ["org.neo4j.desktop.config.osx.DarwinEnvironment.portableEditFile(java.io.File)"], "Fixed commit": "bd7be7273652c8f78f6adacfd49f8b015739d927", "Url": "https://api.github.com/repos/nawroth/neo4j", "Date": "2015-10-09T09:34:02Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(runAfterThisTimeDuration); } catch (java.lang.InterruptedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3582/buggy-version/src.org.hlib4j.process.ProcessFuture.java", "BodyUseAPI": ["java.lang.Thread.sleep(long)"], "Fixed commit": "b11ed8f8c36eb959978cee69c138f5c8ac01e8f6", "Url": "https://api.github.com/repos/tneenot/Hephaistos4J", "Date": "2017-01-09T19:42:11Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { choreographer = android.view.Choreographer.getInstance(); } catch (java.lang.Exception ex) { android.util.Log.e(com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper.VSyncSampler.TAG, (\"Choreographer instance created failed \" + (ex.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6129/buggy-version/library.core.src.main.java.com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper.java", "BodyUseAPI": ["android.view.Choreographer.getInstance()"], "Fixed commit": "c7e2c0c25751bbf9faf9d49130cc63294cfe64d8", "Url": "https://api.github.com/repos/michalliu/Google_ExoPlayer", "Date": "2017-07-12T11:11:30Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { bm = android.graphics.BitmapFactory.decodeByteArray(bytes, 0, bytes.length, opts); } catch (java.lang.Exception e) { android.util.Log.d(com.baidu.iknow.imageloader.decoder.BitmapDecoder.TAG, \"bitmap decode error!\"); e.printStackTrace(); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/460/buggy-version/src.com.baidu.iknow.imageloader.decoder.BitmapDecoder.java", "BodyUseAPI": ["android.graphics.BitmapFactory.decodeByteArray(byte[],int,int,android.graphics.BitmapFactory.Options)"], "Fixed commit": "4ded7a782d39228447cbf1b0b9086f9dad532f37", "Url": "https://api.github.com/repos/zhaoxuyang/imageloader", "Date": "2015-11-23T12:51:19Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { size = java.lang.Integer.parseInt(matcher.group(1).substring(1)); } catch (java.lang.NumberFormatException e) { size = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/562/buggy-version/app.src.main.java.com.daquePATHn.chaoli.forum.meta.OnlineImgUtils.java", "BodyUseAPI": ["java.util.regex.Matcher.group(int)", "java.lang.String.substring(int)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "ab15e931c7a23ab32773adefe75d158abbedaff8", "Url": "https://api.github.com/repos/daquePATHn/chaoli-forum-for-android-2", "Date": "2017-02-07T09:25:09Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { cursor = contentResolver.query(uri, projection, null, null, ((MediaStore.Video.Media.DATE_ADDED) + \" DESC\")); } catch (java.lang.Exception e) { cn.finalteam.rxgalleryfinal.utils.Logger.e(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5115/buggy-version/library.src.main.java.cn.finalteam.rxgalleryfinal.utils.MediaUtils.java", "BodyUseAPI": ["android.content.ContentResolver.query(android.net.Uri,java.lang.String[],<nulltype>,<nulltype>,((MediaStore.Video.Media.DATE_ADDED) + \" DESC\"))"], "Fixed commit": "9d1b4293719b09426c6f21f2cf3cbed55cc535eb", "Url": "https://api.github.com/repos/FinalTeam/RxGalleryFinal", "Date": "2016-07-10T15:55:52Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return synapticloop.b2.BucketType.valueOf(this.bucketType); } catch (java.lang.IllegalArgumentException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/661/buggy-version/src.main.java.synapticloop.b2.response.B2BucketResponse.java", "BodyUseAPI": ["synapticloop.b2.BucketType.valueOf(java.lang.String)"], "Fixed commit": "a24b89bba789c73ca2033ac5a27126c76eb7fbf7", "Url": "https://api.github.com/repos/iterate-ch/backblaze-b2-java-api", "Date": "2016-04-02T07:20:46Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { sendError(exceptionFromRequest, request, user.getId()); } catch (java.lang.Exception e) { request.setAttribute(\"error-id\", (-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4325/buggy-version/server.src.com.imcode.imcms.servlet.InternalError.java", "BodyUseAPI": ["com.imcode.imcms.servlet.InternalError.sendError(java.lang.Throwable,javax.servlet.http.HttpServletRequest,user.getId())", "imcode.server.user.UserDomainObject.getId()"], "Fixed commit": "2fe2f9f82f61456d3b1153c56844dd85beb1a012", "Url": "https://api.github.com/repos/imCodePartnerAB/imcms", "Date": "2016-10-17T07:18:46Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { statusCode = httpConn.getResponseCode(); } catch (java.io.IOException ioe) { statusCode = httpConn.getResponseCode(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8757/buggy-version/libs.SalesforceSDK.src.com.salesforce.androidsdk.auth.HttpAccess.java", "BodyUseAPI": ["java.net.HttpURLConnection.getResponseCode()"], "Fixed commit": "df567b086e3a89f33b54108a441e19791fc94760", "Url": "https://api.github.com/repos/forcedotcom/SalesforceMobileSDK-Android", "Date": "2015-07-18T00:49:06Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.isroot.stash.plugin.jira.JiraServiceImpl.log.debug(\"response entity: {}\", statusException.getResponse().getResponseBodyAsString()); } catch (com.atlassian.sal.api.net.ResponseException e1) { com.isroot.stash.plugin.jira.JiraServiceImpl.log.error(\"error getting response body\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1642/buggy-version/src.main.java.com.isroot.stash.plugin.jira.JiraServiceImpl.java", "BodyUseAPI": ["statusException.getResponse().getResponseBodyAsString()", "com.atlassian.sal.api.net.ResponseStatusException.getResponse()", "org.slf4j.Logger.debug(java.lang.String,statusException.getResponse().getResponseBodyAsString())"], "Fixed commit": "5e4278c0c52b130beb10a2be94ab464555375443", "Url": "https://api.github.com/repos/sford/yet-another-commit-checker", "Date": "2016-05-22T17:59:59Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Long extendedBoundMinLong = java.lang.Long.parseLong(extendedBoundMin); extendedBounds.addProperty(\"min\", extendedBoundMinLong); } catch (java.lang.NumberFormatException e) { extendedBounds.addProperty(\"min\", extendedBoundMin); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4708/buggy-version/src.main.java.com.quickutil.platform.aggs.DateHistogramAggs.java", "BodyUseAPI": ["com.google.gson.JsonObject.addProperty(java.lang.String,java.lang.Long)", "java.lang.Long.parseLong(java.lang.String)"], "Fixed commit": "83a8d4bf2a686388e983c46686a188ff4d8a387b", "Url": "https://api.github.com/repos/quickutil/quickutil", "Date": "2017-07-25T08:27:44Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Long extendedBoundMaxLong = java.lang.Long.parseLong(extendedBoundMax); extendedBounds.addProperty(\"max\", extendedBoundMaxLong); } catch (java.lang.NumberFormatException e) { extendedBounds.addProperty(\"max\", extendedBoundMax); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4708/buggy-version/src.main.java.com.quickutil.platform.aggs.DateHistogramAggs.java", "BodyUseAPI": ["com.google.gson.JsonObject.addProperty(java.lang.String,java.lang.Long)", "java.lang.Long.parseLong(java.lang.String)"], "Fixed commit": "83a8d4bf2a686388e983c46686a188ff4d8a387b", "Url": "https://api.github.com/repos/quickutil/quickutil", "Date": "2017-07-25T08:27:44Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { category = java.lang.Long.parseLong(((jsonObj.get(\"categoryid\")) + \"\")); } catch (java.lang.Exception e) { net.recommenders.plista.client.ChallengeMessage.logger.info((\"EXCEPTION\\tno category found\\t\" + _jsonMessageBody)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8828/buggy-version/src.main.java.net.recommenders.plista.client.ChallengeMessage.java", "BodyUseAPI": ["org.json.simple.JSONObject.get(java.lang.String)", "java.lang.Long.parseLong(((jsonObj.get(\"categoryid\")) + \"\"))"], "Fixed commit": "eb990b14522db8fafd7e60c3f295388b06b1a09f", "Url": "https://api.github.com/repos/recommenders/plistaclient", "Date": "2013-09-02T18:52:41Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { storageChunk = zmaster587.advancedRocketry.util.StorageChunk.cutWorldBB(worldObj, bbCache); } catch (java.lang.NegativeArraySizeException e) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2910/buggy-version/src.main.java.zmaster587.advancedRocketry.tile.TileRocketBuilder.java", "BodyUseAPI": ["zmaster587.advancedRocketry.util.StorageChunk.cutWorldBB(zmaster587.advancedRocketry.tile.TileRocketBuilder,net.minecraft.util.AxisAlignedBB)"], "Fixed commit": "e27d89ea486f3d0465c9647dab64e7a64b940627", "Url": "https://api.github.com/repos/zmaster587/AdvancedRocketry", "Date": "2017-04-04T02:07:54Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { charset = java.nio.charset.Charset.forName(option.getValue()); } catch (java.lang.Exception ex) { charset = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/18/buggy-version/jaqy-json.src.main.java.com.teradata.jaqy.importer.JsonImporterFactory.java", "BodyUseAPI": ["org.apache.commons.cli.Option.getValue()", "java.nio.charset.Charset.forName(option.getValue())"], "Fixed commit": "2d1304aef3695b6d834f160924d6ec0512d3a039", "Url": "https://api.github.com/repos/Teradata/jaqy", "Date": "2017-08-09T07:36:42Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { swiftRestClient.upload(toObjectPath(path), inputStream, length); } finally { inputStream.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3168/buggy-version/hadoop-tools.hadoop-openstack.src.main.java.org.apache.hadoop.fs.swift.snative.SwiftNativeFileSystemStore.java", "BodyUseAPI": ["org.apache.hadoop.fs.swift.snative.SwiftNativeFileSystemStore.toObjectPath(org.apache.hadoop.fs.Path)", "org.apache.hadoop.fs.swift.http.SwiftRestClient.upload(org.apache.hadoop.fs.swift.util.SwiftObjectPath,java.io.InputStream,long)"], "Fixed commit": "74ef5d63c54d418d1a559af0c0ba5e7652b8fede", "Url": "https://api.github.com/repos/steveloughran/hadoop-trunk", "Date": "2013-04-05T21:44:23Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { throw new org.spongepowered.api.command.CommandException(me.ryanhamshire.GriefPrevention.GriefPrevention.getMessage(Messages.TransferClaimPermission)); } catch (org.spongepowered.api.command.CommandException e1) { src.sendMessage(e1.getText()); return org.spongepowered.api.command.CommandResult.success(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5518/buggy-version/src.me.ryanhamshire.GriefPrevention.command.CommandTransferClaim.java", "BodyUseAPI": ["me.ryanhamshire.GriefPrevention.GriefPrevention.getMessage(Messages.TransferClaimPermission)"], "Fixed commit": "3c01204f430cee9fca89d50b19118bf2f39d3272", "Url": "https://api.github.com/repos/hsyyid/GriefPrevention", "Date": "2015-12-23T03:21:05Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { player = GriefPrevention.instance.checkPlayer(src); } catch (org.spongepowered.api.command.CommandException e1) { src.sendMessage(e1.getText()); return org.spongepowered.api.command.CommandResult.success(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5518/buggy-version/src.me.ryanhamshire.GriefPrevention.command.CommandTransferClaim.java", "BodyUseAPI": ["GriefPrevention.instance.checkPlayer(org.spongepowered.api.command.CommandSource)"], "Fixed commit": "3c01204f430cee9fca89d50b19118bf2f39d3272", "Url": "https://api.github.com/repos/hsyyid/GriefPrevention", "Date": "2015-12-23T03:21:05Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((groups.getJSONObject(0).getInt(\"id\")) != (-1)) { it.polimi.dima.model.User.saveGroupsList(groups, c); return groups; }else return null; } catch (org.json.JSONException e) { e.printStackTrace(); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2035/buggy-version/app.src.main.java.it.polimi.dima.model.User.java", "BodyUseAPI": ["org.json.JSONArray.getJSONObject(int)", "groups.getJSONObject(0).getInt(java.lang.String)", "it.polimi.dima.model.User.saveGroupsList(org.json.JSONArray,android.content.Context)"], "Fixed commit": "3faaa75648cfd5a29c630b107935763182de5c68", "Url": "https://api.github.com/repos/davidecitterio/SkiTalk", "Date": "2017-07-23T08:08:48Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { updateMgr = ((connection.getParent()) != null) ? connection.getParent().getUpdateManager() : connection.getUpdateManager(); } catch (java.lang.Throwable ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7554/buggy-version/org.dawb.workbench.plotting.src.org.dawb.workbench.plotting.system.swtxy.selection.RingSelection.java", "BodyUseAPI": ["org.eclipse.draw2d.Figure.getParent()", "org.eclipse.draw2d.Figure.getUpdateManager()", "connection.getParent().getUpdateManager()", "org.eclipse.draw2d.Figure.getParent()"], "Fixed commit": "ea2e6fa2ffa34edc1d1a5f8474449d3dc7d94aa1", "Url": "https://api.github.com/repos/DawnScience/dawn-ui", "Date": "2012-06-06T11:04:39Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { executorService.awaitTermination(30, java.util.concurrent.TimeUnit.MINUTES); } catch (java.lang.InterruptedException e) { errors.add(\"Cropping was interrupted!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2981/buggy-version/rosa-archive.rosa-archive-core.src.main.java.rosa.archive.core.store.StoreImpl.java", "BodyUseAPI": ["java.util.concurrent.ExecutorService.awaitTermination(int,java.util.concurrent.TimeUnit)"], "Fixed commit": "17e68c9eaa8b01f5379970e64d3efadd7f3b3dc1", "Url": "https://api.github.com/repos/jhu-digital-manuscripts/rosa2", "Date": "2014-11-06T19:26:58Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.gemsConfig.setGemHome(this.gemHome.getCanonicalFile()); this.gemsConfig.addGemPath(this.gemPath.getCanonicalFile()); } catch (java.io.IOException e) { this.gemsConfig.setGemHome(this.gemHome); this.gemsConfig.addGemPath(this.gemPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7279/buggy-version/gem-maven-plugin.src.main.java.de.saumya.mojo.gem.AbstractGemMojo.java", "BodyUseAPI": ["de.saumya.mojo.ruby.gems.GemsConfig.addGemPath(java.io.File)", "java.io.File.getCanonicalFile()", "de.saumya.mojo.ruby.gems.GemsConfig.setGemHome(java.io.File)", "java.io.File.getCanonicalFile()"], "Fixed commit": "afb7143ad53c334a1210f6d5eddc500e413b779f", "Url": "https://api.github.com/repos/torquebox/jruby-maven-plugins", "Date": "2013-10-09T20:53:59Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { java.lang.String line; while ((line = reader.readLine()) != null) { sb.append(line).append('\\n'); } } finally { reader.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2962/buggy-version/src.es.upm.dit.isst.ReportsServlet.java", "BodyUseAPI": ["java.lang.StringBuilder.append(char)", "java.lang.StringBuilder.append(java.lang.String)", "java.io.BufferedReader.readLine()"], "Fixed commit": "c7900f8fadbfd46870cf92fc687a06c8f19bad17", "Url": "https://api.github.com/repos/ISST-GrupoDeDesarrollo/laboratorio-electoral", "Date": "2016-05-07T16:01:53Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { amountCal = java.lang.Integer.parseInt(edtCal.getText().toString()); amountEx = java.lang.Integer.parseInt(edtAmo.getText().toString()); amountMin = java.lang.Integer.parseInt(edtMin.getText().toString()); amountDist = java.lang.Integer.parseInt(edtDist.getText().toString()); addActivity(); } catch (java.lang.Exception e) { android.util.Log.e(\"ERROR\", e.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2115/buggy-version/FitAppIndoor.app.src.main.java.at.fhj.appathlon.fitapp.fitappindoor.app.view.AddActivityActivity.java", "BodyUseAPI": ["edtAmo.getText().toString()", "android.widget.EditText.getText()", "edtMin.getText().toString()", "edtDist.getText().toString()", "at.fhj.appathlon.fitapp.fitappindoor.app.view.AddActivityActivity.2.addActivity()", "android.widget.EditText.getText()", "android.widget.EditText.getText()", "java.lang.Integer.parseInt(edtDist.getText().toString())", "java.lang.Integer.parseInt(edtAmo.getText().toString())", "java.lang.Integer.parseInt(edtCal.getText().toString())", "java.lang.Integer.parseInt(edtMin.getText().toString())", "android.widget.EditText.getText()", "edtCal.getText().toString()"], "Fixed commit": "18e4b1b73cfbe0750a8651eabbe1a8189cb3c0ff", "Url": "https://api.github.com/repos/Stousn/appAthlon-Project", "Date": "2016-12-02T13:51:05Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.google.android.gms.maps.MapsInitializer.initialize(getActivity()); } catch (java.lang.Exception e) { android.util.Log.i(com.geo.GeoQuake.QuakeMapFragment.TAG, \"Problem initializing map\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1015/buggy-version/src.com.geo.GeoQuake.QuakeMapFragment.java", "BodyUseAPI": ["com.google.android.gms.maps.MapsInitializer.initialize(getActivity())", "com.geo.GeoQuake.QuakeMapFragment.getActivity()"], "Fixed commit": "bd0788a8b0112405819f8a2f1aff33ebec60f48b", "Url": "https://api.github.com/repos/stinsonga/GeoQuake", "Date": "2016-09-27T01:59:08Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { starttime = timeformat.parse(timetext); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1058/buggy-version/src.com.android.entity.AddMedicineDialogPopup.java", "BodyUseAPI": ["java.text.SimpleDateFormat.parse(java.lang.String)"], "Fixed commit": "5b884d6982ea3bf2a9e6c59d25fb876cac565dcd", "Url": "https://api.github.com/repos/tliu784/missYoga", "Date": "2014-04-22T22:26:55Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.sql.Connection myConn = DbHandler.DBConnection.getConnection(); java.lang.String sql = \"INSERT INTO building (idBuilding, address, cadastral, builtYear, area, zipcode, city, condition, service, extraText, dateCreated, fk_idUser, fk_idMainPicture, fk_idReport)\" + \"VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,)\"; java.sql.PreparedStatement prepared = myConn.prepareStatement(sql); prepared.setInt(1, idBuilding); prepared.setString(2, address); prepared.setString(3, cadastral); prepared.setInt(4, builtYear); prepared.setString(5, area); prepared.setString(6, zipcode); prepared.setString(7, city); prepared.setString(8, condition); prepared.setString(9, service); prepared.setString(10, cadastral); prepared.setString(11, extraText); prepared.setDate(12, dateCreated); prepared.setInt(13, fk_idUser); prepared.setInt(14, fk_MainPicture); prepared.setInt(15, fk_idReport); prepared.executeUpdate(); } catch (java.sql.SQLException | java.awt.HeadlessException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7000/buggy-version/sundebygninger.BedreBygninger.src.java.DbHandler.DBBuildingHandler.java", "BodyUseAPI": ["java.sql.PreparedStatement.setString(int,java.lang.String)", "java.sql.PreparedStatement.setInt(int,int)", "java.sql.Connection.prepareStatement(java.lang.String)", "java.sql.PreparedStatement.setString(int,java.lang.String)", "java.sql.PreparedStatement.setString(int,java.lang.String)", "java.sql.PreparedStatement.setInt(int,int)", "DbHandler.DBConnection.getConnection()", "java.sql.PreparedStatement.setInt(int,int)", "java.sql.PreparedStatement.executeUpdate()", "java.sql.PreparedStatement.setString(int,java.lang.String)", "java.sql.PreparedStatement.setString(int,java.lang.String)", "java.sql.PreparedStatement.setString(int,java.lang.String)", "java.sql.PreparedStatement.setString(int,java.lang.String)", "java.sql.PreparedStatement.setInt(int,int)", "java.sql.PreparedStatement.setString(int,java.lang.String)", "java.sql.PreparedStatement.setString(int,java.lang.String)", "java.sql.PreparedStatement.setDate(int,java.sql.Date)", "java.sql.PreparedStatement.setInt(int,int)"], "Fixed commit": "b46c722c6f22d3fbb1c63d04ca336209ef0b12e6", "Url": "https://api.github.com/repos/2joocy/sundebygninger", "Date": "2016-10-10T14:43:57Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { javax.swing.SwingUtilities.invokeAndWait(new java.lang.Runnable() { public void run() { setText(writer.toString()); } }); } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1405/buggy-version/src.org.jergometer.gui.BikeInfoPane.java", "BodyUseAPI": ["java.lang.Object()", "javax.swing.SwingUtilities.invokeAndWait(java.lang.Runnable)", "java.io.Writer.toString()", "org.jergometer.gui.BikeInfoPane.2.setText(java.lang.String)"], "Fixed commit": "d4108ca91e8dea3ac800daa7090d35072e3321a0", "Url": "https://api.github.com/repos/xylo/JErgometer", "Date": "2012-03-18T13:39:27Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { description = java.net.URLDecoder.decode(description, \"UTF-8\"); } catch (java.io.UnsupportedEncodingException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5242/buggy-version/app.src.main.java.com.reka.tour.hotel.fragment.FasilitasFragment.java", "BodyUseAPI": ["java.net.URLDecoder.decode(java.lang.String,java.lang.String)"], "Fixed commit": "60b6827a5af4d67a0104453cf472f1f9bd3a63be", "Url": "https://api.github.com/repos/satryaway/rekausaha", "Date": "2016-03-07T07:22:50Z"},
{"Line": "=>1016", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { aedPort.actualizarDocumentoPropiedadesNoClasificado(propiedades); } catch (java.lang.Exception e) { play.Logger.error((\"No se ha podido actualizar las propiedades del documento\" + e)); new es.gobcan.eadmon.aed.ws.AedExcepcion((\"Error: \" + e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3341/buggy-version/fap.app.services.aed.AedGestorDocumentalServiceImpl.java", "BodyUseAPI": ["es.gobcan.eadmon.aed.ws.AedPortType.actualizarDocumentoPropiedadesNoClasificado(es.gobcan.eadmon.gestordocumental.ws.gestionelementos.dominio.PropiedadesDocumento)"], "Fixed commit": "888a0872b0a4b1d12a74543fc50718c38256676d", "Url": "https://api.github.com/repos/FAP-Team/Fap-Module", "Date": "2013-06-18T10:43:45Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { getServer().getPlayer(uuid); } catch (java.lang.Exception e) { for (org.bukkit.entity.Player p : getServer().getOnlinePlayers()) if (p.getUniqueId().equals(uuid)) return p; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4644/buggy-version/src.net.jopv.minecraft.bukkit.minecraftpush.MinecraftPush.java", "BodyUseAPI": ["getServer().getPlayer(java.util.UUID)", "net.jopv.minecraft.bukkit.minecraftpush.MinecraftPush.getServer()"], "Fixed commit": "30c9a44df429b805ca13281e1016ee076e57cbda", "Url": "https://api.github.com/repos/Jop-V/MinecraftPush", "Date": "2014-05-29T11:31:30Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { io.subutai.common.peer.ResourceHost managementHost = localPeer.getManagementHost(); managementId = managementHost.getId(); } catch (io.subutai.common.peer.HostNotFoundException ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2225/buggy-version/management.server.core.host-registration.host-registration-rest.src.main.java.io.subutai.core.registration.rest.RegistrationRestServiceImpl.java", "BodyUseAPI": ["io.subutai.common.peer.ResourceHost.getId()", "io.subutai.common.peer.LocalPeer.getManagementHost()"], "Fixed commit": "454b62abfc2516e0ea06ee379712d5d10d61d2b9", "Url": "https://api.github.com/repos/subutai-io/peer-os", "Date": "2017-09-09T12:17:12Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { fis = new java.io.FileInputStream(propFilePath); p.load(fis); p.setProperty(userName, password); p.store(new java.io.FileOutputStream(propFilePath), null); response.sendRedirect(\"Login.jsp\"); } catch (java.lang.Exception e) { e.printStackTrace(); } finally { if (fis != null) { fis.close(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/37/buggy-version/src.servlets.Register.java", "BodyUseAPI": ["java.util.Properties.load(java.io.FileInputStream)", "java.util.Properties.store(java.io.FileOutputStream,<nulltype>)", "javax.servlet.http.HttpServletResponse.sendRedirect(java.lang.String)", "java.util.Properties.setProperty(java.lang.String,java.lang.String)"], "Fixed commit": "4970a7cfef8a3cb07e806f59ca9c9b457dc3900d", "Url": "https://api.github.com/repos/joshg0006/CSCE-464-repos", "Date": "2017-02-07T18:36:55Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (((sleep) > 0) && (!(record.isDuplicate()))) { java.lang.Thread.sleep(sleep); } } catch (java.lang.NullPointerException e) { if ((sleep) > 0) { java.lang.Thread.sleep(sleep); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7212/buggy-version/src.qubase.engine.Crawler.java", "BodyUseAPI": ["qubase.engine.Record.isDuplicate()", "java.lang.Thread.sleep(long)"], "Fixed commit": "ebe464844435913b081c40651e17d547cffa82b5", "Url": "https://api.github.com/repos/qubase/lectura-crawler-tools", "Date": "2013-12-24T19:08:09Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { snapshot = new org.apache.htrace.fasterxml.jackson.databind.ObjectMapper().readValue(request, com.bodik.model.Snapshot.class); if (((snapshot.getRowkey()) != null) && (!(snapshot.getRowkey().isEmpty()))) { new com.bodik.dao.SnapshotsDao().putToTable(snapshot); } } catch (java.lang.Exception e) { return javax.ws.rs.core.Response.status(400).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1834/buggy-version/src.main.java.com.bodik.resources.SnapshotsProduction.java", "BodyUseAPI": ["snapshot.getRowkey().isEmpty()", "org.apache.htrace.fasterxml.jackson.databind.ObjectMapper.readValue(java.lang.String,java.lang.Class)", "com.bodik.model.Snapshot.getRowkey()", "com.bodik.model.Snapshot.getRowkey()", "com.bodik.dao.SnapshotsDao.putToTable(com.bodik.model.Snapshot)"], "Fixed commit": "b22ebe5900df9d712176621eb05289700e8c9861", "Url": "https://api.github.com/repos/bodik777/REST_Snapshots", "Date": "2015-05-15T14:22:15Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (!(com.laytonsmith.core.constructs.InstanceofUtil.isInstanceof(ret, returnType))) { throw new com.laytonsmith.core.exceptions.CRE.CRECastException(((((\"Expected closure to return a value of type \" + (returnType.val())) + \" but a value of type \") + (ret.typeof())) + \" was returned instead\"), ret.getTarget()); } } catch (java.lang.ClassNotFoundException ex1) { throw new com.laytonsmith.core.exceptions.CRE.CREClassNotFoundException((\"Could not find \" + (returnType)), ret.getTarget()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7328/buggy-version/src.main.java.com.laytonsmith.core.constructs.CClosure.java", "BodyUseAPI": ["com.laytonsmith.core.constructs.InstanceofUtil.isInstanceof(com.laytonsmith.core.natives.interfaces.Mixed,com.laytonsmith.core.constructs.CClassType)", "com.laytonsmith.core.constructs.CClassType.val()", "com.laytonsmith.core.natives.interfaces.Mixed.typeof()", "com.laytonsmith.core.natives.interfaces.Mixed.getTarget()"], "Fixed commit": "9e99474e38348372c6fceef27b8cfb9f26432d97", "Url": "https://api.github.com/repos/EngineHub/CommandHelper", "Date": "2016-03-03T19:45:31Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return getParent().loadClass(name); } catch (java.lang.ClassNotFoundException secondary) { throw primary; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2017/buggy-version/grails-bootstrap.src.main.groovy.org.codehaus.groovy.grails.cli.support.GrailsRootLoader.java", "BodyUseAPI": ["getParent().loadClass(java.lang.String)", "org.codehaus.groovy.grails.cli.support.GrailsRootLoader.getParent()"], "Fixed commit": "9274e4d464e2c33dd3a22950ace0d6d57eb1dd92", "Url": "https://api.github.com/repos/davydotcom/grails-core", "Date": "2014-01-10T20:55:51Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { run.sendPaymentToProvider(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4678/buggy-version/src.main.java.org.camunda.wf.hiring.services.SendPayment.java", "BodyUseAPI": ["org.camunda.wf.hiring.services.SendPayment.sendPaymentToProvider()"], "Fixed commit": "ce34cd35dbf8b1421dfe6b0b5be35cceb9e5393c", "Url": "https://api.github.com/repos/Neram42/WF", "Date": "2017-07-19T22:13:23Z"},
{"Line": "=>415", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { javax.swing.text.StyledDocument document = _chatPane.getStyledDocument(); document.remove(0, document.getLength()); document.insertString(0, \"Chat:\\n\", null); } catch (javax.swing.text.BadLocationException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2465/buggy-version/code.brainStorm.src.suggest.SuggestGUI.java", "BodyUseAPI": ["javax.swing.text.StyledDocument.insertString(int,java.lang.String,<nulltype>)", "javax.swing.text.StyledDocument.getLength()", "javax.swing.JTextPane.getStyledDocument()", "javax.swing.text.StyledDocument.remove(int,int)"], "Fixed commit": "f236bcffc4bc4e633ba14a272ed7c75dd597f868", "Url": "https://api.github.com/repos/jboreiko/brainStormProject", "Date": "2012-05-03T07:14:09Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { sale.setSeason(result.getString(\"season\")); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7016/buggy-version/cse135.src.dao.SalesDao.java", "BodyUseAPI": ["java.sql.ResultSet.getString(java.lang.String)", "model.SalesByCustomer.setSeason(java.lang.String)"], "Fixed commit": "5bffc0b60a2ddd76d22454039368034f2a175482", "Url": "https://api.github.com/repos/vegaro/cse_135_project", "Date": "2013-05-30T19:38:45Z"},
{"Line": "=>360", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String table = tablesView.getSelectedTable(); table = table.substring(0, 1); java.lang.System.out.println((\"Selected table is: \" + table)); sendMessage(new client.Message(MessageType.JOIN_TABLE, table)); } catch (java.lang.Exception ex) { java.lang.System.out.println(\"JOIN button clicked without selected table.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4991/buggy-version/client.src.client.ConnectionController.java", "BodyUseAPI": ["client.TablesView.getSelectedTable()", "java.lang.String.substring(int,int)", "java.io.PrintStream.println(java.lang.String)", "client.ConnectionController.JoinTableListener.sendMessage(client.Message)"], "Fixed commit": "a8e024c97f3893a9e1f2a68bc86e3500299134e4", "Url": "https://api.github.com/repos/Speego/SK2-NetworkBridge", "Date": "2017-01-30T22:18:28Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { nodeManager.waitUntilMasterIsAvailable(10000); } finally { nodeManager.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4334/buggy-version/src.main.java.com.officedrop.redis.failover.jedis.JedisPoolBuilder.java", "BodyUseAPI": ["com.officedrop.redis.failover.NodeManager.waitUntilMasterIsAvailable(int)"], "Fixed commit": "b4c0abb071a04db318d9fd992a794877371b5101", "Url": "https://api.github.com/repos/officedrop/jedis_failover", "Date": "2013-01-15T20:54:34Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { table.removeAllViews(); createScoreboard(); } catch (java.lang.NullPointerException npe) { android.util.Log.i(com.curchod.wherewithal.GameReadingStonesActivity.DEBUG_TAG, (method + \" no players to put in the scoreboard\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8395/buggy-version/src.com.curchod.wherewithal.GameReadingStonesActivity.java", "BodyUseAPI": ["com.curchod.wherewithal.GameReadingStonesActivity.createScoreboard()", "android.widget.TableLayout.removeAllViews()"], "Fixed commit": "2f6680f4250a21b354c9395f0c965691e0ac9fc8", "Url": "https://api.github.com/repos/timofeysie/wherewithal", "Date": "2013-12-16T20:33:57Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { lock.lock(); isBufferEmptyOccurred = false; } finally { lock.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3775/buggy-version/gobblin-core.src.main.java.gobblin.async.AsyncDataDispatcher.java", "BodyUseAPI": ["java.util.concurrent.locks.Lock.lock()"], "Fixed commit": "91e1b0fd55b2b635f423d3a8324ba9c5c36022db", "Url": "https://api.github.com/repos/zxcware/gobblin", "Date": "2017-05-04T01:11:03Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { newestOpenId = jdbcTemplate.queryForLong(((\"SELECT Id from \" + (statusTableName)) + \" ORDER BY StartTime DESC LIMIT 1\")); } catch (org.springframework.dao.EmptyResultDataAccessException e) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/994/buggy-version/sdm-core.src.main.java.dk.nsi.sdm4.core.persistence.ImportStatusRepositoryJdbcImpl.java", "BodyUseAPI": ["org.springframework.jdbc.core.JdbcTemplate.queryForLong(java.lang.String)"], "Fixed commit": "41f4b7eae01b2f6822845a3c5850daa15a9c0c33", "Url": "https://api.github.com/repos/trifork/sdm2", "Date": "2012-08-22T14:33:08Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { tb = ann.type.resolveType(decl.initializerScope); } catch (java.lang.Exception ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3893/buggy-version/src.eclipse.lombok.eclipse.agent.Patches.java", "BodyUseAPI": ["ann.type.resolveType(decl.initializerScope)"], "Fixed commit": "ad2ab77ea676de07046f373c9e0f672452bbfaa5", "Url": "https://api.github.com/repos/peichhorn/lombok-pg", "Date": "2011-07-14T20:50:08Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mContext.unregisterReceiver(mReceiver); } catch (java.lang.IllegalArgumentException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1003/buggy-version/app.src.main.java.com.catlynx.dzd.lynx.bluetoothlink.BluetoothSearcher.java", "BodyUseAPI": ["android.content.Context.unregisterReceiver(android.content.BroadcastReceiver)"], "Fixed commit": "b47eca3289603fe5bbfcc957ae5ed10a4eac4c02", "Url": "https://api.github.com/repos/DarryQueen/Lynx", "Date": "2015-02-22T09:36:28Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { rate = restTemplate.getForObject(com.abudko.reseller.huuto.query.currency.CurrencyService.URL, com.abudko.reseller.huuto.query.currency.RateResponse.class).getRate(); } catch (java.lang.Throwable e) { log.error(java.lang.String.format(\"Unable to extract currency rate, returning DEFAULT '%s'\", com.abudko.reseller.huuto.query.currency.CurrencyService.DEFAULT_RATE), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8699/buggy-version/src.main.java.com.abudko.reseller.huuto.query.currency.CurrencyService.java", "BodyUseAPI": ["restTemplate.getForObject(com.abudko.reseller.huuto.query.currency.CurrencyService.URL, com.abudko.reseller.huuto.query.currency.RateResponse.class).getRate()", "org.springframework.web.client.RestTemplate.getForObject(java.lang.String,java.lang.Class)"], "Fixed commit": "472449f2840f520321cc2f298bb541c777cd6bbe", "Url": "https://api.github.com/repos/alexbud/reseller", "Date": "2013-11-05T10:15:53Z"},
{"Line": "=>593", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ResImpl.MiddleWareImpl.metricWriter.append(java.lang.String.valueOf(transactionTime)); } catch (java.io.IOException e) { java.lang.System.err.println(e.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7194/buggy-version/rmi.servercode.ResImpl.MiddleWareImpl.java", "BodyUseAPI": ["java.io.Writer.append(java.lang.String)", "java.lang.String.valueOf(long)"], "Fixed commit": "3be57a46a82667099d4a9897e6a0aa9e04d529c3", "Url": "https://api.github.com/repos/AlexMapley/512", "Date": "2017-11-13T21:11:46Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (!(queryTicket())) { java.lang.Thread.sleep(500); continue; } } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/9155/buggy-version/autoticket.src.main.java.code.jtduan.ticket.TService.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)", "code.jtduan.ticket.TService.queryTicket()"], "Fixed commit": "8aac1b3dafbdb260f0b85b8985a871b97bf9cfa4", "Url": "https://api.github.com/repos/jtduan/114", "Date": "2016-12-25T02:32:24Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { builder = new org.robovm.compiler.config.Config.Builder(); } catch (java.io.IOException e) { throw new org.gradle.api.GradleException(e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/367/buggy-version/src.main.java.org.robovm.gradle.tasks.AbstractRoboVMTask.java", "BodyUseAPI": [], "Fixed commit": "0b753f319ef47c227ffbabb0c91823ed9d580666", "Url": "https://api.github.com/repos/suphammer/robovm-gradle-plugin", "Date": "2014-09-04T06:41:53Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { final java.lang.String i18n = getBundle().getString(str); return java.text.MessageFormat.format(i18n, objects); } catch (java.lang.Exception e) { return str; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8630/buggy-version/jobhunter.src.main.java.jobhunter.gui.Localizable.java", "BodyUseAPI": ["java.util.ResourceBundle.getString(java.lang.String)", "java.text.MessageFormat.format(java.lang.String,java.lang.Object[])", "jobhunter.gui.Localizable.getBundle()"], "Fixed commit": "97392ed0a066efa4d095c2009d1a94a2fd148f7f", "Url": "https://api.github.com/repos/Eldelshell/JobHunter", "Date": "2014-09-18T13:19:00Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { y = new model.Youth(myGang); } catch (java.io.IOException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2472/buggy-version/src.view.ViewGUI.java", "BodyUseAPI": [], "Fixed commit": "771e9a89f7167fa2e0e29d0d2c1bedf117d77720", "Url": "https://api.github.com/repos/razzintown/FinalProject", "Date": "2012-04-29T23:55:54Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { s = new model.Soldier(myGang); } catch (java.io.IOException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2472/buggy-version/src.view.ViewGUI.java", "BodyUseAPI": [], "Fixed commit": "771e9a89f7167fa2e0e29d0d2c1bedf117d77720", "Url": "https://api.github.com/repos/razzintown/FinalProject", "Date": "2012-04-29T23:55:54Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ee.ut.math.tvt.salessystem.domain.controller.impl.SalesDomainControllerImpl.log.debug(((((\"KEYCODE: \" + (ke.getKeyChar())) + \"\\n\") + (ee.ut.math.tvt.salessystem.domain.controller.impl.SalesDomainControllerImpl.payment.getText())) + \"\\n\\n\")); ee.ut.math.tvt.salessystem.domain.controller.impl.SalesDomainControllerImpl.log.debug(((java.lang.Double.parseDouble(ee.ut.math.tvt.salessystem.domain.controller.impl.SalesDomainControllerImpl.payment.getText())) - (ee.ut.math.tvt.salessystem.domain.controller.impl.SalesDomainControllerImpl.final_price))); ee.ut.math.tvt.salessystem.domain.controller.impl.SalesDomainControllerImpl.change.setText(java.lang.Double.toString(((java.lang.Double.parseDouble(ee.ut.math.tvt.salessystem.domain.controller.impl.SalesDomainControllerImpl.payment.getText())) - (ee.ut.math.tvt.salessystem.domain.controller.impl.SalesDomainControllerImpl.final_price)))); } catch (java.lang.NumberFormatException e) { ee.ut.math.tvt.salessystem.domain.controller.impl.SalesDomainControllerImpl.change.setText(java.lang.Double.toString(0.0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4171/buggy-version/POS.src.ee.ut.math.tvt.salessystem.domain.controller.impl.SalesDomainControllerImpl.java", "BodyUseAPI": ["javax.swing.JTextField.getText()", "org.apache.log4j.Logger.debug(java.lang.String)", "java.lang.Double.parseDouble(java.lang.String)", "java.awt.event.KeyEvent.getKeyChar()", "org.apache.log4j.Logger.debug(double)", "java.lang.Double.parseDouble(java.lang.String)", "javax.swing.JTextField.getText()", "java.lang.Double.toString(double)", "javax.swing.JTextField.getText()", "javax.swing.JTextField.setText(java.lang.String)"], "Fixed commit": "986c5186daa4730de94ef04da7c370f68519c592", "Url": "https://api.github.com/repos/myloginistaken/sonytech", "Date": "2014-10-27T13:22:31Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((position != (-1)) && ((position * 2) < (tabMenuView.getChildCount()))) { getChildTextView((position * 2)).setText(text); } } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/466/buggy-version/library.src.main.java.com.yyydjk.library.DropDownMenu.java", "BodyUseAPI": ["android.widget.LinearLayout.getChildCount()", "com.yyydjk.library.DropDownMenu.getChildTextView(int)", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "dc34ecf12cddb43157d617fceee44f8dceb9fb56", "Url": "https://api.github.com/repos/tourist3/DropDownMenu_modify", "Date": "2016-10-14T03:08:25Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { okhttp3.Request request = new okhttp3.Request.Builder().url(appiumURL).build(); return client.newCall(request).execute().code(); } catch (java.net.ConnectException ex) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3132/buggy-version/src.main.java.com.lazerycode.appium.utility.UtilityFunctions.java", "BodyUseAPI": ["client.newCall(request).execute().code()", "new okhttp3.Request.Builder().url(appiumURL).build()", "okhttp3.OkHttpClient.newCall(okhttp3.Request)", "client.newCall(request).execute()", "okhttp3.Request.Builder.url(java.net.URL)"], "Fixed commit": "7a2497bcadc2ae856cb31c9efa9d0989635eab0f", "Url": "https://api.github.com/repos/Ardesco/appium-maven-plugin", "Date": "2017-02-17T18:10:48Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { salt = edu.berkeley.cs.cs162.DBHandler.getSalt(username); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8226/buggy-version/base.src.edu.berkeley.cs.cs162.ChatServer.java", "BodyUseAPI": ["edu.berkeley.cs.cs162.DBHandler.getSalt(java.lang.String)"], "Fixed commit": "d6fabe7be8b68c35faa39de6e577e248d5b2bda8", "Url": "https://api.github.com/repos/tonydear/cs162-p2", "Date": "2011-04-14T07:21:20Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { blogElement.avatarUrl = blog.avatar(AVATAR_SIZE); } catch (java.lang.Exception e) { blogElement.avatarUrl = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2234/buggy-version/app.src.main.java.eu.nioc.tumblrbrowse.services.GetTumblrBlogs.java", "BodyUseAPI": ["com.tumblr.jumblr.types.Blog.avatar(int)"], "Fixed commit": "d2e5f350b9c3c12d989b1244ef3f6ab1930ed563", "Url": "https://api.github.com/repos/nioc/tumblr-photo-browse", "Date": "2017-03-04T02:28:50Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { doSetFieldValue(newValue); } finally { settingValueFromControl = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6965/buggy-version/plugin_ide.ui.src-lang.melnorme.util.swt.components.AbstractField.java", "BodyUseAPI": ["melnorme.util.swt.components.AbstractField<VALUE>.doSetFieldValue(VALUE)"], "Fixed commit": "717c30d13d3a415849ead6de52abb7a3e92240dc", "Url": "https://api.github.com/repos/bruno-medeiros/MelnormeEclipse", "Date": "2015-05-20T18:49:54Z"},
{"Line": "=>397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { comments = new java.text.DecimalFormat(\"#,###\").format(java.lang.Integer.valueOf(__jo.get(\"commentCount\").toString())); } catch (java.lang.Throwable _e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/832/buggy-version/src.com.simple.ipeer.iutil2.youtube.YouTube.java", "BodyUseAPI": ["__jo.get(\"commentCount\").toString()", "java.text.DecimalFormat.format(java.lang.Integer)", "org.json.simple.JSONObject.get(java.lang.String)", "java.lang.Integer.valueOf(__jo.get(\"commentCount\").toString())"], "Fixed commit": "1405ecbb5af4875cb059b0695294152e2a6e8bc8", "Url": "https://api.github.com/repos/iPeer/iUtil2", "Date": "2016-06-17T01:21:53Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { reader = new org.openscience.cdk.io.MDLReader(new java.io.StringReader(mol)); org.openscience.cdk.ChemFile chemFile = ((org.openscience.cdk.ChemFile) (reader.read(((org.openscience.cdk.ChemObject) (new org.openscience.cdk.ChemFile()))))); containersList = org.openscience.cdk.tools.manipulator.ChemFileManipulator.getAllAtomContainers(chemFile); molecule = containersList.get(0); } catch (java.lang.Exception e) { java.lang.System.err.println(((\"Error retrieving chemspider id \" + ID) + \"!\")); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7390/buggy-version/src.de.ipbhalle.metfrag.chemspiderClient.ChemSpider.java", "BodyUseAPI": ["org.openscience.cdk.io.MDLReader.read(org.openscience.cdk.ChemFile)", "java.util.List<org.openscience.cdk.interfaces.IAtomContainer>.get(int)", "org.openscience.cdk.tools.manipulator.ChemFileManipulator.getAllAtomContainers(org.openscience.cdk.ChemFile)"], "Fixed commit": "3f85a9fd93675ea14df9737a0cbf8d58eb0ab60b", "Url": "https://api.github.com/repos/s-wolf/MetFrag", "Date": "2011-02-17T09:28:48Z"},
{"Line": "=>772", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.bouncycastle.asn1.x500.RDN cn = x500name.getRDNs(style)[0]; return net.maritimecloud.identityregistry.utils.CertificateUtil.valueToString(cn.getFirst().getValue()); } catch (java.lang.ArrayIndexOutOfBoundsException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1752/buggy-version/src.main.java.net.maritimecloud.identityregistry.utils.CertificateUtil.java", "BodyUseAPI": ["org.bouncycastle.asn1.x500.RDN.getFirst()", "cn.getFirst().getValue()", "net.maritimecloud.identityregistry.utils.CertificateUtil.valueToString(cn.getFirst().getValue())", "org.bouncycastle.asn1.x500.X500Name.getRDNs(org.bouncycastle.asn1.ASN1ObjectIdentifier)"], "Fixed commit": "15e22cca835016b19b2077aeca15aff70a265353", "Url": "https://api.github.com/repos/MaritimeConnectivityPlatform/IdentityRegistry", "Date": "2016-10-31T09:39:55Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (net.minecraft.tileentity.TileEntity te : net.minecraftforge.common.DimensionManager.getWorld(dimensionId).tickableTileEntities) { if (te instanceof com.minemaarten.signals.tileentity.TileEntitySignalBase) { posToColor.put(te.getPos(), ((com.minemaarten.signals.tileentity.TileEntitySignalBase) (te)).getLampStatus().color); }else if (te instanceof com.minemaarten.signals.tileentity.TileEntityStationMarker) { posToColor.put(te.getPos(), com.minemaarten.signals.rail.NetworkController.STATION_COLOR); } } } catch (java.util.ConcurrentModificationException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3074/buggy-version/src.com.minemaarten.signals.rail.NetworkController.java", "BodyUseAPI": ["net.minecraftforge.common.DimensionManager.getWorld(int)", "java.util.Map<net.minecraft.util.math.BlockPos, java.lang.Integer>.put(te.getPos(),int)", "net.minecraft.tileentity.TileEntity.getPos()", "java.util.Map<net.minecraft.util.math.BlockPos, java.lang.Integer>.put(te.getPos(),((com.minemaarten.signals.tileentity.TileEntitySignalBase) (te)).getLampStatus().color)", "net.minecraft.tileentity.TileEntity.getLampStatus()", "net.minecraft.tileentity.TileEntity.getPos()"], "Fixed commit": "32e1ad35f1078a9218eaf9b37767153f67c9ecae", "Url": "https://api.github.com/repos/MineMaarten/Signals", "Date": "2016-06-27T16:43:28Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { initAndStartRecoveryStore(conf); } catch (java.io.IOException e) { java.lang.String recoveryDirName = conf.get(YarnConfiguration.NM_RECOVERY_DIR); throw new org.apache.hadoop.yarn.exceptions.YarnRuntimeException((\"Unable to initialize recovery directory at \" + recoveryDirName), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6422/buggy-version/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-server.hadoop-yarn-server-nodemanager.src.main.java.org.apache.hadoop.yarn.server.nodemanager.NodeManager.java", "BodyUseAPI": ["org.apache.hadoop.yarn.server.nodemanager.NodeManager.initAndStartRecoveryStore(org.apache.hadoop.conf.Configuration)"], "Fixed commit": "0a5def155eff4564b5dc7685e7460952f51bbd24", "Url": "https://api.github.com/repos/lhcxx/hadoop", "Date": "2016-07-01T22:49:30Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { this.grid = new rocks.spud.grid.bungee.implementation.Grid(this); } finally { this.getProxy().getLogger().setFilter(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/435/buggy-version/bungee.plugin.src.main.java.rocks.spud.grid.bungee.GridPlugin.java", "BodyUseAPI": [], "Fixed commit": "b817b5c03d6c12f9bbb32f4152af2f5873886d75", "Url": "https://api.github.com/repos/dotStart/Grid", "Date": "2015-09-14T22:36:38Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.io.InputStream in = entity.getContent(); if (in == null) { throw new com.android.volley.ServerError(); } buffer = mPool.getBuf(1024); int count; while ((count = in.read(buffer)) != (-1)) { bytes.write(buffer, 0, count); } return bytes.toByteArray(); } catch (java.lang.Throwable throwable) { throw new com.android.volley.VolleyError(\"can't convert byte array output stream to byte array\", throwable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2904/buggy-version/volley-library.src.com.android.volley.toolbox.BasicNetwork.java", "BodyUseAPI": ["org.apache.http.HttpEntity.getContent()", "com.android.volley.toolbox.PoolingByteArrayOutputStream.write(byte[],int,int)", "com.android.volley.toolbox.PoolingByteArrayOutputStream.toByteArray()", "java.io.InputStream.read(byte[])", "com.android.volley.toolbox.ByteArrayPool.getBuf(int)"], "Fixed commit": "79fe8ccc5e754680654ad4a4a94da4d7984bd17f", "Url": "https://api.github.com/repos/zhekka3/nsu-connect-android", "Date": "2013-11-03T17:13:04Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return ((de.thb.ue.backend.model.Tutor) (ldapTemplate.search(\"\", filter.encode(), new de.thb.ue.backend.service.TutorService.PersonAttributesMapper()).get(0))); } catch (java.lang.IndexOutOfBoundsException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/9023/buggy-version/src.main.java.de.thb.ue.backend.service.TutorService.java", "BodyUseAPI": ["ldapTemplate.search(\"\", filter.encode(), new de.thb.ue.backend.service.TutorService.PersonAttributesMapper()).get(int)", "org.springframework.ldap.core.LdapTemplate.search(java.lang.String,filter.encode(),de.thb.ue.backend.service.TutorService.PersonAttributesMapper)", "org.springframework.ldap.filter.AndFilter.encode()"], "Fixed commit": "aaacf634449b3ab87b13951799dd3a5ee200fe5b", "Url": "https://api.github.com/repos/TH-Brandenburg/University-Evaluation-Backend", "Date": "2016-07-27T13:43:34Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (line.startsWith(\"%\")) { continue; }else if ((line == null) || (line.trim().equals(\"\"))) { continue; }else if (line.startsWith(\"module\")) { java.lang.String[] split = line.substring(7).split(\":\"); java.lang.String moduleName = split[0].trim(); java.lang.String moduleDescription = split[1].trim(); moduleDescriptions.put(moduleName, moduleDescription); } } catch (java.lang.Exception e) { throw new dclsuite.exception.ParseException(e, line, lnr.getLineNumber()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/408/buggy-version/dclsuite.src.dclsuite.core.parser.DCLParser.java", "BodyUseAPI": ["java.lang.String.trim()", "java.lang.String.startsWith(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.trim()", "java.lang.String.equals(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.String.trim()", "java.lang.String.substring(int)"], "Fixed commit": "75570c7584397c323a5036f2f44e6f14cb156eeb", "Url": "https://api.github.com/repos/rterrabh/DCL", "Date": "2017-01-16T13:04:59Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { downloadManager.addCompletedDownload(title, description, false, mimeType, path, length, true); } catch (java.lang.Exception e) { callbackContext.error(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/956/buggy-version/src.android.DownloadManager.java", "BodyUseAPI": ["android.app.DownloadManager.addCompletedDownload(java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,long,boolean)"], "Fixed commit": "ca2c8e99ae28a3df8ef9be21e3c1efa92b191b62", "Url": "https://api.github.com/repos/SlidEnergy/cordova-plugin-downloadmanager", "Date": "2017-10-20T04:40:02Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.sn.work.fetcher.GzStockDataConsumer.st.performTrade(s); } catch (java.lang.Exception e) { com.sn.work.fetcher.GzStockDataConsumer.log.error((\"Got error with:\" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7149/buggy-version/src.com.sn.work.fetcher.GzStockDataConsumer.java", "BodyUseAPI": ["com.sn.trade.StockTrader.performTrade(com.sn.stock.Stock2)"], "Fixed commit": "709d1955344b9878c3fbc44e9e20f9267abc80e1", "Url": "https://api.github.com/repos/SamNiBoy/StockApp", "Date": "2016-05-09T12:43:53Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { microsoftBands.get(finalI).disconnect(); updatePreference(microsoftBands.get(finalI)); } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1401/buggy-version/microsoftband.src.main.java.org.md2k.microsoftband.PrefsFragmentMicrosoftBandSettings.java", "BodyUseAPI": ["java.util.ArrayList<org.md2k.microsoftband.MicrosoftBand>.get(int)", "microsoftBands.get(finalI).disconnect()", "1.updatePreference(microsoftBands.get(finalI))", "java.util.ArrayList<org.md2k.microsoftband.MicrosoftBand>.get(int)"], "Fixed commit": "dd624b69b03923c4867625d471f9efba5f366ba9", "Url": "https://api.github.com/repos/MD2Korg/mCerebrum-MicrosoftBand", "Date": "2016-07-20T18:57:13Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { saveHeader = header.getReadGroups().get(0).getLibrary(); } catch (java.lang.Exception ignored) { saveHeader = \"Unavailable\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3671/buggy-version/src.java.picard.analysis.CollectGcBiasMetrics.java", "BodyUseAPI": ["header.getReadGroups().get(0).getLibrary()", "header.getReadGroups().get(int)", "htsjdk.samtools.SAMFileHeader.getReadGroups()"], "Fixed commit": "6a660a52a7813276f3404fe916f0456de9baaedb", "Url": "https://api.github.com/repos/broadinstitute/picard", "Date": "2015-05-22T03:46:02Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (node().hasNode(org.fcrepo.kernel.rdf.impl.JCR_CONTENT)) { contentNode = node().getNode(org.fcrepo.kernel.rdf.impl.JCR_CONTENT); } } catch (final java.security.AccessControlException e) { org.fcrepo.kernel.rdf.impl.PropertiesRdfContext.LOGGER.debug(\"Access denied to content node\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/163/buggy-version/fcrepo-kernel.src.main.java.org.fcrepo.kernel.rdf.impl.PropertiesRdfContext.java", "BodyUseAPI": ["org.fcrepo.kernel.rdf.impl.PropertiesRdfContext.node()", "org.fcrepo.kernel.rdf.impl.PropertiesRdfContext.node()", "node().hasNode(org.fcrepo.kernel.rdf.impl.JCR_CONTENT)", "node().getNode(org.fcrepo.kernel.rdf.impl.JCR_CONTENT)"], "Fixed commit": "f9e44b4bb748119f0a0f7a0b7cd607cae0d8a668", "Url": "https://api.github.com/repos/sprater/fcrepo4", "Date": "2013-10-27T18:50:11Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { pageExists = page.hasExpectedPageTitle(); } catch (com.paypal.selion.testcomponents.PageTitleUndefinedException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/193/buggy-version/client.src.main.java.com.paypal.selion.platform.html.AbstractElement.java", "BodyUseAPI": ["com.paypal.selion.testcomponents.BasicPageImpl.hasExpectedPageTitle()"], "Fixed commit": "e1c7b82b4bb24338a43555c6e402d3d78a10f592", "Url": "https://api.github.com/repos/renelux/SeLion", "Date": "2014-12-11T06:58:11Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (!(clauses.isEmpty())) { sql += \" where \" + (org.apache.commons.lang3.StringUtils.join(clauses, \" and \")); } ps = con.prepareStatement(sql); for (int i = 0; i < (parameters.size()); i++) { ps.setObject((i + 1), parameters.get(i)); } rs = ps.executeQuery(); while (rs.next()) { models.Transaction transaction = new models.Transaction(); transaction.setId(rs.getInt(\"Id\")); transaction.setCardHolderName(rs.getString(\"CardHolderName\")); transaction.setCreditCardNumber(rs.getString(\"CreditCardNumber\")); transaction.setBalance(rs.getFloat(\"Balance\")); transaction.setCardNickname(rs.getString(\"CardNickname\")); transaction.setUserId(rs.getInt(\"UserId\")); transaction.setCvv(rs.getString(\"CVV\")); transactions.add(transaction); } java.lang.System.out.println(\"[TransactionManager] - Get Transactions Successful\"); } catch (java.sql.SQLException e) { java.lang.System.out.println(\"[TransactionManager] - Get Transactions Failed\"); e.printStackTrace(); } finally { try { rs.close(); ps.close(); con.close(); } catch (java.sql.SQLException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8964/buggy-version/Xenia.src.managers.TransactionManager.java", "BodyUseAPI": ["java.sql.PreparedStatement.executeQuery()", "java.util.List<java.lang.Object>.size()", "java.sql.Connection.prepareStatement(java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)", "java.util.List<java.lang.String>.isEmpty()", "models.Transaction.setCardHolderName(java.lang.String)", "java.sql.ResultSet.getFloat(java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "models.Transaction.setCreditCardNumber(java.lang.String)", "java.util.List<java.lang.Object>.get(int)", "java.sql.ResultSet.getInt(java.lang.String)", "java.sql.ResultSet.next()", "models.Transaction.setBalance(float)", "org.apache.commons.lang3.StringUtils.join(java.util.List<java.lang.String>,java.lang.String)", "java.sql.PreparedStatement.setObject(int,java.lang.Object)", "java.sql.ResultSet.getInt(java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)", "models.Transaction.setUserId(int)", "models.Transaction.setId(int)", "java.sql.ResultSet.getString(java.lang.String)", "models.Transaction.setCardNickname(java.lang.String)", "models.Transaction.setCvv(java.lang.String)", "java.util.List<models.Transaction>.add(models.Transaction)", "java.sql.ResultSet.getString(java.lang.String)"], "Fixed commit": "8b69221f025e5bf800f30681eee2eb8cafc3e6b2", "Url": "https://api.github.com/repos/pluddy/Xenia", "Date": "2016-03-17T21:19:22Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName()); } catch (java.lang.Exception lookException) { java.lang.System.out.println(\"Unable to load defaul system look and feel; is set at default metal UI.\"); java.lang.System.out.println(lookException.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/30/buggy-version/MagicNote.src.gui.StickyNote.java", "BodyUseAPI": ["javax.swing.UIManager.setLookAndFeel(java.lang.String)", "javax.swing.UIManager.getSystemLookAndFeelClassName()"], "Fixed commit": "4a42558473b38047848524c5ee0c6fcabf401692", "Url": "https://api.github.com/repos/ian-colcanon/MagicNote", "Date": "2017-09-20T14:45:49Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (java.util.Map.Entry<java.lang.String, com.microsoft.azure.management.compute.VirtualMachineExtension> extensionEntry : resource.extensions().entrySet()) { com.microsoft.azure.management.compute.VirtualMachineExtension extension = extensionEntry.getValue(); extensions.append(\"\\n\\t\\tExtension: \").append(extension.id()).append(\"\\n\\t\\t\\tName: \").append(extension.name()).append(\"\\n\\t\\t\\tTags: \").append(extension.tags()).append(\"\\n\\t\\t\\tProvisioningState: \").append(extension.provisioningState()).append(\"\\n\\t\\t\\tAuto upgrade minor version enabled: \").append(extension.autoUpgradeMinorVersionEnabled()).append(\"\\n\\t\\t\\tPublisher: \").append(extension.publisherName()).append(\"\\n\\t\\t\\tType: \").append(extension.typeName()).append(\"\\n\\t\\t\\tVersion: \").append(extension.versionName()).append(\"\\n\\t\\t\\tPublic Settings: \").append(extension.publicSettingsAsJsonString()); } } catch (java.io.IOException ioException) { throw new java.lang.RuntimeException(ioException); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3359/buggy-version/azure-samples.src.main.java.com.microsoft.azure.management.samples.Utils.java", "BodyUseAPI": ["extensions.append(\"\\n\\t\\tExtension: \").append(extension.id()).append(\"\\n\\t\\t\\tName: \").append(extension.name()).append(\"\\n\\t\\t\\tTags: \").append(extension.tags()).append(\"\\n\\t\\t\\tProvisioningState: \").append(extension.provisioningState()).append(\"\\n\\t\\t\\tAuto upgrade minor version enabled: \").append(extension.autoUpgradeMinorVersionEnabled())", "com.microsoft.azure.management.compute.VirtualMachineExtension.autoUpgradeMinorVersionEnabled()", "extensions.append(\"\\n\\t\\tExtension: \").append(extension.id()).append(\"\\n\\t\\t\\tName: \").append(extension.name()).append(\"\\n\\t\\t\\tTags: \").append(extension.tags()).append(\"\\n\\t\\t\\tProvisioningState: \").append(extension.provisioningState()).append(\"\\n\\t\\t\\tAuto upgrade minor version enabled: \").append(extension.autoUpgradeMinorVersionEnabled()).append(\"\\n\\t\\t\\tPublisher: \").append(extension.publisherName()).append(\"\\n\\t\\t\\tType: \").append(extension.typeName()).append(java.lang.String)", "extensions.append(\"\\n\\t\\tExtension: \").append(extension.id()).append(\"\\n\\t\\t\\tName: \").append(extension.name())", "extensions.append(\"\\n\\t\\tExtension: \").append(extension.id()).append(\"\\n\\t\\t\\tName: \").append(extension.name()).append(\"\\n\\t\\t\\tTags: \").append(extension.tags()).append(\"\\n\\t\\t\\tProvisioningState: \").append(extension.provisioningState()).append(\"\\n\\t\\t\\tAuto upgrade minor version enabled: \").append(extension.autoUpgradeMinorVersionEnabled()).append(\"\\n\\t\\t\\tPublisher: \").append(extension.publisherName()).append(\"\\n\\t\\t\\tType: \").append(extension.typeName())", "extensions.append(\"\\n\\t\\tExtension: \").append(extension.id()).append(\"\\n\\t\\t\\tName: \").append(extension.name()).append(\"\\n\\t\\t\\tTags: \").append(extension.tags()).append(\"\\n\\t\\t\\tProvisioningState: \").append(extension.provisioningState()).append(java.lang.String)", "extensions.append(\"\\n\\t\\tExtension: \").append(extension.id()).append(\"\\n\\t\\t\\tName: \").append(extension.name()).append(java.lang.String)", "com.microsoft.azure.management.compute.VirtualMachineExtension.versionName()", "java.lang.StringBuilder.append(java.lang.String)", "com.microsoft.azure.management.compute.VirtualMachineExtension.publicSettingsAsJsonString()", "com.microsoft.azure.management.compute.VirtualMachineExtension.id()", "com.microsoft.azure.management.compute.VirtualMachineExtension.name()", "java.lang.StringBuilder.append(extension.id())", "extensions.append(\"\\n\\t\\tExtension: \").append(extension.id()).append(\"\\n\\t\\t\\tName: \").append(extension.name()).append(\"\\n\\t\\t\\tTags: \").append(extension.tags()).append(\"\\n\\t\\t\\tProvisioningState: \").append(extension.provisioningState()).append(\"\\n\\t\\t\\tAuto upgrade minor version enabled: \").append(extension.autoUpgradeMinorVersionEnabled()).append(java.lang.String)", "extensions.append(\"\\n\\t\\tExtension: \").append(extension.id()).append(\"\\n\\t\\t\\tName: \").append(extension.name()).append(\"\\n\\t\\t\\tTags: \").append(extension.tags()).append(\"\\n\\t\\t\\tProvisioningState: \").append(extension.provisioningState()).append(\"\\n\\t\\t\\tAuto upgrade minor version enabled: \").append(extension.autoUpgradeMinorVersionEnabled()).append(\"\\n\\t\\t\\tPublisher: \").append(extension.publisherName()).append(\"\\n\\t\\t\\tType: \").append(extension.typeName()).append(\"\\n\\t\\t\\tVersion: \").append(extension.versionName()).append(java.lang.String)", "com.microsoft.azure.management.compute.VirtualMachine.extensions()", "extensions.append(\"\\n\\t\\tExtension: \").append(extension.id()).append(\"\\n\\t\\t\\tName: \").append(extension.name()).append(\"\\n\\t\\t\\tTags: \").append(extension.tags()).append(\"\\n\\t\\t\\tProvisioningState: \").append(extension.provisioningState())", "com.microsoft.azure.management.compute.VirtualMachineExtension.provisioningState()", "extensions.append(\"\\n\\t\\tExtension: \").append(extension.id()).append(\"\\n\\t\\t\\tName: \").append(extension.name()).append(\"\\n\\t\\t\\tTags: \").append(extension.tags())", "com.microsoft.azure.management.compute.VirtualMachineExtension.tags()", "extensions.append(\"\\n\\t\\tExtension: \").append(extension.id()).append(\"\\n\\t\\t\\tName: \").append(extension.name()).append(\"\\n\\t\\t\\tTags: \").append(extension.tags()).append(\"\\n\\t\\t\\tProvisioningState: \").append(extension.provisioningState()).append(\"\\n\\t\\t\\tAuto upgrade minor version enabled: \").append(extension.autoUpgradeMinorVersionEnabled()).append(\"\\n\\t\\t\\tPublisher: \").append(extension.publisherName()).append(java.lang.String)", "extensions.append(\"\\n\\t\\tExtension: \").append(extension.id()).append(\"\\n\\t\\t\\tName: \").append(extension.name()).append(\"\\n\\t\\t\\tTags: \").append(extension.tags()).append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.util.Map.Entry<java.lang.String, com.microsoft.azure.management.compute.VirtualMachineExtension>.getValue()", "com.microsoft.azure.management.compute.VirtualMachineExtension.publisherName()", "extensions.append(\"\\n\\t\\tExtension: \").append(extension.id()).append(\"\\n\\t\\t\\tName: \").append(extension.name()).append(\"\\n\\t\\t\\tTags: \").append(extension.tags()).append(\"\\n\\t\\t\\tProvisioningState: \").append(extension.provisioningState()).append(\"\\n\\t\\t\\tAuto upgrade minor version enabled: \").append(extension.autoUpgradeMinorVersionEnabled()).append(\"\\n\\t\\t\\tPublisher: \").append(extension.publisherName()).append(\"\\n\\t\\t\\tType: \").append(extension.typeName()).append(\"\\n\\t\\t\\tVersion: \").append(extension.versionName()).append(\"\\n\\t\\t\\tPublic Settings: \").append(extension.publicSettingsAsJsonString())", "resource.extensions().entrySet()", "com.microsoft.azure.management.compute.VirtualMachineExtension.typeName()", "extensions.append(\"\\n\\t\\tExtension: \").append(extension.id()).append(\"\\n\\t\\t\\tName: \").append(extension.name()).append(\"\\n\\t\\t\\tTags: \").append(extension.tags()).append(\"\\n\\t\\t\\tProvisioningState: \").append(extension.provisioningState()).append(\"\\n\\t\\t\\tAuto upgrade minor version enabled: \").append(extension.autoUpgradeMinorVersionEnabled()).append(\"\\n\\t\\t\\tPublisher: \").append(extension.publisherName()).append(\"\\n\\t\\t\\tType: \").append(extension.typeName()).append(\"\\n\\t\\t\\tVersion: \").append(extension.versionName())", "extensions.append(\"\\n\\t\\tExtension: \").append(extension.id()).append(\"\\n\\t\\t\\tName: \").append(extension.name()).append(\"\\n\\t\\t\\tTags: \").append(extension.tags()).append(\"\\n\\t\\t\\tProvisioningState: \").append(extension.provisioningState()).append(\"\\n\\t\\t\\tAuto upgrade minor version enabled: \").append(extension.autoUpgradeMinorVersionEnabled()).append(\"\\n\\t\\t\\tPublisher: \").append(extension.publisherName())"], "Fixed commit": "55cff3613e21230c187ac7e94574970ec0473a25", "Url": "https://api.github.com/repos/anuchandy/azure-sdk-for-java", "Date": "2016-09-15T14:26:24Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { databaseTable.loadToMemory(); } catch (com.bitdubai.fermat_api.layer.osa_android.database_system.exceptions.CantLoadTableToMemoryException e) { thrownCantExecuteQueryException(e, databaseTable.getTableName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1248/buggy-version/PIP.plugin.agent.fermat-pip-plugin-agent-timeout-notifier-bitdubai.src.main.java.com.bitbudai.fermat_pip_plugin.layer.agent.timeout_notifier.developer.bitdubai.version_1.database.TimeOutNotifierAgentDatabaseDao.java", "BodyUseAPI": ["com.bitdubai.fermat_api.layer.osa_android.database_system.DatabaseTable.loadToMemory()"], "Fixed commit": "f9264879565dc85d40b46633c513a3369cd75b0e", "Url": "https://api.github.com/repos/franklinmarcano1970/fermat", "Date": "2016-04-10T00:21:51Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(1500); } catch (java.lang.InterruptedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5339/buggy-version/src.battlechallenge.bot.ClientPlayer.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "30ae17d14ffa57230ce6aec01d098f4a88ece822", "Url": "https://api.github.com/repos/desposi1/battle-challenge", "Date": "2012-06-29T22:48:10Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { process = new java.lang.ProcessBuilder(((UploadServlet.PROGRAM_PATH) + (prog.getFileName())), \"getQuestion\", (gameDifficulty + \"\")).start(); } catch (java.io.IOException e) { java.lang.System.out.println(((\"GameServlet: It was not possible to run \" + (prog.getFileName())) + \" at all. Do you have an environment installed for running F# programs?\")); response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2251/buggy-version/backend.src.main.java.dk.error404.servlets.GameServlet.java", "BodyUseAPI": ["java.lang.ProcessBuilder.start()", "dk.error404.model.Program.getFileName()"], "Fixed commit": "34ef4bdc1e1c85a7a48a146059aab52aea8d5c89", "Url": "https://api.github.com/repos/Ambrodji/SU-Error404", "Date": "2016-06-05T16:51:29Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((java.lang.Math.sqrt(player.getDistanceSq(nearestEndCityLocation))) >= 250) com.wynprice.Sound.SoundEventPlay.endCityPlay = false; } catch (java.lang.NullPointerException n) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3945/buggy-version/1.11.2.src.main.java.com.wynprice.Sound.SoundEventPlay.java", "BodyUseAPI": ["java.lang.Math.sqrt(player.getDistanceSq(nearestEndCityLocation))", "net.minecraft.entity.player.EntityPlayer.getDistanceSq(net.minecraft.util.math.BlockPos)"], "Fixed commit": "2550744c8fb8968d6d5eaf297fd884ce35368cea", "Url": "https://api.github.com/repos/Wyn-Price/Sounds-Extended", "Date": "2017-06-08T20:14:07Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((java.lang.Math.sqrt(player.getDistanceSq(nearestStrongholdLocation))) >= 350) com.wynprice.Sound.SoundEventPlay.strongholdPlay = false; } catch (java.lang.NullPointerException n) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3945/buggy-version/1.11.2.src.main.java.com.wynprice.Sound.SoundEventPlay.java", "BodyUseAPI": ["net.minecraft.entity.player.EntityPlayer.getDistanceSq(net.minecraft.util.math.BlockPos)", "java.lang.Math.sqrt(player.getDistanceSq(nearestStrongholdLocation))"], "Fixed commit": "2550744c8fb8968d6d5eaf297fd884ce35368cea", "Url": "https://api.github.com/repos/Wyn-Price/Sounds-Extended", "Date": "2017-06-08T20:14:07Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { refreshing = false; publishPredictions(stops); } catch (java.lang.IllegalStateException e) { android.util.Log.e(LOG_TAG, \"Pushing query results to nonexistent view\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7673/buggy-version/app.src.main.java.jackwtat.simplembta.fragments.NearbyListFragment.java", "BodyUseAPI": ["jackwtat.simplembta.fragments.NearbyListFragment.PredictionAsyncTask.publishPredictions(java.util.List<jackwtat.simplembta.data.Stop>)"], "Fixed commit": "58a1608c1f790b1a6265a43e9470fec9026e162d", "Url": "https://api.github.com/repos/jackwtat/SimpleMBTA", "Date": "2017-11-18T01:21:36Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((progress[0]) == (LOADING_DATABASE)) { setRefreshProgress(0, getResources().getString(R.string.loading_database)); }else if ((progress[0]) == (GETTING_NEARBY_STOPS)) { setRefreshProgress(0, getResources().getString(R.string.getting_nearby_stops)); }else { setRefreshProgress(progress[0], getResources().getString(R.string.getting_predictions)); } } catch (java.lang.IllegalStateException e) { android.util.Log.e(LOG_TAG, \"Pushing progress update to nonexistent view\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7673/buggy-version/app.src.main.java.jackwtat.simplembta.fragments.NearbyListFragment.java", "BodyUseAPI": ["jackwtat.simplembta.fragments.NearbyListFragment.PredictionAsyncTask.getResources()", "getResources().getString(R.string.getting_nearby_stops)", "jackwtat.simplembta.fragments.NearbyListFragment.PredictionAsyncTask.setRefreshProgress(java.lang.Integer,getResources().getString(R.string.getting_predictions))", "getResources().getString(R.string.loading_database)", "jackwtat.simplembta.fragments.NearbyListFragment.PredictionAsyncTask.setRefreshProgress(int,getResources().getString(R.string.loading_database))", "getResources().getString(R.string.getting_predictions)", "jackwtat.simplembta.fragments.NearbyListFragment.PredictionAsyncTask.getResources()", "jackwtat.simplembta.fragments.NearbyListFragment.PredictionAsyncTask.setRefreshProgress(int,getResources().getString(R.string.getting_nearby_stops))", "jackwtat.simplembta.fragments.NearbyListFragment.PredictionAsyncTask.getResources()"], "Fixed commit": "58a1608c1f790b1a6265a43e9470fec9026e162d", "Url": "https://api.github.com/repos/jackwtat/SimpleMBTA", "Date": "2017-11-18T01:21:36Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { new com.hd.discardserver.DiscardServer(port).run(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8931/buggy-version/src.main.java.com.hd.discardserver.DiscardServer.java", "BodyUseAPI": ["com.hd.discardserver.DiscardServer.run()"], "Fixed commit": "cb9c93b0a0d694bd957c015ace055f6db7b34701", "Url": "https://api.github.com/repos/LinPATHHu/netty-server", "Date": "2015-12-14T07:28:38Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.io.File appJar = new java.io.File(org.sonar.application.PropsBuilder.class.getProtectionDomain().getCodeSource().getLocation().toURI()); return appJar.getParentFile().getParentFile(); } catch (java.net.URISyntaxException e) { throw new java.lang.IllegalStateException(\"Cannot detect path of main jar file\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6830/buggy-version/sonar-application.src.main.java.org.sonar.application.PropsBuilder.java", "BodyUseAPI": ["java.io.File.getParentFile()", "java.security.CodeSource.getLocation()", "java.security.ProtectionDomain.getCodeSource()", "java.net.URL.toURI()", "java.lang.Class.getProtectionDomain()", "java.io.File.getParentFile()"], "Fixed commit": "7bab7591a48d96e90cfd375ea04ebce8a49dc297", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2016-10-04T13:00:37Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { features.addAll(com.github.cukedoctor.parser.FeatureParser.parse(jsonReport)); } catch (final java.lang.RuntimeException re) { cucumber.runtime.arquillian.reporter.CucumberReporter.LOGGER.log(java.util.logging.Level.WARNING, (\"Can't parse \" + jsonReport), re); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3963/buggy-version/core.src.main.java.cucumber.runtime.arquillian.reporter.CucumberReporter.java", "BodyUseAPI": ["com.github.cukedoctor.parser.FeatureParser.parse(java.lang.String)", "java.util.List<com.github.cukedoctor.api.model.Feature>.addAll(com.github.cukedoctor.parser.FeatureParser.parse(jsonReport))"], "Fixed commit": "62420fdeb51c595b569ff0a144dfd99ec9bdbe08", "Url": "https://api.github.com/repos/cukespace/cukespace", "Date": "2016-10-25T06:55:36Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { restoreSystemTimeout(); } catch (java.lang.Exception e) { android.util.Log.e(net.bible.service.device.ScreenTimeoutSettings.TAG, \"Error restoring system timeout\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/9139/buggy-version/AndBible.src.net.bible.service.device.ScreenTimeoutSettings.java", "BodyUseAPI": ["net.bible.service.device.ScreenTimeoutSettings.1.restoreSystemTimeout()"], "Fixed commit": "76ae5dbcb5c7e4b0f336ea59bec6ef842a2d7c54", "Url": "https://api.github.com/repos/mjdenham/and-bible", "Date": "2013-01-12T11:55:57Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { newUser = businesslogic.accounting.user.UserDAO.getUserByORMID(newUser1.getID()); } catch (org.orm.PersistentException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5495/buggy-version/src.businesslogic.ServerManagerLogicFacade.java", "BodyUseAPI": ["businesslogic.accounting.user.UserDAO.getUserByORMID(newUser1.getID())", "businesslogic.accounting.user.User.getID()"], "Fixed commit": "e16f7bbe86191b5b4c61461f1059e8290a723c75", "Url": "https://api.github.com/repos/EhsanEI/Resource-Management-Project", "Date": "2016-07-08T14:23:09Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { exception.getReceivedResponse().close(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2988/buggy-version/plugin-shared.src.main.java.net.buycraft.plugin.shared.logging.BuycraftBeforeNotify.java", "BodyUseAPI": ["exception.getReceivedResponse().close()", "net.buycraft.plugin.client.ApiException.getReceivedResponse()"], "Fixed commit": "52211576fe772639576ab2ddd943b5919a373ca0", "Url": "https://api.github.com/repos/BuycraftPlugin/BuycraftX", "Date": "2017-06-27T01:01:14Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { runTasks(); } catch (java.lang.Exception e) { com.payneteasy.mysql.scheduler.Scheduler.LOG.error(\"Can't execute tasks\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7282/buggy-version/scheduler.src.main.java.com.payneteasy.mysql.scheduler.Scheduler.java", "BodyUseAPI": ["com.payneteasy.mysql.scheduler.Scheduler.runTasks()"], "Fixed commit": "dbe58522a4e87c5c02466b589917fba66b73e050", "Url": "https://api.github.com/repos/evsinev/mysql-scheduler", "Date": "2012-11-02T12:55:28Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { readKeys(statement.getSession(), statement, keysReceiver); } catch (java.lang.Exception e) { org.jkiss.dbeaver.model.impl.data.ExecuteBatchImpl.log.warn(\"Error reading auto-generated keys\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8279/buggy-version/plugins.org.jkiss.dbeaver.model.src.org.jkiss.dbeaver.model.impl.data.ExecuteBatchImpl.java", "BodyUseAPI": ["org.jkiss.dbeaver.model.impl.data.DBCStatement.getSession()", "org.jkiss.dbeaver.model.impl.data.ExecuteBatchImpl.readKeys(statement.getSession(),org.jkiss.dbeaver.model.impl.data.DBCStatement,org.jkiss.dbeaver.model.data.DBDDataReceiver)"], "Fixed commit": "0a6123643a2d6f019b28bfdb3131f12b1f09e4d9", "Url": "https://api.github.com/repos/dbeaver/dbeaver", "Date": "2017-10-18T04:49:18Z"},
{"Line": "=>4250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((FBActivityStatus != null) && ((java.lang.Integer.parseInt(FBActivityStatus)) > 0)) { FBActivityStatus = transactionInDAO.getReportActivityStatusValueById(java.lang.Integer.parseInt(FBActivityStatus)); if (((FBActivityStatus == null) || (\"\".equals(FBActivityStatus))) || (\"null\".equals(FBActivityStatus))) { FBActivityStatus = \"Service Update\"; } }else { FBActivityStatus = \"Service Update\"; } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6730/buggy-version/src.main.java.com.ut.dph.service.impl.transactionInManagerImpl.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "com.ut.dph.dao.transactionInDAO.getReportActivityStatusValueById(int)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "e707c2a2eed7a4e919d24665edfdf33802867817", "Url": "https://api.github.com/repos/thenhkid/universalTranslator", "Date": "2016-02-05T15:25:57Z"},
{"Line": "=>748", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.apache.hadoop.hive.ql.metadata.Hive.get(conf).getMSC(); } catch (java.lang.Exception e) { throw new org.apache.hadoop.hive.ql.metadata.HiveException(e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7236/buggy-version/ql.src.java.org.apache.hadoop.hive.ql.session.SessionState.java", "BodyUseAPI": ["org.apache.hadoop.hive.ql.metadata.Hive.get(org.apache.hadoop.hive.conf.HiveConf)", "org.apache.hadoop.hive.ql.metadata.Hive.get(conf).getMSC()"], "Fixed commit": "b35795441195825218cc32bda814ea7a9369435f", "Url": "https://api.github.com/repos/thejasmn/hive", "Date": "2015-02-13T18:48:48Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return equationPart.getLeftAsBigDecimal().divide(equationPart.getRightAsBigDecimal(), 256, java.math.RoundingMode.HALF_UP).setScale(0, java.math.RoundingMode.DOWN).toPlainString(); } catch (java.lang.ArithmeticException aEx) { throw new java.lang.NumberFormatException(\"Cannot divide by zero\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8657/buggy-version/src.main.java.com.andrewsears.novus.bc.BC.java", "BodyUseAPI": ["equationPart.getLeftAsBigDecimal().divide(equationPart.getRightAsBigDecimal(), 256, java.math.RoundingMode.HALF_UP).setScale(int,java.math.RoundingMode)", "equationPart.getLeftAsBigDecimal().divide(equationPart.getRightAsBigDecimal(), 256, java.math.RoundingMode.HALF_UP).setScale(0, java.math.RoundingMode.DOWN).toPlainString()", "com.andrewsears.novus.bc.EquationPart.getLeftAsBigDecimal()", "equationPart.getLeftAsBigDecimal().divide(equationPart.getRightAsBigDecimal(),int,java.math.RoundingMode)", "com.andrewsears.novus.bc.EquationPart.getRightAsBigDecimal()"], "Fixed commit": "9c74b3e6b86bec2c9542c9aa2292ca6aa92e71fa", "Url": "https://api.github.com/repos/andrewsears/novus-bc", "Date": "2015-03-14T16:55:12Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { urlStr = response.encodeURL(urlStr); } catch (java.lang.Throwable e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1797/buggy-version/se.softhouse.garden.orchid.spring.src.main.java.se.softhouse.garden.orchid.spring.utils.LinkUtil.java", "BodyUseAPI": ["javax.servlet.http.HttpServletResponse.encodeURL(java.lang.String)"], "Fixed commit": "3ca606f4e53515646f286beb622705867564e169", "Url": "https://api.github.com/repos/Softhouse/orchid", "Date": "2011-10-23T20:11:19Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { cfg.save(file); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5221/buggy-version/src.com.github.nathannr.healthindicator.Config.java", "BodyUseAPI": ["org.bukkit.configuration.file.FileConfiguration.save(java.io.File)"], "Fixed commit": "6a86499c07089e3a1f6ee6778c83f8040c83a5a4", "Url": "https://api.github.com/repos/NathanNr/HealthIndicator", "Date": "2016-10-08T13:21:47Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { obj.setDisplayName(org.bukkit.ChatColor.translateAlternateColorCodes('&', cfg.getString(\"HealthIndicator.HealthDescription\"))); } catch (java.lang.Exception e) { org.bukkit.Bukkit.dispatchCommand(org.bukkit.Bukkit.getConsoleSender(), \"reload\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5221/buggy-version/src.com.github.nathannr.healthindicator.HealthIndicator.java", "BodyUseAPI": ["org.bukkit.configuration.file.FileConfiguration.getString(java.lang.String)", "org.bukkit.ChatColor.translateAlternateColorCodes(char,cfg.getString(\"HealthIndicator.HealthDescription\"))", "org.bukkit.scoreboard.Objective.setDisplayName(org.bukkit.ChatColor.translateAlternateColorCodes('&', cfg.getString(\"HealthIndicator.HealthDescription\")))"], "Fixed commit": "6a86499c07089e3a1f6ee6778c83f8040c83a5a4", "Url": "https://api.github.com/repos/NathanNr/HealthIndicator", "Date": "2016-10-08T13:21:47Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { map.updateOperation(pnfsId, exception); } catch (java.lang.IllegalStateException e) { org.dcache.resilience.handlers.PnfsTaskCompletionHandler.LOGGER.trace(\"{}\", new org.dcache.util.ExceptionMessage(e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3320/buggy-version/modules.dcache.src.main.java.org.dcache.resilience.handlers.PnfsTaskCompletionHandler.java", "BodyUseAPI": ["org.dcache.resilience.data.PnfsOperationMap.updateOperation(diskCacheV111.util.PnfsId,diskCacheV111.util.CacheException)"], "Fixed commit": "9cdc1245b2968c474dc1ba2809e83a0c57882dd6", "Url": "https://api.github.com/repos/alrossi/dcache-server", "Date": "2016-02-20T17:49:53Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.parse.Parse.initialize(this, getString(R.string.app_id), getString(R.string.client_key)); com.parse.ParseInstallation.getCurrentInstallation().saveInBackground(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2468/buggy-version/YoMas10.app.src.main.java.co.edu.eafit.yomas10.MainActivity.java", "BodyUseAPI": ["com.parse.ParseInstallation.getCurrentInstallation().saveInBackground()", "co.edu.eafit.yomas10.MainActivity.getString(R.string.client_key)", "co.edu.eafit.yomas10.MainActivity.getString(R.string.app_id)", "com.parse.Parse.initialize(co.edu.eafit.yomas10.MainActivity,getString(R.string.app_id),getString(R.string.client_key))", "com.parse.ParseInstallation.getCurrentInstallation()"], "Fixed commit": "f48adb99e7935f1fe50e6f1fcf47b64fba4bd83c", "Url": "https://api.github.com/repos/alfred951/Yo-10", "Date": "2015-09-24T23:13:03Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { dbServer.DBServer.storeLastSensorsData(); java.lang.Thread.sleep(10000); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6934/buggy-version/src.dbServer.DBServer.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)", "dbServer.DBServer.storeLastSensorsData()"], "Fixed commit": "601275b53d0bca25101d09acd64352bd2074f59b", "Url": "https://api.github.com/repos/diogo-gsa/dbServer", "Date": "2014-04-15T01:31:39Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { long remainingEstimate = getRemainingEstimate(issueKey); remainingEstimate -= timeSpent; if (remainingEstimate < 0) { remainingEstimate = 0; } return remainingEstimate; } catch (com.dstsystems.hackathon.autotempo.tempo.HttpStatusException e) { if ((e.getStatusCode()) == (org.apache.http.HttpStatus.SC_FORBIDDEN)) { return null; }else { throw e; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2552/buggy-version/src.main.java.com.dstsystems.hackathon.autotempo.tempo.TempoSubmitter.java", "BodyUseAPI": ["com.dstsystems.hackathon.autotempo.tempo.TempoSubmitter.getRemainingEstimate(java.lang.String)"], "Fixed commit": "8a311d47928c253ab340f24ed4a35a489e728225", "Url": "https://api.github.com/repos/dst-hackathon/autotempo", "Date": "2015-11-07T06:24:58Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { user = userService.getUser(org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication().getName()); } catch (it.sevenbits.web.service.goods.GoodsException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4656/buggy-version/sport-rent-equipment.src.main.java.it.sevenbits.web.controllers.announcement.DealController.java", "BodyUseAPI": ["org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication()", "org.springframework.security.core.context.SecurityContextHolder.getContext()", "it.sevenbits.web.service.users.UserService.getUser(org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication().getName())", "org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication().getName()"], "Fixed commit": "d9265e28c91db8b87eda39aaad8726195e47229b", "Url": "https://api.github.com/repos/7bits/internship-2015-sport-equipment-rent", "Date": "2015-08-10T06:51:01Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { Constants.LOG.error(((\"We recommend \" + (net.darkhax.bookshelf.lib.util.MathsUtils.getNextPotionID())) + \" as a replacement ID.\")); } catch (java.lang.RuntimeException exception) { Constants.LOG.error(\"An attempt to recommend an available ID was made, however it seems there are no IDs left!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5243/buggy-version/src.main.java.net.darkhax.bookshelf.handler.BookshelfHooks.java", "BodyUseAPI": ["Constants.LOG.error(((\"We recommend \" + (net.darkhax.bookshelf.lib.util.MathsUtils.getNextPotionID())) + \" as a replacement ID.\"))", "net.darkhax.bookshelf.lib.util.MathsUtils.getNextPotionID()"], "Fixed commit": "e79114bd0ef3d9981a8daa6bad602367b3723690", "Url": "https://api.github.com/repos/Darkhax-Minecraft/Bookshelf", "Date": "2015-11-16T07:19:08Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { requestJSON = org.apache.commons.io.IOUtils.toString(request.getInputStream()); newEmp = GSON.fromJson(requestJSON, io.github.proxyprint.kitchen.models.printshops.Employee.class); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4023/buggy-version/src.main.java.io.github.proxyprint.kitchen.controllers.printshops.ManagerController.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getInputStream()", "org.apache.commons.io.IOUtils.toString(request.getInputStream())", "com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Fixed commit": "28eeece32550ba08b7055cbbdbd937bd6678fd0e", "Url": "https://api.github.com/repos/ProxyPrint/proxyprint-kitchen", "Date": "2016-05-09T15:21:48Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { date = com.fasterxml.jackson.databind.util.ISO8601Utils.parse(msg.get(\"date\").toString(), new java.text.ParsePosition(0)); } catch (java.lang.Exception e) { com.cjx.monitor.postprocessor.core.MonitorDataPostProcessor.LOGGER.info(\"Fail to parse date string:{}, it maybe stale data, just pass it.\", msg.get(\"date\").toString()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3115/buggy-version/src.main.java.com.cjx.monitor.postprocessor.core.MonitorDataPostProcessor.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.util.ISO8601Utils.parse(java.lang.String,java.text.ParsePosition)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.lang.Object.toString()"], "Fixed commit": "854b1b429dcd176f5949cc448e8c440701de8c5a", "Url": "https://api.github.com/repos/freemanh/cjx-data-processor", "Date": "2016-06-30T15:11:22Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { movieObj = new org.json.JSONObject(movieData); } catch (org.json.JSONException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5747/buggy-version/app.src.main.java.nl.mprog.glimp.gidolimperg_pset3.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "9f0dfc3e7c2194f7f595d8dbd48de3b736e52077", "Url": "https://api.github.com/repos/glimperg/GidoLimperg-pset3", "Date": "2017-02-27T13:02:35Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mapEmail = com.badtudou.tudou.Util.ContentResolverSearch(getContentResolver(), uri, projection, itemList, selection, selectionArgs, sortOrder).get(0); } catch (java.lang.IndexOutOfBoundsException indexExp) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2742/buggy-version/develop.app.android.app.src.main.java.com.badtudou.tudou.DetailsActivity.java", "BodyUseAPI": ["com.badtudou.tudou.Util.ContentResolverSearch(getContentResolver(),android.net.Uri,java.lang.String[],java.util.Map<java.lang.String, java.lang.String>,java.lang.String,java.lang.String[],java.lang.String)", "com.badtudou.tudou.DetailsActivity.getContentResolver()", "com.badtudou.tudou.Util.ContentResolverSearch(getContentResolver(), uri, projection, itemList, selection, selectionArgs, sortOrder).get(int)"], "Fixed commit": "00110380e3b3b1b99ebe253f606b6df7fd39e174", "Url": "https://api.github.com/repos/BadTudou/Tudou", "Date": "2017-04-27T09:53:55Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.crashlytics.android.answers.Answers.getInstance().logContentView(new com.crashlytics.android.answers.ContentViewEvent().putContentType(\"Bulletin\").putContentId(login.getString(\"username\", \"unknown\"))); } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2639/buggy-version/app.src.main.java.com.noemptypromises.rahularya.lionel.Bulletin.java", "BodyUseAPI": ["new com.crashlytics.android.answers.ContentViewEvent().putContentType(\"Bulletin\").putContentId(login.getString(\"username\", \"unknown\"))", "com.crashlytics.android.answers.Answers.getInstance()", "com.crashlytics.android.answers.ContentViewEvent.putContentType(java.lang.String)", "com.crashlytics.android.answers.Answers.getInstance().logContentView(new com.crashlytics.android.answers.ContentViewEvent().putContentType(\"Bulletin\").putContentId(login.getString(\"username\", \"unknown\")))", "android.content.SharedPreferences.getString(java.lang.String,java.lang.String)"], "Fixed commit": "5eff414e1de5392cb220019be42337f9e0bafac6", "Url": "https://api.github.com/repos/rahularya50/lionel-mobile-android", "Date": "2017-09-01T06:47:43Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { outputStream.write(writeAppender.getLayout().getFooter().getBytes()); } catch (java.lang.Exception e) { java.lang.System.out.println(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1115/buggy-version/extensions.src.org.pentaho.platform.plugin.services.importexport.Log4JRepositoryImportLog.java", "BodyUseAPI": ["org.apache.log4j.WriterAppender.getLayout()", "writeAppender.getLayout().getFooter()", "java.io.OutputStream.write(writeAppender.getLayout().getFooter().getBytes())", "writeAppender.getLayout().getFooter().getBytes()"], "Fixed commit": "f6faef36e44a2966ff2cd8ad0038ac2c9ecc1785", "Url": "https://api.github.com/repos/tkafalas/pentaho-platform", "Date": "2013-01-24T20:49:25Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String roundtrip = java.lang.String.valueOf(java.lang.Integer.parseInt(amount)); if (roundtrip.equals(amount)) { return new se.netlight.dimlight.dao.VerbatimProvidedInteger(java.lang.String.valueOf(((java.lang.Integer.parseInt(amount)) + delta))); } } catch (java.lang.NumberFormatException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7515/buggy-version/src.main.java.se.netlight.dimlight.dao.VerbatimProvidedInteger.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.valueOf(int)", "java.lang.String.valueOf(int)"], "Fixed commit": "8b63c1e29ae34473cd0a250824f6a9dfd2557ec6", "Url": "https://api.github.com/repos/slowmo/DimLight", "Date": "2011-11-22T21:18:41Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.nio.file.Path path = java.nio.file.Paths.get(line).toRealPath(); getPathbase().add(path.toString()); } catch (java.io.IOException e) { java.lang.System.out.println(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1758/buggy-version/src.com.ELSE.model.Model.java", "BodyUseAPI": ["java.nio.file.Paths.get(java.lang.String)", "com.ELSE.model.Pathbase.add(java.lang.String)", "java.nio.file.Path.toRealPath()", "java.nio.file.Path.toString()", "com.ELSE.model.Model.getPathbase()"], "Fixed commit": "c3b04409d85f3452272045e0117d2bc0950a935d", "Url": "https://api.github.com/repos/Umuril/ELSE", "Date": "2017-01-16T14:06:56Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (f.getDistance().equals(null)) { f.setDistance(\"0\"); } } catch (java.lang.Exception e) { f.setDistance(\"0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5145/buggy-version/com.runninghusky.spacetracker.src.com.runninghusky.spacetracker.DataHelper.java", "BodyUseAPI": ["com.runninghusky.spacetracker.Flight.getDistance()", "f.getDistance().equals(<nulltype>)", "com.runninghusky.spacetracker.Flight.setDistance(java.lang.String)"], "Fixed commit": "d112b130fd1d124378d760d0043ff798c9968a56", "Url": "https://api.github.com/repos/craigisakson/SpaceTracker", "Date": "2011-11-29T11:17:51Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { in.close(); } catch (java.lang.Exception x) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4496/buggy-version/dynaLoad.src.dynaLoad.ArrayListStruct.java", "BodyUseAPI": ["java.io.BufferedReader.close()"], "Fixed commit": "8734af78387398ba5e68ce056e4142679cd535e6", "Url": "https://api.github.com/repos/kv244/gen-ds", "Date": "2015-03-25T14:55:35Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { gk.registerX11Hotkey(i, Keys.Key.values()[i].mask, Keys.Key.values()[i].code); } catch (HotkeyConflictException ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4213/buggy-version/src.Keys.java", "BodyUseAPI": ["JXGrabKey.registerX11Hotkey(int,int,int)", "Keys.Key.values()", "Keys.Key.values()"], "Fixed commit": "dac1ea587bec350f030ba114fc50bc3d7b75a81f", "Url": "https://api.github.com/repos/nikkou/notes", "Date": "2014-01-01T18:53:00Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { newmask = java.lang.Integer.parseInt(reply.substring(0, reply.indexOf(\":\"))); newcode = java.lang.Integer.parseInt(reply.substring(((reply.indexOf(\":\")) + 1), reply.length())); key.mask = newmask; key.code = newcode; } catch (java.lang.NumberFormatException ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4213/buggy-version/src.Keys.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.length()", "java.lang.String.substring(int,int)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "dac1ea587bec350f030ba114fc50bc3d7b75a81f", "Url": "https://api.github.com/repos/nikkou/notes", "Date": "2014-01-01T18:53:00Z"},
{"Line": "=>862", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return com.spotify.docker.client.DockerClient.ListContainersParam.create(\"filters\", java.net.URLEncoder.encode(\"{\\\"status\\\":[\\\"exited\\\"]}\", \"UTF-8\")); } catch (java.io.UnsupportedEncodingException e) { throw com.google.common.base.Throwables.propagate(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5309/buggy-version/src.main.java.com.spotify.docker.client.DockerClient.java", "BodyUseAPI": ["java.net.URLEncoder.encode(java.lang.String,java.lang.String)", "com.spotify.docker.client.DockerClient.ListContainersParam.create(java.lang.String,java.lang.String)"], "Fixed commit": "451dfb289f48a942a9f3fb7e4e8c8ec491c0262f", "Url": "https://api.github.com/repos/rgrunber/docker-client", "Date": "2015-11-11T20:45:07Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((ldcPath == null) || (!(new java.io.File(ldcPath).exists()))) { ldcPath = ((org.nschmidt.ldparteditor.workbench.WorkbenchManager.getUserSettingState().getLdrawFolderPath()) + (java.io.File.separator)) + \"ldconfig.ldr\"; if (!(new java.io.File(ldcPath).exists())) { ldcPath = ((org.nschmidt.ldparteditor.workbench.WorkbenchManager.getUserSettingState().getLdrawFolderPath()) + (java.io.File.separator)) + \"LDConfig.ldr\"; } if (!(new java.io.File(ldcPath).exists())) { ldcPath = ((org.nschmidt.ldparteditor.workbench.WorkbenchManager.getUserSettingState().getLdrawFolderPath()) + (java.io.File.separator)) + \"ldconfig.ldr\"; } org.nschmidt.ldparteditor.workbench.WorkbenchManager.getUserSettingState().setLdConfigPath(ldcPath); } } catch (java.lang.SecurityException se) { ldcPath = ((org.nschmidt.ldparteditor.workbench.WorkbenchManager.getUserSettingState().getLdrawFolderPath()) + (java.io.File.separator)) + \"ldconfig.ldr\"; org.nschmidt.ldparteditor.workbench.WorkbenchManager.getUserSettingState().setLdConfigPath(ldcPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3099/buggy-version/src.org.nschmidt.ldparteditor.splash.SplashScreen.java", "BodyUseAPI": ["org.nschmidt.ldparteditor.workbench.WorkbenchManager.getUserSettingState().getLdrawFolderPath()", "org.nschmidt.ldparteditor.workbench.WorkbenchManager.getUserSettingState()", "org.nschmidt.ldparteditor.workbench.WorkbenchManager.getUserSettingState().setLdConfigPath(java.lang.String)", "org.nschmidt.ldparteditor.workbench.WorkbenchManager.getUserSettingState().getLdrawFolderPath()", "org.nschmidt.ldparteditor.workbench.WorkbenchManager.getUserSettingState()", "org.nschmidt.ldparteditor.workbench.WorkbenchManager.getUserSettingState()", "java.io.File.exists()", "org.nschmidt.ldparteditor.workbench.WorkbenchManager.getUserSettingState().getLdrawFolderPath()", "java.io.File.exists()", "java.io.File.exists()", "org.nschmidt.ldparteditor.workbench.WorkbenchManager.getUserSettingState()"], "Fixed commit": "ddefb1a043e982a44d2ee5047843525ff4b3f69c", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2017-06-13T18:10:31Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { host.abort(transaction.id); } catch (java.lang.Exception e) { java.lang.System.out.println(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5528/buggy-version/rmi.servercode.TransImpl.CrashDetection.java", "BodyUseAPI": ["TransImpl.TransactionManager.abort(transaction.id)"], "Fixed commit": "18c1e30a65c31e35e4bfcdd1b8a655cb9f726e06", "Url": "https://api.github.com/repos/AlexMapley/512", "Date": "2017-11-11T02:20:55Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { startActivity(new android.content.Intent(this, com.example.badge.androidapplication.LoginActivity.class)); } catch (java.lang.Exception e) { android.util.Log.d(\"Main Activity TRANSFER\", e.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/398/buggy-version/app.src.main.java.com.example.badge.androidapplication.MainActivity.java", "BodyUseAPI": ["com.example.badge.androidapplication.MainActivity.startActivity(android.content.Intent)"], "Fixed commit": "8fa7312a170a1d5cc0a775ea2373970e36f1504b", "Url": "https://api.github.com/repos/badger-orson/AndroidApplication", "Date": "2017-11-28T03:21:44Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { price = ((double) (object.get(\"price\"))); } catch (java.lang.Exception e2) { java.lang.Integer price2 = ((java.lang.Integer) (object.get(\"price\"))); price = price2.intValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/644/buggy-version/app.src.main.java.edu.washington.beerswains.beerwench.BeerMapActivity.java", "BodyUseAPI": ["com.parse.ParseObject.get(java.lang.String)"], "Fixed commit": "220ad4b01aac841ea23ba1ce83087c09142ebfa5", "Url": "https://api.github.com/repos/Jordan-Numbers/beerwench", "Date": "2015-06-10T00:22:44Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { item.getDefaultPrice().getPrice(); } catch (org.hibernate.LazyInitializationException e) { item = org.openmrs.api.context.Context.getService(org.openmrs.module.openhmis.inventory.api.IItemDataService.class).getById(item.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3165/buggy-version/api.src.main.java.org.openmrs.module.openhmis.billableobjects.api.model.EncounterHandler.java", "BodyUseAPI": ["org.openmrs.module.openhmis.inventory.api.model.Item.getDefaultPrice()", "item.getDefaultPrice().getPrice()"], "Fixed commit": "8f5cb27d57492c521eedd0a9f4461e5e52d4148c", "Url": "https://api.github.com/repos/icchange/openmrs-module-openhmis.billableobjects", "Date": "2013-12-12T00:02:42Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { player.play(); } catch (javax.sound.midi.MidiUnavailableException e) { e.printStackTrace(); throw new java.lang.RuntimeException(\"Bad Midi\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/9085/buggy-version/src.music.midi.SequencePlayer.java", "BodyUseAPI": ["music.midi.SequencePlayer.play()"], "Fixed commit": "44b8da64c29567d1c7daaa01dc9dedbe79deaa1c", "Url": "https://api.github.com/repos/mit6005/S14-R16-12noon-black", "Date": "2014-05-01T16:26:50Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { player = new music.midi.SequencePlayer(120, 2); } catch (javax.sound.midi.MidiUnavailableException | javax.sound.midi.InvalidMidiDataException e) { e.printStackTrace(); throw new java.lang.RuntimeException(\"Bad Midi\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/9085/buggy-version/src.music.midi.SequencePlayer.java", "BodyUseAPI": [], "Fixed commit": "44b8da64c29567d1c7daaa01dc9dedbe79deaa1c", "Url": "https://api.github.com/repos/mit6005/S14-R16-12noon-black", "Date": "2014-05-01T16:26:50Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { _result = unpacker.readString(); } catch (org.msgpack.MessageTypeException e) { _result = unpacker.readByteArray(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/310/buggy-version/NHBCommonCore.src.main.java.com.nhb.common.data.msgpkg.GenericTypeTemplate.java", "BodyUseAPI": ["org.msgpack.unpacker.Unpacker.readString()"], "Fixed commit": "08c9eb2d1abdb06bbe47c38a89c7ef7cf750b2df", "Url": "https://api.github.com/repos/bachden/nhb-common", "Date": "2017-05-23T13:20:11Z"},
{"Line": "=>562", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { transactionCategory = cursor.getString(cursor.getColumnIndex(\"CateName\")); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1645/buggy-version/src.com.databases.example.Transactions.java", "BodyUseAPI": ["android.database.Cursor.getString(cursor.getColumnIndex(\"CateName\"))", "android.database.Cursor.getColumnIndex(java.lang.String)"], "Fixed commit": "157104fa803a7a73cb3e5846212bfc02c0e39b65", "Url": "https://api.github.com/repos/welshk91/FinanceApp", "Date": "2013-02-05T19:39:27Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { songSize = java.lang.Integer.parseInt(new dao.UserDao().getMusicsSize(user)); } catch (java.lang.Exception e) { java.lang.System.out.println(e.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/784/buggy-version/src.main.java.servlet.EditMusicServlet.java", "BodyUseAPI": ["dao.UserDao.getMusicsSize(entity.User)", "java.lang.Integer.parseInt(new dao.UserDao().getMusicsSize(user))"], "Fixed commit": "a9711b49c09439e73316b015f7650dec5c68745c", "Url": "https://api.github.com/repos/LazyMisha/social-network", "Date": "2017-06-20T13:17:22Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mCursor = \"\" + (format.parse(dateTime).getTime()); } catch (java.text.ParseException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3681/buggy-version/app.src.main.java.com.bihe0832.readhub.module.readhub.news.NewsFragment.java", "BodyUseAPI": ["java.text.SimpleDateFormat.parse(java.lang.String)", "java.util.Date.getTime()"], "Fixed commit": "6983b24d37ec3edc02849165af750443478728e7", "Url": "https://api.github.com/repos/erichua23/readhub-android", "Date": "2017-05-17T00:37:26Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { troop = tDao.get(troopId); } catch (storage.DAOException e) { throw new frontend.GamePlayException(\"ERROR: Read Troop\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8914/buggy-version/src.frontend.GamePlay.java", "BodyUseAPI": ["dao.TroopDAO.get(long)"], "Fixed commit": "cff7361dbdcd7f956e6c52f34d1742112cf11451", "Url": "https://api.github.com/repos/tobiasg28/Uni-Zeugs-TSD", "Date": "2011-06-11T11:52:15Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { p = pDao.get(participationId); } catch (storage.DAOException e) { throw new frontend.GamePlayException(\"ERROR: Read Participation\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8914/buggy-version/src.frontend.GamePlay.java", "BodyUseAPI": ["dao.ParticipationDAO.get(long)"], "Fixed commit": "cff7361dbdcd7f956e6c52f34d1742112cf11451", "Url": "https://api.github.com/repos/tobiasg28/Uni-Zeugs-TSD", "Date": "2011-06-11T11:52:15Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { p = pDao.get(participationId); } catch (storage.DAOException e) { throw new frontend.GamePlayException(\"ERROR: Read Participation\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8914/buggy-version/src.frontend.GamePlay.java", "BodyUseAPI": ["dao.ParticipationDAO.get(long)"], "Fixed commit": "cff7361dbdcd7f956e6c52f34d1742112cf11451", "Url": "https://api.github.com/repos/tobiasg28/Uni-Zeugs-TSD", "Date": "2011-06-11T11:52:15Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { build = bDao.get(buildingId); } catch (storage.DAOException e) { throw new frontend.GamePlayException(\"ERROR: Read Building\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8914/buggy-version/src.frontend.GamePlay.java", "BodyUseAPI": ["dao.BuildingDAO.get(long)"], "Fixed commit": "cff7361dbdcd7f956e6c52f34d1742112cf11451", "Url": "https://api.github.com/repos/tobiasg28/Uni-Zeugs-TSD", "Date": "2011-06-11T11:52:15Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (frontend.Acceptance.enoughResource(need, participationId)) { for (entities.ResourceAmount ra : p.getResources()) { if (ra.getResource().equals(troop.getUpgradeLevel().getUpgradeCost().getResource())) { ra.setAmount(((ra.getAmount()) - (troop.getUpgradeLevel().getUpgradeCost().getAmount()))); } } troop.setLevelUpgradeFinish(frontend.GamePlay.getGameStep()); try { tDao.update(troop); pDao.update(p); } catch (storage.DAOException e) { throw new frontend.GamePlayException(\"ERROR: Update DataBase\", e); } return; } } catch (frontend.AcceptanceException e) { throw new frontend.GamePlayException(\"ERROR: Not enough Resources\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8914/buggy-version/src.frontend.GamePlay.java", "BodyUseAPI": ["entities.Troop.setLevelUpgradeFinish(entities.GameStep)", "entities.ResourceAmount.getResource()", "dao.TroopDAO.update(entities.Troop)", "entities.ResourceAmount.setAmount(((ra.getAmount()) - (troop.getUpgradeLevel().getUpgradeCost().getAmount())))", "entities.Troop.getUpgradeLevel()", "troop.getUpgradeLevel().getUpgradeCost().getAmount()", "frontend.GamePlay.getGameStep()", "troop.getUpgradeLevel().getUpgradeCost()", "ra.getResource().equals(troop.getUpgradeLevel().getUpgradeCost().getResource())", "dao.ParticipationDAO.update(entities.Participation)", "troop.getUpgradeLevel().getUpgradeCost().getResource()", "frontend.Acceptance.enoughResource(java.util.List<entities.ResourceAmount>,long)", "entities.ResourceAmount.getAmount()", "entities.Troop.getUpgradeLevel()", "entities.Participation.getResources()", "troop.getUpgradeLevel().getUpgradeCost()"], "Fixed commit": "cff7361dbdcd7f956e6c52f34d1742112cf11451", "Url": "https://api.github.com/repos/tobiasg28/Uni-Zeugs-TSD", "Date": "2011-06-11T11:52:15Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (frontend.Acceptance.enoughResource(need, participationId)) { for (entities.ResourceAmount ra : p.getResources()) { if (ra.getResource().equals(build.getType().getUpgradeCost().getResource())) { ra.setAmount(((ra.getAmount()) - (build.getType().getUpgradeCost().getAmount()))); } } build.setLevelUpgradeFinish(frontend.GamePlay.getGameStep()); try { bDao.update(build); pDao.update(p); } catch (storage.DAOException e) { throw new frontend.GamePlayException(\"ERROR: Update DataBase\", e); } return; } } catch (frontend.AcceptanceException e) { throw new frontend.GamePlayException(\"ERROR: Not enough Resources\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8914/buggy-version/src.frontend.GamePlay.java", "BodyUseAPI": ["build.getType().getUpgradeCost().getResource()", "frontend.Acceptance.enoughResource(java.util.List<entities.ResourceAmount>,long)", "entities.ResourceAmount.getResource()", "entities.ResourceAmount.setAmount(((ra.getAmount()) - (build.getType().getUpgradeCost().getAmount())))", "ra.getResource().equals(build.getType().getUpgradeCost().getResource())", "entities.ResourceAmount.getAmount()", "build.getType().getUpgradeCost()", "build.getType().getUpgradeCost()", "entities.Building.getType()", "dao.ParticipationDAO.update(entities.Participation)", "build.getType().getUpgradeCost().getAmount()", "frontend.GamePlay.getGameStep()", "entities.Participation.getResources()", "entities.Building.getType()", "entities.Building.setLevelUpgradeFinish(entities.GameStep)", "dao.BuildingDAO.update(entities.Building)"], "Fixed commit": "cff7361dbdcd7f956e6c52f34d1742112cf11451", "Url": "https://api.github.com/repos/tobiasg28/Uni-Zeugs-TSD", "Date": "2011-06-11T11:52:15Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { httpRequest = new org.elasticsearch.http.netty4.Netty4HttpRequest(serverTransport.xContentRegistry, copy, ctx.channel()); } catch (java.lang.Exception ex) { request.release(); throw ex; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6832/buggy-version/modules.transport-netty4.src.main.java.org.elasticsearch.http.netty4.Netty4HttpRequestHandler.java", "BodyUseAPI": ["io.netty.channel.ChannelHandlerContext.channel()"], "Fixed commit": "beaad129f598949a6d627bf054832aeda29e5afc", "Url": "https://api.github.com/repos/original-brownbear/elasticsearch", "Date": "2017-11-01T19:01:23Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(150); } catch (java.lang.InterruptedException ex) { java.util.logging.Logger.getLogger(frc.team5163.vis.VisionHW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3663/buggy-version/src.frc.team5163.vis.VisionDisabled.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "7a0d00d1238ff5a03979296a5efe5ba8889d7179", "Url": "https://api.github.com/repos/wave100/FRCVisionDashboard", "Date": "2016-02-19T05:10:35Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { rosa.website.core.server.RosaSearchServiceImpl.log.info(\"Performing search on the server.\"); rosa.search.model.SearchResult result = searchService.search(query, options); rosa.website.core.server.RosaSearchServiceImpl.log.info((((\"Result found: Total= \" + (result.getTotal())) + \", offset= \") + (result.getOffset()))); return result; } catch (java.lang.Exception e) { rosa.website.core.server.RosaSearchServiceImpl.log.log(java.util.logging.Level.SEVERE, \"Error performing search.\", e); return new rosa.search.model.SearchResult(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8628/buggy-version/rosa-website.rosa-website-core.src.main.java.rosa.website.core.server.RosaSearchServiceImpl.java", "BodyUseAPI": ["java.util.logging.Logger.info((((\"Result found: Total= \" + (result.getTotal())) + \", offset= \") + (result.getOffset())))", "rosa.search.model.SearchResult.getOffset()", "rosa.search.core.SearchService.search(rosa.search.model.Query,rosa.search.model.SearchOptions)", "java.util.logging.Logger.info(java.lang.String)", "rosa.search.model.SearchResult.getTotal()"], "Fixed commit": "785d1e4fb50a7f6f2cd1db1a4ed4271a71a17d8c", "Url": "https://api.github.com/repos/jhu-digital-manuscripts/rosa2", "Date": "2015-09-03T18:18:31Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { date = java.util.Date.from(dc.getDateTime().atZone(java.time.ZoneId.systemDefault()).toInstant()); customDate = true; return \"redirect:/\"; } catch (java.lang.NullPointerException e) { return \"redirect:/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3752/buggy-version/src.main.java.csce4444.SwolePatrol.java", "BodyUseAPI": ["dc.getDateTime().atZone(java.time.ZoneId.systemDefault()).toInstant()", "dc.getDateTime().atZone(java.time.ZoneId)", "java.time.ZoneId.systemDefault()", "java.util.Date.from(dc.getDateTime().atZone(java.time.ZoneId.systemDefault()).toInstant())", "csce4444.DateContainer.getDateTime()"], "Fixed commit": "f5f22ca7c6da1aba693b039e64837ef5e3f23b0b", "Url": "https://api.github.com/repos/jacobhanson1010/csce4444", "Date": "2017-12-05T01:08:40Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mCurrentSongIndex = mDataSource.findSongIndexById(preferences.getLong(SongItem.SONG_ID, getCurrentPlayingSong().getId())); } catch (java.lang.NullPointerException e) { e.printStackTrace(); mCurrentSongIndex = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3360/buggy-version/app.src.main.java.net.classicgarage.truerandommusicplayer.service.MusicService.java", "BodyUseAPI": ["net.classicgarage.truerandommusicplayer.db.SongDataSource.findSongIndexById(preferences.getLong(SongItem.SONG_ID, getCurrentPlayingSong().getId()))", "android.content.SharedPreferences.getLong(SongItem.SONG_ID,getCurrentPlayingSong().getId())", "net.classicgarage.truerandommusicplayer.service.MusicService.getCurrentPlayingSong()", "net.classicgarage.truerandommusicplayer.model.SongItem.getId()"], "Fixed commit": "d0cc6bf92ef4fc3cfe18d831507e5bb9238821a1", "Url": "https://api.github.com/repos/Leighton070103/TrueRandomMusicPlayer", "Date": "2017-06-21T04:48:35Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.google.android.gms.location.LocationClient lc = getLocationClient(); com.google.android.gms.location.LocationRequest lr = getLocationRequest(); android.location.Location location = mLocationClient.getLastLocation(); if (location != null) { setAddress(location); } if ((((lc != null) && (lc.isConnected())) && (lc != null)) && (lr != null)) { lc.requestLocationUpdates(lr, this); } } catch (java.lang.IllegalStateException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5544/buggy-version/app.src.main.java.widget.map.com.urlocationmapwidget.BaseService.java", "BodyUseAPI": ["widget.map.com.urlocationmapwidget.BaseService.getLocationRequest()", "com.google.android.gms.location.LocationClient.requestLocationUpdates(com.google.android.gms.location.LocationRequest,widget.map.com.urlocationmapwidget.BaseService)", "com.google.android.gms.location.LocationClient.isConnected()", "widget.map.com.urlocationmapwidget.BaseService.getLocationClient()", "com.google.android.gms.location.LocationClient.getLastLocation()", "widget.map.com.urlocationmapwidget.BaseService.setAddress(android.location.Location)"], "Fixed commit": "8d00a463be59a543d5794007e84a9e7b8423f133", "Url": "https://api.github.com/repos/XinyueZ/urlocationmapwidget", "Date": "2014-11-19T08:26:42Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { net.sf.json.JSON jsonResponse = net.sf.json.JSONSerializer.toJSON(response, new net.sf.json.JsonConfig()); if (jsonResponse instanceof net.sf.json.JSONObject) { net.sf.json.JSONObject object = ((net.sf.json.JSONObject) (jsonResponse)); net.sf.json.JSONObject errorObj = object.getJSONObject(\"error\"); if (errorObj.containsKey(\"message\")) { return errorObj.getString(\"message\"); } } } catch (net.sf.json.JSONException ex) { log.debug((\"Cannot parse JSON error response: \" + response)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2153/buggy-version/sense-uploader.src.main.java.com.blazemeter.api.http.BlazeMeterHttpUtils.java", "BodyUseAPI": ["net.sf.json.JSONSerializer.toJSON(java.lang.String,net.sf.json.JsonConfig)", "net.sf.json.JSONObject.getJSONObject(java.lang.String)", "net.sf.json.JSONObject.containsKey(java.lang.String)", "net.sf.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "fc9bee01aa56d24b49c7c55799e9be3d549fe3ec", "Url": "https://api.github.com/repos/artem-fedorov/jmeter-bzm-plugins", "Date": "2017-07-06T12:23:58Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return sdeRdr.read(shape); } catch (java.lang.IllegalArgumentException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/714/buggy-version/modules.db.sde.src.main.java.jeql.command.db.sde.SdeRowMapper.java", "BodyUseAPI": ["com.vividsolutions.jts.io.sde.SdeReader.read(com.esri.sde.sdk.client.SeShape)"], "Fixed commit": "b9cefc7a81ba9b32092d48a15d27675c495e7e24", "Url": "https://api.github.com/repos/dr-jts/jeql", "Date": "2015-03-30T18:54:15Z"},
{"Line": "=>617", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { javax.swing.ImageIcon Image = new javax.swing.ImageIcon(bufImg); imageLabel.setIcon(Image); imageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3709/buggy-version/src.SmithStuff.SmithFrame.java", "BodyUseAPI": ["javax.swing.JLabel.setIcon(javax.swing.ImageIcon)", "javax.swing.JLabel.setHorizontalAlignment(int)"], "Fixed commit": "ec36dee6f84772b20f728fa0e84d282887064c22", "Url": "https://api.github.com/repos/Endeavour-ICT-Systems/SMITH", "Date": "2017-08-09T02:38:27Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { setCurrentWeapon(this.weaponbelt.get(slot)); } catch (java.lang.IndexOutOfBoundsException e) { java.lang.System.err.println(\"Couldn't find a weapon for that slot!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2112/buggy-version/src.model.character.Player.java", "BodyUseAPI": ["model.character.Player.setCurrentWeapon(this.weaponbelt.get(slot))", "java.util.List<model.character.AbstractWeapon>.get(int)"], "Fixed commit": "87d1de72768b61d03a82797e3652df5007f77413", "Url": "https://api.github.com/repos/johanbrook/medioqre", "Date": "2012-05-07T09:26:38Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { net.minecraft.world.World world = cpw.mods.fml.client.FMLClientHandler.instance().getClient().theWorld; net.minecraft.block.Block block = world.getBlock(igwmod.TickHandler.xHovered, igwmod.TickHandler.yHovered, igwmod.TickHandler.zHovered); if (block != null) { net.minecraft.item.ItemStack idPicked = block.getPickBlock(cpw.mods.fml.client.FMLClientHandler.instance().getClient().objectMouseOver, world, igwmod.TickHandler.xHovered, igwmod.TickHandler.yHovered, igwmod.TickHandler.zHovered); return (idPicked != null ? idPicked : new net.minecraft.item.ItemStack(block, 1, world.getBlockMetadata(igwmod.TickHandler.xHovered, igwmod.TickHandler.yHovered, igwmod.TickHandler.zHovered))).getDisplayName(); } } catch (java.lang.Throwable e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7352/buggy-version/src.igwmod.TickHandler.java", "BodyUseAPI": ["cpw.mods.fml.client.FMLClientHandler.instance().getClient()", "net.minecraft.world.World.getBlockMetadata(int,int,int)", "(idPicked != null ? idPicked : new net.minecraft.item.ItemStack(block, 1, world.getBlockMetadata(igwmod.TickHandler.xHovered, igwmod.TickHandler.yHovered, igwmod.TickHandler.zHovered))).getDisplayName()", "net.minecraft.world.World.getBlock(int,int,int)", "net.minecraft.block.Block.getPickBlock(cpw.mods.fml.client.FMLClientHandler.instance().getClient().objectMouseOver,net.minecraft.world.World,int,int,int)", "cpw.mods.fml.client.FMLClientHandler.instance().getClient()", "cpw.mods.fml.client.FMLClientHandler.instance()", "cpw.mods.fml.client.FMLClientHandler.instance()"], "Fixed commit": "c141fa974d23af46b487b4787e39677b87cc4f0e", "Url": "https://api.github.com/repos/MineMaarten/IGW-mod", "Date": "2014-10-01T08:00:45Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { searchLocation(java.lang.Integer.parseInt(currentUserId), searchTxt.getText().toString(), getApplicationContext()); } catch (java.lang.Exception e) { android.widget.Toast.makeText(getApplicationContext(), \"Error, invalid location.\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6470/buggy-version/app.src.main.java.com.example.hendriebeats.remindme.TaskListActivity.java", "BodyUseAPI": ["com.example.hendriebeats.remindme.TaskListActivity.3.getApplicationContext()", "searchTxt.getText().toString()", "com.example.hendriebeats.remindme.TaskListActivity.3.searchLocation(int,searchTxt.getText().toString(),getApplicationContext())", "java.lang.Integer.parseInt(java.lang.String)", "android.widget.EditText.getText()"], "Fixed commit": "f58ef8b5ddb5d3fbe8ab34ec7368eaad93fd12de", "Url": "https://api.github.com/repos/hendriebeats/RemindMe", "Date": "2017-05-04T14:24:36Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { dockId = Main.NonGUIMain.dbm.getDockByVolumeType(Main.NonGUIMain.dbm.getShipVol1(sName, SID)); } catch (java.lang.NullPointerException e) { java.lang.System.out.println(\"The ship doesn't exist in the database. Please add ship or try again!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3854/buggy-version/src.Main.NonGUIMain.java", "BodyUseAPI": ["Main.DBMethods.getShipVol1(java.lang.String,int)", "Main.DBMethods.getDockByVolumeType(Main.NonGUIMain.dbm.getShipVol1(sName, SID))"], "Fixed commit": "97d246867838b0615bb5609b2843c3f3e78b0ac3", "Url": "https://api.github.com/repos/Myran1972/NonGUI", "Date": "2016-05-03T10:25:44Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { java.util.List<org.romaframework.core.flow.ContextLifecycleListener> contextListener = org.romaframework.core.flow.Controller.getInstance().getListeners(org.romaframework.core.flow.ContextLifecycleListener.class); for (org.romaframework.core.flow.ContextLifecycleListener listener : contextListener) { listener.onContextDestroy(); } } finally { org.romaframework.core.flow.ObjectContext.getInstance().setContextComponent(org.romaframework.core.RomaContext.CTX_CREATED, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4407/buggy-version/src.org.romaframework.core.RomaContext.java", "BodyUseAPI": ["org.romaframework.core.flow.Controller.getInstance().getListeners(java.lang.Class)", "org.romaframework.core.flow.ContextLifecycleListener.onContextDestroy()", "org.romaframework.core.flow.Controller.getInstance()"], "Fixed commit": "de06eedac824bb409603e054cbfe8a6b221b69c6", "Url": "https://api.github.com/repos/romaframework/core", "Date": "2015-07-29T10:41:24Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String roomName = dataSnapshot.getKey(); java.lang.String latestQuestionId = dataSnapshot.child(\"recentQuestion\").getValue().toString(); java.lang.String latestQuestion = dataSnapshot.child(\"questions\").child(latestQuestionId).child(\"head\").getValue().toString(); java.lang.String activeTime = dataSnapshot.child(\"questions\").child(latestQuestionId).child(\"timestamp\").getValue().toString(); chatrooms.add(0, new hk.ust.cse.hunkim.questionroom.chatroom.ChatRoom(roomName, latestQuestion, java.lang.Long.parseLong(activeTime))); notifyDataSetChanged(); } catch (java.lang.NullPointerException npe) { npe.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6453/buggy-version/app.src.main.java.hk.ust.cse.hunkim.questionroom.chatroom.ChatRoomListAdapter.java", "BodyUseAPI": ["dataSnapshot.child(\"questions\").child(latestQuestionId).child(java.lang.String)", "dataSnapshot.child(\"questions\").child(latestQuestionId).child(java.lang.String)", "dataSnapshot.child(\"questions\").child(java.lang.String)", "com.firebase.client.DataSnapshot.child(java.lang.String)", "dataSnapshot.child(\"recentQuestion\").getValue().toString()", "dataSnapshot.child(\"questions\").child(java.lang.String)", "dataSnapshot.child(\"questions\").child(latestQuestionId).child(\"timestamp\").getValue()", "dataSnapshot.child(\"questions\").child(latestQuestionId).child(\"head\").getValue().toString()", "com.firebase.client.DataSnapshot.child(java.lang.String)", "com.firebase.client.DataSnapshot.getKey()", "dataSnapshot.child(\"recentQuestion\").getValue()", "java.util.List<hk.ust.cse.hunkim.questionroom.chatroom.ChatRoom>.add(int,hk.ust.cse.hunkim.questionroom.chatroom.ChatRoom)", "1.notifyDataSetChanged()", "java.lang.Long.parseLong(java.lang.String)", "com.firebase.client.DataSnapshot.child(java.lang.String)", "dataSnapshot.child(\"questions\").child(latestQuestionId).child(\"head\").getValue()", "dataSnapshot.child(\"questions\").child(latestQuestionId).child(\"timestamp\").getValue().toString()"], "Fixed commit": "00e6b7a268c8b8846c246bf80ae90323a590972e", "Url": "https://api.github.com/repos/wcc831/comp3111", "Date": "2015-10-26T05:46:23Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (com.liferay.portal.kernel.notifications.UserNotificationManagerUtil.isDeliver(user.getUserId(), portletId, _notificationClassNameId, _notificationType, UserNotificationDeliveryConstants.TYPE_EMAIL)) { javax.mail.internet.InternetAddress to = new javax.mail.internet.InternetAddress(user.getEmailAddress(), user.getFullName()); sendEmail(to, user.getLocale()); } } catch (java.lang.Exception e) { com.liferay.portal.util.SubscriptionSender._log.error(e, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1013/buggy-version/portal-service.src.com.liferay.portal.util.SubscriptionSender.java", "BodyUseAPI": ["com.liferay.portal.kernel.notifications.UserNotificationManagerUtil.isDeliver(user.getUserId(),java.lang.String,long,int,UserNotificationDeliveryConstants.TYPE_EMAIL)", "com.liferay.portal.model.User.getEmailAddress()", "com.liferay.portal.util.SubscriptionSender.sendEmail(javax.mail.internet.InternetAddress,user.getLocale())", "com.liferay.portal.model.User.getLocale()", "com.liferay.portal.model.User.getUserId()", "com.liferay.portal.model.User.getFullName()"], "Fixed commit": "abe6c2cd7c978d3266ce134d39f106514c9e7fcd", "Url": "https://api.github.com/repos/robertoDiaz/liferay-portal", "Date": "2014-02-19T08:04:36Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { num = java.lang.Integer.parseInt(message); } catch (java.lang.NumberFormatException e) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5364/buggy-version/MyFirstApp.src.com.example.myfirstapp.MainActivity.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "b8b22c4311c12e6b14156cece821f86a758da0de", "Url": "https://api.github.com/repos/zzhan133/AndroidProject", "Date": "2014-10-24T03:42:17Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { weightChanges = getWeightStatistics(); monthlyChanges = getMonthStatistics(); refreshHandler.sendEmptyMessage(0); } catch (java.lang.Exception e) { android.util.Log.e(getTag(), \"Error refeshing data\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5935/buggy-version/src.com.weighttracker.StatisticsFragment.java", "BodyUseAPI": ["com.weighttracker.StatisticsFragment.2.getMonthStatistics()", "com.weighttracker.StatisticsFragment.2.getWeightStatistics()", "android.os.Handler.sendEmptyMessage(int)"], "Fixed commit": "924eff0a0c125d783bef4972a23923c1aaf1a22f", "Url": "https://api.github.com/repos/wshuman3/weighttracker", "Date": "2014-02-19T13:37:29Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.System.out.println(fi.dy.esav.GameEngine.Utils.getXDistanceCenters(this, node)); } catch (java.lang.NullPointerException e) { java.lang.System.out.println(\"no node\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2183/buggy-version/src.main.java.fi.dy.esav.JavaGame.EnemyEntity.java", "BodyUseAPI": ["java.io.PrintStream.println(fi.dy.esav.GameEngine.Utils.getXDistanceCenters(this, node))", "fi.dy.esav.GameEngine.Utils.getXDistanceCenters(fi.dy.esav.JavaGame.EnemyEntity,fi.dy.esav.JavaGame.JumpAiNode)"], "Fixed commit": "5e645bc827a9cdae6d021e79c4b3839b8d8652fb", "Url": "https://api.github.com/repos/varesa/JavaGame", "Date": "2013-01-24T09:08:41Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { security.AppSettings.props.load(security.AppSettings.in); } catch (java.io.IOException e) { security.AppSettings.log.severe(java.util.Arrays.toString(e.getStackTrace())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6728/buggy-version/src.security.AppSettings.java", "BodyUseAPI": ["java.util.Properties.load(java.io.FileInputStream)"], "Fixed commit": "4adbcb5be181a09f50cab1d0388cd9276bc26f75", "Url": "https://api.github.com/repos/nicholasrusso/TeamPlay", "Date": "2016-05-24T05:05:00Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { programs = sage.epg.sd.SDRipper.ensureSession().getPrograms(lookupShows); } catch (java.lang.Exception e) { if (sage.Sage.DBG) java.lang.System.out.println((\"SDEPG Unable to perform bulk lookup: \" + (e.toString()))); java.util.ArrayList<sage.epg.sd.json.programs.SDProgram> newPrograms = new java.util.ArrayList<>(lookupShows.size()); for (java.lang.String lookupShow : lookupShows) { try { programs = sage.epg.sd.SDRipper.ensureSession().getPrograms(java.util.Collections.singleton(lookupShow)); if ((programs[0].getCode()) == 0) newPrograms.add(programs[0]); } catch (java.lang.Exception e1) { } } programs = newPrograms.toArray(new sage.epg.sd.json.programs.SDProgram[newPrograms.size()]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/207/buggy-version/java.sage.epg.sd.SDRecommended.java", "BodyUseAPI": ["sage.epg.sd.SDRipper.ensureSession().getPrograms(java.util.Set<java.lang.String>)", "sage.epg.sd.SDRipper.ensureSession()"], "Fixed commit": "308364d042d1110f004e131cff129094c121e49b", "Url": "https://api.github.com/repos/enternoescape/sagetv", "Date": "2017-05-06T03:51:39Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.json.JSONArray tags = new org.json.JSONArray(tagsTextView.getText().toString()); newTask.setTags(tags); } catch (java.lang.Exception e) { android.util.Log.d(\"CreateTest Error: \", e.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4419/buggy-version/app.src.main.java.com.doctorandonuts.taskchampion.TaskListActivity.java", "BodyUseAPI": ["com.doctorandonuts.taskchampion.task.Task.setTags(org.json.JSONArray)", "android.widget.TextView.getText()", "tagsTextView.getText().toString()"], "Fixed commit": "fce1288e649568404b0322f028a6754ab1f7dec4", "Url": "https://api.github.com/repos/Doctor-Andonuts/TaskChampion", "Date": "2015-10-02T17:20:39Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.getState(GameState.PLAY.getID()).init(gc, this); this.enterState(GameState.PLAY.getID()); } catch (org.newdawn.slick.SlickException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/286/buggy-version/src.Game.java", "BodyUseAPI": ["this.getState(GameState.PLAY.getID()).init(org.newdawn.slick.GameContainer,Game)", "GameState.PLAY.getID()", "Game.getState(GameState.PLAY.getID())", "Game.enterState(GameState.PLAY.getID())", "GameState.PLAY.getID()"], "Fixed commit": "d234608f46ac3730b6b80d3a7ad851795e36ab5c", "Url": "https://api.github.com/repos/muhsinali/rice-rocks", "Date": "2015-07-03T22:56:47Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { switch (operator) { case org.apache.freemarker.core.ASTExpArithmetic.TYPE_SUBSTRACTION : return new org.apache.freemarker.core.model.impl.SimpleNumber(ae.subtract(lhoNumber, rhoNumber)); case org.apache.freemarker.core.ASTExpArithmetic.TYPE_MULTIPLICATION : return new org.apache.freemarker.core.model.impl.SimpleNumber(ae.multiply(lhoNumber, rhoNumber)); case org.apache.freemarker.core.ASTExpArithmetic.TYPE_DIVISION : return new org.apache.freemarker.core.model.impl.SimpleNumber(ae.divide(lhoNumber, rhoNumber)); case org.apache.freemarker.core.ASTExpArithmetic.TYPE_MODULO : return new org.apache.freemarker.core.model.impl.SimpleNumber(ae.modulus(lhoNumber, rhoNumber)); default : if (parent instanceof org.apache.freemarker.core.ASTExpression) { throw new org.apache.freemarker.core.TemplateException(((org.apache.freemarker.core.ASTExpression) (parent)), \"Unknown operation: \", java.lang.Integer.valueOf(operator)); }else { throw new org.apache.freemarker.core.TemplateException(\"Unknown operation: \", java.lang.Integer.valueOf(operator)); } } } catch (java.lang.ArithmeticException e) { throw new org.apache.freemarker.core.TemplateException(e, env, \"Arithmetic operation failed\", ((e.getMessage()) != null ? new java.lang.String[]{ \": \", e.getMessage() } : \" (see cause exception)\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4615/buggy-version/freemarker-core.src.main.java.org.apache.freemarker.core.ASTExpArithmetic.java", "BodyUseAPI": ["java.lang.Integer.valueOf(int)", "org.apache.freemarker.core.arithmetic.ArithmeticEngine.modulus(java.lang.Number,java.lang.Number)", "org.apache.freemarker.core.arithmetic.ArithmeticEngine.divide(java.lang.Number,java.lang.Number)", "org.apache.freemarker.core.arithmetic.ArithmeticEngine.subtract(java.lang.Number,java.lang.Number)", "org.apache.freemarker.core.arithmetic.ArithmeticEngine.multiply(java.lang.Number,java.lang.Number)", "java.lang.Integer.valueOf(int)"], "Fixed commit": "12a2d49d0edcb10c63b81c5ec68dba639dc86633", "Url": "https://api.github.com/repos/woonsan/incubator-freemarker", "Date": "2017-09-18T20:50:30Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { port = ((args.length) == 1) ? java.lang.Integer.parseInt(args[0]) : 8000; } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6163/buggy-version/src.controller.Main.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "8661b675570a03a1aa3b22bdcac4e646ea5ecb0b", "Url": "https://api.github.com/repos/hold12/CDIO_del2_simulator", "Date": "2017-03-17T19:49:05Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { content = out.toString(\"UTF-8\"); } catch (java.io.UnsupportedEncodingException ignore) { content = out.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7658/buggy-version/src.net.egork.chelper.util.FileUtils.java", "BodyUseAPI": ["java.io.ByteArrayOutputStream.toString(java.lang.String)"], "Fixed commit": "db000ddbbc39450c61a6e4a17fbd7673841845a9", "Url": "https://api.github.com/repos/scruel/idea-chelper", "Date": "2017-12-03T08:20:16Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { oldAST = editorState.getParseController().getParser().parse(text, editorState.getResource().getName()); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6958/buggy-version/org.spoofax.modelware.gmf.src.org.spoofax.modelware.gmf.ModelChangeListener.java", "BodyUseAPI": ["org.strategoxt.imp.runtime.EditorState.getParseController()", "editorState.getResource().getName()", "editorState.getParseController().getParser()", "org.strategoxt.imp.runtime.EditorState.getResource()", "editorState.getParseController().getParser().parse(java.lang.String,editorState.getResource().getName())"], "Fixed commit": "c1e53f9169d373b31f3e7dea6c96fe75eea27870", "Url": "https://api.github.com/repos/metaborg/spoofax-modelware", "Date": "2013-09-25T23:14:51Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { transaction.commit(); } finally { transaction = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1244/buggy-version/persistence-refs.src.main.java.de.jpaw.bonaparte.jpa.refs.PersistenceProviderJPARLImpl.java", "BodyUseAPI": ["javax.persistence.EntityTransaction.commit()"], "Fixed commit": "3523b84853ff04f9508c3b2b7ff01f3ad10b40a1", "Url": "https://api.github.com/repos/jpaw/persistence-java", "Date": "2016-04-09T20:47:40Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { isRunning = heartbeatService.isAlive(); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4375/buggy-version/frontend.src.main.java.cz.cuni.mff.xrg.odcs.frontend.AppEntry.java", "BodyUseAPI": ["cz.cuni.mff.xrg.odcs.commons.app.communication.HeartbeatService.isAlive()"], "Fixed commit": "cbfbaf1016f141a6812ef3841a24271a5064c912", "Url": "https://api.github.com/repos/UnifiedViews/Core", "Date": "2014-03-11T10:11:18Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { context.getBean(org.entrementes.quiron.sample.crud.BusAdapter.class).contextInitialized(); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/107/buggy-version/sample-crud-application.src.main.java.org.entrementes.quiron.sample.crud.CrudApplication.java", "BodyUseAPI": ["context.getBean(org.entrementes.quiron.sample.crud.BusAdapter.class).contextInitialized()", "org.springframework.context.ConfigurableApplicationContext.getBean(java.lang.Class)"], "Fixed commit": "a526b392afebf0f139280df3879f0260804cd6d1", "Url": "https://api.github.com/repos/Entrementes/quiron", "Date": "2015-05-14T23:23:42Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { db_mbtiles = android.database.sqlite.SQLiteDatabase.openOrCreateDatabase(file_mbtiles, null); } catch (java.lang.Exception e) { db_mbtiles = android.database.sqlite.SQLiteDatabase.openDatabase(file_mbtiles.getAbsolutePath(), null, SQLiteDatabase.OPEN_READONLY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/9023/buggy-version/geopaparazzispatialitelibrary.src.eu.geopaparazzi.spatialite.database.spatial.core.mbtiles.MBTilesDroidSpitter.java", "BodyUseAPI": ["android.database.sqlite.SQLiteDatabase.openOrCreateDatabase(java.io.File,<nulltype>)"], "Fixed commit": "89d8ee63b0ce7676866fb78221d0a947aa179b1d", "Url": "https://api.github.com/repos/dispiste/geopaparazzi", "Date": "2016-08-18T15:28:55Z"},
{"Line": "=>529", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { currentProject.setSettings(diagramSettings); } finally { currentProject.setChanged(oldChangedFlag); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1063/buggy-version/client.src.main.java.nl.lxtreme.ols.client.ClientController.java", "BodyUseAPI": ["nl.lxtreme.ols.client.Project.setSettings(nl.lxtreme.ols.client.MutableDiagramSettings)"], "Fixed commit": "04ada90967d3965211483bc42c01daaed5652b3f", "Url": "https://api.github.com/repos/jawi/ols", "Date": "2011-03-05T23:25:14Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { authorityValue = projectService.getProjectByAuthorityId(context, metadatum.authority); } catch (java.lang.IllegalArgumentException e) { org.dspace.app.xmlui.objectmanager.RioxxProjectFunderEnricher.log.error(e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2666/buggy-version/dspace.modules.xmlui.src.main.java.org.dspace.app.xmlui.objectmanager.RioxxProjectFunderEnricher.java", "BodyUseAPI": ["org.dspace.app.xmlui.objectmanager.ProjectService.getProjectByAuthorityId(org.dspace.app.xmlui.objectmanager.Context,metadatum.authority)"], "Fixed commit": "374597f9ddea9c75bdcd94418b44e447be9c8432", "Url": "https://api.github.com/repos/atmire/RIOXX53", "Date": "2017-01-02T14:22:32Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { entry = mParser.readValueAs(tachyon.master.next.journal.JsonJournalFormatter.JsonEntry.class); } catch (com.fasterxml.jackson.core.JsonProcessingException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/327/buggy-version/servers.src.main.java.tachyon.master.next.journal.JsonJournalFormatter.java", "BodyUseAPI": ["com.fasterxml.jackson.core.JsonParser.readValueAs(java.lang.Class)"], "Fixed commit": "352f17c9d8544c17b4426f0d37030c64a1b8aa9c", "Url": "https://api.github.com/repos/yupeng9/tachyon", "Date": "2015-09-02T22:28:51Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { int blockId = tank.getInternalTank().getLiquid().itemID; if ((net.minecraft.block.Block.blocksList[blockId]) == null) return 0; return ((int) (java.lang.Math.min(net.minecraft.block.Block.lightValue[blockId], java.lang.Math.max(0, (5 + ((tank.getPercentFull()) * 15)))))); } catch (java.lang.Exception e) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8482/buggy-version/src.openblocks.common.block.BlockTank.java", "BodyUseAPI": ["java.lang.Math.min(net.minecraft.block.Block.lightValue[blockId],int)", "tank.getInternalTank().getLiquid()", "openblocks.common.tileentity.TileEntityTank.getInternalTank()", "java.lang.Math.max(int,(5 + ((tank.getPercentFull()) * 15)))", "openblocks.common.tileentity.TileEntityTank.getPercentFull()"], "Fixed commit": "2001aad677338aab069bf421270936d131c16d4e", "Url": "https://api.github.com/repos/mikeemoo/OpenBlocks", "Date": "2013-08-24T19:38:44Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { mClient = new com.bookmarketer.nw.bookmarket.MobileServiceClient(\"https://nwhacks001.azure-mobile.net/\", \"ZkpGveeHyUvgfFWWttjOZslavbAzTJ60\", this); } catch (java.net.MalformedURLException ex) { java.lang.System.out.println((\"Error \" + ex)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4755/buggy-version/BookMarket.app.src.main.java.com.bookmarketer.nw.bookmarket.SignIn.java", "BodyUseAPI": [], "Fixed commit": "8414421566641660267f795babeab5b5a3340402", "Url": "https://api.github.com/repos/rafayTanzeel/Book-Market", "Date": "2016-02-28T03:42:38Z"},
{"Line": "=>2860", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(1000); notifier = true; connect(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4222/buggy-version/src.com.irccloud.android.NetworkConnection.java", "BodyUseAPI": ["com.irccloud.android.NetworkConnection.9.connect()", "java.lang.Thread.sleep(int)"], "Fixed commit": "d8ed46051473937278eb92701f96f21c6e28f466", "Url": "https://api.github.com/repos/irccloud/android", "Date": "2015-10-08T19:05:04Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { doc = docBuilder.parse(new java.io.File(path)); } catch (java.lang.Exception e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/351/buggy-version/src.com.patfgeneva.lobbies.worlds.AdventureWorld.java", "BodyUseAPI": ["javax.xml.parsers.DocumentBuilder.parse(java.io.File)"], "Fixed commit": "d30585f7ed6f81e99eda4d0b55d4e0f6a41d1f39", "Url": "https://api.github.com/repos/goldbattle/Lobbies", "Date": "2013-03-05T04:26:26Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { docBuilder = docBuilderFactory.newDocumentBuilder(); } catch (javax.xml.parsers.ParserConfigurationException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/351/buggy-version/src.com.patfgeneva.lobbies.worlds.AdventureWorld.java", "BodyUseAPI": ["javax.xml.parsers.DocumentBuilderFactory.newDocumentBuilder()"], "Fixed commit": "d30585f7ed6f81e99eda4d0b55d4e0f6a41d1f39", "Url": "https://api.github.com/repos/goldbattle/Lobbies", "Date": "2013-03-05T04:26:26Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.theta360.lib.PtpipInitiator.close(); } catch (com.theta360.lib.ThetaException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/155/buggy-version/dConnectDevicePlugin.dConnectDeviceTheta.app.src.main.java.org.deviceconnect.android.deviceplugin.theta.core.ThetaM15.java", "BodyUseAPI": ["com.theta360.lib.PtpipInitiator.close()"], "Fixed commit": "722c1cff157710c450d9d9e0abca73e9f233fb14", "Url": "https://api.github.com/repos/TakayukiHoshi1984/DeviceConnect-Android", "Date": "2015-11-19T03:23:49Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { boolean includeQuotes = (factory.getOutputStatement(new java.lang.String()).indexOf('\\\"')) < 0; final java.lang.String cmd = factory.getOutputStatement((((includeQuotes ? \"\\\"\" : \"\") + toPrint) + (includeQuotes ? \"\\\"\" : \"\"))); return cmd; } catch (java.lang.Exception e) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8475/buggy-version/jiss-core.src.main.java.ca.hedlund.jiss.preprocessor.LangPreprocessor.java", "BodyUseAPI": ["java.lang.String.indexOf(char)", "javax.script.ScriptEngineFactory.getOutputStatement(java.lang.String)", "javax.script.ScriptEngineFactory.getOutputStatement(java.lang.String)"], "Fixed commit": "416e6a0871704fc30674d171763a2a66f0faf8ea", "Url": "https://api.github.com/repos/ghedlund/jiss", "Date": "2015-08-11T15:01:13Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { de.lmu.ifi.dbs.mediaqpoi.control.dataimport.DumpFileParser dumpFileParser = new de.lmu.ifi.dbs.mediaqpoi.control.dataimport.DumpFileParser(); dumpFileParser.parse(\"video_info.sql\"); dumpFileParser.parse(\"video_metadata.sql\"); java.util.List<de.lmu.ifi.dbs.mediaqpoi.entity.Video> videos = dumpFileParser.getVideos(); de.lmu.ifi.dbs.mediaqpoi.entity.VideoRTree videoRTree = new de.lmu.ifi.dbs.mediaqpoi.entity.VideoRTree(); videoRTree.insertAll(videos); java.util.List<de.lmu.ifi.dbs.mediaqpoi.entity.Video> candidates = videoRTree.getCandidates(48.152588, 11.590518); for (de.lmu.ifi.dbs.mediaqpoi.entity.Video video : candidates) { java.lang.System.out.println(((((video.getFileName()) + \" --> \") + (video.getTrajectory().getMaxLocation())) + (video.getTrajectory().getMinLocation()))); } } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1771/buggy-version/src.main.java.de.lmu.ifi.dbs.mediaqpoi.entity.VideoRTree.java", "BodyUseAPI": ["de.lmu.ifi.dbs.mediaqpoi.entity.VideoRTree.insertAll(java.util.List<de.lmu.ifi.dbs.mediaqpoi.entity.Video>)", "de.lmu.ifi.dbs.mediaqpoi.entity.VideoRTree.getCandidates(double,double)", "de.lmu.ifi.dbs.mediaqpoi.entity.Video.getTrajectory()", "de.lmu.ifi.dbs.mediaqpoi.entity.Video.getTrajectory()", "de.lmu.ifi.dbs.mediaqpoi.control.dataimport.DumpFileParser.parse(java.lang.String)", "de.lmu.ifi.dbs.mediaqpoi.control.dataimport.DumpFileParser.parse(java.lang.String)", "video.getTrajectory().getMaxLocation()", "video.getTrajectory().getMinLocation()", "java.io.PrintStream.println(((((video.getFileName()) + \" --> \") + (video.getTrajectory().getMaxLocation())) + (video.getTrajectory().getMinLocation())))", "de.lmu.ifi.dbs.mediaqpoi.control.dataimport.DumpFileParser.getVideos()", "de.lmu.ifi.dbs.mediaqpoi.entity.Video.getFileName()"], "Fixed commit": "ec058a61d1e56fd697e8ec365d0151b30f569e1b", "Url": "https://api.github.com/repos/stonerworx/mediaq-poi", "Date": "2015-01-18T16:58:13Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { exception = new org.nybatis.core.exception.unchecked.SqlException(e, \"{} Error (code:{}) {}\\n\\n>> Parameters in error\\n{}\", statements.getKeyInfo(key), e.getErrorCode(), e.getMessage(), logs.getLog(key)); } catch (java.lang.OutOfMemoryError error) { exception = new org.nybatis.core.exception.unchecked.SqlException(e, \"{} Error (code:{}) {}\\n\\n>> Parameters in error\", statements.getKeyInfo(key), e.getErrorCode(), e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8969/buggy-version/src.main.java.org.nybatis.core.db.session.executor.batch.AbstractBatchExecutor.java", "BodyUseAPI": ["java.sql.BatchUpdateException.getMessage()", "org.nybatis.core.db.session.executor.batch.module.Logs.getLog(java.lang.Object)", "java.sql.BatchUpdateException.getErrorCode()", "org.nybatis.core.db.session.executor.batch.module.Statements.getKeyInfo(java.lang.Object)"], "Fixed commit": "6465ffa41c1624c966df70d6dfe907088c8892b4", "Url": "https://api.github.com/repos/NyBatis/NyBatisCore", "Date": "2016-10-31T09:29:11Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return java.net.URLDecoder.decode(headers.get(header).get(0), \"utf8\"); } catch (java.io.UnsupportedEncodingException e) { throw new java.lang.IllegalStateException(\"The system does not support utf8 decoding!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5978/buggy-version/gndmc-rest.src.de.zib.gndms.gndmc.utils.DefaultResponseExtractor.java", "BodyUseAPI": ["org.springframework.http.HttpHeaders.get(java.lang.String)", "headers.get(header).get(int)", "java.net.URLDecoder.decode(headers.get(header).get(0),java.lang.String)"], "Fixed commit": "cea16f375ef4b8c6f85977548f1350e5db8e0339", "Url": "https://api.github.com/repos/zibhub/GNDMS", "Date": "2012-03-15T10:43:09Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { stream.stopStreaming(); stream.close(); } catch (java.lang.NullPointerException ex) { java.lang.System.err.println(\"couldn't stop or close AudioStreamSocket\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1106/buggy-version/src.StateHandler.java", "BodyUseAPI": ["AudioStreamUDP.close()", "AudioStreamUDP.stopStreaming()"], "Fixed commit": "25c3bee2d00a8f4360dd25a0646870e9682c6776", "Url": "https://api.github.com/repos/Peonsson/SimpleSIPV2", "Date": "2015-10-30T12:52:08Z"},
{"Line": "=>364", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { jobId = store.runHtr(pages, config); } finally { trd2 = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3816/buggy-version/src.main.java.eu.transkribus.swt_gui.tools.ToolsWidgetListener.java", "BodyUseAPI": ["eu.transkribus.swt_gui.mainwidget.storage.Storage.runHtr(java.lang.String,eu.transkribus.util.TextRecognitionConfig)"], "Fixed commit": "4653c446f3b059ad5a7dd4e2c0fcf6bd0cf1ee4c", "Url": "https://api.github.com/repos/Transkribus/TranskribusSwtGui", "Date": "2017-02-08T15:58:31Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String example = replaceWeirdChars(new com.mifmif.common.regex.Generex(regex).random(0, 160)); textView.setText(example); } catch (java.lang.StringIndexOutOfBoundsException indexOutOfBoundsException) { textView.setText(R.string.generex_failed); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6771/buggy-version/src.org.toilelibre.libe.athg2sms.androidstuff.materialdesign.PatternMaker.java", "BodyUseAPI": ["com.mifmif.common.regex.Generex.random(int,int)", "org.toilelibre.libe.athg2sms.androidstuff.materialdesign.PatternMaker.replaceWeirdChars(new com.mifmif.common.regex.Generex(regex).random(0, 160))", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "54301c55a1ea5ebf680e52ff06dea0b50a4907db", "Url": "https://api.github.com/repos/libetl/athg2sms", "Date": "2017-03-06T21:52:08Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.stratio.meta.streaming.MetaStream.stratioStreamingAPI.dropStream(s); } catch (com.stratio.streaming.commons.exceptions.StratioEngineOperationException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2898/buggy-version/meta-core.src.main.java.com.stratio.meta.streaming.MetaStream.java", "BodyUseAPI": ["com.stratio.streaming.api.IStratioStreamingAPI.dropStream(java.lang.String)"], "Fixed commit": "9a7338fbe9b7f5d959f51c94565e91d450ab896c", "Url": "https://api.github.com/repos/Stratio/stratio-meta", "Date": "2014-05-29T10:48:16Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { recv = communicator.getLastRequestDariSeberangSana(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7494/buggy-version/src.Client.Client.java", "BodyUseAPI": ["Client.Communications.TCPRequestResponseChannel.getLastRequestDariSeberangSana()"], "Fixed commit": "a5e1567e8e238359346fc048f82fbd235869ee58", "Url": "https://api.github.com/repos/AceColour/PaxosConsensus-Werewolf", "Date": "2016-05-01T02:11:18Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { joinResponse = new org.json.simple.JSONObject(communicator.sendRequestAndGetResponse(joinRequest)); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7494/buggy-version/src.Client.Client.java", "BodyUseAPI": ["Client.Communications.TCPRequestResponseChannel.sendRequestAndGetResponse(org.json.simple.JSONObject)"], "Fixed commit": "a5e1567e8e238359346fc048f82fbd235869ee58", "Url": "https://api.github.com/repos/AceColour/PaxosConsensus-Werewolf", "Date": "2016-05-01T02:11:18Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { readyUpResponse = new org.json.simple.JSONObject(communicator.sendRequestAndGetResponse(readyUpRequest)); } catch (java.io.IOException e) { e.printStackTrace(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7494/buggy-version/src.Client.Client.java", "BodyUseAPI": ["Client.Communications.TCPRequestResponseChannel.sendRequestAndGetResponse(org.json.simple.JSONObject)"], "Fixed commit": "a5e1567e8e238359346fc048f82fbd235869ee58", "Url": "https://api.github.com/repos/AceColour/PaxosConsensus-Werewolf", "Date": "2016-05-01T02:11:18Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { leaveResponse = new org.json.simple.JSONObject(communicator.sendRequestAndGetResponse(leaveRequest)); } catch (java.io.IOException e) { e.printStackTrace(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7494/buggy-version/src.Client.Client.java", "BodyUseAPI": ["Client.Communications.TCPRequestResponseChannel.sendRequestAndGetResponse(org.json.simple.JSONObject)"], "Fixed commit": "a5e1567e8e238359346fc048f82fbd235869ee58", "Url": "https://api.github.com/repos/AceColour/PaxosConsensus-Werewolf", "Date": "2016-05-01T02:11:18Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { communicator.sendResponseKeSeberangSana(response); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7494/buggy-version/src.Client.Client.java", "BodyUseAPI": ["Client.Communications.TCPRequestResponseChannel.sendResponseKeSeberangSana(org.json.simple.JSONObject)"], "Fixed commit": "a5e1567e8e238359346fc048f82fbd235869ee58", "Url": "https://api.github.com/repos/AceColour/PaxosConsensus-Werewolf", "Date": "2016-05-01T02:11:18Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { listClientResponse = new org.json.simple.JSONObject(communicator.sendRequestAndGetResponse(listClientRequest)); } catch (java.io.IOException e) { e.printStackTrace(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7494/buggy-version/src.Client.Client.java", "BodyUseAPI": ["Client.Communications.TCPRequestResponseChannel.sendRequestAndGetResponse(org.json.simple.JSONObject)"], "Fixed commit": "a5e1567e8e238359346fc048f82fbd235869ee58", "Url": "https://api.github.com/repos/AceColour/PaxosConsensus-Werewolf", "Date": "2016-05-01T02:11:18Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { messenger.sendAccepted(acceptedId, acceptedValue); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7494/buggy-version/src.Client.Paxos.Acceptor.java", "BodyUseAPI": ["Client.Paxos.Messenger.sendAccepted(Client.Paxos.ProposalId,int)"], "Fixed commit": "a5e1567e8e238359346fc048f82fbd235869ee58", "Url": "https://api.github.com/repos/AceColour/PaxosConsensus-Werewolf", "Date": "2016-05-01T02:11:18Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { retVal = com.hsjawanda.gaeobjectify.data.ObjectifyDao.ofy().load().ref(entityRef).now(); } catch (java.lang.Exception e) { this.log.log(java.util.logging.Level.WARNING, ((\"Error loading entity from Ref<\" + (this.cls.getClass().getName())) + \">. Stacktrace:\"), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2337/buggy-version/src.main.java.com.hsjawanda.gaeobjectify.data.ObjectifyDao.java", "BodyUseAPI": ["com.hsjawanda.gaeobjectify.data.ObjectifyDao.ofy()", "com.hsjawanda.gaeobjectify.data.ObjectifyDao.ofy().load().ref(com.googlecode.objectify.Ref<T>)", "com.hsjawanda.gaeobjectify.data.ObjectifyDao.ofy().load()", "com.hsjawanda.gaeobjectify.data.ObjectifyDao.ofy().load().ref(entityRef).now()"], "Fixed commit": "3bd4123aa6feb6376e9ff715bea5df1d634a39ae", "Url": "https://api.github.com/repos/hsjawanda/gae-objectify-utils", "Date": "2016-02-28T04:36:20Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { jade.domain.DFService.deregister(this.agent, dfd); } catch (jade.domain.FIPAException fe) { fe.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1901/buggy-version/src.behaviours.CarBehaviour.java", "BodyUseAPI": ["jade.domain.DFService.deregister(agents.CarAgent,jade.domain.FIPAAgentManagement.DFAgentDescription)"], "Fixed commit": "159db440bc7c2af9c73fcbfe19b1931d25256f8e", "Url": "https://api.github.com/repos/pjimenezmateo/RoadSim", "Date": "2016-06-12T17:35:53Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { pcxt.putValueAt(((sorcer.eo.Entry) (entryList.get(i))).getName(), entryList.get(i).asis(), (i + 1)); } catch (sorcer.eo.EvaluationException ce) { sorcer.eo.operator.logger.warn((((\"Problem putting Par: \" + (entryList.get(i))) + \" into context: \") + ce)); } catch (java.rmi.RemoteException re) { sorcer.eo.operator.logger.warn((((\"Problem putting Par: \" + (entryList.get(i))) + \" into context: \") + re)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7180/buggy-version/sos.sos-api.src.main.java.sorcer.eo.operator.java", "BodyUseAPI": ["((sorcer.eo.Entry) (entryList.get(i))).getName()", "entryList.get(i).asis()", "sorcer.eo.PositionalContext.putValueAt(((sorcer.eo.Entry) (entryList.get(i))).getName(),entryList.get(i).asis(),int)", "java.util.List<sorcer.eo.Tuple2<java.lang.String, ?>>.get(int)", "java.util.List<sorcer.eo.Tuple2<java.lang.String, ?>>.get(int)"], "Fixed commit": "0ba7ef774e4f27baa7201c793709c47e4d6784b2", "Url": "https://api.github.com/repos/sorcersoft/sorcer", "Date": "2014-12-20T02:21:52Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.Set<java.lang.String> songs = manager.getRandomSongs(amount, channel); stream.flarebot.flarebot.music.VideoThread.getThread(songs.stream().collect(java.util.stream.Collectors.joining(\",\")), channel, sender).start(); } catch (java.lang.IllegalArgumentException e) { stream.flarebot.flarebot.MessageUtils.sendErrorMessage(stream.flarebot.flarebot.MessageUtils.getEmbed(sender).setDescription(e.getMessage()), channel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4511/buggy-version/src.main.java.stream.flarebot.flarebot.commands.music.RandomCommand.java", "BodyUseAPI": ["stream.flarebot.flarebot.music.VideoThread.getThread(java.lang.String,net.dv8tion.jda.core.entities.TextChannel,net.dv8tion.jda.core.entities.User)", "java.util.Set<java.lang.String>.stream()", "java.util.stream.Collectors.joining(java.lang.String)", "stream.flarebot.flarebot.commands.FlareBotManager.getRandomSongs(int,net.dv8tion.jda.core.entities.TextChannel)", "java.util.stream.Stream<java.lang.String>.collect(java.util.stream.Collector<java.lang.CharSequence, ?, java.lang.String>)", "stream.flarebot.flarebot.music.VideoThread.getThread(songs.stream().collect(java.util.stream.Collectors.joining(\",\")), channel, sender).start()"], "Fixed commit": "caeb0c90997d67a291fce10247159562cda4205b", "Url": "https://api.github.com/repos/binaryoverload/FlareBot", "Date": "2017-05-16T13:06:32Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { Model.Klassen.Verwaltung.Gepaecke.removeGepaeck(Model.Klassen.Verwaltung.Gepaecke.getGepaeckByID(buchung.getGepaeck().getGepaeckID())); Model.Klassen.Verwaltung.Buchungen.buchungen.remove(buchung); } catch (final Model.Exceptions.GepaeckDoesNotExist e) { java.lang.System.out.println(\"Buchung existiert nicht!\"); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5475/buggy-version/src.Model.Klassen.Verwaltung.Buchungen.java", "BodyUseAPI": ["Model.Klassen.Elemente.Buchung.getGepaeck()", "Model.Klassen.Verwaltung.Gepaecke.getGepaeckByID(buchung.getGepaeck().getGepaeckID())", "java.util.ArrayList<Model.Klassen.Elemente.Buchung>.remove(Model.Klassen.Elemente.Buchung)", "buchung.getGepaeck().getGepaeckID()", "Model.Klassen.Verwaltung.Gepaecke.removeGepaeck(Model.Klassen.Verwaltung.Gepaecke.getGepaeckByID(buchung.getGepaeck().getGepaeckID()))"], "Fixed commit": "2886597825a0b584abd2a9620b891606451fb783", "Url": "https://api.github.com/repos/B1NER/Flughafen", "Date": "2017-04-25T20:38:47Z"},
{"Line": "=>8", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String inWords = com.projection.util.NumberToWord.NumberToWord((amount + \"\")); if ((inWords.trim().length()) == 0) { inWords = \"Zero\"; } inWords = inWords + \" Only.\"; return inWords; } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1887/buggy-version/src.com.projection.util.NumberToWord.java", "BodyUseAPI": ["java.lang.String.trim()", "java.lang.String.length()", "com.projection.util.NumberToWord.NumberToWord(java.lang.String)"], "Fixed commit": "d2b16ebdccad018ea8d381fc40336e793c76008c", "Url": "https://api.github.com/repos/sarvesh279/CAGRcalculator", "Date": "2015-01-13T14:23:27Z"},
{"Line": "=>582", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { futures.add(c.close()); } catch (java.lang.Exception ex) { component.LOG.warn(\"Error during Netty shutdown. Messages might have been lost! \\n {}\", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1176/buggy-version/basic.component-netty-network.src.main.java.se.sics.kompics.network.netty.ChannelManager.java", "BodyUseAPI": ["java.util.List<io.netty.channel.ChannelFuture>.add(c.close())", "io.netty.channel.socket.SocketChannel.close()"], "Fixed commit": "145de3241ba3d3628ea0559360c91727e7175c59", "Url": "https://api.github.com/repos/kompics/kompics", "Date": "2015-09-21T13:39:08Z"},
{"Line": "=>574", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { f.cancel(false); } catch (java.lang.Exception ex) { component.LOG.warn(\"Error during Netty shutdown. Messages might have been lost! \\n {}\", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1176/buggy-version/basic.component-netty-network.src.main.java.se.sics.kompics.network.netty.ChannelManager.java", "BodyUseAPI": ["io.netty.channel.ChannelFuture.cancel(boolean)"], "Fixed commit": "145de3241ba3d3628ea0559360c91727e7175c59", "Url": "https://api.github.com/repos/kompics/kompics", "Date": "2015-09-21T13:39:08Z"},
{"Line": "=>594", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { futures.add(c.close()); } catch (java.lang.Exception ex) { component.LOG.warn(\"Error during Netty shutdown. Messages might have been lost! \\n {}\", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1176/buggy-version/basic.component-netty-network.src.main.java.se.sics.kompics.network.netty.ChannelManager.java", "BodyUseAPI": ["java.util.List<io.netty.channel.ChannelFuture>.add(c.close())", "io.netty.channel.udt.UdtChannel.close()"], "Fixed commit": "145de3241ba3d3628ea0559360c91727e7175c59", "Url": "https://api.github.com/repos/kompics/kompics", "Date": "2015-09-21T13:39:08Z"},
{"Line": "=>567", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { f.cancel(false); } catch (java.lang.Exception ex) { component.LOG.warn(\"Error during Netty shutdown. Messages might have been lost! \\n {}\", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1176/buggy-version/basic.component-netty-network.src.main.java.se.sics.kompics.network.netty.ChannelManager.java", "BodyUseAPI": ["io.netty.channel.ChannelFuture.cancel(boolean)"], "Fixed commit": "145de3241ba3d3628ea0559360c91727e7175c59", "Url": "https://api.github.com/repos/kompics/kompics", "Date": "2015-09-21T13:39:08Z"},
{"Line": "=>611", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { cf.syncUninterruptibly(); } catch (java.lang.Exception ex) { component.LOG.warn(\"Error during Netty shutdown. Messages might have been lost! \\n {}\", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1176/buggy-version/basic.component-netty-network.src.main.java.se.sics.kompics.network.netty.ChannelManager.java", "BodyUseAPI": ["io.netty.channel.ChannelFuture.syncUninterruptibly()"], "Fixed commit": "145de3241ba3d3628ea0559360c91727e7175c59", "Url": "https://api.github.com/repos/kompics/kompics", "Date": "2015-09-21T13:39:08Z"},
{"Line": "=>528", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { udpChannel.close().syncUninterruptibly(); } catch (java.lang.Exception ex) { LOG.warn(\"Error during Netty shutdown. Messages might have been lost! \\n {}\", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1176/buggy-version/basic.component-netty-network.src.main.java.se.sics.kompics.network.netty.NettyNetwork.java", "BodyUseAPI": ["udpChannel.close().syncUninterruptibly()", "io.netty.channel.socket.DatagramChannel.close()"], "Fixed commit": "145de3241ba3d3628ea0559360c91727e7175c59", "Url": "https://api.github.com/repos/kompics/kompics", "Date": "2015-09-21T13:39:08Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String[] info = this.appActivity.split(\"/\"); setComponentName(new android.content.ComponentName(info[0], ((info[0]) + (info[1])))); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/9099/buggy-version/LuntechLauncher.src.com.luntech.launcher.App.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "com.luntech.launcher.App.setComponentName(android.content.ComponentName)"], "Fixed commit": "02f6c9bcaeb51c690497aacd82e293f81d7cb219", "Url": "https://api.github.com/repos/tigerjiang/luntech", "Date": "2015-10-31T07:58:46Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { rs = java.util.ResourceBundle.getBundle(baseName, locale, java.util.ResourceBundle.Control.getNoFallbackControl(java.util.ResourceBundle.Control.FORMAT_DEFAULT)); } catch (java.util.MissingResourceException mrEx) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8359/buggy-version/src.main.java.net.canadensys.bundle.UTF8PropertyResourceBundle.java", "BodyUseAPI": ["java.util.ResourceBundle.getBundle(java.lang.String,java.util.Locale,java.util.ResourceBundle.Control)", "java.util.ResourceBundle.Control.getNoFallbackControl(java.util.List<java.lang.String>)"], "Fixed commit": "64e46d97c4971d05dba319f11b05d9c4fe5c39ae", "Url": "https://api.github.com/repos/Canadensys/canadensys-core", "Date": "2014-07-30T19:03:48Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { open(); _context.startService(new android.content.Intent(_context, com.xuPATHn.xximdemo.service.WebSocketService.class)); } catch (java.lang.IllegalStateException exception) { throw new com.xuPATHn.xximdemo.util.ConnectionRegisterException(\"websocket\u901a\u9053\u8fde\u63a5\u5f02\u5e38\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/939/buggy-version/MyApplication.app.src.main.java.com.xuPATHn.xximdemo.core.XXConnection.java", "BodyUseAPI": ["com.xuPATHn.xximdemo.core.XXConnection.open()", "android.content.Context.startService(android.content.Intent)"], "Fixed commit": "4aae20283bd30d7124f571565a89397f021cd68c", "Url": "https://api.github.com/repos/foreverxiongtao/XXIMDEMO", "Date": "2016-08-08T04:01:56Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.xuPATHn.xximdemo.core.XXConnection.getInstance().registerService(this); } catch (java.lang.Exception _e) { _e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/939/buggy-version/MyApplication.app.src.main.java.com.xuPATHn.xximdemo.global.BaseApplication.java", "BodyUseAPI": ["com.xuPATHn.xximdemo.core.XXConnection.getInstance()", "com.xuPATHn.xximdemo.core.XXConnection.getInstance().registerService(com.xuPATHn.xximdemo.global.BaseApplication)"], "Fixed commit": "4aae20283bd30d7124f571565a89397f021cd68c", "Url": "https://api.github.com/repos/foreverxiongtao/XXIMDEMO", "Date": "2016-08-08T04:01:56Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mXXConnection.registerService(this); } catch (java.lang.Exception _e) { _e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/939/buggy-version/MyApplication.app.src.main.java.com.xuPATHn.xximdemo.service.WebSocketService.java", "BodyUseAPI": ["com.xuPATHn.xximdemo.core.XXConnection.registerService(com.xuPATHn.xximdemo.service.WebSocketService)"], "Fixed commit": "4aae20283bd30d7124f571565a89397f021cd68c", "Url": "https://api.github.com/repos/foreverxiongtao/XXIMDEMO", "Date": "2016-08-08T04:01:56Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mXXConnection.registerService(this); } catch (java.lang.Exception _e) { _e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/939/buggy-version/MyApplication.app.src.main.java.com.xuPATHn.xximdemo.service.WebSocketService.java", "BodyUseAPI": ["com.xuPATHn.xximdemo.core.XXConnection.registerService(com.xuPATHn.xximdemo.service.WebSocketService)"], "Fixed commit": "4aae20283bd30d7124f571565a89397f021cd68c", "Url": "https://api.github.com/repos/foreverxiongtao/XXIMDEMO", "Date": "2016-08-08T04:01:56Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { covariance = new org.apache.commons.math3.stat.correlation.Covariance(valuesMatrix).getCovarianceMatrix(); } catch (org.apache.commons.math3.exception.MathIllegalArgumentException ex) { covariance = new org.apache.commons.math3.linear.Array2DRowRealMatrix(new double[dimensions][dimensions]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7032/buggy-version/source-code.our_project_project.src.data.NormalDistribution.java", "BodyUseAPI": ["org.apache.commons.math3.stat.correlation.Covariance.getCovarianceMatrix()"], "Fixed commit": "1fe9a502a54cb0ae955610033437bb731fb194ed", "Url": "https://api.github.com/repos/agnesvanbelle/TL", "Date": "2013-06-28T09:29:20Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (final java.lang.String userContextID : userContextIDs) { contexts.put(userContextID, ((org.openape.api.usercontext.UserContext) (resultMap.get(userContextID)))); } } catch (final java.lang.ClassCastException e) { throw new java.io.IOException(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1139/buggy-version/openAPE.server.src.main.java.org.openape.server.requestHandler.UserContextRequestHandler.java", "BodyUseAPI": ["java.util.Map<java.lang.String, org.openape.api.usercontext.UserContext>.put(java.lang.String,((org.openape.api.usercontext.UserContext) (resultMap.get(userContextID))))", "java.util.Map<java.lang.String, org.openape.api.DatabaseObject>.get(java.lang.String)"], "Fixed commit": "036306ce395694346fd33d03d6be11a5d8dfbe45", "Url": "https://api.github.com/repos/REMEXLabs/OpenAPE", "Date": "2017-08-09T16:13:19Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { labelTimeQuestion.setText((\"\" + ((java.lang.Integer.parseInt(labelTimeQuestion.getText())) - 1))); } catch (java.lang.NumberFormatException e) { labelTimeQuestion.setText(\"15\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6228/buggy-version/src.gui.GameModeWindow.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "javax.swing.JLabel.setText(java.lang.String)", "javax.swing.JLabel.getText()"], "Fixed commit": "0269e3401aafe304f77f5283b18fdc1b51fa57bc", "Url": "https://api.github.com/repos/PortuguesDoSeculoXXI/PortuguesDoSeculoXXI", "Date": "2014-12-06T21:41:34Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { fileReader = new java.util.Scanner(cfgFile); } catch (java.io.FileNotFoundException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3346/buggy-version/src.utilities.Config.java", "BodyUseAPI": [], "Fixed commit": "aada35c3ef9f84569be6a03481145773147d9a8d", "Url": "https://api.github.com/repos/JavaET/JavaETServer", "Date": "2014-09-11T20:23:00Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { instances.add(ci.returnConstant(constantName)); } catch (nl.jqno.equalsverifier.util.exceptions.ReflectionException e) { stop = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1642/buggy-version/src.nl.jqno.equalsverifier.util.ConditionalPrefabValueBuilder.java", "BodyUseAPI": ["java.util.List<java.lang.Object>.add(ci.returnConstant(constantName))", "nl.jqno.equalsverifier.util.ConditionalInstantiator.returnConstant(java.lang.String)"], "Fixed commit": "adfc64ef692892fa551af7404bbcf4d72474a49f", "Url": "https://api.github.com/repos/jqno/equalsverifier", "Date": "2014-11-30T11:48:25Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { instances.add(ci.instantiate(paramTypes, paramValues)); } catch (nl.jqno.equalsverifier.util.exceptions.ReflectionException e) { stop = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1642/buggy-version/src.nl.jqno.equalsverifier.util.ConditionalPrefabValueBuilder.java", "BodyUseAPI": ["java.util.List<java.lang.Object>.add(ci.instantiate(paramTypes, paramValues))", "nl.jqno.equalsverifier.util.ConditionalInstantiator.instantiate(java.lang.Class<?>[],java.lang.Object[])"], "Fixed commit": "adfc64ef692892fa551af7404bbcf4d72474a49f", "Url": "https://api.github.com/repos/jqno/equalsverifier", "Date": "2014-11-30T11:48:25Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { instances.add(ci.callFactory(factoryMethod, paramTypes, paramValues)); } catch (nl.jqno.equalsverifier.util.exceptions.ReflectionException e) { stop = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1642/buggy-version/src.nl.jqno.equalsverifier.util.ConditionalPrefabValueBuilder.java", "BodyUseAPI": ["java.util.List<java.lang.Object>.add(ci.callFactory(factoryMethod, paramTypes, paramValues))", "nl.jqno.equalsverifier.util.ConditionalInstantiator.callFactory(java.lang.String,java.lang.Class<?>[],java.lang.Object[])"], "Fixed commit": "adfc64ef692892fa551af7404bbcf4d72474a49f", "Url": "https://api.github.com/repos/jqno/equalsverifier", "Date": "2014-11-30T11:48:25Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { return new java.lang.String(array, 0, array.length, \"UTF-8\"); } catch (java.lang.IllegalArgumentException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2116/buggy-version/djvu-html5.src.com.lizardtech.djvu.CachedInputStream.java", "BodyUseAPI": [], "Fixed commit": "902cfa82fcab8814f0e1683dc4c0298b46a08c7e", "Url": "https://api.github.com/repos/mateusz-matela/djvu-html5", "Date": "2017-04-22T14:45:29Z"},
{"Line": "=>590", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { return new com.couchbase.lite.Document(this, documentID, mustExist); } catch (com.couchbase.lite.CouchbaseLiteException e) { if (((e.getDomain()) == (com.couchbase.litecore.Constants.C4ErrorDomain.LiteCoreDomain)) && ((e.getCode()) == (com.couchbase.litecore.Constants.LiteCoreError.kC4ErrorNotFound))) return null; else throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7576/buggy-version/shared.src.main.java.com.couchbase.lite.Database.java", "BodyUseAPI": [], "Fixed commit": "f49bb618cfb619100841a678c4a8a31dcf6d2965", "Url": "https://api.github.com/repos/couchbase/couchbase-lite-android", "Date": "2017-05-17T02:18:05Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return lookupInternal(org.jboss.legacy.jnp.server.NamingStoreWrapper.parser.parse((\"jboss/exported/\" + (name.toString())))); } catch (java.lang.Exception e) { return lookupInternal(org.jboss.legacy.jnp.server.NamingStoreWrapper.parser.parse((\"java:jboss/exported/\" + (name.toString())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8186/buggy-version/spi.src.main.java.org.jboss.legacy.jnp.server.NamingStoreWrapper.java", "BodyUseAPI": ["javax.naming.Name.toString()", "org.jboss.legacy.jnp.server.NamingStoreWrapper.lookupInternal(org.jboss.legacy.jnp.server.NamingStoreWrapper.parser.parse((\"jboss/exported/\" + (name.toString()))))", "org.jnp.interfaces.NamingParser.parse(java.lang.String)"], "Fixed commit": "ceafe05b0d2bf643d83a43b662fa523d513a8e9f", "Url": "https://api.github.com/repos/baranowb/jboss-as-legacy-naming", "Date": "2014-10-08T08:06:07Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return javax.ws.rs.core.Response.ok(dataBean.selectorData()).build(); } catch (java.lang.Exception ex) { ru.hdghg.rest.ReportsApi.log.error(\"Error\", ex); return javax.ws.rs.core.Response.serverError().build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6260/buggy-version/overseer-web.src.main.java.ru.hdghg.rest.ReportsApi.java", "BodyUseAPI": ["javax.ws.rs.core.Response.ok(dataBean.selectorData()).build()", "javax.ws.rs.core.Response.ok(dataBean.selectorData())", "ru.hdghg.service.DataBean.selectorData()"], "Fixed commit": "a37496c75dfd3139511998aa04e228c6cc488634", "Url": "https://api.github.com/repos/hdghg/overseer", "Date": "2015-12-13T09:36:14Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { jdbcTemplate.execute(((\"Alter TABLE \" + (table)) + \" ADD COLUMN id VARCHAR(50)\")); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4544/buggy-version/src.main.java.org.cloudfoundry.samples.music.repository.TableInitializer.java", "BodyUseAPI": ["org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)"], "Fixed commit": "78498e6855bb86d958310104da7a0c71424b175a", "Url": "https://api.github.com/repos/shijianjian/spring-jdbc", "Date": "2017-03-30T15:06:01Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.wso2.carbon.identity.core.util.IdentityTenantUtil.initializeRegistry(tenantId, tenantDomain); } catch (org.wso2.carbon.identity.base.IdentityException e) { throw new org.wso2.carbon.identity.oauth2.IdentityOAuth2Exception((\"Error occurred while loading registry for tenant \" + tenantDomain), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3894/buggy-version/components.org.wso2.carbon.identity.oauth.src.main.java.org.wso2.carbon.identity.openidconnect.DefaultIDTokenBuilder.java", "BodyUseAPI": ["org.wso2.carbon.identity.core.util.IdentityTenantUtil.initializeRegistry(int,java.lang.String)"], "Fixed commit": "75468c2cc6797cc3020900f50c35a75f0efcadc1", "Url": "https://api.github.com/repos/wso2-extensions/identity-inbound-auth-oauth", "Date": "2016-05-02T12:45:47Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.net.URL url = java.lang.ClassLoader.getSystemResource(\"org/ujmp/gui/UJMP.png\"); if (url != null) { java.awt.Image img = java.awt.Toolkit.getDefaultToolkit().createImage(url); if (img != null) { setIconImage(img); } } } catch (java.lang.Throwable t) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2035/buggy-version/ujmp-gui.src.main.java.org.ujmp.gui.frame.AbstractFrame.java", "BodyUseAPI": ["java.awt.Toolkit.createImage(java.net.URL)", "org.ujmp.gui.frame.AbstractFrame.setIconImage(java.awt.Image)", "java.lang.ClassLoader.getSystemResource(java.lang.String)", "java.awt.Toolkit.getDefaultToolkit()"], "Fixed commit": "3bb2b95ca33740c9d7bba98adade1e1d02dc5400", "Url": "https://api.github.com/repos/ujmp/universal-java-matrix-package", "Date": "2016-02-01T07:24:10Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { countryBlocks.remove(18); countryBlocks.remove(1); countryBlocks.remove(0); } catch (java.lang.IndexOutOfBoundsException e) { throw new java.io.IOException(\"Failed to retrieve data\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2186/buggy-version/footkick-java.src.main.java.net.namibsun.footkick.java.scraper.CountryLister.java", "BodyUseAPI": ["org.jsoup.select.Elements.remove(int)", "org.jsoup.select.Elements.remove(int)", "org.jsoup.select.Elements.remove(int)"], "Fixed commit": "e1e76b1344f1fdbc99d0afe018188acfa380d57c", "Url": "https://api.github.com/repos/namboy94/footkick", "Date": "2016-06-14T15:43:03Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { countryLeagues = normalButtonBlocks.get(1); } catch (java.lang.IndexOutOfBoundsException e) { throw new java.io.IOException(\"Failed to get league information\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2186/buggy-version/footkick-java.src.main.java.net.namibsun.footkick.java.scraper.Country.java", "BodyUseAPI": ["java.util.ArrayList<org.jsoup.nodes.Element>.get(int)"], "Fixed commit": "e1e76b1344f1fdbc99d0afe018188acfa380d57c", "Url": "https://api.github.com/repos/namboy94/footkick", "Date": "2016-06-14T15:43:03Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return controller.getComponents()[(position % (controller.circuit.height))][(position / (controller.circuit.height))]; } catch (java.lang.ArrayIndexOutOfBoundsException e) { java.lang.System.err.println((\"Error, array out of bounds:\\n\" + e)); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4799/buggy-version/app.src.main.java.com.edulectronics.tinycircuit.ui.adapters.CircuitAdapter.java", "BodyUseAPI": ["com.edulectronics.tinycircuit.Circuit.CircuitController.getComponents()"], "Fixed commit": "1301b73a309436d415c810721d325d97e7e65e8c", "Url": "https://api.github.com/repos/wzwietering/IntroductieProject", "Date": "2016-11-29T16:26:33Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { reply = net.tscloud.hivenotes.helper.HivePollen.pollenMap.entrySet().iterator().next().getKey().toString(); } catch (java.util.NoSuchElementException e) { android.util.Log.e(net.tscloud.hivenotes.helper.HivePollen.TAG, \"Pollen Date not found for today\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5399/buggy-version/app.src.main.java.net.tscloud.hivenotes.helper.HivePollen.java", "BodyUseAPI": ["java.util.Map<java.util.Date, java.lang.String>.entrySet()", "java.util.Map.Entry<java.util.Date, java.lang.String>.getKey()", "java.util.Set<java.util.Map.Entry<java.util.Date, java.lang.String>>.iterator()", "java.util.Date.toString()", "java.util.Iterator<java.util.Map.Entry<java.util.Date, java.lang.String>>.next()"], "Fixed commit": "494ae13d5556e735a51eb3d6111272f6b4a0baf1", "Url": "https://api.github.com/repos/tscloud/HiveNotes", "Date": "2016-09-07T03:27:55Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.raizlabs.freshair.ReleaseInfoRequest request = new com.raizlabs.freshair.ReleaseInfoRequest(url); final com.raizlabs.freshair.ReleaseInfo info = request.run(); if (info != null) { new android.os.Handler(android.os.Looper.getMainLooper()).post(new java.lang.Runnable() { @java.lang.Override public void run() { com.raizlabs.freshair.FreshAir.showUpdatePrompt(info); } }); }else { com.raizlabs.freshair.FreshAirLog.e(((\"Error checking for updates from: \" + url) + \", data was not parsed properly.\")); } } catch (java.lang.Exception e) { com.raizlabs.freshair.FreshAirLog.e((\"Error checking for updates from: \" + url), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5730/buggy-version/library.src.main.java.com.raizlabs.freshair.FreshAir.java", "BodyUseAPI": ["java.lang.Object()", "com.raizlabs.freshair.FreshAir.showUpdatePrompt(com.raizlabs.freshair.ReleaseInfo)", "android.os.Looper.getMainLooper()", "android.os.Handler.post(java.lang.Runnable)", "com.raizlabs.freshair.ReleaseInfoRequest.run()", "com.raizlabs.freshair.FreshAirLog.e(java.lang.String)"], "Fixed commit": "0f8d6b42a4b17dc7d7a6a39d274231415857dad4", "Url": "https://api.github.com/repos/Raizlabs/FreshAir-Android", "Date": "2016-02-24T17:41:04Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { final javax.xml.validation.Schema schema = javax.xml.validation.SchemaFactory.newInstance(javax.xml.XMLConstants.W3C_XML_SCHEMA_NS_URI).newSchema(); return schema.newValidator(); } catch (final org.xml.sax.SAXException ex) { throw new java.lang.IllegalStateException(ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5159/buggy-version/src.main.java.com.jcabi.xml.StrictXML.java", "BodyUseAPI": ["javax.xml.validation.Schema.newValidator()", "javax.xml.validation.SchemaFactory.newInstance(java.lang.String)", "javax.xml.validation.SchemaFactory.newSchema()"], "Fixed commit": "7c73f31ba9e6d9d076c662083a6011bcc95d5236", "Url": "https://api.github.com/repos/apocarteres/jcabi-xml", "Date": "2015-01-14T22:06:52Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String nodeName; nodeName = ni.getNameNode(replicationHash); fileToSend.addLocation(nodeName); } catch (java.rmi.RemoteException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/292/buggy-version/SystemYClient.src.SystemY.FileManager.java", "BodyUseAPI": ["SystemY.Bestand.addLocation(java.lang.String)", "SystemY.ClientToNamingServerInterface.getNameNode(int)"], "Fixed commit": "7889c7d99e31d0700ab16f5b380ba8172af91549", "Url": "https://api.github.com/repos/ToonStas/SystemY", "Date": "2017-01-05T21:59:39Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { decodedHeader = decodeHeader(encodedHeader); } catch (java.lang.IllegalArgumentException e) { response.setStatus(Http.BAD_REQUEST); com.thetransactioncompany.jsonrpc2.JSONRPC2Response respOut = new com.thetransactioncompany.jsonrpc2.JSONRPC2Response(org.jnode.rest.core.RPCError.BAD_AUTH_HEADER, null); final java.lang.String result = respOut.toString(); org.jnode.rest.route.MainServlet.LOGGER.l5((\"bad auth response: \" + result), e); response.getWriter().print(result); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7293/buggy-version/jnode-rest-api-module.src.org.jnode.rest.route.MainServlet.java", "BodyUseAPI": ["org.jnode.rest.route.MainServlet.decodeHeader(java.lang.String)"], "Fixed commit": "1dc212375cf555623dc3871e5e457ea6c6a98719", "Url": "https://api.github.com/repos/annmuor/jnode", "Date": "2016-04-08T13:25:09Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { thwack.and.bash.game.animation.AnimatedSprite attackSprite = new thwack.and.bash.game.animation.AnimatedSprite(\"textureatlas/play/input/snake-attack_79x41.png\", 1, 3); totalAttackFrames = (attackSprite.getFrameCols()) * (attackSprite.getFrameCols()); sprite.setRegion(attackSprite.getAnimation().getKeyFrame((delta % (totalAttackFrames)))); } catch (java.lang.Exception e) { java.lang.System.err.println(((\"Snake.java animated sprite error=\" + e) + \", hopefully this is just a run from a unit test! ;)\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/757/buggy-version/core.src.thwack.and.bash.game.entity.mob.Snake.java", "BodyUseAPI": ["thwack.and.bash.game.animation.AnimatedSprite.getFrameCols()", "attackSprite.getAnimation().getKeyFrame(float)", "thwack.and.bash.game.entity.mob.Snake.setRegion(attackSprite.getAnimation().getKeyFrame((delta % (totalAttackFrames))))", "thwack.and.bash.game.animation.AnimatedSprite.getFrameCols()", "thwack.and.bash.game.animation.AnimatedSprite.getAnimation()"], "Fixed commit": "15ed600e4257be1c1cce37752f155f31af2d2c89", "Url": "https://api.github.com/repos/derickson82/Thwack-And-Bash-prototype", "Date": "2014-08-29T22:38:47Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { federationAdminService.updateRegistryEntry(metacard, locations); } catch (org.codice.ddf.registry.federationadmin.service.internal.FederationAdminException e) { federationAdminService.addRegistryEntry(metacard, locations); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4303/buggy-version/catalog.spatial.registry.registry-federation-admin-service-impl.src.main.java.org.codice.ddf.registry.federationadmin.service.impl.RegistryPublicationServiceImpl.java", "BodyUseAPI": ["org.codice.ddf.registry.federationadmin.service.internal.FederationAdminService.updateRegistryEntry(ddf.catalog.data.Metacard,java.util.Set<java.lang.String>)"], "Fixed commit": "fb898af593ac677c53e4e47b257b02e016a85852", "Url": "https://api.github.com/repos/clockard/ddf", "Date": "2016-09-12T15:16:43Z"},
{"Line": "=>470", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { event = mService.events().insert(calendarId, event).execute(); eventId = event.getId(); } catch (java.net.UnknownHostException e) { eventId = \"not_synced\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7245/buggy-version/app.src.main.java.kodman.timesheetapp.MainActivity.java", "BodyUseAPI": ["mService.events().insert(java.lang.String,com.google.api.services.calendar.model.Event)", "java.util.Calendar.events()", "mService.events().insert(calendarId, event).execute()", "com.google.api.services.calendar.model.Event.getId()"], "Fixed commit": "f13fdff72571d80a0d782a6a5366fe6ecd23ed6d", "Url": "https://api.github.com/repos/CodmanD/timeSheetApp", "Date": "2017-11-02T14:58:53Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { flightService.deleteFlight(flightId); } catch (java.lang.Exception e) { modelMap.put(\"campaignName\", campaignService.findCampaign(campaignId).getCampaignName()); modelMap.put(\"flights\", flightService.findFlightFormsByCampaign(campaignId)); modelMap.put(\"error\", (\"Error: \" + (e.getMessage()))); return com.cbinfo.controller.CampaignController.CAMPAIGN_FLIGHT_LIST; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4262/buggy-version/src.main.java.com.cbinfo.controller.CampaignController.java", "BodyUseAPI": ["com.cbinfo.service.FlightService.deleteFlight(java.lang.String)"], "Fixed commit": "c32ac0f8643a31b1c76ae6bbaa8af34dfa10763f", "Url": "https://api.github.com/repos/Tor2606/GeoIP-spring-boot-sample", "Date": "2016-12-12T18:53:01Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.buffer.write(serialized); } catch (final java.io.IOException ioe) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3548/buggy-version/src.main.java.com.intersystems.persistence.EventWriter.java", "BodyUseAPI": ["java.io.ByteArrayOutputStream.write(byte[])"], "Fixed commit": "ba2f233c4a897eca32b2a9280677eec00b73a2ba", "Url": "https://api.github.com/repos/unix-junkie/persistence-benchmark", "Date": "2014-01-18T13:47:04Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(10); } catch (java.lang.InterruptedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1366/buggy-version/src.core.server.InputPoller.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "5ef3aa889c7cc4435902b763ec718ecf9e1d5611", "Url": "https://api.github.com/repos/dahlukeh/phais", "Date": "2013-11-20T11:14:06Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.content.Intent intent = new android.content.Intent(android.content.Intent.ACTION_VIEW); intent.setData(android.net.Uri.parse(url)); intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK); activity.startActivity(intent); } catch (android.content.ActivityNotFoundException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/762/buggy-version/common.src.main.java.com.feeder.common.IntentUtil.java", "BodyUseAPI": ["android.content.Intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK)", "android.content.Intent.setData(android.net.Uri.parse(url))", "android.app.Activity.startActivity(android.content.Intent)", "android.net.Uri.parse(java.lang.String)"], "Fixed commit": "5f8d284aeccd36ac03a16870bb88c987b9fdcf01", "Url": "https://api.github.com/repos/zhangsr/Feeder2", "Date": "2017-03-07T14:19:12Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { fr.solsid.model.Assignment assignment = extractAssigment(currentRow); java.util.Set<fr.solsid.model.AccessRight> accessRights = extractAccessRights(currentRow); result.put(assignment, accessRights); } catch (java.lang.Exception e) { java.lang.System.out.println((\"Problem extracting info from row: \" + (currentRow.getRowNum()))); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7386/buggy-version/src.main.java.fr.solsid.service.AccessRightsFileReader.java", "BodyUseAPI": ["fr.solsid.service.AccessRightsFileReader.extractAccessRights(org.apache.poi.ss.usermodel.Row)", "fr.solsid.service.AccessRightsFileReader.extractAssigment(org.apache.poi.ss.usermodel.Row)", "java.util.Map<fr.solsid.model.Assignment, java.util.Set<fr.solsid.model.AccessRight>>.put(fr.solsid.model.Assignment,java.util.Set<fr.solsid.model.AccessRight>)"], "Fixed commit": "ef9ea110abe1412f641e49907505b4f5549537f3", "Url": "https://api.github.com/repos/solsid/benesearch", "Date": "2017-06-14T14:33:06Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { defaultCycle = java.lang.Integer.parseInt(cmd.substring(1, indexOfClosingAngleBracket)); if (defaultCycle < (OS.cpu.getClock().getClock())) { defaultCycle = OS.cpu.getClock().getClock(); java.lang.System.out.println(\"Cycle has passed\"); } } catch (java.lang.Exception e) { java.lang.System.out.println(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8726/buggy-version/os.simulator.CommandInterface.java", "BodyUseAPI": ["OS.cpu.getClock().getClock()", "java.lang.String.substring(int,int)", "OS.cpu.getClock().getClock()", "OS.cpu.getClock()", "OS.cpu.getClock()", "java.lang.Integer.parseInt(java.lang.String)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "8f5861546ce59d5cc5e4b7a8ac738bc7a565073f", "Url": "https://api.github.com/repos/brandontksmith/OS-Simulator", "Date": "2016-12-02T02:06:16Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { log((\"\\nGew\\u00e4hltes Quellverzeichnis: \" + (srcFolder.getAbsolutePath()))); } catch (java.lang.Exception ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2972/buggy-version/src.org.ch.mm.xmltransform.Main.java", "BodyUseAPI": ["org.ch.mm.xmltransform.Main.log(java.lang.String)", "java.io.File.getAbsolutePath()"], "Fixed commit": "dfdef1a994682a00b0705cbe93da52870fe477c8", "Url": "https://api.github.com/repos/marksml/xmltransform", "Date": "2014-09-06T08:13:56Z"},
{"Line": "=>652", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { reanalyze = plugin.analyzeJar(this); } finally { endHandleErrors(previous); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4109/buggy-version/biz.aQute.bndlib.src.aQute.bnd.osgi.Analyzer.java", "BodyUseAPI": ["aQute.bnd.service.AnalyzerPlugin.analyzeJar(aQute.bnd.osgi.Analyzer)"], "Fixed commit": "293beefa9402a7f4dcf0266845fcdfe73a5368a1", "Url": "https://api.github.com/repos/bndtools/bnd", "Date": "2015-11-24T17:58:38Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ft.commit(); } catch (java.lang.Exception e) { android.util.Log.e(comwim07101993ictproj3_capturetheflag.github.caperevexillum.activities.GameActivity.TAG, e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/587/buggy-version/CapereVexillum.app.src.main.java.comwim07101993ictproj3_capturetheflag.github.caperevexillum.activities.GameActivity.java", "BodyUseAPI": ["android.app.FragmentTransaction.commit()"], "Fixed commit": "4d64daf253803701532ae224644da532ff0d39c3", "Url": "https://api.github.com/repos/wim07101993/school_ictProj3-CaptureTheFlag", "Date": "2017-11-16T10:43:08Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ft.commit(); } catch (java.lang.Exception e) { android.util.Log.e(comwim07101993ictproj3_capturetheflag.github.caperevexillum.activities.GameActivity.TAG, e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/587/buggy-version/CapereVexillum.app.src.main.java.comwim07101993ictproj3_capturetheflag.github.caperevexillum.activities.GameActivity.java", "BodyUseAPI": ["android.app.FragmentTransaction.commit()"], "Fixed commit": "4d64daf253803701532ae224644da532ff0d39c3", "Url": "https://api.github.com/repos/wim07101993/school_ictProj3-CaptureTheFlag", "Date": "2017-11-16T10:43:08Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return org.createnet.raptor.models.objects.RaptorContainer.mapper.readValue(json, org.createnet.raptor.models.objects.ServiceObject.class); } catch (java.io.IOException e) { throw new org.createnet.raptor.models.objects.RaptorComponent.ParserException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5648/buggy-version/raptor-models.src.main.java.org.createnet.raptor.models.objects.ServiceObject.java", "BodyUseAPI": ["org.createnet.raptor.models.objects.ServiceObject.readValue(java.lang.String,java.lang.Class)"], "Fixed commit": "3f462c989072031a3773dab8b0f68d20de1eed4f", "Url": "https://api.github.com/repos/raptorbox/raptor", "Date": "2016-08-25T13:51:06Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return invoke(methodName, value); } catch (de.gmcs.builder.GenericBuilderException e) { return setAttributeValue(property, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7361/buggy-version/src.main.java.de.gmcs.builder.GenericBuilder.java", "BodyUseAPI": ["de.gmcs.builder.GenericBuilder<T>.invoke(java.lang.String,java.lang.Object)"], "Fixed commit": "fac1eaf95bd1c41458f985b3e7a63cca47632180", "Url": "https://api.github.com/repos/gossie/generic-builder", "Date": "2015-09-13T17:50:45Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { url = new java.net.URL(((\"http://api.walmartlabs.com/v1/search?apiKey=rfdvz63d3vvqwcwpc2tvh6zr&lsPublisherId\" + \"=AhuvaFoxman&numItems=25&query=\") + search)); java.net.HttpURLConnection connection = ((java.net.HttpURLConnection) (url.openConnection())); java.io.InputStream in = connection.getInputStream(); reader = new java.io.BufferedReader(new java.io.InputStreamReader(in)); } catch (java.lang.NullPointerException ex) { java.lang.System.out.println(\"Hello\"); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/810/buggy-version/src.walmart.WalmartConnection.java", "BodyUseAPI": ["java.net.HttpURLConnection.getInputStream()", "java.net.URL.openConnection()"], "Fixed commit": "3a0b7665b7dbd77b647c77a04107cc8708ff47e6", "Url": "https://api.github.com/repos/renakerstein/ShoppingList", "Date": "2016-04-12T03:56:23Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { in = input.getText().toString(); if ((in.length()) == 0) throw new com.brycendorsay.numberconverter.NullInputException(\"No Input\"); for (int i = 0; i < (in.length()); i++) { char x = in.charAt(i); if (!(java.lang.Character.isDigit(x))) { throw new com.brycendorsay.numberconverter.NullInputException(\"Invalid Input Characters\"); } } output.setText((\"\" + (convertValue(in)))); } catch (com.brycendorsay.numberconverter.NullInputException e) { in = \"0\"; } finally { output.setText(convertValue(in)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2885/buggy-version/src.com.brycendorsay.numberconverter.HexadecimalFragment.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)", "java.lang.String.charAt(int)", "input.getText().toString()", "java.lang.String.length()", "android.widget.EditText.getText()", "java.lang.Character.isDigit(char)", "com.brycendorsay.numberconverter.HexadecimalFragment.1.convertValue(java.lang.String)", "java.lang.String.length()"], "Fixed commit": "881bb87f4ebe100cecd80cfe65ae5272df893151", "Url": "https://api.github.com/repos/Brymastr/Number-Converter", "Date": "2014-01-04T09:01:42Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { in = input.getText().toString(); if ((in.length()) == 0) throw new com.brycendorsay.numberconverter.NullInputException(\"No Input\"); for (int i = 0; i < (in.length()); i++) { char x = in.charAt(i); if (!(java.lang.Character.isDigit(x))) { throw new com.brycendorsay.numberconverter.NullInputException(\"Invalid Input Characters\"); } } output.setText((\"\" + (convertValue(in)))); } catch (com.brycendorsay.numberconverter.NullInputException e) { in = \"0\"; } finally { output.setText(convertValue(in)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2885/buggy-version/src.com.brycendorsay.numberconverter.BinaryFragment.java", "BodyUseAPI": ["input.getText().toString()", "java.lang.Character.isDigit(char)", "java.lang.String.length()", "android.widget.TextView.setText(java.lang.String)", "java.lang.String.length()", "com.brycendorsay.numberconverter.BinaryFragment.1.convertValue(java.lang.String)", "java.lang.String.charAt(int)", "android.widget.EditText.getText()"], "Fixed commit": "881bb87f4ebe100cecd80cfe65ae5272df893151", "Url": "https://api.github.com/repos/Brymastr/Number-Converter", "Date": "2014-01-04T09:01:42Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { clippedShapes[x][y] = uk.co.epii.conservatives.fredericknorth.geometry.extensions.PolygonExtensions.clipAndSegments(polygons, clips[x][y]); } catch (uk.co.epii.conservatives.fredericknorth.geometry.MultiPointsHitClipBoundaryException e) { clippedShapes = null; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2911/buggy-version/src.main.java.uk.co.epii.conservatives.fredericknorth.geometry.SquareSearchPolygonSifterImpl.java", "BodyUseAPI": ["uk.co.epii.conservatives.fredericknorth.geometry.extensions.PolygonExtensions.clipAndSegments(java.awt.Polygon[],java.awt.Rectangle)"], "Fixed commit": "6251591a33382dc6f41ec51458af29ee37e487ab", "Url": "https://api.github.com/repos/etothepii/fredericknorth", "Date": "2014-02-28T01:49:09Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { std_msgs.String message = publisher.newMessage(); message.setData(command); publisher.publish(message); ru.robotmitya.robocommonlib.Log.messagePublished(this, publisher.getTopicName().toString(), command); } catch (java.lang.NullPointerException e) { ru.robotmitya.robocommonlib.Log.e(this, e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1678/buggy-version/RoboBoard.src.main.java.ru.robotmitya.roboboard.BoardNode.java", "BodyUseAPI": ["org.ros.node.topic.Publisher<std_msgs.String>.newMessage()", "org.ros.node.topic.Publisher<std_msgs.String>.getTopicName()", "publisher.getTopicName().toString()", "ru.robotmitya.robocommonlib.Log.messagePublished(ru.robotmitya.roboboard.BoardNode,publisher.getTopicName().toString(),java.lang.String)", "org.ros.node.topic.Publisher<std_msgs.String>.publish(std_msgs.String)", "std_msgs.String.setData(java.lang.String)"], "Fixed commit": "20803f8c5edbac0bcd53827021bfc931e143529a", "Url": "https://api.github.com/repos/robot-mitya/android2", "Date": "2014-04-26T16:58:04Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { serverSocket.close(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/9122/buggy-version/src.server.ServerRun.java", "BodyUseAPI": ["java.net.ServerSocket.close()"], "Fixed commit": "602d3a74d7ef5b709d74a48bd2549fb4efc3e818", "Url": "https://api.github.com/repos/tobiasf670/24_cdio2", "Date": "2016-04-04T15:11:58Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { go.addComponent(mc); } catch (com.mbrlabs.mundus.commons.scene3d.InvalidComponentException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2531/buggy-version/gdx-runtime.src.com.mbrlabs.mundus.runtime.SceneLoader.java", "BodyUseAPI": ["com.mbrlabs.mundus.commons.scene3d.GameObject.addComponent(com.mbrlabs.mundus.commons.scene3d.components.ModelComponent)"], "Fixed commit": "dcfb4d81f0f05e1309a3272d6e0be76a35c90df0", "Url": "https://api.github.com/repos/mbrlabs/Mundus", "Date": "2016-10-27T23:44:40Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { createParseTable(dynamic); } catch (java.lang.Exception e) { org.metaborg.sdf2table.io.ParseTableGenerator.logger.error(e.getMessage()); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7776/buggy-version/org.metaborg.sdf2table.src.main.java.org.metaborg.sdf2table.io.ParseTableGenerator.java", "BodyUseAPI": ["org.metaborg.sdf2table.io.ParseTableGenerator.createParseTable(boolean)"], "Fixed commit": "25f7af3ea289f5904b0038ae623d4e247d6bc58e", "Url": "https://api.github.com/repos/metaborg/sdf", "Date": "2017-09-21T11:31:40Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (com.bradsproject.BradleyJewell.bMobs.Mob mob : worlds.get(entity.getWorld().getName()).mobs) { if (mob.type.equals(entity.toString().toLowerCase().replace(\"craft\", \"\"))) { if ((mob.burn) && (isInSunlight(entity))) { return true; }else { return false; } } } } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2171/buggy-version/src.com.bradsproject.com.bradsproject.BradleyJewell.bMobs.bMobs.java", "BodyUseAPI": ["com.bradsproject.BradleyJewell.bMobs.Entity.getWorld()", "mob.type.equals(entity.toString().toLowerCase().replace(\"craft\", \"\"))", "entity.getWorld().getName()", "com.bradsproject.BradleyJewell.bMobs.bMobs.isInSunlight(com.bradsproject.BradleyJewell.bMobs.Entity)", "entity.toString().toLowerCase().replace(java.lang.String,java.lang.String)", "entity.toString().toLowerCase()", "java.util.Map<java.lang.String, com.bradsproject.BradleyJewell.bMobs.bMobsWorld>.get(entity.getWorld().getName())", "com.bradsproject.BradleyJewell.bMobs.Entity.toString()"], "Fixed commit": "ab43f0dc2cf0d5e399bc15a0c28e5a2f5de35d1c", "Url": "https://api.github.com/repos/brad811/bMobs", "Date": "2011-05-20T10:47:57Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { dateTimeProcessor.process(document.toLowerCase()); results.put(document, dateTimeProcessor); } catch (java.lang.Exception e) { com.glue.feed.time.DateTimeProcessor.LOG.error(e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7330/buggy-version/glue-bot.src.main.java.com.glue.feed.time.DateTimeProcessor.java", "BodyUseAPI": ["java.util.Map<java.lang.String, com.glue.feed.time.DateTimeProcessor>.put(java.lang.String,com.glue.feed.time.DateTimeProcessor)", "com.glue.feed.time.DateTimeProcessor.process(java.lang.String)", "java.lang.String.toLowerCase()"], "Fixed commit": "134060f6740182aa81750a79747c4a8317728114", "Url": "https://api.github.com/repos/pgillet/Glue", "Date": "2015-12-07T22:23:39Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { int stringInt = java.lang.Integer.parseInt(string); if ((taskbar.DateTime.isOnlyNumbers(string)) && (stringInt <= 2359)) { return true; } } catch (java.lang.NumberFormatException e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6522/buggy-version/src.taskbar.DateTime.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "taskbar.DateTime.isOnlyNumbers(java.lang.String)"], "Fixed commit": "974be79fa05137d4532567c840078198eadb3a64", "Url": "https://api.github.com/repos/cs2103aug2014-t10-3j/TaskBar-MainRepo", "Date": "2014-10-22T19:02:43Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { targetBlock = event.getPlayer().getTargetBlock(null, 200); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2737/buggy-version/src.com.gmail.zariust.otherdrops.listener.OdPlayerListener.java", "BodyUseAPI": ["org.bukkit.event.player.PlayerInteractEvent.getPlayer()", "event.getPlayer().getTargetBlock(<nulltype>,int)"], "Fixed commit": "2ad718697dda37b1a3bb5750dc3fc6c4789499f0", "Url": "https://api.github.com/repos/Zarius/Bukkit-OtherBlocks", "Date": "2013-06-01T07:21:03Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { tz = (java.lang.Float.parseFloat(JsonNProperties.getString(\"tz\"))) / 60; } catch (java.lang.NumberFormatException ex) { tz = 0.0F; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8745/buggy-version/GeoCoral.app.src.main.java.com.gcu.zoltantompa.geocoral.pcHttpJSONAsync.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)", "java.lang.Float.parseFloat(JsonNProperties.getString(\"tz\"))"], "Fixed commit": "d3619edfb6f41a454c4a3a21263381854da7cc2f", "Url": "https://api.github.com/repos/TomZoy/Project_Coral-GCU-Y5-MUC", "Date": "2016-12-05T21:32:32Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return new org.jboss.weld.bean.proxy.EnterpriseBeanProxyMethodHandler<T>(((org.jboss.weld.bean.SessionBean<T>) (manager.getPassivationCapableBean(beanId))), reference); } catch (java.lang.Exception e) { throw new org.jboss.weld.exceptions.InvalidObjectException(\"Weld Serialization Incompatibility\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8170/buggy-version/impl.src.main.java.org.jboss.weld.bean.proxy.EnterpriseBeanProxyMethodHandler.java", "BodyUseAPI": ["org.jboss.weld.manager.BeanManagerImpl.getPassivationCapableBean(org.jboss.weld.serialization.spi.BeanIdentifier)"], "Fixed commit": "7bdbb45383ec300fe49d7ba9491aad16d52bf7eb", "Url": "https://api.github.com/repos/flowlogix/weld-core", "Date": "2016-01-16T07:26:32Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.List<com.couchbase.client.java.util.features.Version> versions = this.couchbaseOperations.getCouchbaseClusterInfo().getAllVersions(); com.couchbase.client.java.bucket.BucketInfo bucketInfo = this.couchbaseOperations.getCouchbaseBucket().bucketManager().info(); builder.up().withDetail(\"versions\", org.springframework.util.StringUtils.collectionToCommaDelimitedString(versions)); builder.up().withDetail(\"NodeInfo\", org.springframework.util.StringUtils.collectionToCommaDelimitedString(bucketInfo.nodeList())); builder.up().withDetail(\"NodeCount\", bucketInfo.nodeCount()); } catch (java.lang.Exception ex) { builder.down(ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4177/buggy-version/spring-boot-actuator.src.main.java.org.springframework.boot.actuate.health.CouchbaseHealthIndicator.java", "BodyUseAPI": ["org.springframework.util.StringUtils.collectionToCommaDelimitedString(java.util.List<com.couchbase.client.java.util.features.Version>)", "builder.up().withDetail(java.lang.String,bucketInfo.nodeCount())", "org.springframework.util.StringUtils.collectionToCommaDelimitedString(bucketInfo.nodeList())", "builder.up().withDetail(java.lang.String,org.springframework.util.StringUtils.collectionToCommaDelimitedString(bucketInfo.nodeList()))", "builder.up().withDetail(java.lang.String,org.springframework.util.StringUtils.collectionToCommaDelimitedString(versions))", "org.springframework.data.couchbase.core.CouchbaseOperations.getCouchbaseClusterInfo()", "com.couchbase.client.java.bucket.BucketInfo.nodeList()", "Health.Builder.up()", "com.couchbase.client.java.bucket.BucketInfo.nodeCount()", "Health.Builder.up()", "this.couchbaseOperations.getCouchbaseBucket().bucketManager().info()", "org.springframework.data.couchbase.core.CouchbaseOperations.getCouchbaseBucket()", "this.couchbaseOperations.getCouchbaseClusterInfo().getAllVersions()", "Health.Builder.up()", "this.couchbaseOperations.getCouchbaseBucket().bucketManager()"], "Fixed commit": "5e3a4e056e3ae6d2f1ca0a3b8269442e689044fe", "Url": "https://api.github.com/repos/kriskrishna/spring-boot", "Date": "2016-11-11T17:59:55Z"},
{"Line": "=>513", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (!(getRegionProcessor().getProperties().containsKey(Data.ImageRegion.Subject.FORM_DATA))) setRegionProcessor(((org.witness.informacam.app.editors.filters.RegionProcesser) (rp.getDeclaredConstructor(java.lang.String.class, java.lang.String.class).newInstance(form.getString(Forms.TITLE), form.getString(Forms.DEF))))); } catch (java.lang.NullPointerException e) { setRegionProcessor(((org.witness.informacam.app.editors.filters.RegionProcesser) (rp.getDeclaredConstructor(java.lang.String.class, java.lang.String.class).newInstance(form.getString(Forms.TITLE), form.getString(Forms.DEF))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5276/buggy-version/src.org.witness.informacam.app.editors.image.ImageRegion.java", "BodyUseAPI": ["java.lang.reflect.Constructor<?>.newInstance(form.getString(Forms.TITLE),form.getString(Forms.DEF))", "org.json.JSONObject.getString(Forms.TITLE)", "org.json.JSONObject.getString(Forms.DEF)", "org.witness.informacam.app.editors.image.ImageRegion.getRegionProcessor()", "getRegionProcessor().getProperties().containsKey(Data.ImageRegion.Subject.FORM_DATA)", "org.witness.informacam.app.editors.image.ImageRegion.setRegionProcessor(((org.witness.informacam.app.editors.filters.RegionProcesser) (rp.getDeclaredConstructor(java.lang.String.class, java.lang.String.class).newInstance(form.getString(Forms.TITLE), form.getString(Forms.DEF)))))", "org.witness.informacam.app.editors.filters.RegionProcesser.getProperties()", "java.lang.Class<?>.getDeclaredConstructor(java.lang.Class,java.lang.Class)"], "Fixed commit": "200e5356d95bbb51cd0d53f03a9c4d928b50f859", "Url": "https://api.github.com/repos/guardianproject/InformaCam", "Date": "2013-02-16T19:37:54Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.widget.Toast.makeText(getActivity(), (((\"You spent \" + (formatAmount(((double) (expensesMap.values().toArray()[index]))))) + \" on \") + (java.lang.String.valueOf(expensesMap.keySet().toArray()[index]))), Toast.LENGTH_LONG).show(); } catch (java.lang.ArrayIndexOutOfBoundsException exception) { android.util.Log.e(com.papramaki.papramaki.ui.AnalysisFragment.TAG, \"Exception caught: \", exception); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3654/buggy-version/app.src.main.java.com.papramaki.papramaki.ui.AnalysisFragment.java", "BodyUseAPI": ["com.papramaki.papramaki.ui.AnalysisFragment.1.getActivity()", "java.lang.String.valueOf(java.lang.Object)", "java.util.LinkedHashMap<java.lang.String, java.lang.Double>.values()", "java.util.Set<java.lang.String>.toArray()", "android.widget.Toast.makeText(getActivity(),java.lang.String,Toast.LENGTH_LONG)", "com.papramaki.papramaki.ui.AnalysisFragment.1.formatAmount(java.lang.Object)", "java.util.LinkedHashMap<java.lang.String, java.lang.Double>.keySet()", "android.widget.Toast.makeText(getActivity(), (((\"You spent \" + (formatAmount(((double) (expensesMap.values().toArray()[index]))))) + \" on \") + (java.lang.String.valueOf(expensesMap.keySet().toArray()[index]))), Toast.LENGTH_LONG).show()", "java.util.Collection<java.lang.Double>.toArray()"], "Fixed commit": "3ea6f74784fdde5d5b8390a3d2ec26958a0fb755", "Url": "https://api.github.com/repos/MarcioPorto/papramaki", "Date": "2016-04-28T20:56:26Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return method.invoke(instance, convertedArgs); } catch (java.lang.reflect.InvocationTargetException e) { if ((e.getCause()) != null) { throw e.getCause(); }else { throw e.getTargetException(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/221/buggy-version/src.fitnesse.slim.fixtureInteraction.DefaultInteraction.java", "BodyUseAPI": ["java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object[])"], "Fixed commit": "486aacbb92e0f8c9d2c000e5be39d8abe70184b1", "Url": "https://api.github.com/repos/jruijgers/fitnesse", "Date": "2015-04-25T06:12:25Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { while (org.giiwa.demo.bean.Demo.exists(id)) { id = \"d\" + (org.giiwa.core.bean.UID.next(\"demo.id\")); } org.giiwa.core.bean.Bean.insert(v.set(X._ID, id), org.giiwa.demo.bean.Demo.class); return id; } catch (java.lang.Exception e1) { log.error(e1.getMessage(), e1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4546/buggy-version/src.main.webapp.modules.default.view.admin.demo.src.model.bean.Demo.java", "BodyUseAPI": ["org.giiwa.core.bean.Bean.insert(v.set(X._ID, id),java.lang.Class)", "org.giiwa.demo.bean.Demo.exists(java.lang.String)", "org.giiwa.core.bean.UID.next(java.lang.String)", "org.giiwa.demo.bean.V.set(X._ID,java.lang.String)"], "Fixed commit": "bee401fa5e52084e221c46677fed4917423b689f", "Url": "https://api.github.com/repos/giiwa/giiwa", "Date": "2016-06-18T06:00:17Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return org.giiwa.core.bean.Bean.exists(new com.mongodb.BasicDBObject(org.giiwa.core.bean.X._ID, id), org.giiwa.demo.bean.Demo.class); } catch (java.lang.Exception e1) { log.error(e1.getMessage(), e1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4546/buggy-version/src.main.webapp.modules.default.view.admin.demo.src.model.bean.Demo.java", "BodyUseAPI": ["org.giiwa.core.bean.Bean.exists(com.mongodb.BasicDBObject,java.lang.Class)"], "Fixed commit": "bee401fa5e52084e221c46677fed4917423b689f", "Url": "https://api.github.com/repos/giiwa/giiwa", "Date": "2016-06-18T06:00:17Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (org.eclipse.core.resources.IProject curProject : this.ChangedProjects) { io.sloeber.core.tools.Libraries.checkLibraries(curProject); } this.ChangedProjects.clear(); } catch (java.lang.Exception e) { io.sloeber.core.common.Common.log(new org.eclipse.core.runtime.Status(org.eclipse.core.runtime.IStatus.WARNING, io.sloeber.core.Activator.getId(), io.sloeber.core.managers.Messages.Failed_To_Add_Libraries, e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/375/buggy-version/io.sloeber.core.src.io.sloeber.core.listeners.IndexerListener.java", "BodyUseAPI": ["io.sloeber.core.tools.Libraries.checkLibraries(org.eclipse.core.resources.IProject)", "java.util.Set<org.eclipse.core.resources.IProject>.clear()"], "Fixed commit": "098b5e81d510a5ac95f131aa09e2dca82899222c", "Url": "https://api.github.com/repos/Sloeber/arduino-eclipse-plugin", "Date": "2017-05-04T00:15:55Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { logger.info(java.lang.String.format(\"Just test the bug ! %s\", jobProps)); jobProps = azkaban.utils.PropsUtils.resolveProps(jobProps); } catch (java.lang.Exception e) { logger.error(java.lang.String.format(\"What'a fucking day ! %s\", jobProps), e); } finally { logger.info(java.lang.String.format(\"Just show the changed props ! %s\", jobProps)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4795/buggy-version/azkaban-common.src.main.java.azkaban.jobtype.JobTypeManager.java", "BodyUseAPI": ["azkaban.utils.PropsUtils.resolveProps(azkaban.utils.Props)", "java.lang.String.format(java.lang.String,azkaban.utils.Props)", "org.apache.log4j.Logger.info(java.lang.String)"], "Fixed commit": "579918c831e68763c6a971a4e3d3cd31aefbfe88", "Url": "https://api.github.com/repos/lilonghua1987/azkaban", "Date": "2016-03-29T02:39:08Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { count = net.ripe.db.whois.query.acl.HazelcastPersonalObjectAccounting.counterMap.get(remoteAddress); } catch (com.hazelcast.core.OperationTimeoutException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8630/buggy-version/whois-query.src.main.java.net.ripe.db.whois.query.acl.HazelcastPersonalObjectAccounting.java", "BodyUseAPI": ["com.hazelcast.core.IMap<java.net.InetAddress, java.lang.Integer>.get(java.net.InetAddress)"], "Fixed commit": "a06fab1f7455a861b04c80d8d18ce7f76a2e8493", "Url": "https://api.github.com/repos/RIPE-NCC/whois", "Date": "2014-03-28T12:25:39Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { decode(((byte[]) (message.obj)), message.arg1, message.arg2); } catch (java.lang.IllegalArgumentException e) { timber.log.Timber.e(e); running = false; android.os.Looper.myLooper().quit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5897/buggy-version/app.src.main.java.piuk.blockchain.android.ui.zxing.DecodeHandler.java", "BodyUseAPI": ["piuk.blockchain.android.ui.zxing.DecodeHandler.decode(((byte[]) (message.obj)),message.arg1,message.arg2)"], "Fixed commit": "f756f19298ec18215de4c6b472d1e1e27587b05b", "Url": "https://api.github.com/repos/blockchain/My-Wallet-V3-Android", "Date": "2017-11-03T16:33:33Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { writeTask.cancel(); writeActive = false; initialWrite = false; } catch (java.lang.Exception e) { writeActive = false; initialWrite = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2486/buggy-version/src.main.java.SQL.regalowl.hyperconomy.SQLWrite.java", "BodyUseAPI": ["org.bukkit.scheduler.BukkitTask.cancel()"], "Fixed commit": "2612bdd2ee35edf2973f26c92e20c4c387436e60", "Url": "https://api.github.com/repos/RegalOwl/HyperConomy", "Date": "2013-02-14T00:27:15Z"},
{"Line": "=>441", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { pipedWriter.close(); } catch (java.io.IOException ioe2) { org.restlet.Context.getCurrentLogger().log(java.util.logging.Level.WARNING, \"Error while closing the pipe.\", ioe2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6674/buggy-version/modules.org.restlet.src.org.restlet.engine.io.BioUtils.java", "BodyUseAPI": ["java.io.PipedWriter.close()"], "Fixed commit": "01d719920e5c408c21e30942ff93a3f16c8c60d2", "Url": "https://api.github.com/repos/FantomJAC/restlet-framework-java", "Date": "2012-06-04T15:34:23Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { int filled = buffer.fill(getEntityChannel()); if (filled == (-1)) { setMessageState(MessageState.END); } } catch (java.io.IOException ioe) { if (getLogger().isLoggable(java.util.logging.Level.WARNING)) { getLogger().log(java.util.logging.Level.WARNING, \"Unable to read the entity\", ioe); } throw ioe; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6674/buggy-version/modules.org.restlet.src.org.restlet.engine.connector.OutboundWay.java", "BodyUseAPI": ["org.restlet.engine.io.Buffer.fill(java.nio.channels.ReadableByteChannel)", "org.restlet.engine.connector.OutboundWay.setMessageState(MessageState.END)", "org.restlet.engine.connector.OutboundWay.getEntityChannel()"], "Fixed commit": "01d719920e5c408c21e30942ff93a3f16c8c60d2", "Url": "https://api.github.com/repos/FantomJAC/restlet-framework-java", "Date": "2012-06-04T15:34:23Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { result = getStatusService().getRepresentation(status, request, response); } catch (java.lang.Exception e) { getLogger().log(java.util.logging.Level.WARNING, \"Unable to get the custom status representation\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6674/buggy-version/modules.org.restlet.src.org.restlet.engine.application.StatusFilter.java", "BodyUseAPI": ["org.restlet.engine.application.StatusFilter.getStatusService()", "org.restlet.service.StatusService.getRepresentation(org.restlet.data.Status,org.restlet.Request,org.restlet.Response)"], "Fixed commit": "01d719920e5c408c21e30942ff93a3f16c8c60d2", "Url": "https://api.github.com/repos/FantomJAC/restlet-framework-java", "Date": "2012-06-04T15:34:23Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((outputStream) != null) { outputStream.close(); } } catch (final java.io.IOException e) { org.simplejavamail.mailer.internal.socks.socks5server.SocksSession.LOGGER.error(e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7794/buggy-version/src.main.java.org.simplejavamail.mailer.internal.socks.socks5server.SocksSession.java", "BodyUseAPI": ["java.io.OutputStream.close()"], "Fixed commit": "1d96c01b2e511d9c9c2f87135e5c28555aaa002c", "Url": "https://api.github.com/repos/bbottema/simple-java-mail", "Date": "2016-07-03T17:16:43Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (((socket) != null) && (!(socket.isClosed()))) { org.simplejavamail.mailer.internal.socks.socks5server.SocksSession.LOGGER.trace(\"closing client socket\"); socket.close(); } } catch (final java.io.IOException e) { org.simplejavamail.mailer.internal.socks.socks5server.SocksSession.LOGGER.error(e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7794/buggy-version/src.main.java.org.simplejavamail.mailer.internal.socks.socks5server.SocksSession.java", "BodyUseAPI": ["org.slf4j.Logger.trace(java.lang.String)", "java.net.Socket.close()", "java.net.Socket.isClosed()"], "Fixed commit": "1d96c01b2e511d9c9c2f87135e5c28555aaa002c", "Url": "https://api.github.com/repos/bbottema/simple-java-mail", "Date": "2016-07-03T17:16:43Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { @java.lang.SuppressWarnings(\"unchecked\") final java.util.List<com.oasisfeng.nevo.StatusBarNotificationEvo> notifications = mController.getActiveNotifications(mWrapper).getList(); return notifications.toArray(new com.oasisfeng.nevo.StatusBarNotificationEvo[notifications.size()]); } finally { android.os.Binder.restoreCallingIdentity(identity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4357/buggy-version/sdk.src.main.java.com.oasisfeng.nevo.decorator.NevoDecoratorService.java", "BodyUseAPI": ["mController.getActiveNotifications(mWrapper).getList()", "java.util.List<com.oasisfeng.nevo.StatusBarNotificationEvo>.toArray(com.oasisfeng.nevo.StatusBarNotificationEvo[])", "java.util.List<com.oasisfeng.nevo.StatusBarNotificationEvo>.size()", "com.oasisfeng.nevo.engine.INevoController.getActiveNotifications(com.oasisfeng.nevo.decorator.NevoDecoratorService.INevoDecoratorWrapper)"], "Fixed commit": "f48b0384e2c2595bb4a43a4896d06f5fbc6f0dbb", "Url": "https://api.github.com/repos/Nevolution/sdk", "Date": "2016-01-23T16:26:43Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { json.put(\"searchKey\", searchKey); json.put(\"searchOption\", searchOption); } catch (org.json.JSONException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6115/buggy-version/src.com.example.smalllibrary.SearchBooksActivity.java", "BodyUseAPI": ["org.json.JSONObject.put(java.lang.String,java.lang.String)", "org.json.JSONObject.put(java.lang.String,java.lang.String)"], "Fixed commit": "18e081add216fa9219951e2a7dd9d1f309b776da", "Url": "https://api.github.com/repos/pigulolkm/SmallLibrary", "Date": "2014-04-19T14:54:41Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.nio.file.attribute.FileTime newLastModifiedTime = java.nio.file.attribute.FileTime.fromMillis(reconstructedFileVersion.getLastModified().getTime()); java.nio.file.Files.setLastModifiedTime(reconstructedFilesAtFinalLocation.toPath(), newLastModifiedTime); } catch (java.io.IOException e) { org.syncany.operations.down.actions.FileSystemAction.logger.log(java.util.logging.Level.WARNING, ((\"Warning: Could not set last modified date for file \" + reconstructedFilesAtFinalLocation) + \"; Ignoring error.\"), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4051/buggy-version/syncany-lib.src.main.java.org.syncany.operations.down.actions.FileSystemAction.java", "BodyUseAPI": ["java.nio.file.attribute.FileTime.fromMillis(reconstructedFileVersion.getLastModified().getTime())", "org.syncany.database.FileVersion.getLastModified()", "java.nio.file.Files.setLastModifiedTime(java.nio.file.Path,java.nio.file.attribute.FileTime)", "java.io.File.toPath()", "reconstructedFileVersion.getLastModified().getTime()"], "Fixed commit": "83a2b945e1f9bc088fb1cfa831fa222f8c2b1016", "Url": "https://api.github.com/repos/syncany/syncany", "Date": "2015-02-13T06:10:45Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { br.close(); } catch (java.io.IOException e) { throw new java.lang.IllegalArgumentException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5730/buggy-version/src.com.pwnetics.languagemodel.arpa.ARPAModelLoader.java", "BodyUseAPI": ["java.io.BufferedReader.close()"], "Fixed commit": "31d8dd45e14ba990620b8a44af2b4e38a2c57ba5", "Url": "https://api.github.com/repos/romanows/LanguageModeling", "Date": "2012-12-25T05:36:51Z"},
{"Line": "=>1114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.jnativehook.GlobalScreen.unregisterNativeHook(); } catch (org.jnativehook.NativeHookException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/839/buggy-version/src.sleigher.zombie.ZombieSleigher.java", "BodyUseAPI": ["org.jnativehook.GlobalScreen.unregisterNativeHook()"], "Fixed commit": "8764bf403c8247216bab032f479fa4872fbf7067", "Url": "https://api.github.com/repos/Moneil97/Zombie-Sleigher", "Date": "2015-11-26T08:31:15Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return driver.switchTo().alert(); } catch (org.openqa.selenium.NoAlertPresentException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2742/buggy-version/src.com.dsc.selenium.Browser.java", "BodyUseAPI": ["driver.switchTo().alert()", "org.openqa.selenium.WebDriver.switchTo()"], "Fixed commit": "b0666213ce6062d68da862e792451c4b1bf7b98c", "Url": "https://api.github.com/repos/AlexLuya/DSCTest", "Date": "2017-01-11T06:25:01Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { Models.Faciliteit selected = faciliteiten.get(TableFaciliteit.getSelectedRow()); new GUI.FaciliteitWijzigen(selected).setVisible(true); this.dispose(); } catch (java.lang.Exception ex) { javax.swing.JOptionPane.showMessageDialog(this, \"Selecteer een faciliteit\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2115/buggy-version/src.GUI.FaciliteitBeheer.java", "BodyUseAPI": ["GUI.FaciliteitBeheer.dispose()", "javax.swing.JTable.getSelectedRow()", "GUI.FaciliteitWijzigen.setVisible(boolean)", "java.util.ArrayList<Models.Faciliteit>.get(int)"], "Fixed commit": "9d24f39511793b0d90ca81ac60703c536a6e13c5", "Url": "https://api.github.com/repos/arjan-do/Project", "Date": "2013-01-24T22:02:22Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.knime.core.node.util.CheckUtils.checkDestinationDirectory(m_directory.getStringValue()); } catch (org.knime.core.node.InvalidSettingsException e) { if ((!(e.getMessage().endsWith(\"does not exist\"))) || (!(m_forceMkdir.getBooleanValue()))) { throw e; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2180/buggy-version/org.knime.knip.io.src.org.knime.knip.io.nodes.imgwriter2.ImgWriter2NodeModel.java", "BodyUseAPI": ["org.knime.core.node.defaultnodesettings.SettingsModelString.getStringValue()", "org.knime.core.node.util.CheckUtils.checkDestinationDirectory(m_directory.getStringValue())"], "Fixed commit": "b8dc6c8df6e5cd48716447448d27315998e374c7", "Url": "https://api.github.com/repos/knime-ip/knip", "Date": "2015-05-25T13:33:22Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.os.Looper.prepare(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8175/buggy-version/src.com.klinker.android.send_message.Transaction.java", "BodyUseAPI": ["android.os.Looper.prepare()"], "Fixed commit": "c1ef42f00417247744d89d51fbe72cb8d4564168", "Url": "https://api.github.com/repos/klinker41/android-smsmms", "Date": "2013-09-12T16:10:36Z"},
{"Line": "=>510", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.os.Looper.prepare(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8175/buggy-version/src.com.klinker.android.send_message.Transaction.java", "BodyUseAPI": ["android.os.Looper.prepare()"], "Fixed commit": "c1ef42f00417247744d89d51fbe72cb8d4564168", "Url": "https://api.github.com/repos/klinker41/android-smsmms", "Date": "2013-09-12T16:10:36Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { cur_business = ((org.json.simple.JSONObject) (businesses.get(i))); } catch (java.lang.RuntimeException pe) { return list; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2068/buggy-version/EpiphanyTrip.src.YelpQuery.java", "BodyUseAPI": ["org.json.simple.JSONArray.get(int)"], "Fixed commit": "58315a66cb4db8080980ff38553939004c72ac96", "Url": "https://api.github.com/repos/jenny350026/HackDFW", "Date": "2015-03-01T17:15:53Z"},
{"Line": "=>477", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { resultingPosition.doMove(move); } catch (chesspresso.move.IllegalMoveException e) { return \"<illegal move>\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4920/buggy-version/src.main.java.chesspresso.move.Move.java", "BodyUseAPI": ["chesspresso.position.Position.doMove(short)"], "Fixed commit": "1829090c0c6c75aee21fb5a82d8a35bec7e35c88", "Url": "https://api.github.com/repos/loloof64/Chesspresso", "Date": "2017-02-07T11:10:50Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.io.File del = new java.io.File(((((com.jpii.navalbattle.util.FileUtils.getSavingDirectory().getAbsolutePath()) + \"\\\\saves\\\\\") + name) + \"\\\\\")); del.delete(); } catch (java.lang.Throwable t) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/285/buggy-version/src.com.jpii.navalbattle.io.NavalBattleIO.java", "BodyUseAPI": ["com.jpii.navalbattle.util.FileUtils.getSavingDirectory().getAbsolutePath()", "com.jpii.navalbattle.util.FileUtils.getSavingDirectory()", "java.io.File.delete()"], "Fixed commit": "ac3ad266b9842bb142045ecb26a9aaa13f3ab852", "Url": "https://api.github.com/repos/JPII/NavalBattle", "Date": "2013-04-25T01:03:08Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { result = java.net.URLEncoder.encode(agentID.toString(), \"UTF-8\"); } catch (java.io.UnsupportedEncodingException e) { io.coala.eve.EveUtil.LOG.error(\"Failed to create EVE URL\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8682/buggy-version/coala-adapters.coala-eve2-adapter.src.main.java.io.coala.eve.EveUtil.java", "BodyUseAPI": ["io.coala.agent.AgentID.toString()", "java.net.URLEncoder.encode(agentID.toString(),java.lang.String)"], "Fixed commit": "984e8ef95982df034fcf67369609b811872cef01", "Url": "https://api.github.com/repos/krevelen/coala", "Date": "2014-09-22T13:07:21Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return ((((res.substring(0, 4)) + \" - \") + (res.substring(4, 6))) + \" - \") + (res.substring(6, res.length())); } catch (java.lang.Exception exception) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/559/buggy-version/src.main.java.com.udl.softarch.randomfilms.models.Film.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()", "java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)"], "Fixed commit": "2f66132ec6f7bf85df429f96d282d6c95d3aad5e", "Url": "https://api.github.com/repos/acp13udl/randomfilms", "Date": "2015-06-08T17:19:37Z"},
{"Line": "=>1098", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((messageArea) != null) { w = this.messageArea.getText(); if (w != null) { if ((w.length()) > 10000) w = w.substring(5000); } } } catch (java.lang.Exception e) { if (x != null) java.lang.System.out.println(((\"writeMessage(\" + x) + \") error\")); java.lang.System.out.println(e.toString()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8005/buggy-version/src.main.java.org.yamaLab.pukiwikiCommunicator.FukuyamaWB4Pi.WikiBotV1Gui.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int)", "javax.swing.JTextArea.getText()"], "Fixed commit": "d0963380e84b8b940e0ef0dc35a09bc7be6fa6e2", "Url": "https://api.github.com/repos/takashiyamanoue/FukuyamaWB4Pi", "Date": "2016-11-28T00:38:15Z"},
{"Line": "=>518", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { is_mac = org.cytoscape.util.swing.LookAndFeelUtil.isMac(); } catch (final java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1744/buggy-version/core-task-impl.src.main.java.org.cytoscape.task.internal.CyActivator.java", "BodyUseAPI": ["org.cytoscape.util.swing.LookAndFeelUtil.isMac()"], "Fixed commit": "bc8a62078f30a7a62ae1ffa45a39633d36225650", "Url": "https://api.github.com/repos/cytoscape/cytoscape-impl", "Date": "2016-03-10T22:36:44Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (path.endsWith(\"deleteCouponById\")) { int id = java.lang.Integer.parseInt(request.getParameter(\"couponId\")); java.lang.System.out.println(id); il.ac.shenkar.model.Coupon coupon = ((il.ac.shenkar.model.Coupon) (dao.getObject(il.ac.shenkar.model.Coupon.class, id))); dao.deleteObject(coupon); request.setAttribute(\"coupons\", dao.getObjectsList(il.ac.shenkar.model.Coupon.class)); dispatcher = getServletContext().getRequestDispatcher(\"/coupons.jsp\"); }else if (path.endsWith(\"deleteCategoryById\")) { int id = java.lang.Integer.parseInt(request.getParameter(\"categoryId\")); java.lang.System.out.println(id); il.ac.shenkar.model.Category category = ((il.ac.shenkar.model.Category) (dao.getObject(il.ac.shenkar.model.Category.class, id))); dao.deleteObject(category); request.setAttribute(\"category\", dao.getObjectsList(il.ac.shenkar.model.Category.class)); dispatcher = getServletContext().getRequestDispatcher(\"/addCategory.jsp\"); } dispatcher.forward(request, response); } catch (il.ac.shenkar.model.SystemException e) { e.printStackTrace(); dispatcher = getServletContext().getRequestDispatcher(\"/error.jsp\"); dispatcher.forward(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6178/buggy-version/src.il.ac.shenkar.controller.Controller.java", "BodyUseAPI": ["il.ac.shenkar.model.IDataAccess.getObject(java.lang.Class,int)", "il.ac.shenkar.model.IDataAccess.deleteObject(il.ac.shenkar.model.Coupon)", "javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,dao.getObjectsList(il.ac.shenkar.model.Coupon.class))", "java.lang.Integer.parseInt(request.getParameter(\"couponId\"))", "java.lang.Integer.parseInt(request.getParameter(\"categoryId\"))", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "il.ac.shenkar.model.IDataAccess.getObjectsList(java.lang.Class)", "il.ac.shenkar.model.IDataAccess.getObjectsList(java.lang.Class)", "il.ac.shenkar.model.IDataAccess.deleteObject(il.ac.shenkar.model.Category)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "java.io.PrintStream.println(int)", "java.lang.String.endsWith(java.lang.String)", "il.ac.shenkar.controller.Controller.getServletContext()", "getServletContext().getRequestDispatcher(java.lang.String)", "javax.servlet.RequestDispatcher.forward(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "java.lang.String.endsWith(java.lang.String)", "il.ac.shenkar.model.IDataAccess.getObject(java.lang.Class,int)", "getServletContext().getRequestDispatcher(java.lang.String)", "java.io.PrintStream.println(int)", "javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,dao.getObjectsList(il.ac.shenkar.model.Category.class))", "il.ac.shenkar.controller.Controller.getServletContext()"], "Fixed commit": "8ee720fc32d5f4ead24161d7dbf620312a8b14c2", "Url": "https://api.github.com/repos/tomcohen/CouponSystem", "Date": "2015-01-29T11:33:27Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { out.write(org.usfirst.frc.team1360.server.util.IOUtils.Int32Big(java.lang.Float.floatToRawIntBits((((float) ((sensorInput.getClimberFrontCurrent()) + (sensorInput.getClimberBackCurrent()))) / 2)))); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1408/buggy-version/Steamworks.src.org.usfirst.frc.team1360.server.components.ClimberCurrentDisplayComponent.java", "BodyUseAPI": ["org.usfirst.frc.team1360.server.util.IOUtils.Int32Big(int)", "java.io.OutputStream.write(org.usfirst.frc.team1360.server.util.IOUtils.Int32Big(java.lang.Float.floatToRawIntBits((((float) ((sensorInput.getClimberFrontCurrent()) + (sensorInput.getClimberBackCurrent()))) / 2))))", "java.lang.Float.floatToRawIntBits(float)", "org.usfirst.frc.team1360.robot.IO.SensorInput.getClimberFrontCurrent()", "org.usfirst.frc.team1360.robot.IO.SensorInput.getClimberBackCurrent()"], "Fixed commit": "30976f92800323be4f49a105d6035919c7ea4054", "Url": "https://api.github.com/repos/FRC1360/Steamworks2017", "Date": "2017-01-31T00:48:13Z"},
{"Line": "=>851", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.platformPersistence.storeDataElement(org.terracotta.passthrough.PassthroughServerProcess.ENTITIES_FILE_NAME, this.persistedEntitiesByConsumerIDMap); } catch (java.io.IOException e) { org.terracotta.passthrough.Assert.unexpected(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/3575/buggy-version/passthrough-server.src.main.java.org.terracotta.passthrough.PassthroughServerProcess.java", "BodyUseAPI": ["org.terracotta.persistence.IPlatformPersistence.storeDataElement(java.lang.String,java.util.HashMap<java.lang.Long, org.terracotta.passthrough.PassthroughServerProcess.EntityData>)"], "Fixed commit": "32966074c1402a756b732c02ed8ae9500d08a04d", "Url": "https://api.github.com/repos/ljacomet/tc-passthrough-testing", "Date": "2017-07-19T09:36:05Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return new com.github.steveash.bushwhacker.RuleExceptionHandler(makePredicate(rule), makeAction(rule)); } catch (java.lang.RuntimeException e) { throw new com.github.steveash.bushwhacker.exception.IllegalBushwhackerRulesException((\"Cannot build handler for bushwhacker rule \" + rule), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/7185/buggy-version/bushwhacker.src.main.java.com.github.steveash.bushwhacker.rules.HandlerMaker.java", "BodyUseAPI": ["com.github.steveash.bushwhacker.rules.HandlerMaker.makePredicate(XmlRules.ExceptionRule)", "com.github.steveash.bushwhacker.rules.HandlerMaker.makeAction(XmlRules.ExceptionRule)"], "Fixed commit": "2afde3b1c462b73482ae3739b75441906a0d4df3", "Url": "https://api.github.com/repos/steveash/bushwhacker", "Date": "2014-11-24T16:31:25Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return sa.getDeclarationsInScope(offset, ScopeAnalyzer.METHODS); } catch (java.lang.NullPointerException e) { throw new edu.cmu.cs.syzygy.NotImplementedException(\"Scope Analyzer bug\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/7521/buggy-version/Syzygy.src.edu.cmu.cs.syzygy.VariableFinder.java", "BodyUseAPI": ["org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer.getDeclarationsInScope(int,ScopeAnalyzer.METHODS)"], "Fixed commit": "ca397d9ea240b0fb4b0bc6aa8e786c6425077314", "Url": "https://api.github.com/repos/cyrus-/syzygy", "Date": "2013-10-28T02:27:56Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { outName = com.dexesttp.hkxpack.resources.RandomUtils.makeFromFileName(fileName); } catch (java.lang.Exception e) { java.lang.System.err.println(\"Invalid filename !\"); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5607/buggy-version/src.com.dexesttp.hkxpack.view.ConsoleView.java", "BodyUseAPI": ["com.dexesttp.hkxpack.resources.RandomUtils.makeFromFileName(java.lang.String)"], "Fixed commit": "563163022998a7a28a6e0b9a41710bf3028e845f", "Url": "https://api.github.com/repos/Dexesttp/hkxpack", "Date": "2016-01-18T18:18:05Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { e = handle.didPixelChange(x, y); } catch (org.skife.jdbi.v2.exceptions.NoResultsException exp) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2605/buggy-version/src.main.java.space.pxls.data.Database.java", "BodyUseAPI": ["space.pxls.data.DAO.didPixelChange(int,int)"], "Fixed commit": "3cdd64ac15613739336bb5c528c8cd3efc1281aa", "Url": "https://api.github.com/repos/xSke/Pxls", "Date": "2017-05-09T00:23:05Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { validate(client.getSession().execute(stmt)); } catch (java.lang.ClassCastException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8528/buggy-version/tools.stress.src.org.apache.cassandra.stress.operations.userdefined.SchemaInsert.java", "BodyUseAPI": ["org.apache.cassandra.stress.util.JavaDriverClient.getSession()", "client.getSession().execute(com.datastax.driver.core.Statement)", "org.apache.cassandra.stress.operations.userdefined.SchemaInsert.JavaDriverRun.validate(client.getSession().execute(stmt))"], "Fixed commit": "a8052d7c812fd232d7a249aa5a72afdeaa9f4583", "Url": "https://api.github.com/repos/pallavi510/cassandra", "Date": "2014-10-06T14:36:41Z"},
{"Line": "=>732", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { popup.show(); } catch (java.lang.Exception e) { org.matrix.androidsdk.util.Log.e(im.vector.adapters.VectorMessagesAdapter.LOG_TAG, (\" popup.show failed \" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5142/buggy-version/vector.src.main.java.im.vector.adapters.VectorMessagesAdapter.java", "BodyUseAPI": ["android.widget.PopupMenu.show()"], "Fixed commit": "21698e94e4799fb4a2ff04af89d79ed0acd245d0", "Url": "https://api.github.com/repos/vector-im/riot-android", "Date": "2017-01-23T07:26:00Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { isIntermediateMessage = xPathPayloadMappingKeyExtractor.extractMappingKey(message).equals(context.replaceDynamicContentInString(value)); } catch (java.lang.RuntimeException e) { com.consol.citrus.simulator.correlation.XPathPayloadCorrelationHandler.LOG.debug(\"Error checking whether message({}) is an intermediate message: {}\", message.getId(), e.getMessage()); isIntermediateMessage = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8633/buggy-version/simulator-starter.src.main.java.com.consol.citrus.simulator.correlation.XPathPayloadCorrelationHandler.java", "BodyUseAPI": ["xPathPayloadMappingKeyExtractor.extractMappingKey(message).equals(context.replaceDynamicContentInString(value))", "com.consol.citrus.context.TestContext.replaceDynamicContentInString(java.lang.String)", "com.consol.citrus.endpoint.adapter.mapping.XPathPayloadMappingKeyExtractor.extractMappingKey(com.consol.citrus.message.Message)"], "Fixed commit": "c3e3501b73ddc8dab3443658b57e76b8ed0756ae", "Url": "https://api.github.com/repos/citrusframework/citrus-simulator", "Date": "2017-12-20T10:38:56Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { productService.checkIfProductInStock(addProduct, quantity); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8430/buggy-version/src.main.java.com.acme.ecommerce.web.controller.CartController.java", "BodyUseAPI": ["com.acme.ecommerce.service.ProductService.checkIfProductInStock(com.acme.ecommerce.domain.Product,int)"], "Fixed commit": "ed80657d88180ec4a8ca5e36ce431d7122fcaa53", "Url": "https://api.github.com/repos/dbriesz/e-commerce-shopping-cart", "Date": "2017-03-09T00:26:04Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { productService.checkIfProductInStock(updateProduct, newQuantity); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8430/buggy-version/src.main.java.com.acme.ecommerce.web.controller.CartController.java", "BodyUseAPI": ["com.acme.ecommerce.service.ProductService.checkIfProductInStock(com.acme.ecommerce.domain.Product,int)"], "Fixed commit": "ed80657d88180ec4a8ca5e36ce431d7122fcaa53", "Url": "https://api.github.com/repos/dbriesz/e-commerce-shopping-cart", "Date": "2017-03-09T00:26:04Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { stream.close(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/3510/buggy-version/src.main.java.info.deskchan.gui_javafx.SingleImageSkin.java", "BodyUseAPI": ["java.io.InputStream.close()"], "Fixed commit": "896e6113563b62acb6fe570ce0a86d952020f8cc", "Url": "https://api.github.com/repos/kozalosev/DeskChanJava", "Date": "2017-05-07T08:59:37Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { listCompany.setRowSelectionInterval(0, 0); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6535/buggy-version/AGCOOPSys.src.agcoopsys.viewCompany.java", "BodyUseAPI": ["javax.swing.JTable.setRowSelectionInterval(int,int)"], "Fixed commit": "7908a0684ca2cd65783f4d2e5f73b95ed20dacde", "Url": "https://api.github.com/repos/Velvette/AGCoopSys", "Date": "2014-05-25T09:30:02Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { units = com.ptrf.android.weather.util.UnitsOfMeasure.valueOf(unitsConfigured); } catch (java.lang.Exception e) { units = com.ptrf.android.weather.util.UnitsOfMeasure.Both; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6970/buggy-version/AndroidWeather.src.com.ptrf.android.weather.util.UnitsOfMeasure.java", "BodyUseAPI": ["com.ptrf.android.weather.util.UnitsOfMeasure.valueOf(java.lang.String)"], "Fixed commit": "2e6390c1c983444f6cd3d21ceb723a1ba27b042f", "Url": "https://api.github.com/repos/peterfomin/android", "Date": "2014-03-12T00:11:06Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (labelNode.resolve()) { labelNodes.add(labelNode); } } catch (eu.delving.x3ml.X3MLEngine ex) { eu.delving.x3ml.X3MLEngine.exceptionMessagesList += ex.toString(); java.lang.System.out.println((\"ERROR FOUND: \" + (ex.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5539/buggy-version/src.main.java.eu.delving.x3ml.engine.EntityResolver.java", "BodyUseAPI": ["eu.delving.x3ml.engine.EntityResolver.LabelNode.resolve()", "java.util.List<eu.delving.x3ml.engine.EntityResolver.LabelNode>.add(eu.delving.x3ml.engine.EntityResolver.LabelNode)"], "Fixed commit": "a17aa1d40bb8425b0664d3fd4a51dfddf7cbf8db", "Url": "https://api.github.com/repos/isl/x3ml", "Date": "2015-12-09T14:11:36Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.hazelcast.config.Config hzConfig = hazelcastInstance.getConfig(); java.lang.String sessionTTL = getParam(\"session-ttl-seconds\"); if (sessionTTL != null) { com.hazelcast.config.MapConfig mapConfig = new com.hazelcast.config.MapConfig(clusterMapName); mapConfig.setTimeToLiveSeconds(java.lang.Integer.valueOf(sessionTTL)); hzConfig.addMapConfig(mapConfig); } } catch (java.lang.UnsupportedOperationException ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5217/buggy-version/hazelcast-wm.src.main.java.com.hazelcast.web.WebFilter.java", "BodyUseAPI": ["com.hazelcast.config.MapConfig.setTimeToLiveSeconds(java.lang.Integer)", "com.hazelcast.web.HazelcastInstance.getConfig()", "com.hazelcast.config.Config.addMapConfig(com.hazelcast.config.MapConfig)", "com.hazelcast.web.WebFilter.getParam(java.lang.String)", "java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "9d2c05732fb7bd81e2ad3f46b9ec26a8b37771ff", "Url": "https://api.github.com/repos/pveentjer/hazelcast", "Date": "2013-07-18T11:44:38Z"},
{"Line": "=>1177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { rule2 = CSG.REDUCE_RULES.lower(CSG.REDUCE_RULES.higher(rule)); CSG.LAST_REDUCE_RULES.add(rule2); } catch (java.lang.NullPointerException npe) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5944/buggy-version/src.org.nschmidt.ldparteditor.data.GDataCSG.java", "BodyUseAPI": ["CSG.LAST_REDUCE_RULES.add(org.nschmidt.csg.ReduceRule)", "CSG.REDUCE_RULES.higher(org.nschmidt.csg.ReduceRule)", "CSG.REDUCE_RULES.lower(CSG.REDUCE_RULES.higher(rule))"], "Fixed commit": "9291b0e3849212ad600b6858b5aa75e1f2b6dfa0", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2015-09-25T07:42:38Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ug = new ch.hsr.zebrastreifensafari.gui.update.UpdateGUI(ch.hsr.zebrastreifensafari.service.DataServiceLoader.getZebraData().getUsers(), model.getRatingById(java.lang.Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString())), this); } catch (java.lang.ArrayIndexOutOfBoundsException aioobe) { ug = new ch.hsr.zebrastreifensafari.gui.update.UpdateGUI(ch.hsr.zebrastreifensafari.service.DataServiceLoader.getZebraData().getUsers(), model.getRatingById(java.lang.Integer.parseInt(jTable1.getValueAt(0, 0).toString())), this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4467/buggy-version/src.ch.hsr.zebrastreifensafari.gui.view.View.java", "BodyUseAPI": ["javax.swing.JTable.getValueAt(int,int)", "javax.swing.JTable.getSelectedRow()", "ch.hsr.zebrastreifensafari.model.Model.getRatingById(int)", "java.lang.Integer.parseInt(java.lang.String)", "ch.hsr.zebrastreifensafari.service.DataServiceLoader.getZebraData()", "ch.hsr.zebrastreifensafari.service.DataServiceLoader.getZebraData().getUsers()", "java.lang.Object.toString()"], "Fixed commit": "d339b056c67da473bfe7ce664249d1284762205f", "Url": "https://api.github.com/repos/geometalab/Zebrastreifen-Safari", "Date": "2015-10-09T13:56:56Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.alta189.cyborg.perms.PermissionManager.saveThread.interrupt(); } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/7881/buggy-version/src.main.java.com.alta189.cyborg.perms.PermissionManager.java", "BodyUseAPI": ["com.alta189.cyborg.perms.SaveThread.interrupt()"], "Fixed commit": "46706e5e62fc14c61be7092ae1a1c10ee39379da", "Url": "https://api.github.com/repos/CyborgDev/CyborgPerms", "Date": "2012-06-03T03:47:39Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { region.click(Common.CLOSE); } catch (java.lang.Exception e) { renwu.saveScreenCapture(\".\", \"renwu\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/194/buggy-version/src.main.java.com.peace.auto.bl.task.RenWu.java", "BodyUseAPI": ["org.sikuli.script.Region.click(Common.CLOSE)"], "Fixed commit": "dccebf8ef0738a97a86a20b1f5dd176611e866ec", "Url": "https://api.github.com/repos/peace0phmind/blauto", "Date": "2016-06-15T06:39:57Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { t.join(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6475/buggy-version/src.main.java.fr.utbm.to52.smarthome.controller.SocketInput.java", "BodyUseAPI": ["java.lang.Thread.join()"], "Fixed commit": "5e644bc13b0d4cb5bb10e83d59e39537a90bbff6", "Url": "https://api.github.com/repos/alexgus/SmartHome-Server", "Date": "2015-08-05T17:40:53Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { tag2Remove = this.getSemanticTag(tag.getSI()); } catch (net.sharkfw.knowledgeBase.SharkKBException ex) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/9024/buggy-version/src.java.j2se_android.net.sharkfw.knowledgeBase.filesystem.FSGenericTagStorage.java", "BodyUseAPI": ["net.sharkfw.knowledgeBase.filesystem.FSGenericTagStorage<ST>.getSemanticTag(tag.getSI())", "ST.getSI()"], "Fixed commit": "f15c21430503e00f3b83c8682b0191aca1a26a4d", "Url": "https://api.github.com/repos/SharedKnowledge/SharkFW", "Date": "2014-03-10T09:42:40Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.lechucksoftware.proxy.proxysettings.utils.UIUtils.showError(ctx, ctx.getResources().getString(error)); } catch (java.lang.Exception e) { com.lechucksoftware.proxy.proxysettings.utils.EventReportingUtils.sendException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5829/buggy-version/proxy-settings.src.main.java.com.lechucksoftware.proxy.proxysettings.utils.UIUtils.java", "BodyUseAPI": ["com.lechucksoftware.proxy.proxysettings.utils.UIUtils.showError(android.content.Context,ctx.getResources().getString(error))", "ctx.getResources().getString(int)", "android.content.Context.getResources()"], "Fixed commit": "7bf89a7d58cafa1ba2184503927aab0cdc508bf3", "Url": "https://api.github.com/repos/shouldit/android-proxy", "Date": "2014-04-06T08:46:12Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (!(android.text.TextUtils.isEmpty(errorMessage))) { new android.app.AlertDialog.Builder(ctx).setTitle(R.string.proxy_error).setMessage(errorMessage).setPositiveButton(R.string.proxy_error_dismiss, null).show(); } } catch (java.lang.Exception e) { com.lechucksoftware.proxy.proxysettings.utils.EventReportingUtils.sendException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5829/buggy-version/proxy-settings.src.main.java.com.lechucksoftware.proxy.proxysettings.utils.UIUtils.java", "BodyUseAPI": ["new android.app.AlertDialog.Builder(ctx).setTitle(R.string.proxy_error).setMessage(java.lang.String)", "new android.app.AlertDialog.Builder(ctx).setTitle(R.string.proxy_error).setMessage(errorMessage).setPositiveButton(R.string.proxy_error_dismiss,<nulltype>)", "new android.app.AlertDialog.Builder(ctx).setTitle(R.string.proxy_error).setMessage(errorMessage).setPositiveButton(R.string.proxy_error_dismiss, null).show()", "android.text.TextUtils.isEmpty(java.lang.String)", "android.app.AlertDialog.Builder.setTitle(R.string.proxy_error)"], "Fixed commit": "7bf89a7d58cafa1ba2184503927aab0cdc508bf3", "Url": "https://api.github.com/repos/shouldit/android-proxy", "Date": "2014-04-06T08:46:12Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.writer.write(localIndexUpdates, true); } catch (java.lang.Throwable t) { java.lang.String msg = \"Failed to update index with entries:\" + localIndexUpdates; org.apache.phoenix.index.PhoenixTransactionalIndexer.LOG.error(msg, t); org.apache.phoenix.util.ServerUtil.throwIOException(msg, t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3119/buggy-version/phoenix-core.src.main.java.org.apache.phoenix.index.PhoenixTransactionalIndexer.java", "BodyUseAPI": ["org.apache.phoenix.hbase.index.write.IndexWriter.write(java.util.Collection<org.apache.hadoop.hbase.util.Pair<org.apache.hadoop.hbase.client.Mutation, byte[]>>,boolean)"], "Fixed commit": "365133c183f17360350a26fd061ee4dc09768760", "Url": "https://api.github.com/repos/apache/phoenix", "Date": "2016-06-17T15:57:06Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.writer.write(localIndexUpdates, true); } catch (java.lang.Throwable t) { java.lang.String msg = \"Failed to update index with entries:\" + localIndexUpdates; org.apache.phoenix.index.PhoenixTransactionalIndexer.LOG.error(msg, t); org.apache.phoenix.util.ServerUtil.throwIOException(msg, t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3119/buggy-version/phoenix-core.src.main.java.org.apache.phoenix.index.PhoenixTransactionalIndexer.java", "BodyUseAPI": ["org.apache.phoenix.hbase.index.write.IndexWriter.write(java.util.Collection<org.apache.hadoop.hbase.util.Pair<org.apache.hadoop.hbase.client.Mutation, byte[]>>,boolean)"], "Fixed commit": "365133c183f17360350a26fd061ee4dc09768760", "Url": "https://api.github.com/repos/apache/phoenix", "Date": "2016-06-17T15:57:06Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { updateInterval = java.lang.Integer.parseInt(android.preference.PreferenceManager.getDefaultSharedPreferences(this).getString(\"updateIntervall\", st.alr.mqttitude.support.Defaults.VALUE_UPDATE_INTERVAL)); updateInterval = (updateInterval < 1) ? 1 : updateInterval; } catch (java.lang.NumberFormatException e) { updateInterval = 30; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8146/buggy-version/apps.android.src.st.alr.mqttitude.App.java", "BodyUseAPI": ["android.preference.PreferenceManager.getDefaultSharedPreferences(this).getString(java.lang.String,st.alr.mqttitude.support.Defaults.VALUE_UPDATE_INTERVAL)", "java.lang.Integer.parseInt(android.preference.PreferenceManager.getDefaultSharedPreferences(this).getString(\"updateIntervall\", st.alr.mqttitude.support.Defaults.VALUE_UPDATE_INTERVAL))", "android.preference.PreferenceManager.getDefaultSharedPreferences(st.alr.mqttitude.App)"], "Fixed commit": "eda5f3f45c44acb8e0321018cd8e44812d7aaa3d", "Url": "https://api.github.com/repos/iandl/mqttitude", "Date": "2013-07-28T20:13:12Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (!(levelsUnlocked[(levelNum - 1)])) { levelsUnlocked[(levelNum - 1)] = true; levelsPanel.add(levels[(levelNum - 1)]); repaint(); } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8363/buggy-version/TitlePanel.java", "BodyUseAPI": ["TitlePanel.repaint()", "javax.swing.JPanel.add(levels[(levelNum - 1)])"], "Fixed commit": "a48ff3f5e10bedd33eba337cf5bcd0b3280be5ee", "Url": "https://api.github.com/repos/t-wang01/SpeedSorter", "Date": "2017-06-08T19:46:29Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { while ((ch) != (newLine)) { ch = input.nextChar(); } } catch (com.univocity.parsers.fixed.EOFException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6030/buggy-version/src.main.java.com.univocity.parsers.fixed.FixedWidthParser.java", "BodyUseAPI": ["com.univocity.parsers.fixed.FixedWidthParser.nextChar()"], "Fixed commit": "826fa7601444088a646744f9abcfcb77b9afba5c", "Url": "https://api.github.com/repos/uniVocity/univocity-parsers", "Date": "2016-12-05T07:34:55Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ePerson = org.dspace.eperson.EPerson.findByClarinTokenId(context, token); } catch (java.lang.Exception ex) { pl.edu.ClarinPLLoginAction.log.error(\"SQL Error \", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1534/buggy-version/dspace-xmlui.src.main.java.pl.edu.ClarinPLLoginAction.java", "BodyUseAPI": ["org.dspace.eperson.EPerson.findByClarinTokenId(org.dspace.core.Context,java.lang.String)"], "Fixed commit": "2d266d23f973528f51506673d4ebdc781c7655a7", "Url": "https://api.github.com/repos/CLARIN-PL/clarin-pl-dspace", "Date": "2017-09-25T08:13:26Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mAMapLocManager.requestLocationUpdates(LocationProviderProxy.AMapNetwork, 1000, 10, this); } catch (java.lang.Exception e) { com.crashlytics.android.Crashlytics.logException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/261/buggy-version/src.ui.CreateActivity.java", "BodyUseAPI": ["com.amap.api.location.LocationManagerProxy.requestLocationUpdates(LocationProviderProxy.AMapNetwork,int,int,ui.CreateActivity)"], "Fixed commit": "ae06628fd2a8cf3bc19dc194c9a92a8c1e213d73", "Url": "https://api.github.com/repos/donal-tong/qy", "Date": "2014-06-20T07:25:48Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.view.inputmethod.InputMethodManager imm = ((android.view.inputmethod.InputMethodManager) (getSystemService(io.github.nick11roberts.notesrs.INPUT_METHOD_SERVICE))); imm.hideSoftInputFromWindow(getCurrentFocus().getWindowToken(), 0); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3213/buggy-version/NoteSRS.app.src.main.java.io.github.nick11roberts.notesrs.MainActivity.java", "BodyUseAPI": ["io.github.nick11roberts.notesrs.MainActivity.2.getSystemService(io.github.nick11roberts.notesrs.INPUT_METHOD_SERVICE)", "android.view.inputmethod.InputMethodManager.hideSoftInputFromWindow(getCurrentFocus().getWindowToken(),int)", "getCurrentFocus().getWindowToken()", "io.github.nick11roberts.notesrs.MainActivity.2.getCurrentFocus()"], "Fixed commit": "4576a8d25c93bf3952d34f59f1c0c81d66ddf64c", "Url": "https://api.github.com/repos/nick11roberts/noteSRS-android", "Date": "2016-01-24T09:17:37Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.time.LocalDateTime theDateTime = java.time.LocalDateTime.parse(value, formatter); nl.deholtmans.tjm1706.helpers.LocatDateTimeFromString.logger.info((\"LocalDateTime input/3: \" + theDateTime)); return theDateTime; } catch (java.lang.Exception e) { nl.deholtmans.tjm1706.helpers.LocatDateTimeFromString.logger.info((\"LocalDateTime input/4 exception (resetting to now()): \" + (e.getMessage()))); return java.time.LocalDateTime.now(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7040/buggy-version/src.main.java.nl.deholtmans.tjm1706.helpers.LocatDateTimeFromString.java", "BodyUseAPI": ["java.time.LocalDateTime.parse(java.lang.String,java.time.format.DateTimeFormatter)", "org.slf4j.Logger.info(java.lang.String)"], "Fixed commit": "1c123860e909e0d32c2d86b9e3f0042fc08315a7", "Url": "https://api.github.com/repos/johan974/solvedcaches", "Date": "2017-12-08T14:33:44Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.time.LocalDateTime theDateTime = java.time.LocalDateTime.parse(value, formatter); nl.deholtmans.tjm1706.helpers.LocatDateTimeFromString.logger.info((\"LocalDateTime input/2: \" + theDateTime)); return theDateTime; } catch (java.lang.Exception e) { nl.deholtmans.tjm1706.helpers.LocatDateTimeFromString.logger.info((\"LocalDateTime input/2 exception: \" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7040/buggy-version/src.main.java.nl.deholtmans.tjm1706.helpers.LocatDateTimeFromString.java", "BodyUseAPI": ["java.time.LocalDateTime.parse(java.lang.String,java.time.format.DateTimeFormatter)", "org.slf4j.Logger.info(java.lang.String)"], "Fixed commit": "1c123860e909e0d32c2d86b9e3f0042fc08315a7", "Url": "https://api.github.com/repos/johan974/solvedcaches", "Date": "2017-12-08T14:33:44Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { thread.join(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5909/buggy-version/app.src.main.java.com.mss.group3.smartshare.utility.DistanceAndTimeApiCall.java", "BodyUseAPI": ["java.lang.Thread.join()"], "Fixed commit": "297a55ee0cccb12420895505ec6d5dae297586a5", "Url": "https://api.github.com/repos/user-de-git/smartshare", "Date": "2016-02-28T21:42:34Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { placeholder.update(); } catch (java.lang.Throwable t) { com.gmail.filoghost.holographicdisplays.HolographicDisplays.getInstance().getLogger().log(java.util.logging.Level.WARNING, (((((\"The placeholder \" + (placeholder.getTextPlaceholder())) + \" registered by the plugin \") + (placeholder.getOwner().getName())) + \" generated an exception while updating. Please contact the author of \") + (placeholder.getOwner().getName())), t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3262/buggy-version/HolographicDisplays.Plugin.com.gmail.filoghost.holographicdisplays.placeholder.PlaceholdersManager.java", "BodyUseAPI": ["com.gmail.filoghost.holographicdisplays.placeholder.Placeholder.update()"], "Fixed commit": "9837ae969edfae29d71e4df2a9399c993b5fa2ee", "Url": "https://api.github.com/repos/games647/HolographicDisplays", "Date": "2017-02-17T10:36:58Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { lock.lock(); java.lang.String memberId = this.getMemberIdFromTaskName(taskName, true); this.setServerLocationOfTask(taskName, memberId); this.scheduleTask(memberId, taskName); } finally { lock.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3888/buggy-version/components.ntask.org.wso2.carbon.ntask.core.src.main.java.org.wso2.carbon.ntask.core.impl.clustered.ClusteredTaskManager.java", "BodyUseAPI": ["java.util.concurrent.locks.Lock.lock()", "org.wso2.carbon.ntask.core.impl.clustered.ClusteredTaskManager.scheduleTask(java.lang.String,java.lang.String)", "org.wso2.carbon.ntask.core.impl.clustered.ClusteredTaskManager.setServerLocationOfTask(java.lang.String,java.lang.String)", "org.wso2.carbon.ntask.core.impl.clustered.ClusteredTaskManager.getMemberIdFromTaskName(java.lang.String,boolean)"], "Fixed commit": "2e0140f8d7622a713f5257a5c8b2548d9534ac13", "Url": "https://api.github.com/repos/callkalpa/carbon-commons", "Date": "2015-08-05T04:30:20Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(30); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/387/buggy-version/src.Stop.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "32f2288a76b33af0995aa5b8aec93bcf8b72d135", "Url": "https://api.github.com/repos/GiantPanda0090/Hangman_client", "Date": "2017-11-09T14:46:55Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.regex = java.util.regex.Pattern.compile(regex); this.useRegex = useRegex; } catch (java.util.regex.PatternSyntaxException e) { this.useRegex = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5774/buggy-version/src.main.java.jenkins.plugins.publish_over_ssh.BapSshHostConfiguration.java", "BodyUseAPI": ["java.util.regex.Pattern.compile(java.lang.String)"], "Fixed commit": "b3421d22efe260c1b299bf77f03c698ec530bc7f", "Url": "https://api.github.com/repos/JanPatrickReibner/publish-over-ssh-plugin", "Date": "2017-01-20T14:27:42Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { choice = MainMenu.input.readLine(); } catch (java.io.IOException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2599/buggy-version/src.Ubook.THFeedback.java", "BodyUseAPI": ["MainMenu.input.readLine()"], "Fixed commit": "3e6906512dbf1e10490c5ae6df9993a9d1db6dfd", "Url": "https://api.github.com/repos/RyanJST/Ubook", "Date": "2017-03-25T02:25:21Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { next = theElements.get(i); } catch (java.lang.ClassCastException e) { java.util.List<?> elements = theElements; java.lang.String s = ((\"Found instance of \" + (elements.get(i).getClass())) + \" - Did you set a field value to the incorrect type? Expected \") + (org.hl7.fhir.instance.model.api.IBase.class.getName()); throw new java.lang.ClassCastException(s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6220/buggy-version/hapi-fhir-base.src.main.java.ca.uhn.fhir.util.ElementUtil.java", "BodyUseAPI": ["java.util.List<? extends org.hl7.fhir.instance.model.api.IBase>.get(int)"], "Fixed commit": "94f50686bc02f26dfc4472f2d6e9a6bcc90cd2bc", "Url": "https://api.github.com/repos/jamesagnew/hapi-fhir", "Date": "2016-03-02T12:06:17Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { serviceMgr.get3drServices().releaseDroidPlannerApi(this.droneCallback); } catch (android.os.RemoteException e) { android.util.Log.e(com.o3dr.android.client.Drone.TAG, e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/9123/buggy-version/lib.src.main.java.com.o3dr.android.client.Drone.java", "BodyUseAPI": ["serviceMgr.get3drServices().releaseDroidPlannerApi(com.o3dr.android.client.DroneCallback)", "com.o3dr.android.client.ServiceManager.get3drServices()"], "Fixed commit": "0ed3c55e779c3329ba81bce3077130e48100f1ac", "Url": "https://api.github.com/repos/DroidPlanner/droidplanner", "Date": "2014-11-18T07:19:31Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { vehicleDetailRecord = vehicleStatusService.getVehicleDetail(vehicleId); } catch (java.lang.Throwable t) { org.onebusaway.nyc.webapp.actions.admin.vehiclestatus.PopupAction._log.error(\"input failed:\", t); vehicleDetailRecord = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4452/buggy-version/onebusaway-nyc-admin-webapp.src.main.java.org.onebusaway.nyc.webapp.actions.admin.vehiclestatus.PopupAction.java", "BodyUseAPI": ["org.onebusaway.nyc.admin.service.VehicleStatusService.getVehicleDetail(java.lang.String)"], "Fixed commit": "b8cc9cf6d1d75bf25dcdb05d0b26adf1f46941f8", "Url": "https://api.github.com/repos/camsys/onebusaway-nyc", "Date": "2012-07-31T15:51:22Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (intent != null) { versionParams = intent.getParcelableExtra(com.allenliu.versionchecklib.core.AVersionService.VERSION_PARAMS_KEY); verfiyAndDeleteAPK(); if (versionParams.isOnlyDownload()) { showVersionDialog(versionParams.getDownloadUrl(), versionParams.getTitle(), versionParams.getUpdateMsg(), versionParams.getParamBundle()); }else { requestVersionUrlSync(); } } } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7409/buggy-version/library.src.main.java.com.allenliu.versionchecklib.core.AVersionService.java", "BodyUseAPI": ["com.allenliu.versionchecklib.core.VersionParams.getUpdateMsg()", "com.allenliu.versionchecklib.core.VersionParams.getParamBundle()", "com.allenliu.versionchecklib.core.VersionParams.isOnlyDownload()", "com.allenliu.versionchecklib.core.AVersionService.requestVersionUrlSync()", "android.content.Intent.getParcelableExtra(java.lang.String)", "com.allenliu.versionchecklib.core.VersionParams.getTitle()", "com.allenliu.versionchecklib.core.AVersionService.verfiyAndDeleteAPK()", "com.allenliu.versionchecklib.core.VersionParams.getDownloadUrl()", "com.allenliu.versionchecklib.core.AVersionService.showVersionDialog(versionParams.getDownloadUrl(),versionParams.getTitle(),versionParams.getUpdateMsg(),versionParams.getParamBundle())"], "Fixed commit": "3b9844826e7310e518cd33c011c83676870c38b2", "Url": "https://api.github.com/repos/AlexLiuSheng/CheckVersionLib", "Date": "2017-11-22T05:29:36Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { c.moveToFirst(); if ((c.getCount()) > 0) return c.getString(0); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1966/buggy-version/app.src.main.java.com.raspi.chatapp.sqlite.MessageHistory.java", "BodyUseAPI": ["android.database.Cursor.getCount()", "android.database.Cursor.getString(int)", "android.database.Cursor.moveToFirst()"], "Fixed commit": "dff2b426406e0ad3b48af2c185960a949b53e05c", "Url": "https://api.github.com/repos/Nik-Sch/ChatApp-Android", "Date": "2016-01-01T21:15:59Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { font = message.args[11].strValue(); } catch (java.lang.NullPointerException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8928/buggy-version/XMF-GUI.src.uk.ac.mdx.xmf.swt.model.ModelFactory.java", "BodyUseAPI": ["message.args[11].strValue()"], "Fixed commit": "8aaa632611aae8c89bfe7693ae5e3b42125b7e00", "Url": "https://api.github.com/repos/xmf-xmodeler/Mosaic", "Date": "2014-08-13T10:17:51Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { file = org.eclipse.core.resources.ResourcesPlugin.getWorkspace().getRoot().getFile(filePath); } catch (java.lang.IllegalArgumentException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/918/buggy-version/applications.plugins.org.csstudio.alarm.table.src.org.csstudio.alarm.table.service.AlarmSoundService.java", "BodyUseAPI": ["org.eclipse.core.resources.ResourcesPlugin.getWorkspace()", "org.eclipse.core.resources.ResourcesPlugin.getWorkspace().getRoot()", "org.eclipse.core.resources.ResourcesPlugin.getWorkspace().getRoot().getFile(org.eclipse.core.runtime.IPath)"], "Fixed commit": "719738bc2f424de2de9fef6ee8a703f27b0e1e51", "Url": "https://api.github.com/repos/Desy-extern/cs-studio", "Date": "2017-10-13T12:04:50Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return ((be.raildelays.domain.entities.LineStop) (entityManager.createQuery((\"SELECT o \" + ((((((\"FROM LineStop o \" + \"WHERE o.train.englishName = :trainName \") + \"AND o.station.englishName = :stationName \") + \"AND o.arrivalTime.expected IS NOT NULL \") + \"AND o.departureTime.expected IS NOT NULL \") + \"AND o.canceled = false \") + \"ORDER BY o.arrivalTime.expected ASC\"))).setParameter(\"trainName\", train.getEnglishName()).setParameter(\"stationName\", station.getEnglishName()).setMaxResults(1).setFirstResult(0).getSingleResult())); } catch (javax.persistence.NoResultException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/531/buggy-version/repository-layer.src.main.java.be.raildelays.repository.impl.LineStopDaoCustomJpa.java", "BodyUseAPI": ["javax.persistence.EntityManager.createQuery(java.lang.String)", "entityManager.createQuery((\"SELECT o \" + ((((((\"FROM LineStop o \" + \"WHERE o.train.englishName = :trainName \") + \"AND o.station.englishName = :stationName \") + \"AND o.arrivalTime.expected IS NOT NULL \") + \"AND o.departureTime.expected IS NOT NULL \") + \"AND o.canceled = false \") + \"ORDER BY o.arrivalTime.expected ASC\"))).setParameter(java.lang.String,train.getEnglishName())", "entityManager.createQuery((\"SELECT o \" + ((((((\"FROM LineStop o \" + \"WHERE o.train.englishName = :trainName \") + \"AND o.station.englishName = :stationName \") + \"AND o.arrivalTime.expected IS NOT NULL \") + \"AND o.departureTime.expected IS NOT NULL \") + \"AND o.canceled = false \") + \"ORDER BY o.arrivalTime.expected ASC\"))).setParameter(\"trainName\", train.getEnglishName()).setParameter(\"stationName\", station.getEnglishName()).setMaxResults(int)", "be.raildelays.domain.entities.Train.getEnglishName()", "entityManager.createQuery((\"SELECT o \" + ((((((\"FROM LineStop o \" + \"WHERE o.train.englishName = :trainName \") + \"AND o.station.englishName = :stationName \") + \"AND o.arrivalTime.expected IS NOT NULL \") + \"AND o.departureTime.expected IS NOT NULL \") + \"AND o.canceled = false \") + \"ORDER BY o.arrivalTime.expected ASC\"))).setParameter(\"trainName\", train.getEnglishName()).setParameter(\"stationName\", station.getEnglishName()).setMaxResults(1).setFirstResult(0).getSingleResult()", "entityManager.createQuery((\"SELECT o \" + ((((((\"FROM LineStop o \" + \"WHERE o.train.englishName = :trainName \") + \"AND o.station.englishName = :stationName \") + \"AND o.arrivalTime.expected IS NOT NULL \") + \"AND o.departureTime.expected IS NOT NULL \") + \"AND o.canceled = false \") + \"ORDER BY o.arrivalTime.expected ASC\"))).setParameter(\"trainName\", train.getEnglishName()).setParameter(\"stationName\", station.getEnglishName()).setMaxResults(1).setFirstResult(int)", "be.raildelays.domain.entities.Station.getEnglishName()", "entityManager.createQuery((\"SELECT o \" + ((((((\"FROM LineStop o \" + \"WHERE o.train.englishName = :trainName \") + \"AND o.station.englishName = :stationName \") + \"AND o.arrivalTime.expected IS NOT NULL \") + \"AND o.departureTime.expected IS NOT NULL \") + \"AND o.canceled = false \") + \"ORDER BY o.arrivalTime.expected ASC\"))).setParameter(\"trainName\", train.getEnglishName()).setParameter(java.lang.String,station.getEnglishName())"], "Fixed commit": "9a050727635586e1bed09df0fcec0f795d2615c1", "Url": "https://api.github.com/repos/almex/Raildelays", "Date": "2014-07-01T18:19:45Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { text = org.esa.beam.util.XmlWriter._xmlOutputter.outputString(new org.jdom.Text(text.trim())); } catch (org.jdom.IllegalDataException e) { text = org.esa.beam.util.XmlWriter._xmlOutputter.outputString(new org.jdom.Text(\"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7803/buggy-version/beam.beam-core.src.main.java.org.esa.beam.util.XmlWriter.java", "BodyUseAPI": ["java.lang.String.trim()", "org.jdom.output.XMLOutputter.outputString(org.jdom.Text)"], "Fixed commit": "d8b92845f204e4b73c9d1e080daaec891bc8b83c", "Url": "https://api.github.com/repos/lveci/nest", "Date": "2013-09-18T15:42:41Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { travelWalk.imageUrl = ((fields.getString(\"thumbnail\")) == null) ? \"\" : fields.getString(\"thumbnail\"); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6194/buggy-version/src.uk.co.huntersix.android.audiowalks.WalksListViewActivity.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "086841b2e6396b48dd45bac3f93d54304e802aed", "Url": "https://api.github.com/repos/arcotc/audio-guides", "Date": "2011-10-07T08:25:37Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Class.forName(org.jboss.netty.util.internal.ByteBufferUtil.class.getName()); } catch (java.lang.ClassNotFoundException cnfe) { if (com.liferay.portal.search.elasticsearch.internal.connection.EmbeddedElasticsearchConnection._log.isWarnEnabled()) { com.liferay.portal.search.elasticsearch.internal.connection.EmbeddedElasticsearchConnection._log.warn((((\"Unable to preload \" + (org.jboss.netty.util.internal.ByteBufferUtil.class)) + \" to prevent netty shutdown concurrent class loading \") + \"interruption issue.\"), cnfe); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1141/buggy-version/modules.apps.foundation.portal-search.portal-search-elasticsearch.src.main.java.com.liferay.portal.search.elasticsearch.internal.connection.EmbeddedElasticsearchConnection.java", "BodyUseAPI": ["java.lang.Class.getName()", "java.lang.Class.forName(java.lang.String)"], "Fixed commit": "5fd6b51fcc8214b7149e10427d0d216610676704", "Url": "https://api.github.com/repos/shuyangzhou/liferay-portal", "Date": "2016-11-03T00:18:43Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { read = client.read(buffer); } catch (java.io.IOException e) { read = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5587/buggy-version/src.main.java.net.yeputons.example.nonblockingserver.PalindromeChecker.java", "BodyUseAPI": ["java.nio.channels.SocketChannel.read(java.nio.ByteBuffer)"], "Fixed commit": "74e1636169b284698b2512742170c6a4c16db4b9", "Url": "https://api.github.com/repos/yeputons/non-blocking-server", "Date": "2016-06-01T18:01:46Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { typ = de.aw.enums.WPTyp.valueOf(wpTyp); selectionWPTyp = typ.ordinal(); } catch (java.lang.NullPointerException e) { typ = de.aw.gv.Wertpapier.defaultWPTyp; selectionWPTyp = typ.ordinal(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/750/buggy-version/app.src.main.java.de.aw.wertpapier.dialoge.DialogWPStamm.java", "BodyUseAPI": ["de.aw.enums.WPTyp.ordinal()", "de.aw.enums.WPTyp.valueOf(java.lang.String)"], "Fixed commit": "4caeaa4d2de0464553d3c289d0ebcce9f2adea47", "Url": "https://api.github.com/repos/gitwalex/MonMa", "Date": "2015-08-26T10:54:45Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { object = clazz.newInstance(); } catch (java.lang.Exception e) { com.alibaba.druid.stat.DruidDataSourceStatJNDIStatStrategy.LOG.error(e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7355/buggy-version/src.main.java.com.alibaba.druid.stat.DruidDataSourceStatJNDIStatStrategy.java", "BodyUseAPI": ["java.lang.Class<?>.newInstance()"], "Fixed commit": "106bdf9af82b492f32594942512dd3de5d62a3ec", "Url": "https://api.github.com/repos/septer/druid", "Date": "2012-08-10T07:07:44Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.eclipse.core.resources.IResource resource = javaProject.getUnderlyingResource(); deletePreviousErrors(resource, componentType.getName()); } catch (org.eclipse.jdt.core.JavaModelException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3359/buggy-version/code.ipojo-editor.metadata.ipojo.editor.src.liglab.imag.fr.metadata.ui.editor.page.component.ComponentMasterDetailBlock.java", "BodyUseAPI": ["liglab.imag.fr.metadata.ui.editor.page.component.ComponentMasterDetailBlock.CompleteComponentClassAction.deletePreviousErrors(org.eclipse.core.resources.IResource,componentType.getName())", "org.eclipse.jdt.core.IJavaProject.getUnderlyingResource()", "org.apache.felix.ComponentType.getName()"], "Fixed commit": "436c529bcb7a096febd9a03e3b6f16c1d34059dd", "Url": "https://api.github.com/repos/AdeleResearchGroup/iCasa-IDE", "Date": "2013-09-20T13:11:09Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { cal.setTime(simpleDateFormat.parse(openingDate)); } catch (java.text.ParseException pe) { name.marmac.bankanalyzer.services.rest.client.webclient.BankAnalyzerWebClient.LOGGER.error(pe.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6367/buggy-version/ba-services.ba-services-rest-impl-jaxrs.src.main.java.name.marmac.bankanalyzer.services.rest.client.webclient.BankAnalyzerWebClient.java", "BodyUseAPI": ["java.util.Calendar.setTime(java.util.Date)", "java.text.SimpleDateFormat.parse(java.lang.String)"], "Fixed commit": "33710611c2bf6acb166870ee7549962d9d577161", "Url": "https://api.github.com/repos/marcomaccio/bankanalyzer-he", "Date": "2015-11-21T22:03:54Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (d.stillLiquid.isLiquidEqual(milk)) { if (!(d.container.getItemName().equals(\"item.barrel\"))) { FMLWrapper.MODE.FML.addRecipe(new net.minecraft.item.ItemStack(this, FoodTuning.Tuning.Cupcake_AmountPerCraft, 0), new java.lang.Object[]{ \"SSS\", \"MEM\", \"FFF\", java.lang.Character.valueOf('S'), Sugar, java.lang.Character.valueOf('M'), d.filled.copy(), java.lang.Character.valueOf('E'), Egg, java.lang.Character.valueOf('F'), PfFManagers.Items.getItemByTag(\"flour\") }); } } } catch (java.lang.Exception ex) { PfF.Proxy.print(\"Error in cupcake recipe handler.\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/168/buggy-version/src.denoflionsx.PluginsforForestry_PluginBlueFood.Items.Food.ItemCupcake.java", "BodyUseAPI": ["java.lang.Character.valueOf(char)", "FMLWrapper.MODE.FML.addRecipe(net.minecraft.item.ItemStack,java.lang.Object[])", "java.lang.Character.valueOf(char)", "java.lang.Character.valueOf(char)", "java.lang.Character.valueOf(char)", "d.filled.copy()", "d.stillLiquid.isLiquidEqual(net.minecraftforge.liquids.LiquidStack)", "d.container.getItemName()", "d.container.getItemName().equals(java.lang.String)", "PfFManagers.Items.getItemByTag(java.lang.String)"], "Fixed commit": "a7f6db7e0ba2ad9e85cfef46139adb4841f4ac7e", "Url": "https://api.github.com/repos/denoflionsx/PluginsForForestry", "Date": "2013-02-08T01:03:55Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (getVfsAdapter().exists(vfsPath)) { vfsFilesToBeDeleted.add(new com.mediaworx.intellij.opencmsplugin.listeners.OpenCmsModuleFileChangeListener.VfsFileDeleteInfo(ocmsModule, vfsPath, ideaVFile.isDirectory())); } } catch (org.apache.chemistry.opencmis.commons.exceptions.CmisPermissionDeniedException e) { throw new com.mediaworx.intellij.opencmsplugin.exceptions.CmsConnectionException((\"A local file has been deleted, but it can\\'t be checked if the file exists in the VFS (permission denied).\\nPlease check manually: \" + vfsPath)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3398/buggy-version/src.com.mediaworx.intellij.opencmsplugin.listeners.OpenCmsModuleFileChangeListener.java", "BodyUseAPI": ["com.mediaworx.intellij.opencmsplugin.sync.VfsAdapter.exists(java.lang.String)", "java.util.List<com.mediaworx.intellij.opencmsplugin.listeners.OpenCmsModuleFileChangeListener.VfsFileDeleteInfo>.add(com.mediaworx.intellij.opencmsplugin.listeners.OpenCmsModuleFileChangeListener.VfsFileDeleteInfo)", "com.mediaworx.intellij.opencmsplugin.listeners.OpenCmsModuleFileChangeListener.getVfsAdapter()", "com.intellij.openapi.vfs.VirtualFile.isDirectory()"], "Fixed commit": "e482530fa27b5bfc7f9709e51b1b83e0deafe2d8", "Url": "https://api.github.com/repos/mediaworx/opencms-intellijplugin", "Date": "2014-06-16T08:44:30Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { stmt.executeUpdate(query); } catch (java.sql.SQLException e) { fluddokt.opsu.fake.Log.warn(\"Failed to update score database.\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/247/buggy-version/src.itdelatrisu.opsu.db.ScoreDB.java", "BodyUseAPI": ["java.sql.Statement.executeUpdate(java.lang.String)"], "Fixed commit": "c94a83742893b318fb2206adb2ba08773b7e396a", "Url": "https://api.github.com/repos/fluddokt/opsu", "Date": "2017-02-14T01:21:42Z"},
{"Line": "=>709", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { getContentResolver().delete(mediaUri, null, null); } catch (java.lang.Exception e) { android.widget.Toast.makeText(this, e.getMessage(), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6752/buggy-version/collect_app.src.main.java.org.odk.collect.android.activities.FormEntryActivity.java", "BodyUseAPI": ["org.odk.collect.android.activities.FormEntryActivity.getContentResolver()", "getContentResolver().delete(android.net.Uri,<nulltype>,<nulltype>)"], "Fixed commit": "9fd0bb081db52550fc30820af342ead17ddb1781", "Url": "https://api.github.com/repos/beast-incarnate/collect", "Date": "2017-04-22T11:26:18Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { executor.execute(new java.lang.Runnable() { @java.lang.Override public void run() { try { java.lang.Object resp = resolveResponse(response); if ((resp == null) || (!(resp instanceof java.lang.Throwable))) { callback.onResponse(((E) (resp))); }else { callback.onFailure(((java.lang.Throwable) (resp))); } } catch (java.lang.Throwable t) { basicInvocation.logger.severe((\"Failed to async for \" + (basicInvocation)), t); } } }); } catch (java.util.concurrent.RejectedExecutionException ignore) { basicInvocation.logger.finest(ignore); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8747/buggy-version/hazelcast.src.main.java.com.hazelcast.spi.impl.BasicInvocationFuture.java", "BodyUseAPI": ["com.hazelcast.spi.impl.BasicInvocationFuture.1.resolveResponse(java.lang.Object)", "com.hazelcast.core.ExecutionCallback<E>.onFailure(java.lang.Object)", "basicInvocation.logger.severe((\"Failed to async for \" + (basicInvocation)),java.lang.Throwable)", "com.hazelcast.core.ExecutionCallback<E>.onResponse(java.lang.Object)", "java.lang.Object()", "java.util.concurrent.Executor.execute(java.lang.Runnable)"], "Fixed commit": "7bf0a884ea3c30da30eb47f0d437c78aeb555a63", "Url": "https://api.github.com/repos/gregrluck/hazelcast", "Date": "2014-03-30T18:02:13Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { thumbnail.setImageBitmap(android.graphics.BitmapFactory.decodeFile(subscription.getThumbnailFilename())); thumbnail.setVisibility(1); } catch (java.lang.OutOfMemoryError ex) { thumbnail.setImageDrawable(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5450/buggy-version/src.com.axelby.podax.ui.SubscriptionListFragment.java", "BodyUseAPI": ["android.graphics.BitmapFactory.decodeFile(subscription.getThumbnailFilename())", "android.widget.ImageView.setVisibility(int)", "com.axelby.podax.SubscriptionCursor.getThumbnailFilename()", "android.widget.ImageView.setImageBitmap(android.graphics.BitmapFactory.decodeFile(subscription.getThumbnailFilename()))"], "Fixed commit": "bad15865742fd0e3250d9d6af2d11df44facdcbc", "Url": "https://api.github.com/repos/dbs/Podax", "Date": "2012-08-14T01:18:14Z"},
{"Line": "=>364", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { sent.writeObject(sendObject); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8831/buggy-version/base.src.edu.berkeley.cs.cs162.ChatServer.java", "BodyUseAPI": ["java.io.ObjectOutputStream.writeObject(edu.berkeley.cs.cs162.TransportObject)"], "Fixed commit": "997aee8e7e19ac6aed3baba18a6795d1464afa66", "Url": "https://api.github.com/repos/tonydear/cs162-p2", "Date": "2011-03-29T04:52:30Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { emails.Mails.enviar(\"LogFatal\", pattern); } catch (java.lang.IllegalArgumentException e) { play.Logger.warn(\"No se encontr\u00f3 el ID del mail en la base de datos, por lo que no se pudo enviar por correo el error FATAL\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8297/buggy-version/fap.app.logger.FapLogs.java", "BodyUseAPI": ["emails.Mails.enviar(java.lang.String,java.lang.String)"], "Fixed commit": "28013d6479479ac3bd7cd31a109248d7882247d8", "Url": "https://api.github.com/repos/FAP-Team/Fap-Module", "Date": "2012-03-30T07:49:53Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return ((int) (row.getCell(cellIndex).getNumericCellValue())); } catch (java.lang.IllegalStateException e) { java.lang.System.out.println((((\"Couldn't get value from row: \" + (row.getRowNum())) + \" / cell: \") + cellIndex)); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/9228/buggy-version/src.main.java.fr.solsid.service.AccessRightsFileReader.java", "BodyUseAPI": ["org.apache.poi.ss.usermodel.Row.getCell(int)", "row.getCell(cellIndex).getNumericCellValue()"], "Fixed commit": "5ee6a37fed93e440fc1ff6041fbf637f19aaa50f", "Url": "https://api.github.com/repos/solsid/benesearch", "Date": "2017-06-14T14:21:18Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Double.parseDouble(s); return true; } catch (java.lang.Exception e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5199/buggy-version/src.cyrus.lib.Utils.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "b634a1805bc7ef66bb9795cfb83210dcecdf390f", "Url": "https://api.github.com/repos/DuncanCragg/Cyrus", "Date": "2014-03-29T17:32:41Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { id = java.lang.Integer.parseInt(request.getParameter(\"id\")); } catch (java.lang.NumberFormatException e) { slf4jLogger.info(\"Bad parameter for id\"); response.sendError(HttpServletResponse.SC_BAD_REQUEST); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3625/buggy-version/src.main.java.com.excilys.controller.EditComputer.java", "BodyUseAPI": ["java.lang.Integer.parseInt(request.getParameter(\"id\"))", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Fixed commit": "87035eba4872aa4ec9e0727331ec033749d27a23", "Url": "https://api.github.com/repos/Mealya/ComputerDatabase", "Date": "2016-04-28T10:12:48Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { output = os.get((s % (os.size()))); } catch (java.lang.ArrayIndexOutOfBoundsException e) { e.printStackTrace(); java.lang.System.out.println(s); java.lang.System.out.println(os.size()); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6914/buggy-version/model-generator.src.uk.ac.york.cs.mv525.modelgen.strategy.AlwaysRetrieve.java", "BodyUseAPI": ["java.util.List<org.eclipse.emf.ecore.EObject>.size()", "java.util.List<org.eclipse.emf.ecore.EObject>.get((s % (os.size())))"], "Fixed commit": "6997e2c60032a80f0707f5e3e2dbb2075598c4be", "Url": "https://api.github.com/repos/mvalle/model-generator", "Date": "2014-04-25T14:52:40Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mContext.unregisterReceiver(broadcastReceiver); } catch (java.lang.IllegalArgumentException e) { timber.log.Timber.e(e, \"Receiver was not registered.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/9153/buggy-version/ServiceApp.src.org.droidplanner.services.android.communication.connection.usb.UsbCDCConnection.java", "BodyUseAPI": ["org.droidplanner.services.android.communication.connection.usb.UsbCDCConnection.unregisterReceiver(android.content.BroadcastReceiver)"], "Fixed commit": "8122114f0769d8c923aeae3ed237e7969074eb8b", "Url": "https://api.github.com/repos/dronekit/dronekit-android", "Date": "2015-09-27T17:54:48Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { jsonArray = new org.json.JSONArray(jsonData); } catch (org.json.JSONException j) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5466/buggy-version/app.src.main.java.com.enpassio.foodie.fragments.MenuFragment.java", "BodyUseAPI": [], "Fixed commit": "9563136c5723d32de7b91bde4301c21df1f2a8af", "Url": "https://api.github.com/repos/rajtheinnovator/Foodie", "Date": "2017-08-18T16:56:37Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ratingBar.setRating(((float) ((double) (ppo.getDouble(\"avgReview\"))))); } catch (java.lang.ClassCastException e) { android.util.Log.d(Constants.DetailedPhotoHuntActivityTag, \"Parse stored avg reviews as int.\"); ratingBar.setRating(((float) ((double) ((int) (ppo.getInt(\"avgReview\")))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5392/buggy-version/app.src.main.java.mrayer.photohunt.DetailedPhotoHuntActivity.java", "BodyUseAPI": ["mrayer.photohunt.ParseProxyObject.getDouble(java.lang.String)", "android.widget.RatingBar.setRating(((float) ((double) (ppo.getDouble(\"avgReview\")))))"], "Fixed commit": "0cb6c5110c5098b66614755240d117ea784f4f19", "Url": "https://api.github.com/repos/rolledback/PhotoHunt", "Date": "2016-05-04T05:23:10Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { double money = java.lang.Double.parseDouble(value); userList.add(new com.greatmancode.craftconomy3.converter.converters.User(name, money)); } catch (java.lang.NumberFormatException e) { com.greatmancode.craftconomy3.Common.getInstance().getServerCaller().getPlayerCaller().sendMessage(sender, (((((\"Failed to load account \" + name) + \": \") + value) + \" - \") + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/9017/buggy-version/src.main.java.com.greatmancode.craftconomy3.converter.converters.Essentials.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)", "java.util.List<com.greatmancode.craftconomy3.converter.converters.User>.add(com.greatmancode.craftconomy3.converter.converters.User)"], "Fixed commit": "f79620f90d1255f5aef93fea4e1e1395998fb4ee", "Url": "https://api.github.com/repos/snowleo/craftconomy3", "Date": "2013-08-26T14:58:51Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (int i = 0; i < (tripIdArray.size()); i++) { deleteTrip(tripIdArray.get(i)); } mode.finish(); } catch (java.lang.NullPointerException e) { android.util.Log.d(\"KENNY\", \"Caught Trip delete crash\"); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3658/buggy-version/app.src.main.java.edu.auburn.ppl.cyclecolumbus.FragmentSavedTripsSection.java", "BodyUseAPI": ["android.view.ActionMode.finish()", "java.util.ArrayList<java.lang.Long>.size()", "edu.auburn.ppl.cyclecolumbus.FragmentSavedTripsSection.1.deleteTrip(java.lang.Long)", "java.util.ArrayList<java.lang.Long>.get(int)"], "Fixed commit": "c4e8ca31b8082477c5c457729b93c918ce03f007", "Url": "https://api.github.com/repos/krs0013/Fountain-City-Cycling-Android", "Date": "2015-04-23T21:03:25Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { retryTripUpload(storedID); mode.finish(); } catch (java.lang.NullPointerException e) { android.util.Log.d(\"KENNY\", \"Caught Trip upload crash\"); android.widget.Toast.makeText(getActivity(), \"Trip has already been uploaded\", Toast.LENGTH_SHORT).show(); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3658/buggy-version/app.src.main.java.edu.auburn.ppl.cyclecolumbus.FragmentSavedTripsSection.java", "BodyUseAPI": ["edu.auburn.ppl.cyclecolumbus.FragmentSavedTripsSection.1.retryTripUpload(java.lang.Long)", "android.view.ActionMode.finish()"], "Fixed commit": "c4e8ca31b8082477c5c457729b93c918ce03f007", "Url": "https://api.github.com/repos/krs0013/Fountain-City-Cycling-Android", "Date": "2015-04-23T21:03:25Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (int i = 0; i < (noteIdArray.size()); i++) { deleteNote(noteIdArray.get(i)); } mode.finish(); } catch (java.lang.NullPointerException e) { android.util.Log.d(\"KENNY\", \"Caught Note delete crash\"); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3658/buggy-version/app.src.main.java.edu.auburn.ppl.cyclecolumbus.FragmentSavedNotesSection.java", "BodyUseAPI": ["android.view.ActionMode.finish()", "edu.auburn.ppl.cyclecolumbus.FragmentSavedNotesSection.1.deleteNote(java.lang.Long)", "java.util.ArrayList<java.lang.Long>.get(int)", "java.util.ArrayList<java.lang.Long>.size()"], "Fixed commit": "c4e8ca31b8082477c5c457729b93c918ce03f007", "Url": "https://api.github.com/repos/krs0013/Fountain-City-Cycling-Android", "Date": "2015-04-23T21:03:25Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { retryNoteUpload(storedID); mode.finish(); } catch (java.lang.NullPointerException e) { android.util.Log.d(\"KENNY\", \"Caught Note upload crash\"); android.widget.Toast.makeText(getActivity(), \"Note has already been uploaded\", Toast.LENGTH_SHORT).show(); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3658/buggy-version/app.src.main.java.edu.auburn.ppl.cyclecolumbus.FragmentSavedNotesSection.java", "BodyUseAPI": ["edu.auburn.ppl.cyclecolumbus.FragmentSavedNotesSection.1.retryNoteUpload(java.lang.Long)", "android.view.ActionMode.finish()"], "Fixed commit": "c4e8ca31b8082477c5c457729b93c918ce03f007", "Url": "https://api.github.com/repos/krs0013/Fountain-City-Cycling-Android", "Date": "2015-04-23T21:03:25Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(500); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1359/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.AutoBluePosition1.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "53f4f2a2c1808f98bcfe172cd48282facc2f29b6", "Url": "https://api.github.com/repos/Igutech/FTC-2016_New", "Date": "2017-01-07T17:33:38Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.facebook.react.devsupport.StackTraceHelper.StackFrame[] stack = com.facebook.react.devsupport.StackTraceHelper.convertJsStackTrace(details); mRedBoxDialog.setExceptionDetails(message, stack); mRedBoxDialog.setErrorCookie(errorCookie); if ((mRedBoxHandler) != null) { mRedBoxHandler.handleRedbox(message, stack, RedBoxHandler.ErrorType.JS); } mRedBoxDialog.show(); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7994/buggy-version/ReactAndroid.src.main.java.com.facebook.react.devsupport.DevSupportManagerImpl.java", "BodyUseAPI": ["com.facebook.react.devsupport.RedBoxDialog.setErrorCookie(int)", "com.facebook.react.devsupport.RedBoxHandler.handleRedbox(java.lang.String,com.facebook.react.devsupport.StackTraceHelper.StackFrame[],RedBoxHandler.ErrorType.JS)", "com.facebook.react.devsupport.RedBoxDialog.setExceptionDetails(java.lang.String,com.facebook.react.devsupport.StackTraceHelper.StackFrame[])", "com.facebook.react.devsupport.RedBoxDialog.show()", "com.facebook.react.devsupport.StackTraceHelper.convertJsStackTrace(com.facebook.react.bridge.ReadableArray)"], "Fixed commit": "6160171f25f914596a0288f2f13e6ed6aae41da5", "Url": "https://api.github.com/repos/InnerPeace080/react-native", "Date": "2016-07-08T09:12:50Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(((1000 / (edu.stuy.ricoche.graphics.Screen.MAX_FPS)) - pastTime)); } catch (java.lang.InterruptedException e) { java.lang.System.out.println(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1996/buggy-version/src.graphics.Screen.java", "BodyUseAPI": ["java.lang.Thread.sleep(long)"], "Fixed commit": "1267ce3521978ed80e3d26112bf20b57af7ff5e4", "Url": "https://api.github.com/repos/justinkim/ricoche", "Date": "2014-01-19T07:26:36Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { io.bdrc.xmltoldmigration.MigrationApp.md = java.security.MessageDigest.getInstance(\"MD5\"); } catch (java.security.NoSuchAlgorithmException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3452/buggy-version/src.main.java.io.bdrc.xmltoldmigration.MigrationApp.java", "BodyUseAPI": ["java.security.MessageDigest.getInstance(java.lang.String)"], "Fixed commit": "e8caa61b6c6419846d4ef78fdcdfef22e851a81f", "Url": "https://api.github.com/repos/BuddhistDigitalResourceCenter/xmltoldmigration", "Date": "2017-09-01T16:02:00Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.cse4322.mockstock.UserAccount.createUserAccount(UserAccount.DEFAULT_USER_NAME); } catch (com.cse4322.mockstock.UserAccount e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4825/buggy-version/app.src.main.java.com.cse4322.mockstock.MainActivity.java", "BodyUseAPI": ["com.cse4322.mockstock.UserAccount.createUserAccount(UserAccount.DEFAULT_USER_NAME)"], "Fixed commit": "25ed4653df5240ab72508270d563dab05848704c", "Url": "https://api.github.com/repos/jtompkins84/MockStock", "Date": "2016-11-12T15:29:41Z"},
{"Line": "=>741", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (((fm.jiecao.jcvideoplayer_lib.JCMediaManager.instance().mediaPlayer) != null) && (fm.jiecao.jcvideoplayer_lib.JCMediaManager.instance().mediaPlayer.isPlaying())) { fm.jiecao.jcvideoplayer_lib.JCMediaManager.instance().mediaPlayer.pause(); } } catch (java.lang.IllegalStateException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3823/buggy-version/jcvideoplayer-lib.src.main.java.fm.jiecao.jcvideoplayer_lib.JCVideoPlayer.java", "BodyUseAPI": ["fm.jiecao.jcvideoplayer_lib.JCMediaManager.instance().mediaPlayer.isPlaying()", "fm.jiecao.jcvideoplayer_lib.JCMediaManager.instance()", "fm.jiecao.jcvideoplayer_lib.JCMediaManager.instance().mediaPlayer.pause()", "fm.jiecao.jcvideoplayer_lib.JCMediaManager.instance()", "fm.jiecao.jcvideoplayer_lib.JCMediaManager.instance()"], "Fixed commit": "06eb4b8569d90d3729cb06169bbb89c7971372b4", "Url": "https://api.github.com/repos/lipangit/JiaoZiVideoPlayer", "Date": "2017-01-21T12:44:44Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.apache.http.client.methods.HttpUriRequest currentReq = ((org.apache.http.client.methods.HttpUriRequest) (context.getAttribute(ExecutionContext.HTTP_REQUEST))); org.apache.http.HttpHost currentHost = ((org.apache.http.HttpHost) (context.getAttribute(ExecutionContext.HTTP_TARGET_HOST))); finalUri = (currentReq.getURI().isAbsolute()) ? currentReq.getURI().toString() : (currentHost.toURI()) + (currentReq.getURI()); } catch (java.lang.NullPointerException e) { finalUri = get.getURI().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2804/buggy-version/src.org.openid4java.util.HttpCache.java", "BodyUseAPI": ["org.apache.http.client.methods.HttpUriRequest.getURI()", "org.apache.http.protocol.HttpContext.getAttribute(ExecutionContext.HTTP_REQUEST)", "currentReq.getURI().isAbsolute()", "org.apache.http.client.methods.HttpUriRequest.getURI()", "org.apache.http.client.methods.HttpUriRequest.getURI()", "org.apache.http.HttpHost.toURI()", "currentReq.getURI().toString()", "org.apache.http.protocol.HttpContext.getAttribute(ExecutionContext.HTTP_TARGET_HOST)"], "Fixed commit": "f6e88d5cfadcf8fd70835b13937ab4123ab95877", "Url": "https://api.github.com/repos/janrain/openid4java", "Date": "2013-02-06T18:53:53Z"},
{"Line": "=>1619", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { final java.lang.Object activeContainer = be.Balor.Tools.Compatibility.Reflect.FieldUtils.getField(entityPlayer, \"activeContainer\"); final java.lang.Object defaultContainer = be.Balor.Tools.Compatibility.Reflect.FieldUtils.getField(entityPlayer, \"defaultContainer\"); if (activeContainer != defaultContainer) { final be.Balor.Tools.Compatibility.Reflect.MethodHandler closeInventory = new be.Balor.Tools.Compatibility.Reflect.MethodHandler(entityPlayer.getClass(), \"closeInventory\"); closeInventory.invoke(entityPlayer); } } catch (final java.lang.Throwable e) { DebugLog.INSTANCE.log(java.util.logging.Level.SEVERE, ((((\"Problem when trying to containers of : \" + entityPlayer) + \" (\") + (entityPlayer.getClass())) + \")\"), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/199/buggy-version/src.main.java.be.Balor.Tools.Utils.java", "BodyUseAPI": ["be.Balor.Tools.Compatibility.Reflect.FieldUtils.getField(java.lang.Object,java.lang.String)", "be.Balor.Tools.Compatibility.Reflect.FieldUtils.getField(java.lang.Object,java.lang.String)", "be.Balor.Tools.Compatibility.Reflect.MethodHandler.invoke(java.lang.Object)", "java.lang.Object.getClass()"], "Fixed commit": "f6846da96db504cae9306b5a2cea4cadd2733715", "Url": "https://api.github.com/repos/Belphemur/AdminCmd", "Date": "2013-01-22T21:13:21Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { tempPath = dk.netarkivet.common.utils.Settings.getFile(HarvesterSettings.HERITRIX3_MONITOR_TEMP_PATH); } catch (java.lang.Exception e) { tempPath = new java.io.File(java.lang.System.getProperty(\"java.io.tmpdir\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5002/buggy-version/harvester.harvester-core.src.main.java.dk.netarkivet.harvester.webinterface.servlet.NASEnvironment.java", "BodyUseAPI": ["dk.netarkivet.common.utils.Settings.getFile(HarvesterSettings.HERITRIX3_MONITOR_TEMP_PATH)"], "Fixed commit": "203050262090a72173bd10f54a25ec06df1f9a49", "Url": "https://api.github.com/repos/netarchivesuite/netarchivesuite", "Date": "2016-11-01T14:48:44Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { createUserOnDatabase(user); } catch (java.text.ParseException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8434/buggy-version/app.src.main.java.garbagecollectors.com.snucabpool.activities.LoginActivity.java", "BodyUseAPI": ["garbagecollectors.com.snucabpool.activities.LoginActivity.1.createUserOnDatabase(com.google.firebase.auth.FirebaseUser)"], "Fixed commit": "4e087310d7ff0b7e63591514bb4c87de48c12d33", "Url": "https://api.github.com/repos/divya21raj/UniPool", "Date": "2017-12-16T14:46:23Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { account = escrowService.approveEscrowAccountForId(idCode); } catch (java.io.IOException e) { throw new java.lang.RuntimeException(\"IO issue when approving address\", e.getCause()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6052/buggy-version/src.main.java.com.kryptoeuro.accountmapper.rest.EscrowController.java", "BodyUseAPI": ["com.kryptoeuro.accountmapper.service.EscrowService.approveEscrowAccountForId(long)"], "Fixed commit": "e025e28cd144e70255bc062ce5d13e463eccc08c", "Url": "https://api.github.com/repos/cryptofiat/account-identity", "Date": "2016-12-03T16:54:52Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ssh.setHostname(self.getHostname()).setUsername(self.getSshUsername()).setPassword(self.getSshPassword()).setPort(self.getSshPort()).checkTool(\"ceph\", \"rbd\").runErrorByException(); } catch (org.zstack.utils.ssh.SshException e) { throw new org.zstack.header.errorcode.OperationFailureException(operr(\"The problem may be caused by an incorrect user name or password or SSH port\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/590/buggy-version/plugin.ceph.src.main.java.org.zstack.storage.ceph.CephMonBase.java", "BodyUseAPI": ["org.zstack.utils.ssh.Ssh.setHostname(self.getHostname())", "ssh.setHostname(self.getHostname()).setUsername(self.getSshUsername()).setPassword(self.getSshPassword()).setPort(self.getSshPort()).checkTool(java.lang.String,java.lang.String)", "org.zstack.storage.ceph.CephMonAO.getSshPassword()", "org.zstack.storage.ceph.CephMonAO.getSshPort()", "org.zstack.storage.ceph.CephMonAO.getHostname()", "org.zstack.storage.ceph.CephMonAO.getSshUsername()", "ssh.setHostname(self.getHostname()).setUsername(self.getSshUsername()).setPassword(self.getSshPassword()).setPort(self.getSshPort()).checkTool(\"ceph\", \"rbd\").runErrorByException()", "ssh.setHostname(self.getHostname()).setUsername(self.getSshUsername()).setPassword(self.getSshPassword()).setPort(self.getSshPort())", "ssh.setHostname(self.getHostname()).setUsername(self.getSshUsername())", "ssh.setHostname(self.getHostname()).setUsername(self.getSshUsername()).setPassword(self.getSshPassword())"], "Fixed commit": "bf0fb83623136fd6b744e37f0c587911d0742727", "Url": "https://api.github.com/repos/zstackio/zstack", "Date": "2017-09-01T07:16:03Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { sConn = sFreeList.remove(0); } catch (java.lang.IndexOutOfBoundsException e) { sConn = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2107/buggy-version/src.server.src.java.com.skplanet.querycache.server.ConnMgr.java", "BodyUseAPI": ["java.util.List<com.skplanet.querycache.server.ConnNode>.remove(int)"], "Fixed commit": "e9c818b0fd307a0e23333e9b7e8903d57924fc47", "Url": "https://api.github.com/repos/izlley/querycache", "Date": "2014-07-28T07:44:35Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { return new joist.util.AbstractFixedPrecision.Initializer(new java.math.BigDecimal(value), false); } catch (java.lang.NumberFormatException nfe) { throw new java.lang.RuntimeException((\"Invalid number \" + value), nfe); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3733/buggy-version/util.src.main.java.joist.util.AbstractFixedPrecision.java", "BodyUseAPI": [], "Fixed commit": "ef2ec7a0893a09c0de4a19b3cc79be4f91c3bffb", "Url": "https://api.github.com/repos/stephenh/joist", "Date": "2011-04-12T02:20:26Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { response.sendRedirect(((request.getContextPath()) + (response.encodeURL(homePageService.homePageFor(userRoles).getHomePage())))); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5117/buggy-version/whp-web.src.main.java.org.motechproject.whp.controller.HomeController.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getContextPath()", "org.motechproject.whp.service.HomePageService.homePageFor(java.util.List<java.lang.String>)", "homePageService.homePageFor(userRoles).getHomePage()", "javax.servlet.http.HttpServletResponse.encodeURL(homePageService.homePageFor(userRoles).getHomePage())", "javax.servlet.http.HttpServletResponse.sendRedirect(((request.getContextPath()) + (response.encodeURL(homePageService.homePageFor(userRoles).getHomePage()))))"], "Fixed commit": "12ca3781aaa6ea3abd821570e53949f7bc971ac3", "Url": "https://api.github.com/repos/motech/motech-whp", "Date": "2013-02-21T14:54:22Z"},
{"Line": "=>584", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { dateSetting = net.sf.memoranda.util.Configuration.get(\"DATE_FORMAT_SETTING\").toString(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1741/buggy-version/src.net.sf.memoranda.ui.PreferencesDialog.java", "BodyUseAPI": ["net.sf.memoranda.util.Configuration.get(\"DATE_FORMAT_SETTING\").toString()", "net.sf.memoranda.util.Configuration.get(java.lang.String)"], "Fixed commit": "4a857f9bfbf0ebf9d69b895377f55224b0d4cbf9", "Url": "https://api.github.com/repos/ser316asu/Reinickendorf_SER316", "Date": "2017-03-27T21:24:29Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Object o = net.launcher.utils.Config.config.get(key); return o != null ? o : d; } catch (java.lang.NullPointerException e) { return d; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2878/buggy-version/src.net.launcher.utils.Config.java", "BodyUseAPI": ["org.json.simple.JSONObject.get(java.lang.String)"], "Fixed commit": "f68ba4b62384cf57757067a01ad553ee3fa891eb", "Url": "https://api.github.com/repos/unn4m3d/minml", "Date": "2015-12-18T11:04:57Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { jsonObject = com.alibaba.fastjson.JSON.parseObject(c_x); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3650/buggy-version/workspace.glaf-core.src.main.java.com.glaf.core.util.RequestUtils.java", "BodyUseAPI": ["com.alibaba.fastjson.JSON.parseObject(java.lang.String)"], "Fixed commit": "16cfb791d11e8407dad78fea549a98bf4ecdaf2d", "Url": "https://api.github.com/repos/jior/glaf", "Date": "2014-05-29T03:04:55Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(5000); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/210/buggy-version/gobblin-core.src.main.java.gobblin.publisher.BaseDataPublisher.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "b848c4f2779ae13536fe342d78d9f6917d83b84a", "Url": "https://api.github.com/repos/xadrnd/gobblin", "Date": "2017-02-07T23:04:56Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { data.moveToFirst(); mCallback.sendWord(data.getString(com.tejaskoundinya.wordlist.WordListFragment.COL_WORD_NAME), data.getString(com.tejaskoundinya.wordlist.WordListFragment.COL_WORD_MEANING)); } catch (android.database.CursorIndexOutOfBoundsException e) { android.util.Log.e(LOG_TAG, e.getMessage()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7800/buggy-version/app.src.main.java.com.tejaskoundinya.wordlist.WordListFragment.java", "BodyUseAPI": ["android.database.Cursor.getString(int)", "android.database.Cursor.getString(int)", "android.database.Cursor.moveToFirst()", "com.tejaskoundinya.wordlist.WordListFragment.WordClicked.sendWord(data.getString(com.tejaskoundinya.wordlist.WordListFragment.COL_WORD_NAME),data.getString(com.tejaskoundinya.wordlist.WordListFragment.COL_WORD_MEANING))"], "Fixed commit": "f86b770942ce1a4d3fc9b5f05c8d23b5ad5eaefa", "Url": "https://api.github.com/repos/tejaskoundinya/WordList", "Date": "2015-06-05T13:11:14Z"},
{"Line": "=>611", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.view.inputmethod.InputMethodManager imm = ((android.view.inputmethod.InputMethodManager) (mActivity.getSystemService(Context.INPUT_METHOD_SERVICE))); imm.hideSoftInputFromWindow(mActivity.getCurrentFocus().getWindowToken(), 0); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2662/buggy-version/src.com.zst.xposed.halo.floatingwindow.helpers.MovableOverlayView.java", "BodyUseAPI": ["android.view.inputmethod.InputMethodManager.hideSoftInputFromWindow(mActivity.getCurrentFocus().getWindowToken(),int)", "android.app.Activity.getSystemService(Context.INPUT_METHOD_SERVICE)", "android.app.Activity.getCurrentFocus()", "mActivity.getCurrentFocus().getWindowToken()"], "Fixed commit": "d698055c15625cc454c5596c56333d61f3d8271b", "Url": "https://api.github.com/repos/zst123/XHaloFloatingWindow", "Date": "2014-06-03T13:29:28Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(1000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5566/buggy-version/souvenir.src.main.java.com.mtsmda.souvenir.controller.CaptchaController.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "8623bad03a7a3edb87ec1186f6beac9a2f9dd5dd", "Url": "https://api.github.com/repos/akbars95/springExperiments_03052015", "Date": "2016-02-05T05:47:24Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { openFiles.get(jTabbedPane.getSelectedIndex()).save(); javax.swing.JOptionPane.showMessageDialog(org.incha.ui.texteditor.TextEditor.instance, \"Saved\"); } catch (java.lang.Exception exception) { exception.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/757/buggy-version/jswingripples.src.main.java.org.incha.ui.texteditor.TextEditor.java", "BodyUseAPI": ["openFiles.get(jTabbedPane.getSelectedIndex()).save()", "javax.swing.JOptionPane.showMessageDialog(org.incha.ui.texteditor.TextEditor,java.lang.String)", "java.util.ArrayList<org.incha.core.texteditor.FileOpen>.get(int)", "javax.swing.JTabbedPane.getSelectedIndex()"], "Fixed commit": "564e76a41878271dcd716b6d7555a200e9adce9e", "Url": "https://api.github.com/repos/jSwingRipples/jswingripples", "Date": "2016-05-31T04:14:37Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { rectangleTokenGen = new ru.gleb.manyagin.weathermap.tokens.RectangleToken(this, android.graphics.Color.RED, geoGenLeftTop, geoGenRightBottom); mapView.getOverlays().add(rectangleTokenGen); rectangleTokenSpec = new ru.gleb.manyagin.weathermap.tokens.RectangleToken(this, android.graphics.Color.BLUE, geoSpecLeftTop, geoSpecRightBottom); mapView.getOverlays().add(rectangleTokenSpec); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6879/buggy-version/WeatherMap.app.src.main.java.ru.gleb.manyagin.weathermap.MainActivity.java", "BodyUseAPI": ["mapView.getOverlays().add(ru.gleb.manyagin.weathermap.tokens.RectangleToken)", "org.osmdroid.views.MapView.getOverlays()", "org.osmdroid.views.MapView.getOverlays()", "mapView.getOverlays().add(ru.gleb.manyagin.weathermap.tokens.RectangleToken)"], "Fixed commit": "0914118631e9bdaa77d4374582785d60ed494217", "Url": "https://api.github.com/repos/GlebMan-n/WeatherMapRep", "Date": "2015-05-12T11:13:23Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { tups = storm.kafka.KafkaUtils.generateTuples(_spoutConfig, toEmit.msg); } catch (java.lang.Exception ex) { storm.kafka.PartitionManager.LOG.warn((((\"Error generating tuples for partitionId: \" + (_partition.getId())) + \" offset: \") + (toEmit.offset))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2487/buggy-version/src.jvm.storm.kafka.PartitionManager.java", "BodyUseAPI": ["storm.kafka.KafkaUtils.generateTuples(storm.kafka.SpoutConfig,toEmit.msg)"], "Fixed commit": "218cd7ccf909c6d8a3c325a073a9eaf9d64ed624", "Url": "https://api.github.com/repos/relateiq/storm-kafka-0.8-plus", "Date": "2014-08-21T17:11:12Z"},
{"Line": "=>620", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ((android.app.Activity) (context)).runOnUiThread(r); } catch (java.lang.Exception e) { r.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2865/buggy-version/src.x.lib.CacheManager.java", "BodyUseAPI": ["android.content.Context.runOnUiThread(x.lib.CacheManager.AddFileRunnable)"], "Fixed commit": "1cbabbe36f683dddab860f0b2b2851167b0ecc43", "Url": "https://api.github.com/repos/scruffyfox/X-Library", "Date": "2012-04-13T12:14:42Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { getActivity().runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { setListAdapter(adapter); } }); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4856/buggy-version/app.src.main.java.saadandaakash.uofmscheduler.Fragments.CoursesFragment.java", "BodyUseAPI": ["saadandaakash.uofmscheduler.Fragments.CoursesFragment.1.getActivity()", "getActivity().runOnUiThread(java.lang.Runnable)", "java.lang.Object()", "1.setListAdapter(saadandaakash.uofmscheduler.Fragments.CoursesFragment.CustomAdapter)"], "Fixed commit": "2f3d892b3cd80131fda1e7252da34011533a9362", "Url": "https://api.github.com/repos/sadman98/UofM-Scheduler", "Date": "2017-12-29T02:20:37Z"},
{"Line": "=>1132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return DataManager.inventories.get(id); } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8213/buggy-version/src.main.java.com.censoredsoftware.demigods.player.DCharacter.java", "BodyUseAPI": ["DataManager.inventories.get(java.util.UUID)"], "Fixed commit": "b2db34cfe69b7ae41b36234708af4b1c6f15a607", "Url": "https://api.github.com/repos/CensoredSoftware/Minecraft-Demigods", "Date": "2013-08-16T05:38:25Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.telegram.Amt.wait.until(org.openqa.selenium.support.ui.ExpectedConditions.elementToBeClickable(org.openqa.selenium.By.id(\"btnSearch\"))); } catch (java.lang.Exception rfrf) { org.telegram.Amt.log.info(\"btnSearch not found\"); org.telegram.Amt.wait.until(org.openqa.selenium.support.ui.ExpectedConditions.elementToBeClickable(org.openqa.selenium.By.id(\"LinkButton1\"))); org.telegram.Amt.log.info(\"alreay login page reappeared\"); org.telegram.Amt.driver.findElement(org.openqa.selenium.By.id(\"LinkButton1\")).click(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3299/buggy-version/src.main.java.org.telegram.Amt.java", "BodyUseAPI": ["org.openqa.selenium.By.id(java.lang.String)", "org.openqa.selenium.support.ui.ExpectedConditions.elementToBeClickable(org.openqa.selenium.By.id(\"btnSearch\"))", "org.openqa.selenium.support.ui.WebDriverWait.until(org.openqa.selenium.support.ui.ExpectedConditions.elementToBeClickable(org.openqa.selenium.By.id(\"btnSearch\")))"], "Fixed commit": "ca19fe05693c1d52c15de07d3a686714baef6afc", "Url": "https://api.github.com/repos/arpitjindal97/telegram-amt-bot", "Date": "2017-07-10T11:24:37Z"},
{"Line": "=>593", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { final javax.script.ScriptContext scriptContext = org.egov.infra.script.service.ScriptService.createContext(\"voucherService\", voucherService, \"bill\", bill); scriptService.executeScript(\"egf.bill.budgetcheck\", scriptContext); } catch (final org.egov.infra.validation.exception.ValidationException e) { final java.util.List<org.egov.infra.validation.exception.ValidationError> errors = new java.util.ArrayList<org.egov.infra.validation.exception.ValidationError>(); errors.add(new org.egov.infra.validation.exception.ValidationError(\"exp\", e.getErrors().get(0).getMessage())); throw new org.egov.infra.validation.exception.ValidationException(errors); } catch (final java.lang.Exception e) { final java.util.List<org.egov.infra.validation.exception.ValidationError> errors = new java.util.ArrayList<org.egov.infra.validation.exception.ValidationError>(); errors.add(new org.egov.infra.validation.exception.ValidationError(\"exp\", e.getMessage())); throw new org.egov.infra.validation.exception.ValidationException(errors); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3372/buggy-version/egov.egov-egf.src.main.java.org.egov.web.actions.bill.ContingentBillAction.java", "BodyUseAPI": ["org.egov.infra.script.service.ScriptService.createContext(java.lang.String,org.egov.web.actions.bill.ContingentBillAction,java.lang.String,org.egov.model.bills.EgBillregister)", "org.egov.web.actions.bill.ContingentBillAction.executeScript(java.lang.String,javax.script.ScriptContext)"], "Fixed commit": "920088bcd5e1e5bb76e912dce985fc41be06ef51", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2016-02-10T07:50:12Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.location.Geocoder geocoder = new android.location.Geocoder(this); java.util.List<android.location.Address> listPlace = geocoder.getFromLocation(location.getLatitude(), location.getLongitude(), 1); if ((listPlace != null) && ((listPlace.size()) > 0)) { java.lang.StringBuilder sb = new java.lang.StringBuilder(); for (int l = 0; l < (listPlace.get(0).getMaxAddressLineIndex()); l++) { if (l != 0) sb.append(\"\\n\"); sb.append(listPlace.get(0).getAddressLine(l)); } address = sb.toString(); } } catch (java.io.IOException ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4589/buggy-version/app.src.main.java.eu.faircode.finegeotag.LocationService.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.toString()", "android.location.Geocoder.getFromLocation(location.getLatitude(),location.getLongitude(),int)", "listPlace.get(0).getAddressLine(int)", "listPlace.get(0).getMaxAddressLineIndex()", "java.lang.StringBuilder.append(listPlace.get(0).getAddressLine(l))", "java.util.List<android.location.Address>.size()", "java.util.List<android.location.Address>.get(int)", "android.location.Location.getLatitude()", "android.location.Location.getLongitude()", "java.util.List<android.location.Address>.get(int)"], "Fixed commit": "b72175c05db5e01d18e99114f8fdba28c5e24596", "Url": "https://api.github.com/repos/M66B/FineGeotag", "Date": "2015-05-17T05:45:43Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return em.createQuery(c).getSingleResult(); } catch (javax.persistence.NoResultException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7590/buggy-version/coopuni-ejb.src.main.java.br.edu.ufrn.imd.coopuni.boundary.MemberDAOImpl.java", "BodyUseAPI": ["em.createQuery(c).getSingleResult()", "javax.persistence.EntityManager.createQuery(javax.persistence.criteria.CriteriaQuery<br.edu.ufrn.imd.coopuni.model.Member>)"], "Fixed commit": "b958979b7182ccfb67bd4cb86aead1808c150235", "Url": "https://api.github.com/repos/Bledson/coopuni", "Date": "2015-11-14T18:48:22Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return em.createQuery(c).getSingleResult(); } catch (javax.persistence.NoResultException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7590/buggy-version/coopuni-ejb.src.main.java.br.edu.ufrn.imd.coopuni.boundary.MemberDAOImpl.java", "BodyUseAPI": ["em.createQuery(c).getSingleResult()", "javax.persistence.EntityManager.createQuery(javax.persistence.criteria.CriteriaQuery<br.edu.ufrn.imd.coopuni.model.Member>)"], "Fixed commit": "b958979b7182ccfb67bd4cb86aead1808c150235", "Url": "https://api.github.com/repos/Bledson/coopuni", "Date": "2015-11-14T18:48:22Z"},
{"Line": "=>491", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { for (int b = -1; b < 2; b += 2) { if (((board[(row + a)][(col + b)]) == oLet) && ((board[(row + (2 * a))][(col + (2 * b))]) == ' ')) { return true; } } } catch (java.lang.ArrayIndexOutOfBoundsException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6755/buggy-version/Model.CheckerBoard.java", "BodyUseAPI": [], "Fixed commit": "796af1e00d94f5fa409f2179bcdb3caa512c4e47", "Url": "https://api.github.com/repos/tchordia-zz/NetworkedCheckers", "Date": "2015-05-25T18:47:30Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { if (entityManager.isOpen()) { entityManager.close(); } } finally { config.clearContext(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8389/buggy-version/activejpa-core.src.main.java.org.activejpa.jpa.JPAContext.java", "BodyUseAPI": ["javax.persistence.EntityManager.isOpen()", "javax.persistence.EntityManager.close()"], "Fixed commit": "a90227802ec9f799d1b67eb65d8189c32dae6ca5", "Url": "https://api.github.com/repos/ActiveJpa/activejpa", "Date": "2013-05-27T07:11:14Z"},
{"Line": "=>1009", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { channelDBM.updateReminder(reminderDB); } catch (ulm.university.news.util.exceptions.DatabaseException e) { ulm.university.news.controller.ChannelController.logger.error(ulm.university.news.controller.LOG_SERVER_EXCEPTION, 500, ulm.university.news.controller.DATABASE_FAILURE, \"Database failure.\"); throw new ulm.university.news.util.exceptions.ServerException(500, DATABASE_FAILURE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7254/buggy-version/src.main.java.ulm.university.news.controller.ChannelController.java", "BodyUseAPI": ["ulm.university.news.manager.database.ChannelDatabaseManager.updateReminder(ulm.university.news.controller.Reminder)"], "Fixed commit": "9961f01e775c755dfa99d1c2797c05d79f10773e", "Url": "https://api.github.com/repos/ulm-university-news/UlmUniversityNewsRESTServer", "Date": "2016-03-31T11:31:53Z"},
{"Line": "=>788", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.apache.commons.io.FileUtils.copyFile(file, outputStream); } catch (java.io.FileNotFoundException e) { root.system.utils.Utils.log(root.system.utils.Utils.TAG, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4285/buggy-version/app.src.main.java.root.system.utils.Utils.java", "BodyUseAPI": ["org.apache.commons.io.FileUtils.copyFile(java.io.File,java.io.BufferedOutputStream)"], "Fixed commit": "fb249a81739deaac5f4c6ab51c68cfe544e01e1d", "Url": "https://api.github.com/repos/ryan652/System", "Date": "2016-09-15T04:16:53Z"},
{"Line": "=>618", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { selector.getSelector().close(); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7690/buggy-version/AndroidAsync.src.com.koushikdutta.async.AsyncServer.java", "BodyUseAPI": ["com.koushikdutta.async.SelectorWrapper.getSelector()", "selector.getSelector().close()"], "Fixed commit": "0f0cdf011febb97bacde87771c452b9cf757bcce", "Url": "https://api.github.com/repos/koush/AndroidAsync", "Date": "2014-09-17T17:18:35Z"},
{"Line": "=>590", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { selector.getSelector().close(); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7690/buggy-version/AndroidAsync.src.com.koushikdutta.async.AsyncServer.java", "BodyUseAPI": ["selector.getSelector().close()", "com.koushikdutta.async.SelectorWrapper.getSelector()"], "Fixed commit": "0f0cdf011febb97bacde87771c452b9cf757bcce", "Url": "https://api.github.com/repos/koush/AndroidAsync", "Date": "2014-09-17T17:18:35Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { driver = new frame.autotest.browser.BrowserDriver(\"chrome\"); this.excuteAllTestCase(driver); } catch (java.lang.Exception e) { e.printStackTrace(); } finally { driver.quit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4650/buggy-version/src.main.java.com.ht.service.impl.RunServiceImpl.java", "BodyUseAPI": ["com.ht.service.impl.RunServiceImpl.excuteAllTestCase(frame.autotest.driver.Driver)"], "Fixed commit": "dc8a7d250d303ee39485bae30170406d53a27ff2", "Url": "https://api.github.com/repos/hetao1124/myweb", "Date": "2017-08-22T16:26:35Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { residueColumns.setSelectedValues(manager.getCurrentResidueKeys(network)); } catch (java.lang.IllegalArgumentException iae) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/9105/buggy-version/src.main.java.edu.ucsf.rbvi.structureViz2.internal.model.StructureSettings.java", "BodyUseAPI": ["org.cytoscape.work.util.ListMultipleSelection<java.lang.String>.setSelectedValues(manager.getCurrentResidueKeys(network))", "edu.ucsf.rbvi.structureViz2.internal.model.StructureManager.getCurrentResidueKeys(org.cytoscape.model.CyNetwork)"], "Fixed commit": "cb08b819aacfd5cc8817286b4d3b8d36fb69ae6d", "Url": "https://api.github.com/repos/RBVI/structureViz2", "Date": "2016-03-03T21:35:15Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { commandColumns.setSelectedValues(manager.getCurrentCommandKeys(network)); } catch (java.lang.IllegalArgumentException iae) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/9105/buggy-version/src.main.java.edu.ucsf.rbvi.structureViz2.internal.model.StructureSettings.java", "BodyUseAPI": ["org.cytoscape.work.util.ListMultipleSelection<java.lang.String>.setSelectedValues(manager.getCurrentCommandKeys(network))", "edu.ucsf.rbvi.structureViz2.internal.model.StructureManager.getCurrentCommandKeys(org.cytoscape.model.CyNetwork)"], "Fixed commit": "cb08b819aacfd5cc8817286b4d3b8d36fb69ae6d", "Url": "https://api.github.com/repos/RBVI/structureViz2", "Date": "2016-03-03T21:35:15Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { structureColumns.setSelectedValues(manager.getCurrentStructureKeys(network)); } catch (java.lang.IllegalArgumentException iae) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/9105/buggy-version/src.main.java.edu.ucsf.rbvi.structureViz2.internal.model.StructureSettings.java", "BodyUseAPI": ["edu.ucsf.rbvi.structureViz2.internal.model.StructureManager.getCurrentStructureKeys(org.cytoscape.model.CyNetwork)", "org.cytoscape.work.util.ListMultipleSelection<java.lang.String>.setSelectedValues(manager.getCurrentStructureKeys(network))"], "Fixed commit": "cb08b819aacfd5cc8817286b4d3b8d36fb69ae6d", "Url": "https://api.github.com/repos/RBVI/structureViz2", "Date": "2016-03-03T21:35:15Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { chemColumns.setSelectedValues(manager.getCurrentChemStructKeys(network)); } catch (java.lang.IllegalArgumentException iae) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/9105/buggy-version/src.main.java.edu.ucsf.rbvi.structureViz2.internal.model.StructureSettings.java", "BodyUseAPI": ["edu.ucsf.rbvi.structureViz2.internal.model.StructureManager.getCurrentChemStructKeys(org.cytoscape.model.CyNetwork)", "org.cytoscape.work.util.ListMultipleSelection<java.lang.String>.setSelectedValues(manager.getCurrentChemStructKeys(network))"], "Fixed commit": "cb08b819aacfd5cc8817286b4d3b8d36fb69ae6d", "Url": "https://api.github.com/repos/RBVI/structureViz2", "Date": "2016-03-03T21:35:15Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { maxSheetID = java.lang.Integer.parseInt(map.get(\"sheet_id\").toString()); } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2252/buggy-version/src.main.java.data.InventoryServiceImpl.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "b8dd4c72d035ebc1fd3b094fda14b0223225cbf6", "Url": "https://api.github.com/repos/hadley0828/citi2017", "Date": "2017-09-16T07:52:56Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (!(weap.equals(null))) { damage += (new java.util.Random().nextInt(((weap.getMaxDamage()) - (weap.getMinDamage())))) + (weap.getMinDamage()); } } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2553/buggy-version/fireflies.src.com.crackerjacks.game.core.interactions.Interaction.java", "BodyUseAPI": ["com.crackerjacks.game.core.objects.WeaponItem.getMinDamage()", "com.crackerjacks.game.core.objects.WeaponItem.getMinDamage()", "java.util.Random.nextInt(((weap.getMaxDamage()) - (weap.getMinDamage())))", "com.crackerjacks.game.core.objects.WeaponItem.equals(<nulltype>)", "com.crackerjacks.game.core.objects.WeaponItem.getMaxDamage()"], "Fixed commit": "6b4f8d388b3e161d3c5bce82aefaec7c78fd6874", "Url": "https://api.github.com/repos/jmebia/fireflies-game", "Date": "2017-10-03T01:49:04Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (!(weap.equals(null))) { attack += weap.getAttack(); defense += weap.getDefense(); } } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2553/buggy-version/fireflies.src.com.crackerjacks.game.core.interactions.Interaction.java", "BodyUseAPI": ["com.crackerjacks.game.core.objects.WeaponItem.getAttack()", "com.crackerjacks.game.core.objects.WeaponItem.equals(<nulltype>)", "com.crackerjacks.game.core.objects.WeaponItem.getDefense()"], "Fixed commit": "6b4f8d388b3e161d3c5bce82aefaec7c78fd6874", "Url": "https://api.github.com/repos/jmebia/fireflies-game", "Date": "2017-10-03T01:49:04Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { value = java.lang.Integer.valueOf(stringValue); } catch (java.lang.NumberFormatException nfe) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7841/buggy-version/src.com.esotericsoftware.yamlbeans.YamlReader.java", "BodyUseAPI": ["java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "17cfa849bb67f4e7d95ddab4cae599de751cc148", "Url": "https://api.github.com/repos/rawbertp/yamlbeans", "Date": "2017-11-08T11:35:43Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(1000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4305/buggy-version/src.navalwar.client.network.ClientListenerTheard.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "e3a6b2a19117e36636b5fbf33ade6ee004230306", "Url": "https://api.github.com/repos/educhoko91/MPNW-UPB-Client", "Date": "2013-12-20T13:34:06Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(1000); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6291/buggy-version/reactivesocket-tck-drivers.src.main.java.io.reactivesocket.tckdrivers.client.JavaClientDriver.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "3edd7297de2ff9b3f31ed29316987b124914af96", "Url": "https://api.github.com/repos/xytosis/reactivesocket-java", "Date": "2016-07-30T23:41:40Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.rewriteDatabase(); } catch (java.io.IOException e) { throw new taskie.exceptions.TaskModificationFailedException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6262/buggy-version/src.taskie.database.NStorage.java", "BodyUseAPI": ["taskie.database.NStorage.rewriteDatabase()"], "Fixed commit": "aabe8bc42e44d85f748023b54779954ea902db61", "Url": "https://api.github.com/repos/cs2103jan2015-t15-2j/main", "Date": "2015-03-25T11:14:25Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { fossilized.Fossilized.BackPath.push(fossilized.Fossilized.locations[fossilized.Fossilized.currentLocale]); } catch (java.lang.Exception ex) { java.lang.System.out.println((\"Caught exception: \" + (ex.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4729/buggy-version/Fossilized.java", "BodyUseAPI": ["fossilized.LocStack.push(fossilized.Fossilized.locations[fossilized.Fossilized.currentLocale])"], "Fixed commit": "8a2744a39ed22138d8a43d6afcc694fa290743ea", "Url": "https://api.github.com/repos/1PhoenixM/fossilized-game-4", "Date": "2014-05-04T21:31:19Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { fossilized.Fossilized.FrontPath.enqueue(fossilized.Fossilized.locations[fossilized.Fossilized.currentLocale]); } catch (java.lang.Exception ex) { java.lang.System.out.println((\"Caught exception: \" + (ex.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4729/buggy-version/Fossilized.java", "BodyUseAPI": ["fossilized.LocQueue.enqueue(fossilized.Fossilized.locations[fossilized.Fossilized.currentLocale])"], "Fixed commit": "8a2744a39ed22138d8a43d6afcc694fa290743ea", "Url": "https://api.github.com/repos/1PhoenixM/fossilized-game-4", "Date": "2014-05-04T21:31:19Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { _user.setObjectId(json.getString(\"_id\")); } catch (org.json.JSONException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3748/buggy-version/app.src.main.java.com.izik.recipebook.DAL.NewModel.java", "BodyUseAPI": ["com.izik.recipebook.User.setObjectId(json.getString(\"_id\"))", "org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "4c424fd81ce1af8810a383ba316e2a867dff4791", "Url": "https://api.github.com/repos/Malfonde/CookE", "Date": "2016-05-15T20:53:34Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { new play.modules.rabbitmq.producer.RabbitMQPublisher.RabbitMQPublisherJob(queueName, routingKey, message).doJobWithResult(); } catch (java.lang.Throwable t) { play.Logger.error(play.modules.rabbitmq.util.ExceptionUtil.getStackTrace(t)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3620/buggy-version/src.play.modules.rabbitmq.producer.RabbitMQPublisher.java", "BodyUseAPI": ["play.modules.rabbitmq.producer.RabbitMQPublisher.RabbitMQPublisherJob.doJobWithResult()"], "Fixed commit": "294a3e1804f0193573a35e9089465e16f7a22703", "Url": "https://api.github.com/repos/feliperazeek/play-rabbitmq", "Date": "2011-05-24T01:17:58Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { new play.modules.rabbitmq.producer.RabbitMQPublisher.RabbitMQPublisherJob(queueName, message).doJobWithResult(); } catch (java.lang.Throwable t) { play.Logger.error(play.modules.rabbitmq.util.ExceptionUtil.getStackTrace(t)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3620/buggy-version/src.play.modules.rabbitmq.producer.RabbitMQPublisher.java", "BodyUseAPI": ["play.modules.rabbitmq.producer.RabbitMQPublisher.RabbitMQPublisherJob.doJobWithResult()"], "Fixed commit": "294a3e1804f0193573a35e9089465e16f7a22703", "Url": "https://api.github.com/repos/feliperazeek/play-rabbitmq", "Date": "2011-05-24T01:17:58Z"},
{"Line": "=>851", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((this) instanceof org.earthtime.UPb_Redux.fractions.UPbReduxFractions.UPbLegacyFraction) { java.lang.String rhoConcordia = \"rhoR206_238r__r207_235r\"; xyRho[2].copyValuesFrom(getRadiogenicIsotopeRatioByName(rhoConcordia)); }else if ((this) instanceof org.earthtime.UPb_Redux.fractions.UPbReduxFractions.UPbFraction) { xyRho[2].setValue(((org.earthtime.UPb_Redux.fractions.UPbReduxFractions.UPbFraction) (this)).getReductionHandler().calculateAnalyticalRho(nameOfXaxisSourceValueModel, nameOfYaxisSourceValueModel)); } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4453/buggy-version/src.main.java.org.earthtime.fractions.ETFractionInterface.java", "BodyUseAPI": ["xyRho[2].setValue(((org.earthtime.UPb_Redux.fractions.UPbReduxFractions.UPbFraction) (this)).getReductionHandler().calculateAnalyticalRho(nameOfXaxisSourceValueModel, nameOfYaxisSourceValueModel))", "org.earthtime.fractions.ETFractionInterface.getReductionHandler()", "org.earthtime.fractions.ETFractionInterface.getRadiogenicIsotopeRatioByName(java.lang.String)", "xyRho[2].copyValuesFrom(org.earthtime.UPb_Redux.valueModels.ValueModel)", "((org.earthtime.UPb_Redux.fractions.UPbReduxFractions.UPbFraction) (this)).getReductionHandler().calculateAnalyticalRho(java.lang.String,java.lang.String)"], "Fixed commit": "ef010af5a094d43e6e37c91f9b277fa28fa13b1a", "Url": "https://api.github.com/repos/bowring/ET_Redux", "Date": "2017-01-18T14:18:38Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.amazonaws.services.ec2.model.DescribeSecurityGroupsRequest request = new com.amazonaws.services.ec2.model.DescribeSecurityGroupsRequest(); request.setGroupIds(securityGroupId); result = amazonEC2Client.describeSecurityGroups(request); securityGroups = result.getSecurityGroups(); } catch (java.lang.Exception e) { org.zalando.stups.fullstop.plugin.RunInstancePlugin.LOG.error((\"Could not fetch security groups from Amazon\" + e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5210/buggy-version/fullstop-plugins.fullstop-instance-plugin.src.main.java.org.zalando.stups.fullstop.plugin.RunInstancePlugin.java", "BodyUseAPI": ["com.amazonaws.services.ec2.model.DescribeSecurityGroupsRequest.setGroupIds(java.util.List<java.lang.String>)", "com.amazonaws.services.ec2.model.DescribeSecurityGroupsResult.getSecurityGroups()", "com.amazonaws.services.ec2.AmazonEC2Client.describeSecurityGroups(com.amazonaws.services.ec2.model.DescribeSecurityGroupsRequest)"], "Fixed commit": "212b68e54e1f499aa687f8ac4b72707bcf4b0de4", "Url": "https://api.github.com/repos/zalando-stups/fullstop", "Date": "2015-04-17T11:31:32Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (LIR.Formal f : method.formalList) { symTab.addEntry(new LIR.ParamSymbol((\"__p_\" + (f.name)), typTab.resolveType(f.type.getName()))); } } catch (LIR.SemanticError se) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/501/buggy-version/SLP.src.LIR.LIRTranslator.java", "BodyUseAPI": ["f.type.getName()", "LIR.SymbolTable.addEntry(LIR.ParamSymbol)", "LIR.TypeTable.resolveType(f.type.getName())"], "Fixed commit": "bd9427021b711f15c8f77577fe43e0202b8a659f", "Url": "https://api.github.com/repos/dorshalom/Copmilation_Ex3", "Date": "2015-12-26T17:25:57Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { home = newInstance(user); home.setId(Fragment.ID_HOME); register(home); } catch (marubinotto.piggydb.model.exception.AuthorizationException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7301/buggy-version/src.main.java.marubinotto.piggydb.model.FragmentRepository.java", "BodyUseAPI": ["marubinotto.piggydb.model.FragmentRepository.Base.newInstance(marubinotto.piggydb.model.auth.User)", "marubinotto.piggydb.model.FragmentRepository.Base.register(marubinotto.piggydb.model.entity.RawFragment)", "marubinotto.piggydb.model.entity.RawFragment.setId(Fragment.ID_HOME)"], "Fixed commit": "df7f581c4293a9bae7cce50d4aa75f25a1e4198c", "Url": "https://api.github.com/repos/marubinotto/Piggydb", "Date": "2013-01-14T08:38:56Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { resolution = getStringAttribute(\"Bin Resolution\"); } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7975/buggy-version/seadas-reader.src.main.java.gov.nasa.gsfc.seadas.dataio.MeasuresL3BinFileReader.java", "BodyUseAPI": ["gov.nasa.gsfc.seadas.dataio.MeasuresL3BinFileReader.getStringAttribute(java.lang.String)"], "Fixed commit": "6becc6f8e997e5f345a5683fc75903f0f2533e21", "Url": "https://api.github.com/repos/seadas/seadas", "Date": "2012-07-13T19:13:53Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { newClass = classOBJList.get(list_obj_pair.get(name)); } catch (java.lang.Exception e) { newClass = classOBJList.get(((classOBJList.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/973/buggy-version/app.src.main.java.android.mxdlzg.com.windmill.process.PrepareSchedule.java", "BodyUseAPI": ["java.util.List<android.mxdlzg.com.windmill.config.ClassOBJ>.get(java.lang.Integer)", "java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"], "Fixed commit": "9ba3a577f507151de7d1f156a3f231171f3b4c62", "Url": "https://api.github.com/repos/mxdlzg/Windmill", "Date": "2017-09-13T11:45:42Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { currentPlayer.start(); if ((musicEngineListener) != null) { musicEngineListener.onMusicEnginePrepared(); } com.huhx0015.hxaudio.utils.HXLog.d(com.huhx0015.hxaudio.audio.HXMusicEngine.LOG_TAG, \"MUSIC: onPrepared(): Music playback has begun.\"); } catch (java.lang.Exception e) { com.huhx0015.hxaudio.utils.HXLog.e(com.huhx0015.hxaudio.audio.HXMusicEngine.LOG_TAG, (\"ERROR: onPrepared(): \" + (e.getLocalizedMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5390/buggy-version/hxaudio.src.main.java.com.huhx0015.hxaudio.audio.HXMusicEngine.java", "BodyUseAPI": ["android.media.MediaPlayer.start()", "com.huhx0015.hxaudio.utils.HXLog.d(java.lang.String,java.lang.String)", "com.huhx0015.hxaudio.interfaces.HXMusicEngineListener.onMusicEnginePrepared()"], "Fixed commit": "67e661ffd9f64cb6d55653b6053d8a0ed7a039ee", "Url": "https://api.github.com/repos/huhx0015/HXAudioPlayer", "Date": "2017-04-26T08:51:46Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (((currentPlayer) != null) && ((nextPlayer) != null)) { currentPlayer.setNextMediaPlayer(nextPlayer); currentPlayer.setOnCompletionListener(nextPlayerCompletionListener); } } catch (java.lang.Exception e) { com.huhx0015.hxaudio.utils.HXLog.e(com.huhx0015.hxaudio.audio.HXMusicEngine.LOG_TAG, (\"ERROR: onPrepared(): \" + (e.getLocalizedMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5390/buggy-version/hxaudio.src.main.java.com.huhx0015.hxaudio.audio.HXMusicEngine.java", "BodyUseAPI": ["android.media.MediaPlayer.setOnCompletionListener(MediaPlayer.OnCompletionListener)", "android.media.MediaPlayer.setNextMediaPlayer(android.media.MediaPlayer)"], "Fixed commit": "67e661ffd9f64cb6d55653b6053d8a0ed7a039ee", "Url": "https://api.github.com/repos/huhx0015/HXAudioPlayer", "Date": "2017-04-26T08:51:46Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { application.LocalStorage.file.createNewFile(); } catch (java.io.IOException ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3710/buggy-version/src.application.LocalStorage.java", "BodyUseAPI": ["java.io.File.createNewFile()"], "Fixed commit": "08b3087a074d507daecd9bef2e9f32c510a104fb", "Url": "https://api.github.com/repos/cs2103aug2015-f09-3j/main", "Date": "2015-10-07T10:35:11Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { currentDir = new java.io.File(org.ts_labs.example.FileSystemNavigator.APPLICATION_PATH).getAbsolutePath(); } catch (java.lang.SecurityException e) { org.ts_labs.example.ConsolePrinter.exception(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4349/buggy-version/src.main.java.org.ts_labs.example.FileSystemNavigator.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()"], "Fixed commit": "c5a8af96fb09f183870faed2ad0da36a55f76671", "Url": "https://api.github.com/repos/nanozond/fsn", "Date": "2015-02-01T22:23:07Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { request.setAttribute(\"flights\", service1.findAll()); } catch (by.bsuir.spp.airport.service.ServiceException e) { throw new by.bsuir.spp.airport.command.CommandException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8104/buggy-version/src.main.java.by.bsuir.spp.airport.command.impl.ReserveTicketCommand.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,service1.findAll())", "by.bsuir.spp.airport.service.FlightService.findAll()"], "Fixed commit": "99da81596e47fb41bf5aa2986ef65128ab8ee830", "Url": "https://api.github.com/repos/larisabigvava/airport", "Date": "2016-05-28T08:01:25Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { defaultTransactionIsolation = connection.getTransactionIsolation(); if ((transactionIsolation) == (-1)) { transactionIsolation = defaultTransactionIsolation; } } catch (java.sql.SQLException e) { LOGGER.warn(\"{} - Default transaction isolation level detection failed. ({})\", poolName, e.getMessage()); } finally { isValidChecked = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7263/buggy-version/src.main.java.com.zaxxer.hikari.pool.PoolBase.java", "BodyUseAPI": ["java.sql.Connection.getTransactionIsolation()"], "Fixed commit": "c295eae96034032b88518451fe3159d88e7435eb", "Url": "https://api.github.com/repos/brettwooldridge/HikariCP", "Date": "2016-08-07T04:14:42Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { runtimeText = runtimeComputation(java.lang.Float.parseFloat(movie.getRuntime())); } catch (java.lang.Exception e) { runtimeText = movie.getRuntime(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6153/buggy-version/app.src.main.java.semanticweb.hws14.movapp.activities.MovieDetail.java", "BodyUseAPI": ["java.lang.Float.parseFloat(movie.getRuntime())", "semanticweb.hws14.movapp.activities.MovieDetail.runtimeComputation(float)", "semanticweb.hws14.movapp.model.MovieDet.getRuntime()"], "Fixed commit": "85a8d240dd0625eb6a20a136341c84e47d872913", "Url": "https://api.github.com/repos/Fredsters/Movapp", "Date": "2014-12-01T13:45:55Z"},
{"Line": "=>425", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (graphics.Positions p : positions) { if (((p.getX()) == (currentPositions.getX())) && ((p.getY()) == (currentPositions.getY()))) { find = true; break; } } } catch (java.lang.Exception e) { return find; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7117/buggy-version/src.graphics.SimpleTronFrame.java", "BodyUseAPI": ["graphics.Positions.getY()", "graphics.Positions.getX()", "graphics.Positions.getY()", "graphics.Positions.getX()"], "Fixed commit": "b4193d062a21717e05a4a6616faaaaaff601a314", "Url": "https://api.github.com/repos/andresghedo/DistributedTron", "Date": "2016-01-26T16:35:05Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return org.expath.ns.Bln.get(geo1.relate(geo2, intersectionMatrix.toJava())); } catch (final java.lang.IllegalArgumentException ex) { throw org.expath.ns.GeoErrors.illegalArg(intersectionMatrix); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8953/buggy-version/basex-api.src.main.java.org.expath.ns.Geo.java", "BodyUseAPI": ["org.expath.ns.Str.toJava()", "org.expath.ns.Geometry.relate(org.expath.ns.Geometry,intersectionMatrix.toJava())", "org.expath.ns.Bln.get(geo1.relate(geo2, intersectionMatrix.toJava()))"], "Fixed commit": "f6ffdd992655cc0c33d5c2adcccabedfe1eb2bc0", "Url": "https://api.github.com/repos/BaseXdb/basex", "Date": "2016-01-29T23:33:14Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { hashAlgorithmForOldMda = de.fiz.ddb.aas.administration.ConstEnumHashAlgorithm.forName(oldMda); } catch (java.lang.IllegalArgumentException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/984/buggy-version/src.main.java.de.fiz.ddb.aas.utils.HashingAndEncodingToBase64.java", "BodyUseAPI": ["de.fiz.ddb.aas.administration.ConstEnumHashAlgorithm.forName(java.lang.String)"], "Fixed commit": "fc561ee701609fc06ce15bfe92d527451ea1e051", "Url": "https://api.github.com/repos/Deutsche-Digitale-Bibliothek/ddb-frontend-aas-ldap", "Date": "2015-07-04T11:48:40Z"},
{"Line": "=>659", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { values[j] = nodevalues[j].getValues()[i]; } catch (java.lang.IndexOutOfBoundsException | java.lang.NullPointerException e) { values[j] = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8012/buggy-version/src.dna.series.Aggregation.java", "BodyUseAPI": ["nodevalues[j].getValues()"], "Fixed commit": "ca260b5d5fd30f4486138ceffda756c991dd7736", "Url": "https://api.github.com/repos/Rwilmes/DNA", "Date": "2014-04-04T13:25:14Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.hansson.rento.entities.Apartment apartment = new com.hansson.rento.entities.Apartment(com.hansson.rento.apartments.karlskrona.BengtAkessonFastigheter.LANDLORD); apartment.setCity(com.hansson.rento.apartments.karlskrona.BengtAkessonFastigheter.KARLSKRONA); apartment.setUrl(element.getElementsByTag(\"a\").get(0).attr(\"href\")); for (org.jsoup.nodes.Node node : element.getElementsByClass(\"entry\").get(0).childNodes()) { handleNode(node, apartment); } apartmentLIst.add(apartment); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6925/buggy-version/src.main.java.com.hansson.rento.apartments.karlskrona.BengtAkessonFastigheter.java", "BodyUseAPI": ["com.hansson.rento.entities.Apartment.setUrl(element.getElementsByTag(\"a\").get(0).attr(\"href\"))", "com.hansson.rento.entities.Apartment.setCity(java.lang.String)", "element.getElementsByTag(\"a\").get(int)", "org.jsoup.nodes.Element.getElementsByClass(java.lang.String)", "element.getElementsByClass(\"entry\").get(int)", "element.getElementsByTag(\"a\").get(0).attr(java.lang.String)", "org.jsoup.nodes.Element.getElementsByTag(java.lang.String)", "java.util.List<com.hansson.rento.entities.Apartment>.add(com.hansson.rento.entities.Apartment)", "com.hansson.rento.apartments.karlskrona.BengtAkessonFastigheter.handleNode(org.jsoup.nodes.Node,com.hansson.rento.entities.Apartment)", "element.getElementsByClass(\"entry\").get(0).childNodes()"], "Fixed commit": "14a412cc993df1792727d0160958cee852bc1afc", "Url": "https://api.github.com/repos/hansson/rento", "Date": "2013-12-24T11:24:12Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { issue = issueDao.findByName(issueName); } catch (final javax.persistence.NoResultException noResultException) { com.fabrefrederic.service.IssueServiceImpl.LOGGER.info((\"This issue has not been found - issueName : \" + issueName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3082/buggy-version/bugIssuesManager-service.src.main.java.com.fabrefrederic.service.IssueServiceImpl.java", "BodyUseAPI": ["com.fabrefrederic.dao.interfaces.IssueDao.findByName(java.lang.String)"], "Fixed commit": "475bb83124a9745e3165ec2543c4a92384884f7a", "Url": "https://api.github.com/repos/FabreFrederic/BugIssuesManager", "Date": "2015-06-22T09:18:50Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((java.lang.Double.parseDouble(ee.ut.math.tvt.salessystem.ui.tabs.PurchaseTab.change.getText())) >= 0) { javax.swing.JOptionPane.showMessageDialog(null, (\"Please return \" + (java.lang.Double.parseDouble(ee.ut.math.tvt.salessystem.ui.tabs.PurchaseTab.change.getText())))); try { this.addToHistory(goods); this.removeFromWarehouse(goods); } catch (ee.ut.math.tvt.salessystem.domain.exception.SalesSystemException ex) { java.util.logging.Logger.getLogger(ee.ut.math.tvt.salessystem.ui.tabs.PurchaseTab.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); } }else { inputValidation(panel, goods); } } catch (java.lang.NumberFormatException e) { inputValidation(panel, goods); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5310/buggy-version/POS.src.ee.ut.math.tvt.salessystem.ui.tabs.PurchaseTab.java", "BodyUseAPI": ["javax.swing.JOptionPane.showMessageDialog(<nulltype>,java.lang.String)", "javax.swing.JTextField.getText()", "java.lang.Double.parseDouble(java.lang.String)", "javax.swing.JTextField.getText()", "java.util.logging.Logger.log(java.util.logging.Level,<nulltype>,ee.ut.math.tvt.salessystem.domain.exception.SalesSystemException)", "ee.ut.math.tvt.salessystem.ui.tabs.PurchaseTab.inputValidation(javax.swing.JPanel,java.util.List<ee.ut.math.tvt.salessystem.domain.data.SoldItem>)", "ee.ut.math.tvt.salessystem.ui.tabs.PurchaseTab.addToHistory(java.util.List<ee.ut.math.tvt.salessystem.domain.data.SoldItem>)", "java.util.logging.Logger.getLogger(java.lang.String)", "java.lang.Class.getName()", "java.lang.Double.parseDouble(java.lang.String)", "ee.ut.math.tvt.salessystem.ui.tabs.PurchaseTab.removeFromWarehouse(java.util.List<ee.ut.math.tvt.salessystem.domain.data.SoldItem>)"], "Fixed commit": "f17d1e7cab2f09eeb07600f467e3a8a74426d692", "Url": "https://api.github.com/repos/myloginistaken/sonytech", "Date": "2014-11-04T10:08:22Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.content.SharedPreferences sharedPreferences = getContext().getSharedPreferences(getContext().getPackageName(), com.viableindustries.waterreporter.MODE_PRIVATE); com.viableindustries.waterreporter.utilities.ModelStorage.storeModel(sharedPreferences, authUser, \"stored_user\"); startActivity(new android.content.Intent(activity, com.viableindustries.waterreporter.AuthUserActivity.class)); } catch (java.lang.NullPointerException e) { startActivity(new android.content.Intent(activity, com.viableindustries.waterreporter.SignInActivity.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5769/buggy-version/app.src.main.java.com.viableindustries.waterreporter.NavigationFragment.java", "BodyUseAPI": ["com.viableindustries.waterreporter.NavigationFragment.4.startActivity(android.content.Intent)", "com.viableindustries.waterreporter.NavigationFragment.4.getContext()", "getContext().getSharedPreferences(getContext().getPackageName(),com.viableindustries.waterreporter.MODE_PRIVATE)", "com.viableindustries.waterreporter.NavigationFragment.4.getContext()", "com.viableindustries.waterreporter.utilities.ModelStorage.storeModel(android.content.SharedPreferences,com.viableindustries.waterreporter.api.models.user.User,java.lang.String)", "getContext().getPackageName()"], "Fixed commit": "41cb507867f4553b15bb5ca539353e3861e43440", "Url": "https://api.github.com/repos/WaterReporter/WaterReporter-Android", "Date": "2017-10-19T19:10:23Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { q.setCorrect(answer); } catch (java.lang.Exception e) { e.printStackTrace(); android.util.Log.d(\"Array\", e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5569/buggy-version/app.src.main.java.com.example.jokel.group16_hw04.Question.java", "BodyUseAPI": ["com.example.jokel.group16_hw04.Question.setCorrect(java.util.ArrayList<java.lang.Boolean>)"], "Fixed commit": "f21073d522e2e31aefc5a3b45e4308f787ee3799", "Url": "https://api.github.com/repos/josiahls/Group16_HW04", "Date": "2017-10-02T21:33:34Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { api.register(communicator); } catch (final java.lang.IllegalArgumentException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8182/buggy-version/src.main.java.com.github.rinde.logistics.pdptw.mas.Truck.java", "BodyUseAPI": ["com.github.rinde.rinsim.core.SimulatorAPI.register(com.github.rinde.logistics.pdptw.mas.comm.Communicator)"], "Fixed commit": "6a8b4f6e326ca1c90a08bccdd10755346660afd4", "Url": "https://api.github.com/repos/rinde/RinLog", "Date": "2015-03-26T08:12:28Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { api.register(routePlanner); } catch (final java.lang.IllegalArgumentException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8182/buggy-version/src.main.java.com.github.rinde.logistics.pdptw.mas.Truck.java", "BodyUseAPI": ["com.github.rinde.rinsim.core.SimulatorAPI.register(com.github.rinde.logistics.pdptw.mas.route.RoutePlanner)"], "Fixed commit": "6a8b4f6e326ca1c90a08bccdd10755346660afd4", "Url": "https://api.github.com/repos/rinde/RinLog", "Date": "2015-03-26T08:12:28Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { resultsNode = mapper.readTree(httpResponse.getEntity().getContent()); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4766/buggy-version/src.main.java.de.rwth.i9.palm.datasetcollect.service.MendeleyPublicationCollection.java", "BodyUseAPI": ["org.apache.http.HttpResponse.getEntity()", "httpResponse.getEntity().getContent()", "com.fasterxml.jackson.databind.ObjectMapper.readTree(httpResponse.getEntity().getContent())"], "Fixed commit": "8f8eb978c0d3d1fa73ad9fc8d23a78c00f514f61", "Url": "https://api.github.com/repos/palm-toolkit/palm-core", "Date": "2016-02-23T15:47:48Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { final boolean lafCond = sun.swing.SwingUtilities2.isLocalDisplay(); java.lang.Object aaTextInfo = sun.swing.SwingUtilities2.AATextInfo.getAATextInfo(lafCond); javax.swing.UIManager.getDefaults().put(sun.swing.SwingUtilities2.AA_TEXT_PROPERTY_KEY, aaTextInfo); } catch (java.lang.NoClassDefFoundError e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2407/buggy-version/lightcrafts.src.com.lightcrafts.platform.Launcher.java", "BodyUseAPI": ["javax.swing.UIDefaults.put(sun.swing.SwingUtilities2.AA_TEXT_PROPERTY_KEY,java.lang.Object)", "sun.swing.SwingUtilities2.isLocalDisplay()", "sun.swing.SwingUtilities2.AATextInfo.getAATextInfo(boolean)", "javax.swing.UIManager.getDefaults()"], "Fixed commit": "ec752d9ba04317729dea5ed4ec9f8f2260bd18c0", "Url": "https://api.github.com/repos/ktgw0316/LightZone", "Date": "2016-03-26T09:08:05Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.accounts.Account[] accounts = org.wikipedia.auth.AccountUtil.accountManager().getAccountsByType(org.wikipedia.auth.AccountUtil.accountType()); for (android.accounts.Account account : accounts) { if (username.equalsIgnoreCase(account.name)) { return account; } } } catch (java.lang.SecurityException e) { org.wikipedia.util.log.L.logRemoteErrorIfProd(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2483/buggy-version/app.src.main.java.org.wikipedia.auth.AccountUtil.java", "BodyUseAPI": ["org.wikipedia.auth.AccountUtil.accountType()", "java.lang.String.equalsIgnoreCase(account.name)", "android.accounts.AccountManager.getAccountsByType(java.lang.String)", "org.wikipedia.auth.AccountUtil.accountManager()"], "Fixed commit": "4ba27be58f8a1ea225496c5b3b11966bf222e839", "Url": "https://api.github.com/repos/wikimedia/apps-android-wikipedia", "Date": "2016-09-20T16:56:51Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { setResult(result); } catch (java.lang.IllegalStateException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7811/buggy-version/src.main.java.org.threadly.load.AbstractScriptBuilder.java", "BodyUseAPI": ["org.threadly.load.AbstractScriptBuilder.TestStepRunner.setResult(org.threadly.load.TestResult)"], "Fixed commit": "470184beef8ff8ea2b6f31fea0aba3615e7bc497", "Url": "https://api.github.com/repos/jentfoo/ambush", "Date": "2015-05-08T01:02:11Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { saveCurrentToContainer(); new org.minperm.lm.model.action.MailAction(getContext()).run(); } catch (java.lang.Exception e) { android.widget.Toast.makeText(getContext(), (((\"Error! \" + (e.toString())) + \" \") + (e.getStackTrace()[0].toString())), Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8568/buggy-version/LocationMailer.trunk.src.org.minperm.lm.ui.SettingsView.java", "BodyUseAPI": ["org.minperm.lm.ui.SettingsView.3.getContext()", "org.minperm.lm.ui.SettingsView.3.saveCurrentToContainer()", "org.minperm.lm.model.action.MailAction.run()"], "Fixed commit": "6c6530813bf3a69b5076ac34ea2dbbbe2bd6b7f5", "Url": "https://api.github.com/repos/mcjug2015/minimum-permissions", "Date": "2010-12-26T19:59:32Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { storeSettings(); dialog.dispose(); } catch (java.io.FileNotFoundException ex) { javax.swing.JOptionPane.showMessageDialog(null, net.sf.jabref.Globals.lang(((\"Error_opening_file\" + \": \") + (ex.getMessage()))), net.sf.jabref.Globals.lang(\"Error_opening_file\"), javax.swing.JOptionPane.ERROR_MESSAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7092/buggy-version/src.main.java.net.sf.jabref.journals.ManageJournalsPanel.java", "BodyUseAPI": ["net.sf.jabref.journals.ManageJournalsPanel.4.storeSettings()", "javax.swing.JDialog.dispose()"], "Fixed commit": "c54494ed7c6f647d5a0921307fbcb8e1e5009c41", "Url": "https://api.github.com/repos/igorsteinmacher/jabref", "Date": "2014-07-26T10:38:01Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { pageTitle.setText(questionSet.getName()); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2068/buggy-version/app.src.main.java.com.special.DataCollect.java", "BodyUseAPI": ["android.widget.TextView.setText(questionSet.getName())", "org.rbdc.sra.objects.QuestionSet.getName()"], "Fixed commit": "d82fe686a381c5f79ded65c057933c95bc8ecb85", "Url": "https://api.github.com/repos/siricenter/SRA_Android", "Date": "2015-04-03T20:07:33Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { roommate = il.ac.huji.chores.dal.RoommateDAL.getRoommateByName(username); } catch (com.parse.ParseException e) { if ((e.getCode()) == (com.parse.ParseException.CONNECTION_FAILED)) { android.widget.Toast.makeText(getActivity(), getActivity().getResources().getString(R.string.chores_connection_failed), Toast.LENGTH_LONG).show(); }else { android.widget.Toast.makeText(getActivity(), getActivity().getResources().getString(R.string.general_error), Toast.LENGTH_LONG).show(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8855/buggy-version/Chores.src.il.ac.huji.chores.MyChoresFragment.java", "BodyUseAPI": ["il.ac.huji.chores.dal.RoommateDAL.getRoommateByName(java.lang.String)"], "Fixed commit": "9dd83b21612303a8e969b88ea7d64c54bc0d396d", "Url": "https://api.github.com/repos/Luftzig/Chores", "Date": "2013-09-26T13:10:09Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { boolean itemOwned = (item.getCurrentUser().getId()) == (this.user.getId()); if (!itemOwned) { bRes = (getPermission(func, OwnershipType.COMPANY)) == (PermissionType.RW); } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3055/buggy-version/src.com.c2point.tools.entity.access.SecurityContext.java", "BodyUseAPI": ["com.c2point.tools.entity.repository.ToolItem.getCurrentUser()", "com.c2point.tools.entity.person.OrgUser.getId()", "com.c2point.tools.entity.access.SecurityContext.getPermission(com.c2point.tools.entity.access.FunctionalityType,OwnershipType.COMPANY)", "item.getCurrentUser().getId()"], "Fixed commit": "615c1750f9d0f741a017d459860c396ba6dcaec8", "Url": "https://api.github.com/repos/Yanychar/InventoryServer", "Date": "2017-04-21T11:35:07Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (powerCostSymbol.equals(\"0\")) powerCostSymbol = java.util.Currency.getInstance(java.util.Locale.getDefault()).getSymbol(); } catch (java.lang.IllegalArgumentException e) { powerCostSymbol = \"\u00a3\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2344/buggy-version/app.src.main.java.org.emoncms.myapps.MyElectricMainFragment.java", "BodyUseAPI": ["java.util.Currency.getSymbol()", "java.util.Currency.getInstance(java.util.Locale)", "java.util.Locale.getDefault()", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "11757edca3871fabc700cdcf8cc582fe6af14a36", "Url": "https://api.github.com/repos/tamslinn/AndroidApp", "Date": "2017-03-06T22:12:11Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return convert(buffer, startOffset, zeroByteIndex); } catch (java.nio.charset.CharacterCodingException e) { throw new java.lang.RuntimeException((((\"Failed to parse string with max. length \" + maxLength) + \" in file at offset \") + (java.lang.Integer.toHexString(startOffset)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7046/buggy-version/src.main.java.de.codesourcery.threadwatcher.ThreadEvent.java", "BodyUseAPI": ["de.codesourcery.threadwatcher.ThreadEvent.convert(byte[],int,int)"], "Fixed commit": "4553b6e78f6723f1c27ad7bb704227f0f77d8fc2", "Url": "https://api.github.com/repos/toby1984/threadwatch", "Date": "2013-07-05T08:37:44Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6458/buggy-version/src.main.java.org.traccar.web.server.model.RESTApiServlet.java", "BodyUseAPI": ["javax.servlet.http.HttpServletResponse.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR)"], "Fixed commit": "0102a8b0c585ea7d27b30e3f9ab1eb8f9550609c", "Url": "https://api.github.com/repos/vitalidze/traccar-web", "Date": "2016-07-04T07:13:15Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return java.lang.Integer.parseInt(input); } catch (java.lang.Exception e) { throw new exceptions.InvalidRequest(((\"Invalid field type \" + input) + \". Expecting an integer for aggregation.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/517/buggy-version/app.models.transform.aggregate.AggregateFunction.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "8529970966ae54b3c60b2334ea54d4ea6e97fa86", "Url": "https://api.github.com/repos/RohanBenkar/dataflow-engine", "Date": "2016-08-29T17:43:03Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return java.lang.Long.parseLong(input); } catch (java.lang.Exception e) { throw new exceptions.InvalidRequest(((\"Invalid field type \" + input) + \". Expecting a long for aggregation.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/517/buggy-version/app.models.transform.aggregate.AggregateFunction.java", "BodyUseAPI": ["java.lang.Long.parseLong(java.lang.String)"], "Fixed commit": "8529970966ae54b3c60b2334ea54d4ea6e97fa86", "Url": "https://api.github.com/repos/RohanBenkar/dataflow-engine", "Date": "2016-08-29T17:43:03Z"},
{"Line": "=>513", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { unregisterReceiver(mBrdRcvStopWaitingView); } catch (java.lang.Exception e) { android.util.Log.e(im.vector.activity.VectorHomeActivity.LOG_TAG, (\"## onPause() : unregisterReceiver fails \" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1638/buggy-version/vector.src.main.java.im.vector.activity.VectorHomeActivity.java", "BodyUseAPI": ["im.vector.activity.VectorHomeActivity.unregisterReceiver(android.content.BroadcastReceiver)"], "Fixed commit": "a297d02c27999779885970de128ced575d830ee8", "Url": "https://api.github.com/repos/vector-im/riot-android", "Date": "2016-12-09T10:40:03Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { sort = dev.ukanth.ufirewall.util.G.gPrefs.getString(dev.ukanth.ufirewall.util.G.SORT_BY, \"s0\"); } catch (java.lang.ClassCastException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1823/buggy-version/aFWall.src.main.java.dev.ukanth.ufirewall.util.G.java", "BodyUseAPI": ["android.content.SharedPreferences.getString(java.lang.String,java.lang.String)"], "Fixed commit": "f29ac33ff255bbd00c7823fc451f2b8c38d2788b", "Url": "https://api.github.com/repos/ukanth/afwall", "Date": "2015-08-01T11:56:03Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mColorPicker = ((afzkl.development.mColorPicker.views.ColorPickerView) (layout.findViewById(R.id.color_picker_view))); } catch (java.lang.ClassCastException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5135/buggy-version/WP7Bar.src.afzkl.development.mColorPicker.ColorPickerDialog.java", "BodyUseAPI": ["android.view.View.findViewById(R.id.color_picker_view)"], "Fixed commit": "07d9a9a627c856cc23b2ebb4bf24d5ffa3eb50ef", "Url": "https://api.github.com/repos/Tombarr/StatusBar-", "Date": "2011-09-17T02:55:23Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mNewColor = ((afzkl.development.mColorPicker.views.ColorPanelView) (layout.findViewById(R.id.new_color_panel))); } catch (java.lang.ClassCastException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5135/buggy-version/WP7Bar.src.afzkl.development.mColorPicker.ColorPickerDialog.java", "BodyUseAPI": ["android.view.View.findViewById(R.id.new_color_panel)"], "Fixed commit": "07d9a9a627c856cc23b2ebb4bf24d5ffa3eb50ef", "Url": "https://api.github.com/repos/Tombarr/StatusBar-", "Date": "2011-09-17T02:55:23Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mOldColor = ((afzkl.development.mColorPicker.views.ColorPanelView) (layout.findViewById(R.id.old_color_panel))); } catch (java.lang.ClassCastException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5135/buggy-version/WP7Bar.src.afzkl.development.mColorPicker.ColorPickerDialog.java", "BodyUseAPI": ["android.view.View.findViewById(R.id.old_color_panel)"], "Fixed commit": "07d9a9a627c856cc23b2ebb4bf24d5ffa3eb50ef", "Url": "https://api.github.com/repos/Tombarr/StatusBar-", "Date": "2011-09-17T02:55:23Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.github.rubensousa.bottomsheetbuilder.BottomSheetMenuDialog.super.dismiss(); } catch (java.lang.IllegalArgumentException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6666/buggy-version/bottomsheetbuilder.src.main.java.com.github.rubensousa.bottomsheetbuilder.BottomSheetMenuDialog.java", "BodyUseAPI": ["android.support.design.widget.BottomSheetDialog.dismiss()"], "Fixed commit": "7bd7944f5a3dc7d7c5a89236f801963a21e882c6", "Url": "https://api.github.com/repos/rubensousa/BottomSheetBuilder", "Date": "2017-01-24T22:46:55Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { response = new io.vertx.core.json.JsonObject(bodyString()); } catch (java.lang.Exception e) { throw new java.lang.RuntimeException(\"There was an issue decoding the response body to json.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5068/buggy-version/vertx-json-http-request-client.src.main.java.com.emikra.vertx.request.Response.java", "BodyUseAPI": ["com.emikra.vertx.request.Response.bodyString()"], "Fixed commit": "9a93453450d67c8219f544242d52098882064a90", "Url": "https://api.github.com/repos/emikra/vertx-json-http-request", "Date": "2015-10-10T03:21:01Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.json.JSONArray clientsJSON = createJSON(clients); req.getSession().setAttribute(\"clientsJSON\", clientsJSON); req.getSession().setAttribute(\"clients\", clients); reqDisp = req.getRequestDispatcher(PAGE_STARTSCREEN_SOCIALWORKER); } catch (org.json.JSONException e) { req.setAttribute(\"message\", \"Kon de gegevens niet goed inladen, probeer opnieuw in te loggen.\"); req.setAttribute(\"messageType\", \"error\"); reqDisp = req.getRequestDispatcher(PAGE_LOGIN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6008/buggy-version/FamilyWeb.src.main.java.servlets.FamilyWeb.LoginServlet.java", "BodyUseAPI": ["req.getSession().setAttribute(java.lang.String,java.util.ArrayList<domain.FamilyWeb.Client>)", "javax.servlet.http.HttpServletRequest.getSession()", "req.getSession().setAttribute(java.lang.String,org.json.JSONArray)", "servlets.FamilyWeb.LoginServlet.createJSON(java.util.ArrayList<domain.FamilyWeb.Client>)", "javax.servlet.http.HttpServletRequest.getSession()", "javax.servlet.http.HttpServletRequest.getRequestDispatcher(java.lang.String)"], "Fixed commit": "8688b3472912ce4841f17ba3a65bf99fa4946196", "Url": "https://api.github.com/repos/openrory/Family-Web", "Date": "2015-06-20T10:24:44Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.util.ArrayList<com.bily.samuel.kviz.lib.database.Question> questions = db.getQuestions(testId); com.bily.samuel.kviz.lib.database.Question q = questions.get(0); int idq = q.getId(); return (db.getOptions(idq).size()) > 0; } catch (java.lang.IndexOutOfBoundsException e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6853/buggy-version/app.src.main.java.com.bily.samuel.kviz.QuizActivity.java", "BodyUseAPI": ["com.bily.samuel.kviz.lib.database.Question.getId()", "db.getOptions(idq).size()", "com.bily.samuel.kviz.lib.database.DatabaseHelper.getQuestions(int)", "java.util.ArrayList<com.bily.samuel.kviz.lib.database.Question>.get(int)", "com.bily.samuel.kviz.lib.database.DatabaseHelper.getOptions(int)"], "Fixed commit": "012398c62d502437e92ad765afc5a32a37871c8c", "Url": "https://api.github.com/repos/samuel-bily/spse-kviz", "Date": "2016-04-07T10:40:57Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.exequiel.redditor.reddit.RedditPersister.persistCommentsInternal(context, children, \"\"); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/9072/buggy-version/app.src.main.java.com.exequiel.redditor.reddit.RedditPersister.java", "BodyUseAPI": ["com.exequiel.redditor.reddit.RedditPersister.persistCommentsInternal(android.content.Context,org.json.JSONArray,java.lang.String)"], "Fixed commit": "46b81f1ac1db914b98cc237a0a96e8772e82e98c", "Url": "https://api.github.com/repos/exegonmar/redditor", "Date": "2017-09-20T00:33:44Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { schedule.join(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8820/buggy-version/app.src.main.java.com.weijie.timesheetapp.activities.EditorActivity.java", "BodyUseAPI": ["java.lang.Thread.join()"], "Fixed commit": "362add2e464e9e9554b4ecf3ec2ce9efa4321817", "Url": "https://api.github.com/repos/Airin1990/MyTimesheetApp", "Date": "2017-03-15T05:32:55Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { gameWorld = de.wota.testing.TestWorld.testWorld(); } catch (java.lang.InstantiationException e1) { e1.printStackTrace(); } catch (java.lang.IllegalAccessException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5276/buggy-version/src.de.wota.Simulation.java", "BodyUseAPI": ["de.wota.testing.TestWorld.testWorld()"], "Fixed commit": "679cf5038b852782a1291346df135c4da17f5224", "Url": "https://api.github.com/repos/DanielBruegmann/wota", "Date": "2013-05-05T13:32:47Z"},
{"Line": "=>1935", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { tar = java.lang.Integer.parseInt(tr); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4788/buggy-version/src.org.grameenfoundation.cch.supervisor.model.WebAppInterface.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "0e5b702578c82d747bf183dd627935fc0bde2fc4", "Url": "https://api.github.com/repos/GrameenGhana/cch-mobile-supervisor-android", "Date": "2015-11-16T11:34:28Z"},
{"Line": "=>1949", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { id = java.lang.Long.parseLong(target.getString(\"id\")); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4788/buggy-version/src.org.grameenfoundation.cch.supervisor.model.WebAppInterface.java", "BodyUseAPI": ["java.lang.Long.parseLong(target.getString(\"id\"))", "org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "0e5b702578c82d747bf183dd627935fc0bde2fc4", "Url": "https://api.github.com/repos/GrameenGhana/cch-mobile-supervisor-android", "Date": "2015-11-16T11:34:28Z"},
{"Line": "=>641", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ctor = cls.getDeclaredConstructor(); ctor.setAccessible(true); return ctor.newInstance(); } catch (java.lang.NoSuchMethodException e) { throw new java.lang.InstantiationException(e.getMessage()); } catch (java.lang.SecurityException e) { throw new com.rtomchinsky.antigen.AntigenException(e); } catch (java.lang.Exception e) { throw new java.lang.IllegalAccessException(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8147/buggy-version/Antigen.src.main.java.com.rtomchinsky.antigen.Antigen.java", "BodyUseAPI": ["java.lang.Class<T>.getDeclaredConstructor()", "java.lang.reflect.Constructor<T>.newInstance()", "java.lang.reflect.Constructor<T>.setAccessible(boolean)"], "Fixed commit": "228febf8a4c21afd77cf9f1fa72573526965b7cd", "Url": "https://api.github.com/repos/rtomchinsky/Antigen", "Date": "2015-10-03T01:50:43Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { jpaPerson.create(newPerson); } catch (java.lang.Exception ex) { java.util.logging.Logger.getLogger(populatelist.FXMLDocumentController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6848/buggy-version/PopulateList.src.populatelist.FXMLDocumentController.java", "BodyUseAPI": ["populatelist.PersonJpaController.create(populatelist.Person)"], "Fixed commit": "74107817a74ce23f1d37d5bd230eed720706e7f7", "Url": "https://api.github.com/repos/Randylauj/JavaFxListExercise", "Date": "2015-10-13T13:07:51Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Process p = java.lang.Runtime.getRuntime().exec(\"ps\"); p.waitFor(); java.util.Scanner scanner = new java.util.Scanner(p.getInputStream()); while (scanner.hasNextLine()) { if (scanner.nextLine().contains(processName)) { count++; } } } catch (java.lang.Exception e) { if (BuildConfig.DEBUG) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7280/buggy-version/uninstallfeedback.src.main.java.cn.hiroz.uninstallfeedback.FeedbackUtils.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.util.Scanner.hasNextLine()", "java.util.Scanner.nextLine()", "java.lang.Runtime.exec(java.lang.String)", "java.lang.Process.getInputStream()", "java.lang.Runtime.getRuntime()", "java.lang.Process.waitFor()"], "Fixed commit": "39a0671117d85607921d84dabcecb32901be2c66", "Url": "https://api.github.com/repos/cnzx219/android-uninstall-feedback", "Date": "2015-11-12T12:20:23Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { movie.display = jsonMovie.getString(\"display\"); } catch (org.json.JSONException e) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8785/buggy-version/src.fr.neamar.cinetime.api.APIHelper.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "ae3a130e6d41e82115a84bd0f8008731ee3d27ac", "Url": "https://api.github.com/repos/Neamar/CineTime", "Date": "2013-11-25T09:00:35Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { applicationService.saveOrUpdate(crisTargetClass, rp); org.dspace.app.cris.integration.authority.CrisConsumer.log.info((((\"Build new ResearcherProfile sourceId/sourceRef:\" + authorityKey) + \"/\") + (typeAuthority.toUpperCase()))); } catch (java.lang.Exception ex) { org.dspace.app.cris.integration.authority.CrisConsumer.log.error(ex.getMessage(), ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6852/buggy-version/dspace-cris.api.src.main.java.org.dspace.app.cris.integration.authority.CrisConsumer.java", "BodyUseAPI": ["org.dspace.app.cris.service.ApplicationService.saveOrUpdate(java.lang.Class<org.dspace.app.cris.model.ACrisObject>,org.dspace.app.cris.model.ACrisObject)", "java.lang.String.toUpperCase()", "org.apache.log4j.Logger.info(java.lang.String)"], "Fixed commit": "0742c94ea1b73c96dedf4dee8c1688f9f8f97bb9", "Url": "https://api.github.com/repos/Cineca/DSpace", "Date": "2015-06-26T13:09:45Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { versionName = processManifest.getVersionName(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/233/buggy-version/src.gtisc.app.search.AppSearch.java", "BodyUseAPI": ["gtisc.app.search.ProcessManifest.getVersionName()"], "Fixed commit": "f0dfaa2b95e3eecddbab64fd570bb668779bb653", "Url": "https://api.github.com/repos/lingfennan/app-search", "Date": "2016-05-25T03:52:49Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (((friendAdapter.items.size()) + 1) > (java.lang.Integer.parseInt(betInformationRequest.getMaxUsers()))) { edu.purdue.a307.betcha.Helpers.BToast.makeShort(getApplicationContext(), \"Cannot exceed max users\"); finish(); } for (edu.purdue.a307.betcha.Models.FriendItem item : friendAdapter.items) { edu.purdue.a307.betcha.Api.ApiHelper.getInstance(getApplicationContext()).sendBet(new edu.purdue.a307.betcha.Models.SendBetRequest(item.getFriend().getId(), response.body().getId(), selfToken)).enqueue(new retrofit2.Callback<edu.purdue.a307.betcha.Models.BetchaResponse>() { @java.lang.Override public void onResponse(retrofit2.Call<edu.purdue.a307.betcha.Models.BetchaResponse> call, retrofit2.Response<edu.purdue.a307.betcha.Models.BetchaResponse> response) { if ((response.code()) != 200) { edu.purdue.a307.betcha.Helpers.BToast.makeShort(getApplicationContext(), \"Adding bet user did not work\"); } } @java.lang.Override public void onFailure(retrofit2.Call<edu.purdue.a307.betcha.Models.BetchaResponse> call, java.lang.Throwable t) { edu.purdue.a307.betcha.Helpers.BToast.makeShort(getApplicationContext(), \"Adding bet user did not work\"); } }); } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4900/buggy-version/app.src.main.java.edu.purdue.a307.betcha.Activities.CreateBetActivity.java", "BodyUseAPI": ["edu.purdue.a307.betcha.Api.ApiHelper.getInstance(getApplicationContext()).sendBet(new edu.purdue.a307.betcha.Models.SendBetRequest(item.getFriend().getId(), response.body().getId(), selfToken)).enqueue(retrofit2.Callback<edu.purdue.a307.betcha.Models.BetchaResponse>)", "edu.purdue.a307.betcha.Activities.CreateBetActivity.2.getApplicationContext()", "edu.purdue.a307.betcha.Helpers.BToast.makeShort(getApplicationContext(),java.lang.String)", "friendAdapter.items.size()", "1.getApplicationContext()", "edu.purdue.a307.betcha.Activities.CreateBetActivity.2.getApplicationContext()", "item.getFriend().getId()", "edu.purdue.a307.betcha.Helpers.BToast.makeShort(getApplicationContext(),java.lang.String)", "edu.purdue.a307.betcha.Helpers.BToast.makeShort(getApplicationContext(),java.lang.String)", "edu.purdue.a307.betcha.Api.ApiHelper.getInstance(getApplicationContext()).sendBet(edu.purdue.a307.betcha.Models.SendBetRequest)", "edu.purdue.a307.betcha.Api.ApiHelper.getInstance(getApplicationContext())", "edu.purdue.a307.betcha.Models.BetInformationRequest.getMaxUsers()", "java.lang.Integer.parseInt(betInformationRequest.getMaxUsers())", "retrofit2.Response<edu.purdue.a307.betcha.Models.BetchaResponse>.code()", "1.getApplicationContext()", "edu.purdue.a307.betcha.Models.FriendItem.getFriend()", "retrofit2.Response<edu.purdue.a307.betcha.Models.CreateBetResponse>.body()", "edu.purdue.a307.betcha.Activities.CreateBetActivity.2.finish()", "response.body().getId()"], "Fixed commit": "cdaf2d788fd148d5c52a48ea6e680f57b4dd8b04", "Url": "https://api.github.com/repos/ThreeOhSeven/Frontend", "Date": "2017-11-03T02:43:55Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return doc.getElementById(\"newstext\").html(); } catch (java.lang.NullPointerException e) { return \"<h4 style='text-align:center;'>Oh oh! Esta noticia no existe.</h4>\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5380/buggy-version/diariolibre.src.main.java.com.wmendez.diariolibre.DiarioLibreApp.java", "BodyUseAPI": ["doc.getElementById(\"newstext\").html()", "org.jsoup.nodes.Document.getElementById(java.lang.String)"], "Fixed commit": "7230b3bc8a02c3a5812ef739bac234e038954f7a", "Url": "https://api.github.com/repos/gbaldera/NewsReaders", "Date": "2014-04-12T12:51:55Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.springframework.util.ReflectionUtils.doWithFields(java.lang.Class.forName(clz), new org.springframework.util.ReflectionUtils.FieldCallback() { @java.lang.Override public void doWith(java.lang.reflect.Field field) throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException { if (field.isAnnotationPresent(org.springframework.beans.factory.annotation.Value.class)) list.add(field.getAnnotation(org.springframework.beans.factory.annotation.Value.class).value()); } }); } catch (java.lang.NoClassDefFoundError e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7232/buggy-version/src.org.ironrhino.core.spring.ApplicationContextInspector.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(field.getAnnotation(org.springframework.beans.factory.annotation.Value.class).value())", "java.lang.Class.forName(java.lang.String)", "org.springframework.util.ReflectionUtils.doWithFields(java.lang.Class<?>,org.springframework.util.ReflectionUtils.FieldCallback)", "java.lang.reflect.Field.getAnnotation(java.lang.Class)", "T.value()", "java.lang.reflect.Field.isAnnotationPresent(java.lang.Class)"], "Fixed commit": "08a735da0c36069ea1792fbcbfa9ef2170d342ce", "Url": "https://api.github.com/repos/ironrhino/ironrhino", "Date": "2016-11-14T05:22:01Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { workspace = org.eclipse.core.resources.ResourcesPlugin.getWorkspace(); } catch (java.lang.IllegalStateException e) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6846/buggy-version/eclipse.plugins.net.sf.orcc.cal.src.net.sf.orcc.cal.validation.StructuralValidator.java", "BodyUseAPI": ["org.eclipse.core.resources.ResourcesPlugin.getWorkspace()"], "Fixed commit": "a2921fbe1b65d74c878b931682294a8b9fd8049f", "Url": "https://api.github.com/repos/orcc/orcc", "Date": "2014-06-05T13:54:18Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.bukkit.Bukkit.getScheduler().cancelTask(endtask); arena.getPlayerHandler().leaveWinner(player, Messages.playerwontoplayer); stopArena(); } catch (java.lang.NullPointerException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6475/buggy-version/src.tntrun.arena.handlers.GameHandler.java", "BodyUseAPI": ["org.bukkit.Bukkit.getScheduler()", "arena.getPlayerHandler().leaveWinner(org.bukkit.entity.Player,Messages.playerwontoplayer)", "tntrun.arena.handlers.GameHandler.7.stopArena()", "org.bukkit.Bukkit.getScheduler().cancelTask(int)", "tntrun.arena.Arena.getPlayerHandler()"], "Fixed commit": "5e9ea62871a970dd46f4e50b602c1d9d2281d67a", "Url": "https://api.github.com/repos/ShevchikUnsupportedProjects/TNTRun", "Date": "2015-07-14T18:05:27Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { setDescription(jsonObject.getString(com.homesnap.engine.controller.Controller.JSON_DESCRIPTION)); } catch (org.json.JSONException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3825/buggy-version/engine.src.main.java.com.homesnap.engine.controller.Controller.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)", "com.homesnap.engine.controller.Controller.setDescription(jsonObject.getString(com.homesnap.engine.controller.Controller.JSON_DESCRIPTION))"], "Fixed commit": "1b81f6ee5ccdbf066cfa5d7a2554b6daf711dd59", "Url": "https://api.github.com/repos/arnauddegiuli/HomeSnap", "Date": "2014-09-25T16:27:53Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.System.out.println((((((\"Node is leaving with file \" + filename) + \", type: \") + type) + \" called by \") + (java.rmi.server.RemoteServer.getClientHost()))); } catch (java.rmi.server.ServerNotActiveException snae) { snae.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6694/buggy-version/src.Node.FileManager.java", "BodyUseAPI": ["java.io.PrintStream.println((((((\"Node is leaving with file \" + filename) + \", type: \") + type) + \" called by \") + (java.rmi.server.RemoteServer.getClientHost())))", "java.rmi.server.RemoteServer.getClientHost()"], "Fixed commit": "0290b4ead969c3ff8c39635fbf4e0da28d22de45", "Url": "https://api.github.com/repos/AstridVanneste/System_Y", "Date": "2017-12-11T09:42:35Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { activeWeapon.fire(fireDirection); } catch (java.lang.Exception e) { java.lang.System.err.println(\"no activeWeapon found!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1052/buggy-version/src.mygame.Tank.java", "BodyUseAPI": ["mygame.Weapon.fire(com.jme3.math.Vector3f)"], "Fixed commit": "d7c1ecfb53f583911fa054fa1854f2b578e20bde", "Url": "https://api.github.com/repos/fnozarian/TankRepo", "Date": "2014-02-19T13:01:45Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { remote.delete(res); } catch (at.bitfire.davdroid.webdav.NotFoundException e) { android.util.Log.i(at.bitfire.davdroid.syncadapter.SyncManager.TAG, \"Locally-deleted resource has already been removed from server\"); } catch (at.bitfire.davdroid.webdav.PreconditionFailedException e) { android.util.Log.i(at.bitfire.davdroid.syncadapter.SyncManager.TAG, \"Locally-deleted resource has been changed on the server in the meanwhile\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8794/buggy-version/src.at.bitfire.davdroid.syncadapter.SyncManager.java", "BodyUseAPI": ["at.bitfire.davdroid.resource.RemoteCollection<? extends at.bitfire.davdroid.resource.Resource>.delete(at.bitfire.davdroid.resource.Resource)"], "Fixed commit": "b1ffdbfa9589f14a91356ce3a62bf2dbffd903ce", "Url": "https://api.github.com/repos/MirakelX/davdroid", "Date": "2014-03-14T22:14:32Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return coreSession.getDocument(new org.nuxeo.ecm.core.api.IdRef(docId)); } catch (org.nuxeo.ecm.core.api.ClientException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/697/buggy-version/nuxeo-classification-web.src.main.java.org.nuxeo.ecm.platform.classification.ClassifiedPageProvider.java", "BodyUseAPI": ["org.nuxeo.ecm.core.api.CoreSession.getDocument(org.nuxeo.ecm.core.api.IdRef)"], "Fixed commit": "6d45e565cc58c7d177ef72cab3b4e2ac892289b1", "Url": "https://api.github.com/repos/nuxeo/nuxeo-platform-classification", "Date": "2012-12-21T16:23:32Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { loadDao.load(reader); } finally { reader.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4945/buggy-version/myAndroid.src.jemstone.util.file.FileManager.java", "BodyUseAPI": ["jemstone.util.file.LoadFileDao.load(java.io.Reader)"], "Fixed commit": "cbfc8f4265723f756c9609a913c4584fe2c74be5", "Url": "https://api.github.com/repos/peterchandler/myAndroid", "Date": "2013-11-25T18:54:03Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.usfirst.frc2619.TubeBot2017.RobotMap.init(); } catch (edu.wpi.first.wpilibj.can.CANTimeoutException ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7213/buggy-version/src.org.usfirst.frc2619.TubeBot2017.Robot.java", "BodyUseAPI": ["org.usfirst.frc2619.TubeBot2017.RobotMap.init()"], "Fixed commit": "e989cc65d99ea920dfbd0f396c1eb136d2eab648", "Url": "https://api.github.com/repos/The-Charge/Tubebot2017", "Date": "2017-12-05T01:21:30Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { xml = this.bioportalRestService.getOntologyVersionsByOntologyId(ontologyId); } catch (java.lang.Exception e) { edu.mayo.cts2.framework.plugin.service.bioportal.identity.IdentityConverter.log.warn(((\"Error caching OntologyId: \" + ontologyId) + \". Skipping.\"), e); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2278/buggy-version/src.main.java.edu.mayo.cts2.framework.plugin.service.bioportal.identity.IdentityConverter.java", "BodyUseAPI": ["edu.mayo.cts2.framework.plugin.service.bioportal.rest.BioportalRestService.getOntologyVersionsByOntologyId(java.lang.String)"], "Fixed commit": "d56146def4dc849fc2581045018288ef2c56bb4b", "Url": "https://api.github.com/repos/cts2/bioportal-service", "Date": "2012-03-26T23:38:27Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { xml = this.bioportalRestService.getEntityByOntologyIdAndEntityId(ontologyId, searchId); } catch (org.springframework.web.client.HttpClientErrorException e) { if (e.getStatusCode().equals(HttpStatus.NOT_FOUND)) { return null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2278/buggy-version/src.main.java.edu.mayo.cts2.framework.plugin.service.bioportal.profile.entitydescription.BioportalRestEntityDescriptionReadService.java", "BodyUseAPI": ["edu.mayo.cts2.framework.plugin.service.bioportal.rest.BioportalRestService.getEntityByOntologyIdAndEntityId(java.lang.String,java.lang.String)"], "Fixed commit": "d56146def4dc849fc2581045018288ef2c56bb4b", "Url": "https://api.github.com/repos/cts2/bioportal-service", "Date": "2012-03-26T23:38:27Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { tal = new main.java.miro.validator.types.TrustAnchorLocator((((talDirectory.getAbsolutePath()) + \"/\") + filename)); } catch (java.lang.Exception e) { main.java.miro.browser.browser.updater.ModelUpdater.log.log(java.util.logging.Level.SEVERE, ((\"Error reading TAL \" + filename) + \". Skipping\")); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2322/buggy-version/src.main.java.miro.browser.browser.updater.ModelUpdater.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()"], "Fixed commit": "7110146a6a5eb796dc2c940998ecba41f2015446", "Url": "https://api.github.com/repos/rpki-miro/MIRO.Browser", "Date": "2017-10-24T22:13:03Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { inMethod = soot.Scene.v().getMethod(inSignature); } catch (java.lang.RuntimeException re) { re.printStackTrace(); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5099/buggy-version/soot-infoflow.src.com.monster.taint.mstcallback.MSTCallback.java", "BodyUseAPI": ["soot.Scene.v().getMethod(java.lang.String)", "soot.Scene.v()"], "Fixed commit": "1337ae9451e9a564c09720c71303ea58165ae9e9", "Url": "https://api.github.com/repos/0-14N/Monster", "Date": "2014-04-02T13:32:12Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { return new org.apache.commons.httpclient.methods.PutMethod(url); } catch (java.lang.Exception e) { org.openhab.io.net.http.HttpUtil.logger.error(\"Failed to create PUT method: {}\", e.getMessage()); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8364/buggy-version/bundles.io.org.openhab.io.net.src.main.java.org.openhab.io.net.http.HttpUtil.java", "BodyUseAPI": [], "Fixed commit": "cb1eb414c90764ec8b9f4bb2aee74e63c92547ed", "Url": "https://api.github.com/repos/9037568/openhab", "Date": "2016-10-06T02:46:13Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { return new org.apache.commons.httpclient.methods.DeleteMethod(url); } catch (java.lang.Exception e) { org.openhab.io.net.http.HttpUtil.logger.error(\"Failed to create DELETE method: {}\", e.getMessage()); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8364/buggy-version/bundles.io.org.openhab.io.net.src.main.java.org.openhab.io.net.http.HttpUtil.java", "BodyUseAPI": [], "Fixed commit": "cb1eb414c90764ec8b9f4bb2aee74e63c92547ed", "Url": "https://api.github.com/repos/9037568/openhab", "Date": "2016-10-06T02:46:13Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { return new org.apache.commons.httpclient.methods.GetMethod(url); } catch (java.lang.Exception e) { org.openhab.io.net.http.HttpUtil.logger.error(\"Failed to create GET method: {}\", e.getMessage()); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8364/buggy-version/bundles.io.org.openhab.io.net.src.main.java.org.openhab.io.net.http.HttpUtil.java", "BodyUseAPI": [], "Fixed commit": "cb1eb414c90764ec8b9f4bb2aee74e63c92547ed", "Url": "https://api.github.com/repos/9037568/openhab", "Date": "2016-10-06T02:46:13Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { return new org.apache.commons.httpclient.methods.PostMethod(url); } catch (java.lang.Exception e) { org.openhab.io.net.http.HttpUtil.logger.error(\"Failed to create POST method: {}\", e.getMessage()); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8364/buggy-version/bundles.io.org.openhab.io.net.src.main.java.org.openhab.io.net.http.HttpUtil.java", "BodyUseAPI": [], "Fixed commit": "cb1eb414c90764ec8b9f4bb2aee74e63c92547ed", "Url": "https://api.github.com/repos/9037568/openhab", "Date": "2016-10-06T02:46:13Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Runtime runtime = java.lang.Runtime.getRuntime(); java.lang.System.out.println((\"Runtime! exec:\" + sPmdCommand)); proc = runtime.exec(sPmdCommand); de.htwg.konstanz.cloud.model.ReadStream s1 = new de.htwg.konstanz.cloud.model.ReadStream(\"stdin\", proc.getInputStream()); de.htwg.konstanz.cloud.model.ReadStream s2 = new de.htwg.konstanz.cloud.model.ReadStream(\"stderr\", proc.getErrorStream()); s1.start(); s2.start(); proc.waitFor(); } catch (java.io.IOException | java.lang.InterruptedException ex) { ex.printStackTrace(); } finally { if (proc != null) { proc.destroy(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2401/buggy-version/microservices.core.pmd-service.src.main.java.de.htwg.konstanz.cloud.service.Util.java", "BodyUseAPI": ["java.lang.Process.waitFor()", "java.io.PrintStream.println(java.lang.String)", "java.lang.Runtime.getRuntime()", "java.lang.Runtime.exec(java.lang.String)", "java.lang.Process.getErrorStream()", "de.htwg.konstanz.cloud.model.ReadStream.start()", "java.lang.Process.getInputStream()", "de.htwg.konstanz.cloud.model.ReadStream.start()"], "Fixed commit": "c1069f5874758ba8a772befd7761d1851fff323c", "Url": "https://api.github.com/repos/htwg-cloud-application-development/static-code-analytics-application", "Date": "2016-06-24T16:53:01Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { profpic.setProfileId(prof.getId()); } catch (java.lang.NullPointerException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8179/buggy-version/UnanimusProject.src.com.sjgilbert.unanimus.MainActivity.java", "BodyUseAPI": ["com.facebook.Profile.getId()", "com.facebook.login.widget.ProfilePictureView.setProfileId(prof.getId())"], "Fixed commit": "1072aa21a0d2b44d7b0b8be98008ddd632956822", "Url": "https://api.github.com/repos/sjgilbert/Unanimus", "Date": "2015-08-04T22:36:51Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { formatted.add(generateResponse(o).get()); } catch (redis.clients.jedis.exceptions.JedisDataException e) { formatted.add(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4418/buggy-version/src.main.java.redis.clients.jedis.Pipeline.java", "BodyUseAPI": ["redis.clients.jedis.Pipeline.generateResponse(java.lang.Object)", "java.util.List<java.lang.Object>.add(generateResponse(o).get())", "generateResponse(o).get()"], "Fixed commit": "ec0b58e1836355d78d2649719c3cbc51579aaacc", "Url": "https://api.github.com/repos/vivekhub/jedis", "Date": "2011-08-01T03:28:51Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { in.nextName(); semester = edu.hm.cs.fs.common.constant.Semester.valueOf(in.nextString()); } catch (java.lang.Exception ignored) { in.nextNull(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4129/buggy-version/client.src.main.java.edu.hm.cs.fs.restclient.typeadapter.GroupTypeAdapter.java", "BodyUseAPI": ["edu.hm.cs.fs.common.constant.Semester.valueOf(in.nextString())", "com.google.gson.stream.JsonReader.nextName()", "com.google.gson.stream.JsonReader.nextString()"], "Fixed commit": "11b6a3f6d3cf3ac8f319a93dd05d8e824dc99ef1", "Url": "https://api.github.com/repos/Fachschaft07/fs-rest", "Date": "2015-08-15T09:15:06Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { return apiClient.invokeAPI(localVarPath, \"GET\", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAccept, localVarContentType, localVarAuthNames, localVarReturnType); } finally { apiClient.setBasePath(basePath); apiClient.setDateFormat(dateFormat); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6586/buggy-version/src.main.java.net.troja.eve.esi.api.SsoApi.java", "BodyUseAPI": ["net.troja.eve.esi.ApiClient.invokeAPI(java.lang.String,java.lang.String,java.util.List<net.troja.eve.esi.Pair>,java.lang.Object,java.util.Map<java.lang.String, java.lang.String>,java.util.Map<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,java.lang.String[],javax.ws.rs.core.GenericType<net.troja.eve.esi.auth.CharacterInfo>)"], "Fixed commit": "e934aef15e8f3767c5eeb31a518988c964ec57cb", "Url": "https://api.github.com/repos/GoldenGnu/eve-esi", "Date": "2017-07-06T10:53:31Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { inputStream.close(); } catch (java.io.IOException e) { org.roda.rodain.utils.validation.Input.log.error(\"Error closing stream\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1277/buggy-version/src.main.java.org.roda.rodain.utils.validation.Input.java", "BodyUseAPI": ["java.io.BufferedInputStream.close()"], "Fixed commit": "ccf100073f94c0f6a863f66635e0f153588a8cbe", "Url": "https://api.github.com/repos/keeps/roda-in", "Date": "2016-03-16T15:51:43Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (bridge.eco.isEnabled()) return bridge; } catch (java.lang.Exception e) { return bridge; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2075/buggy-version/src.main.java.org.bitbucket.ucchy.undine.bridge.VaultEcoBridge.java", "BodyUseAPI": ["net.milkbowl.vault.economy.Economy.isEnabled()"], "Fixed commit": "15e8ea90906ab8d54303bb6dd9dff6498a6d6b53", "Url": "https://api.github.com/repos/ucchyocean/UndineMailer", "Date": "2015-04-29T07:19:27Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String action = intent.getAction(); if ((action != null) && (action.equals(ru.tulupov.alex.pluggedin.activities.ACTION_VIEW_STR))) { java.lang.String utl = intent.getData().toString(); presenter.showArticleOrReviewByURL(utl); } } catch (java.lang.NullPointerException e) { android.util.Log.d(ru.tulupov.alex.pluggedin.activities.MY_TAG, \"fail newIntent\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5773/buggy-version/app.src.main.java.ru.tulupov.alex.pluggedin.activities.MainActivity.java", "BodyUseAPI": ["ru.tulupov.alex.pluggedin.presenters.ShowBasePresenter.showArticleOrReviewByURL(java.lang.String)", "android.content.Intent.getAction()", "intent.getData().toString()", "java.lang.String.equals(ru.tulupov.alex.pluggedin.activities.ACTION_VIEW_STR)", "android.content.Intent.getData()"], "Fixed commit": "315cad5972c56c0370b5f2f486f9df0414e758f0", "Url": "https://api.github.com/repos/Algresh/PluggedinAndroid", "Date": "2016-08-22T06:08:01Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ain.toIcon().extractFrom(source); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/326/buggy-version/src.main.java.de.onyxbits.raccoon.appimporter.ImportAppWorker.java", "BodyUseAPI": ["ain.toIcon().extractFrom(java.io.File)", "de.onyxbits.raccoon.repo.AppInstallerNode.toIcon()"], "Fixed commit": "605e7ec8446fbed965528b216dbf10bf471d9cda", "Url": "https://api.github.com/repos/onyxbits/raccoon4", "Date": "2017-06-21T22:16:01Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { actionInfos = metaStore.getActions(cmdletInfo.getAids()); actionsInDB = true; } catch (org.smartdata.metastore.MetaStoreException e) { LOG.error(\"Get aids -> [ {} ] from database error!\", cmdletInfo.getAids(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/250/buggy-version/smart-engine.src.main.java.org.smartdata.server.engine.CmdletManager.java", "BodyUseAPI": ["org.smartdata.metastore.MetaStore.getActions(cmdletInfo.getAids())", "org.smartdata.model.CmdletInfo.getAids()"], "Fixed commit": "94da749bd8b6df1534f1b573f7fb21e4a96e29d6", "Url": "https://api.github.com/repos/qiyuangong/SSM", "Date": "2017-10-13T10:29:55Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.emphasizedPattern = (com.google.common.base.Strings.nullToEmpty(pattern).trim().isEmpty()) ? null : java.util.regex.Pattern.compile(pattern); } catch (java.util.regex.PatternSyntaxException pse) { this.emphasizedPattern = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6149/buggy-version/jlogfilter-gui.src.main.java.org.sankozi.jlogfilter.gui.LogTable.java", "BodyUseAPI": ["com.google.common.base.Strings.nullToEmpty(pattern).trim()", "java.util.regex.Pattern.compile(java.lang.String)", "com.google.common.base.Strings.nullToEmpty(java.lang.String)", "com.google.common.base.Strings.nullToEmpty(pattern).trim().isEmpty()"], "Fixed commit": "c6aa0e1e1a510b05fd537d0d44502da51fa568e7", "Url": "https://api.github.com/repos/Sankozi/jlogfilter", "Date": "2014-10-12T13:14:34Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { int val = lexer.intValue(); intObj = java.lang.Integer.valueOf(val); } catch (java.lang.NumberFormatException ex) { throw new com.alibaba.fastjson.JSONException((\"int value overflow, field : \" + fieldName), ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5312/buggy-version/src.main.java.com.alibaba.fastjson.serializer.IntegerCodec.java", "BodyUseAPI": ["java.lang.Integer.valueOf(int)", "com.alibaba.fastjson.parser.JSONLexer.intValue()"], "Fixed commit": "6d247f02177e60c467060be92e9ed0950eb64c7b", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-04-11T17:40:21Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { dialog.show(); android.widget.TextView message = ((android.widget.TextView) (dialog.findViewById(android.R.id.message))); if (message != null) { se.springworks.android.utils.view.LinkifyUtil.linkify(message); } } catch (android.view.WindowManager.BadTokenException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2828/buggy-version/androidutils-lib.src.se.springworks.android.utils.dialog.DialogBuilder.java", "BodyUseAPI": ["android.app.AlertDialog.findViewById(android.R.id.message)", "android.app.AlertDialog.show()", "se.springworks.android.utils.view.LinkifyUtil.linkify(android.widget.TextView)"], "Fixed commit": "1294c9b96c334dcd83e1696659a5c15fd54f7fe2", "Url": "https://api.github.com/repos/britzl/androidutils", "Date": "2014-02-23T07:10:14Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { se.springworks.android.utils.error.ErrorHandler.currentDialog.dismiss(); } catch (java.lang.IllegalArgumentException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2828/buggy-version/androidutils-lib.src.se.springworks.android.utils.error.ErrorHandler.java", "BodyUseAPI": ["android.app.Dialog.dismiss()"], "Fixed commit": "1294c9b96c334dcd83e1696659a5c15fd54f7fe2", "Url": "https://api.github.com/repos/britzl/androidutils", "Date": "2014-02-23T07:10:14Z"},
{"Line": "=>397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { thrift_cli.endIfStatement(); } catch (tw.maple.org.apache e1) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5503/buggy-version/src.java.tw.maple.ProgramNodeDumper.java", "BodyUseAPI": ["AstDumper.Client.endIfStatement()"], "Fixed commit": "ed80e2b1d80ec5b32f5e89320c6b30371332dfca", "Url": "https://api.github.com/repos/mapleelpam/adobe-asc-thrift", "Date": "2011-04-10T17:15:36Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { locations.put(getString(R.string.command), \"update_location\"); locations.put(\"id_unique\", csci498.ccard.findmyphone.CurrentPhoneManager.getInstance().getPhone().getUniqueID()); } catch (org.json.JSONException e) { android.util.Log.e(csci498.ccard.findmyphone.CommandPollerService.LOG_MSG, null, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3752/buggy-version/FindMyPhone.src.csci498.ccard.findmyphone.CommandPollerService.java", "BodyUseAPI": ["csci498.ccard.findmyphone.CurrentPhoneManager.getInstance().getPhone().getUniqueID()", "org.json.JSONObject.put(getString(R.string.command),java.lang.String)", "csci498.ccard.findmyphone.CurrentPhoneManager.getInstance().getPhone()", "org.json.JSONObject.put(java.lang.String,csci498.ccard.findmyphone.CurrentPhoneManager.getInstance().getPhone().getUniqueID())", "csci498.ccard.findmyphone.CurrentPhoneManager.getInstance()", "csci498.ccard.findmyphone.CommandPollerService.getString(R.string.command)"], "Fixed commit": "ae286c58a6e0c386f6fa11192ed3177f5e4b5ac6", "Url": "https://api.github.com/repos/ccard/csci498TermProject", "Date": "2012-12-11T00:58:27Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { failureContainer.logFailureInfo(); } finally { shutdown(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4675/buggy-version/simulator.src.main.java.com.hazelcast.simulator.coordinator.Coordinator.java", "BodyUseAPI": ["com.hazelcast.simulator.coordinator.FailureContainer.logFailureInfo()"], "Fixed commit": "89b147c7704662e5fe2b3e13e4b8af1f58cb7cf4", "Url": "https://api.github.com/repos/hasancelik/hazelcast-stabilizer", "Date": "2015-12-07T02:59:31Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { takePictureIntent.putExtra(MediaStore.EXTRA_OUTPUT, android.support.v4.content.FileProvider.getUriForFile(this, ((this.getApplicationContext().getPackageName()) + \".provider\"), createImageFile())); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/930/buggy-version/app.src.main.java.com.fonsecakarsten.audiobooky.miscActivity.java", "BodyUseAPI": ["this.getApplicationContext().getPackageName()", "android.support.v4.content.FileProvider.getUriForFile(com.fonsecakarsten.audiobooky.miscActivity,((this.getApplicationContext().getPackageName()) + \".provider\"),java.io.File)", "com.fonsecakarsten.audiobooky.miscActivity.createImageFile()", "android.content.Intent.putExtra(MediaStore.EXTRA_OUTPUT,android.support.v4.content.FileProvider.getUriForFile(this, ((this.getApplicationContext().getPackageName()) + \".provider\"), createImageFile()))", "com.fonsecakarsten.audiobooky.miscActivity.getApplicationContext()"], "Fixed commit": "96d3945707650c308a27b0e244f571cc5df26413", "Url": "https://api.github.com/repos/Karsten12/Listen", "Date": "2017-06-06T04:19:55Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { image = javax.imageio.ImageIO.read(file); net.minecraft.client.renderer.texture.TextureUtil.uploadTextureImage(getGlTextureId(), image); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/240/buggy-version/src.main.java.net.shadowmage.ancientwarfare.core.util.TextureFileBased.java", "BodyUseAPI": ["javax.imageio.ImageIO.read(java.io.File)", "net.minecraft.client.renderer.texture.TextureUtil.uploadTextureImage(getGlTextureId(),java.awt.image.BufferedImage)", "net.shadowmage.ancientwarfare.core.util.TextureFileBased.getGlTextureId()"], "Fixed commit": "5a4a1d91277e946ad71e6bf597bf449fa25872ee", "Url": "https://api.github.com/repos/shadowmage45/AncientWarfare2", "Date": "2014-06-16T14:54:23Z"},
{"Line": "=>789", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { stateField = session.getField(testSessionStateField); } catch (java.util.NoSuchElementException nsee) { stateField = walkResponse.getWorkItem(session.getId()).getField(testSessionStateField); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/823/buggy-version/src.main.java.hudson.scm.IntegrityItemAction.java", "BodyUseAPI": ["com.mks.api.response.Item.getField(java.lang.String)"], "Fixed commit": "2f953bec730333f0bfe38b313630cccdec7d5c93", "Url": "https://api.github.com/repos/jenkinsci/integrity-plugin", "Date": "2014-10-08T15:56:54Z"},
{"Line": "=>587", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { testCaseIDFld = test.getField(testCaseTestNameField); containsFld = test.getField(testSuiteContainsField); } catch (java.util.NoSuchElementException nsee) { testCaseIDFld = walkResponse.getWorkItem(test.getId()).getField(testCaseTestNameField); containsFld = walkResponse.getWorkItem(test.getId()).getField(testSuiteContainsField); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/823/buggy-version/src.main.java.hudson.scm.IntegrityItemAction.java", "BodyUseAPI": ["com.mks.api.response.Item.getField(java.lang.String)", "com.mks.api.response.Item.getField(java.lang.String)"], "Fixed commit": "2f953bec730333f0bfe38b313630cccdec7d5c93", "Url": "https://api.github.com/repos/jenkinsci/integrity-plugin", "Date": "2014-10-08T15:56:54Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { @java.lang.SuppressWarnings(\"unchecked\") java.util.HashMap<java.lang.String, java.lang.String> item = ((java.util.HashMap<java.lang.String, java.lang.String>) (resultsListView.getItemAtPosition(position))); moleId = java.lang.Integer.parseInt(item.get(\"id\")); } catch (java.lang.Exception e) { android.widget.Toast.makeText(this, \"Problem detecting item\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7637/buggy-version/src.cs310w10.MoleFinder.View.SearchViewActivity.java", "BodyUseAPI": ["android.widget.ListView.getItemAtPosition(int)", "java.lang.Integer.parseInt(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "6d5dce335a16498043bc2822d9e38d8f7d760bb0", "Url": "https://api.github.com/repos/CS301CodeBSOD/MoleFinder", "Date": "2012-04-06T21:59:30Z"},
{"Line": "=>971", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (value instanceof javax.xml.bind.JAXBElement<?>) { java.lang.Object wrapped = ((javax.xml.bind.JAXBElement) (value)).getValue(); @java.lang.SuppressWarnings(\"unchecked\") java.lang.Class clazz = wrapped.getClass(); javax.xml.bind.JAXBElement contentObject = new javax.xml.bind.JAXBElement(new javax.xml.namespace.QName(clazz.getSimpleName()), clazz, wrapped); javax.xml.bind.util.JAXBSource source = new javax.xml.bind.util.JAXBSource(jc, contentObject); elem = jc.createUnmarshaller().unmarshal(source, clazz); }else { @java.lang.SuppressWarnings(\"unchecked\") java.lang.Class<T> clazz = ((java.lang.Class<T>) (value.getClass())); javax.xml.bind.JAXBElement<T> contentObject = new javax.xml.bind.JAXBElement<T>(new javax.xml.namespace.QName(clazz.getSimpleName()), clazz, value); javax.xml.bind.util.JAXBSource source = new javax.xml.bind.util.JAXBSource(jc, contentObject); elem = jc.createUnmarshaller().unmarshal(source, clazz); } T res; if (value instanceof javax.xml.bind.JAXBElement<?>) { @java.lang.SuppressWarnings(\"unchecked\") T resT = ((T) (elem)); res = resT; }else { @java.lang.SuppressWarnings(\"unchecked\") T resT = ((T) (elem.getValue())); res = resT; } return res; } catch (javax.xml.bind.JAXBException ex) { throw new java.lang.IllegalArgumentException(ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1536/buggy-version/src.main.java.org.docx4j.XmlUtils.java", "BodyUseAPI": ["T.getClass()", "java.lang.Object.getClass()", "jc.createUnmarshaller().unmarshal(javax.xml.bind.util.JAXBSource,java.lang.Class<T>)", "javax.xml.bind.JAXBElement<T>.getValue()", "javax.xml.bind.JAXBContext.createUnmarshaller()", "jc.createUnmarshaller().unmarshal(javax.xml.bind.util.JAXBSource,java.lang.Class)", "T.getValue()", "java.lang.Class.getSimpleName()", "java.lang.Class<T>.getSimpleName()", "javax.xml.bind.JAXBContext.createUnmarshaller()"], "Fixed commit": "b5d8b4722e814945e502da9f0516d59c498b64bb", "Url": "https://api.github.com/repos/plutext/docx4j", "Date": "2016-08-23T00:45:56Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.github.checkstyle.site.XrefGenerator.codeTransform.transform(sourceFile.getAbsolutePath(), dest.toString(), java.util.Locale.ENGLISH, com.github.checkstyle.site.XrefGenerator.ENCODING, com.github.checkstyle.site.XrefGenerator.ENCODING, \"\", \"\", \"\"); result = sitePath.relativize(dest).toString(); } catch (java.lang.Exception ex) { result = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/486/buggy-version/patch-diff-report-tool.src.main.java.com.github.checkstyle.site.XrefGenerator.java", "BodyUseAPI": ["java.nio.file.Path.toString()", "java.nio.file.Path.relativize(java.nio.file.Path)", "java.nio.file.Path.toString()", "org.apache.maven.jxr.JavaCodeTransform.transform(java.lang.String,java.lang.String,java.util.Locale,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)", "java.io.File.getAbsolutePath()"], "Fixed commit": "7ebf7e4849651d06ebf6c947dce34503cb27ebce", "Url": "https://api.github.com/repos/rnveach/contribution", "Date": "2017-05-10T01:34:29Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.getSailConnection().close(); } catch (org.openrdf.sail.SailException e) { throw new org.openrdf.repository.RepositoryException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/927/buggy-version/src.main.java.nl.vu.datalayer.hbase.sail.HBaseRepositoryConnection.java", "BodyUseAPI": ["nl.vu.datalayer.hbase.sail.HBaseRepositoryConnection.getSailConnection()", "this.getSailConnection().close()"], "Fixed commit": "dc11256d7ca937b9598b10cc949c8d7d0cd1fe6f", "Url": "https://api.github.com/repos/pgroth/hbase-rdf", "Date": "2012-04-11T09:50:14Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { registrar.registerService(chimeraPathProperty, org.cytoscape.property.CyProperty.class, new java.util.Properties()); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8041/buggy-version/src.main.java.edu.ucsf.rbvi.structureViz2.internal.model.CytoUtils.java", "BodyUseAPI": ["org.cytoscape.service.util.CyServiceRegistrar.registerService(org.cytoscape.property.CyProperty<?>,java.lang.Class,java.util.Properties)"], "Fixed commit": "3ba6654109f09fbe59937c20393304fd734ddef8", "Url": "https://api.github.com/repos/RBVI/structureViz2", "Date": "2014-02-24T21:09:54Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (((snapshotDTO.getFile()) != null) && ((snapshotDTO.getFile().length) != 0)) { saveFileStream(snapshotDTO.getFile(), fileName); } } catch (java.lang.Exception e) { throw new java.lang.IllegalArgumentException(\"Bad format file\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1436/buggy-version/business-layout.src.main.java.com.eklib.desktopviewer.services.snapshot.SnapshotServiceImpl.java", "BodyUseAPI": ["com.eklib.desktopviewer.services.snapshot.SnapshotServiceImpl.saveFileStream(snapshotDTO.getFile(),java.lang.String)", "com.eklib.desktopviewer.dto.snapshot.SnapshotDTO.getFile()", "com.eklib.desktopviewer.dto.snapshot.SnapshotDTO.getFile()", "com.eklib.desktopviewer.dto.snapshot.SnapshotDTO.getFile()"], "Fixed commit": "760dad4b194242da7ee435666f606693a2cedd87", "Url": "https://api.github.com/repos/snesterenkov/desktopviewer-back", "Date": "2015-08-19T12:04:48Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { myLogger.log(Logger.INFO, \"Agent {0} - Proposal accepted for artifact {1}!\", new java.lang.Object[]{ getLocalName(), ((homework1.model.AuctionDescription) (((homework1.AgentMessage) (msg.getContentObject())).getContent())).getArtifactID() }); } catch (jade.lang.acl.UnreadableException ex) { java.util.logging.Logger.getLogger(homework1.ProfilerAgent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5818/buggy-version/project.src.homework1.ProfilerAgent.java", "BodyUseAPI": ["jade.lang.acl.ACLMessage.getContentObject()", "((homework1.AgentMessage) (msg.getContentObject())).getContent()", "((homework1.model.AuctionDescription) (((homework1.AgentMessage) (msg.getContentObject())).getContent())).getArtifactID()", "jade.util.Logger.log(Logger.INFO,java.lang.String,java.lang.Object[])", "homework1.ProfilerAgent.DutchAuctionBuyerBehaviour.getLocalName()"], "Fixed commit": "44ed1b516bbfb5adae1c2deee21f693bc1432ad5", "Url": "https://api.github.com/repos/remidomingues/distributed-artificial-intelligence", "Date": "2014-11-20T17:30:33Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { myLogger.log(Logger.INFO, \"Agent {0} - Proposal rejected for artifact {1}!\", new java.lang.Object[]{ getLocalName(), ((homework1.model.AuctionDescription) (((homework1.AgentMessage) (msg.getContentObject())).getContent())).getArtifactID() }); } catch (jade.lang.acl.UnreadableException ex) { java.util.logging.Logger.getLogger(homework1.ProfilerAgent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5818/buggy-version/project.src.homework1.ProfilerAgent.java", "BodyUseAPI": ["jade.util.Logger.log(Logger.INFO,java.lang.String,java.lang.Object[])", "jade.lang.acl.ACLMessage.getContentObject()", "((homework1.model.AuctionDescription) (((homework1.AgentMessage) (msg.getContentObject())).getContent())).getArtifactID()", "((homework1.AgentMessage) (msg.getContentObject())).getContent()", "homework1.ProfilerAgent.DutchAuctionBuyerBehaviour.getLocalName()"], "Fixed commit": "44ed1b516bbfb5adae1c2deee21f693bc1432ad5", "Url": "https://api.github.com/repos/remidomingues/distributed-artificial-intelligence", "Date": "2014-11-20T17:30:33Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { db.closeDocument(); } finally { writeLock.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/9144/buggy-version/src.org.exist.storage.dom.RawNodeIterator.java", "BodyUseAPI": ["org.exist.storage.dom.DOMFile.closeDocument()"], "Fixed commit": "9bf4fc70d80da4ba59ff89fcb00247515a538ccc", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2016-03-24T15:55:04Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { isServer = (Launch.classLoader.getClassBytes(this.getNameDynamic(micdoodle8.mods.miccore.MicdoodleTransformer.KEY_CLASS_RENDER_GLOBAL))) == null; } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1095/buggy-version/src.main.java.micdoodle8.mods.miccore.MicdoodleTransformer.java", "BodyUseAPI": ["Launch.classLoader.getClassBytes(java.lang.String)", "micdoodle8.mods.miccore.MicdoodleTransformer.getNameDynamic(java.lang.String)"], "Fixed commit": "d22d5dd8ef5a4eb699e70e72e1edf2eddae513d0", "Url": "https://api.github.com/repos/micdoodle8/MicdoodleCore", "Date": "2014-08-22T07:05:29Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { sharedTcpBinders.put(Provider.ROUPLEX_NIOSSL, createRouplexTcpBinder(Provider.ROUPLEX_NIOSSL)); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2331/buggy-version/benchmark-service-provider.src.main.java.org.rouplex.service.benchmarkservice.BenchmarkServiceProvider.java", "BodyUseAPI": ["org.rouplex.service.benchmarkservice.BenchmarkServiceProvider.createRouplexTcpBinder(Provider.ROUPLEX_NIOSSL)", "java.util.Map<org.rouplex.service.benchmarkservice.Provider, org.rouplex.platform.tcp.RouplexTcpBinder>.put(Provider.ROUPLEX_NIOSSL,org.rouplex.platform.tcp.RouplexTcpBinder)"], "Fixed commit": "e99cec071dddea93f937503434c682ef1ca8132f", "Url": "https://api.github.com/repos/rouplex/rouplex-benchmark-service", "Date": "2017-04-13T10:51:31Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { sharedTcpBinders.put(Provider.SCALABLE_SSL, createRouplexTcpBinder(Provider.SCALABLE_SSL)); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2331/buggy-version/benchmark-service-provider.src.main.java.org.rouplex.service.benchmarkservice.BenchmarkServiceProvider.java", "BodyUseAPI": ["org.rouplex.service.benchmarkservice.BenchmarkServiceProvider.createRouplexTcpBinder(Provider.SCALABLE_SSL)", "java.util.Map<org.rouplex.service.benchmarkservice.Provider, org.rouplex.platform.tcp.RouplexTcpBinder>.put(Provider.SCALABLE_SSL,org.rouplex.platform.tcp.RouplexTcpBinder)"], "Fixed commit": "e99cec071dddea93f937503434c682ef1ca8132f", "Url": "https://api.github.com/repos/rouplex/rouplex-benchmark-service", "Date": "2017-04-13T10:51:31Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { ds = com.bodejidi.DataBaseService.newInstance(); java.lang.String sql = ((((((((((((\"update \" + (com.bodejidi.Constants.SHIHANG_TABLE)) + \" set \") + (com.bodejidi.Constants.SHIHANG_FIRST_NAME)) + \"='\") + firstName) + \"' , \") + (com.bodejidi.Constants.SHIHANG_LAST_NAME)) + \"='\") + lastName) + \"'where \") + (com.bodejidi.Constants.SHIHANG_ID)) + \"=\") + paraId; debug((\"SQL: \" + sql)); ds.execute(sql); } finally { ds.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/359/buggy-version/src.main.java.com.bodejidi.MemberService.java", "BodyUseAPI": ["com.bodejidi.DataBaseService.execute(java.lang.String)", "com.bodejidi.DataBaseService.newInstance()", "com.bodejidi.MemberService.debug(java.lang.String)"], "Fixed commit": "812488a471ef37bbcb6df386efd22ae4421b781f", "Url": "https://api.github.com/repos/shihang1228/laughing-octo-bear", "Date": "2014-04-12T07:33:19Z"},
{"Line": "=>1522", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { boolean obp = etDiploma.getText().toString().equals(\"\"); if (obp) { OBP = 0; }else { OBP = java.lang.Double.parseDouble(etDiploma.getText().toString()); OBP = ((OBP) * 5) * 0.12; } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/200/buggy-version/app.src.main.java.demirciy.ygslyspuanhesaplama.lys.ActivityLys.java", "BodyUseAPI": ["android.widget.EditText.getText()", "android.widget.EditText.getText()", "etDiploma.getText().toString()", "etDiploma.getText().toString()", "java.lang.Double.parseDouble(etDiploma.getText().toString())", "etDiploma.getText().toString().equals(java.lang.String)"], "Fixed commit": "7e193d9d57760c3056bb3ee315ea393ee175622f", "Url": "https://api.github.com/repos/demirciy/CalculateYgsLysScore", "Date": "2016-06-08T10:53:00Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (((entity.getInventory().hasItem(requiredItem)) || (entity.getEquipped().getSword().equals(requiredItem))) || (entity.getEquipped().getHat().equals(requiredItem))) { command.execute(); } } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6959/buggy-version/src.com.vengeful.sloths.Models.Map.MapItems.InteractiveItem.InventoryInteractiveItem.java", "BodyUseAPI": ["entity.getEquipped().getSword().equals(com.vengeful.sloths.Models.InventoryItems.InventoryItem)", "com.vengeful.sloths.Models.Entity.Entity.getEquipped()", "entity.getEquipped().getHat()", "entity.getEquipped().getSword()", "entity.getInventory().hasItem(com.vengeful.sloths.Models.InventoryItems.InventoryItem)", "com.vengeful.sloths.Models.Entity.Entity.getEquipped()", "com.vengeful.sloths.Models.Map.MapItems.InteractiveItem.InventoryInteractiveItem.execute()", "entity.getEquipped().getHat().equals(com.vengeful.sloths.Models.InventoryItems.InventoryItem)", "com.vengeful.sloths.Models.Entity.Entity.getInventory()"], "Fixed commit": "0208c8bdab09eeff08a936dca2ea25a167a2d480", "Url": "https://api.github.com/repos/VengefulSloths/Iteration1", "Date": "2016-02-07T21:22:27Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { redraw(); for (org.rascalmpl.library.vis.swt.applet.FigureSWTApplet app : children) { app.redraw(); } } catch (org.eclipse.swt.SWTException e) { if ((e.code) != (org.eclipse.swt.SWT.ERROR_WIDGET_DISPOSED)) { throw e; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8673/buggy-version/src.org.rascalmpl.library.vis.swt.applet.FigureSWTApplet.java", "BodyUseAPI": ["org.rascalmpl.library.vis.swt.applet.FigureSWTApplet.redraw()", "org.rascalmpl.library.vis.swt.applet.FigureSWTApplet.1.redraw()"], "Fixed commit": "adbd155ad1c09b14457e336218e5c34f3227c8bd", "Url": "https://api.github.com/repos/cwi-swat/rascal", "Date": "2014-10-28T09:38:24Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.conn.close(); } catch (java.sql.SQLException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/9168/buggy-version/src.com.oltpbenchmark.api.Worker.java", "BodyUseAPI": ["java.sql.Connection.close()"], "Fixed commit": "7a302a3c08c9408665883f4e8055ff4c6f8166fd", "Url": "https://api.github.com/repos/oltpbenchmark/oltpbench", "Date": "2015-06-18T20:03:28Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { edu.harvard.liblab.ecru.LoadCsvData.solrSrvr.optimize(); } catch (org.apache.solr.client.solrj.SolrServerException e) { e.printStackTrace(); java.lang.System.exit(1); } catch (java.io.IOException e) { e.printStackTrace(); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3764/buggy-version/src.edu.harvard.liblab.ecru.LoadCsvData.java", "BodyUseAPI": ["org.apache.solr.client.solrj.impl.HttpSolrServer.optimize()"], "Fixed commit": "7e308f8bb72e682d176d48c5ced498f3b7abc7e6", "Url": "https://api.github.com/repos/harvard-library/ecru", "Date": "2014-09-16T17:28:06Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { line = input.readLine(); } catch (java.net.SocketTimeoutException e) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1551/buggy-version/src.ds.sudoku.communication.SudokuServer.java", "BodyUseAPI": ["java.io.BufferedReader.readLine()"], "Fixed commit": "4f137be9e341638a043352d904f053fde84b20ad", "Url": "https://api.github.com/repos/WooDyDooKs/VS_Sudoku", "Date": "2012-12-04T19:06:50Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { line = input.readLine(); } catch (java.net.SocketTimeoutException e) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1551/buggy-version/src.ds.sudoku.communication.SudokuClient.java", "BodyUseAPI": ["java.io.BufferedReader.readLine()"], "Fixed commit": "4f137be9e341638a043352d904f053fde84b20ad", "Url": "https://api.github.com/repos/WooDyDooKs/VS_Sudoku", "Date": "2012-12-04T19:06:50Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.google.gson.JsonObject responseBodyJson = new com.google.gson.JsonParser().parse(responseBodyString).getAsJsonObject(); errorMessage = responseBodyJson.get(\"message\").getAsString(); } catch (com.google.gson.JsonSyntaxException e) { errorMessage = responseBodyString; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4775/buggy-version/src.main.java.org.iatoki.judgels.api.impls.AbstractJudgelsAPIImpl.java", "BodyUseAPI": ["responseBodyJson.get(\"message\").getAsString()", "com.google.gson.JsonObject.get(java.lang.String)", "new com.google.gson.JsonParser().parse(responseBodyString).getAsJsonObject()", "com.google.gson.JsonParser.parse(java.lang.String)"], "Fixed commit": "008b6398d6e744accc856fd467fde3f8874ed950", "Url": "https://api.github.com/repos/judgels/api", "Date": "2015-10-01T17:36:08Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((dao.DAOManager.currentCluster) != null) { if (((dao.DAOManager.currentBucket) != null) && (dao.DAOManager.currentBucket.close())) { dao.DAOManager.currentBucket = null; } } } catch (java.util.NoSuchElementException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4994/buggy-version/nivimoju.database-dao.src.main.java.dao.DAOManager.java", "BodyUseAPI": ["com.couchbase.client.java.Bucket.close()"], "Fixed commit": "e3f5ec54e5507df229650c69e3f419256c0e9b9a", "Url": "https://api.github.com/repos/IsticGLA/SIT", "Date": "2015-05-19T07:47:23Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.google.api.services.youtube.YouTube.Videos.List listVideosRequest = yc.getYouTube().videos().list(\"snippet, statistics\").setId(i.getContentDetails().getVideoId()); listVideosRequest.setKey(yc.getKey()); com.google.api.services.youtube.model.Video video = listVideosRequest.execute().getItems().get(0); java.math.BigInteger viewCount = video.getStatistics().getViewCount(); item.setViews(viewCount); } catch (java.io.IOException e) { android.util.Log.d(\"YC\", (\"Could not query viewCount: \" + e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4394/buggy-version/app.src.main.java.edu.sjsu.qi.mytube.FavoriteFragment.java", "BodyUseAPI": ["com.google.api.services.youtube.model.Video.getStatistics()", "i.getContentDetails().getVideoId()", "video.getStatistics().getViewCount()", "edu.sjsu.qi.mytube.VideoItem.setViews(java.math.BigInteger)", "listVideosRequest.execute().getItems()", "java.util.List.execute()", "java.util.List.setKey(yc.getKey())", "yc.getYouTube().videos().list(\"snippet, statistics\").setId(i.getContentDetails().getVideoId())", "yc.getYouTube().videos().list(java.lang.String)", "yc.getYouTube().videos()", "listVideosRequest.execute().getItems().get(int)", "com.google.api.services.youtube.model.PlaylistItem.getContentDetails()", "edu.sjsu.qi.mytube.YouTubeConnector.getKey()", "edu.sjsu.qi.mytube.YouTubeConnector.getYouTube()"], "Fixed commit": "75216bbdd60e5ee489a13513230c44f95b184cd4", "Url": "https://api.github.com/repos/flyjet/MyTube", "Date": "2015-10-17T00:52:44Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { constructStore.addQueue(queue, true); notifyQueueListeners(queue, QueueListener.QueueEvent.ADDED); } catch (org.wso2.andes.kernel.AndesException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4905/buggy-version/modules.andes-core.broker.src.main.java.org.wso2.andes.kernel.AndesContextInformationManager.java", "BodyUseAPI": ["org.wso2.andes.kernel.AMQPConstructStore.addQueue(org.wso2.andes.kernel.AndesQueue,boolean)", "org.wso2.andes.kernel.AndesContextInformationManager.notifyQueueListeners(org.wso2.andes.kernel.AndesQueue,QueueListener.QueueEvent.ADDED)"], "Fixed commit": "a61fb3a42000b5b8b2bfbc8892b31a453a74cb91", "Url": "https://api.github.com/repos/pumudu88/andes", "Date": "2015-10-02T06:31:35Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { replacedInput = replaceAliases(userInput); } catch (java.lang.IllegalArgumentException e) { return new seedu.address.logic.commands.IncorrectCommand(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6516/buggy-version/src.main.java.seedu.address.logic.parser.Parser.java", "BodyUseAPI": ["seedu.address.logic.parser.Parser.replaceAliases(java.lang.String)"], "Fixed commit": "667865107ae574f509bb91dee4e9e49a38b23188", "Url": "https://api.github.com/repos/CS2103AUG2016-T10-C2/main", "Date": "2016-11-07T08:05:37Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ds.send(dp); } catch (java.io.IOException ioex) { setMessage((\"ERROR: \" + (ioex.getMessage()))); setMessage(\"WILL RETRY\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6817/buggy-version/KeepAliver.src.main.java.org.dbondin.keepaliver.MainWindow.java", "BodyUseAPI": ["java.net.DatagramSocket.send(java.net.DatagramPacket)"], "Fixed commit": "203e125ec96a68f06cc0814b2007ea8f91767528", "Url": "https://api.github.com/repos/dbondin/progs", "Date": "2014-08-28T06:58:54Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.net.URI uriWS = new java.net.URI(flexWS); wseah = new com.freedomotic.plugins.devices.jscube.energyathome.EnergyAtHomeWebSocket(uriWS, new org.java_websocket.drafts.Draft_17(), this); wseah.connect(); } catch (java.net.URISyntaxException ex) { java.util.logging.Logger.getLogger(com.freedomotic.plugins.devices.jscube.energyathome.EnergyAtHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7416/buggy-version/plugins.devices.energyathome.src.main.java.com.freedomotic.plugins.devices.jscube.energyathome.EnergyAtHome.java", "BodyUseAPI": ["com.freedomotic.plugins.devices.jscube.energyathome.EnergyAtHomeWebSocket.connect()"], "Fixed commit": "50d328a9ee200ca2551a3ee0b6788aac241c5adc", "Url": "https://api.github.com/repos/ShanksSGV/freedomotic", "Date": "2015-03-10T16:28:59Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { evt.rejectDrop(); } catch (java.lang.Exception e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5545/buggy-version/src.com.entertailion.java.fling.FileDrop.java", "BodyUseAPI": ["java.awt.dnd.DropTargetDropEvent.rejectDrop()"], "Fixed commit": "a81f95e08cb35eae16fe28f44ff5b60b7a1a9b25", "Url": "https://api.github.com/repos/entertailion/Fling", "Date": "2013-08-22T03:00:48Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { radius = ((java.lang.Integer) (params.get(\"radius\"))); } catch (java.lang.ClassCastException cce) { try { radius = java.lang.Integer.parseInt(params.get(\"radius\").toString()); } catch (java.lang.Exception e) { radius = 20; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/60/buggy-version/MdsAndroid.src.de.hsbremen.mds.interpreter.EventParser.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "943ee1fd0d305afcfc1eb1fd21cfd7566cb667ff", "Url": "https://api.github.com/repos/MachDeinSpiel/MdsAndroid", "Date": "2014-05-22T19:52:50Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { javafx.util.Pair<java.lang.String, java.lang.Boolean> result = m.interpretLine(val); if (result != null) { java.lang.System.out.println(result.getKey()); } } catch (java.lang.Exception e) { java.lang.System.out.println(((\"Operation \" + val) + \" is invalid!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4308/buggy-version/src.com.sim.lbox.Main.java", "BodyUseAPI": ["com.sim.lbox.Main.interpretLine(java.lang.String)", "java.io.PrintStream.println(result.getKey())", "javafx.util.Pair<java.lang.String, java.lang.Boolean>.getKey()"], "Fixed commit": "318b18e7cff59fb2df905380328e6887b02f491e", "Url": "https://api.github.com/repos/Azer0s/Hummus", "Date": "2017-08-18T23:55:18Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { request.getInputStream().close(); } catch (final java.io.IOException ex) { request.disconnect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4553/buggy-version/microsoft-azure-storage.src.com.microsoft.azure.storage.core.ExecutionEngine.java", "BodyUseAPI": ["java.io.InputStream.close()", "java.net.HttpURLConnection.getInputStream()"], "Fixed commit": "7e581f488237aa9f926f1fcffa22450a8bab7ee2", "Url": "https://api.github.com/repos/jofriedm/azure-storage-android", "Date": "2016-12-12T18:38:26Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return android.graphics.Color.parseColor(color); } catch (java.lang.IllegalArgumentException e) { e.printStackTrace(); return android.graphics.Color.BLACK; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/327/buggy-version/app.src.main.java.com.bedrock.padder.model.about.About.java", "BodyUseAPI": ["android.graphics.Color.parseColor(java.lang.String)"], "Fixed commit": "78a9627a5dfe5cc6e635b75e3038ce4e3dba59f6", "Url": "https://api.github.com/repos/berict/Tapad", "Date": "2017-11-08T10:02:14Z"},
{"Line": "=>518", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { is = new java.util.zip.GZIPInputStream(is); } catch (java.io.IOException e1) { if (is.markSupported()) { try { is.reset(); } catch (java.io.IOException e2) { e2.printStackTrace(); } }else { try { is.close(); is = new java.io.FileInputStream(file); } catch (java.io.IOException e2) { e2.printStackTrace(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/9059/buggy-version/src.org.graphstream.stream.file.FileSourceDGS.java", "BodyUseAPI": [], "Fixed commit": "708db55fff8fec6188d6c6c3907162ef3d34467b", "Url": "https://api.github.com/repos/graphstream/gs-core", "Date": "2011-05-04T15:23:32Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { de.ifgi.igiapp.igi_app.MongoDB.Story[] storiesArray = new de.ifgi.igiapp.igi_app.MongoDB.Story[stories.size()]; for (int i = 0; i < (stories.size()); i++) { storiesArray[i] = stories.get(i); return storiesArray; } } catch (java.lang.NullPointerException npe) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8981/buggy-version/app.src.main.java.de.ifgi.igiapp.igi_app.MongoDB.DatabaseHandler.java", "BodyUseAPI": ["java.util.ArrayList<de.ifgi.igiapp.igi_app.MongoDB.Story>.size()", "java.util.ArrayList<de.ifgi.igiapp.igi_app.MongoDB.Story>.size()", "java.util.ArrayList<de.ifgi.igiapp.igi_app.MongoDB.Story>.get(int)"], "Fixed commit": "1f202b1999543ce90c62c825396708608cefc8e1", "Url": "https://api.github.com/repos/froehr/IGI-app", "Date": "2015-01-29T18:27:09Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { rsp.serveLocalizedFile(req, wrapper.baseResourceURL.toURI().resolve(new java.net.URI(null, ('.' + path), null)).toURL(), expires); } catch (java.net.URISyntaxException x) { throw new java.io.IOException(x); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1410/buggy-version/hudson-core.src.main.java.hudson.Plugin.java", "BodyUseAPI": ["org.kohsuke.stapler.StaplerResponse.serveLocalizedFile(org.kohsuke.stapler.StaplerRequest,wrapper.baseResourceURL.toURI().resolve(new java.net.URI(null, ('.' + path), null)).toURL(),long)", "wrapper.baseResourceURL.toURI().resolve(new java.net.URI(null, ('.' + path), null)).toURL()", "wrapper.baseResourceURL.toURI()", "wrapper.baseResourceURL.toURI().resolve(java.net.URI)"], "Fixed commit": "9296f8afaff7dfc34cc4ffdda8d309c30c2ba529", "Url": "https://api.github.com/repos/eclipse/hudson.core", "Date": "2014-12-11T23:42:10Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { page = sharedPerfs.getInt(\"page\", 0); } catch (java.lang.NullPointerException e) { page = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5528/buggy-version/app.src.main.java.com.traffy.attapon.traffybus.util.SharedPre.java", "BodyUseAPI": ["android.content.SharedPreferences.getInt(java.lang.String,int)"], "Fixed commit": "8c333a6ee905745f5ec6fc8514a1e1c739403990", "Url": "https://api.github.com/repos/traffy-nectec/androidTraffyBus", "Date": "2016-09-08T02:44:12Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { noti = sharedPerfs.getBoolean(\"noTi\", false); } catch (java.lang.NullPointerException e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5528/buggy-version/app.src.main.java.com.traffy.attapon.traffybus.util.SharedPre.java", "BodyUseAPI": ["android.content.SharedPreferences.getBoolean(java.lang.String,boolean)"], "Fixed commit": "8c333a6ee905745f5ec6fc8514a1e1c739403990", "Url": "https://api.github.com/repos/traffy-nectec/androidTraffyBus", "Date": "2016-09-08T02:44:12Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.moyersoftware.contender.game.data.GameInvite.Game game = gameSnapshot.getValue(GameInvite.Game.class); if (((!(android.text.TextUtils.isEmpty(mQuery))) && (game.getId().contains(mQuery))) && (!(game.getAuthor().getUserId().equals(mMyId)))) { mGames.add(game); } } catch (java.lang.Exception e) { com.moyersoftware.contender.util.Util.Log(\"The game is corrupted\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6419/buggy-version/app.src.main.java.com.moyersoftware.contender.game.JoinIdFragment.java", "BodyUseAPI": ["GameInvite.Game.getId()", "java.util.ArrayList<GameInvite.Game>.add(GameInvite.Game)", "android.text.TextUtils.isEmpty(java.lang.String)", "game.getAuthor().getUserId().equals(java.lang.String)", "game.getAuthor().getUserId()", "game.getId().contains(java.lang.String)", "GameInvite.Game.getAuthor()", "com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Fixed commit": "aa992bf72a1bf7121fe006ff41055cf51804f1f0", "Url": "https://api.github.com/repos/sheyko-d/Contender", "Date": "2016-09-09T09:06:52Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.time.DayOfWeek dayOfWeek = java.time.DayOfWeek.valueOf(s.toUpperCase()); daysOfWeek.add(dayOfWeek); } catch (java.lang.IllegalArgumentException ex) { pl.com.bottega.cineman.model.commands.Validatable.ValidationErrors errors = new pl.com.bottega.cineman.model.commands.Validatable.ValidationErrors(); errors.add(\"weekDays\", java.lang.String.format(\"%s is not a valid day of week\", s)); throw new pl.com.bottega.cineman.model.commands.InvalidCommandException(errors); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/997/buggy-version/src.main.java.pl.com.bottega.cineman.ui.CreateShowingsCommandDto.java", "BodyUseAPI": ["java.lang.String.toUpperCase()", "java.util.Set<java.time.DayOfWeek>.add(java.time.DayOfWeek)", "java.time.DayOfWeek.valueOf(java.lang.String)"], "Fixed commit": "8e1ed989322f00b52f20ac993bf803cc85dffb0e", "Url": "https://api.github.com/repos/kprzygudzki/cineman", "Date": "2017-04-22T10:35:13Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { StatementClasses.ExpressionStatement E = new StatementClasses.ExpressionStatement(index); Exe.ExecuteStatement(E); } catch (java.lang.Exception E) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5723/buggy-version/Interpreter.src.Interpreter.Context.java", "BodyUseAPI": ["StatementExecuteClasses.Executor.ExecuteStatement(StatementClasses.ExpressionStatement)"], "Fixed commit": "f3363b57540682536203c023be784128247075db", "Url": "https://api.github.com/repos/wqc0712/JavaScriptInterpreter", "Date": "2016-01-02T13:22:36Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { imageViewReference.get().setImageBitmap(loadedImage); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5329/buggy-version/app.src.main.java.com.easyshopping.navigationDrawer.adapter.ProductAdapterInCompleteList.java", "BodyUseAPI": ["imageViewReference.get().setImageBitmap(android.graphics.Bitmap)", "java.lang.ref.WeakReference<android.widget.ImageView>.get()"], "Fixed commit": "3b56dc237122a9661ada73e0ca4d1b2b0dcd6339", "Url": "https://api.github.com/repos/noxado/EasyShopping", "Date": "2017-12-04T15:56:01Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { imageViewReference.get().setImageBitmap(loadedImage); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5329/buggy-version/app.src.main.java.com.easyshopping.navigationDrawer.adapter.ProductAdapterInChooseList.java", "BodyUseAPI": ["java.lang.ref.WeakReference<android.widget.ImageView>.get()", "imageViewReference.get().setImageBitmap(android.graphics.Bitmap)"], "Fixed commit": "3b56dc237122a9661ada73e0ca4d1b2b0dcd6339", "Url": "https://api.github.com/repos/noxado/EasyShopping", "Date": "2017-12-04T15:56:01Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { getConfig().save(new java.io.File(((getDataFolder()) + \"/config.yml\"))); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/9165/buggy-version/src.Respawn.java", "BodyUseAPI": ["Respawn.getConfig()", "Respawn.getDataFolder()", "getConfig().save(java.io.File)"], "Fixed commit": "1361cbbb53e3ac35ee81b1db3b59cd3713aa19ef", "Url": "https://api.github.com/repos/lordvaderde/BonolosRespawnPlugin", "Date": "2016-04-02T12:06:06Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.portletCookieDao.updatePortalCookieExpiration(portalCookie, cookie.getMaxAge()); } catch (org.springframework.orm.hibernate3.HibernateOptimisticLockingFailureException e) { logger.debug((\"Attempted to update expired portal cookie but another thread beat me to it.\" + \" Ignoring update since the other thread handled it.\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3769/buggy-version/uportal-war.src.main.java.org.jasig.portal.portlet.container.services.PortletCookieServiceImpl.java", "BodyUseAPI": ["org.jasig.portal.portlet.dao.IPortletCookieDao.updatePortalCookieExpiration(org.jasig.portal.portlet.om.IPortalCookie,cookie.getMaxAge())", "javax.servlet.http.Cookie.getMaxAge()"], "Fixed commit": "088b5354be44e685298e037d5ad51e41cc9dae4e", "Url": "https://api.github.com/repos/Jasig/uPortal", "Date": "2015-11-13T16:08:08Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.previousLocation = org.bukkit.Bukkit.getWorld(\"Earth\").getSpawnLocation(); } catch (java.lang.NullPointerException e) { this.previousLocation = new org.bukkit.Location(org.bukkit.Bukkit.getWorld(\"world\"), 0, 70, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6951/buggy-version/src.co.sblock.users.User.java", "BodyUseAPI": ["org.bukkit.Bukkit.getWorld(java.lang.String)", "org.bukkit.Bukkit.getWorld(\"Earth\").getSpawnLocation()"], "Fixed commit": "f46b23301f7561ca993800e553078f52e3649124", "Url": "https://api.github.com/repos/SblockCo/Sblock", "Date": "2014-09-11T02:27:55Z"},
{"Line": "=>1353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Process process1 = processBuilder1.start(); } catch (java.io.IOException e) { logger.warn(\"Unexpected error\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1494/buggy-version/src.javafxapplication4.JavaFXApplication4.java", "BodyUseAPI": ["java.lang.ProcessBuilder.start()"], "Fixed commit": "f23506dc96164e6be3557d8fbc020f172b5b5e7b", "Url": "https://api.github.com/repos/rihani/PrayerTime", "Date": "2014-01-17T07:48:05Z"},
{"Line": "=>1352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(2500); } catch (java.lang.InterruptedException e) { logger.warn(\"Unexpected error\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1494/buggy-version/src.javafxapplication4.JavaFXApplication4.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "f23506dc96164e6be3557d8fbc020f172b5b5e7b", "Url": "https://api.github.com/repos/rihani/PrayerTime", "Date": "2014-01-17T07:48:05Z"},
{"Line": "=>942", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { facebookClient.publish(\"187050104663230/feed\", com.restfb.types.FacebookType.class, com.restfb.Parameter.with(\"message\", facebook_moon_notification_Msg)); } catch (com.restfb.exception.FacebookException e) { logger.warn(\"Unexpected error\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1494/buggy-version/src.javafxapplication4.JavaFXApplication4.java", "BodyUseAPI": ["com.restfb.FacebookClient.publish(java.lang.String,java.lang.Class,com.restfb.Parameter.with(\"message\", facebook_moon_notification_Msg))", "com.restfb.Parameter.with(java.lang.String,java.lang.String)"], "Fixed commit": "f23506dc96164e6be3557d8fbc020f172b5b5e7b", "Url": "https://api.github.com/repos/rihani/PrayerTime", "Date": "2014-01-17T07:48:05Z"},
{"Line": "=>926", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { facebookClient.publish(\"187050104663230/feed\", com.restfb.types.FacebookType.class, com.restfb.Parameter.with(\"message\", facebook_moon_notification_Msg)); } catch (com.restfb.exception.FacebookException e) { logger.warn(\"Unexpected error\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1494/buggy-version/src.javafxapplication4.JavaFXApplication4.java", "BodyUseAPI": ["com.restfb.Parameter.with(java.lang.String,java.lang.String)", "com.restfb.FacebookClient.publish(java.lang.String,java.lang.Class,com.restfb.Parameter.with(\"message\", facebook_moon_notification_Msg))"], "Fixed commit": "f23506dc96164e6be3557d8fbc020f172b5b5e7b", "Url": "https://api.github.com/repos/rihani/PrayerTime", "Date": "2014-01-17T07:48:05Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.imageInByte = productService.getImageData(id); } catch (java.lang.Exception e) { io.bdj.webshop.actions.ProductImageAction.LOG.error(\"Could not fetch image\", e); return ERROR; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1466/buggy-version/bdj-shop-web.src.main.java.io.bdj.webshop.actions.ProductImageAction.java", "BodyUseAPI": ["io.bdj.service.ProductService.getImageData(java.lang.String)"], "Fixed commit": "7cf655ae88934dc3e6e3064c044e6a4c9108be8d", "Url": "https://api.github.com/repos/gmuecke/boutique-de-jus", "Date": "2017-05-02T20:36:02Z"},
{"Line": "=>447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { net.minecraft.inventory.Slot slot = slotRefs.get(section).get(index); if (slot != null) { return invtweaks.InvTweaksObfuscation.getSlotNumber(slot); }else { return -1; } } catch (java.lang.IndexOutOfBoundsException e) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7127/buggy-version/src.main.java.invtweaks.InvTweaksContainerManager.java", "BodyUseAPI": ["invtweaks.InvTweaksObfuscation.getSlotNumber(net.minecraft.inventory.Slot)", "java.util.Map<invtweaks.api.container.ContainerSection, java.util.List<net.minecraft.inventory.Slot>>.get(invtweaks.api.container.ContainerSection)", "slotRefs.get(section).get(int)"], "Fixed commit": "c97ea23022a91c8f7d6478029a6444741999e60a", "Url": "https://api.github.com/repos/Robijnvogel/inventory-tweaks", "Date": "2015-11-08T14:32:27Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { new com.kloudtek.util.JMSApplication.MessageHandler().run(); } catch (java.lang.Throwable e) { logger.log(java.util.logging.Level.SEVERE, e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2230/buggy-version/src.java.com.kloudtek.util.JMSApplication.java", "BodyUseAPI": ["com.kloudtek.util.JMSApplication.MessageHandler.run()"], "Fixed commit": "2d87485e04bcbc3c12de2994bc63be32364a1ad9", "Url": "https://api.github.com/repos/Kloudtek/ktutils", "Date": "2012-02-23T19:56:58Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { nl.tudelft.bbw.API.blockController.addMultichain(acquaintance.getMultichain()); nl.tudelft.bbw.API.blockController.addBlockToChain(acquaintance, signature, message); } catch (nl.tudelft.bbw.database.DatabaseException e) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1450/buggy-version/app.src.main.java.nl.tudelft.bbw.API.java", "BodyUseAPI": ["nl.tudelft.bbw.controller.BlockController.addMultichain(acquaintance.getMultichain())", "nl.tudelft.bbw.controller.BlockController.addBlockToChain(nl.tudelft.bbw.blockchain.Acquaintance,byte[],byte[])", "nl.tudelft.bbw.blockchain.Acquaintance.getMultichain()"], "Fixed commit": "cd10dd5b9a090cd88f08fd94fbd6cba819240ec9", "Url": "https://api.github.com/repos/deepweeb/B-B-W", "Date": "2017-06-21T14:48:03Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.ext.portlet.service.ProposalLocalServiceUtil.addVote(proposalId, contestPhaseId, userId); } catch (com.liferay.portal.kernel.exception.SystemException exception) { org.xcolab.portlets.proposals.view.action.VoteOnProposalActionController._log.error(\"kmang: Original Vote exception occured: \", exception.getCause()); org.xcolab.portlets.proposals.view.action.VoteOnProposalActionController._log.error(\"kmang: Wrapped Vote exception occured: \", exception); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8573/buggy-version/portlets.proposals-portlet.src.main.java.org.xcolab.portlets.proposals.view.action.VoteOnProposalActionController.java", "BodyUseAPI": ["com.ext.portlet.service.ProposalLocalServiceUtil.addVote(long,long,long)"], "Fixed commit": "b0f9ee1eefec372fab9ec04add4d21d64141a0d7", "Url": "https://api.github.com/repos/CCI-MIT/XCoLab", "Date": "2015-08-04T21:24:45Z"},
{"Line": "=>550", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { org.eclipse.jdt.groovy.search.TypeLookupResult result = new org.eclipse.jdt.groovy.search.TypeLookupResult(null, null, node, org.eclipse.jdt.groovy.search.TypeLookupResult.TypeConfidence.EXACT, null); org.eclipse.jdt.groovy.search.ITypeRequestor.VisitStatus status = notifyRequestor(node, requestor, result); if (status == (org.eclipse.jdt.groovy.search.ITypeRequestor.VisitStatus.STOP_VISIT)) { throw new org.eclipse.jdt.groovy.search.TypeInferencingVisitorWithRequestor.VisitCompleted(status); } } finally { enclosingElement = oldEnclosing; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3681/buggy-version/base.org.eclipse.jdt.groovy.core.src.org.eclipse.jdt.groovy.search.TypeInferencingVisitorWithRequestor.java", "BodyUseAPI": ["org.eclipse.jdt.groovy.search.TypeInferencingVisitorWithRequestor.notifyRequestor(org.codehaus.groovy.ast.PackageNode,org.eclipse.jdt.groovy.search.ITypeRequestor,org.eclipse.jdt.groovy.search.TypeLookupResult)"], "Fixed commit": "98cc2145ab4d9385b7a9e135e39c58eca441d2a5", "Url": "https://api.github.com/repos/groovy/groovy-eclipse", "Date": "2017-08-31T17:58:44Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.startNewGame(); } catch (byui.cit260.detectiveWizard.exceptions.MapControlException ex) { java.util.logging.Logger.getLogger(byui.cit260.detectiveWizard.view.MainMenuView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1315/buggy-version/wizardDetective.src.byui.cit260.detectiveWizard.view.MainMenuView.java", "BodyUseAPI": ["byui.cit260.detectiveWizard.view.MainMenuView.startNewGame()"], "Fixed commit": "5b6f486c7fad720d63f519cdf194fa200b057746", "Url": "https://api.github.com/repos/lauryncosette/wizard", "Date": "2015-03-18T22:41:55Z"},
{"Line": "=>651", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { itData = it.getData().getData(); } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1751/buggy-version/src.me.smickles.DynamicMarket.DynamicMarket.java", "BodyUseAPI": ["it.getData().getData()", "org.bukkit.inventory.ItemStack.getData()"], "Fixed commit": "0f8fc87642ad6270cd20127fb42f6b4d8fa3ee4f", "Url": "https://api.github.com/repos/smickles/DynamicMarket", "Date": "2011-10-15T01:17:43Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { a.getAction().execute(arguments); } catch (java.lang.Exception e) { throw new me.itidez.plugins.icart.actions.InvalidActionError(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5389/buggy-version/src.main.java.me.itidez.plugins.icart.actions.ActionManager.java", "BodyUseAPI": ["a.getAction().execute(me.itidez.plugins.icart.actions.List<java.lang.Object>)", "me.itidez.plugins.icart.actions.Action.getAction()"], "Fixed commit": "3ea44ce2908a0c051f1a3016a5b6ef322bf53e89", "Url": "https://api.github.com/repos/DerpCraft/iCart", "Date": "2013-02-14T15:16:10Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { iconResource = data.getParcelableExtra(Intent.EXTRA_SHORTCUT_ICON_RESOURCE); } catch (java.lang.ClassCastException e) { android.util.Log.d(com.android.launcher3.InstallShortcutReceiver.TAG, (\"Exception when get shortcut icon resource: \" + e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4883/buggy-version/src.com.android.launcher3.InstallShortcutReceiver.java", "BodyUseAPI": ["android.content.Intent.getParcelableExtra(Intent.EXTRA_SHORTCUT_ICON_RESOURCE)"], "Fixed commit": "dc8e7c2768e4d943f721e1d2f846a3e07ea6df5a", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-packages-apps-Launcher3", "Date": "2016-07-27T03:30:58Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { icon = data.getParcelableExtra(Intent.EXTRA_SHORTCUT_ICON); } catch (java.lang.ClassCastException e) { android.util.Log.d(com.android.launcher3.InstallShortcutReceiver.TAG, (\"Exception when get shortcut icon: \" + e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4883/buggy-version/src.com.android.launcher3.InstallShortcutReceiver.java", "BodyUseAPI": ["android.content.Intent.getParcelableExtra(Intent.EXTRA_SHORTCUT_ICON)"], "Fixed commit": "dc8e7c2768e4d943f721e1d2f846a3e07ea6df5a", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-packages-apps-Launcher3", "Date": "2016-07-27T03:30:58Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { diagnosesRepository.delete(id); postViewModel.id = id; postViewModel.status = \"OK\"; postViewModel.message = \"Deleted\"; return postViewModel; } catch (java.lang.Exception e) { postViewModel.status = \"Error\"; postViewModel.message = e.getMessage(); return postViewModel; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4469/buggy-version/src.main.java.aptekaproj.services.DiagnosesService.java", "BodyUseAPI": ["aptekaproj.controllers.repository.IDiagnosesRepository.delete(int)"], "Fixed commit": "dfd8b4419ffc4c81cde1f8dcf1a2374096c94158", "Url": "https://api.github.com/repos/netwer/Apteka", "Date": "2015-06-20T06:58:15Z"},
{"Line": "=>699", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { lastTryRewrite.insertLast(neededToBeRefactoredMethodBody.createMoveTarget(statement, statement), null); } catch (java.lang.IllegalArgumentException e) { if (e.getMessage().equals(\"Node is not an existing node\")) { lastTryRewrite.insertLast(statement, null); }else { throw new java.lang.IllegalArgumentException(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/940/buggy-version/src.ntut.csie.robusta.codegen.QuickFixCore.java", "BodyUseAPI": ["org.eclipse.jdt.core.dom.rewrite.ListRewrite.insertLast(neededToBeRefactoredMethodBody.createMoveTarget(statement, statement),<nulltype>)", "org.eclipse.jdt.core.dom.rewrite.ListRewrite.createMoveTarget(org.eclipse.jdt.core.dom.Statement,org.eclipse.jdt.core.dom.Statement)"], "Fixed commit": "ef138ce7392b772fa66f641f5ab6dd344a860628", "Url": "https://api.github.com/repos/NTUTLAB1321Robusta/Robusta", "Date": "2015-12-31T03:02:10Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mySel.update(myTSG); } catch (org.cojen.dirmi.ClosedException e) { closedSelecters.add(mySel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1811/buggy-version/Server.src.GameDispenser.StandardGameDispenser.java", "BodyUseAPI": ["Client.Interfaces.GameSelecter.update(Client.Interfaces.ThreeStringsGet)"], "Fixed commit": "b210d8278f6251e34747d400cdf2a02591792137", "Url": "https://api.github.com/repos/VelociousTurtles-Inc/Turtles", "Date": "2014-05-19T07:11:30Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { httpClientCompleteListener.onComplete(ex, statusCode, contentTL.get(), costsMillis, params); } catch (java.lang.Throwable e) { log.error(\"onComplete error\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/9155/buggy-version/src.main.java.org.n3r.biz.pagestatic.impl.PageHttpClient.java", "BodyUseAPI": ["org.n3r.biz.pagestatic.base.HttpClientCompleteListener.onComplete(java.lang.Exception,int,java.io.File,double,java.lang.Object[])", "java.lang.ThreadLocal<java.io.File>.get()"], "Fixed commit": "6455f5ec68fe0bacbcde8b0b0fca84414e313c00", "Url": "https://api.github.com/repos/bingoohuang/pagestatic", "Date": "2014-09-16T00:50:36Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { slot = java.lang.Integer.parseInt(args[2]); } catch (java.lang.NumberFormatException e) { s.sendMessage(((org.bukkit.ChatColor.RED) + \"Slot must be an integer between 1 and 9.\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3713/buggy-version/src.com.projectkorra.ProjectKorra.Commands.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "0b754427101189d84ea29a9bfd13a3f1212e4224", "Url": "https://api.github.com/repos/ProjectKorra/ProjectKorra", "Date": "2014-07-08T01:17:36Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return method.invoke(ps, args); } catch (java.lang.Throwable ex) { if (ex instanceof java.lang.reflect.UndeclaredThrowableException) { ex = ((java.lang.reflect.UndeclaredThrowableException) (ex)).getUndeclaredThrowable(); } if (ex instanceof java.lang.reflect.InvocationTargetException) { throw ((java.lang.reflect.InvocationTargetException) (ex)).getTargetException(); }else { throw ex; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4519/buggy-version/src.main.java.tigase.db.jdbc.PreparedStatementInvocationHandler.java", "BodyUseAPI": ["java.lang.reflect.Method.invoke(java.sql.PreparedStatement,java.lang.Object[])"], "Fixed commit": "331f18ee9177faae455250d9477a897ca361f4c1", "Url": "https://api.github.com/repos/wwjiang007/tigase-server", "Date": "2017-07-24T11:45:55Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.System.out.println(cinema.getFilms()); } catch (java.sql.SQLException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1143/buggy-version/Cinema.src.cinema.UserInterface.java", "BodyUseAPI": ["java.io.PrintStream.println(cinema.getFilms())", "cinema.Cinema.getFilms()"], "Fixed commit": "9cea89c8ac347b4b4b9da905a5251ab7cf872dde", "Url": "https://api.github.com/repos/GrupparbetePeterSvenHermanRobert/Cinema", "Date": "2017-03-27T07:28:13Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { switch (operator) { case freemarker.core.ArithmeticExpression.TYPE_SUBSTRACTION : return new freemarker.template.SimpleNumber(ae.subtract(lhoNumber, rhoNumber)); case freemarker.core.ArithmeticExpression.TYPE_MULTIPLICATION : return new freemarker.template.SimpleNumber(ae.multiply(lhoNumber, rhoNumber)); case freemarker.core.ArithmeticExpression.TYPE_DIVISION : return new freemarker.template.SimpleNumber(ae.divide(lhoNumber, rhoNumber)); case freemarker.core.ArithmeticExpression.TYPE_MODULO : return new freemarker.template.SimpleNumber(ae.modulus(lhoNumber, rhoNumber)); default : if (parent instanceof freemarker.core.Expression) { throw new freemarker.core._MiscTemplateException(((freemarker.core.Expression) (parent)), \"Unknown operation: \", java.lang.Integer.valueOf(operator)); }else { throw new freemarker.core._MiscTemplateException(\"Unknown operation: \", java.lang.Integer.valueOf(operator)); } } } catch (java.lang.ArithmeticException e) { throw new freemarker.core._MiscTemplateException(e, env, \"Arithmetic operation failed\", ((e.getMessage()) != null ? new java.lang.String[]{ \": \", e.getMessage() } : \" (see cause exception)\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6839/buggy-version/src.main.java.freemarker.core.ArithmeticExpression.java", "BodyUseAPI": ["freemarker.core.ArithmeticEngine.subtract(java.lang.Number,java.lang.Number)", "freemarker.core.ArithmeticEngine.divide(java.lang.Number,java.lang.Number)", "freemarker.core.ArithmeticEngine.modulus(java.lang.Number,java.lang.Number)", "java.lang.Integer.valueOf(int)", "freemarker.core.ArithmeticEngine.multiply(java.lang.Number,java.lang.Number)", "java.lang.Integer.valueOf(int)"], "Fixed commit": "b246de2403bac5b82c44a83cc3b7ab5b6617d0e8", "Url": "https://api.github.com/repos/apache/freemarker", "Date": "2017-09-18T20:49:56Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(100); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5230/buggy-version/src.de.kasoki.jfeedly.components.BrowserFrame.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "63107d5d302cc439a27584eea1934c53b3b57080", "Url": "https://api.github.com/repos/Kasoki/jfeedly", "Date": "2013-11-13T16:14:11Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { camera.startPreview(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7940/buggy-version/screenlocker.src.main.java.com.roger.screenlocker.LockScreenService.java", "BodyUseAPI": ["android.hardware.Camera.startPreview()"], "Fixed commit": "e42e4a91a97206487efc8ac7c04782f3ab0cd69d", "Url": "https://api.github.com/repos/Rogero0o/ScreenLocker", "Date": "2015-12-24T08:15:47Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.vividsolutions.jts.geom.Coordinate[] coordinates = pointCache.get(ids); return GEOMF.createLineString(coordinates); } catch (java.lang.IllegalArgumentException e) { (unableToProcessCount)++; return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4067/buggy-version/src.osm.src.main.java.org.geogit.osm.internal.OSMApplyDiffOp.java", "BodyUseAPI": ["com.vividsolutions.jts.geom.GeometryFactory.createLineString(com.vividsolutions.jts.geom.Coordinate[])", "org.geogit.osm.internal.PointCache.get(java.util.List<java.lang.Long>)"], "Fixed commit": "21e30fd495b68c7850e6181011839f0d9caa8ad4", "Url": "https://api.github.com/repos/boundlessgeo/GeoGit", "Date": "2014-04-08T09:31:50Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (db.hasIndexOnly()) { path = db.getIndexPath(); }else { path = db.getDatabasePath(); } org.w3c.dom.Element pathEl = doc.createElement(org.sleuthkit.autopsy.hashdatabase.HashDbManager.PATH_EL); pathEl.setTextContent(path); setEl.appendChild(pathEl); rootEl.appendChild(setEl); } catch (org.sleuthkit.datamodel.TskCoreException ex) { org.sleuthkit.autopsy.hashdatabase.HashDbManager.logger.log(java.util.logging.Level.SEVERE, ((\"Error getting path of hash database \" + (db.getHashSetName())) + \", unable to save configuration\"), ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8432/buggy-version/HashDatabase.src.org.sleuthkit.autopsy.hashdatabase.HashDbManager.java", "BodyUseAPI": ["org.sleuthkit.autopsy.hashdatabase.HashDb.getDatabasePath()", "org.sleuthkit.autopsy.hashdatabase.HashDb.getIndexPath()", "org.w3c.dom.Document.createElement(java.lang.String)", "org.w3c.dom.Element.appendChild(org.w3c.dom.Element)", "org.w3c.dom.Element.appendChild(org.w3c.dom.Element)", "org.w3c.dom.Element.setTextContent(java.lang.String)", "org.sleuthkit.autopsy.hashdatabase.HashDb.hasIndexOnly()"], "Fixed commit": "4ceca1becf80e75d83428cf1ef83d324571cb967", "Url": "https://api.github.com/repos/rcordovano/autopsy", "Date": "2013-11-14T14:54:10Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { if ((this.currentOfficeSpreadSheetWriter) != null) { this.currentOfficeSpreadSheetWriter.close(); }else { org.zuinnote.hadoop.office.format.common.OfficeWriter.LOG.error(org.zuinnote.hadoop.office.format.common.OfficeWriter.EX_NO_WRITER_INSTANTIATED); } } finally { if ((this.oStream) != null) { this.oStream.close(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3105/buggy-version/fileformat.src.main.java.org.zuinnote.hadoop.office.format.common.OfficeWriter.java", "BodyUseAPI": ["org.apache.commons.logging.Log.error(java.lang.String)", "org.zuinnote.hadoop.office.format.common.writer.OfficeSpreadSheetWriterInterface.close()"], "Fixed commit": "3da18958a363208b66ebdf7750d4a5e9d62c9929", "Url": "https://api.github.com/repos/ZuInnoTe/hadoopoffice", "Date": "2017-03-18T21:38:24Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { iterator = projector.apply(iterator); } catch (java.lang.Throwable t) { consumer.accept(null, t); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/35/buggy-version/sql.src.main.java.io.crate.operation.projectors.ProjectingBatchConsumer.java", "BodyUseAPI": ["io.crate.data.Projector.apply(io.crate.data.BatchIterator)"], "Fixed commit": "f314730106801548d877e3f341276bb187a47d0e", "Url": "https://api.github.com/repos/crate/crate", "Date": "2017-03-21T16:59:22Z"},
{"Line": "=>1483", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return ((((((((((((\"AtmosphereRequest{\" + \" contextPath=\") + (getContextPath())) + \" servletPath=\") + (getServletPath())) + \" pathInfo=\") + (getPathInfo())) + \" requestURI=\") + (getRequestURI())) + \" requestURL=\") + (getRequestURL())) + \" destroyable=\") + (b.destroyable)) + '}'; } catch (java.lang.Exception e) { return ((((((((((\"AtmosphereRequest{\" + \" contextPath=\") + (getContextPath())) + \" servletPath=\") + (getServletPath())) + \" pathInfo=\") + (getPathInfo())) + \" requestURI=\") + (getRequestURI())) + \" destroyable=\") + (b.destroyable)) + '}'; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6621/buggy-version/modules.cpr.src.main.java.org.atmosphere.cpr.AtmosphereRequest.java", "BodyUseAPI": ["org.atmosphere.cpr.AtmosphereRequest.getRequestURL()", "org.atmosphere.cpr.AtmosphereRequest.getPathInfo()", "org.atmosphere.cpr.AtmosphereRequest.getServletPath()", "org.atmosphere.cpr.AtmosphereRequest.getRequestURI()", "org.atmosphere.cpr.AtmosphereRequest.getContextPath()"], "Fixed commit": "fee09574799d4d6f7b51bace205ad2b1dc119502", "Url": "https://api.github.com/repos/Atmosphere/atmosphere", "Date": "2012-04-02T17:48:53Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { params.putInt(\"responseCode\", response.getHttpCode()); params.putString(\"responseBody\", response.getBodyAsString()); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5850/buggy-version/android.src.main.java.com.vydia.UploaderModule.java", "BodyUseAPI": ["com.facebook.react.bridge.WritableMap.putString(java.lang.String,response.getBodyAsString())", "com.facebook.react.bridge.WritableMap.putInt(java.lang.String,response.getHttpCode())", "net.gotev.uploadservice.ServerResponse.getBodyAsString()", "net.gotev.uploadservice.ServerResponse.getHttpCode()"], "Fixed commit": "29487826be63031abdea8f7b73bf1dd9e0af47a8", "Url": "https://api.github.com/repos/jeremistadler/react-native-background-upload", "Date": "2017-11-23T19:24:31Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.apache.http.util.EntityUtils.consume(response.getEntity()); } catch (java.io.IOException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2886/buggy-version/services.src.main.java.gov.medicaid.screening.dao.impl.BaseDAO.java", "BodyUseAPI": ["org.apache.http.HttpResponse.getEntity()", "org.apache.http.util.EntityUtils.consume(response.getEntity())"], "Fixed commit": "8fa883b1209b68d9cfffb56b40b2654bfd6d7e70", "Url": "https://api.github.com/repos/SolutionGuidance/psm", "Date": "2016-09-12T01:19:32Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { finishAllActivity(); android.app.ActivityManager activityMgr = ((android.app.ActivityManager) (context.getSystemService(Context.ACTIVITY_SERVICE))); activityMgr.killBackgroundProcesses(context.getPackageName()); java.lang.System.exit(0); } catch (java.lang.Exception e) { java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4612/buggy-version/app.src.main.java.cn.kellygod.schoolclient.util.AppManager.java", "BodyUseAPI": ["android.content.Context.getSystemService(Context.ACTIVITY_SERVICE)", "android.app.ActivityManager.killBackgroundProcesses(context.getPackageName())", "cn.kellygod.schoolclient.util.AppManager.finishAllActivity()", "android.content.Context.getPackageName()", "java.lang.System.exit(int)"], "Fixed commit": "9b327dcf154bcab95870479374a23653f6e5b5bf", "Url": "https://api.github.com/repos/KellyGodLv/SchoolClient", "Date": "2016-12-02T09:29:18Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { remove(aLetter.toString()); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6410/buggy-version/mtScrabble.src.essentials.objects.BrickList.java", "BodyUseAPI": ["essentials.enums.LetterEnum.toString()", "essentials.objects.BrickList.remove(aLetter.toString())"], "Fixed commit": "8711e3b7365d7469e4e893e6a1476d3627b78d92", "Url": "https://api.github.com/repos/hanneseilers/mtScrabble", "Date": "2013-06-21T07:45:00Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { innerState = java.lang.Double.parseDouble(str_to_parse); } catch (java.lang.NumberFormatException _e) { throw new c4sci.data.exceptions.DataValueParsingException(\"a double value\", str_to_parse, \"cannot parse\", _e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/961/buggy-version/C4Sci.src.main.java.c4sci.data.dataParameters.basicModifiables.DoubleModifiable.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "7539e19f460e30af64ea156ac3f07abd421ff88a", "Url": "https://api.github.com/repos/Jean-MarcDENIEL/C4Sci", "Date": "2013-05-31T07:19:40Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { innerState = java.lang.Integer.parseInt(str_to_parse); } catch (java.lang.NumberFormatException _e) { throw new c4sci.data.exceptions.DataValueParsingException(\"an integer value\", str_to_parse, \"cannot parse\", _e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/961/buggy-version/C4Sci.src.main.java.c4sci.data.dataParameters.basicModifiables.IntegerModifiable.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "7539e19f460e30af64ea156ac3f07abd421ff88a", "Url": "https://api.github.com/repos/Jean-MarcDENIEL/C4Sci", "Date": "2013-05-31T07:19:40Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { innerState = java.lang.Float.parseFloat(str_to_parse); } catch (java.lang.NumberFormatException _e) { throw new c4sci.data.exceptions.DataValueParsingException(\"a float value\", str_to_parse, \"cannot parse\", _e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/961/buggy-version/C4Sci.src.main.java.c4sci.data.dataParameters.basicModifiables.FloatModifiable.java", "BodyUseAPI": ["java.lang.Float.parseFloat(java.lang.String)"], "Fixed commit": "7539e19f460e30af64ea156ac3f07abd421ff88a", "Url": "https://api.github.com/repos/Jean-MarcDENIEL/C4Sci", "Date": "2013-05-31T07:19:40Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { allMaskedResources = MaskedFMs.clone(); } catch (java.lang.CloneNotSupportedException e) { rcms.fm.app.level1.HCALMasker.logger.error(\"Caught a CloneNotSupportedException when cloning the MaskedFMs vector.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6530/buggy-version/src.rcms.fm.app.level1.HCALMasker.java", "BodyUseAPI": ["rcms.fm.fw.parameter.type.VectorT<rcms.fm.fw.parameter.type.StringT>.clone()"], "Fixed commit": "f2c29de543955c75a6c5f121881af4338247eea4", "Url": "https://api.github.com/repos/HCALRunControl/levelOneHCALFM", "Date": "2016-08-23T10:02:56Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { if (!(listenerMap.containsKey(listener))) { throw new java.lang.IllegalArgumentException(((\"The listener instance \" + listener) + \" was not yet registered!\")); } listenerMap.put(listener, updatedDOM); } finally { listenerMapLock.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4069/buggy-version/src.main.java.de.uniluebeck.itm.tr.util.domobserver.DOMObserverListenerManagerImpl.java", "BodyUseAPI": ["java.util.Map<de.uniluebeck.itm.tr.util.domobserver.DOMObserverListener, org.w3c.dom.Node>.containsKey(de.uniluebeck.itm.tr.util.domobserver.DOMObserverListener)", "java.util.Map<de.uniluebeck.itm.tr.util.domobserver.DOMObserverListener, org.w3c.dom.Node>.put(de.uniluebeck.itm.tr.util.domobserver.DOMObserverListener,org.w3c.dom.Node)"], "Fixed commit": "91eab617e7a1275c1cc6bec2aae700baf7aa6154", "Url": "https://api.github.com/repos/itm/itm-utils", "Date": "2011-12-08T16:26:26Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((converter.getClass().getMethod(\"deserialize\", java.lang.Long.class)) != null) { longCheckedVal = ((java.lang.Number) (value)).longValue(); } } catch (java.lang.NoSuchMethodException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5941/buggy-version/src.main.java.io.innerloop.neo4j.ogm.impl.metadata.PropertyMetadata.java", "BodyUseAPI": ["java.lang.Object.longValue()", "converter.getClass().getMethod(java.lang.String,java.lang.Class)", "io.innerloop.neo4j.ogm.converters.Converter.getClass()"], "Fixed commit": "12a31a19f2748b3be78234687998770232e6e8b9", "Url": "https://api.github.com/repos/mangrish/java-neo4j-ogm", "Date": "2015-05-13T12:31:34Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { entry.setAsset(item.get(\"_id\").toString()); entry.setStatName(\"TotalIPsCount\"); entry.setStatValue(java.lang.Double.valueOf(item.get(\"count\").toString())); domain.AssetIPCountConverter.LOG.info((((((entry.getAsset()) + \",\") + (entry.getStatName())) + \",\") + (entry.getStatValue()))); } catch (java.lang.Exception e) { domain.AssetIPCountConverter.LOG.debug(item.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/434/buggy-version/src.main.java.domain.AssetIPCountConverter.java", "BodyUseAPI": ["domain.Statistic.getStatValue()", "org.slf4j.Logger.info((((((entry.getAsset()) + \",\") + (entry.getStatName())) + \",\") + (entry.getStatValue())))", "domain.Statistic.getStatName()", "domain.Statistic.setAsset(item.get(\"_id\").toString())", "domain.Statistic.setStatValue(java.lang.Double)", "item.get(\"_id\").toString()", "com.mongodb.DBObject.get(java.lang.String)", "domain.Statistic.setStatName(java.lang.String)", "domain.Statistic.getAsset()", "java.lang.Double.valueOf(item.get(\"count\").toString())", "item.get(\"count\").toString()", "com.mongodb.DBObject.get(java.lang.String)"], "Fixed commit": "816e4f30c80625fd9c43198755bb15ec543e72df", "Url": "https://api.github.com/repos/OrganicityEu-Platform/Asset-Reputation-Service", "Date": "2016-10-13T14:48:12Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { saveModifiedInformation(); } catch (java.lang.Exception e) { util.window.ExitSaveDialog exitDialog = new util.window.ExitSaveDialog(); exitDialog.setLocationRelativeTo(main.AnimeIndex.mainFrame); exitDialog.setVisible(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7509/buggy-version/src.main.AnimeIndex.java", "BodyUseAPI": ["main.AnimeIndex.2.saveModifiedInformation()"], "Fixed commit": "159f91cf17d68d356e852faf72443eafdd4c691f", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2015-07-22T22:05:10Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { final java.io.File file = com.tasco.hls.file.FileAccessor.FILESYSTEMS.get(fileUri.getScheme()).getFile(fileUri); return file; } catch (java.lang.Exception e) { throw new java.io.FileNotFoundException((\"could not access file: \" + (fileUri.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2476/buggy-version/src.main.java.com.tasco.hls.file.FileAccessor.java", "BodyUseAPI": ["java.net.URI.getScheme()", "java.util.Map<java.lang.String, com.tasco.hls.file.filesystem.FileSystem>.get(java.lang.String)", "com.tasco.hls.file.FileAccessor.FILESYSTEMS.get(fileUri.getScheme()).getFile(java.net.URI)"], "Fixed commit": "77c3736171efa50abe4a03e52a0a825f9c69f254", "Url": "https://api.github.com/repos/atasco88/spark-hls-analyzer", "Date": "2015-09-28T22:11:57Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.eclipse.core.resources.ResourcesPlugin.getWorkspace().getRoot().refreshLocal(IResource.DEPTH_INFINITE, null); } catch (org.eclipse.core.runtime.CoreException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/877/buggy-version/main.org.bundlemaker.core.ui.src.org.bundlemaker.core.ui.editor.ContentPage.java", "BodyUseAPI": ["org.eclipse.core.resources.ResourcesPlugin.getWorkspace().getRoot()", "org.eclipse.core.resources.ResourcesPlugin.getWorkspace().getRoot().refreshLocal(IResource.DEPTH_INFINITE,<nulltype>)", "org.eclipse.core.resources.ResourcesPlugin.getWorkspace()"], "Fixed commit": "c48d19aa07ed437d0674f73480013d77d65f9d48", "Url": "https://api.github.com/repos/nilshartmann/bundlemaker", "Date": "2011-07-27T12:04:19Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { doHttpUrlConnectionAction(url); } catch (java.io.IOException e) { java.lang.System.err.println(\"Failed to save score\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1385/buggy-version/core.src.com.lifemm.game.ScoreAPI.java", "BodyUseAPI": ["com.lifemm.game.ScoreAPI.doHttpUrlConnectionAction(java.lang.String)"], "Fixed commit": "78d25cfc2c84ab18d3800f1b1f016bc6590bf5a2", "Url": "https://api.github.com/repos/alexottoboni/Life--", "Date": "2016-05-05T23:26:32Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { parameters[i] = getEnumInstance(enumClass, enumValue); } catch (java.lang.IllegalArgumentException e) { return Spec.ProtoExecutionResult.newBuilder().setFailed(true).setExecutionTime(0).setStackTrace(com.google.common.base.Throwables.getStackTraceAsString(e)).setErrorMessage(java.lang.String.format(com.thoughtworks.gauge.execution.StepExecutionStage.ENUM_VALUE_NOT_FOUND_MESSAGE, enumValue, enumClass.getSimpleName())).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6539/buggy-version/src.main.java.com.thoughtworks.gauge.execution.StepExecutionStage.java", "BodyUseAPI": ["com.thoughtworks.gauge.execution.StepExecutionStage.getEnumInstance(java.lang.Class<? extends java.lang.Enum<?>>,java.lang.String)"], "Fixed commit": "57bf8c1e37decb4eba1745f91eb3d0969280dd09", "Url": "https://api.github.com/repos/boazberman/gauge-java", "Date": "2016-11-19T17:39:06Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(5000); } catch (java.lang.InterruptedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/567/buggy-version/server.FileManager.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "e081599640653cbcc07fcf4c85f5e97e9fb4131e", "Url": "https://api.github.com/repos/galvanom/BestAlarm", "Date": "2016-12-04T11:14:02Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.support.v4.app.Fragment movieFragment = com.centaurs.tmdbapp.view.MovieFragment.getInstance(view.getId()); getSupportFragmentManager().beginTransaction().replace(R.id.grid_movies_fragment_container, movieFragment).addToBackStack(null).commit(); } catch (java.lang.NullPointerException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7917/buggy-version/app.src.main.java.com.centaurs.tmdbapp.view.MoviesActivity.java", "BodyUseAPI": ["getSupportFragmentManager().beginTransaction().replace(R.id.grid_movies_fragment_container, movieFragment).addToBackStack(<nulltype>)", "android.view.View.getId()", "getSupportFragmentManager().beginTransaction()", "getSupportFragmentManager().beginTransaction().replace(R.id.grid_movies_fragment_container,android.support.v4.app.Fragment)", "com.centaurs.tmdbapp.view.MovieFragment.getInstance(view.getId())", "getSupportFragmentManager().beginTransaction().replace(R.id.grid_movies_fragment_container, movieFragment).addToBackStack(null).commit()", "com.centaurs.tmdbapp.view.MoviesActivity.getSupportFragmentManager()"], "Fixed commit": "77c87a4b69c6fe08ae53cc7b615255903ec39ff6", "Url": "https://api.github.com/repos/zaharij/TMDBApp", "Date": "2017-10-02T06:23:34Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.hyperic.hq.appdef.shared.AppdefEntityID entityId = org.hyperic.hq.ui.util.RequestUtils.getEntityId(this.request); this.checkResourceConfigured(entityId); } catch (org.hyperic.hq.ui.exception.ParameterNotFoundException ex) { log.error(\"Entity ID could not be retrieved\"); log.error(ex, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1358/buggy-version/hq-web.src.main.java.org.hyperic.hq.ui.action.resource.common.monitor.alerts.config.PortalActionNG.java", "BodyUseAPI": ["org.hyperic.hq.ui.action.resource.common.monitor.alerts.config.PortalActionNG.checkResourceConfigured(org.hyperic.hq.appdef.shared.AppdefEntityID)", "org.hyperic.hq.ui.util.RequestUtils.getEntityId(this.request)"], "Fixed commit": "06e6bfaa5c003eef433673696bfeb05df3700760", "Url": "https://api.github.com/repos/hyperic/hq", "Date": "2015-12-06T09:16:27Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { tier = java.lang.Integer.valueOf(tierString); } catch (java.lang.Exception e) { tier = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8384/buggy-version/FactionsExtra.src.com.mutinycraft.jigsaw.FactionsExtra.FactionsExtraCommandExecutor.java", "BodyUseAPI": ["java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "920caa7ae09b93c19c755887f5c259233c2247a8", "Url": "https://api.github.com/repos/MutinyCraft/FactionsExtra", "Date": "2013-01-12T00:15:45Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.constellio.app.ui.application.ConstellioUI.getCurrentSessionContext().removeSelectedRecordId(record.getId(), record.getTypeCode()); } catch (java.lang.Throwable t) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1614/buggy-version/app.src.com.constellio.app.modules.rm.extensions.SessionContextRecordExtension.java", "BodyUseAPI": ["com.constellio.app.ui.application.ConstellioUI.getCurrentSessionContext().removeSelectedRecordId(record.getId(),record.getTypeCode())", "com.constellio.model.entities.records.Record.getTypeCode()", "com.constellio.app.ui.application.ConstellioUI.getCurrentSessionContext()", "com.constellio.model.entities.records.Record.getId()"], "Fixed commit": "9105674deb37301e2246a40d6a14dbf97360bf61", "Url": "https://api.github.com/repos/doculibre/constellio", "Date": "2017-03-20T12:55:48Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.constellio.app.ui.application.ConstellioUI.getCurrentSessionContext().removeSelectedRecordId(record.getId(), record.getTypeCode()); } catch (java.lang.Throwable t) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1614/buggy-version/app.src.com.constellio.app.modules.rm.extensions.SessionContextRecordExtension.java", "BodyUseAPI": ["com.constellio.model.entities.records.Record.getTypeCode()", "com.constellio.app.ui.application.ConstellioUI.getCurrentSessionContext()", "com.constellio.app.ui.application.ConstellioUI.getCurrentSessionContext().removeSelectedRecordId(record.getId(),record.getTypeCode())", "com.constellio.model.entities.records.Record.getId()"], "Fixed commit": "9105674deb37301e2246a40d6a14dbf97360bf61", "Url": "https://api.github.com/repos/doculibre/constellio", "Date": "2017-03-20T12:55:48Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { status = javax.enterprise.inject.spi.CDI.current().select(javax.security.authentication.mechanism.http.HttpAuthenticationMechanism.class).get().validateRequest(msgContext.getRequest(), msgContext.getResponse(), msgContext); } catch (javax.security.auth.message.AuthException e) { org.glassfish.soteria.mechanisms.jaspic.Jaspic.setLastAuthenticationStatus(msgContext.getRequest(), javax.security.AuthenticationStatus.SEND_FAILURE); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/867/buggy-version/impl.src.main.java.org.glassfish.soteria.mechanisms.jaspic.HttpBridgeServerAuthModule.java", "BodyUseAPI": ["javax.security.authentication.mechanism.http.HttpMessageContext.getRequest()", "javax.enterprise.inject.spi.CDI.current().select(java.lang.Class)", "javax.enterprise.inject.spi.CDI.current().select(javax.security.authentication.mechanism.http.HttpAuthenticationMechanism.class).get().validateRequest(msgContext.getRequest(),msgContext.getResponse(),javax.security.authentication.mechanism.http.HttpMessageContext)", "javax.enterprise.inject.spi.CDI.current().select(javax.security.authentication.mechanism.http.HttpAuthenticationMechanism.class).get()", "javax.security.authentication.mechanism.http.HttpMessageContext.getResponse()", "javax.enterprise.inject.spi.CDI.current()"], "Fixed commit": "f280a742103aa01a656897ac11a79064c280affe", "Url": "https://api.github.com/repos/sameer-pandit/soteria", "Date": "2017-05-22T19:48:59Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { port = java.lang.Integer.parseInt(args[0]); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6174/buggy-version/example.ChatServer.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "810bd4074b65736e231cff94f3c11062fd0a2cfd", "Url": "https://api.github.com/repos/sarnobat/websocket", "Date": "2010-01-29T23:28:27Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.wasteofplastic.bluebook.MetricsLite metrics = new com.wasteofplastic.bluebook.MetricsLite(this); metrics.start(); } catch (java.io.IOException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4358/buggy-version/BlueBook.src.com.wasteofplastic.bluebook.BlueBook.java", "BodyUseAPI": ["com.wasteofplastic.bluebook.MetricsLite.start()"], "Fixed commit": "c4c67306db2428793170e9f142427884a710675a", "Url": "https://api.github.com/repos/tastybento/bluebook", "Date": "2013-12-22T01:34:50Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return new org.springframework.http.ResponseEntity<be.studyfindr.entities.LoginResponse>(fb.callBack(code, state, session), org.springframework.http.HttpStatus.OK); } catch (java.lang.Exception ex) { return new org.springframework.http.ResponseEntity<be.studyfindr.entities.LoginResponse>(org.springframework.http.HttpStatus.BAD_REQUEST); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5256/buggy-version/src.main.java.be.studyfindr.rest.FacebookController.java", "BodyUseAPI": ["be.studyfindr.rest.FacebookLogic.callBack(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)"], "Fixed commit": "612660308a5d6b4a80d1576c25efc1266ac0df46", "Url": "https://api.github.com/repos/CptArn/ScrumMojito", "Date": "2016-11-28T12:25:16Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { wait(THINK_TIME); } catch (java.lang.InterruptedException ex) { java.util.logging.Logger.getLogger(charlie.bot.server.BotBot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6281/buggy-version/src.charlie.bot.server.BotBot.java", "BodyUseAPI": ["charlie.bot.server.BotBot.wait(long)"], "Fixed commit": "a2ac988e5508b77efdf2d5967bcdcb92d33812b9", "Url": "https://api.github.com/repos/djmcmsc478/CharliePlugin", "Date": "2014-03-26T03:56:42Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { flfield.setAccessible(true); flfield.setInt(foodstats, ((flfield.getInt(foodstats)) + food)); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7969/buggy-version/src.minecraft.biomesoplenty.items.ItemBOPFood.java", "BodyUseAPI": ["java.lang.reflect.Field.setAccessible(boolean)", "java.lang.reflect.Field.setInt(net.minecraft.util.FoodStats,((flfield.getInt(foodstats)) + food))", "java.lang.reflect.Field.getInt(net.minecraft.util.FoodStats)"], "Fixed commit": "fe7d4c424b99e00b480af1d24d1d9417d0406dc2", "Url": "https://api.github.com/repos/BiomesOPlenty/BiomesOPlenty", "Date": "2013-07-25T07:52:26Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { slfield.setAccessible(true); slfield.setFloat(foodstats, ((slfield.getFloat(foodstats)) + saturation)); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7969/buggy-version/src.minecraft.biomesoplenty.items.ItemBOPFood.java", "BodyUseAPI": ["java.lang.reflect.Field.setFloat(net.minecraft.util.FoodStats,((slfield.getFloat(foodstats)) + saturation))", "java.lang.reflect.Field.getFloat(net.minecraft.util.FoodStats)", "java.lang.reflect.Field.setAccessible(boolean)"], "Fixed commit": "fe7d4c424b99e00b480af1d24d1d9417d0406dc2", "Url": "https://api.github.com/repos/BiomesOPlenty/BiomesOPlenty", "Date": "2013-07-25T07:52:26Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { unmarshal(ret.getResponse()); } catch (org.json.JSONException e) { this.exception = e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1284/buggy-version/src.main.java.com.qiniu.qbox.rs.ImageInfoRet.java", "BodyUseAPI": ["com.qiniu.qbox.auth.CallRet.getResponse()", "com.qiniu.qbox.rs.ImageInfoRet.unmarshal(ret.getResponse())"], "Fixed commit": "e66efe4c267e9d281c28eb762929c0d62ac0cb85", "Url": "https://api.github.com/repos/wangjinlei/java-sdk", "Date": "2013-01-14T10:31:08Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return objectMapper.readTree(ret); } catch (com.fasterxml.jackson.core.JsonParseException parseException) { return objectMapper.createObjectNode().textNode(ret); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8626/buggy-version/src.main.java.org.mockenize.service.ScriptService.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.ObjectMapper.readTree(java.lang.String)"], "Fixed commit": "772d6b35c1472685d58e8bf308289f566eadc791", "Url": "https://api.github.com/repos/Mockenize/mockenize-server", "Date": "2016-04-15T19:06:06Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { account.setUsername(jsonObject.getString(\"email \")); } catch (org.json.JSONException e) { android.util.Log.e(\"LoginAct\", e.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3677/buggy-version/app.src.main.java.org.fossasia.phimpme.accounts.AccountActivity.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)", "org.fossasia.phimpme.data.local.AccountDatabase.setUsername(jsonObject.getString(\"email   \"))"], "Fixed commit": "42c452d60d700f8bc0d5a58b09ab1e6b5c45b0ec", "Url": "https://api.github.com/repos/pa1pal/phimpme-android", "Date": "2017-07-07T13:55:14Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 5000, 10, locationListener); mFusedLocationClient = com.google.android.gms.location.LocationServices.getFusedLocationProviderClient(this); mFusedLocationClient.getLastLocation().addOnSuccessListener(this, new com.google.android.gms.tasks.OnSuccessListener<android.location.Location>() { @java.lang.Override public void onSuccess(android.location.Location location) { if (location != null) { latitud = location.getLatitude(); longitud = location.getLongitude(); } } }); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/125/buggy-version/app.src.main.java.org.aficiones.noticias.nerdynews.eventos.BusquedaEventosActivity.java", "BodyUseAPI": ["android.location.LocationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER,int,int,android.location.LocationListener)", "android.location.Location.getLongitude()", "com.google.android.gms.location.FusedLocationProviderClient.getLastLocation()", "com.google.android.gms.location.LocationServices.getFusedLocationProviderClient(org.aficiones.noticias.nerdynews.eventos.BusquedaEventosActivity)", "android.location.Location.getLatitude()", "mFusedLocationClient.getLastLocation().addOnSuccessListener(org.aficiones.noticias.nerdynews.eventos.BusquedaEventosActivity,com.google.android.gms.tasks.OnSuccessListener<android.location.Location>)"], "Fixed commit": "688e5ef712caab2923a003e8c6763c8b719c82a5", "Url": "https://api.github.com/repos/proyectonerdy/nerdynews", "Date": "2017-12-19T20:08:31Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { stop(); prepare(); setState(state); } catch (java.io.IOException e) { android.util.Log.d(com.tanosys.videolibrary.VideoDecoder.TAG, \"cant replace output surface\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8236/buggy-version/videolibrary.src.main.java.com.tanosys.videolibrary.VideoDecoder.java", "BodyUseAPI": ["com.tanosys.videolibrary.VideoDecoder.stop()", "com.tanosys.videolibrary.VideoDecoder.setState(int)", "com.tanosys.videolibrary.VideoDecoder.prepare()"], "Fixed commit": "0e32a5d6a4426c6a3baa46d5cdae1aa10119abf5", "Url": "https://api.github.com/repos/Tai-Kimura/VideoApplication", "Date": "2017-02-14T01:29:55Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { exception = new com.fasterxml.jackson.databind.ObjectMapper().readValue(result.msg, org.knowm.xchange.binance.dto.BinanceException.class); } catch (java.lang.Throwable e) { exception = new org.knowm.xchange.binance.dto.BinanceException((-1), result.msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6054/buggy-version/xchange-binance.src.main.java.org.knowm.xchange.binance.service.BinanceAccountServiceRaw.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.ObjectMapper.readValue(result.msg,java.lang.Class)"], "Fixed commit": "4cd067200e98bbafc15641a701123c052b9017d0", "Url": "https://api.github.com/repos/knowm/XChange", "Date": "2017-11-01T15:23:08Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { commandSerialControl.stop(); daoControl.stop(); } catch (java.lang.Exception e) { com.apkfuns.logutils.LogUtils.e(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4824/buggy-version/app.src.main.java.com.eternal.davidconsole.controllers.MainApplication.java", "BodyUseAPI": ["com.eternal.davidconsole.controllers.DaoControl.stop()", "com.eternal.davidconsole.serial.CommandSerialControl.stop()"], "Fixed commit": "6b7b3d749adce4462047c12ef5caa5753a346cf9", "Url": "https://api.github.com/repos/deeplin/DavidConsole", "Date": "2017-09-19T14:40:36Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { JDBCengine.connect(); } catch (java.lang.ClassNotFoundException e) { e.printStackTrace(); } catch (java.sql.SQLException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4588/buggy-version/src.graphic.MAinWindow.java", "BodyUseAPI": ["jdbcConsole.JDBCAppConsole.connect()"], "Fixed commit": "bd34a70cbd2043ccd50f1976a6fc4c7e7ebe11a7", "Url": "https://api.github.com/repos/Nayeer/tp2_jdbc", "Date": "2017-10-11T14:28:29Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String bac = calculateBAC(gender, user.getWeight(), countingGrams(beer, wine, drink, shot), hours); pieChart.setCenterText(((java.lang.Double.valueOf(bac)) + (rustelefonen.no.drikkevett_android.tabs.calc.BacCalcFragment.PER_MILLE))); pieChart.animateY(0, Easing.EasingOption.EaseInOutQuad); } catch (java.lang.NumberFormatException e) { java.lang.String bac = \"\" + 0.0; pieChart.setCenterText(((java.lang.Double.valueOf(bac)) + (rustelefonen.no.drikkevett_android.tabs.calc.BacCalcFragment.PER_MILLE))); pieChart.animateY(0, Easing.EasingOption.EaseInOutQuad); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/706/buggy-version/app.src.main.java.rustelefonen.no.drikkevett_android.tabs.calc.BacCalcFragment.java", "BodyUseAPI": ["com.github.mikephil.charting.charts.PieChart.animateY(int,Easing.EasingOption.EaseInOutQuad)", "com.github.mikephil.charting.charts.PieChart.setCenterText(java.lang.String)", "java.lang.Double.valueOf(java.lang.String)", "rustelefonen.no.drikkevett_android.db.User.getWeight()", "rustelefonen.no.drikkevett_android.tabs.calc.BacCalcFragment.calculateBAC(rustelefonen.no.drikkevett_android.util.Gender,user.getWeight(),double,int)", "rustelefonen.no.drikkevett_android.tabs.calc.BacCalcFragment.countingGrams(int,int,int,int)"], "Fixed commit": "3a665909554c5cf1a7b945581a67265d2817ebc9", "Url": "https://api.github.com/repos/rustelefonen/drikkevett-android", "Date": "2016-08-03T17:59:04Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { in = resourceURL.openStream(); } catch (java.io.IOException e) { throw new java.lang.RuntimeException(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6657/buggy-version/src.edu.brown.cs.h2r.baking.Knowledgebase.TraitParser.java", "BodyUseAPI": ["java.net.URL.openStream()"], "Fixed commit": "f65d88cfd88a31a1d4c99af0ff1965badd96b338", "Url": "https://api.github.com/repos/h2r/baking", "Date": "2014-07-03T18:51:30Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { in = resourceURL.openStream(); } catch (java.io.IOException e) { throw new java.lang.RuntimeException(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6657/buggy-version/src.edu.brown.cs.h2r.baking.Knowledgebase.CombinationParser.java", "BodyUseAPI": ["java.net.URL.openStream()"], "Fixed commit": "f65d88cfd88a31a1d4c99af0ff1965badd96b338", "Url": "https://api.github.com/repos/h2r/baking", "Date": "2014-07-03T18:51:30Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { customer = customerRepo.getOne(customerid); } catch (java.lang.ClassCastException cce) { customer = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3304/buggy-version/Code.Server.src.main.java.com.bankrupted.tradein.service.CustomerService.java", "BodyUseAPI": ["com.bankrupted.tradein.repository.CustomerRepository.getOne(int)"], "Fixed commit": "d126b32d78c0bcd708db743daf8a08950e3c00aa", "Url": "https://api.github.com/repos/borderwing/GameTrade-In", "Date": "2017-09-10T10:16:53Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { value = java.lang.Long.parseLong(getText()); } catch (java.lang.NumberFormatException e) { value = getDefaultValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/892/buggy-version/src.main.java.de.dk.util.javafxUtils.NumberTextField.java", "BodyUseAPI": ["java.lang.Long.parseLong(getText())", "de.dk.util.javafxUtils.NumberTextField.getText()"], "Fixed commit": "720e543132031a4713c8d1a0da388f1ee3e8ba48", "Url": "https://api.github.com/repos/Koefflitz/Util", "Date": "2017-08-13T13:46:18Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { de.hpi.krestel.mySearchEngine.Index index = new de.hpi.krestel.mySearchEngine.Index(wikipediaFilePath); for (de.hpi.krestel.mySearchEngine.domain.WikiPage wikiPage : listWikiPages(wikipediaFilePath, index)) { java.lang.Iterable<java.lang.String> tokens = wikiPage.asTokens(); index.add(wikiPage, tokens); } index.save(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6819/buggy-version/mySearchEngine.src.main.java.de.hpi.krestel.mySearchEngine.SearchEngineY.java", "BodyUseAPI": ["de.hpi.krestel.mySearchEngine.Index.add(de.hpi.krestel.mySearchEngine.domain.WikiPage,java.lang.Iterable<java.lang.String>)", "de.hpi.krestel.mySearchEngine.domain.WikiPage.asTokens()", "de.hpi.krestel.mySearchEngine.Index.save()", "de.hpi.krestel.mySearchEngine.SearchEngineY.listWikiPages(java.lang.String,de.hpi.krestel.mySearchEngine.Index)"], "Fixed commit": "44e3a964e140695cd1ce39d8202b358c4e2a03b7", "Url": "https://api.github.com/repos/easten20/InformationRetrieval", "Date": "2014-06-12T07:18:31Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.io.DataOutputStream out = new java.io.DataOutputStream(socket.getOutputStream()); out.writeChars(message.toString()); } catch (java.io.IOException e) { android.util.Log.e(di.kdd.smartmonitor.protocol.DistributedSystemNode.TAG, e.getMessage()); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6766/buggy-version/src.di.kdd.smartmonitor.protocol.DistributedSystemNode.java", "BodyUseAPI": ["java.net.Socket.getOutputStream()", "di.kdd.smartmonitor.protocol.Message.toString()", "java.io.DataOutputStream.writeChars(message.toString())"], "Fixed commit": "d9a4e2b4b4321ce2a90bf7bfc40c4712ad4213d7", "Url": "https://api.github.com/repos/PanosSakkos/SmartMonitor", "Date": "2013-04-05T13:22:39Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { bookNumberPages = java.lang.Integer.parseInt(numberPages.getText().toString()); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/965/buggy-version/app.src.main.java.renan.tsi.pro.br.keeptrackbooks.activities.EditBookActivity.java", "BodyUseAPI": ["numberPages.getText().toString()", "java.lang.Integer.parseInt(numberPages.getText().toString())", "android.widget.EditText.getText()"], "Fixed commit": "0e8150fa6e2fc15b5f5912de012bb80d216ea3c9", "Url": "https://api.github.com/repos/renangabriel27/keeptrackbooks", "Date": "2017-11-24T19:26:21Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { final javax.servlet.sip.SipURI fromUri = org.mobicents.servlet.sip.restcomm.callmanager.mgcp.MgcpCallManager.sipFactory.createSipURI(from, org.mobicents.servlet.sip.restcomm.callmanager.mgcp.MgcpCallManager.proxyUri.getHost()); final javax.servlet.sip.SipURI toUri = org.mobicents.servlet.sip.restcomm.callmanager.mgcp.MgcpCallManager.sipFactory.createSipURI(to, org.mobicents.servlet.sip.restcomm.callmanager.mgcp.MgcpCallManager.proxyUri.getHost()); return createCall(fromUri, toUri); } catch (final java.lang.Exception exception) { throw new org.mobicents.servlet.sip.restcomm.media.api.CallManagerException(exception); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1706/buggy-version/restcomm.core.src.main.java.org.mobicents.servlet.sip.restcomm.callmanager.mgcp.MgcpCallManager.java", "BodyUseAPI": ["javax.servlet.sip.SipFactory.createSipURI(java.lang.String,org.mobicents.servlet.sip.restcomm.callmanager.mgcp.MgcpCallManager.proxyUri.getHost())", "javax.servlet.sip.SipFactory.createSipURI(java.lang.String,org.mobicents.servlet.sip.restcomm.callmanager.mgcp.MgcpCallManager.proxyUri.getHost())", "javax.servlet.sip.SipURI.getHost()", "javax.servlet.sip.SipURI.getHost()", "org.mobicents.servlet.sip.restcomm.callmanager.mgcp.MgcpCallManager.createCall(javax.servlet.sip.SipURI,javax.servlet.sip.SipURI)"], "Fixed commit": "67e245435a258f5940084135aa869d4710881cdc", "Url": "https://api.github.com/repos/Mobicents/RestComm", "Date": "2012-09-18T19:35:55Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { buffon.dialog.options.OptionsProvider.prefs.clear(); } catch (java.util.prefs.BackingStoreException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/701/buggy-version/src.main.java.buffon.dialog.options.OptionsProvider.java", "BodyUseAPI": ["java.util.prefs.Preferences.clear()"], "Fixed commit": "7b899a6ff95b14447ba48b251f96f3bd71f6e16f", "Url": "https://api.github.com/repos/lukacupic/Buffons-Needle-Simulator", "Date": "2017-10-08T14:18:01Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mDataCommThread.write(\"4\"); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/1146/buggy-version/app.src.main.java.com.example.kit.personalalarm.MainActivity.java", "BodyUseAPI": ["com.example.kit.personalalarm.MainActivity.DataCommThread.write(java.lang.String)"], "Fixed commit": "b46dd39a30a996482ef7ad7a3d288589b94f4033", "Url": "https://api.github.com/repos/kityan147/PersonalAlarm", "Date": "2017-03-16T05:34:26Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { setPair(pairs.getRandomPair()); } catch (java.lang.Exception e) { setPair((myName + \":\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8232/buggy-version/app.src.main.java.chalmers.eda397_2016_group3.timer.FragmentTimer.java", "BodyUseAPI": ["chalmers.eda397_2016_group3.timer.FragmentTimer.FetchBoards.setPair(pairs.getRandomPair())", "chalmers.eda397_2016_group3.utils.Pairs.getRandomPair()"], "Fixed commit": "510c402e7f9cff0adfbab920bac94a64a9661957", "Url": "https://api.github.com/repos/sebbe33/EDA_397_2016_Group3", "Date": "2016-05-20T13:26:40Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { inputVirtualPathHelper.close(); } catch (eu.unifiedviews.dataunit.DataUnitException ex) { eu.unifiedviews.plugins.loader.filestolocalfs.FilesToLocalFS.LOG.warn(\"Error in close\", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/632/buggy-version/l-filesToLocalFS.src.main.java.eu.unifiedviews.plugins.loader.filestolocalfs.FilesToLocalFS.java", "BodyUseAPI": ["eu.unifiedviews.helpers.dataunit.virtualpathhelper.VirtualPathHelper.close()"], "Fixed commit": "3c1ea3c24d2605bc62f0ced288a8112fc2e65668", "Url": "https://api.github.com/repos/UnifiedViews/Plugins", "Date": "2014-08-25T08:02:43Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { db.execSQL(SQL_CREATE_PRESCRIPTION); android.util.Log.d(\"Create Table\", \" Prescription Successful\"); } catch (java.lang.Exception e) { android.util.Log.d(\"There is issue\", \" in creating table\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/584/buggy-version/app.src.main.java.example.healthassistant.DbHelper.java", "BodyUseAPI": ["android.database.sqlite.SQLiteDatabase.execSQL(java.lang.String)", "android.util.Log.d(java.lang.String,java.lang.String)"], "Fixed commit": "b7f6f61fe41245dc704655be72049e37168c5863", "Url": "https://api.github.com/repos/prernanain27/HealthAssistant", "Date": "2017-04-05T21:59:00Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.util.Log.i(getActivity().getLocalClassName(), retrofitError.getLocalizedMessage()); } catch (java.lang.NullPointerException npe) { android.widget.Toast.makeText(activity, \"Internal Server Error\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5229/buggy-version/mifosng-android.src.main.java.com.mifos.mifosxdroid.online.SavingsAccountSummaryFragment.java", "BodyUseAPI": ["com.mifos.mifosxdroid.online.SavingsAccountSummaryFragment.1.getActivity()", "getActivity().getLocalClassName()", "android.util.Log.i(getActivity().getLocalClassName(),retrofitError.getLocalizedMessage())", "retrofit.RetrofitError.getLocalizedMessage()"], "Fixed commit": "01b4056b9b7d99686bc8ad49e708705669cb5d63", "Url": "https://api.github.com/repos/openMF/android-client", "Date": "2014-11-21T07:49:21Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { j = net.but2002.minecraft.BukkitSpeak.Commands.BukkitSpeakCommand.getIndex(s.charAt((i + 1))); } catch (java.lang.Exception e) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/104/buggy-version/src.net.but2002.minecraft.BukkitSpeak.Commands.BukkitSpeakCommand.java", "BodyUseAPI": ["java.lang.String.charAt(int)", "net.but2002.minecraft.BukkitSpeak.Commands.BukkitSpeakCommand.getIndex(char)"], "Fixed commit": "e335e8988756e13759b96e80575700f8c1dd3240", "Url": "https://api.github.com/repos/Firedroide/BukkitSpeak", "Date": "2012-04-18T19:35:29Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { c_status = webview.util.WebUtility.selectCookie(request.getCookies(), WebUtility.cookie_status).getValue(); } catch (java.lang.NullPointerException e) { c_status = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4534/buggy-version/GraoPara-BD2.src.main.java.webview.worker.SearchWorker.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getCookies()", "webview.util.WebUtility.selectCookie(request.getCookies(), WebUtility.cookie_status).getValue()", "webview.util.WebUtility.selectCookie(request.getCookies(),WebUtility.cookie_status)"], "Fixed commit": "11d0e8cff73fd972dc0ed131cd84c492760126ec", "Url": "https://api.github.com/repos/projeto-coruja/Projeto-Coruja", "Date": "2013-02-25T23:17:49Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { columnSizeMem.jumpTo((((txPartitionCount) - 2) * 16)); openPartition(prevTimestamp); setAppendPosition(prevTransientRowCount); (txPartitionCount)--; } catch (com.questdb.cairo.CairoException e) { closeColumns(false); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/399/buggy-version/core.src.main.java.com.questdb.cairo.TableWriter.java", "BodyUseAPI": ["com.questdb.cairo.TableWriter.setAppendPosition(long)", "com.questdb.cairo.VirtualMemory.jumpTo(int)", "com.questdb.cairo.TableWriter.openPartition(long)"], "Fixed commit": "c85cb6deaf0f6724fc6776fdcd9e400f02fb4f2a", "Url": "https://api.github.com/repos/bluestreak01/questdb", "Date": "2017-07-04T11:53:22Z"},
{"Line": "=>1117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { while ((engine.Main.tabbedPane.getTabCount()) > 1) { engine.Main.tabbedPane.removeTabAt(1); } } catch (java.lang.Exception e3) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/9089/buggy-version/engine.Main.java", "BodyUseAPI": ["javax.swing.JTabbedPane.getTabCount()", "javax.swing.JTabbedPane.removeTabAt(int)"], "Fixed commit": "80332ee02a2d12aae03e969b1ef08af5c6b1052d", "Url": "https://api.github.com/repos/marsahrakorpi/HTML-viewer-builder-and-editor", "Date": "2017-09-29T12:53:38Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { timer.block(); } catch (java.lang.InterruptedException e) { running = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4509/buggy-version/src.main.java.io.metacake.core.common.TimedLoopThread.java", "BodyUseAPI": ["io.metacake.core.common.MilliTimer.block()"], "Fixed commit": "31517af2181bae4c292c0175bdc1f7feae828ed9", "Url": "https://api.github.com/repos/metacake/core", "Date": "2013-11-12T01:52:05Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (imgProducer.hasImg(fileName)) { pic = imgProducer.getImg(fileName); }else { pic = imgProducer.saveImg(pictureURL, fileName, true); } } catch (java.lang.Exception e) { java.lang.System.err.println((\"Picture could not be read, error \" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/935/buggy-version/src.Index.java", "BodyUseAPI": ["LowResImgProducer.hasImg(java.lang.String)", "LowResImgProducer.getImg(java.lang.String)", "LowResImgProducer.saveImg(java.lang.String,java.lang.String,boolean)"], "Fixed commit": "9ad8ae833aff518abd420f1cd0b16e45805d63d3", "Url": "https://api.github.com/repos/IR14Group2/ImageSearch", "Date": "2014-05-12T14:56:43Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { lock.lock(); isBufferEmptyOccurred = false; } finally { lock.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7179/buggy-version/gobblin-core.src.main.java.gobblin.async.AsyncDataDispatcher.java", "BodyUseAPI": ["java.util.concurrent.locks.Lock.lock()"], "Fixed commit": "ee4b5f29df2ef862057897a4557d0ae17a719919", "Url": "https://api.github.com/repos/zxcware/gobblin", "Date": "2017-05-04T01:11:03Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { targetMode = org.bukkit.GameMode.valueOf(target.toUpperCase()); } catch (java.lang.IllegalArgumentException e) { try { targetMode = org.bukkit.GameMode.getByValue(java.lang.Integer.parseInt(target)); } catch (java.lang.NumberFormatException ex) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/352/buggy-version/src.main.java.net.glowstone.command.GameModeCommand.java", "BodyUseAPI": ["org.bukkit.GameMode.valueOf(java.lang.String)", "java.lang.String.toUpperCase()"], "Fixed commit": "9beb59132ded6b2f0819565bd9460597c2fe2e99", "Url": "https://api.github.com/repos/zml2008/Glowstone", "Date": "2011-10-02T21:10:55Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { cont = task.pulse(); } finally { if (!cont) it.remove(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/352/buggy-version/src.main.java.net.glowstone.scheduler.GlowScheduler.java", "BodyUseAPI": ["net.glowstone.scheduler.GlowTask.pulse()"], "Fixed commit": "9beb59132ded6b2f0819565bd9460597c2fe2e99", "Url": "https://api.github.com/repos/zml2008/Glowstone", "Date": "2011-10-02T21:10:55Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { getServer().getPluginManager().addPermission(p); } catch (java.lang.IllegalArgumentException e) { } finally { children.put(p.getName(), true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6492/buggy-version/src.main.java.net.robinjam.bukkit.keepitems.KeepItems.java", "BodyUseAPI": ["getServer().getPluginManager().addPermission(org.bukkit.permissions.Permission)", "getServer().getPluginManager()", "net.robinjam.bukkit.keepitems.KeepItems.getServer()"], "Fixed commit": "bebe231fa6ceec02c62466b60b173d1aac64baf9", "Url": "https://api.github.com/repos/MarkehMe/keep-items", "Date": "2014-02-19T11:46:37Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.tagsToAdd.add(new seedu.taskmanager.model.tag.Tag(tag)); } catch (seedu.taskmanager.model.tag.UniqueTagList.DuplicateTagException dte) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3879/buggy-version/src.main.java.seedu.taskmanager.logic.commands.EditCommand.java", "BodyUseAPI": ["seedu.taskmanager.model.tag.UniqueTagList.add(seedu.taskmanager.model.tag.Tag)"], "Fixed commit": "9c01932e0432b7561932a7ab60260fc6cb81eece", "Url": "https://api.github.com/repos/CS2103AUG2016-T14-C3/main", "Date": "2016-10-17T12:56:48Z"},
{"Line": "=>1790", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { expGen = new com.linkedin.drelephant.exceptions.ExceptionFinder(url, scheduler); flowException = expGen.getExceptions(); } catch (java.lang.RuntimeException e) { parent.add(\"workflow-exceptions\", new com.google.gson.JsonArray()); return status(500, \"Unexpected error occured\"); } catch (java.lang.Exception e) { parent.add(\"workflow-exceptions\", new com.google.gson.JsonArray()); return status(500, \"Unexpected error occured\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/6236/buggy-version/app.controllers.api.v1.Web.java", "BodyUseAPI": ["com.linkedin.drelephant.exceptions.ExceptionFinder.getExceptions()"], "Fixed commit": "a1f866abb29725613c388cec4fcf2c374d2cacea", "Url": "https://api.github.com/repos/nntnag17/dr-elephant-1", "Date": "2017-04-19T04:57:41Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { return new ru.fizteh.fivt.students.akhtyamovpavel.databaselibrary.DataBaseTableProvider(dir); } catch (java.lang.Exception e) { throw new java.lang.IllegalArgumentException(\"Bad database directory\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5490/buggy-version/src.ru.fizteh.fivt.students.akhtyamovpavel.databaselibrary.DataBaseTableProviderFactory.java", "BodyUseAPI": [], "Fixed commit": "69f7638d450622a0a7e9f4ce44bc956f6db931f2", "Url": "https://api.github.com/repos/dkomanov/fizteh-java-2014", "Date": "2014-11-10T19:09:35Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { factory = new ru.fizteh.fivt.students.akhtyamovpavel.databaselibrary.DataBaseTableProviderFactory(); shell = factory.create(java.nio.file.Paths.get(java.lang.System.getProperty(\"user.dir\")).resolve(java.lang.System.getProperty(\"fizteh.db.dir\")).toString()); } catch (java.lang.Exception e) { if ((args.length) == 0) { java.lang.System.err.println(e.getMessage()); java.lang.System.exit((-1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5490/buggy-version/src.ru.fizteh.fivt.students.akhtyamovpavel.databaselibrary.MultiFileMapMain.java", "BodyUseAPI": ["java.lang.System.getProperty(java.lang.String)", "ru.fizteh.fivt.students.akhtyamovpavel.databaselibrary.DataBaseTableProviderFactory.create(java.lang.String)", "java.nio.file.Paths.get(java.lang.String)", "java.nio.file.Path.toString()", "java.lang.System.getProperty(java.lang.String)", "java.nio.file.Path.resolve(java.lang.String)"], "Fixed commit": "69f7638d450622a0a7e9f4ce44bc956f6db931f2", "Url": "https://api.github.com/repos/dkomanov/fizteh-java-2014", "Date": "2014-11-10T19:09:35Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { unregisterReceiver(b); } catch (java.lang.IllegalArgumentException iae) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/9160/buggy-version/src.org.witness.informacam.informa.InformaService.java", "BodyUseAPI": ["org.witness.informacam.informa.InformaService.unregisterReceiver(android.content.BroadcastReceiver)"], "Fixed commit": "31051b006ed0b54b370058d6746b2e100b70cccd", "Url": "https://api.github.com/repos/n8fr8/InformaCam", "Date": "2013-11-01T20:33:52Z"},
{"Line": "=>2479", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { location = railo.commons.net.HTTPUtil.toURL(location).toString(); } catch (java.lang.Throwable e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/2264/buggy-version/railo-java.railo-core.src.railo.runtime.config.ConfigWebAdmin.java", "BodyUseAPI": ["railo.commons.net.HTTPUtil.toURL(java.lang.String)", "railo.commons.net.HTTPUtil.toURL(location).toString()"], "Fixed commit": "42254f945b2951be1b3fcdd584ac329ff5c360cf", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2011-02-21T14:07:28Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { encodedFilePath = java.net.URLEncoder.encode(filePath, \"utf-8\"); } catch (java.io.UnsupportedEncodingException e) { encodedFilePath = filePath; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/8548/buggy-version/src.com.owncloud.android.lib.resources.files.ToggleFavoriteOperation.java", "BodyUseAPI": ["java.net.URLEncoder.encode(java.lang.String,java.lang.String)"], "Fixed commit": "6b509f0fc777e7dce2ce410324333c241bdb7d11", "Url": "https://api.github.com/repos/nextcloud/android-library", "Date": "2017-03-19T21:22:30Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(4000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3738/buggy-version/src.ch.imedias.rsccfx.model.VncViewerHandler.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "8870f97c2b09b212d0a6c26e1c8a38502ef74d2a", "Url": "https://api.github.com/repos/Kennox/rscc", "Date": "2017-05-16T09:18:50Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { process.waitFor(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3738/buggy-version/src.ch.imedias.rsccfx.model.VncViewerHandler.java", "BodyUseAPI": ["java.lang.Process.waitFor()"], "Fixed commit": "8870f97c2b09b212d0a6c26e1c8a38502ef74d2a", "Url": "https://api.github.com/repos/Kennox/rscc", "Date": "2017-05-16T09:18:50Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { factionsHandler = new net.dmulloy2.autocraft.integration.FactionsHandler(this); } catch (java.lang.Throwable ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5330/buggy-version/src.main.java.net.dmulloy2.autocraft.AutoCraft.java", "BodyUseAPI": [], "Fixed commit": "4b12be27e36f0690b03698e9d69f1b95d3378674", "Url": "https://api.github.com/repos/MineSworn/AutoCraft", "Date": "2014-11-15T02:04:40Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.amaze.quit.app.SetupBrandAmount.sigarettenList[(i - 1)] = db.getSigaret(i).getMerk(); com.amaze.quit.app.SetupBrandAmount.sigaretten[(i - 1)] = db.getSigaret(i); } catch (java.lang.Exception e) { com.amaze.quit.app.SetupBrandAmount.sigarettenList[(i - 1)] = db.getSigaret(i).getMerk(); com.amaze.quit.app.SetupBrandAmount.sigaretten[(i - 1)] = db.getSigaret(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5711/buggy-version/app.src.main.java.com.amaze.quit.app.SetupBrandAmount.java", "BodyUseAPI": ["com.amaze.quit.app.DatabaseHandler.getSigaret(int)", "db.getSigaret(i).getMerk()", "com.amaze.quit.app.DatabaseHandler.getSigaret(int)"], "Fixed commit": "b38b50486f89e19c457110fc564136190fc00e05", "Url": "https://api.github.com/repos/A-Maze/Quit", "Date": "2014-06-22T14:01:23Z"},
{"Line": "=>427", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { result = temp1.subSequence(19, ((temp1.length()) - 1)); } catch (java.lang.StringIndexOutOfBoundsException ea) { result = temp1; } catch (java.lang.Exception ea) { result = temp1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/7682/buggy-version/src.com.casin.transfer2.MainFrame.java", "BodyUseAPI": ["java.lang.String.subSequence(int,int)", "java.lang.String.length()"], "Fixed commit": "68a13fab2aee5412efb78697c921ce92c802857b", "Url": "https://api.github.com/repos/zhaojinxin409/Transfer", "Date": "2015-07-23T01:12:58Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ps.executeUpdate(); } catch (java.lang.Exception exc) { pl.edu.uwm.wmii.visearch.representation.Representation.log.debug((\"Duplicated ImageRepresentations for \" + docId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3605/buggy-version/projects.representation.src.pl.edu.uwm.wmii.visearch.representation.Representation.java", "BodyUseAPI": ["java.sql.PreparedStatement.executeUpdate()"], "Fixed commit": "d7dbca46483478c6dce86351875ce7e580bc81d5", "Url": "https://api.github.com/repos/pgorecki/visearch", "Date": "2014-04-16T10:47:06Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ps.executeUpdate(); } catch (java.lang.Exception exc) { pl.edu.uwm.wmii.visearch.representation.Representation.log.debug((\"Duplicated IFS for \" + docId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3605/buggy-version/projects.representation.src.pl.edu.uwm.wmii.visearch.representation.Representation.java", "BodyUseAPI": ["java.sql.PreparedStatement.executeUpdate()"], "Fixed commit": "d7dbca46483478c6dce86351875ce7e580bc81d5", "Url": "https://api.github.com/repos/pgorecki/visearch", "Date": "2014-04-16T10:47:06Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { groupChat = skype.createGroupChat(users.toArray(new com.samczsun.skype4j.user.Contact[users.size()])); } catch (com.samczsun.skype4j.exceptions.ConnectionException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3072/buggy-version/src.main.java.com.birthday.bot.skype.bot.BirthdayChatCreator.java", "BodyUseAPI": ["java.util.List<com.birthday.bot.skype.contact.ContactWithBDay>.size()", "java.util.List<com.birthday.bot.skype.contact.ContactWithBDay>.toArray(com.samczsun.skype4j.user.Contact[])", "com.samczsun.skype4j.Skype.createGroupChat(users.toArray(new com.samczsun.skype4j.user.Contact[users.size()]))"], "Fixed commit": "689e038dce9102343f2c378e16bdf212f694d55a", "Url": "https://api.github.com/repos/vsevolodk/birthday.bot", "Date": "2016-03-13T23:12:38Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Class<?> clazz = net.pl3x.bukkit.chatapi.api.ReflectionUtils.getClassForName((((\"net.minecraft.server.\" + (org.bukkit.Bukkit.getServer().getClass().getPackage().getName().split(\"\\\\.\")[3])) + \".\") + name)); if (clazz != null) { return clazz; } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/5297/buggy-version/API.src.main.java.net.pl3x.bukkit.chatapi.api.ReflectionUtils.java", "BodyUseAPI": ["org.bukkit.Bukkit.getServer().getClass().getPackage().getName().split(java.lang.String)", "org.bukkit.Bukkit.getServer()", "org.bukkit.Bukkit.getServer().getClass().getPackage().getName()", "org.bukkit.Bukkit.getServer().getClass()", "net.pl3x.bukkit.chatapi.api.ReflectionUtils.getClassForName((((\"net.minecraft.server.\" + (org.bukkit.Bukkit.getServer().getClass().getPackage().getName().split(\"\\\\.\")[3])) + \".\") + name))", "org.bukkit.Bukkit.getServer().getClass().getPackage()"], "Fixed commit": "2a3315b65773b7e75361abedeafdc7bc0842c143", "Url": "https://api.github.com/repos/Ben12345rocks/ChatComponentAPI", "Date": "2017-07-23T19:54:09Z"},
{"Line": "=>1663", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.util.Scanner scanner = new java.util.Scanner(new java.net.URL(java.lang.String.format(urlString, params)).openStream(), \"UTF-8\"); return scanner.useDelimiter(\"\\\\A\").next(); } catch (java.io.FileNotFoundException fnfe) { return \"{}\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/83/buggy-version/sofbus24.src.main.java.bg.znestorov.sofbus24.utils.Utils.java", "BodyUseAPI": ["java.util.Scanner.useDelimiter(java.lang.String)", "java.net.URL.openStream()", "java.lang.String.format(java.lang.String,java.lang.Object[])", "java.util.Scanner.next()"], "Fixed commit": "1b52d6a138c249f2d4bba0742d91cfcb642d5142", "Url": "https://api.github.com/repos/zdravko-nestorov/Sofbus-24-GitHub", "Date": "2017-11-22T23:12:16Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { int trackingPunkt = trackingPunkte.pop(); while ((spielZuege.size()) > trackingPunkt) { nimmSpielzugZurueck(); } } catch (java.util.EmptyStackException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/3255/buggy-version/projekt.src.main.java.severeLobster.backend.spiel.SternenSpielApplicationBackend.java", "BodyUseAPI": ["severeLobster.backend.spiel.SternenSpielApplicationBackend.nimmSpielzugZurueck()", "java.util.Stack<java.lang.Integer>.pop()", "java.util.Stack<severeLobster.backend.command.Aktion>.size()"], "Fixed commit": "d2cc5848415fca16b5a693a4cc0e9981c32ded4a", "Url": "https://api.github.com/repos/kamisori/SevereLobster", "Date": "2012-11-01T14:54:10Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mMediaPlayer.setPlayWhenReady((!paused)); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/4412/buggy-version/app.src.main.java.io.github.powerinside.syncplay.MediaService.java", "BodyUseAPI": ["com.google.android.exoplayer2.SimpleExoPlayer.setPlayWhenReady(boolean)"], "Fixed commit": "805038a3c2152b6d63eeb3e6ac1983c49690e42c", "Url": "https://api.github.com/repos/mo3rfan/syncplayer", "Date": "2017-10-02T08:09:07Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(500); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/442/buggy-version/app.src.main.java.com.dfrobot.angelo.blunobasicdemo.Stimulus.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "5d9685321dff8aabbb4e27e3c017a231dd5bd33d", "Url": "https://api.github.com/repos/simonperrault/movespaceexperiment", "Date": "2016-08-29T11:23:27Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { accountSharedService.findOne(username); } catch (org.terasoluna.gfw.common.exception.ResourceNotFoundException e) { userExists = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V111/449/buggy-version/src.main.java.com.example.security.domain.service.account.AccountAuthenticationFailureBadCredentialsEventListener.java", "BodyUseAPI": ["com.example.security.domain.service.account.AccountSharedService.findOne(java.lang.String)"], "Fixed commit": "059ca305250591e57eb6cd7a2e11c17412252b2e", "Url": "https://api.github.com/repos/tiwatsuka/secure-loginform", "Date": "2015-08-04T05:00:29Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { choice = scan.nextInt(); if ((choice <= 0) || (choice > (choices.length))) java.lang.System.out.println(\"Impossible choice\"); else return choices[(choice - 1)]; } catch (java.util.InputMismatchException ex) { java.lang.System.out.println(\"Impossible choice\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3384/buggy-version/HotelSystem.src.SoftwareModel.Presentation.impl.FrameImpl.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.util.Scanner.nextInt()"], "Fixed commit": "0e5344e2237a68e4b3638f05d553f4a68c3f9f6d", "Url": "https://api.github.com/repos/nedwed123/Blue_Collar", "Date": "2016-01-06T13:46:03Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ain.extractFrom(apkFile); } catch (java.io.IOException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2893/buggy-version/src.main.java.de.onyxbits.raccoon.gplay.AppDownloadWorker.java", "BodyUseAPI": ["de.onyxbits.raccoon.vfs.AppIconNode.extractFrom(java.io.File)"], "Fixed commit": "6e699ea890f56bdef2f124ac094dd97c87d6fcff", "Url": "https://api.github.com/repos/onyxbits/raccoon4", "Date": "2017-02-27T13:13:31Z"},
{"Line": "=>2345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { m_topologyCheckFuture.get(); } catch (java.lang.Throwable t) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6102/buggy-version/src.frontend.org.voltdb.ClientInterface.java", "BodyUseAPI": ["java.util.concurrent.ScheduledFuture<?>.get()"], "Fixed commit": "c43f28eedbcaedd21b3c497a24a04b3ca1790784", "Url": "https://api.github.com/repos/VoltDB/voltdb", "Date": "2014-02-13T20:15:03Z"},
{"Line": "=>2341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { m_deadConnectionFuture.get(); } catch (java.lang.Throwable t) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6102/buggy-version/src.frontend.org.voltdb.ClientInterface.java", "BodyUseAPI": ["java.util.concurrent.ScheduledFuture<?>.get()"], "Fixed commit": "c43f28eedbcaedd21b3c497a24a04b3ca1790784", "Url": "https://api.github.com/repos/VoltDB/voltdb", "Date": "2014-02-13T20:15:03Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return java.lang.Integer.parseInt(e.getText().toString()); } catch (java.lang.Exception ex) { throw new java.lang.Exception(\"Enter all fields...\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/981/buggy-version/app.src.main.java.com.gad.stella.MainActivity.java", "BodyUseAPI": ["android.widget.EditText.getText()", "e.getText().toString()", "java.lang.Integer.parseInt(e.getText().toString())"], "Fixed commit": "4307df96bf65a33122b15f9fc95d1429a1b0c898", "Url": "https://api.github.com/repos/dodders/Stella", "Date": "2015-10-24T23:42:22Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { listMember.setRowSelectionInterval(0, 0); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2654/buggy-version/AGCOOPSys.src.agcoopsys.viewMember.java", "BodyUseAPI": ["javax.swing.JTable.setRowSelectionInterval(int,int)"], "Fixed commit": "4b4debf258c849d8bb9bbd4e1384b7211d98e4bd", "Url": "https://api.github.com/repos/Velvette/AGCoopSys", "Date": "2014-05-25T09:30:13Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { input = java.lang.Integer.parseInt(text); } catch (java.lang.NumberFormatException e) { input = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3750/buggy-version/src.Player.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "ca84612eae9c0e885da7ab270bf89d1192890043", "Url": "https://api.github.com/repos/nathanielwarner/blackjack", "Date": "2015-06-10T02:30:07Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { shoppingController.setTypeOfUser(getArguments().getBoolean(\"clientType\")); } catch (java.lang.NullPointerException exception) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6438/buggy-version/AndroidProject.Gasqueue.app.src.main.java.pekl.gasqueue.com.gasqueue.Activitiy.Fragments.MenuCategoryFragment.java", "BodyUseAPI": ["getArguments().getBoolean(java.lang.String)", "pekl.gasqueue.com.gasqueue.control.ShoppingController.setTypeOfUser(getArguments().getBoolean(\"clientType\"))", "pekl.gasqueue.com.gasqueue.Activitiy.Fragments.MenuCategoryFragment.getArguments()"], "Fixed commit": "36d87edb9ebddb8e48165ff302a6bb0e6144c39e", "Url": "https://api.github.com/repos/KevinCT/projectGamma", "Date": "2016-05-25T19:09:03Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { format = new java.text.SimpleDateFormat(net.sourceforge.cruisecontrol.util.CVSDateUtil.CVS_DATE_PATTERN); format.setTimeZone(net.sourceforge.cruisecontrol.util.CVSDateUtil.UTC); returnDate = format.parse(text); } catch (java.text.ParseException e) { format = new java.text.SimpleDateFormat(net.sourceforge.cruisecontrol.util.CVSDateUtil.NEW_CVS_DATE_PATTERN); format.setTimeZone(net.sourceforge.cruisecontrol.util.CVSDateUtil.UTC); returnDate = format.parse(text); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1118/buggy-version/main.src.net.sourceforge.cruisecontrol.util.CVSDateUtil.java", "BodyUseAPI": ["java.text.DateFormat.parse(java.lang.String)", "java.text.DateFormat.setTimeZone(java.util.TimeZone)"], "Fixed commit": "cbdc6f29f4d79e33cac7f73d7369c15c2f6112e4", "Url": "https://api.github.com/repos/sl4mmy/cruisecontrol", "Date": "2007-06-08T12:30:24Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { teamMemberRepository.save(teammember); com.competition.service.TeamMemberService.LOG.info(\"Teammember ({}) was saved succesfully.\", teammember.fullName()); } catch (java.lang.Exception e) { com.competition.service.TeamMemberService.LOG.error(\"Teammember ({}) was not saved succesfully. Cause: {}. Errormessage: {}\", teammember.fullName(), e.getCause(), e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3699/buggy-version/src.main.java.com.competition.service.TeamMemberService.java", "BodyUseAPI": ["com.competition.model.Teammember.fullName()", "org.slf4j.Logger.info(java.lang.String,teammember.fullName())", "com.competition.repository.TeamMemberRepository.save(com.competition.model.Teammember)"], "Fixed commit": "8cbe7e3bc2f89cf5c02bc7cf4e5b365d9498fec0", "Url": "https://api.github.com/repos/JansenME/competition", "Date": "2017-12-25T22:02:43Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { webSocketDispatcher.fireCloseEvent(session); session.close(); keepAliveSessionList.remove(i); i--; } catch (java.lang.Exception e) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8286/buggy-version/src.main.java.org.voovan.http.server.WebServerHandler.java", "BodyUseAPI": ["org.voovan.network.IoSession.close()", "org.voovan.http.server.WebSocketDispatcher.fireCloseEvent(org.voovan.network.IoSession)", "java.util.List<org.voovan.network.IoSession>.remove(int)"], "Fixed commit": "009577c919daad1319420861436924ae95853024", "Url": "https://api.github.com/repos/helyho/Voovan", "Date": "2017-05-31T05:28:42Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { rowAfter = com.health.gui.input.FileListing.fileListingRows.get((i + 1)); } catch (java.lang.IndexOutOfBoundsException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6382/buggy-version/health.src.main.java.com.health.gui.input.FileListing.java", "BodyUseAPI": ["java.util.ArrayList<com.health.gui.input.FileListingRow>.get(int)"], "Fixed commit": "750193084d19a879484820a70e45848f1b543129", "Url": "https://api.github.com/repos/adamIqbal/Health", "Date": "2015-06-24T09:55:43Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { rowBefore = com.health.gui.input.FileListing.fileListingRows.get((i - 1)); } catch (java.lang.IndexOutOfBoundsException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6382/buggy-version/health.src.main.java.com.health.gui.input.FileListing.java", "BodyUseAPI": ["java.util.ArrayList<com.health.gui.input.FileListingRow>.get(int)"], "Fixed commit": "750193084d19a879484820a70e45848f1b543129", "Url": "https://api.github.com/repos/adamIqbal/Health", "Date": "2015-06-24T09:55:43Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { lock.writeLock().lock(); queryResultList.add(qr); } finally { lock.writeLock().unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7363/buggy-version/client.src.main.java.org.apache.rocketmq.client.impl.MQAdminImpl.java", "BodyUseAPI": ["java.util.List<org.apache.rocketmq.client.QueryResult>.add(org.apache.rocketmq.client.QueryResult)", "java.util.concurrent.locks.Lock.lock()", "java.util.concurrent.locks.ReadWriteLock.writeLock()"], "Fixed commit": "b421d48c476e74a8c7bb8129979df1dc0cb5a5a5", "Url": "https://api.github.com/repos/apache/rocketmq", "Date": "2017-01-04T07:20:29Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { unregisterReceiver(receiver); } catch (java.lang.Exception e) { android.util.Log.e(\"Main Activity\", (\"Could not unregister register \" + e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1126/buggy-version/app.src.main.java.name.heqian.cs528.googlefit.MainActivity.java", "BodyUseAPI": ["name.heqian.cs528.googlefit.MainActivity.unregisterReceiver(name.heqian.cs528.googlefit.MainActivity.ActivityReceiver)"], "Fixed commit": "1bc2736a6c195b8a2c680d71e484c739ae228276", "Url": "https://api.github.com/repos/ginagr/GoogleFit", "Date": "2017-02-10T18:49:19Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(1000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2814/buggy-version/Traffic.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "0e60ee65d927dd7f91d876193b4ca9396e7fd784", "Url": "https://api.github.com/repos/nikolay-eremeev/Traffic", "Date": "2017-10-27T18:03:48Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.smyc.dilotinotebook.GameEnv.end = java.lang.Integer.parseInt(getFirstLine(\"endnum.txt\")); } catch (java.lang.NumberFormatException e1) { e1.printStackTrace(); } catch (java.io.IOException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3002/buggy-version/src.com.smyc.dilotinotebook.GameEnv.java", "BodyUseAPI": ["com.smyc.dilotinotebook.GameEnv.5.getFirstLine(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "2e3b940ba5e33e68588586342c2fc5efd89ed6ec", "Url": "https://api.github.com/repos/skaftanis/DilotiNotebook-Android", "Date": "2014-09-01T10:35:22Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.json.JSONArray jArray = jObj.getJSONArray(\"properties\"); if (jArray != null) { for (int i = 0; i < (jArray.length()); i++) { edge.addProperty(edu.cmu.tetrad.util.JsonUtils.parseJSONObjectToEdgeProperty(jArray.getString(i))); } } } catch (org.json.JSONException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6143/buggy-version/tetrad-lib.src.main.java.edu.cmu.tetrad.util.JsonUtils.java", "BodyUseAPI": ["org.json.JSONArray.length()", "edu.cmu.tetrad.util.JsonUtils.parseJSONObjectToEdgeProperty(jArray.getString(i))", "edu.cmu.tetrad.graph.Edge.addProperty(Edge.Property)", "org.json.JSONObject.getJSONArray(java.lang.String)", "org.json.JSONArray.getString(int)"], "Fixed commit": "072fa03ff00c212dd3a134e2c224f23363fe8878", "Url": "https://api.github.com/repos/amurrayw/tetrad", "Date": "2017-06-17T16:17:19Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.currentThread().sleep(2000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5866/buggy-version/EyeDroid.src.dk.itu.eyedroid.io.calibration.NETCalibrationControllerGlass.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)", "java.lang.Thread.currentThread()"], "Fixed commit": "f15be4cec5da7c61f58ed860f20cd2efc6f0a154", "Url": "https://api.github.com/repos/iocentos/EyeDroid", "Date": "2015-01-30T16:02:45Z"},
{"Line": "=>560", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { return ((int) (((hr) - (hd)) - (size))); } finally { lock.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1274/buggy-version/src.org.jgroups.util.Table.java", "BodyUseAPI": [], "Fixed commit": "08f4f35056f9781b54b62d8e32f60c36ccd3ef19", "Url": "https://api.github.com/repos/danberindei/JGroups", "Date": "2014-08-26T11:19:25Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { stationManager = new th.ac.kmitl.it.nextstop.Model.StationManager(mCurrentLocation.getLatitude(), mCurrentLocation.getLongitude()); } catch (java.lang.Exception e) { stationManager = new th.ac.kmitl.it.nextstop.Model.StationManager(0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/86/buggy-version/NextStop.app.src.main.java.th.ac.kmitl.it.nextstop.Activity.TravelActivity.java", "BodyUseAPI": ["android.location.Location.getLongitude()", "android.location.Location.getLatitude()"], "Fixed commit": "ee159cd70c68dd45b980c2d7ebc05536351bc141", "Url": "https://api.github.com/repos/The9uide/NextStopAndroid", "Date": "2017-05-25T19:47:24Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { resolve = raplaFacade.resolve(new org.rapla.entities.storage.ReferenceInfo(id, clazz)); } catch (org.rapla.entities.EntityNotFoundException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1697/buggy-version/src.main.java.org.rapla.client.internal.edit.EditActivity.java", "BodyUseAPI": ["org.rapla.facade.RaplaFacade.resolve(org.rapla.entities.storage.ReferenceInfo)"], "Fixed commit": "850395565758c69a6b175e381a826708e27cccfa", "Url": "https://api.github.com/repos/rapla/rapla", "Date": "2016-04-12T12:25:43Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { com.ess.jloader.loader.PackClassLoader.Unpacker unpacker = new com.ess.jloader.loader.PackClassLoader.Unpacker(in, defIn, jvmClassName); return unpacker.unpack(); } finally { inflater.end(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/9031/buggy-version/loader.src.main.java.com.ess.jloader.loader.PackClassLoader.java", "BodyUseAPI": ["com.ess.jloader.loader.PackClassLoader.Unpacker.unpack()"], "Fixed commit": "ef156e767ed373e83657a9489f22e16b48435507", "Url": "https://api.github.com/repos/sevdokimov/jloader", "Date": "2014-08-26T13:49:57Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return mdrService.findCodeList(key); } catch (eu.europa.ec.fisheries.uvms.sales.model.exception.SalesNonBlockingException e) { log.error((\"Couldn't load MDR list with key \" + (key.getInternalName())), e); return com.google.common.collect.Lists.newArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2470/buggy-version/service.src.main.java.eu.europa.ec.fisheries.uvms.sales.service.cache.ReferenceDataCache.java", "BodyUseAPI": ["eu.europa.ec.fisheries.uvms.sales.service.MDRService.findCodeList(eu.europa.ec.fisheries.uvms.sales.service.constants.MDRCodeListKey)"], "Fixed commit": "d0655cacdcac46b9142011af836013e65e2b75d3", "Url": "https://api.github.com/repos/UnionVMS/UVMS-SalesModule-APP", "Date": "2017-09-18T09:06:58Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { isr.close(); } catch (java.lang.Throwable t) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4601/buggy-version/src.com.jpii.navalbattle.pavo.io.PavoClient.java", "BodyUseAPI": ["java.io.InputStreamReader.close()"], "Fixed commit": "9cdf7ed616f2d167a2fd7976be65f4f8a31cf612", "Url": "https://api.github.com/repos/JPII/NavalBattle", "Date": "2013-03-06T23:23:08Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { is.close(); } catch (java.lang.Throwable t) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4601/buggy-version/src.com.jpii.navalbattle.pavo.io.PavoClient.java", "BodyUseAPI": ["java.io.InputStream.close()"], "Fixed commit": "9cdf7ed616f2d167a2fd7976be65f4f8a31cf612", "Url": "https://api.github.com/repos/JPII/NavalBattle", "Date": "2013-03-06T23:23:08Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { br.close(); } catch (java.lang.Throwable t) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4601/buggy-version/src.com.jpii.navalbattle.pavo.io.PavoClient.java", "BodyUseAPI": ["java.io.BufferedReader.close()"], "Fixed commit": "9cdf7ed616f2d167a2fd7976be65f4f8a31cf612", "Url": "https://api.github.com/repos/JPII/NavalBattle", "Date": "2013-03-06T23:23:08Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (!(javax.swing.SwingUtilities.isEventDispatchThread())) { javax.swing.SwingUtilities.invokeAndWait(r); }else { r.run(); } } catch (java.lang.InterruptedException | java.lang.reflect.InvocationTargetException ex) { javax.swing.SwingUtilities.invokeLater(r); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6841/buggy-version/Tracking.src.UI.ErrorMessage.java", "BodyUseAPI": ["java.lang.Runnable.run()", "javax.swing.SwingUtilities.invokeAndWait(java.lang.Runnable)", "javax.swing.SwingUtilities.isEventDispatchThread()"], "Fixed commit": "dfc3a068fdc3053ec4bd496c5c9af24c871ac858", "Url": "https://api.github.com/repos/Ninespin/Tracking-AI", "Date": "2015-06-24T14:18:09Z"},
{"Line": "=>533", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { o = org.yamcs.studio.core.ui.utils.Prefs.getObject(prefs, \"indexLines\"); } catch (java.lang.ClassNotFoundException e) { org.yamcs.studio.ui.archive.IndexBox.log.warning(\"Class not found while loading index lines from preferences. Assume not set\"); o = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4355/buggy-version/yamcs-studio-tycho.org.yamcs.studio.ui.archive.src.main.java.org.yamcs.studio.ui.archive.IndexBox.java", "BodyUseAPI": ["org.yamcs.studio.core.ui.utils.Prefs.getObject(java.util.prefs.Preferences,java.lang.String)"], "Fixed commit": "afef471e5ca31297793102d495433b27e96349c1", "Url": "https://api.github.com/repos/yamcs/yamcs-studio", "Date": "2015-12-05T08:21:27Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { range = ((org.yamcs.studio.core.TimeInterval) (org.yamcs.studio.core.ui.utils.Prefs.getObject(prefs, \"archiveRange\"))); } catch (java.lang.ClassNotFoundException e) { range = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4355/buggy-version/yamcs-studio-tycho.org.yamcs.studio.core.ui.src.main.java.org.yamcs.studio.core.ui.utils.Prefs.java", "BodyUseAPI": ["org.yamcs.studio.core.ui.utils.Prefs.getObject(java.util.prefs.Preferences,java.lang.String)"], "Fixed commit": "afef471e5ca31297793102d495433b27e96349c1", "Url": "https://api.github.com/repos/yamcs/yamcs-studio", "Date": "2015-12-05T08:21:27Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.twitter.sdk.android.core.TwitterCore.getInstance().getApiClient().getStatusesService().update(socialPostValue.prepareTwPost(), null, null, null, null, null, null, null, new com.twitter.sdk.android.core.Callback<com.twitter.sdk.android.core.models.Tweet>() { @java.lang.Override public void success(com.twitter.sdk.android.core.Result<com.twitter.sdk.android.core.models.Tweet> result) { android.util.Log.d(\"TW_SUCCESS\", result.data.text); ru.mos.polls.social.controller.SocialUIController.showPostingResult(baseActivity, socialPostValue, null); } @java.lang.Override public void failure(com.twitter.sdk.android.core.TwitterException e) { android.util.Log.e(POSTING_ERROR, e.getMessage()); ru.mos.polls.social.controller.SocialUIController.showPostingResult(baseActivity, socialPostValue, e); } }); } catch (java.lang.IllegalStateException e) { android.util.Log.e(POSTING_ERROR, e.getMessage()); ru.mos.polls.social.controller.SocialUIController.clearAndUnbindSocial(baseActivity, SocialManager.SOCIAL_ID_TW); android.support.v7.app.AlertDialog.Builder builder = new android.support.v7.app.AlertDialog.Builder(baseActivity); builder.setMessage(R.string.error_expired_access_token).setPositiveButton(R.string.ag_ok, null).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5148/buggy-version/app.src.main.java.ru.mos.polls.social.controller.SocialUIController.java", "BodyUseAPI": ["com.twitter.sdk.android.core.TwitterCore.getInstance().getApiClient().getStatusesService().update(socialPostValue.prepareTwPost(),<nulltype>,<nulltype>,<nulltype>,<nulltype>,<nulltype>,<nulltype>,<nulltype>,com.twitter.sdk.android.core.Callback<com.twitter.sdk.android.core.models.Tweet>)", "ru.mos.polls.social.controller.SocialUIController.showPostingResult(ru.mos.elk.BaseActivity,ru.mos.polls.social.model.SocialPostValue,<nulltype>)", "com.twitter.sdk.android.core.TwitterCore.getInstance().getApiClient().getStatusesService()", "android.util.Log.d(java.lang.String,result.data.text)", "ru.mos.polls.social.controller.SocialUIController.showPostingResult(ru.mos.elk.BaseActivity,ru.mos.polls.social.model.SocialPostValue,com.twitter.sdk.android.core.TwitterException)", "com.twitter.sdk.android.core.TwitterException.getMessage()", "ru.mos.polls.social.model.SocialPostValue.prepareTwPost()", "com.twitter.sdk.android.core.TwitterCore.getInstance().getApiClient()", "android.util.Log.e(POSTING_ERROR,e.getMessage())", "com.twitter.sdk.android.core.TwitterCore.getInstance()"], "Fixed commit": "4d2f0ae428aabf510146e70a014aad4a25123ea0", "Url": "https://api.github.com/repos/active-citizen/android.java", "Date": "2016-09-09T09:04:53Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return new database.ProductBatch(rs.getInt(1), rs.getInt(2), rs.getString(3), rs.getString(4), rs.getInt(5)); } catch (java.sql.SQLException e) { return new database.ProductBatch(rs.getInt(1), rs.getInt(2), rs.getString(3), null, rs.getInt(5)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6032/buggy-version/16_CDIOFinal.src.database.DatabaseAccess.java", "BodyUseAPI": ["java.sql.ResultSet.getString(int)", "java.sql.ResultSet.getInt(int)", "java.sql.ResultSet.getInt(int)", "java.sql.ResultSet.getString(int)", "java.sql.ResultSet.getInt(int)"], "Fixed commit": "db712e8ec138e3a747b1c276574b91c7e2cb6157", "Url": "https://api.github.com/repos/emilhein/16_CDIOFinal", "Date": "2013-06-18T09:35:03Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { list.add(new database.ProductBatch(rs.getInt(1), rs.getInt(2), rs.getString(3), rs.getString(4), rs.getInt(5))); } catch (java.sql.SQLException e) { list.add(new database.ProductBatch(rs.getInt(1), rs.getInt(2), rs.getString(3), null, rs.getInt(5))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6032/buggy-version/16_CDIOFinal.src.database.DatabaseAccess.java", "BodyUseAPI": ["java.util.List<database.ProductBatch>.add(database.ProductBatch)", "java.sql.ResultSet.getString(int)", "java.sql.ResultSet.getInt(int)", "java.sql.ResultSet.getString(int)", "java.sql.ResultSet.getInt(int)", "java.sql.ResultSet.getInt(int)"], "Fixed commit": "db712e8ec138e3a747b1c276574b91c7e2cb6157", "Url": "https://api.github.com/repos/emilhein/16_CDIOFinal", "Date": "2013-06-18T09:35:03Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { list.add(new database.ProductBatch(rs.getInt(1), rs.getInt(2), rs.getString(3), rs.getString(4), rs.getInt(5))); } catch (java.sql.SQLException e) { list.add(new database.ProductBatch(rs.getInt(1), rs.getInt(2), rs.getString(3), null, rs.getInt(5))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/6032/buggy-version/16_CDIOFinal.src.database.DatabaseAccess.java", "BodyUseAPI": ["java.util.List<database.ProductBatch>.add(database.ProductBatch)", "java.sql.ResultSet.getInt(int)", "java.sql.ResultSet.getString(int)", "java.sql.ResultSet.getInt(int)", "java.sql.ResultSet.getInt(int)", "java.sql.ResultSet.getString(int)"], "Fixed commit": "db712e8ec138e3a747b1c276574b91c7e2cb6157", "Url": "https://api.github.com/repos/emilhein/16_CDIOFinal", "Date": "2013-06-18T09:35:03Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { lock = new java.util.concurrent.Semaphore(1); lock.acquire(); } catch (java.lang.InterruptedException e) { throw new java.lang.IllegalStateException(\"Could not acquire a lock we create right above?\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/231/buggy-version/src.main.java.io.arivera.oss.embedded.rabbitmq.PatternFinderOutputStream.java", "BodyUseAPI": ["java.util.concurrent.Semaphore.acquire()"], "Fixed commit": "3e467d7a9b3424e1fa66eefe5c78bb5af8546764", "Url": "https://api.github.com/repos/AlejandroRivera/embedded-rabbitmq", "Date": "2016-08-15T10:08:38Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { future.get(); } catch (java.util.concurrent.ExecutionException e) { java.lang.Throwable cause = e.getCause(); cause.printStackTrace(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3881/buggy-version/Etyllica.src.br.com.etyllica.context.load.ApplicationLoader.java", "BodyUseAPI": ["java.util.concurrent.Future<?>.get()"], "Fixed commit": "b9f64178400f025d3db42d316069fa03b15a2363", "Url": "https://api.github.com/repos/yuripourre/etyllica", "Date": "2014-03-28T00:06:11Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { project.findMember(\".ceylon/config\").refreshLocal(IResource.DEPTH_ONE, new org.eclipse.core.runtime.NullProgressMonitor()); } catch (org.eclipse.core.runtime.CoreException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/8579/buggy-version/plugins.com.redhat.ceylon.eclipse.ui.src.com.redhat.ceylon.eclipse.core.builder.CeylonProjectConfig.java", "BodyUseAPI": ["project.findMember(\".ceylon/config\").refreshLocal(IResource.DEPTH_ONE,org.eclipse.core.runtime.NullProgressMonitor)", "org.eclipse.core.resources.IProject.findMember(java.lang.String)"], "Fixed commit": "d15a8c76662efbf73704794934a1f604d43df8de", "Url": "https://api.github.com/repos/ceylon/ceylon-ide-eclipse", "Date": "2014-02-20T21:25:40Z"},
{"Line": "=>662", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { maxCacheSize = dataInputStream.readLong(); } catch (java.io.IOException ioe) { throw com.orientechnologies.common.exception.OException.wrapException(new com.orientechnologies.orient.core.exception.OLoadCacheStateException(\"Can not restore state of cache from file\"), ioe); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4898/buggy-version/core.src.main.java.com.orientechnologies.orient.core.storage.cache.local.twoq.O2QCache.java", "BodyUseAPI": ["java.io.DataInputStream.readLong()"], "Fixed commit": "167a0cd12e0d2add4272c3e332c43111bff7223b", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2017-08-23T14:14:36Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { postViewHolder.setTimestamp(android.text.format.DateUtils.getRelativeTimeSpanString(((long) (post.getTimestamp()))).toString()); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2824/buggy-version/android.app.src.main.java.com.google.firebase.samples.apps.friendlypix.PostsFragment.java", "BodyUseAPI": ["android.text.format.DateUtils.getRelativeTimeSpanString(((long) (post.getTimestamp())))", "com.google.firebase.samples.apps.friendlypix.PostViewHolder.setTimestamp(android.text.format.DateUtils.getRelativeTimeSpanString(((long) (post.getTimestamp()))).toString())", "android.text.format.DateUtils.getRelativeTimeSpanString(((long) (post.getTimestamp()))).toString()", "com.google.firebase.samples.apps.friendlypix.Models.Post.getTimestamp()"], "Fixed commit": "19847ff2e95910daaf835a154116459da411f6bb", "Url": "https://api.github.com/repos/kronismax/firetest", "Date": "2017-01-13T14:37:44Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { postViewHolder.setAuthor(author.getFull_name(), author.getUid()); postViewHolder.setIcon(author.getProfile_picture(), author.getUid()); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2824/buggy-version/android.app.src.main.java.com.google.firebase.samples.apps.friendlypix.PostsFragment.java", "BodyUseAPI": ["com.google.firebase.samples.apps.friendlypix.PostViewHolder.setIcon(author.getProfile_picture(),author.getUid())", "com.google.firebase.samples.apps.friendlypix.Models.Author.getFull_name()", "com.google.firebase.samples.apps.friendlypix.Models.Author.getProfile_picture()", "com.google.firebase.samples.apps.friendlypix.Models.Author.getUid()", "com.google.firebase.samples.apps.friendlypix.PostViewHolder.setAuthor(author.getFull_name(),author.getUid())", "com.google.firebase.samples.apps.friendlypix.Models.Author.getUid()"], "Fixed commit": "19847ff2e95910daaf835a154116459da411f6bb", "Url": "https://api.github.com/repos/kronismax/firetest", "Date": "2017-01-13T14:37:44Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { result = super.getDefaultVideoPoster(); } catch (java.lang.Exception ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5572/buggy-version/YouTubePlayer.src.main.java.com.pierfrancescosoffritti.youtubeplayer.YouTubePlayer.java", "BodyUseAPI": ["android.webkit.WebChromeClient.getDefaultVideoPoster()"], "Fixed commit": "6531b75037eb25089dfcc6f0ff7bf0481b3dfb1a", "Url": "https://api.github.com/repos/PierfrancescoSoffritti/android-youtube-player", "Date": "2016-09-07T06:36:32Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { md = java.security.MessageDigest.getInstance(\"MD5\"); } catch (java.security.NoSuchAlgorithmException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3585/buggy-version/src.RXPHelpers.java", "BodyUseAPI": ["java.security.MessageDigest.getInstance(java.lang.String)"], "Fixed commit": "5ae8118d2e21950343ccf4f6afc39f89df4fe14e", "Url": "https://api.github.com/repos/aytsou147/RXP_Application", "Date": "2015-11-23T06:11:08Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { channel.drain(); } catch (java.io.IOException e1) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/9065/buggy-version/server.src.main.java.com.orientechnologies.orient.server.network.protocol.binary.ONetworkProtocolBinary.java", "BodyUseAPI": ["com.orientechnologies.orient.server.network.protocol.binary.OChannelBinary.drain()"], "Fixed commit": "33330c9962a8d5518d8f15d5c759777466b8be5a", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2017-11-08T21:11:22Z"},
{"Line": "=>758", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.nio.file.Files.delete(dataDir.resolve(oldFile)); } catch (java.io.IOException e) { org.aktin.broker.db.BrokerImpl.log.log(java.util.logging.Level.WARNING, (\"Unable to delete node resource: \" + oldFile), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/241/buggy-version/broker-server.src.main.java.org.aktin.broker.db.BrokerImpl.java", "BodyUseAPI": ["java.nio.file.Files.delete(java.nio.file.Path)", "java.nio.file.Path.resolve(java.lang.String)"], "Fixed commit": "147aa6ada9e444ad78b72742e1b3d94ea1ef957a", "Url": "https://api.github.com/repos/aktin/broker", "Date": "2017-03-07T15:38:11Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.unregisterReceiver(receiver); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/5557/buggy-version/app.src.main.java.com.example.zeashon.forestore_monitor.UploadActivity.java", "BodyUseAPI": ["com.example.zeashon.forestore_monitor.UploadActivity.unregisterReceiver(com.example.zeashon.forestore_monitor.UploadActivity.MyReceiver)"], "Fixed commit": "1384f942e92876525ce9e41465c2edbbfc50b26e", "Url": "https://api.github.com/repos/Zeashon/Forestore_monitor", "Date": "2016-03-21T07:33:57Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { task.onMonitor(this, statInfo); } catch (java.lang.Throwable e) { java.lang.String cb = task.getClass().getName(); simperf.thread.MonitorThread.logger.error((\"\u05b4\ufffd\ufffdCallback.onMonitor()\u02a7\ufffd\ufffd callback=\" + cb), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3071/buggy-version/src.main.java.simperf.thread.MonitorThread.java", "BodyUseAPI": ["simperf.thread.Callback.onMonitor(simperf.thread.MonitorThread,simperf.result.StatInfo)"], "Fixed commit": "64e7dcfeef10059006df04bfc00ea635ce3a2b62", "Url": "https://api.github.com/repos/imbugs/simperf", "Date": "2014-02-26T13:01:55Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { task.onStart(this); } catch (java.lang.Throwable e) { java.lang.String cb = task.getClass().getName(); simperf.thread.MonitorThread.logger.error((\"\u05b4\ufffd\ufffdCallback.onStart()\u02a7\ufffd\ufffd callback=\" + cb), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3071/buggy-version/src.main.java.simperf.thread.MonitorThread.java", "BodyUseAPI": ["simperf.thread.Callback.onStart(simperf.thread.MonitorThread)"], "Fixed commit": "64e7dcfeef10059006df04bfc00ea635ce3a2b62", "Url": "https://api.github.com/repos/imbugs/simperf", "Date": "2014-02-26T13:01:55Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { task.onExit(this); } catch (java.lang.Throwable e) { java.lang.String cb = task.getClass().getName(); simperf.thread.MonitorThread.logger.error((\"\u05b4\ufffd\ufffdCallback.onExit()\u02a7\ufffd\ufffd callback=\" + cb), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/3071/buggy-version/src.main.java.simperf.thread.MonitorThread.java", "BodyUseAPI": ["simperf.thread.Callback.onExit(simperf.thread.MonitorThread)"], "Fixed commit": "64e7dcfeef10059006df04bfc00ea635ce3a2b62", "Url": "https://api.github.com/repos/imbugs/simperf", "Date": "2014-02-26T13:01:55Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.net.URL url = new java.net.URL(imgUrl); com.squareup.picasso.Picasso.with(context).load(imgUrl).into(viewHolder.bookCover); } catch (java.net.MalformedURLException e) { android.util.Log.e(it.jaschke.alexandria.api.BookListAdapter.LOG_TAG, (\"Bad URL: \" + imgUrl)); com.squareup.picasso.Picasso.with(context).load(R.drawable.ic_launcher).into(viewHolder.bookCover); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7278/buggy-version/alexandria.app.src.main.java.it.jaschke.alexandria.api.BookListAdapter.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(android.content.Context)", "com.squareup.picasso.Picasso.with(context).load(imgUrl).into(android.widget.ImageView)", "com.squareup.picasso.Picasso.with(context).load(java.lang.String)"], "Fixed commit": "9b8008e295e9021ade40c4c8180b0dfa9d3cebbf", "Url": "https://api.github.com/repos/abunghez/super-duo", "Date": "2015-10-21T14:13:30Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.sql.PreparedStatement crt = con.prepareStatement(\"create table Operator (operator varchar(10) constraint consOperator not null primary key,operatorClass varchar(30) constraint consClass not null unique,inStackPriority smallint default null,outStackPriority smallint default null,operandCount smallint constraint consOperand not null)\"); if (!(crt.execute())) throw new java.sql.SQLException(\"create error!\"); crt.close(); } catch (java.sql.SQLException e) { if (((e.getSQLState()) != null) && (!(e.getSQLState().equals(\"X0Y32\")))) { java.lang.System.out.println(e); java.lang.System.exit(0); } java.lang.System.out.println(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/1616/buggy-version/CreateDatabase.java", "BodyUseAPI": ["java.sql.PreparedStatement.close()", "java.sql.PreparedStatement.execute()", "java.sql.Connection.prepareStatement(java.lang.String)"], "Fixed commit": "61b5e9c01c1253379d38e6d773a1d3f3a4e29ea2", "Url": "https://api.github.com/repos/zdy023/SolveExpression", "Date": "2017-07-22T12:31:17Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { observer = getDescriptor().createService(org.strategoxt.imp.runtime.services.StrategoObserver.class, getParseController()); } catch (org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/4573/buggy-version/org.strategoxt.imp.runtime.src.org.strategoxt.imp.runtime.FileState.java", "BodyUseAPI": ["org.strategoxt.imp.runtime.dynamicloading.Descriptor.createService(java.lang.Class,org.strategoxt.imp.runtime.parser.SGLRParseController)", "org.strategoxt.imp.runtime.FileState.getDescriptor()", "org.strategoxt.imp.runtime.FileState.getParseController()"], "Fixed commit": "98424a57bdd04ce688cb53ab1dae612f24a22378", "Url": "https://api.github.com/repos/metaborg/spoofax", "Date": "2014-02-26T21:00:11Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (no.digipost.android.pdf.LinkInfo l : mLinks) if (l.rect.contains(docRelX, docRelY)) return l; } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/194/buggy-version/src.no.digipost.android.pdf.MuPDFPageView.java", "BodyUseAPI": ["l.rect.contains(float,float)"], "Fixed commit": "11de234abb261c2347fe4245a4c3b72aabc2e97c", "Url": "https://api.github.com/repos/digipost/android", "Date": "2013-07-19T09:15:56Z"},
{"Line": "=>1078", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { return poolingPeak; } finally { lock.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/2250/buggy-version/src.main.java.com.alibaba.druid.pool.DruidDataSource.java", "BodyUseAPI": [], "Fixed commit": "2b3467348708e6fd23be084281094c43c00b1af4", "Url": "https://api.github.com/repos/shrekwang/druid", "Date": "2012-08-23T03:38:19Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (java.lang.String redisNode : redisNodes) { java.lang.String[] config = redisNode.split(\":\"); jedisClusterNodes.add(new redis.clients.jedis.HostAndPort(config[0], java.lang.Integer.parseInt(config[1]))); } } catch (java.lang.IllegalArgumentException ex) { throw new java.lang.IllegalArgumentException(\"redis cluster url not configured correctly\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/9225/buggy-version/src.main.java.cn.danielw.pentaho.di.plugin.step.redis.RedisOutputStep.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.util.Set<redis.clients.jedis.HostAndPort>.add(redis.clients.jedis.HostAndPort)"], "Fixed commit": "2de67aa7b7d23c5eacec0eb09d844799e2ffbda9", "Url": "https://api.github.com/repos/DanielYWoo/pentaho-di-redis-plugin", "Date": "2017-06-26T03:40:58Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { bei.m3c.helpers.KioskModeHelper.activity.stopLockTask(); } catch (java.lang.Exception e) { android.util.Log.e(bei.m3c.helpers.KioskModeHelper.TAG, \"Could not stop lock task. Maybe the task wasn't locked.\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V112/7591/buggy-version/app.src.main.java.bei.m3c.helpers.KioskModeHelper.java", "BodyUseAPI": ["android.support.v7.app.AppCompatActivity.stopLockTask()"], "Fixed commit": "31b7c935c9b075afa63fb9a420e2b3ce10c95d1d", "Url": "https://api.github.com/repos/stupidusername/M3C", "Date": "2016-09-06T18:11:46Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.content.ClipboardManager cmb = ((android.content.ClipboardManager) (context.getSystemService(Context.CLIPBOARD_SERVICE))); return cmb.getText().toString().trim(); } catch (java.lang.NullPointerException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3323/buggy-version/app.src.main.java.com.zhihaofans.texttext.SysAct.java", "BodyUseAPI": ["cmb.getText().toString().trim()", "cmb.getText().toString()", "android.content.Context.getSystemService(Context.CLIPBOARD_SERVICE)", "android.content.ClipboardManager.getText()"], "Fixed commit": "63d4dd002256e3132840211f93c94f9cbcfcf8f4", "Url": "https://api.github.com/repos/zhihaofans/Text-Text", "Date": "2016-12-20T02:39:59Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { newstr = com.zhihaofans.texttext.StringToSth.StringToAscii(oldstr); } catch (java.lang.NumberFormatException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3323/buggy-version/app.src.main.java.com.zhihaofans.texttext.MainActivity.java", "BodyUseAPI": ["com.zhihaofans.texttext.StringToSth.StringToAscii(java.lang.String)"], "Fixed commit": "63d4dd002256e3132840211f93c94f9cbcfcf8f4", "Url": "https://api.github.com/repos/zhihaofans/Text-Text", "Date": "2016-12-20T02:39:59Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { newstr = com.zhihaofans.texttext.StringToSth.AsciiToString(oldstr); } catch (java.lang.NumberFormatException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3323/buggy-version/app.src.main.java.com.zhihaofans.texttext.MainActivity.java", "BodyUseAPI": ["com.zhihaofans.texttext.StringToSth.AsciiToString(java.lang.String)"], "Fixed commit": "63d4dd002256e3132840211f93c94f9cbcfcf8f4", "Url": "https://api.github.com/repos/zhihaofans/Text-Text", "Date": "2016-12-20T02:39:59Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { loadDefaultScripts(shell); } catch (java.lang.Exception e) { me.bazhenov.groovysh.GroovyShellCommand.createPrintStream(err).println((((\"Unable to load default scripts: \" + (e.getClass().getName())) + \": \") + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/9044/buggy-version/groovy-shell-server.src.main.java.me.bazhenov.groovysh.GroovyShellCommand.java", "BodyUseAPI": ["me.bazhenov.groovysh.GroovyShellCommand.loadDefaultScripts(org.codehaus.groovy.tools.shell.Groovysh)"], "Fixed commit": "4b79c9ddce452dda96e8a1f505cf037286cb7192", "Url": "https://api.github.com/repos/bazhenov/groovy-shell-server", "Date": "2014-06-17T03:56:28Z"},
{"Line": "=>907", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { currFeatVal[c] = java.lang.Double.parseDouble(featVal_str[(c - 1)]); } catch (java.lang.Exception e) { currFeatVal[c] = 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8263/buggy-version/src.joshua.zmert.MertCore.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "258f0744609e50752d0f26ce54068f24e0f0a715", "Url": "https://api.github.com/repos/jweese/joshua", "Date": "2012-11-16T04:03:00Z"},
{"Line": "=>1160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { currFeatVal[c] = java.lang.Double.parseDouble(featVal_str[(c - 1)]); } catch (java.lang.Exception e) { currFeatVal[c] = 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8263/buggy-version/src.joshua.zmert.MertCore.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "258f0744609e50752d0f26ce54068f24e0f0a715", "Url": "https://api.github.com/repos/jweese/joshua", "Date": "2012-11-16T04:03:00Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.type = clashsoft.mods.villagerquests.quest.type.QuestType.get(buffer.readStringFromBuffer(65535)); } catch (java.io.IOException ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4933/buggy-version/src.main.java.clashsoft.mods.villagerquests.quest.Quest.java", "BodyUseAPI": ["net.minecraft.network.PacketBuffer.readStringFromBuffer(int)", "clashsoft.mods.villagerquests.quest.type.QuestType.get(buffer.readStringFromBuffer(65535))"], "Fixed commit": "8862431190d8480601721119353e30dc53b85c54", "Url": "https://api.github.com/repos/MinestrapTeam/Villager-Quests-Mod", "Date": "2014-09-01T10:48:25Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { buffer.writeStringToBuffer(this.type.getName()); } catch (java.io.IOException ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4933/buggy-version/src.main.java.clashsoft.mods.villagerquests.quest.Quest.java", "BodyUseAPI": ["net.minecraft.network.PacketBuffer.writeStringToBuffer(this.type.getName())", "clashsoft.mods.villagerquests.quest.type.QuestType.getName()"], "Fixed commit": "8862431190d8480601721119353e30dc53b85c54", "Url": "https://api.github.com/repos/MinestrapTeam/Villager-Quests-Mod", "Date": "2014-09-01T10:48:25Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.recipeList = net.minecraft.village.MerchantRecipeList.func_151390_b(buf); } catch (java.io.IOException ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4933/buggy-version/src.main.java.clashsoft.mods.villagerquests.network.PacketRecipeList.java", "BodyUseAPI": ["net.minecraft.village.MerchantRecipeList.func_151390_b(net.minecraft.network.PacketBuffer)"], "Fixed commit": "8862431190d8480601721119353e30dc53b85c54", "Url": "https://api.github.com/repos/MinestrapTeam/Villager-Quests-Mod", "Date": "2014-09-01T10:48:25Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.recipeList.func_151391_a(buf); } catch (java.io.IOException ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4933/buggy-version/src.main.java.clashsoft.mods.villagerquests.network.PacketRecipeList.java", "BodyUseAPI": ["net.minecraft.village.MerchantRecipeList.func_151391_a(net.minecraft.network.PacketBuffer)"], "Fixed commit": "8862431190d8480601721119353e30dc53b85c54", "Url": "https://api.github.com/repos/MinestrapTeam/Villager-Quests-Mod", "Date": "2014-09-01T10:48:25Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { startActivity(new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse(net.alliknow.podcatcher.BaseActivity.PODCATCHER_HELPSITE))); } catch (android.content.ActivityNotFoundException e) { showToast(getString(R.string.no_browser)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/454/buggy-version/src.net.alliknow.podcatcher.BaseActivity.java", "BodyUseAPI": ["android.net.Uri.parse(java.lang.String)", "net.alliknow.podcatcher.BaseActivity.startActivity(android.content.Intent)"], "Fixed commit": "dc7cfe9217820e0faa485a38837d66c1f88c4c00", "Url": "https://api.github.com/repos/salema/PodCatcher-Deluxe-Android", "Date": "2013-07-25T12:45:56Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { startActivity(new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse(net.alliknow.podcatcher.BaseActivity.PODCATCHER_WEBSITE))); } catch (android.content.ActivityNotFoundException e) { showToast(getString(R.string.no_browser)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/454/buggy-version/src.net.alliknow.podcatcher.BaseActivity.java", "BodyUseAPI": ["android.net.Uri.parse(java.lang.String)", "net.alliknow.podcatcher.BaseActivity.startActivity(android.content.Intent)"], "Fixed commit": "dc7cfe9217820e0faa485a38837d66c1f88c4c00", "Url": "https://api.github.com/repos/salema/PodCatcher-Deluxe-Android", "Date": "2013-07-25T12:45:56Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { preSystem = akka.actor.ActorSystem.create(\"freeplaneRemote\", com.typesafe.config.ConfigFactory.load().getConfig(\"listener\")); } catch (org.freeplane.plugin.remote.org.jboss ex) { logger.error(ex.getMessage()); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4360/buggy-version/freeplane_plugin_remote.src.org.freeplane.plugin.remote.RemoteController.java", "BodyUseAPI": ["akka.actor.ActorSystem.create(java.lang.String,com.typesafe.config.ConfigFactory.load().getConfig(\"listener\"))", "com.typesafe.config.ConfigFactory.load().getConfig(java.lang.String)", "com.typesafe.config.ConfigFactory.load()"], "Fixed commit": "ae5d2848fd96cc17d68e3195b9412d447e64701e", "Url": "https://api.github.com/repos/juliusse/freeplane", "Date": "2013-03-12T16:11:08Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.content.Intent intent = new android.content.Intent(android.content.Intent.ACTION_DIAL); intent.setData(android.net.Uri.parse((\"tel:\" + (fac.getNumber().replaceAll(\"\\\\.\", \"\"))))); getContext().startActivity(intent); } catch (android.content.ActivityNotFoundException anfe) { android.support.design.widget.Snackbar.make(phoneRibbon, \"Your device cannot handle phone calls.\", Snackbar.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2575/buggy-version/app.src.main.java.edu.fsu.campusrec.StatusFragment.java", "BodyUseAPI": ["edu.fsu.campusrec.Facility.getNumber()", "android.content.Intent.setData(android.net.Uri.parse((\"tel:\" + (fac.getNumber().replaceAll(\"\\\\.\", \"\")))))", "fac.getNumber().replaceAll(java.lang.String,java.lang.String)", "edu.fsu.campusrec.StatusFragment.2.getContext()", "android.net.Uri.parse((\"tel:\" + (fac.getNumber().replaceAll(\"\\\\.\", \"\"))))", "getContext().startActivity(android.content.Intent)"], "Fixed commit": "8b7458c3c840b00b2951d6142e2f42a12c6e9370", "Url": "https://api.github.com/repos/ThinkBigAppsLLC/campusrec", "Date": "2016-04-27T04:18:44Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.username.setText(teamfmg.hangman.Settings.getLastUsername()); this.password.setText(teamfmg.hangman.Settings.getLastPassword()); this.password.requestFocus(); } catch (java.lang.NullPointerException ex) { teamfmg.hangman.Logger.logOnly(\"No userdata entered yet!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1452/buggy-version/app.src.main.java.teamfmg.hangman.LoginMenu.java", "BodyUseAPI": ["android.widget.EditText.requestFocus()", "android.widget.EditText.setText(teamfmg.hangman.Settings.getLastUsername())", "teamfmg.hangman.Settings.getLastUsername()", "android.widget.EditText.setText(teamfmg.hangman.Settings.getLastPassword())", "teamfmg.hangman.Settings.getLastPassword()"], "Fixed commit": "56944f4c5242c04b335890a4a0edba2ec74ec2f3", "Url": "https://api.github.com/repos/ZaubererHaft/Hangman", "Date": "2015-11-15T20:29:18Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { currentEquip = player.getCurrentEquippedItem().getItem(); } catch (java.lang.Exception e) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3141/buggy-version/java.com.gmail.shochou.tako.lightbringermod.ForgeEventHandler.java", "BodyUseAPI": ["net.minecraft.entity.player.EntityPlayer.getCurrentEquippedItem()", "player.getCurrentEquippedItem().getItem()"], "Fixed commit": "df28665a52640d2ac1ccef8370bb6034f5018d19", "Url": "https://api.github.com/repos/TakoShochou/LightbringerMod", "Date": "2015-04-28T20:44:39Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.jme3.texture.Texture texture = assetManager.loadTexture(new com.jme3.asset.TextureKey(toniarts.openkeeper.tools.convert.ConversionUtils.getCanonicalAssetKey(diffuseTexture), false)); material.setTexture(\"DiffuseMap\", texture); } catch (java.lang.Exception e) { toniarts.openkeeper.world.MapLoader.logger.log(java.util.logging.Level.WARNING, \"Error applying decay texture: {0} to {1} terrain! ({2})\", new java.lang.Object[]{ diffuseTexture, tile.getTerrain().getName(), e.getMessage() }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3796/buggy-version/src.toniarts.openkeeper.world.MapLoader.java", "BodyUseAPI": ["toniarts.openkeeper.tools.convert.ConversionUtils.getCanonicalAssetKey(java.lang.String)", "com.jme3.material.Material.setTexture(java.lang.String,com.jme3.texture.Texture)", "com.jme3.asset.AssetManager.loadTexture(com.jme3.asset.TextureKey)"], "Fixed commit": "2bd094be44717e3a420f863fb1032dfd529fabb4", "Url": "https://api.github.com/repos/tonihele/OpenKeeper", "Date": "2016-06-13T11:27:15Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { doc = org.jsoup.Jsoup.connect(url).get(); org.jsoup.select.Elements links = doc.select(\"a[href]\"); for (org.jsoup.nodes.Element link : links) { storedLinks.add(link.attr(\"href\")); } } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1084/buggy-version/src.main.java.edu.csupomona.cs480.controller.WebController.java", "BodyUseAPI": ["org.jsoup.nodes.Element.attr(java.lang.String)", "org.jsoup.Jsoup.connect(url).get()", "org.jsoup.nodes.Document.select(java.lang.String)", "org.jsoup.Jsoup.connect(java.lang.String)", "java.util.ArrayList<java.lang.String>.add(link.attr(\"href\"))"], "Fixed commit": "d5b32b95cad9c30469f1bfb2d08ef36c5c4ab9ee", "Url": "https://api.github.com/repos/The-Elite-Four/demo-web-project", "Date": "2016-07-01T08:38:15Z"},
{"Line": "=>744", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { submoduleUrl = getSubmoduleUrl(submoduleName); } catch (hudson.plugins.git.GitException e) { launchCommand(args); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6421/buggy-version/src.main.java.org.jenkinsci.plugins.gitclient.CliGitAPIImpl.java", "BodyUseAPI": ["org.jenkinsci.plugins.gitclient.CliGitAPIImpl.6.getSubmoduleUrl(java.lang.String)"], "Fixed commit": "8a945c0cc6bc2cdc348d6a5dec0066132d9c774f", "Url": "https://api.github.com/repos/steven-collins-omega/git-client-plugin", "Date": "2014-04-23T20:07:09Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return isNull(name) ? null : getObject(name); } catch (org.json.JSONException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4534/buggy-version/ganilib.src.main.java.com.gani.lib.json.GJsonObject.java", "BodyUseAPI": ["com.gani.lib.json.GJsonObject<JO, JA>.isNull(java.lang.String)", "com.gani.lib.json.GJsonObject<JO, JA>.getObject(java.lang.String)"], "Fixed commit": "774d84014f785ad823b3959c381741d677e76cec", "Url": "https://api.github.com/repos/hgani/androlib", "Date": "2017-02-25T03:50:59Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.apache.commons.io.FileUtils.writeLines(new java.io.File(utf8FilePath), \"UTF-8\", org.apache.commons.io.FileUtils.readLines(javaGbkFile, \"GBK\")); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1935/buggy-version/src.javatools.Main.java", "BodyUseAPI": ["org.apache.commons.io.FileUtils.readLines(java.io.File,java.lang.String)", "org.apache.commons.io.FileUtils.writeLines(java.io.File,java.lang.String,org.apache.commons.io.FileUtils.readLines(javaGbkFile, \"GBK\"))"], "Fixed commit": "d70fa85b0a1b8fc86c09f965cd27b868efd0e309", "Url": "https://api.github.com/repos/wWX152939/javatools", "Date": "2017-07-04T02:44:52Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return ((com.cmput301f16t11.a2b.CommandStack.AddCommands.size()) > 0) || ((com.cmput301f16t11.a2b.CommandStack.AcceptedCommands.size()) > 0); } catch (java.lang.NullPointerException e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1213/buggy-version/app.src.main.java.com.cmput301f16t11.a2b.CommandStack.java", "BodyUseAPI": ["java.util.ArrayList<com.cmput301f16t11.a2b.UserRequest>.size()", "java.util.ArrayList<com.cmput301f16t11.a2b.UserRequest>.size()"], "Fixed commit": "352eec8b60a0a6f74cedb05d07fdd90a9d23e3c8", "Url": "https://api.github.com/repos/CMPUT301F16T11/a2b", "Date": "2016-11-27T07:35:04Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((ni.supportsMulticast()) && (ni.isUp())) { for (java.net.InterfaceAddress ia : ni.getInterfaceAddresses()) { if ((((ia.getAddress()) instanceof java.net.Inet4Address) && (!(ia.getAddress().isLoopbackAddress()))) && (!(ni.getDisplayName().startsWith(\"vnic\")))) { possibles.add(ni); } } } } catch (java.net.SocketException ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2927/buggy-version/activemq-client.src.main.java.org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent.java", "BodyUseAPI": ["java.net.InetAddress.isLoopbackAddress()", "java.net.NetworkInterface.getInterfaceAddresses()", "java.lang.String.startsWith(java.lang.String)", "java.net.NetworkInterface.getDisplayName()", "java.net.NetworkInterface.isUp()", "java.net.InterfaceAddress.getAddress()", "java.net.InterfaceAddress.getAddress()", "java.net.NetworkInterface.supportsMulticast()", "java.util.List<java.net.NetworkInterface>.add(java.net.NetworkInterface)"], "Fixed commit": "07338e7553279aff45ac2b13ec8ea19f98c9069a", "Url": "https://api.github.com/repos/ollie314/activemq", "Date": "2015-02-11T15:51:55Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { legends.model.Population pop = new legends.model.Population(); pop.setNumbers(java.lang.Integer.parseInt(line.substring(0, line.indexOf(\" \")))); pop.setRace(line.substring(((line.indexOf(\" \")) + 1))); return pop; } catch (java.lang.Exception e) { java.lang.System.out.println((\"error reading site line: \" + line)); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2714/buggy-version/src.main.java.legends.SiteReader.java", "BodyUseAPI": ["legends.model.Population.setRace(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.substring(int)", "legends.model.Population.setNumbers(int)", "java.lang.String.indexOf(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "682fe301f5de66745ca9bc819e1d7d5e277bb221", "Url": "https://api.github.com/repos/robertjanetzko/LegendsBrowser", "Date": "2017-11-26T12:57:12Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return (((snapshotCache.get(type)) != null) && ((snapshotCache.get(type).get(k)) != null)) && ((snapshotCache.get(type).get(k).getFound()) != null); } catch (java.lang.Exception e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7358/buggy-version/src.de.caluga.morphium.cache.MorphiumCacheImpl.java", "BodyUseAPI": ["java.util.Hashtable<java.lang.Class<?>, java.util.Hashtable<java.lang.String, de.caluga.morphium.cache.CacheElement>>.get(java.lang.Class<?>)", "snapshotCache.get(type).get(java.lang.String)", "snapshotCache.get(type).get(java.lang.String)", "java.util.Hashtable<java.lang.Class<?>, java.util.Hashtable<java.lang.String, de.caluga.morphium.cache.CacheElement>>.get(java.lang.Class<?>)", "snapshotCache.get(type).get(k).getFound()", "java.util.Hashtable<java.lang.Class<?>, java.util.Hashtable<java.lang.String, de.caluga.morphium.cache.CacheElement>>.get(java.lang.Class<?>)"], "Fixed commit": "12eaee59c12ec56287e467dd08f4090721806b00", "Url": "https://api.github.com/repos/sboesebeck/morphium", "Date": "2013-07-03T10:11:24Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (message.substring(1, ((IRCHook.command.length()) + 1)).equalsIgnoreCase(IRCHook.command)) { return message = message.substring(((IRCHook.command.length()) + 1)).trim(); } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5209/buggy-version/IRCHook.java", "BodyUseAPI": ["java.lang.String.trim()", "java.lang.String.substring(int)", "java.lang.String.length()", "java.lang.String.substring(int,int)", "java.lang.String.length()", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "9a5ab1c7799e8ac8023612c4dc85d7686ddcd76c", "Url": "https://api.github.com/repos/EnKrypt/JPL", "Date": "2015-06-03T21:01:23Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { uk.ac.cam.teamOscarSSE.Main_1502_Boom.main(null); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1283/buggy-version/src.uk.ac.cam.teamOscarSSE.LineChart_AWT.java", "BodyUseAPI": ["uk.ac.cam.teamOscarSSE.Main_1502_Boom.main(<nulltype>)"], "Fixed commit": "c1c9eb5e2eb55bdcb44ce549f8e862bc9aab939e", "Url": "https://api.github.com/repos/ocrawford555/teamOscarSSE", "Date": "2016-02-18T12:51:20Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { uk.ac.cam.teamOscarSSE.Main_1502_Boom.main(null); } catch (java.lang.Exception e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1283/buggy-version/src.uk.ac.cam.teamOscarSSE.LineChart_AWT2.java", "BodyUseAPI": ["uk.ac.cam.teamOscarSSE.Main_1502_Boom.main(<nulltype>)"], "Fixed commit": "c1c9eb5e2eb55bdcb44ce549f8e862bc9aab939e", "Url": "https://api.github.com/repos/ocrawford555/teamOscarSSE", "Date": "2016-02-18T12:51:20Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { map.updateOperation(pnfsId, exception); } catch (java.lang.IllegalStateException e) { org.dcache.resilience.handlers.PnfsTaskCompletionHandler.LOGGER.trace(\"{}\", new org.dcache.util.ExceptionMessage(e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7116/buggy-version/modules.dcache.src.main.java.org.dcache.resilience.handlers.PnfsTaskCompletionHandler.java", "BodyUseAPI": ["org.dcache.resilience.data.PnfsOperationMap.updateOperation(diskCacheV111.util.PnfsId,diskCacheV111.util.CacheException)"], "Fixed commit": "bfe5400eefea4fe2fbb0877125e4fc570282076d", "Url": "https://api.github.com/repos/alrossi/dcache-server", "Date": "2016-02-20T17:49:53Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { emails.Mails.enviar(\"LogFatal\", pattern); } catch (java.lang.IllegalArgumentException e) { play.Logger.warn(\"No se encontr\u00f3 el ID del mail en la base de datos, por lo que no se pudo enviar por correo el error FATAL\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4510/buggy-version/fap.app.logger.FapLogs.java", "BodyUseAPI": ["emails.Mails.enviar(java.lang.String,java.lang.String)"], "Fixed commit": "de1d5a4afab98992f8bf4baaa38fedd628181f19", "Url": "https://api.github.com/repos/FAP-Team/Fap-Module", "Date": "2012-03-29T11:04:05Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mHeartBeat.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR); } catch (java.util.concurrent.RejectedExecutionException e) { org.andstatus.app.util.MyLog.w(this, \"Launching new HeartBeat\", e); mHeartBeat = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1877/buggy-version/app.src.org.andstatus.app.service.MyService.java", "BodyUseAPI": ["org.andstatus.app.service.MyService.HeartBeat.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR)"], "Fixed commit": "f2dc5b201ab8146a201d1f5d5fd1f43d773cfc4c", "Url": "https://api.github.com/repos/andstatus/andstatus", "Date": "2015-05-14T05:59:11Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { executor = this.executor; } finally { lock.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1927/buggy-version/subprojects.launcher.src.main.java.org.gradle.launcher.daemon.server.DefaultDaemonConnection.java", "BodyUseAPI": [], "Fixed commit": "ba044c8e65874b05bd19ca01e456bcadc5d2cd3e", "Url": "https://api.github.com/repos/gradle/gradle", "Date": "2012-08-27T04:08:28Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String[] PiAddress = intent.getStringExtra(\"piaddress\").split(\"//\")[1].split(\":\"); ipAddr = PiAddress[0]; portNo = PiAddress[1]; } catch (java.lang.Exception e) { ipAddr = \"Undefined\"; portNo = \"Undefined\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8896/buggy-version/src.main.java.com.example.nickjm6.picontroller.SetIP.java", "BodyUseAPI": ["intent.getStringExtra(\"piaddress\").split(\"//\")[1].split(java.lang.String)", "intent.getStringExtra(\"piaddress\").split(java.lang.String)", "android.content.Intent.getStringExtra(java.lang.String)"], "Fixed commit": "722547049b458533ecef16842d6590f26b15a8c7", "Url": "https://api.github.com/repos/nickjm6/PiControllerAndroid", "Date": "2017-12-28T00:32:40Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { prop.setColumnPrefix(embedded.prefix()); } catch (java.lang.NoSuchMethodError e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7584/buggy-version/src.main.java.io.ebeaninternal.server.deploy.parse.AnnotationAssocOnes.java", "BodyUseAPI": ["io.ebeaninternal.server.deploy.meta.DeployBeanPropertyAssocOne<?>.setColumnPrefix(embedded.prefix())", "javax.persistence.Embedded.prefix()"], "Fixed commit": "fc996659f2ec3c3339983c4c5735cd32a12858fa", "Url": "https://api.github.com/repos/ebean-orm/ebean", "Date": "2017-10-02T22:02:38Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { player = new music.midi.SequencePlayer(120, 2); final music.Pitch C = new music.Pitch('C'); int start = 1; for (music.Pitch p : new music.Pitch[]{ new music.Pitch('C'), new music.Pitch('D'), new music.Pitch('E'), new music.Pitch('F'), new music.Pitch('G'), new music.Pitch('A'), new music.Pitch('B'), new music.Pitch('C').transpose(Pitch.OCTAVE), new music.Pitch('B'), new music.Pitch('A'), new music.Pitch('G'), new music.Pitch('F'), new music.Pitch('E'), new music.Pitch('D'), new music.Pitch('A') }) { player.addNote(PIANO, ((p.difference(C)) + 60), (start++), 1); } java.lang.System.out.println(player); player.play(); } catch (javax.sound.midi.MidiUnavailableException e) { e.printStackTrace(); } catch (javax.sound.midi.InvalidMidiDataException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8964/buggy-version/src.music.midi.SequencePlayer.java", "BodyUseAPI": ["music.midi.SequencePlayer.play()", "music.Pitch.difference(music.Pitch)", "music.Pitch.transpose(Pitch.OCTAVE)", "music.midi.SequencePlayer.addNote(PIANO,((p.difference(C)) + 60),int,int)", "java.io.PrintStream.println(music.midi.SequencePlayer)"], "Fixed commit": "15339970d8ed8d698d4eefba76ff251bc33f2577", "Url": "https://api.github.com/repos/mit6005/S13-R08-10am-orange", "Date": "2013-05-02T14:33:03Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { return o != null ? o.toString() : null; } finally { o.dispose(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5905/buggy-version/cocoatouch.src.main.java.org.robovm.apple.foundation.NSString.java", "BodyUseAPI": ["org.robovm.apple.foundation.NSString.toString()"], "Fixed commit": "c90de051195576d101dfb6a5297ecf821d3c99d7", "Url": "https://api.github.com/repos/robovm/robovm", "Date": "2014-04-08T19:00:30Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { s.retain(); if ((flags & (MarshalerFlags.CALL_TYPE_CALLBACK)) > 0) { s.autorelease(); } return s.getHandle(); } finally { s.dispose(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5905/buggy-version/cocoatouch.src.main.java.org.robovm.apple.foundation.NSString.java", "BodyUseAPI": ["org.robovm.apple.foundation.NSString.retain()", "org.robovm.apple.foundation.NSString.autorelease()", "org.robovm.apple.foundation.NSString.getHandle()"], "Fixed commit": "c90de051195576d101dfb6a5297ecf821d3c99d7", "Url": "https://api.github.com/repos/robovm/robovm", "Date": "2014-04-08T19:00:30Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.nio.file.Files.walkFileTree(java.nio.file.Paths.get(path), new java.nio.file.SimpleFileVisitor<java.nio.file.Path>() { @java.lang.Override public java.nio.file.FileVisitResult visitFile(java.nio.file.Path file, java.nio.file.attribute.BasicFileAttributes attrs) throws java.io.IOException { org.roda.rodain.core.PathCollection.simpleAddPath(file.toString()); return isTerminated(); } @java.lang.Override public java.nio.file.FileVisitResult preVisitDirectory(java.nio.file.Path dir, java.nio.file.attribute.BasicFileAttributes attrs) throws java.io.IOException { org.roda.rodain.core.PathCollection.simpleAddPath(dir.toString()); return isTerminated(); } }); } catch (java.nio.file.AccessDeniedException e) { org.roda.rodain.rules.sip.SipPerFileVisitor.log.info(\"Access denied to file\", e); } catch (java.io.IOException e) { org.roda.rodain.rules.sip.SipPerFileVisitor.log.error(\"Error walking the file tree\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7757/buggy-version/src.main.java.org.roda.rodain.rules.sip.SipPerFileVisitor.java", "BodyUseAPI": ["java.nio.file.SimpleFileVisitor()", "java.nio.file.Path.toString()", "org.roda.rodain.rules.sip.SipPerFileVisitor.1.isTerminated()", "java.nio.file.Files.walkFileTree(java.nio.file.Path,java.nio.file.SimpleFileVisitor<java.nio.file.Path>)", "org.roda.rodain.core.PathCollection.simpleAddPath(java.lang.String)", "org.roda.rodain.rules.sip.SipPerFileVisitor.1.isTerminated()", "java.nio.file.Paths.get(java.lang.String)", "org.roda.rodain.core.PathCollection.simpleAddPath(java.lang.String)", "java.nio.file.Path.toString()"], "Fixed commit": "b0a7db0e96b3a8e37d4f2b5f6afb69d516dcd1c0", "Url": "https://api.github.com/repos/keeps/roda-in", "Date": "2016-02-12T14:39:10Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { url = ((com.tingken.infoshower.outside.rest.ShowServiceImpl.serverAddress) + \"VideoDisplay.svc/DeviceWeb/Login/\") + (java.net.URLEncoder.encode(loginId, \"utf-8\")); } catch (java.io.UnsupportedEncodingException e1) { return com.tingken.infoshower.outside.ServerCommand.NONE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2591/buggy-version/code.src.com.tingken.infoshower.outside.rest.ShowServiceImpl.java", "BodyUseAPI": ["java.net.URLEncoder.encode(java.lang.String,java.lang.String)"], "Fixed commit": "e9ef91f5a20e85b38122a84f4057fd8f99f59888", "Url": "https://api.github.com/repos/tingken/InfoShower", "Date": "2015-04-16T03:42:37Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { url = ((com.tingken.infoshower.outside.rest.ShowServiceImpl.serverAddress) + \"VideoDisplay.svc/DeviceWeb/latestVersion/\") + (java.net.URLEncoder.encode(loginId, \"utf-8\")); } catch (java.io.UnsupportedEncodingException e1) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2591/buggy-version/code.src.com.tingken.infoshower.outside.rest.ShowServiceImpl.java", "BodyUseAPI": ["java.net.URLEncoder.encode(java.lang.String,java.lang.String)"], "Fixed commit": "e9ef91f5a20e85b38122a84f4057fd8f99f59888", "Url": "https://api.github.com/repos/tingken/InfoShower", "Date": "2015-04-16T03:42:37Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { callback.invoke(false); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2470/buggy-version/android.src.main.java.com.zmxv.RNSound.RNSoundModule.java", "BodyUseAPI": ["com.facebook.react.bridge.Callback.invoke(boolean)"], "Fixed commit": "90ad2dac0fb118a55cbaeb13add7ac6902af796d", "Url": "https://api.github.com/repos/rawrmaan/react-native-sound", "Date": "2017-10-26T16:08:38Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return new java.net.URL(((org.offlike.server.service.QrCodeService.GOOGLE_QR_API) + (org.offlike.server.service.QrCodeService.parseUrl(qrCode.getId(), campaign.getTitle())))); } catch (java.net.MalformedURLException e) { return null; } catch (java.io.UnsupportedEncodingException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/394/buggy-version/src.main.java.org.offlike.server.service.QrCodeService.java", "BodyUseAPI": ["org.offlike.server.data.Campaign.getTitle()", "org.offlike.server.data.QrCode.getId()", "org.offlike.server.service.QrCodeService.parseUrl(qrCode.getId(),campaign.getTitle())"], "Fixed commit": "d53397ae004e2dd088a9539f5215a05693d0b985", "Url": "https://api.github.com/repos/kkalass/OffLike", "Date": "2011-12-04T02:14:08Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String playerName = p.next(); player = server.getPlayer(playerName); p.remove(); } catch (java.util.ConcurrentModificationException ex) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8169/buggy-version/src.com.wimbli.WorldBorder.BorderCheckTask.java", "BodyUseAPI": ["java.util.Iterator<java.lang.String>.next()", "org.bukkit.Server.getPlayer(java.lang.String)", "java.util.Iterator<java.lang.String>.remove()"], "Fixed commit": "40c37640491ce69046e9c05e9da775e88bdcf7c0", "Url": "https://api.github.com/repos/Brettflan/WorldBorder", "Date": "2011-04-10T00:51:40Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { db.closeDocument(); } finally { writeLock.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7076/buggy-version/src.org.exist.storage.dom.RawNodeIterator.java", "BodyUseAPI": ["org.exist.storage.dom.DOMFile.closeDocument()"], "Fixed commit": "8b0f9cc4525a3b12632d041655cee7f5050d7b81", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2016-03-24T15:55:04Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { stream = new java.io.FileInputStream(file); org.apache.tika.parser.AutoDetectParser parser = new org.apache.tika.parser.AutoDetectParser(); org.apache.tika.sax.BodyContentHandler handler = new org.apache.tika.sax.BodyContentHandler(); org.apache.tika.metadata.Metadata metadata = new org.apache.tika.metadata.Metadata(); parser.parse(stream, handler, metadata); return handler.toString(); } catch (java.lang.Exception e) { return null; } finally { try { stream.close(); } catch (java.io.IOException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5986/buggy-version/modules.core.web.src.main.java.cz.gattserver.grass3.ui.util.impl.AbstractGrassRequestHandler.java", "BodyUseAPI": ["org.apache.tika.parser.AutoDetectParser.parse(java.io.InputStream,org.apache.tika.sax.BodyContentHandler,org.apache.tika.metadata.Metadata)", "org.apache.tika.sax.BodyContentHandler.toString()"], "Fixed commit": "1ffd4cea9706e52462ea6e2dd7c05fe5ea3ab503", "Url": "https://api.github.com/repos/gattaka/grass3-vaadin-osgi", "Date": "2015-10-12T21:38:01Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { amount = java.lang.Double.parseDouble(tax); } catch (java.lang.NumberFormatException e) { amount = 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5335/buggy-version/src.me.valour.bowls.TableActivity.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "2ba527ea92e6cdaebcdf643e5dc07d92b614f96f", "Url": "https://api.github.com/repos/algobunny/Bowls", "Date": "2014-05-29T02:49:26Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { tipWhole = java.lang.Double.parseDouble(tip); } catch (java.lang.NumberFormatException e) { tipWhole = 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5335/buggy-version/src.me.valour.bowls.TableActivity.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "2ba527ea92e6cdaebcdf643e5dc07d92b614f96f", "Url": "https://api.github.com/repos/algobunny/Bowls", "Date": "2014-05-29T02:49:26Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mBluetoothLeScanner.stopScan(mScanCallback); } catch (java.lang.IllegalStateException e) { android.util.Log.e(house.heka.eddytooth.scan.EddyScanService.TAG, e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3288/buggy-version/library.src.main.java.house.heka.eddytooth.scan.EddyScanService.java", "BodyUseAPI": ["android.bluetooth.le.BluetoothLeScanner.stopScan(android.bluetooth.le.ScanCallback)"], "Fixed commit": "a5d9eb0c918431257930ee7d2606c4d2a43705c6", "Url": "https://api.github.com/repos/HekaHouse/EddyTooth", "Date": "2016-06-06T13:32:14Z"},
{"Line": "=>497", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { handle = this.recreateConnectionHandle(); this.pool.connectionStrategy.cleanupConnection(this, handle); this.pool.releaseConnection(handle); } catch (java.sql.SQLException e) { if (!(isClosed())) { this.pool.connectionStrategy.cleanupConnection(this, handle); this.pool.releaseConnection(this); } throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4850/buggy-version/bonecp.src.main.java.com.jolbox.bonecp.ConnectionHandle.java", "BodyUseAPI": ["this.pool.connectionStrategy.cleanupConnection(com.jolbox.bonecp.ConnectionHandle,com.jolbox.bonecp.ConnectionHandle)", "com.jolbox.bonecp.BoneCP.releaseConnection(com.jolbox.bonecp.ConnectionHandle)", "com.jolbox.bonecp.ConnectionHandle.recreateConnectionHandle()"], "Fixed commit": "c8b66ad46f2d0a7e12590fa0a6d050a56f31bbe3", "Url": "https://api.github.com/repos/wwadge/bonecp", "Date": "2013-07-17T19:36:20Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { force = java.lang.Float.parseFloat(split[1]); } catch (java.lang.NumberFormatException e) { slapper.sendMessage(\"Force must be a number\"); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/3625/buggy-version/src.main.java.com.fuckingwin.bukkit.rakiru.slap.SlapCommand.java", "BodyUseAPI": ["java.lang.Float.parseFloat(java.lang.String)"], "Fixed commit": "51dfe984d00e105cff584db8484d24200ed941a6", "Url": "https://api.github.com/repos/rakiru/Slap", "Date": "2011-05-11T23:05:44Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { s = new java.util.Scanner(new java.io.File(args[0])); } catch (java.lang.Exception e) { java.lang.System.out.println(\"Failed to find regular expression file.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7666/buggy-version/src.PatternSearch.java", "BodyUseAPI": [], "Fixed commit": "ec6cfe60b237ebfba90b9c6f36619c367dfa68f9", "Url": "https://api.github.com/repos/Jarred10/317-Assignment-3---Pattern-Search", "Date": "2014-05-24T09:51:54Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.springframework.util.ReflectionUtils.doWithFields(java.lang.Class.forName(clz), new org.springframework.util.ReflectionUtils.FieldCallback() { @java.lang.Override public void doWith(java.lang.reflect.Field field) throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException { if (field.isAnnotationPresent(org.springframework.beans.factory.annotation.Value.class)) list.add(field.getAnnotation(org.springframework.beans.factory.annotation.Value.class).value()); } }); } catch (java.lang.NoClassDefFoundError e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2913/buggy-version/src.org.ironrhino.core.spring.ApplicationContextInspector.java", "BodyUseAPI": ["org.springframework.util.ReflectionUtils.doWithFields(java.lang.Class<?>,org.springframework.util.ReflectionUtils.FieldCallback)", "T.value()", "java.lang.reflect.Field.isAnnotationPresent(java.lang.Class)", "java.lang.Class.forName(java.lang.String)", "java.util.List<java.lang.String>.add(field.getAnnotation(org.springframework.beans.factory.annotation.Value.class).value())", "java.lang.reflect.Field.getAnnotation(java.lang.Class)"], "Fixed commit": "48321d26cf69af22776aad665ffb3bf4b81ec32f", "Url": "https://api.github.com/repos/ironrhino/ironrhino", "Date": "2016-11-14T05:22:01Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return java.util.Optional.of(com.willwinder.universalgcodesender.utils.FirmwareUtils.configFiles.get(firmware).loader.getProcessors()); } catch (java.lang.Exception e) { return java.util.Optional.empty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/2425/buggy-version/ugs-core.src.com.willwinder.universalgcodesender.utils.FirmwareUtils.java", "BodyUseAPI": ["com.willwinder.universalgcodesender.utils.ControllerSettings.getProcessors()", "java.util.Optional.of(com.willwinder.universalgcodesender.utils.FirmwareUtils.configFiles.get(firmware).loader.getProcessors())", "java.util.Map<java.lang.String, com.willwinder.universalgcodesender.utils.FirmwareUtils.ConfigTuple>.get(java.lang.String)"], "Fixed commit": "6b11f14364e95027df09b13f897466b1581bc1e1", "Url": "https://api.github.com/repos/winder/Universal-G-Code-Sender", "Date": "2016-08-24T04:13:34Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { resourceScope.enter(state); return doDebug(state); } finally { resourceScope.exit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8781/buggy-version/org.cloudsmith.geppetto.pp.dsl.ui.src.org.cloudsmith.geppetto.pp.dsl.ui.commands.PPDevDebug.java", "BodyUseAPI": ["org.cloudsmith.xtext.resource.ResourceAccessScope.enter(org.eclipse.xtext.resource.XtextResource)", "org.cloudsmith.geppetto.pp.dsl.ui.commands.PPDevDebug.1.doDebug(org.eclipse.xtext.resource.XtextResource)"], "Fixed commit": "a814e38f9a1df6844a2b25a61be118dc08e936c8", "Url": "https://api.github.com/repos/cloudsmith/geppetto", "Date": "2012-09-22T13:23:23Z"},
{"Line": "=>400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { tabs.setBackgroundColor(c); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/485/buggy-version/LC1.src.main.java.tv.piratemedia.lightcontroler.controller.java", "BodyUseAPI": ["com.astuetz.PagerSlidingTabStrip.setBackgroundColor(int)"], "Fixed commit": "559c6aa0dfffaa30fd4c9c87e0de2729ba1ca582", "Url": "https://api.github.com/repos/eliotstocker/Light-Controller", "Date": "2015-01-30T08:56:43Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.app.PendingIntent pendingIntent = android.app.PendingIntent.getActivity(this, 0, new android.content.Intent(this, getClass()).addFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP), 0); adapter.enableForegroundDispatch(this, pendingIntent, null, null); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7437/buggy-version/app.src.main.java.moe.minori.pgpclipper.activities.PGPClipperResultShowActivity.java", "BodyUseAPI": ["android.app.PendingIntent.getActivity(moe.minori.pgpclipper.activities.PGPClipperResultShowActivity,int,new android.content.Intent(this, getClass()).addFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP),int)", "android.nfc.NfcAdapter.enableForegroundDispatch(moe.minori.pgpclipper.activities.PGPClipperResultShowActivity,android.app.PendingIntent,<nulltype>,<nulltype>)", "android.content.Intent.addFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP)", "moe.minori.pgpclipper.activities.PGPClipperResultShowActivity.getClass()"], "Fixed commit": "931b219fe13413bb51f5fb6a86f15b07ed88863d", "Url": "https://api.github.com/repos/Mnkai/PGPClipper", "Date": "2015-10-19T09:12:57Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { adapter.disableForegroundDispatch(this); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7437/buggy-version/app.src.main.java.moe.minori.pgpclipper.activities.PGPClipperResultShowActivity.java", "BodyUseAPI": ["android.nfc.NfcAdapter.disableForegroundDispatch(moe.minori.pgpclipper.activities.PGPClipperResultShowActivity)"], "Fixed commit": "931b219fe13413bb51f5fb6a86f15b07ed88863d", "Url": "https://api.github.com/repos/Mnkai/PGPClipper", "Date": "2015-10-19T09:12:57Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { adapter.disableForegroundDispatch(this); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7437/buggy-version/app.src.main.java.moe.minori.pgpclipper.activities.PGPClipperQuickReplyActivity.java", "BodyUseAPI": ["android.nfc.NfcAdapter.disableForegroundDispatch(moe.minori.pgpclipper.activities.PGPClipperQuickReplyActivity)"], "Fixed commit": "931b219fe13413bb51f5fb6a86f15b07ed88863d", "Url": "https://api.github.com/repos/Mnkai/PGPClipper", "Date": "2015-10-19T09:12:57Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.app.PendingIntent pendingIntent = android.app.PendingIntent.getActivity(this, 0, new android.content.Intent(this, getClass()).addFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP), 0); adapter.enableForegroundDispatch(this, pendingIntent, null, null); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/7437/buggy-version/app.src.main.java.moe.minori.pgpclipper.activities.PGPClipperQuickReplyActivity.java", "BodyUseAPI": ["moe.minori.pgpclipper.activities.PGPClipperQuickReplyActivity.getClass()", "android.nfc.NfcAdapter.enableForegroundDispatch(moe.minori.pgpclipper.activities.PGPClipperQuickReplyActivity,android.app.PendingIntent,<nulltype>,<nulltype>)", "android.content.Intent.addFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP)", "android.app.PendingIntent.getActivity(moe.minori.pgpclipper.activities.PGPClipperQuickReplyActivity,int,new android.content.Intent(this, getClass()).addFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP),int)"], "Fixed commit": "931b219fe13413bb51f5fb6a86f15b07ed88863d", "Url": "https://api.github.com/repos/Mnkai/PGPClipper", "Date": "2015-10-19T09:12:57Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return org.duracloud.durastore.rest.StorageStatsResource.GroupBy.valueOf(groupBy.toLowerCase()); } catch (java.lang.IllegalArgumentException ex) { java.lang.String message = (groupBy + \" is not a valid value for the groupBy parameter. You must specify one of the following values: \") + (org.apache.commons.lang.StringUtils.join(org.duracloud.durastore.rest.StorageStatsResource.GroupBy.values(), \",\")); throw new java.lang.IllegalArgumentException(message, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1895/buggy-version/durastore.src.main.java.org.duracloud.durastore.rest.StorageStatsRest.java", "BodyUseAPI": ["org.duracloud.durastore.rest.StorageStatsResource.GroupBy.valueOf(java.lang.String)", "java.lang.String.toLowerCase()"], "Fixed commit": "26e4c36bf8552b3d5420e83dd4115805e388fb84", "Url": "https://api.github.com/repos/duracloud/duracloud", "Date": "2016-06-23T18:51:57Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { pl.allegro.tech.hermes.consumers.consumer.Message message = (inflight.isPresent()) ? inflight.get() : receiver.next(); try { batch.append(getWrappedMessage(message), new pl.allegro.tech.hermes.common.kafka.offset.PartitionOffset(message.getKafkaTopic(), message.getOffset(), message.getPartition())); } catch (java.nio.BufferOverflowException ex) { return java.util.Optional.of(message); } } catch (pl.allegro.tech.hermes.consumers.consumer.receiver.MessageReceivingTimeoutException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/636/buggy-version/hermes-consumers.src.main.java.pl.allegro.tech.hermes.consumers.consumer.BatchConsumer.java", "BodyUseAPI": ["pl.allegro.tech.hermes.consumers.consumer.Message.getPartition()", "pl.allegro.tech.hermes.consumers.consumer.Message.getOffset()", "pl.allegro.tech.hermes.consumers.consumer.Message.getKafkaTopic()", "java.util.Optional<pl.allegro.tech.hermes.consumers.consumer.Message>.isPresent()", "java.util.Optional<pl.allegro.tech.hermes.consumers.consumer.Message>.get()", "pl.allegro.tech.hermes.consumers.consumer.receiver.MessageReceiver.next()", "pl.allegro.tech.hermes.consumers.consumer.BatchConsumer.getWrappedMessage(pl.allegro.tech.hermes.consumers.consumer.Message)", "java.util.Optional.of(pl.allegro.tech.hermes.consumers.consumer.Message)", "pl.allegro.tech.hermes.consumers.consumer.batch.MessageBatch.append(byte[],pl.allegro.tech.hermes.common.kafka.offset.PartitionOffset)"], "Fixed commit": "a47db60f1bb575e7394227432539c4ac379d679d", "Url": "https://api.github.com/repos/allegro/hermes", "Date": "2016-01-26T17:26:51Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String bodyPart = scanner.next(); gov.nist.javax.sip.message.Content partContent = parseBodyPart(bodyPart); contentList.add(partContent); } catch (java.util.NoSuchElementException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8174/buggy-version/src.gov.nist.javax.sip.message.MultipartMimeContentImpl.java", "BodyUseAPI": ["gov.nist.javax.sip.message.MultipartMimeContentImpl.parseBodyPart(java.lang.String)", "java.util.List<gov.nist.javax.sip.message.Content>.add(gov.nist.javax.sip.message.Content)", "java.util.Scanner.next()"], "Fixed commit": "d5105e4123523af8dfd30a56e4e8e713fdd322be", "Url": "https://api.github.com/repos/usnistgov/jsip", "Date": "2016-10-18T22:03:53Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (\"admin\".equals(r.getRoleName())) { isAdmin = true; break; } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5026/buggy-version/xmwechat-ws.src.main.java.com.xmblogs.base.service.ShiroDbRealm.java", "BodyUseAPI": ["com.xmblogs.base.entity.db.Role.getRoleName()", "java.lang.String.equals(r.getRoleName())"], "Fixed commit": "e8bc7a3f5807dfa88f6bb5e8abd629cd5ccf8150", "Url": "https://api.github.com/repos/tuxming/xmwechat-java-vue", "Date": "2017-11-03T08:25:17Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { user.getCpu().reset(); user.getCpu().execute(); } catch (java.lang.Exception e) { LogManager.LOGGER.severe(((\"Error executing \" + (user.getUsername())) + \"'s code\")); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/4701/buggy-version/Server.src.net.simon987.server.GameServer.java", "BodyUseAPI": ["user.getCpu().reset()", "user.getCpu().execute()", "net.simon987.server.user.User.getCpu()", "net.simon987.server.user.User.getCpu()"], "Fixed commit": "8701007ad9c6ac7c19c3eadf0ff3b69fe7769389", "Url": "https://api.github.com/repos/simon987/Much-Assembly-Required", "Date": "2017-11-15T01:58:07Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ((android.view.View) (de.robv.android.xposed.XposedHelpers.getObjectField(param.thisObject, \"mBackgroundImage\"))).setVisibility(View.GONE); } catch (java.lang.Throwable ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/186/buggy-version/app.src.main.java.tk.wasdennnoch.androidn_ify.systemui.notifications.StatusBarHeaderHooks.java", "BodyUseAPI": ["((android.view.View) (de.robv.android.xposed.XposedHelpers.getObjectField(param.thisObject, \"mBackgroundImage\"))).setVisibility(View.GONE)", "de.robv.android.xposed.XposedHelpers.getObjectField(param.thisObject,java.lang.String)"], "Fixed commit": "2abaebf4ae2c309cfcb6873c7905a45524d140c9", "Url": "https://api.github.com/repos/Unpublished/AndroidN-ify", "Date": "2016-09-18T18:48:46Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return com.emc.sa.workflow.WorkflowHelper.toWorkflowDocumentJson(results.get(0)); } catch (java.io.IOException e) { throw new java.lang.RuntimeException((\"Failed to deserialize workflow document \" + workflowName), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/8119/buggy-version/vipr-portal.com.emc.sa.common.src.java.com.emc.sa.catalog.CatalogServiceManagerImpl.java", "BodyUseAPI": ["com.emc.sa.workflow.WorkflowHelper.toWorkflowDocumentJson(results.get(0))", "java.util.List<com.emc.storageos.db.client.model.uimodels.OrchestrationWorkflow>.get(int)"], "Fixed commit": "857aff70c4a160646f7f713a83435d86e0e6bfa3", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-11-22T19:58:39Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { s = generateHtml(s); mChordProContentTV.setText(org.elitanaroda.domcikuvzpevnik.Utils.fromHtml(s)); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/6885/buggy-version/app.src.main.java.org.elitanaroda.domcikuvzpevnik.ChordProActivity.java", "BodyUseAPI": ["org.elitanaroda.domcikuvzpevnik.Utils.fromHtml(java.lang.String)", "org.elitanaroda.domcikuvzpevnik.ChordProActivity.LoadChordPro.generateHtml(java.lang.String)", "android.widget.TextView.setText(org.elitanaroda.domcikuvzpevnik.Utils.fromHtml(s))"], "Fixed commit": "16e085dbd891af7dde1a8f0e8087da6903aaa61d", "Url": "https://api.github.com/repos/tragram/DomcikuvZpevnik", "Date": "2017-04-11T16:09:24Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.apache.synapse.transport.passthru.util.RelayUtils.consumeAndDiscardMessage(axis2MC); } catch (org.apache.axis2.AxisFault axisFault) { org.wso2.carbon.apimgt.gateway.handlers.security.APIAuthenticationHandler.log.error(\"Error occurred while consuming and discarding the message\", axisFault); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/5128/buggy-version/components.apimgt.org.wso2.carbon.apimgt.gateway.src.main.java.org.wso2.carbon.apimgt.gateway.handlers.security.APIAuthenticationHandler.java", "BodyUseAPI": ["org.apache.synapse.transport.passthru.util.RelayUtils.consumeAndDiscardMessage(org.apache.axis2.context.MessageContext)"], "Fixed commit": "9993be818ed82577e3f58fde4e4274ad8f1e64ba", "Url": "https://api.github.com/repos/lakmali/carbon-apimgt", "Date": "2015-12-14T13:45:25Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { connection.connect(port); } catch (java.lang.Exception e) { throw new java.lang.Exception((((\"Connection to device at port \\\"\" + port) + \"\\\" could not be established. Reason: \") + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V113/1544/buggy-version/src.main.java.de.uniluebeck.itm.wsn.deviceutils.macreader.DeviceMacReaderImpl.java", "BodyUseAPI": ["de.uniluebeck.itm.wsn.drivers.core.Connection.connect(java.lang.String)"], "Fixed commit": "0a483184e8c1243405fbd9874a08c17f05b8eb65", "Url": "https://api.github.com/repos/itm/wsn-device-utils", "Date": "2011-06-14T12:37:56Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(1000); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6003/buggy-version/reactivesocket-tck-drivers.src.main.java.io.reactivesocket.tckdrivers.client.JavaClientDriver.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "df2fd9229fc01e8cbf05953624b2c3781293662e", "Url": "https://api.github.com/repos/xytosis/reactivesocket-java", "Date": "2016-07-30T23:41:40Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.github.dreadslicer.tekkitrestrict.lib.TRCharge s = maxEU.get(maxEUStr.indexOf(tstr)); net.minecraft.server.Item si = mcItemStack.getItem(); net.minecraft.server.NBTTagCompound nbttagcompound = ic2.common.StackUtil.getOrCreateNbtData(mcItemStack); if (si instanceof ic2.common.ItemArmorElectric) { ic2.common.ItemArmorElectric ci = ((ic2.common.ItemArmorElectric) (si)); if (((ci.maxCharge) != (s.maxcharge)) || ((ci.transferLimit) != (s.chargerate))) { this.addOriginalEU(ci.id, ci.maxCharge, ci.transferLimit, mcItemStack); double charge = nbttagcompound.getInt(\"charge\"); java.lang.Double newcharge = ((new java.lang.Double(charge)) * (new java.lang.Double(s.maxcharge))) / (new java.lang.Double(ci.maxCharge)); ci.maxCharge = s.maxcharge; ci.transferLimit = s.chargerate; nbttagcompound.setInt(\"charge\", newcharge.intValue()); ic2.common.ElectricItem.charge(mcItemStack, 10, 9999, true, false); changed = true; } }else if (si instanceof ic2.common.ItemElectricTool) { ic2.common.ItemElectricTool ci = ((ic2.common.ItemElectricTool) (si)); if (((ci.maxCharge) != (s.maxcharge)) || ((ci.transferLimit) != (s.chargerate))) { this.addOriginalEU(ci.id, ci.maxCharge, ci.transferLimit, mcItemStack); double charge = nbttagcompound.getInt(\"charge\"); java.lang.Double newcharge = ((new java.lang.Double(charge)) * (new java.lang.Double(s.maxcharge))) / (new java.lang.Double(ci.maxCharge)); ci.maxCharge = s.maxcharge; ci.transferLimit = s.chargerate; nbttagcompound.setInt(\"charge\", newcharge.intValue()); ic2.common.ElectricItem.charge(mcItemStack, 10, 9999, true, false); changed = true; } }else if (si instanceof ic2.common.ElectricItem) { ic2.common.ElectricItem ci = ((ic2.common.ElectricItem) (si)); if (((ci.maxCharge) != (s.maxcharge)) || ((ci.transferLimit) != (s.chargerate))) { this.addOriginalEU(ci.id, ci.maxCharge, ci.transferLimit, mcItemStack); double charge = nbttagcompound.getInt(\"charge\"); java.lang.Double newcharge = ((new java.lang.Double(charge)) * (new java.lang.Double(s.maxcharge))) / (new java.lang.Double(ci.maxCharge)); ci.maxCharge = s.maxcharge; ci.transferLimit = s.chargerate; nbttagcompound.setInt(\"charge\", newcharge.intValue()); ic2.common.ElectricItem.charge(mcItemStack, 10, 9999, true, false); changed = true; } } } catch (java.lang.Exception ex) { com.github.dreadslicer.tekkitrestrict.TRLogger.Log(\"debug\", (\"Error: [Decharger[7] thread] \" + (ex.getMessage()))); com.github.dreadslicer.tekkitrestrict.Log.Exception(ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1188/buggy-version/TekkitRestrict.src.com.github.dreadslicer.tekkitrestrict.TRThread.java", "BodyUseAPI": ["net.minecraft.server.NBTTagCompound.getInt(java.lang.String)", "java.util.List<com.github.dreadslicer.tekkitrestrict.lib.TRCharge>.get(int)", "net.minecraft.server.NBTTagCompound.getInt(java.lang.String)", "com.github.dreadslicer.tekkitrestrict.DisableItemThread.addOriginalEU(ci.id,ci.maxCharge,ci.transferLimit,org.bukkit.inventory.ItemStack)", "net.minecraft.server.NBTTagCompound.setInt(java.lang.String,int)", "ic2.common.ElectricItem.charge(org.bukkit.inventory.ItemStack,int,int,boolean,boolean)", "java.lang.Double.intValue()", "com.github.dreadslicer.tekkitrestrict.DisableItemThread.addOriginalEU(ci.id,ci.maxCharge,ci.transferLimit,org.bukkit.inventory.ItemStack)", "ic2.common.ElectricItem.charge(org.bukkit.inventory.ItemStack,int,int,boolean,boolean)", "java.lang.Double.intValue()", "java.util.List<java.lang.String>.indexOf(java.lang.String)", "net.minecraft.server.NBTTagCompound.setInt(java.lang.String,int)", "java.lang.Double.intValue()", "org.bukkit.inventory.ItemStack.getItem()", "com.github.dreadslicer.tekkitrestrict.DisableItemThread.addOriginalEU(ci.id,ci.maxCharge,ci.transferLimit,org.bukkit.inventory.ItemStack)", "net.minecraft.server.NBTTagCompound.setInt(java.lang.String,int)", "ic2.common.StackUtil.getOrCreateNbtData(org.bukkit.inventory.ItemStack)", "net.minecraft.server.NBTTagCompound.getInt(java.lang.String)", "ic2.common.ElectricItem.charge(org.bukkit.inventory.ItemStack,int,int,boolean,boolean)"], "Fixed commit": "d821406e8fcf1d665adb6d3d657c92c2a9b7ad48", "Url": "https://api.github.com/repos/EterniaLogic/TekkitRestrict", "Date": "2013-06-15T09:33:23Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return org.toilelibre.libe.athg2sms.business.sms.Sms.Part.valueOf(input.toUpperCase()); } catch (java.lang.IllegalArgumentException iae) { return org.toilelibre.libe.athg2sms.business.sms.Sms.Part.UNKNOWN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3552/buggy-version/src.org.toilelibre.libe.athg2sms.business.sms.Sms.java", "BodyUseAPI": ["org.toilelibre.libe.athg2sms.business.sms.Sms.Part.valueOf(java.lang.String)", "java.lang.String.toUpperCase()"], "Fixed commit": "0c37496d4f83a9d7f57711a7e84f686b7f79baca", "Url": "https://api.github.com/repos/libetl/athg2sms", "Date": "2017-02-13T15:38:33Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.Collections.sort(vcfRecordLst, getVcfComparator()); } catch (java.lang.IllegalArgumentException e) { org.opencb.opencga.storage.hadoop.variant.archive.ArchiveHelper.getLog().error(\"Issue with comparator: \"); for (org.opencb.biodata.models.variant.protobuf.VcfSliceProtos.VcfRecord r : vcfRecordLst) { org.opencb.opencga.storage.hadoop.variant.archive.ArchiveHelper.getLog().error(r.toString()); } throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2500/buggy-version/opencga-storage.opencga-storage-hadoop.src.main.java.org.opencb.opencga.storage.hadoop.variant.archive.ArchiveHelper.java", "BodyUseAPI": ["java.util.Collections.sort(java.util.List<org.opencb.biodata.models.variant.protobuf.VcfSliceProtos.VcfRecord>,org.opencb.opencga.storage.hadoop.variant.archive.VcfRecordComparator)", "org.opencb.opencga.storage.hadoop.variant.archive.ArchiveHelper.getVcfComparator()"], "Fixed commit": "5b8272be7bd973450f239b1be4d657681da6bded", "Url": "https://api.github.com/repos/opencb/opencga", "Date": "2015-11-23T15:07:51Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { javax.tools.FileObject f = createResource(name); java.io.OutputStream os = f.openOutputStream(); p.store(os, null); os.close(); } catch (javax.annotation.processing.FilerException e) { if (e.getMessage().contains(\"Attempt to reopen\")) { java.io.StringWriter sw = new java.io.StringWriter(); e.printStackTrace(new java.io.PrintWriter(sw)); processingEnv.getMessager().printMessage(javax.tools.Diagnostic.Kind.WARNING, (\"Failed to reopen, but this can\\'t happen! See http://jenkins-ci.org/issue/11739\\n\" + sw)); return; } throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2879/buggy-version/core.src.main.java.org.kohsuke.stapler.jsr269.AbstractProcessorImpl.java", "BodyUseAPI": ["java.io.OutputStream.close()", "org.kohsuke.stapler.jsr269.AbstractProcessorImpl.createResource(java.lang.String)", "javax.tools.FileObject.openOutputStream()", "java.util.Properties.store(java.io.OutputStream,<nulltype>)"], "Fixed commit": "6f70cba5299da922c4951d8e8b94461aaeae8725", "Url": "https://api.github.com/repos/ohtake/stapler", "Date": "2011-11-15T20:56:01Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { super.onActivityResult(requestCode, resultCode, data); inApp.comprobarCompra(requestCode, resultCode, data, this); android.graphics.Bitmap bp = ((android.graphics.Bitmap) (data.getExtras().get(\"data\"))); iv.setImageBitmap(bp); } catch (java.lang.NullPointerException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/598/buggy-version/app.src.main.java.org.aficiones.noticias.nerdynews.Perfil.PerfilActivity.java", "BodyUseAPI": ["data.getExtras().get(java.lang.String)", "org.aficiones.noticias.nerdynews.Utils.InApp.comprobarCompra(int,int,android.content.Intent,org.aficiones.noticias.nerdynews.Perfil.PerfilActivity)", "android.widget.ImageView.setImageBitmap(android.graphics.Bitmap)", "android.content.Intent.getExtras()", "android.support.v7.app.AppCompatActivity.onActivityResult(int,int,android.content.Intent)"], "Fixed commit": "7984980d906794e304caa8917da0847c7d26047e", "Url": "https://api.github.com/repos/proyectonerdy/nerdynews", "Date": "2017-12-19T19:37:35Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.io.DataInputStream in = new java.io.DataInputStream(new java.io.FileInputStream(file)); in.skip((init - 1)); dat = new byte[(fin + 1) - init]; in.readFully(dat); in.close(); } catch (java.lang.Exception e) { java.lang.System.err.println(\"could not process range request\"); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5690/buggy-version/MediaStore.java", "BodyUseAPI": ["java.io.DataInputStream.readFully(byte[])", "java.io.DataInputStream.skip(int)", "java.io.DataInputStream.close()"], "Fixed commit": "c32b3c8683aa37d10a4d2790861ef27776940e27", "Url": "https://api.github.com/repos/devasia1000/youtube_playback", "Date": "2013-09-13T11:15:47Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { s = con.createStatement(); } catch (java.lang.NullPointerException e) { return e.getMessage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5460/buggy-version/src.com.look.RecentFeed.java", "BodyUseAPI": ["java.sql.Connection.createStatement()"], "Fixed commit": "ca7613fc2cd6f7603320e9673462170bedd16065", "Url": "https://api.github.com/repos/Look-Web/Look", "Date": "2015-04-08T16:30:39Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { timeout = java.lang.Integer.valueOf(value); } catch (java.lang.NumberFormatException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3652/buggy-version/spring-cloud-commons.src.main.java.org.springframework.cloud.util.InetUtils.java", "BodyUseAPI": ["java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "eb67c2fe5ae6a8599569f9ad9cbc6dd1738029a8", "Url": "https://api.github.com/repos/jmnarloch/spring-cloud-commons", "Date": "2015-12-08T16:28:12Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.memberRegistrationDate = new java.util.Date(); java.lang.Thread.sleep(100); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5628/buggy-version/src.com.andela.model.Member.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "03a3766ff28376c8cb3062a2f19edf87db3c01aa", "Url": "https://api.github.com/repos/spykins/checkpointone", "Date": "2015-12-23T16:57:53Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { sendRegistrationToServer(refreshedToken); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5270/buggy-version/android.src.main.java.com.humaniq.apilib.fcm.HumaniqFirebaseInstanceIDService.java", "BodyUseAPI": ["com.humaniq.apilib.fcm.HumaniqFirebaseInstanceIDService.sendRegistrationToServer(java.lang.String)"], "Fixed commit": "1bdba94173de99d16a4b6b95e2ebf2ed9bab1266", "Url": "https://api.github.com/repos/humaniq/react-native-android-library-humaniq-api", "Date": "2017-07-31T14:56:18Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { context.unregisterReceiver(this); } catch (java.lang.IllegalArgumentException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/9095/buggy-version/src.org.tjsimmons.SuperAndroidBatteryDonate.BatteryUpdateService.java", "BodyUseAPI": ["android.content.Context.unregisterReceiver(org.tjsimmons.SuperAndroidBatteryDonate.BatteryUpdateService.2)"], "Fixed commit": "a20c498712093099371e23462af77ca6fc2ccbab", "Url": "https://api.github.com/repos/tjsimmons/super-android-battery-donate", "Date": "2012-04-28T03:19:14Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return java.lang.Double.parseDouble(mealPriceText); } catch (java.lang.NumberFormatException nfe) { android.util.Log.e(edu.chapman.cpsc356.harna100.tipcalculator.MainActivity.TAG, \"getMealPrice: Error parsing Text\", nfe); return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6824/buggy-version/app.src.main.java.edu.chapman.cpsc356.harna100.tipcalculator.MainActivity.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "48276aeef3f4bd70e9aff9906365204250817ecb", "Url": "https://api.github.com/repos/ChapmanCPSC356Fall2017/service-tip-calculator-harna100", "Date": "2017-09-09T18:02:31Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (((dateFormat.parse(exp).getTime()) - (date.getTime())) < 0) exp = dateFormat.format(date); } catch (java.text.ParseException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/3864/buggy-version/LeftOvers.app.src.main.java.com.randybiglow.leftovers.MainActivity.java", "BodyUseAPI": ["java.util.Date.getTime()", "java.text.DateFormat.format(java.util.Date)", "java.util.Date.getTime()", "java.text.DateFormat.parse(java.lang.String)"], "Fixed commit": "48eda67a4c0a25fb89e22df91181b722cb472ef1", "Url": "https://api.github.com/repos/zprdarrell/Project4", "Date": "2016-06-21T18:44:03Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(100); } catch (java.lang.InterruptedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7870/buggy-version/src.ourGame.GerenciadorMemoria.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "388d8fb90dfdc2931dc33a44b7d2f59caaec5450", "Url": "https://api.github.com/repos/vrvs/ProjetoPLC", "Date": "2017-12-07T16:47:16Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { appUser.setUserName(currentUser.toString()); } catch (java.lang.Exception e) { android.util.Log.d(com.example.badge.androidapplication.SignUp.TAG, (\"onStart: \" + (e.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1753/buggy-version/app.src.main.java.com.example.badge.androidapplication.SignUp.java", "BodyUseAPI": ["com.example.badge.androidapplication.Models.User.setUserName(currentUser.toString())", "com.google.firebase.auth.FirebaseUser.toString()"], "Fixed commit": "a159c38414f54ab512e7a34b0a9ec6f1fe0cf9ef", "Url": "https://api.github.com/repos/badger-orson/AndroidApplication", "Date": "2017-12-04T21:18:49Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.reflect.Field idField = baseActionClass.getDeclaredField(\"viewId\"); idField.setAccessible(true); viewId = idField.getInt(action); } catch (java.lang.NoSuchFieldException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4976/buggy-version/src.com.matejdro.pebblenotificationcenter.notifications.NotificationParser.java", "BodyUseAPI": ["java.lang.reflect.Field.getInt(java.lang.Object)", "java.lang.Class.getDeclaredField(java.lang.String)", "java.lang.reflect.Field.setAccessible(boolean)"], "Fixed commit": "6c9b843a65b8acba4cfa912bf61ac88fdf64dc2f", "Url": "https://api.github.com/repos/matejdro/PebbleNotificationCenter-Android", "Date": "2014-01-03T14:47:04Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { context.setSubjects(((java.util.ArrayList<java.lang.String>) (this.getSubjectList()))); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/4665/buggy-version/EsgiRouter.WEB-INF.src.org.esgi.module.index.Index.java", "BodyUseAPI": ["org.esgi.web.action.IContext.setSubjects(java.util.List<java.lang.String>)", "org.esgi.module.index.Index.getSubjectList()"], "Fixed commit": "4530873184342dc46887d78ee4b0b1bdba39fb64", "Url": "https://api.github.com/repos/seyuf/JavaWeb", "Date": "2014-07-17T16:35:32Z"},
{"Line": "=>673", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { new uk.org.ngo.squeezer.dialogs.EnableWifiDialog().show(getSupportFragmentManager(), \"EnableWifiDialog\"); } catch (java.lang.IllegalStateException e) { android.util.Log.i(getTag(), (\"EnableWifiDialog.show() was not allowed: \" + e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8242/buggy-version/src.uk.org.ngo.squeezer.SqueezerActivity.java", "BodyUseAPI": ["uk.org.ngo.squeezer.SqueezerActivity.16.getSupportFragmentManager()", "uk.org.ngo.squeezer.dialogs.EnableWifiDialog.show(getSupportFragmentManager(),java.lang.String)"], "Fixed commit": "c6dfcc1115c8c845e30a57f11f43199c6f8428c5", "Url": "https://api.github.com/repos/nikclayton/android-squeezer", "Date": "2012-03-08T22:37:05Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { response.setEntity(connection.getInputStream()); } catch (java.io.IOException ioe) { response.setEntity(connection.getErrorStream()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2225/buggy-version/src.main.java.org.cobbzilla.util.http.HttpUtil.java", "BodyUseAPI": ["java.net.HttpURLConnection.getInputStream()", "org.cobbzilla.util.http.HttpResponseBean.setEntity(java.io.InputStream)"], "Fixed commit": "2ac9b9e12a3062db8858cc6adcc1397e46eaed10", "Url": "https://api.github.com/repos/cobbzilla/cobbzilla-utils", "Date": "2017-12-27T14:48:10Z"},
{"Line": "=>364", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { final com.podcatcher.deluxe.model.sync.SyncController controller = com.podcatcher.deluxe.model.sync.ControllerImpl.create(podcatcher, com.podcatcher.deluxe.model.sync.ControllerImpl.valueOf(id)); activeControllers.add(controller); controller.setListener(this); controller.setMode(SyncMode.SEND_ONLY); } catch (java.lang.Throwable th) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8711/buggy-version/app.src.main.java.com.podcatcher.deluxe.model.SyncManager.java", "BodyUseAPI": ["com.podcatcher.deluxe.model.sync.ControllerImpl.create(com.podcatcher.deluxe.Podcatcher,com.podcatcher.deluxe.model.sync.ControllerImpl.valueOf(id))", "com.podcatcher.deluxe.model.sync.ControllerImpl.valueOf(java.lang.String)", "com.podcatcher.deluxe.model.sync.SyncController.setMode(SyncMode.SEND_ONLY)", "com.podcatcher.deluxe.model.sync.SyncController.setListener(com.podcatcher.deluxe.model.SyncManager)", "java.util.Set<com.podcatcher.deluxe.model.sync.SyncController>.add(com.podcatcher.deluxe.model.sync.SyncController)"], "Fixed commit": "ee200fe42a9c67ee7a7c414c2440af7ade810ab8", "Url": "https://api.github.com/repos/salema/Podcatcher-Deluxe-Android-Studio", "Date": "2016-05-01T18:57:07Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Double.parseDouble(amount.getText()); } catch (java.lang.NumberFormatException nfe) { javax.swing.JOptionPane.showMessageDialog(null, \"Amount is incorrect!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/8831/buggy-version/Team_14_verve3.src.Panels.ClientPanel.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)", "javax.swing.JTextField.getText()"], "Fixed commit": "b1748f5f26fbd58918a3ff3d75c944f2559156fb", "Url": "https://api.github.com/repos/SoporAeternus/Verve3", "Date": "2013-04-18T01:33:02Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.bugsense.trace.BugSenseHandler.initAndStartSession(this, Constants.BUGSENSE_API_KEY); } catch (java.lang.Exception e) { android.util.Log.e(es.ugr.swad.swadroid.modules.notifications.NotificationsSyncAdapterService.TAG, \"Error initializing BugSense\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2817/buggy-version/SWADroid.src.es.ugr.swad.swadroid.modules.notifications.NotificationsSyncAdapterService.java", "BodyUseAPI": ["com.bugsense.trace.BugSenseHandler.initAndStartSession(es.ugr.swad.swadroid.modules.notifications.NotificationsSyncAdapterService,Constants.BUGSENSE_API_KEY)"], "Fixed commit": "33d90592a90202767d66629d72d73e30f33502aa", "Url": "https://api.github.com/repos/Amab/SWADroid", "Date": "2013-11-19T18:32:36Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.bugsense.trace.BugSenseHandler.closeSession(this); } catch (java.lang.Exception e) { android.util.Log.e(es.ugr.swad.swadroid.modules.notifications.NotificationsSyncAdapterService.TAG, \"Error initializing BugSense\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2817/buggy-version/SWADroid.src.es.ugr.swad.swadroid.modules.notifications.NotificationsSyncAdapterService.java", "BodyUseAPI": ["com.bugsense.trace.BugSenseHandler.closeSession(es.ugr.swad.swadroid.modules.notifications.NotificationsSyncAdapterService)"], "Fixed commit": "33d90592a90202767d66629d72d73e30f33502aa", "Url": "https://api.github.com/repos/Amab/SWADroid", "Date": "2013-11-19T18:32:36Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { transaction.commit(); } catch (java.lang.IllegalStateException ex) { android.util.Log.e(org.onebusaway.android.ui.TripPlanActivity.TAG, \"Error attempting to switch fragments. Likely screen rotated during trip plan.\"); android.widget.Toast.makeText(this, getString(R.string.tripplanner_error_not_defined), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/720/buggy-version/onebusaway-android.src.main.java.org.onebusaway.android.ui.TripPlanActivity.java", "BodyUseAPI": ["android.support.v4.app.FragmentTransaction.commit()"], "Fixed commit": "9c593eb7b4e5ff599075486aaf5253c8989eda80", "Url": "https://api.github.com/repos/camsys/onebusaway-android", "Date": "2016-06-17T17:02:42Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (map != null) { curr = map.get(subjects.get(i)).get(numbers.get(i)).createCopy(); }else { curr = parser.parseCourse(subjects.get(i), numbers.get(i)); } } catch (java.lang.Exception e) { throw new java.lang.Exception(((((subjects.get(i)) + \" \") + (numbers.get(i))) + \" does not exist on the timetable\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6190/buggy-version/src.scheduler.ScheduleMaker.java", "BodyUseAPI": ["map.get(subjects.get(i)).get(numbers.get(i)).createCopy()", "scheduler.VTParser.parseCourse(subjects.get(i),numbers.get(i))", "scheduler.LinkedList<java.lang.String>.get(int)", "scheduler.LinkedList<java.lang.String>.get(int)", "java.util.HashMap<java.lang.String, java.util.HashMap<java.lang.String, scheduler.LinkedList<scheduler.VTCourse>>>.get(subjects.get(i))", "scheduler.LinkedList<java.lang.String>.get(int)", "map.get(subjects.get(i)).get(numbers.get(i))", "scheduler.LinkedList<java.lang.String>.get(int)"], "Fixed commit": "b76284471f70554231df1758aabad234d78513cb", "Url": "https://api.github.com/repos/PhillipNgo/pScheduler", "Date": "2016-10-23T18:45:51Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { modules.add(moduleClass.newInstance()); } catch (java.lang.Exception e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2455/buggy-version/vaadin-guice.src.main.java.com.vaadin.guice.server.GuiceVaadinServlet.java", "BodyUseAPI": ["java.util.List<java.lang.Module>.add(? extends java.lang.Module)", "java.lang.Class<? extends java.lang.Module>.newInstance()"], "Fixed commit": "c272a7d75782eb1395284e307bea0c3130e7e6c5", "Url": "https://api.github.com/repos/berndhopp/guice", "Date": "2015-12-10T10:46:41Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep((1000 * (i + 1))); } catch (java.lang.InterruptedException e1) { com.linkedin.camus.etl.kafka.common.EtlCounts.log.error((\"Caught interrupted exception between retries of publishing counts to Kafka. \" + (e1.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2329/buggy-version/camus-etl-kafka.src.main.java.com.linkedin.camus.etl.kafka.common.EtlCounts.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "8a51b2ae357c702b0774fa672286e72ae14d2e44", "Url": "https://api.github.com/repos/zliu41/camus", "Date": "2015-02-23T21:48:20Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((slotId != (-1)) && ((this.armorItems[slotId]) != null)) { return this.inventoryItems[this.getFirstSlotContainingItem(this.armorItems[slotId].itemID)]; } } catch (java.lang.ArrayIndexOutOfBoundsException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/973/buggy-version/Forge.1.6.4.mcp.src.minecraft.mca.inventory.Inventory.java", "BodyUseAPI": ["mca.inventory.Inventory.getFirstSlotContainingItem(this.armorItems[slotId].itemID)"], "Fixed commit": "a65129432857ba37eaf121933291732845977935", "Url": "https://api.github.com/repos/WildBamaBoy/minecraft-comes-alive", "Date": "2014-01-25T07:36:45Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { result = mapper.writeValueAsString(((\"<b>\" + (good.getTitle())) + \"</b> been successfully added in your cart!\")); } catch (com.fasterxml.jackson.core.JsonProcessingException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/522/buggy-version/src.main.java.ru.pelmegov.javashop.controller.CartController.java", "BodyUseAPI": ["ru.pelmegov.javashop.model.Good.getTitle()", "com.fasterxml.jackson.databind.ObjectMapper.writeValueAsString(((\"<b>\" + (good.getTitle())) + \"</b> been successfully added in your cart!\"))"], "Fixed commit": "b0d36920619af0613be21a0277e0fcbd02a86d95", "Url": "https://api.github.com/repos/pelmegov/javashop", "Date": "2017-01-29T08:34:25Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (null != (job.details().getLastBuild())) { statuses.put(job.getName(), job.details().getLastBuild().details().getResult().name()); }else { com.recursivechaos.johnny5.service.JenkinsService.logger.info(\"Job {} has not been built yet\", job.getName()); } } catch (java.lang.Exception e) { com.recursivechaos.johnny5.service.JenkinsService.logger.error(\"Failed to parse job data.\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1374/buggy-version/src.main.java.com.recursivechaos.johnny5.service.JenkinsService.java", "BodyUseAPI": ["org.slf4j.Logger.info(java.lang.String,job.getName())", "com.offbytwo.jenkins.model.Job.details()", "java.util.Map<java.lang.String, java.lang.String>.put(job.getName(),job.details().getLastBuild().details().getResult().name())", "job.details().getLastBuild()", "com.offbytwo.jenkins.model.Job.getName()", "com.offbytwo.jenkins.model.Job.details()", "job.details().getLastBuild()", "job.details().getLastBuild().details().getResult().name()", "job.details().getLastBuild().details().getResult()", "com.offbytwo.jenkins.model.Job.getName()", "job.details().getLastBuild().details()"], "Fixed commit": "aaaefc4a18ad7d51e4abbe403b9990c07de23070", "Url": "https://api.github.com/repos/AndrewBell/johnny5", "Date": "2015-12-07T15:29:46Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ui.view.MainFrame.implementNativeKeyHook(); } catch (java.lang.Throwable e) { java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/5065/buggy-version/src.ui.view.MainFrame.java", "BodyUseAPI": ["ui.view.MainFrame.implementNativeKeyHook()"], "Fixed commit": "30c855dcfa1f760ebd6748934d38855a0a36832c", "Url": "https://api.github.com/repos/cs2103aug2015-f10-3j/main", "Date": "2015-10-15T07:41:55Z"},
{"Line": "=>1244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.lgallardo.qbittorrentclientpro.MainActivity.data_timeout = java.lang.Integer.parseInt(sharedPrefs.getString(\"data_timeout\", \"8\")); } catch (java.lang.NumberFormatException e) { com.lgallardo.qbittorrentclientpro.MainActivity.data_timeout = 8; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2426/buggy-version/qBittorrentClient.src.com.lgallardo.qbittorrentclientpro.MainActivity.java", "BodyUseAPI": ["android.content.SharedPreferences.getString(java.lang.String,java.lang.String)", "java.lang.Integer.parseInt(sharedPrefs.getString(\"data_timeout\", \"8\"))"], "Fixed commit": "b099d8da6e048a69591adee238ebdf5e4f9a5ef1", "Url": "https://api.github.com/repos/lgallard/qBittorrent-Client", "Date": "2014-10-20T04:30:50Z"},
{"Line": "=>1231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.lgallardo.qbittorrentclientpro.MainActivity.refresh_period = java.lang.Integer.parseInt(sharedPrefs.getString(\"refresh_period\", \"120000\")); } catch (java.lang.NumberFormatException e) { com.lgallardo.qbittorrentclientpro.MainActivity.refresh_period = 120000; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2426/buggy-version/qBittorrentClient.src.com.lgallardo.qbittorrentclientpro.MainActivity.java", "BodyUseAPI": ["android.content.SharedPreferences.getString(java.lang.String,java.lang.String)", "java.lang.Integer.parseInt(sharedPrefs.getString(\"refresh_period\", \"120000\"))"], "Fixed commit": "b099d8da6e048a69591adee238ebdf5e4f9a5ef1", "Url": "https://api.github.com/repos/lgallard/qBittorrent-Client", "Date": "2014-10-20T04:30:50Z"},
{"Line": "=>1238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.lgallardo.qbittorrentclientpro.MainActivity.connection_timeout = java.lang.Integer.parseInt(sharedPrefs.getString(\"connection_timeout\", \"5\")); } catch (java.lang.NumberFormatException e) { com.lgallardo.qbittorrentclientpro.MainActivity.connection_timeout = 5; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2426/buggy-version/qBittorrentClient.src.com.lgallardo.qbittorrentclientpro.MainActivity.java", "BodyUseAPI": ["java.lang.Integer.parseInt(sharedPrefs.getString(\"connection_timeout\", \"5\"))", "android.content.SharedPreferences.getString(java.lang.String,java.lang.String)"], "Fixed commit": "b099d8da6e048a69591adee238ebdf5e4f9a5ef1", "Url": "https://api.github.com/repos/lgallard/qBittorrent-Client", "Date": "2014-10-20T04:30:50Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getCrossPlatformLookAndFeelClassName()); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1380/buggy-version/src.MainWindow.java", "BodyUseAPI": ["javax.swing.UIManager.setLookAndFeel(java.lang.String)", "javax.swing.UIManager.getCrossPlatformLookAndFeelClassName()"], "Fixed commit": "4ddbce1bceea365157a2556d3d1662597d107fc1", "Url": "https://api.github.com/repos/pcrglennon/altruists-egoists", "Date": "2012-12-10T05:57:36Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.view.SurfaceView surfaceView = ((android.view.SurfaceView) (context.findViewById(R.id.zxing_preview_view))); android.view.SurfaceHolder surfaceHolder = surfaceView.getHolder(); surfaceHolder.removeCallback(this); } catch (java.lang.ClassCastException e) { com.google.zxing.client.android.QRScannerView surfaceView = ((com.google.zxing.client.android.QRScannerView) (context.findViewById(R.id.zxing_preview_view))); android.view.SurfaceHolder surfaceHolder = surfaceView.getHolder(); surfaceHolder.removeCallback(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/2995/buggy-version/zxing-android.src.com.google.zxing.client.android.PreviewHandler.java", "BodyUseAPI": ["android.view.SurfaceView.getHolder()", "android.view.SurfaceHolder.removeCallback(com.google.zxing.client.android.PreviewHandler)", "com.google.zxing.client.android.CaptureActivity.findViewById(R.id.zxing_preview_view)"], "Fixed commit": "4557bafa39d17e078f1bb47ce91b9a30ed42d7a7", "Url": "https://api.github.com/repos/hansreichenbach-okta/zxing-android-minimal", "Date": "2014-10-03T22:23:58Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { fis = openFileInput(FILENAME); java.nio.channels.FileChannel fc = fis.getChannel(); java.nio.MappedByteBuffer bb = fc.map(java.nio.channels.FileChannel.MapMode.READ_ONLY, 0, fc.size()); result = java.nio.charset.Charset.defaultCharset().decode(bb).toString(); fis.close(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/1931/buggy-version/src.cs2114.speedrider1.LevelOneScreen.java", "BodyUseAPI": ["java.nio.channels.FileChannel.map(java.nio.channels.FileChannel.MapMode,int,long)", "cs2114.speedrider1.LevelOneScreen.openFileInput(java.lang.String)", "java.nio.charset.Charset.decode(java.nio.MappedByteBuffer)", "java.io.FileInputStream.close()", "java.nio.channels.FileChannel.size()", "java.io.FileInputStream.getChannel()", "java.nio.CharBuffer.toString()", "java.nio.charset.Charset.defaultCharset()"], "Fixed commit": "c1f132f3623a86aeacfe086fe522e34aa0ca46fa", "Url": "https://api.github.com/repos/dmoore09/Speed-Rider-Project", "Date": "2013-05-03T04:45:08Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { firebaseApp = com.google.firebase.FirebaseApp.getInstance(); } catch (java.lang.Exception instanceException) { try { firebaseApp = com.google.firebase.FirebaseApp.initializeApp(context, new com.google.firebase.FirebaseOptions.Builder().setApplicationId(context.getPackageName()).setGcmSenderId(com.cube.storm.MessageSettings.getInstance().getProjectNumber()).build()); } catch (java.lang.Exception initialiseException) { instanceException.printStackTrace(); initialiseException.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/7851/buggy-version/library.src.main.java.com.cube.storm.MessageSettings.java", "BodyUseAPI": ["com.google.firebase.FirebaseApp.getInstance()"], "Fixed commit": "647110ee4006f1d9d52a355d05458757c5d53845", "Url": "https://api.github.com/repos/3sidedcube/Android-LightningMessage", "Date": "2017-02-22T15:02:26Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (view.viewport.SkillPtAllocationViewport view : registeredViews) { view.receiveSkillInfo(getSkills(), skillPoints); } } catch (java.util.ConcurrentModificationException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/6648/buggy-version/src.model.skillset.BasicSkills.java", "BodyUseAPI": ["view.viewport.SkillPtAllocationViewport.receiveSkillInfo(model.skill.Skill[],int)", "model.skillset.BasicSkills.getSkills()"], "Fixed commit": "d002faaae5e32279c5700beb4a55a730c4dfb580", "Url": "https://api.github.com/repos/amstewart/LastRun", "Date": "2015-04-17T20:55:53Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return parser.parse(expressionReader, evaluationStack); } catch (java.text.ParseException e) { e.printStackTrace(); throw new java.lang.IllegalStateException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V114/63/buggy-version/src.main.java.com.kamaek.calculator.parsing.ParsingService.java", "BodyUseAPI": ["com.kamaek.calculator.parsing.ExpressionParser.parse(com.kamaek.calculator.ExpressionReader,com.kamaek.calculator.evaluationstack.EvaluationStack)"], "Fixed commit": "eca27e4b3629225f2373c39ca15ffd57dc821da8", "Url": "https://api.github.com/repos/kamaek/calculator", "Date": "2016-09-09T15:47:50Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { r.run(); } catch (java.lang.Throwable t) { t.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5294/buggy-version/src.dfh.thread.pool.ThreadPool.java", "BodyUseAPI": ["java.lang.Runnable.run()"], "Fixed commit": "52e0eadc6e830e1c296e936cbb1f640ac23f9613", "Url": "https://api.github.com/repos/dfhoughton/ThreadPool", "Date": "2013-08-31T19:54:24Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { testString = allStash.getString(\"next_change_id\"); } catch (java.lang.Exception oopsNoKey) { java.lang.System.out.println(\"ooops invalid info pulled try again later...\"); java.util.concurrent.TimeUnit.SECONDS.sleep(10); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3261/buggy-version/ConsumeKafka.java", "BodyUseAPI": ["JSONObject.getString(java.lang.String)"], "Fixed commit": "672bd600b03203b25b6eff63c02cebf13cd4a090", "Url": "https://api.github.com/repos/axl002/apitest", "Date": "2017-01-25T02:23:04Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { texture = org.newdawn.slick.opengl.TextureLoader.getTexture(\"PNG\", main.ResourceManager.getResourceAsStream(\"../res/img/player.png\")); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1422/buggy-version/UniQuest.src.main.Player.java", "BodyUseAPI": ["org.newdawn.slick.opengl.TextureLoader.getTexture(java.lang.String,main.ResourceManager.getResourceAsStream(\"../res/img/player.png\"))", "main.ResourceManager.getResourceAsStream(java.lang.String)"], "Fixed commit": "326806e82efd6ce9032a5e5ca383d4a077e556f8", "Url": "https://api.github.com/repos/ayrtonmassey/OOP-Project", "Date": "2013-03-22T17:41:17Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { parentIf.setThenStmt(n.getThenStmt().clone()); parentIf.setCondition(condition); } catch (java.lang.CloneNotSupportedException e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7144/buggy-version/src.main.java.org.walkmod.pmd.ruleset.java.basic.visitors.CollapsibleIfStatements.java", "BodyUseAPI": ["org.walkmod.javalang.ast.stmt.IfStmt.setThenStmt(n.getThenStmt().clone())", "org.walkmod.javalang.ast.stmt.IfStmt.getThenStmt()", "org.walkmod.javalang.ast.stmt.IfStmt.setCondition(org.walkmod.javalang.ast.expr.BinaryExpr)", "n.getThenStmt().clone()"], "Fixed commit": "4d2c291c0d9eba4c1791ae6d81e084545a17498e", "Url": "https://api.github.com/repos/walkmod/walkmod-pmd-plugin", "Date": "2017-03-07T15:14:20Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { parentIf.setThenStmt(n.getThenStmt().clone()); parentIf.setCondition(condition); } catch (java.lang.CloneNotSupportedException e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7144/buggy-version/src.main.java.org.walkmod.pmd.ruleset.java.basic.visitors.CollapsibleIfStatements.java", "BodyUseAPI": ["org.walkmod.javalang.ast.stmt.IfStmt.setCondition(org.walkmod.javalang.ast.expr.BinaryExpr)", "org.walkmod.javalang.ast.stmt.IfStmt.getThenStmt()", "n.getThenStmt().clone()", "org.walkmod.javalang.ast.stmt.IfStmt.setThenStmt(n.getThenStmt().clone())"], "Fixed commit": "4d2c291c0d9eba4c1791ae6d81e084545a17498e", "Url": "https://api.github.com/repos/walkmod/walkmod-pmd-plugin", "Date": "2017-03-07T15:14:20Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.python.pydev.parser.jython.Visitor v = new org.python.pydev.parser.jython.Visitor() { protected java.lang.Object unhandled_node(org.python.pydev.parser.jython.SimpleNode node) throws java.lang.Exception { line[0] = java.lang.Math.min(line[0], ((node.beginLine) - 1)); return this; } }; lastNodeBeforePassedLine.accept(v); } catch (java.lang.Exception e) { org.python.pydev.core.log.Log.log(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2400/buggy-version/plugins.org.python.pydev.refactoring.src.org.python.pydev.refactoring.coderefactoring.extractlocal.edit.CreateLocalVariableEdit.java", "BodyUseAPI": ["org.python.pydev.parser.jython.SimpleNode.accept(org.python.pydev.parser.jython.Visitor)", "java.lang.Math.min(int,((node.beginLine) - 1))"], "Fixed commit": "8d4edf9debffb0e2968d7f82b0fcdde52115f7d2", "Url": "https://api.github.com/repos/aptana/Pydev", "Date": "2011-07-10T23:47:43Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.restart(cluedo.Main.createBoardFromFile(\"board.txt\")); } catch (java.io.IOException err) { java.lang.System.out.println(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6588/buggy-version/src.cluedo.ui.CluedoUI.java", "BodyUseAPI": ["cluedo.ui.CluedoUI.restart(cluedo.Main.createBoardFromFile(\"board.txt\"))", "cluedo.Main.createBoardFromFile(java.lang.String)"], "Fixed commit": "0ea562df926efe216170dbf606d1d079e845b571", "Url": "https://api.github.com/repos/LizbethKim/Cluedo", "Date": "2014-08-16T03:40:31Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { cloneBook = ((com.example.cloudlibrary.model.Book) (item.clone())); cloneBook.setBitmap(null); } catch (java.lang.CloneNotSupportedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7905/buggy-version/src.com.example.cloudlibrary.activities.BooksListActivity.java", "BodyUseAPI": ["com.example.cloudlibrary.model.Book.clone()", "com.example.cloudlibrary.model.Book.setBitmap(<nulltype>)"], "Fixed commit": "3b3f01a901d2530bd18f309b6706f976c094ce35", "Url": "https://api.github.com/repos/Jilberta/CloudLibrary", "Date": "2014-03-16T05:02:14Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { storage.saveTaskTracker(presentTaskTracker); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3543/buggy-version/task-tracker.src.main.java.main.logic.command.StorageCommand.java", "BodyUseAPI": ["main.logic.command.StorageCommand.saveTaskTracker(main.model.ReadOnlyTaskTracker)"], "Fixed commit": "f12a056ea3af414b5f80ac1e0bda2a0c344c17d4", "Url": "https://api.github.com/repos/CS2103AUG2016-T09-C3/main", "Date": "2016-11-04T05:17:06Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (((socket) != null) && (!(socket.isClosed()))) android.util.Log.d(cordova.plugin.tgsiwifi.GroupOwnerSocketHandler.TAG, \"Group Owner Socket is Closed\"); socket.close(); } catch (java.io.IOException ioe) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/2551/buggy-version/src.android.GroupOwnerSocketHandler.java", "BodyUseAPI": ["java.net.ServerSocket.isClosed()", "android.util.Log.d(java.lang.String,java.lang.String)", "java.net.ServerSocket.close()"], "Fixed commit": "3c751522042be84478dcdd7761ffc380237a1de1", "Url": "https://api.github.com/repos/tgsi/project", "Date": "2017-04-21T05:47:38Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { age = java.lang.Integer.parseInt(request.getParameter(\"age\")); } catch (java.lang.NumberFormatException e) { java.lang.System.out.println(\"Invalid age\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4346/buggy-version/src.controller.RegisterServlet.java", "BodyUseAPI": ["java.lang.Integer.parseInt(request.getParameter(\"age\"))", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Fixed commit": "1990e429a7307313ab261ad21d7f019b78e4d988", "Url": "https://api.github.com/repos/beloslava/WIFRepo", "Date": "2016-09-19T21:56:14Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { expenseManager = new lk.ac.mrt.cse.dbs.simpleexpensemanager.control.PersistentExpenseManager(getApplicationContext()); } catch (lk.ac.mrt.cse.dbs.simpleexpensemanager.control.exception.ExpenseManagerException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6722/buggy-version/app.src.main.java.lk.ac.mrt.cse.dbs.simpleexpensemanager.ui.MainActivity.java", "BodyUseAPI": ["lk.ac.mrt.cse.dbs.simpleexpensemanager.ui.MainActivity.getApplicationContext()"], "Fixed commit": "f700111d19ab023224c3fcc2a1193a3647f5ec96", "Url": "https://api.github.com/repos/Rashindrie/SimpleExpenseManager", "Date": "2016-11-20T14:59:55Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { final javax.ws.rs.client.Invocation.Builder request = buildRequest(); if ((state.get()) == (org.jboss.resteasy.plugins.providers.sse.SseEventSourceImpl.State.OPEN)) { eventInput = request.get(javax.ws.rs.sse.SseEventInput.class); } } finally { if ((connectedLatch) != null) { connectedLatch.countDown(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/82/buggy-version/providers.sse.src.main.java.org.jboss.resteasy.plugins.providers.sse.SseEventSourceImpl.java", "BodyUseAPI": ["org.jboss.resteasy.plugins.providers.sse.SseEventSourceImpl.EventHandler.buildRequest()", "Invocation.Builder.get(java.lang.Class)", "java.util.concurrent.atomic.AtomicReference<org.jboss.resteasy.plugins.providers.sse.SseEventSourceImpl.State>.get()"], "Fixed commit": "9aa70dfe2a1dbf8598888363f38b78d0c08e5dc3", "Url": "https://api.github.com/repos/asoldano/Resteasy", "Date": "2017-02-10T22:51:23Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { statusBarNotification(R.drawable.clouds, notificationList.get(i).getName(), \"WeatherOracle\", (((((notificationList.get(i).getName()) + \". Location:\") + (notificationList.get(i).getFilter().getLocationName())) + \". First Occur at\") + (notificationList.get(i).getWeatherData().get(0).getTimeString()))); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5422/buggy-version/EclipseProject.src.weatherOracle.activity.NotificationActivity.java", "BodyUseAPI": ["notificationList.get(i).getName()", "notificationList.get(i).getWeatherData().get(int)", "notificationList.get(i).getName()", "notificationList.get(i).getWeatherData()", "java.util.List<weatherOracle.notification.Notification>.get(int)", "notificationList.get(i).getFilter().getLocationName()", "notificationList.get(i).getFilter()", "java.util.List<weatherOracle.notification.Notification>.get(int)", "notificationList.get(i).getWeatherData().get(0).getTimeString()", "java.util.List<weatherOracle.notification.Notification>.get(int)", "weatherOracle.activity.NotificationActivity.statusBarNotification(R.drawable.clouds,notificationList.get(i).getName(),java.lang.String,(((((notificationList.get(i).getName()) + \". Location:\") + (notificationList.get(i).getFilter().getLocationName())) + \". First Occur at\") + (notificationList.get(i).getWeatherData().get(0).getTimeString())))", "java.util.List<weatherOracle.notification.Notification>.get(int)"], "Fixed commit": "e08256aacf9b8b0f3bb7071b5273952e06d04866", "Url": "https://api.github.com/repos/Tim727/WeatherOracle", "Date": "2012-05-29T22:32:55Z"},
{"Line": "=>633", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mContext.unregisterReceiver(mRingerModeReceiver); } catch (java.lang.IllegalArgumentException ie) { android.util.Log.w(com.android.internal.policy.impl.GlobalActions.TAG, ie); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1379/buggy-version/policy.src.com.android.internal.policy.impl.GlobalActions.java", "BodyUseAPI": ["android.content.Context.unregisterReceiver(android.content.BroadcastReceiver)"], "Fixed commit": "242b3143cf7f65db7305b594ce05ebb0d5c32688", "Url": "https://api.github.com/repos/TeamSourcery/frameworks_base", "Date": "2013-01-18T09:01:26Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { env.setCurrent(env.getFactory().makeReal(java.lang.Double.parseDouble(s0))); return true; } catch (java.lang.NumberFormatException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3532/buggy-version/org.spoofax.interpreter.core.src.main.java.org.spoofax.interpreter.library.ssl.SSL_string_to_real.java", "BodyUseAPI": ["org.spoofax.interpreter.core.IContext.getFactory()", "org.spoofax.interpreter.core.IContext.setCurrent(env.getFactory().makeReal(java.lang.Double.parseDouble(s0)))", "env.getFactory().makeReal(double)", "java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "7719e4266a048b6192db2e6f1498499ace32fc5b", "Url": "https://api.github.com/repos/metaborg/mb-exec", "Date": "2015-10-29T13:53:06Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { s0 = s.trim(); if (((s0.length()) > 0) && ((s0.charAt(0)) == '+')) s0 = s0.substring(1); env.setCurrent(env.getFactory().makeReal(java.lang.Double.parseDouble(s0))); return true; } catch (java.lang.NumberFormatException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3532/buggy-version/org.spoofax.interpreter.core.src.main.java.org.spoofax.interpreter.library.ssl.SSL_string_to_real.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.charAt(int)", "org.spoofax.interpreter.core.IContext.getFactory()", "java.lang.Double.parseDouble(java.lang.String)", "java.lang.String.length()", "java.lang.String.trim()", "env.getFactory().makeReal(double)", "org.spoofax.interpreter.core.IContext.setCurrent(env.getFactory().makeReal(java.lang.Double.parseDouble(s0)))"], "Fixed commit": "7719e4266a048b6192db2e6f1498499ace32fc5b", "Url": "https://api.github.com/repos/metaborg/mb-exec", "Date": "2015-10-29T13:53:06Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return org.sisioh.dddbase.utils.Try.ofSuccess(mapper.apply(value)); } catch (java.lang.RuntimeException e) { return org.sisioh.dddbase.utils.Try.ofFailure(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6790/buggy-version/src.main.java.org.sisioh.dddbase.utils.Try.java", "BodyUseAPI": ["org.sisioh.dddbase.utils.Function1<T, A>.apply(T)", "org.sisioh.dddbase.utils.Try.ofSuccess(mapper.apply(value))"], "Fixed commit": "bcebcb8e7f151f3a002d65eb03566bfa4ec8bc88", "Url": "https://api.github.com/repos/sisioh/java-dddbase", "Date": "2013-10-30T09:17:15Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return mapper.apply(value); } catch (java.lang.RuntimeException e) { return org.sisioh.dddbase.utils.Try.ofFailure(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6790/buggy-version/src.main.java.org.sisioh.dddbase.utils.Try.java", "BodyUseAPI": ["org.sisioh.dddbase.utils.Function1<T, org.sisioh.dddbase.utils.Try<A>>.apply(T)"], "Fixed commit": "bcebcb8e7f151f3a002d65eb03566bfa4ec8bc88", "Url": "https://api.github.com/repos/sisioh/java-dddbase", "Date": "2013-10-30T09:17:15Z"},
{"Line": "=>843", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { retval = stringObject.replaceFirst(regex, replacement); } catch (final java.util.regex.PatternSyntaxException e) { info.fulloo.trygve.error.ErrorLogger.error(ErrorType.Runtime, 0, \"FATAL: Bad pattern to replaceFirst: `\", regex.getText(), \"'.\", \"\"); info.fulloo.trygve.run_time.RTExpression.RTMessage.printMiniStackStatus(); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6176/buggy-version/src.main.java.info.fulloo.trygve.run_time.RTClass.java", "BodyUseAPI": ["info.fulloo.trygve.run_time.RTObjectCommon.RTStringObject.replaceFirst(info.fulloo.trygve.run_time.RTObject,info.fulloo.trygve.run_time.RTObject)"], "Fixed commit": "2c40deacdde1ac0ccd4ed99452104cdd91eb68f8", "Url": "https://api.github.com/repos/egonelbre/trygve", "Date": "2016-02-29T09:21:29Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { simState.incomingEvent(callPushSystemAPI(\"1\", \"1\")); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5467/buggy-version/src.edu.vt.ece5574.sim.APICaller.java", "BodyUseAPI": ["edu.vt.ece5574.sim.Simulation.incomingEvent(edu.vt.ece5574.events.Event)", "edu.vt.ece5574.sim.APICaller.callPushSystemAPI(java.lang.String,java.lang.String)"], "Fixed commit": "4399ded7d71ac3f415c6f643ab105bc6e857af1b", "Url": "https://api.github.com/repos/dkindel/ece5574simulation", "Date": "2016-03-22T10:17:35Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { progressDialog.dismiss(); } catch (java.lang.IllegalArgumentException e) { android.widget.Toast.makeText(activity, \"IllegalArgumentException\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3416/buggy-version/app.src.main.java.com.djonique.birdays.utils.ContactsHelper.java", "BodyUseAPI": ["android.app.ProgressDialog.dismiss()"], "Fixed commit": "217d015c96008a8f71419ccb346519735c022408", "Url": "https://api.github.com/repos/Djonique/Birdays", "Date": "2017-08-13T18:26:39Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { bm = new inn2powers.BLL.BLLManager(); companies = new java.util.ArrayList(); obsProposals = javafx.collections.FXCollections.observableArrayList(); obsBusinessRoles = javafx.collections.FXCollections.observableArrayList(); obsBusinessRoles.addAll(bm.getBusinessRoles()); obsSupplyChainCategories = javafx.collections.FXCollections.observableArrayList(); obsSupplyChainCategories.addAll(bm.getSupplyChainCategories()); } catch (java.io.IOException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1363/buggy-version/src.inn2powers.GUI.MODEL.MainWindowModel.java", "BodyUseAPI": ["javafx.collections.FXCollections.observableArrayList()", "javafx.collections.ObservableList<java.lang.String>.addAll(bm.getSupplyChainCategories())", "inn2powers.BLL.BLLManager.getSupplyChainCategories()", "javafx.collections.ObservableList<java.lang.String>.addAll(bm.getBusinessRoles())", "javafx.collections.FXCollections.observableArrayList()", "inn2powers.BLL.BLLManager.getBusinessRoles()", "javafx.collections.FXCollections.observableArrayList()"], "Fixed commit": "010c4a855eb6407e5854a92e9189415d4fefb618", "Url": "https://api.github.com/repos/Applemelon/Inn2Powers", "Date": "2017-11-21T09:08:36Z"},
{"Line": "=>707", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { context.unregisterReceiver(this); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/902/buggy-version/src.com.klinker.android.send_message.Transaction.java", "BodyUseAPI": ["com.klinker.android.send_message.Context.unregisterReceiver(com.klinker.android.send_message.Transaction.8)"], "Fixed commit": "40598b1f88ea8d6295f830e73e9f80ebfa3caae3", "Url": "https://api.github.com/repos/klinker41/android-smsmms", "Date": "2014-01-19T00:20:53Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.connection.close(); } catch (java.sql.SQLException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5133/buggy-version/src.main.java.com.minecraftdimensions.bungeesuite.database.ConnectionHandler.java", "BodyUseAPI": ["java.sql.Connection.close()"], "Fixed commit": "66ccb5c66984059dc42cae447815967e06590008", "Url": "https://api.github.com/repos/Bloodsplat/BungeeSuite", "Date": "2013-07-29T09:01:03Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (java.lang.Object o : data.values().toArray()) { net.drgnome.nbtlib.Tag.class.cast(o); } map = ((java.util.Map<java.lang.String, net.drgnome.nbtlib.Tag>) (data)); } catch (java.lang.ClassCastException e) { map = new java.util.HashMap<java.lang.String, net.drgnome.nbtlib.Tag>(); for (java.util.Map.Entry<java.lang.String, ?> entry : data.entrySet()) { map.put(entry.getKey(), net.drgnome.nbtlib.Tag.parse(entry.getValue())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3309/buggy-version/src.main.java.net.drgnome.nbtlib.Tag.java", "BodyUseAPI": ["java.util.Collection<?>.toArray()", "java.util.Map<java.lang.String, ?>.values()", "java.lang.Class.cast(java.lang.Object)"], "Fixed commit": "20d4e0be9c9c8af954c1658740f95e24eeff45e7", "Url": "https://api.github.com/repos/Siguza/NBTLib", "Date": "2013-06-08T09:48:42Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { it = jso.keys(); } catch (java.lang.Exception e) { sql1 = \"UserId <> \" + UserId; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6105/buggy-version/src.java.servlet.SelectEmp.java", "BodyUseAPI": ["org.json.JSONObject.keys()"], "Fixed commit": "b848d3a22a721d152effc99d245f1a9675524027", "Url": "https://api.github.com/repos/JanakarM/Api", "Date": "2017-09-21T08:17:32Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { SapphireTsp.TSPIOTool io = SapphireTsp.TSPIOTool.instance(); io.desableCellController(); SapphireTsp.CoreTsp.out((\"CC button is disabled and no one can change the status since it\\'s in CC mode\\n\" + \"If you want to change to Eng Mode, please exit tsp and reload program in No-CC mode\")); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5630/buggy-version/2.1.1.2.CPGTSP.src.com.ExecuteRequest.java", "BodyUseAPI": ["SapphireTsp.TSPIOTool.instance()", "SapphireTsp.TSPIOTool.desableCellController()", "SapphireTsp.CoreTsp.out(java.lang.String)"], "Fixed commit": "a6862cfcb9c1ff54cb7ecdc31250ae67980e8ba1", "Url": "https://api.github.com/repos/guanghaofan/MyTSP", "Date": "2016-10-14T06:54:47Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { entry = new cx.hell.android.pdfviewpro.FileListEntry(FileListEntry.RECENT, 0, new java.io.File(progress.path), showExtension); entry.setAkProgress(progress); entryList.add(entry); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8621/buggy-version/src.cx.hell.android.pdfviewpro.HistoryFragment.java", "BodyUseAPI": ["cx.hell.android.pdfviewpro.FileListEntry.setAkProgress(cn.me.archko.pdf.AKProgress)", "java.util.ArrayList<cx.hell.android.pdfviewpro.FileListEntry>.add(cx.hell.android.pdfviewpro.FileListEntry)"], "Fixed commit": "2879a156bb1a328d6269cdff3122ae682d2b473a", "Url": "https://api.github.com/repos/archko/Mupdf", "Date": "2015-03-03T09:50:12Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { event = de.tohemi.justparty.database.controller.DBController.getInstance().getEventById(id); } catch (java.net.MalformedURLException e) { e.printStackTrace(); } catch (de.tohemi.justparty.datamodel.exceptions.InvalidEmailException e) { e.printStackTrace(); } catch (de.tohemi.justparty.datamodel.exceptions.ZipCodeInvalidException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/659/buggy-version/src.main.java.de.tohemi.justparty.businesslogic.EventsHandlerImpl.java", "BodyUseAPI": ["de.tohemi.justparty.database.controller.DBController.getInstance()", "de.tohemi.justparty.database.controller.DBController.getInstance().getEventById(int)"], "Fixed commit": "fdecb64d131a7cfad5881fb805bea69cd4394220", "Url": "https://api.github.com/repos/tohemidevelopment/justparty", "Date": "2016-04-23T15:30:22Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { mainForm = new gui.MainFormVisualisation(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6938/buggy-version/src.main.client.Application.java", "BodyUseAPI": [], "Fixed commit": "d18e6152c3f29c1b8b973e02bec4b249d8204639", "Url": "https://api.github.com/repos/koha26/ChatApp-2.0", "Date": "2016-07-27T17:35:08Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { this.mainForm = new gui.MainFormVisualisation(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6938/buggy-version/src.main.client.Application.java", "BodyUseAPI": [], "Fixed commit": "d18e6152c3f29c1b8b973e02bec4b249d8204639", "Url": "https://api.github.com/repos/koha26/ChatApp-2.0", "Date": "2016-07-27T17:35:08Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.onBackPressed(); return true; } catch (java.lang.Exception e) { android.util.Log.e(im.vector.activity.MXCActionBarActivity.LOG_TAG, (\"## onOptionsItemSelected : \" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/25/buggy-version/vector.src.main.java.im.vector.activity.MXCActionBarActivity.java", "BodyUseAPI": ["im.vector.activity.MXCActionBarActivity.onBackPressed()"], "Fixed commit": "5b29beb4217dd3367f8fdcd5a27f0612325bfa1b", "Url": "https://api.github.com/repos/vector-im/riot-android", "Date": "2016-09-21T07:42:57Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { startActivity(launchIntent); } catch (java.lang.NullPointerException n) { n.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/6057/buggy-version/app.src.main.java.com.greedygame.samplelist.MainActivity1.java", "BodyUseAPI": ["com.greedygame.samplelist.MainActivity1.1.startActivity(android.content.Intent)"], "Fixed commit": "8501f70a59745fd698ab4178a5e023ae9d8993c5", "Url": "https://api.github.com/repos/amitranjan036/PracticeApp", "Date": "2017-02-21T14:27:16Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.io.InputStream is = assets.open(\"book/contents.json\"); java.io.BufferedReader reader = new java.io.BufferedReader(new java.io.InputStreamReader(is)); contents = gson.fromJson(reader, com.mykal.empublite.BookContents.class); de.greenrobot.event.EventBus.getDefault().post(new com.mykal.empublite.BookLoadedEvent(contents)); } catch (java.io.IOException e) { android.util.Log.e(getClass().getSimpleName(), \"Exception parsing JSON\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/4477/buggy-version/EmPubLite.app.src.main.java.com.mykal.empublite.ModelFragment.java", "BodyUseAPI": ["android.content.res.AssetManager.open(java.lang.String)", "com.google.gson.Gson.fromJson(java.io.BufferedReader,java.lang.Class)", "de.greenrobot.event.EventBus.getDefault().post(com.mykal.empublite.BookLoadedEvent)", "de.greenrobot.event.EventBus.getDefault()"], "Fixed commit": "912f68d9473dbbd78d8a27724e02188018eee71a", "Url": "https://api.github.com/repos/mcuin/AndroidPractice", "Date": "2014-10-02T18:57:17Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { lVdc = org.artemis.vcloudplus.common.VCloud.findVdc(organizationName, lDCName); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/8145/buggy-version/src.org.artemis.vcloudplus.task.Updatelease.java", "BodyUseAPI": ["org.artemis.vcloudplus.common.VCloud.findVdc(java.lang.String,java.lang.String)"], "Fixed commit": "b2051b798483a34e0fcddd66fbd64532cae72495", "Url": "https://api.github.com/repos/LordRoad/vcloudplus", "Date": "2014-06-01T11:09:15Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { defaultNumberOfEvents = java.lang.Integer.parseInt(request.getParameter(\"defaultNumberOfEvents\")); } catch (java.lang.NumberFormatException ex) { messages.put(\"defaultNumberOfEvents\", \"Please enter a valid number.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/1208/buggy-version/src.main.java.nl.eveoh.mytimetable.blackboard.service.ConfigService.java", "BodyUseAPI": ["java.lang.Integer.parseInt(request.getParameter(\"defaultNumberOfEvents\"))", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Fixed commit": "23e71fd4140969f024773492b1ee28149cb2b4fc", "Url": "https://api.github.com/repos/eveoh/blackboard-mytimetable", "Date": "2016-01-22T13:31:01Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.setJNDIContext(bundleContext); } catch (javax.naming.NamingException e) { org.wso2.carbon.security.internal.CarbonSecurityComponent.log.error(e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/5359/buggy-version/component.src.main.java.org.wso2.carbon.security.internal.CarbonSecurityComponent.java", "BodyUseAPI": ["org.wso2.carbon.security.internal.CarbonSecurityComponent.setJNDIContext(org.osgi.framework.BundleContext)"], "Fixed commit": "cf37f65b33be00103f4a2dab01c5035545960a75", "Url": "https://api.github.com/repos/wso2/carbon-security", "Date": "2016-03-10T14:04:44Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { serverSocketConn.close(); } catch (java.net.UnknownHostException ex) { java.lang.System.err.println(ex); } catch (java.io.IOException ex) { java.lang.System.err.println(ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/7852/buggy-version/ClientServerQRC.src.client.ClientController.java", "BodyUseAPI": ["java.net.Socket.close()"], "Fixed commit": "c50a82a4b5b96215787f6579acff05b879bbdea7", "Url": "https://api.github.com/repos/jglesner/cs544-group2-ClientServerQRC", "Date": "2012-05-05T20:52:47Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { expression[(i - 2)] = java.lang.Double.parseDouble(expres[i]); } catch (java.lang.NumberFormatException e) { expression[(i - 2)] = 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3040/buggy-version/EnrichmentMapPlugin.src.main.java.org.baderlab.csplugins.enrichmentmap.model.GeneExpression.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "bed3b73af3f259b79eacafdff336d8d625834da6", "Url": "https://api.github.com/repos/BaderLab/EnrichmentMapApp", "Date": "2014-04-09T16:48:12Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { de.foobar.libusb.LibUsb.close(this.handle); de.foobar.libusb.LibUsb.exit(this.context); } catch (final java.lang.Exception e) { java.lang.System.out.println((\"Error on close Interface: \" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V115/3079/buggy-version/CorsairColorManager.src.main.java.de.foobar.libusb.USBDeviceController.java", "BodyUseAPI": ["de.foobar.libusb.LibUsb.close(de.foobar.libusb.DeviceHandle)", "de.foobar.libusb.LibUsb.exit(de.foobar.libusb.Context)"], "Fixed commit": "a2670e8920e3d6b4335fb5071d6b413812878408", "Url": "https://api.github.com/repos/VanFanelia/CorsairColorManager", "Date": "2014-12-21T23:18:06Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { deckCollection.reload(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3650/buggy-version/app.src.main.java.de.melvil.stacksrs.view.ReviewActivity.java", "BodyUseAPI": ["de.melvil.stacksrs.model.DeckCollection.reload()"], "Fixed commit": "247148925f04ddedc163cdab690b1e235bf018bb", "Url": "https://api.github.com/repos/MelvilQ/stacksrs", "Date": "2017-06-10T18:45:06Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.silverpeas.util.FileUtil.validateFilename(downloadPath.getPath(), getRootPath()); } catch (java.io.IOException e) { com.stratelia.silverpeas.silvertrace.SilverTrace.error(\"silverCrawler\", \"SilverCrawlerRequestRouter.zipFolder()\", \"root.MSG_GEN_PARAM_VALUE\", (\"downloadPath error = \" + (downloadPath.getPath()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5510/buggy-version/silvercrawler.silvercrawler-war.src.main.java.com.silverpeas.silvercrawler.control.SilverCrawlerSessionController.java", "BodyUseAPI": ["com.silverpeas.util.FileUtil.validateFilename(java.lang.String,java.lang.String)", "java.io.File.getPath()", "com.silverpeas.silvercrawler.control.SilverCrawlerSessionController.getRootPath()"], "Fixed commit": "6317743feab5ed3038d4eaeff926914cd382b38b", "Url": "https://api.github.com/repos/ebonnet/Silverpeas-Components", "Date": "2015-08-04T12:44:58Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.stardust.scriptdroid.sublime.SublimePluginService.client.send(object); } catch (java.lang.IllegalStateException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4677/buggy-version/app.src.main.java.com.stardust.scriptdroid.sublime.SublimePluginService.java", "BodyUseAPI": ["com.stardust.scriptdroid.sublime.SublimePluginClient.send(com.google.gson.JsonObject)"], "Fixed commit": "077612fa057fca0effa6d8d5b58cf368cbaafb40", "Url": "https://api.github.com/repos/hyb1996/Auto.js", "Date": "2017-07-09T00:36:23Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { value = value.replaceFirst(java.util.regex.Pattern.quote(variable), embeddedResult); } catch (java.lang.IllegalArgumentException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1881/buggy-version/threatconnect-app.playbooks-core.src.main.java.com.threatconnect.app.playbooks.content.accumulator.StringAccumulator.java", "BodyUseAPI": ["java.util.regex.Pattern.quote(java.lang.String)", "java.lang.String.replaceFirst(java.lang.String,java.lang.String)"], "Fixed commit": "a9fc175bb2a4b8839a200711cfcc991493f9bc5f", "Url": "https://api.github.com/repos/ThreatConnect-Inc/threatconnect-java", "Date": "2017-02-08T04:07:03Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { while ((currentSaveString.length()) > 0) { int len = getNumberAndRemoveNumberPartFromString(); java.lang.String attr = getAttrFromStringAndRemoveIt(len); len = getNumberAndRemoveNumberPartFromString(); java.lang.String cont = getAttrFromStringAndRemoveIt(len); attrNameToContent.put(attr, cont); } } catch (java.lang.StringIndexOutOfBoundsException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2646/buggy-version/beast.src.main.java.edu.pse.beast.saverloader.StaticSaverLoaders.SaverLoaderHelper.java", "BodyUseAPI": ["edu.pse.beast.saverloader.StaticSaverLoaders.SaverLoaderHelper.getNumberAndRemoveNumberPartFromString()", "edu.pse.beast.saverloader.StaticSaverLoaders.SaverLoaderHelper.getAttrFromStringAndRemoveIt(int)", "java.lang.String.length()", "edu.pse.beast.saverloader.StaticSaverLoaders.SaverLoaderHelper.getAttrFromStringAndRemoveIt(int)", "edu.pse.beast.saverloader.StaticSaverLoaders.SaverLoaderHelper.getNumberAndRemoveNumberPartFromString()", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "d67b8147ad07819b2241751847ff2ad7e64cd144", "Url": "https://api.github.com/repos/Skypr/BEAST", "Date": "2017-03-19T10:01:13Z"},
{"Line": "=>612", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { title = de.uhh.l2g.plugins.service.LectureseriesLocalServiceUtil.getLectureseries(video.getLectureseriesId()).getName(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4793/buggy-version/portlets.lecture2go-portlet.docroot.WEB-INF.src.de.uhh.l2g.plugins.util.ProzessManager.java", "BodyUseAPI": ["de.uhh.l2g.plugins.service.LectureseriesLocalServiceUtil.getLectureseries(video.getLectureseriesId())", "de.uhh.l2g.plugins.model.Video.getLectureseriesId()", "de.uhh.l2g.plugins.service.LectureseriesLocalServiceUtil.getLectureseries(video.getLectureseriesId()).getName()"], "Fixed commit": "63cb900f624d4f7c6cb37a26090b705a00c7c5ac", "Url": "https://api.github.com/repos/sgund/plugins-sdk-6.2", "Date": "2015-06-01T07:56:36Z"},
{"Line": "=>477", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { leaderLatch.get().close(); } catch (java.io.IOException e) { com.metamx.druid.master.DruidMaster.log.warn(e, \"Unable to close leaderLatch, ignoring\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/9123/buggy-version/server.src.main.java.com.metamx.druid.master.DruidMaster.java", "BodyUseAPI": ["leaderLatch.get().close()", "java.util.concurrent.atomic.AtomicReference<org.apache.curator.framework.recipes.leader.LeaderLatch>.get()"], "Fixed commit": "a949f1672dcc171c4e4e0d84369b3b8b6ee49543", "Url": "https://api.github.com/repos/metamx/druid", "Date": "2013-06-07T21:14:58Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { urlPath = classPathURL.toURI().getPath(); } catch (java.net.URISyntaxException use) { urlPath = classPathURL.getFile(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6217/buggy-version/common.src.main.java.org.switchyard.common.type.classpath.ClasspathScanner.java", "BodyUseAPI": ["java.net.URI.getPath()", "java.net.URL.toURI()"], "Fixed commit": "067576e1b0b43da73d19debea1e9b1498cc1c508", "Url": "https://api.github.com/repos/knrc/core", "Date": "2012-10-05T07:11:44Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { if (!(iterate())) { break; } } finally { lock.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7898/buggy-version/betterrandom.src.main.java.io.github.pr0methean.betterrandom.util.LooperThread.java", "BodyUseAPI": ["io.github.pr0methean.betterrandom.util.LooperThread.iterate()"], "Fixed commit": "534624261cb4ea36fed78663bc2364d157474abd", "Url": "https://api.github.com/repos/Pr0methean/BetterRandom", "Date": "2017-10-30T22:33:51Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { cc.setContainer(mp.getContainer()); } catch (java.lang.Throwable e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1771/buggy-version/plugins.org.python.pydev.src.org.python.pydev.compare.PyContentViewerCreator.java", "BodyUseAPI": ["org.eclipse.compare.CompareConfiguration.setContainer(mp.getContainer())", "org.eclipse.compare.CompareConfiguration.getContainer()"], "Fixed commit": "4d4d8b45606c93838d2f3840dba1b2ab85d7b05c", "Url": "https://api.github.com/repos/aptana/Pydev", "Date": "2011-07-26T11:00:00Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { radius = java.lang.Integer.parseInt(line4); } catch (java.lang.Exception e) { radius = 10; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5456/buggy-version/circuits.src.main.java.com.sk89q.craftbook.gates.world.miscellaneous.PotionInducer.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "9312f0db5960d14ce2f9a29ea37c7ec2e9b0866f", "Url": "https://api.github.com/repos/DelphianMC/craftbook", "Date": "2012-12-17T07:00:21Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (getIntent().getExtras().containsKey(\"pickCount\")) { pickCount = getIntent().getIntExtra(\"pickCount\", 1); } } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6706/buggy-version/MultiMediaPicker.multipleImagePickerLib.src.main.java.com.rahul.media.activity.MultipleImagePreviewActivity.java", "BodyUseAPI": ["com.rahul.media.activity.MultipleImagePreviewActivity.getIntent()", "getIntent().getExtras()", "com.rahul.media.activity.MultipleImagePreviewActivity.getIntent()", "getIntent().getIntExtra(java.lang.String,int)", "getIntent().getExtras().containsKey(java.lang.String)"], "Fixed commit": "5da29eafd3a92c88e1952dde249bbb83b730529b", "Url": "https://api.github.com/repos/rahulr4/MultiImagePickerCropper2", "Date": "2017-05-18T09:50:08Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { com.teambitcoin.coinwallet.models.Database.INSTANCE = new com.teambitcoin.coinwallet.models.Database(context); } finally { com.teambitcoin.coinwallet.models.Database.lock.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3427/buggy-version/src.com.teambitcoin.coinwallet.models.Database.java", "BodyUseAPI": [], "Fixed commit": "fe322cda5eda9a3789848c7f0bd0c5c348be5615", "Url": "https://api.github.com/repos/cwallet/coinwallet", "Date": "2014-02-08T20:21:05Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { call = func.call(); } catch (java.lang.Throwable e) { throw new java.lang.InstantiationException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6215/buggy-version/src.main.java.com.memoizrlabs.Provider.java", "BodyUseAPI": ["com.memoizrlabs.functions.Func0.call()"], "Fixed commit": "925876bc6abb6edb031e6252441c7f89afbe4ddc", "Url": "https://api.github.com/repos/memoizr/shank", "Date": "2016-08-16T10:44:01Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { call = func.call(a, b); } catch (java.lang.Throwable e) { throw new java.lang.InstantiationException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6215/buggy-version/src.main.java.com.memoizrlabs.Provider.java", "BodyUseAPI": ["com.memoizrlabs.functions.Func2.call(A,B)"], "Fixed commit": "925876bc6abb6edb031e6252441c7f89afbe4ddc", "Url": "https://api.github.com/repos/memoizr/shank", "Date": "2016-08-16T10:44:01Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { call = func.call(a); } catch (java.lang.Throwable e) { throw new java.lang.InstantiationException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6215/buggy-version/src.main.java.com.memoizrlabs.Provider.java", "BodyUseAPI": ["com.memoizrlabs.functions.Func1.call(A)"], "Fixed commit": "925876bc6abb6edb031e6252441c7f89afbe4ddc", "Url": "https://api.github.com/repos/memoizr/shank", "Date": "2016-08-16T10:44:01Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { call = func.call(a, b, c); } catch (java.lang.Throwable e) { throw new java.lang.InstantiationException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6215/buggy-version/src.main.java.com.memoizrlabs.Provider.java", "BodyUseAPI": ["com.memoizrlabs.functions.Func3.call(A,B,C)"], "Fixed commit": "925876bc6abb6edb031e6252441c7f89afbe4ddc", "Url": "https://api.github.com/repos/memoizr/shank", "Date": "2016-08-16T10:44:01Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { call = func.call(a, b, c, d); } catch (java.lang.Throwable e) { throw new java.lang.InstantiationException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6215/buggy-version/src.main.java.com.memoizrlabs.Provider.java", "BodyUseAPI": ["com.memoizrlabs.functions.Func4.call(A,B,C,D)"], "Fixed commit": "925876bc6abb6edb031e6252441c7f89afbe4ddc", "Url": "https://api.github.com/repos/memoizr/shank", "Date": "2016-08-16T10:44:01Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.content.Intent intent = new android.content.Intent(); intent.setAction(Intent.ACTION_VIEW); intent.addCategory(Intent.CATEGORY_BROWSABLE); intent.setData(android.net.Uri.parse(blog.getBlogUrl())); itemView.getContext().startActivity(intent); } catch (java.lang.Exception e) { com.mindorks.framework.mvp.utils.AppLogger.d(\"url error\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6454/buggy-version/app.src.main.java.com.mindorks.framework.mvp.ui.feed.blogs.BlogAdapter.java", "BodyUseAPI": ["android.content.Intent.addCategory(Intent.CATEGORY_BROWSABLE)", "android.content.Intent.setAction(Intent.ACTION_VIEW)", "android.content.Intent.setData(android.net.Uri.parse(blog.getBlogUrl()))", "android.net.Uri.parse(blog.getBlogUrl())", "itemView.getContext().startActivity(android.content.Intent)", "com.mindorks.framework.mvp.ui.feed.blogs.BlogAdapter.ViewHolder.1.getContext()", "BlogResponse.Blog.getBlogUrl()"], "Fixed commit": "c8c3090c3264b50d2eaef8a72b4f5c72499ed455", "Url": "https://api.github.com/repos/MindorksOpenSource/android-mvp-architecture", "Date": "2017-05-25T12:37:15Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { thread.join(); } catch (java.lang.Exception exception) { me.ci.sarica.terminal.Terminal.logError(\"ThreadWorker\", \"Failed to properly join worker thread!\"); me.ci.sarica.terminal.Terminal.logError(\"ThreadWorker\", exception); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1638/buggy-version/src.main.java.me.ci.sarica.util.ThreadWorker.java", "BodyUseAPI": ["java.lang.Thread.join()"], "Fixed commit": "4d26840b4b8b9f62b46e3bbaab965d17b8fda85d", "Url": "https://api.github.com/repos/TheDudeFromCI/Project-Sarica-v3", "Date": "2017-12-10T07:20:02Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { newScore = fitnessFunction.computeScore(basicTask.getEvaluationInfo()); } catch (java.lang.Exception IOException) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1419/buggy-version/marioai.src.ch.idsia.scenarios.Custom.java", "BodyUseAPI": ["ch.idsia.benchmark.tasks.BasicTask.getEvaluationInfo()", "ch.idsia.scenarios.MarioManiacsFitnessFunction.computeScore(basicTask.getEvaluationInfo())"], "Fixed commit": "3839c01a651d150a7c516ab0f7b8cfb16be5cb6f", "Url": "https://api.github.com/repos/abacon45/MarioAI", "Date": "2014-04-25T15:31:38Z"},
{"Line": "=>779", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { modController.transition(LoaderState.SERVER_STOPPED); } catch (cpw.mods.fml.common.LoaderException e) { modController.forceState(LoaderState.SERVER_STOPPED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2007/buggy-version/common.cpw.mods.fml.common.Loader.java", "BodyUseAPI": ["cpw.mods.fml.common.LoadController.transition(LoaderState.SERVER_STOPPED)"], "Fixed commit": "6eeae8c49ff4359dc21c44eb73e4e043285cd8bf", "Url": "https://api.github.com/repos/MinecraftForge/FML", "Date": "2013-03-08T00:37:52Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { o = iterObstacles.next(); } catch (java.lang.NullPointerException e) { e.printStackTrace(); e.printStackTrace(log.getPrintWriter()); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5475/buggy-version/pc.src.pathfinding.chemin.CheminPathfinding.java", "BodyUseAPI": ["obstacles.memory.ObstaclesIteratorPresent.next()"], "Fixed commit": "c490b5d64a30e6fd2c3483f8a9570de4f9288ee6", "Url": "https://api.github.com/repos/INTechSenpai/moon-rover", "Date": "2017-05-24T00:45:26Z"},
{"Line": "=>1244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { deletePhysicalMachineFromDatabase(physicalMachine.getId(), userSession); } catch (com.abiquo.abiserver.exception.InfrastructureCommandException ice) { factory.rollbackConnection(); errorManager.reportError(com.abiquo.abiserver.commands.impl.InfrastructureCommandImpl.resourceManager, basicResult, \"deletePhysicalMachine\", ice, ice.getMessage()); basicResult.setMessage(ice.getMessage()); traceLog(SeverityType.CRITICAL, ComponentType.MACHINE, EventType.MACHINE_DELETE, userSession, physicalMachine.getDataCenter(), null, ice.getMessage(), null, ((com.abiquo.abiserver.pojo.infrastructure.Rack) (physicalMachine.getAssignedTo())), physicalMachine, null, null); return basicResult; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3860/buggy-version/server.src.main.java.com.abiquo.abiserver.commands.impl.InfrastructureCommandImpl.java", "BodyUseAPI": ["com.abiquo.abiserver.commands.impl.InfrastructureCommandImpl.deletePhysicalMachineFromDatabase(physicalMachine.getId(),com.abiquo.abiserver.pojo.authentication.UserSession)", "com.abiquo.abiserver.pojo.infrastructure.PhysicalMachine.getId()"], "Fixed commit": "37bec77fd16c1ab70a7e3eaf08e5d4ed3835d476", "Url": "https://api.github.com/repos/abiquo/abiquo", "Date": "2011-06-29T09:44:09Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { cis = new javax.crypto.CipherInputStream(java.nio.file.Files.newInputStream(pathToOldFile, java.nio.file.StandardOpenOption.READ), inputCipher); cos = new javax.crypto.CipherOutputStream(java.nio.file.Files.newOutputStream(pathToNewFile, java.nio.file.StandardOpenOption.CREATE_NEW), outputCipher); io.milton.common.StreamUtils.readTo(cis, cos); } catch (java.io.IOException e) { com.jcryptosync.vfs.filesystem.FileOperations.log.error(\"copy error\", e); } finally { try { if (cis != null) cis.close(); if (cos != null) cos.close(); } catch (java.io.IOException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4757/buggy-version/src.main.java.com.jcryptosync.vfs.filesystem.FileOperations.java", "BodyUseAPI": ["java.nio.file.Files.newOutputStream(java.nio.file.Path,java.nio.file.StandardOpenOption)", "java.nio.file.Files.newInputStream(java.nio.file.Path,java.nio.file.StandardOpenOption)", "io.milton.common.StreamUtils.readTo(javax.crypto.CipherInputStream,javax.crypto.CipherOutputStream)"], "Fixed commit": "bf50e091ab3d98aeeed65db226c89729085c19f0", "Url": "https://api.github.com/repos/Jaitl/jcryptosync", "Date": "2015-05-31T19:06:17Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { upload(new java.io.FileInputStream(file)); } catch (com.dropbox.core.util.IOUtil ex) { throw ex.getCause(); } catch (com.dropbox.core.util.IOUtil ex) { throw ex.getCause(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/450/buggy-version/src.main.java.com.dropbox.core.http.HttpRequestor.java", "BodyUseAPI": ["com.dropbox.core.http.HttpRequestor.Uploader.upload(java.io.FileInputStream)"], "Fixed commit": "730598913ef1dba40e3153a1d9b1b121bfb4ba84", "Url": "https://api.github.com/repos/dropbox/dropbox-sdk-java", "Date": "2017-01-30T06:15:45Z"},
{"Line": "=>518", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ds = ((railo.runtime.PageContextImpl) (pc)).getDataSource(storage); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4597/buggy-version/railo-java.railo-core.src.railo.runtime.type.scope.ScopeContext.java", "BodyUseAPI": ["railo.runtime.PageContext.getDataSource(java.lang.String)"], "Fixed commit": "ac1fb2c080bbd953c3cee1bfb87d4231996ccbc4", "Url": "https://api.github.com/repos/clitnak/mcrailo", "Date": "2013-06-10T14:30:08Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { iDatabase.delete(rid, version); return 1; } catch (java.lang.Exception e) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/70/buggy-version/server.src.main.java.com.orientechnologies.orient.server.network.protocol.binary.OBinaryNetworkProtocolAbstract.java", "BodyUseAPI": ["com.orientechnologies.orient.core.db.record.ODatabaseRecord.delete(com.orientechnologies.orient.core.id.ORID,com.orientechnologies.orient.core.version.ORecordVersion)"], "Fixed commit": "7d0df17553d16961fa8fd8ab7a65d5de6d939a6b", "Url": "https://api.github.com/repos/nuvolabase/orientdb", "Date": "2013-01-30T11:47:02Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (java.lang.String value : values) { com.intuit.karate.ScriptValue temp = com.intuit.karate.Script.eval(value, context); list.add(temp.getAsString()); } } catch (java.lang.Exception e) { java.lang.String joined = org.apache.commons.lang3.StringUtils.join(values, \", \"); com.intuit.karate.ScriptValue temp = com.intuit.karate.Script.eval(joined, context); if (temp.isListLike()) { return temp.getAsList(); }else { return java.util.Collections.singletonList(temp.getAsString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3242/buggy-version/karate-core.src.main.java.com.intuit.karate.StepDefs.java", "BodyUseAPI": ["com.intuit.karate.Script.eval(java.lang.String,com.intuit.karate.ScriptContext)", "java.util.List<java.lang.String>.add(temp.getAsString())", "com.intuit.karate.ScriptValue.getAsString()"], "Fixed commit": "aa6cd7d02551e450c39949c415f4f3107c5c1f40", "Url": "https://api.github.com/repos/intuit/karate", "Date": "2017-05-02T18:02:41Z"},
{"Line": "=>485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.employee = employee; loadData(); } catch (java.lang.ClassNotFoundException ex) { java.util.logging.Logger.getLogger(com.c1212l.etm.client.ui_new.TransferRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); } catch (java.sql.SQLException ex) { java.util.logging.Logger.getLogger(com.c1212l.etm.client.ui_new.TransferRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/592/buggy-version/EmployeeTransferManagment.src.com.c1212l.etm.client.ui_new.TransferRequest.java", "BodyUseAPI": ["com.c1212l.etm.client.ui_new.TransferRequest.loadData()"], "Fixed commit": "40cadb0266f72a49e903066c2d9c001b71a28ae5", "Url": "https://api.github.com/repos/duonghm56/Project-sem-2", "Date": "2013-10-13T11:23:31Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { loadData(); } catch (java.lang.ClassNotFoundException ex) { java.util.logging.Logger.getLogger(com.c1212l.etm.client.ui_new.TransferRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); } catch (java.sql.SQLException ex) { java.util.logging.Logger.getLogger(com.c1212l.etm.client.ui_new.TransferRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/592/buggy-version/EmployeeTransferManagment.src.com.c1212l.etm.client.ui_new.TransferRequest.java", "BodyUseAPI": ["com.c1212l.etm.client.ui_new.TransferRequest.loadData()"], "Fixed commit": "40cadb0266f72a49e903066c2d9c001b71a28ae5", "Url": "https://api.github.com/repos/duonghm56/Project-sem-2", "Date": "2013-10-13T11:23:31Z"},
{"Line": "=>421", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.io.File f = new java.io.File(path); android.media.ExifInterface exif = new android.media.ExifInterface(f.getPath()); int orientation = exif.getAttributeInt(ExifInterface.TAG_ORIENTATION, ExifInterface.ORIENTATION_NORMAL); int angle = 0; if (orientation == (android.media.ExifInterface.ORIENTATION_NORMAL)) { return android.graphics.BitmapFactory.decodeFile(path, bfo); }else if (orientation == (android.media.ExifInterface.ORIENTATION_ROTATE_90)) { angle = 90; }else if (orientation == (android.media.ExifInterface.ORIENTATION_ROTATE_180)) { angle = 180; }else if (orientation == (android.media.ExifInterface.ORIENTATION_ROTATE_270)) { angle = 270; } android.graphics.Matrix mat = new android.graphics.Matrix(); mat.postRotate(angle); android.graphics.Bitmap bmp = android.graphics.BitmapFactory.decodeStream(new java.io.FileInputStream(f), null, bfo); return android.graphics.Bitmap.createBitmap(bmp, 0, 0, bmp.getWidth(), bmp.getHeight(), mat, true); } catch (java.io.IOException e) { android.util.Log.w(\"WordPress\", \"-- Error in setting image\"); } catch (java.lang.OutOfMemoryError oom) { android.util.Log.w(\"WordPress\", \"-- OOM Error in setting image\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3469/buggy-version/src.org.wordpress.android.util.ImageHelper.java", "BodyUseAPI": ["android.graphics.Bitmap.getWidth()", "android.media.ExifInterface.getAttributeInt(ExifInterface.TAG_ORIENTATION,ExifInterface.ORIENTATION_NORMAL)", "android.graphics.Bitmap.getHeight()", "android.graphics.Bitmap.createBitmap(android.graphics.Bitmap,int,int,bmp.getWidth(),bmp.getHeight(),android.graphics.Matrix,boolean)", "android.graphics.BitmapFactory.decodeStream(java.io.FileInputStream,<nulltype>,BitmapFactory.Options)", "android.graphics.BitmapFactory.decodeFile(java.lang.String,BitmapFactory.Options)", "android.graphics.Matrix.postRotate(int)", "java.io.File.getPath()"], "Fixed commit": "c28b12dc4cb108b1dfd5522add8ef24be62b7980", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-Android", "Date": "2013-09-13T14:21:25Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.makeConflict(db, tylenol.getId(), aspirin.getId()); this.makeConflict(db, aspirin.getId(), tylenol.getId()); } catch (android.database.sqlite.SQLiteException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1349/buggy-version/src.com.team4.database.DatabaseHandler.java", "BodyUseAPI": ["com.team4.database.DatabaseHandler.makeConflict(android.database.sqlite.SQLiteDatabase,aspirin.getId(),tylenol.getId())", "com.team4.database.DatabaseHandler.makeConflict(android.database.sqlite.SQLiteDatabase,tylenol.getId(),aspirin.getId())", "com.team4.database.Medication.getId()", "com.team4.database.Medication.getId()", "com.team4.database.Medication.getId()", "com.team4.database.Medication.getId()"], "Fixed commit": "9885133718a20cde27aec9d71735052a914a440b", "Url": "https://api.github.com/repos/jjennings955/HealthManagement", "Date": "2014-05-01T08:59:59Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { getTransaction.wait(); } catch (java.lang.InterruptedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3323/buggy-version/app.src.main.java.com.example.danie.schoolcashless.ConfirmationActivity.java", "BodyUseAPI": ["com.example.danie.schoolcashless.ConfirmationActivity.GetTransaction.wait()"], "Fixed commit": "c4105250453e6e8f753755355b5268be1603c66c", "Url": "https://api.github.com/repos/daniellimws/CXA", "Date": "2016-07-30T03:15:07Z"},
{"Line": "=>1522", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { boolean obp = etDiploma.getText().toString().equals(\"\"); if (obp) { OBP = 0; }else { OBP = java.lang.Double.parseDouble(etDiploma.getText().toString()); OBP = ((OBP) * 5) * 0.12; } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8971/buggy-version/app.src.main.java.demirciy.ygslyspuanhesaplama.lys.ActivityLys.java", "BodyUseAPI": ["android.widget.EditText.getText()", "java.lang.Double.parseDouble(etDiploma.getText().toString())", "android.widget.EditText.getText()", "etDiploma.getText().toString().equals(java.lang.String)", "etDiploma.getText().toString()", "etDiploma.getText().toString()"], "Fixed commit": "a6d237341359d6f5356ea867a3dcf4cc4fdbd2e8", "Url": "https://api.github.com/repos/demirciy/CalculateYgsLysScore", "Date": "2016-06-08T10:46:59Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { bundleFilters(intent); } catch (java.lang.Exception e) { android.widget.Toast.makeText(getBaseContext(), e.getMessage(), Toast.LENGTH_LONG).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8823/buggy-version/app.src.main.java.comcmput301f16t01.github.carrier.Searching.SearchActivity.java", "BodyUseAPI": ["comcmput301f16t01.github.carrier.Searching.SearchActivity.bundleFilters(android.content.Intent)"], "Fixed commit": "7fa2219f82dab86efb10a86b30afc11cd8e0b839", "Url": "https://api.github.com/repos/CMPUT301F16T01/Carrier", "Date": "2016-11-28T01:40:01Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { uri = new java.net.URI(login); } catch (java.net.URISyntaxException e2) { try { uri = new java.net.URI(null, login, null); } catch (java.net.URISyntaxException e) { try { uri = new java.net.URI(null, login.replaceAll(\"\\\\W\", \"\"), null); } catch (java.net.URISyntaxException e1) { pl.psnc.dl.wf4ever.dlibra.UserProfile.logger.error(e1); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5232/buggy-version/src.main.java.pl.psnc.dl.wf4ever.dlibra.UserProfile.java", "BodyUseAPI": [], "Fixed commit": "4d9aba99fea0004f7fa8a29bbe0796b6d59c8872", "Url": "https://api.github.com/repos/wf4ever/rosrs-dlibra", "Date": "2012-04-02T11:51:11Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { return m.object; } catch (java.lang.NullPointerException e) { org.nuxeo.connect.update.task.update.UpdateManager.log.error((\"Error on key: \" + entryKey)); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/104/buggy-version/nuxeo-connect-standalone.src.main.java.org.nuxeo.connect.update.task.update.UpdateManager.java", "BodyUseAPI": [], "Fixed commit": "f7ed93338140d4f7600dffc4d62fcb00a33dd71c", "Url": "https://api.github.com/repos/nuxeo/nuxeo-runtime", "Date": "2012-06-30T11:15:56Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.setRole(java.lang.Integer.parseInt(values[model.User.COL_ROLE])); } catch (java.lang.Exception e) { this.setRole(model.User.ROLE_STUDENT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4910/buggy-version/model.User.java", "BodyUseAPI": ["model.User.setRole(int)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "e9ff42128cea8c19baf34a8ad7d16de907773435", "Url": "https://api.github.com/repos/bertrandjackermann/Bibliothekenverwaltung", "Date": "2013-05-13T09:38:40Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { agent.ReceiveMessage(action); } catch (java.lang.Exception ex) { sayToPartner(((((\"I could not handle the action '\" + action) + \" because: \") + ex) + \"!\")); ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4424/buggy-version/GeniusWebSocket.src.geniuswebsocket.NegotiationClient.java", "BodyUseAPI": ["negotiator.Agent.ReceiveMessage(geniuswebsocket.Action)"], "Fixed commit": "4a936f5f92ce5b3bb2992a396b4ffa47eb1e6ab4", "Url": "https://api.github.com/repos/erelsgl/GeniusWebSocket", "Date": "2013-05-01T10:07:55Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { result.setSymbolicLink(new fr.ens.biologie.genomique.eoulsan.data.DataFile(java.nio.file.Files.readSymbolicLink(f.toPath()))); } catch (java.nio.file.FileSystemException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5420/buggy-version/src.main.java.fr.ens.biologie.genomique.eoulsan.data.protocols.FileDataProtocol.java", "BodyUseAPI": ["fr.ens.biologie.genomique.eoulsan.data.protocols.SimpleDataFileMetadata.setSymbolicLink(fr.ens.biologie.genomique.eoulsan.data.DataFile)", "java.io.File.toPath()", "java.nio.file.Files.readSymbolicLink(java.nio.file.Path)"], "Fixed commit": "9d140c714bac67caf29fc3c9a5d033615a6c95ef", "Url": "https://api.github.com/repos/GenomicParisCentre/eoulsan", "Date": "2017-10-13T17:08:23Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { configFile.createNewFile(); } catch (java.io.IOException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6627/buggy-version/uCars.src.com.useful.ucars.ucars.java", "BodyUseAPI": ["java.io.File.createNewFile()"], "Fixed commit": "95694a6949b8557aa98a73866565065b1a0b35eb", "Url": "https://api.github.com/repos/storm345dev/ucars", "Date": "2013-11-13T20:06:41Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.useful.ucars.ucars.config = getConfig(); } catch (java.lang.Exception e2) { try { configFile.createNewFile(); } catch (java.io.IOException e) { } copy(getResource(\"ucarsConfigHeader.yml\"), configFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6627/buggy-version/uCars.src.com.useful.ucars.ucars.java", "BodyUseAPI": ["com.useful.ucars.ucars.getConfig()"], "Fixed commit": "95694a6949b8557aa98a73866565065b1a0b35eb", "Url": "https://api.github.com/repos/storm345dev/ucars", "Date": "2013-11-13T20:06:41Z"},
{"Line": "=>449", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { executor.shutdownNow(); executor.awaitTermination(60, java.util.concurrent.TimeUnit.SECONDS); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2771/buggy-version/src.v4.GameBoard.java", "BodyUseAPI": ["java.util.concurrent.ExecutorService.shutdownNow()", "java.util.concurrent.ExecutorService.awaitTermination(int,java.util.concurrent.TimeUnit)"], "Fixed commit": "985a8b3e85fb8b472329c60b5c669e85f0efa4a0", "Url": "https://api.github.com/repos/gabe-morales/GridHamiltonianPath", "Date": "2017-05-09T16:31:00Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { readFromSocket(key); } catch (java.io.IOException ex) { log.debug(classname, org.apache.commons.lang3.exception.ExceptionUtils.getStackTrace(ex)); com.apu.auctionserver.server.NIO.SocketNIO socket = ((com.apu.auctionserver.server.NIO.SocketNIO) (key.attachment())); log.debug(classname, (\"Socket closed: \" + (socket.socketId))); this.socketMap.remove(socket.socketId); this.readBuffersMap.remove(socket.socketId); this.writeBuffersMap.remove(socket.socketId); key.attach(null); key.cancel(); key.channel().close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3401/buggy-version/src.main.java.com.apu.auctionserver.server.NIO.ServerSocketNIOProcessor.java", "BodyUseAPI": ["com.apu.auctionserver.server.NIO.ServerSocketNIOProcessor.readFromSocket(java.nio.channels.SelectionKey)"], "Fixed commit": "d81cbc1ba17dff58b8d60f9f5a7f08270a826d2f", "Url": "https://api.github.com/repos/anikeec/AuctionServer", "Date": "2017-12-31T09:20:09Z"},
{"Line": "=>547", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { bundleProduct1.click(); java.lang.String bundleBraclet1_product_id = bundleBraclet1.getAttribute(\"data-set-item\"); java.lang.System.out.println((\"bundleBraclet1_product_id in addBundleProduct is \" + bundleBraclet1_product_id)); if (bundleBraclet1_product_id != null) break; trial++; java.lang.System.out.println((\"trial no \" + trial)); } catch (java.lang.Exception e) { e.printStackTrace(); trial++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3496/buggy-version/src.com.baublebar.pages.BaublebarPage.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "org.openqa.selenium.WebElement.getAttribute(java.lang.String)", "org.openqa.selenium.WebElement.click()", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "87f721e4cb5a09cbf31ad15b3fe83b9ca7f48ee4", "Url": "https://api.github.com/repos/baublebar-qa/BaublebarTest", "Date": "2015-10-09T16:04:45Z"},
{"Line": "=>601", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { bundleProduct1.click(); java.lang.String bundle1_product_id = bundle1.getAttribute(\"data-set-item\"); java.lang.System.out.println((\"bundle1_product_id in refreshBundle is\" + bundle1_product_id)); if (bundle1_product_id != null) break; trial++; java.lang.System.out.println((\"trial no \" + trial)); } catch (java.lang.Exception e) { e.printStackTrace(); trial++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3496/buggy-version/src.com.baublebar.pages.BaublebarPage.java", "BodyUseAPI": ["org.openqa.selenium.WebElement.click()", "java.io.PrintStream.println(java.lang.String)", "org.openqa.selenium.WebElement.getAttribute(java.lang.String)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "87f721e4cb5a09cbf31ad15b3fe83b9ca7f48ee4", "Url": "https://api.github.com/repos/baublebar-qa/BaublebarTest", "Date": "2015-10-09T16:04:45Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.name = document.getElementsByTag(\"title\").get(0).html().replace(\" - Walmart.com\", \"\"); } catch (java.lang.IndexOutOfBoundsException e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5351/buggy-version/src.main.java.WalmartPageParser.java", "BodyUseAPI": ["document.getElementsByTag(\"title\").get(0).html().replace(java.lang.String,java.lang.String)", "org.jsoup.nodes.Document.getElementsByTag(java.lang.String)", "document.getElementsByTag(\"title\").get(0).html()", "document.getElementsByTag(\"title\").get(int)"], "Fixed commit": "1acf8e13cc19df267e7fd8472530cb10bff337ba", "Url": "https://api.github.com/repos/Juffff/EbayAvChecker", "Date": "2017-03-03T13:34:48Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { createShemaIfNeeded(entity.getClass()); @java.lang.SuppressWarnings(\"unchecked\") com.datastax.driver.mapping.Mapper<java.lang.Object> mapper = ((com.datastax.driver.mapping.Mapper<java.lang.Object>) (mappingManager.mapper(entity.getClass()))); final com.google.common.util.concurrent.ListenableFuture<java.lang.Void> listenableFuture = mapper.saveAsync(entity); listenableFuture.addListener(new java.lang.Runnable() { @java.lang.Override public void run() { try { listenableFuture.get(); } catch (java.lang.Exception e) { if (log.isErrorEnabled()) { log.error(\"Save operation was failure!\", e); } } } }, sinleThreadExecuror); } catch (java.lang.Exception e) { if (log.isErrorEnabled()) { log.error(\"Save operation was failure!\", e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1681/buggy-version/WSFrontend.org.openl.rules.ruleservice.ws.logging.cassandra.src.org.openl.rules.ruleservice.logging.cassandra.CassandraOperations.java", "BodyUseAPI": ["com.google.common.util.concurrent.ListenableFuture<java.lang.Void>.addListener(java.lang.Runnable,java.util.concurrent.ExecutorService)", "com.google.common.util.concurrent.ListenableFuture<java.lang.Void>.get()", "org.slf4j.Logger.error(java.lang.String,java.lang.Exception)", "com.datastax.driver.mapping.Mapper<java.lang.Object>.saveAsync(java.lang.Object)", "java.lang.Object.getClass()", "org.slf4j.Logger.isErrorEnabled()", "java.lang.Object.getClass()", "java.lang.Object()", "org.openl.rules.ruleservice.logging.cassandra.CassandraOperations.createShemaIfNeeded(java.lang.Class<? extends java.lang.Object>)", "com.datastax.driver.mapping.MappingManager.mapper(java.lang.Class<? extends java.lang.Object>)"], "Fixed commit": "c60df4a2e7d7dcc842551af9f27832d39f01d201", "Url": "https://api.github.com/repos/openl-tablets/openl-tablets", "Date": "2016-08-03T09:11:28Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { callback = new com.todoroo.astrid.helper.ProgressBarSyncResultCallback(getActivity(), this, R.id.progressBar, new java.lang.Runnable() { @java.lang.Override public void run() { if (manual) com.todoroo.andlib.service.ContextManager.getContext().sendBroadcast(new android.content.Intent(com.todoroo.astrid.api.AstridApiConstants.BROADCAST_EVENT_REFRESH)); else refresh(); ((android.widget.TextView) (getView().findViewById(android.R.id.empty))).setText(getEmptyDisplayString()); } }); } catch (java.lang.Exception e) { callback = new com.todoroo.astrid.sync.SyncResultCallbackAdapter() { @java.lang.Override public void finished() { com.todoroo.andlib.service.ContextManager.getContext().sendBroadcast(new android.content.Intent(com.todoroo.astrid.api.AstridApiConstants.BROADCAST_EVENT_REFRESH)); } }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/713/buggy-version/astrid.plugin-src.com.todoroo.astrid.people.PersonViewFragment.java", "BodyUseAPI": ["com.todoroo.andlib.service.ContextManager.getContext().sendBroadcast(android.content.Intent)", "1.getView()", "((android.widget.TextView) (getView().findViewById(android.R.id.empty))).setText(java.lang.String)", "1.getEmptyDisplayString()", "getView().findViewById(android.R.id.empty)", "com.todoroo.astrid.people.PersonViewFragment.1.getActivity()", "java.lang.Object()", "com.todoroo.andlib.service.ContextManager.getContext()", "1.refresh()"], "Fixed commit": "2cb3c9c27c5d836ca5917caa10c34574752775a0", "Url": "https://api.github.com/repos/todoroo/astrid", "Date": "2012-10-29T20:52:21Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mWindowManager.removeView(mTouchToSelectView); mWindowManager.removeView(mFloatView); failStart = false; } catch (java.lang.Exception e) { failStart = true; android.widget.Toast.makeText(getBaseContext(), getString(R.string.window_permission_tip), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2140/buggy-version/app.src.main.java.cn.abcdsxg.app.appJump.Service.TouchService.java", "BodyUseAPI": ["android.view.WindowManager.removeView(cn.abcdsxg.app.appJump.View.TouchToSelectView)", "android.view.WindowManager.removeView(android.view.View)"], "Fixed commit": "5c2e98a1fdabf4a26410218f1bc88773057a4daf", "Url": "https://api.github.com/repos/abcdsxg/appJump", "Date": "2016-12-10T03:27:39Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.liferay.portal.model.User user = com.liferay.portal.service.UserLocalServiceUtil.getUser(userThread.getUserId()); if (!(users.contains(user))) { users.add(user); } } catch (com.liferay.portal.NoSuchUserException nsue) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5357/buggy-version/portlets.private-messaging-portlet.docroot.WEB-INF.src.com.liferay.privatemessaging.util.PrivateMessagingUtil.java", "BodyUseAPI": ["java.util.List<com.liferay.portal.model.User>.add(com.liferay.portal.model.User)", "java.util.List<com.liferay.portal.model.User>.contains(com.liferay.portal.model.User)", "com.liferay.portal.service.UserLocalServiceUtil.getUser(userThread.getUserId())", "com.liferay.privatemessaging.model.UserThread.getUserId()"], "Fixed commit": "5b64e977b1a9b613c26869cdcedca0450a26cfc0", "Url": "https://api.github.com/repos/Sonnor/liferay-plugins", "Date": "2012-05-16T12:52:50Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.liferay.portal.model.User user = com.liferay.portal.service.UserLocalServiceUtil.getUser(mbMessage.getUserId()); if (!(users.contains(user))) { users.add(user); } } catch (com.liferay.portal.NoSuchUserException nsue) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5357/buggy-version/portlets.private-messaging-portlet.docroot.WEB-INF.src.com.liferay.privatemessaging.util.PrivateMessagingUtil.java", "BodyUseAPI": ["com.liferay.portal.service.UserLocalServiceUtil.getUser(mbMessage.getUserId())", "java.util.List<com.liferay.portal.model.User>.contains(com.liferay.portal.model.User)", "com.liferay.portlet.messageboards.model.MBMessage.getUserId()", "java.util.List<com.liferay.portal.model.User>.add(com.liferay.portal.model.User)"], "Fixed commit": "5b64e977b1a9b613c26869cdcedca0450a26cfc0", "Url": "https://api.github.com/repos/Sonnor/liferay-plugins", "Date": "2012-05-16T12:52:50Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { spec.runAfterSpec(); } catch (java.lang.Exception | java.lang.AssertionError ex) { notifier.fireTestFailure(new org.junit.runner.notification.Failure(getDescription(), ex)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2139/buggy-version/src.main.java.info.javaspec.spec.FieldSpec.java", "BodyUseAPI": ["info.javaspec.spec.RunnableSpec.runAfterSpec()"], "Fixed commit": "d42daf35727c82763870af1694c6849e219fbd98", "Url": "https://api.github.com/repos/kkrull/javaspec", "Date": "2015-08-26T12:47:14Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { throw new java.lang.Exception(((((\"Intelligence.Decisions.Decision.java : getDecision(int indice, int mechanicsClass), mechanicsClass non reconnue.\\n\" + \"indice = \") + indice) + \", mechanicsClass = \") + mechanicsClass)); } catch (java.lang.Exception e) { e.printStackTrace(); java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2481/buggy-version/src.Intelligence.Decisions.Decision.java", "BodyUseAPI": [], "Fixed commit": "29feb7dfbb63fca86d50ab2c39441a817636876e", "Url": "https://api.github.com/repos/falamyr/regulateur", "Date": "2017-05-11T13:42:10Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { cipherText = my_aes.encrypt(plainText); } catch (java.lang.Exception e) { android.util.Log.d(\"ERROR\", e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5385/buggy-version/TermProject.app.src.main.java.group.termproject.EncryptActivity.java", "BodyUseAPI": ["group.termproject.AdvancedEncryptionStandard.encrypt(java.lang.String)"], "Fixed commit": "a0ca326c311229c8ddc34a520fb9b9032600edae", "Url": "https://api.github.com/repos/adamsm581/termproject", "Date": "2016-04-29T03:00:45Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { decryptedCipherText = my_aes.decrypt(cipherText); } catch (java.lang.Exception e) { android.util.Log.d(\"ERROR\", e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5385/buggy-version/TermProject.app.src.main.java.group.termproject.EncryptActivity.java", "BodyUseAPI": ["group.termproject.AdvancedEncryptionStandard.decrypt(java.lang.String)"], "Fixed commit": "a0ca326c311229c8ddc34a520fb9b9032600edae", "Url": "https://api.github.com/repos/adamsm581/termproject", "Date": "2016-04-29T03:00:45Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { doSetFieldValue(newValue); } finally { settingValueFromControl = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6770/buggy-version/plugin_ide.ui.src-lang.melnorme.util.swt.components.AbstractField.java", "BodyUseAPI": ["melnorme.util.swt.components.AbstractField<VALUE>.doSetFieldValue(VALUE)"], "Fixed commit": "0bb58e0d8237422a3e8199d158790e9100de7434", "Url": "https://api.github.com/repos/GoClipse/goclipse", "Date": "2015-05-20T18:49:54Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.jsonFileContent = org.apache.commons.io.FileUtils.readFileToString(new java.io.File(jsonFilePath)); com.fasterxml.jackson.databind.ObjectMapper objectmapper = new com.fasterxml.jackson.databind.ObjectMapper(); com.ericsson.ei.rules.RulesHandler.parsedJason = objectmapper.readTree(com.ericsson.ei.rules.RulesHandler.jsonFileContent); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7038/buggy-version/src.main.java.com.ericsson.ei.rules.RulesHandler.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.ObjectMapper.readTree(java.lang.String)", "org.apache.commons.io.FileUtils.readFileToString(java.io.File)"], "Fixed commit": "e158eb90c9f3ee678245b984971472f283ad454f", "Url": "https://api.github.com/repos/AndriyZabavskyy/eiffel-intelligence", "Date": "2017-11-06T12:14:05Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { bookDao.update(book); } catch (edu.hm.weidacher.softarch.shareit.exceptions.PersistenceException e) { return error(Response.Status.NOT_FOUND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8829/buggy-version/src.main.java.edu.hm.weidacher.softarch.shareit.rest.BookResource.java", "BodyUseAPI": ["edu.hm.weidacher.softarch.shareit.data.dao.BookDao.update(edu.hm.weidacher.softarch.shareit.data.model.Book)"], "Fixed commit": "a3951563c818102a18499e9668c5646ccb8332d4", "Url": "https://api.github.com/repos/abcshmedu/shareit-summer-2017-foreveralone-2", "Date": "2017-04-25T16:48:39Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { dbg.enterSubRule(1); loop1 : do { int alt1 = 2; try { dbg.enterDecision(1, symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.decisionCanBacktrack[1]); int LA1_0 = input.LA(1); if (LA1_0 == (symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.EQUALS)) { alt1 = 1; } } finally { dbg.exitDecision(1); } switch (alt1) { case 1 : dbg.enterAlt(1); { dbg.location(18, 9); _last = ((symbolraetsel_AST_Normalisiert.output.CommonTree) (input.LT(1))); pushFollow(symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.FOLLOW_redraw_in_start65); redraw1 = redraw(); (state._fsp)--; adaptor.addChild(root_0, redraw1.getTree()); } break; default : if (cnt1 >= 1) break loop1; symbolraetsel_AST_Normalisiert.output.EarlyExitException eee = new symbolraetsel_AST_Normalisiert.output.EarlyExitException(1, input); dbg.recognitionException(eee); throw eee; } cnt1++; } while (true ); } finally { dbg.exitSubRule(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8774/buggy-version/CI_Aufgabe3.teil1.symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.java", "BodyUseAPI": ["symbolraetsel_AST_Normalisiert.output.DebugTreeAdaptor.addChild(symbolraetsel_AST_Normalisiert.output.CommonTree,java.lang.Object)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.redraw_return.getTree()", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.location(int,int)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.redraw()", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.enterSubRule(int)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.pushFollow(symbolraetsel_AST_Normalisiert.output.BitSet)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.LT(int)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.exitDecision(int)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.enterAlt(int)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.LA(int)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.recognitionException(symbolraetsel_AST_Normalisiert.output.EarlyExitException)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.enterDecision(int,boolean)"], "Fixed commit": "e2921cd0a9ea82ffc9df09ddf66287ed7f8dc971", "Url": "https://api.github.com/repos/Flor1an/CI_WiSe2013-2014", "Date": "2013-11-27T12:01:54Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { dbg.enterRule(getGrammarFileName(), \"redraw\"); if ((getRuleLevel()) == 0) { dbg.commence(); } incRuleLevel(); dbg.location(20, 1); try { int alt2 = 2; try { dbg.enterDecision(2, symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.decisionCanBacktrack[2]); int LA2_0 = input.LA(1); if (LA2_0 == (symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.EQUALS)) { int LA2_1 = input.LA(2); if (LA2_1 == (DOWN)) { int LA2_2 = input.LA(3); if (LA2_2 == (symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.PLUS)) { alt2 = 1; }else if (LA2_2 == (symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.MINUS)) { alt2 = 2; }else { symbolraetsel_AST_Normalisiert.output.NoViableAltException nvae = new symbolraetsel_AST_Normalisiert.output.NoViableAltException(\"\", 2, 2, input); dbg.recognitionException(nvae); throw nvae; } }else { symbolraetsel_AST_Normalisiert.output.NoViableAltException nvae = new symbolraetsel_AST_Normalisiert.output.NoViableAltException(\"\", 2, 1, input); dbg.recognitionException(nvae); throw nvae; } }else { symbolraetsel_AST_Normalisiert.output.NoViableAltException nvae = new symbolraetsel_AST_Normalisiert.output.NoViableAltException(\"\", 2, 0, input); dbg.recognitionException(nvae); throw nvae; } } finally { dbg.exitDecision(2); } switch (alt2) { case 1 : dbg.enterAlt(1); { dbg.location(20, 10); _last = ((symbolraetsel_AST_Normalisiert.output.CommonTree) (input.LT(1))); { symbolraetsel_AST_Normalisiert.output.CommonTree _save_last_1 = _last; symbolraetsel_AST_Normalisiert.output.CommonTree _first_1 = null; symbolraetsel_AST_Normalisiert.output.CommonTree root_1 = ((symbolraetsel_AST_Normalisiert.output.CommonTree) (adaptor.nil())); dbg.location(20, 12); _last = ((symbolraetsel_AST_Normalisiert.output.CommonTree) (input.LT(1))); EQUALS2 = ((symbolraetsel_AST_Normalisiert.output.CommonTree) (match(input, symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.EQUALS, symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.FOLLOW_EQUALS_in_redraw75))); stream_EQUALS.add(EQUALS2); match(input, Token.DOWN, null); dbg.location(20, 19); _last = ((symbolraetsel_AST_Normalisiert.output.CommonTree) (input.LT(1))); { symbolraetsel_AST_Normalisiert.output.CommonTree _save_last_2 = _last; symbolraetsel_AST_Normalisiert.output.CommonTree _first_2 = null; symbolraetsel_AST_Normalisiert.output.CommonTree root_2 = ((symbolraetsel_AST_Normalisiert.output.CommonTree) (adaptor.nil())); dbg.location(20, 21); _last = ((symbolraetsel_AST_Normalisiert.output.CommonTree) (input.LT(1))); PLUS3 = ((symbolraetsel_AST_Normalisiert.output.CommonTree) (match(input, symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.PLUS, symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.FOLLOW_PLUS_in_redraw78))); stream_PLUS.add(PLUS3); match(input, Token.DOWN, null); dbg.location(20, 27); _last = ((symbolraetsel_AST_Normalisiert.output.CommonTree) (input.LT(1))); a = ((symbolraetsel_AST_Normalisiert.output.CommonTree) (match(input, symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.LETTER, symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.FOLLOW_LETTER_in_redraw82))); stream_LETTER.add(a); dbg.location(20, 36); _last = ((symbolraetsel_AST_Normalisiert.output.CommonTree) (input.LT(1))); b = ((symbolraetsel_AST_Normalisiert.output.CommonTree) (match(input, symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.LETTER, symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.FOLLOW_LETTER_in_redraw86))); stream_LETTER.add(b); match(input, Token.UP, null); adaptor.addChild(root_1, root_2); _last = _save_last_2; } dbg.location(20, 46); _last = ((symbolraetsel_AST_Normalisiert.output.CommonTree) (input.LT(1))); c = ((symbolraetsel_AST_Normalisiert.output.CommonTree) (match(input, symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.LETTER, symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.FOLLOW_LETTER_in_redraw91))); stream_LETTER.add(c); match(input, Token.UP, null); adaptor.addChild(root_0, root_1); _last = _save_last_1; } retval.tree = root_0; symbolraetsel_AST_Normalisiert.output.RewriteRuleNodeStream stream_b = new symbolraetsel_AST_Normalisiert.output.RewriteRuleNodeStream(adaptor, \"token b\", b); symbolraetsel_AST_Normalisiert.output.RewriteRuleNodeStream stream_c = new symbolraetsel_AST_Normalisiert.output.RewriteRuleNodeStream(adaptor, \"token c\", c); symbolraetsel_AST_Normalisiert.output.RewriteRuleNodeStream stream_a = new symbolraetsel_AST_Normalisiert.output.RewriteRuleNodeStream(adaptor, \"token a\", a); symbolraetsel_AST_Normalisiert.output.RewriteRuleSubtreeStream stream_retval = new symbolraetsel_AST_Normalisiert.output.RewriteRuleSubtreeStream(adaptor, \"rule retval\", (retval != null ? retval.tree : null)); root_0 = ((symbolraetsel_AST_Normalisiert.output.CommonTree) (adaptor.nil())); { dbg.location(21, 7); { symbolraetsel_AST_Normalisiert.output.CommonTree root_1 = ((symbolraetsel_AST_Normalisiert.output.CommonTree) (adaptor.nil())); dbg.location(21, 9); root_1 = ((symbolraetsel_AST_Normalisiert.output.CommonTree) (adaptor.becomeRoot(stream_EQUALS.nextNode(), root_1))); dbg.location(21, 16); { symbolraetsel_AST_Normalisiert.output.CommonTree root_2 = ((symbolraetsel_AST_Normalisiert.output.CommonTree) (adaptor.nil())); dbg.location(21, 18); root_2 = ((symbolraetsel_AST_Normalisiert.output.CommonTree) (adaptor.becomeRoot(((symbolraetsel_AST_Normalisiert.output.CommonTree) (adaptor.create(symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.ADDITION, \"ADDITION\"))), root_2))); dbg.location(21, 27); adaptor.addChild(root_2, stream_a.nextNode()); dbg.location(21, 30); adaptor.addChild(root_2, stream_b.nextNode()); adaptor.addChild(root_1, root_2); } dbg.location(21, 34); adaptor.addChild(root_1, stream_c.nextNode()); adaptor.addChild(root_0, root_1); } } retval.tree = root_0; } break; case 2 : dbg.enterAlt(2); { dbg.location(22, 3); _last = ((symbolraetsel_AST_Normalisiert.output.CommonTree) (input.LT(1))); { symbolraetsel_AST_Normalisiert.output.CommonTree _save_last_1 = _last; symbolraetsel_AST_Normalisiert.output.CommonTree _first_1 = null; symbolraetsel_AST_Normalisiert.output.CommonTree root_1 = ((symbolraetsel_AST_Normalisiert.output.CommonTree) (adaptor.nil())); dbg.location(22, 5); _last = ((symbolraetsel_AST_Normalisiert.output.CommonTree) (input.LT(1))); EQUALS4 = ((symbolraetsel_AST_Normalisiert.output.CommonTree) (match(input, symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.EQUALS, symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.FOLLOW_EQUALS_in_redraw119))); stream_EQUALS.add(EQUALS4); match(input, Token.DOWN, null); dbg.location(22, 12); _last = ((symbolraetsel_AST_Normalisiert.output.CommonTree) (input.LT(1))); { symbolraetsel_AST_Normalisiert.output.CommonTree _save_last_2 = _last; symbolraetsel_AST_Normalisiert.output.CommonTree _first_2 = null; symbolraetsel_AST_Normalisiert.output.CommonTree root_2 = ((symbolraetsel_AST_Normalisiert.output.CommonTree) (adaptor.nil())); dbg.location(22, 14); _last = ((symbolraetsel_AST_Normalisiert.output.CommonTree) (input.LT(1))); MINUS5 = ((symbolraetsel_AST_Normalisiert.output.CommonTree) (match(input, symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.MINUS, symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.FOLLOW_MINUS_in_redraw122))); stream_MINUS.add(MINUS5); match(input, Token.DOWN, null); dbg.location(22, 21); _last = ((symbolraetsel_AST_Normalisiert.output.CommonTree) (input.LT(1))); a = ((symbolraetsel_AST_Normalisiert.output.CommonTree) (match(input, symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.LETTER, symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.FOLLOW_LETTER_in_redraw126))); stream_LETTER.add(a); dbg.location(22, 30); _last = ((symbolraetsel_AST_Normalisiert.output.CommonTree) (input.LT(1))); b = ((symbolraetsel_AST_Normalisiert.output.CommonTree) (match(input, symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.LETTER, symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.FOLLOW_LETTER_in_redraw130))); stream_LETTER.add(b); match(input, Token.UP, null); adaptor.addChild(root_1, root_2); _last = _save_last_2; } dbg.location(22, 40); _last = ((symbolraetsel_AST_Normalisiert.output.CommonTree) (input.LT(1))); c = ((symbolraetsel_AST_Normalisiert.output.CommonTree) (match(input, symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.LETTER, symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.FOLLOW_LETTER_in_redraw135))); stream_LETTER.add(c); match(input, Token.UP, null); adaptor.addChild(root_0, root_1); _last = _save_last_1; } retval.tree = root_0; symbolraetsel_AST_Normalisiert.output.RewriteRuleNodeStream stream_b = new symbolraetsel_AST_Normalisiert.output.RewriteRuleNodeStream(adaptor, \"token b\", b); symbolraetsel_AST_Normalisiert.output.RewriteRuleNodeStream stream_c = new symbolraetsel_AST_Normalisiert.output.RewriteRuleNodeStream(adaptor, \"token c\", c); symbolraetsel_AST_Normalisiert.output.RewriteRuleNodeStream stream_a = new symbolraetsel_AST_Normalisiert.output.RewriteRuleNodeStream(adaptor, \"token a\", a); symbolraetsel_AST_Normalisiert.output.RewriteRuleSubtreeStream stream_retval = new symbolraetsel_AST_Normalisiert.output.RewriteRuleSubtreeStream(adaptor, \"rule retval\", (retval != null ? retval.tree : null)); root_0 = ((symbolraetsel_AST_Normalisiert.output.CommonTree) (adaptor.nil())); { dbg.location(23, 6); { symbolraetsel_AST_Normalisiert.output.CommonTree root_1 = ((symbolraetsel_AST_Normalisiert.output.CommonTree) (adaptor.nil())); dbg.location(23, 8); root_1 = ((symbolraetsel_AST_Normalisiert.output.CommonTree) (adaptor.becomeRoot(stream_EQUALS.nextNode(), root_1))); dbg.location(23, 15); { symbolraetsel_AST_Normalisiert.output.CommonTree root_2 = ((symbolraetsel_AST_Normalisiert.output.CommonTree) (adaptor.nil())); dbg.location(23, 17); root_2 = ((symbolraetsel_AST_Normalisiert.output.CommonTree) (adaptor.becomeRoot(((symbolraetsel_AST_Normalisiert.output.CommonTree) (adaptor.create(symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.ADDITION, \"ADDITION\"))), root_2))); dbg.location(23, 26); adaptor.addChild(root_2, stream_c.nextNode()); dbg.location(23, 29); adaptor.addChild(root_2, stream_b.nextNode()); adaptor.addChild(root_1, root_2); } dbg.location(23, 33); adaptor.addChild(root_1, stream_a.nextNode()); adaptor.addChild(root_0, root_1); } } retval.tree = root_0; } break; } retval.tree = ((symbolraetsel_AST_Normalisiert.output.CommonTree) (adaptor.rulePostProcessing(root_0))); } catch (symbolraetsel_AST_Normalisiert.output.RecognitionException re) { reportError(re); recover(input, re); } finally { } dbg.location(23, 36); } finally { dbg.exitRule(getGrammarFileName(), \"redraw\"); decRuleLevel(); if ((getRuleLevel()) == 0) { dbg.terminate(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8774/buggy-version/CI_Aufgabe3.teil1.symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.java", "BodyUseAPI": ["symbolraetsel_AST_Normalisiert.output.RewriteRuleNodeStream.add(symbolraetsel_AST_Normalisiert.output.CommonTree)", "symbolraetsel_AST_Normalisiert.output.DebugTreeAdaptor.nil()", "symbolraetsel_AST_Normalisiert.output.DebugTreeAdaptor.nil()", "symbolraetsel_AST_Normalisiert.output.RewriteRuleNodeStream.nextNode()", "symbolraetsel_AST_Normalisiert.output.DebugTreeAdaptor.nil()", "symbolraetsel_AST_Normalisiert.output.DebugTreeAdaptor.addChild(symbolraetsel_AST_Normalisiert.output.CommonTree,symbolraetsel_AST_Normalisiert.output.CommonTree)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.match(symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer,Token.UP,<nulltype>)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.enterRule(java.lang.String,java.lang.String)", "symbolraetsel_AST_Normalisiert.output.DebugTreeAdaptor.nil()", "symbolraetsel_AST_Normalisiert.output.DebugTreeAdaptor.addChild(symbolraetsel_AST_Normalisiert.output.CommonTree,symbolraetsel_AST_Normalisiert.output.CommonTree)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.location(int,int)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.match(symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer,Token.DOWN,<nulltype>)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.location(int,int)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.recognitionException(symbolraetsel_AST_Normalisiert.output.NoViableAltException)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.location(int,int)", "symbolraetsel_AST_Normalisiert.output.RewriteRuleNodeStream.add(symbolraetsel_AST_Normalisiert.output.CommonTree)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.location(int,int)", "symbolraetsel_AST_Normalisiert.output.RewriteRuleNodeStream.nextNode()", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.match(symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer,Token.UP,<nulltype>)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.location(int,int)", "symbolraetsel_AST_Normalisiert.output.DebugTreeAdaptor.nil()", "symbolraetsel_AST_Normalisiert.output.RewriteRuleNodeStream.add(symbolraetsel_AST_Normalisiert.output.CommonTree)", "symbolraetsel_AST_Normalisiert.output.RewriteRuleNodeStream.add(symbolraetsel_AST_Normalisiert.output.CommonTree)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.LT(int)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.LT(int)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.match(symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer,int,symbolraetsel_AST_Normalisiert.output.BitSet)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.location(int,int)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.location(int,int)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.match(symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer,int,symbolraetsel_AST_Normalisiert.output.BitSet)", "symbolraetsel_AST_Normalisiert.output.RewriteRuleNodeStream.nextNode()", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.location(int,int)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.match(symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer,Token.UP,<nulltype>)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.LT(int)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.location(int,int)", "symbolraetsel_AST_Normalisiert.output.DebugTreeAdaptor.addChild(symbolraetsel_AST_Normalisiert.output.CommonTree,symbolraetsel_AST_Normalisiert.output.CommonTree)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.location(int,int)", "symbolraetsel_AST_Normalisiert.output.DebugTreeAdaptor.becomeRoot(((symbolraetsel_AST_Normalisiert.output.CommonTree) (adaptor.create(symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.ADDITION, \"ADDITION\"))),symbolraetsel_AST_Normalisiert.output.CommonTree)", "symbolraetsel_AST_Normalisiert.output.DebugTreeAdaptor.nil()", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.enterDecision(int,boolean)", "symbolraetsel_AST_Normalisiert.output.DebugTreeAdaptor.nil()", "symbolraetsel_AST_Normalisiert.output.DebugTreeAdaptor.addChild(symbolraetsel_AST_Normalisiert.output.CommonTree,stream_a.nextNode())", "symbolraetsel_AST_Normalisiert.output.RewriteRuleNodeStream.add(symbolraetsel_AST_Normalisiert.output.CommonTree)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.match(symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer,int,symbolraetsel_AST_Normalisiert.output.BitSet)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.location(int,int)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.match(symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer,Token.UP,<nulltype>)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.match(symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer,int,symbolraetsel_AST_Normalisiert.output.BitSet)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.enterAlt(int)", "symbolraetsel_AST_Normalisiert.output.DebugTreeAdaptor.addChild(symbolraetsel_AST_Normalisiert.output.CommonTree,stream_a.nextNode())", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.incRuleLevel()", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.location(int,int)", "symbolraetsel_AST_Normalisiert.output.DebugTreeAdaptor.becomeRoot(stream_EQUALS.nextNode(),symbolraetsel_AST_Normalisiert.output.CommonTree)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.LA(int)", "symbolraetsel_AST_Normalisiert.output.DebugTreeAdaptor.becomeRoot(stream_EQUALS.nextNode(),symbolraetsel_AST_Normalisiert.output.CommonTree)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.recognitionException(symbolraetsel_AST_Normalisiert.output.NoViableAltException)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.match(symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer,int,symbolraetsel_AST_Normalisiert.output.BitSet)", "symbolraetsel_AST_Normalisiert.output.DebugTreeAdaptor.addChild(symbolraetsel_AST_Normalisiert.output.CommonTree,symbolraetsel_AST_Normalisiert.output.CommonTree)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.LA(int)", "symbolraetsel_AST_Normalisiert.output.RewriteRuleNodeStream.nextNode()", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.LA(int)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.enterAlt(int)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.match(symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer,int,symbolraetsel_AST_Normalisiert.output.BitSet)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.commence()", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.location(int,int)", "symbolraetsel_AST_Normalisiert.output.RewriteRuleNodeStream.add(symbolraetsel_AST_Normalisiert.output.CommonTree)", "symbolraetsel_AST_Normalisiert.output.DebugTreeAdaptor.addChild(symbolraetsel_AST_Normalisiert.output.CommonTree,symbolraetsel_AST_Normalisiert.output.CommonTree)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.match(symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer,int,symbolraetsel_AST_Normalisiert.output.BitSet)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.LT(int)", "symbolraetsel_AST_Normalisiert.output.DebugTreeAdaptor.nil()", "symbolraetsel_AST_Normalisiert.output.RewriteRuleNodeStream.add(symbolraetsel_AST_Normalisiert.output.CommonTree)", "symbolraetsel_AST_Normalisiert.output.DebugTreeAdaptor.create(int,java.lang.String)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.location(int,int)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.LT(int)", "symbolraetsel_AST_Normalisiert.output.DebugTreeAdaptor.nil()", "symbolraetsel_AST_Normalisiert.output.RewriteRuleNodeStream.add(symbolraetsel_AST_Normalisiert.output.CommonTree)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.location(int,int)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.location(int,int)", "symbolraetsel_AST_Normalisiert.output.DebugTreeAdaptor.addChild(symbolraetsel_AST_Normalisiert.output.CommonTree,stream_b.nextNode())", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.recover(symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer,symbolraetsel_AST_Normalisiert.output.RecognitionException)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.reportError(symbolraetsel_AST_Normalisiert.output.RecognitionException)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.match(symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer,Token.DOWN,<nulltype>)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.match(symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer,Token.DOWN,<nulltype>)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.location(int,int)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.location(int,int)", "symbolraetsel_AST_Normalisiert.output.DebugTreeAdaptor.addChild(symbolraetsel_AST_Normalisiert.output.CommonTree,symbolraetsel_AST_Normalisiert.output.CommonTree)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.location(int,int)", "symbolraetsel_AST_Normalisiert.output.DebugTreeAdaptor.addChild(symbolraetsel_AST_Normalisiert.output.CommonTree,stream_b.nextNode())", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.match(symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer,int,symbolraetsel_AST_Normalisiert.output.BitSet)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.getRuleLevel()", "symbolraetsel_AST_Normalisiert.output.RewriteRuleNodeStream.nextNode()", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.LT(int)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.location(int,int)", "symbolraetsel_AST_Normalisiert.output.RewriteRuleNodeStream.nextNode()", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.LT(int)", "symbolraetsel_AST_Normalisiert.output.DebugTreeAdaptor.addChild(symbolraetsel_AST_Normalisiert.output.CommonTree,symbolraetsel_AST_Normalisiert.output.CommonTree)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.location(int,int)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.location(int,int)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.LT(int)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.match(symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer,int,symbolraetsel_AST_Normalisiert.output.BitSet)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.LT(int)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.LT(int)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.LT(int)", "symbolraetsel_AST_Normalisiert.output.DebugTreeAdaptor.create(int,java.lang.String)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.location(int,int)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.location(int,int)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.match(symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer,Token.DOWN,<nulltype>)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.LT(int)", "symbolraetsel_AST_Normalisiert.output.DebugTreeAdaptor.addChild(symbolraetsel_AST_Normalisiert.output.CommonTree,stream_c.nextNode())", "symbolraetsel_AST_Normalisiert.output.RewriteRuleNodeStream.add(symbolraetsel_AST_Normalisiert.output.CommonTree)", "symbolraetsel_AST_Normalisiert.output.RewriteRuleNodeStream.add(symbolraetsel_AST_Normalisiert.output.CommonTree)", "symbolraetsel_AST_Normalisiert.output.RewriteRuleNodeStream.nextNode()", "symbolraetsel_AST_Normalisiert.output.DebugTreeAdaptor.becomeRoot(((symbolraetsel_AST_Normalisiert.output.CommonTree) (adaptor.create(symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.ADDITION, \"ADDITION\"))),symbolraetsel_AST_Normalisiert.output.CommonTree)", "symbolraetsel_AST_Normalisiert.output.DebugTreeAdaptor.addChild(symbolraetsel_AST_Normalisiert.output.CommonTree,stream_c.nextNode())", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.getGrammarFileName()", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.location(int,int)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.location(int,int)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.location(int,int)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.location(int,int)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.recognitionException(symbolraetsel_AST_Normalisiert.output.NoViableAltException)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.exitDecision(int)", "symbolraetsel_AST_Normalisiert.output.DebugTreeAdaptor.nil()", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.match(symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer,int,symbolraetsel_AST_Normalisiert.output.BitSet)", "symbolraetsel_AST_Normalisiert.output.RewriteRuleNodeStream.nextNode()", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.location(int,int)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.LT(int)", "symbolraetsel_AST_Normalisiert.output.DebugTreeAdaptor.rulePostProcessing(symbolraetsel_AST_Normalisiert.output.CommonTree)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.location(int,int)", "symbolraetsel_AST_Normalisiert.output.DebugTreeAdaptor.addChild(symbolraetsel_AST_Normalisiert.output.CommonTree,symbolraetsel_AST_Normalisiert.output.CommonTree)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.LT(int)"], "Fixed commit": "e2921cd0a9ea82ffc9df09ddf66287ed7f8dc971", "Url": "https://api.github.com/repos/Flor1an/CI_WiSe2013-2014", "Date": "2013-11-27T12:01:54Z"},
{"Line": "=>537", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { dbg.enterAlt(1); { root_0 = ((symbolraetsel_AST_Normalisiert.output.CommonTree) (adaptor.nil())); dbg.location(25, 8); _last = ((symbolraetsel_AST_Normalisiert.output.CommonTree) (input.LT(1))); set6 = ((symbolraetsel_AST_Normalisiert.output.CommonTree) (input.LT(1))); if (((input.LA(1)) >= (symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.PLUS)) && ((input.LA(1)) <= (symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.MINUS))) { input.consume(); set6_tree = ((symbolraetsel_AST_Normalisiert.output.CommonTree) (adaptor.dupNode(set6))); adaptor.addChild(root_0, set6_tree); state.errorRecovery = false; }else { symbolraetsel_AST_Normalisiert.output.MismatchedSetException mse = new symbolraetsel_AST_Normalisiert.output.MismatchedSetException(null, input); dbg.recognitionException(mse); throw mse; } } retval.tree = ((symbolraetsel_AST_Normalisiert.output.CommonTree) (adaptor.rulePostProcessing(root_0))); } catch (symbolraetsel_AST_Normalisiert.output.RecognitionException re) { reportError(re); recover(input, re); } finally { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8774/buggy-version/CI_Aufgabe3.teil1.symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.java", "BodyUseAPI": ["symbolraetsel_AST_Normalisiert.output.DebugTreeAdaptor.nil()", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.location(int,int)", "symbolraetsel_AST_Normalisiert.output.DebugTreeAdaptor.dupNode(symbolraetsel_AST_Normalisiert.output.CommonTree)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.LT(int)", "symbolraetsel_AST_Normalisiert.output.DebugTreeAdaptor.rulePostProcessing(symbolraetsel_AST_Normalisiert.output.CommonTree)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.LA(int)", "symbolraetsel_AST_Normalisiert.output.DebugTreeAdaptor.addChild(symbolraetsel_AST_Normalisiert.output.CommonTree,symbolraetsel_AST_Normalisiert.output.CommonTree)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.recognitionException(symbolraetsel_AST_Normalisiert.output.MismatchedSetException)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.LA(int)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.enterAlt(int)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.LT(int)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.consume()"], "Fixed commit": "e2921cd0a9ea82ffc9df09ddf66287ed7f8dc971", "Url": "https://api.github.com/repos/Flor1an/CI_WiSe2013-2014", "Date": "2013-11-27T12:01:54Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { dbg.enterRule(getGrammarFileName(), \"start\"); if ((getRuleLevel()) == 0) { dbg.commence(); } incRuleLevel(); dbg.location(18, 1); try { dbg.enterAlt(1); { root_0 = ((symbolraetsel_AST_Normalisiert.output.CommonTree) (adaptor.nil())); dbg.location(18, 9); int cnt1 = 0; try { dbg.enterSubRule(1); loop1 : do { int alt1 = 2; try { dbg.enterDecision(1, symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.decisionCanBacktrack[1]); int LA1_0 = input.LA(1); if (LA1_0 == (symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.EQUALS)) { alt1 = 1; } } finally { dbg.exitDecision(1); } switch (alt1) { case 1 : dbg.enterAlt(1); { dbg.location(18, 9); _last = ((symbolraetsel_AST_Normalisiert.output.CommonTree) (input.LT(1))); pushFollow(symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.FOLLOW_redraw_in_start65); redraw1 = redraw(); (state._fsp)--; adaptor.addChild(root_0, redraw1.getTree()); } break; default : if (cnt1 >= 1) break loop1; symbolraetsel_AST_Normalisiert.output.EarlyExitException eee = new symbolraetsel_AST_Normalisiert.output.EarlyExitException(1, input); dbg.recognitionException(eee); throw eee; } cnt1++; } while (true ); } finally { dbg.exitSubRule(1); } } retval.tree = ((symbolraetsel_AST_Normalisiert.output.CommonTree) (adaptor.rulePostProcessing(root_0))); } catch (symbolraetsel_AST_Normalisiert.output.RecognitionException re) { reportError(re); recover(input, re); } finally { } dbg.location(18, 16); } finally { dbg.exitRule(getGrammarFileName(), \"start\"); decRuleLevel(); if ((getRuleLevel()) == 0) { dbg.terminate(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8774/buggy-version/CI_Aufgabe3.teil1.symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.java", "BodyUseAPI": ["symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.incRuleLevel()", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.exitDecision(int)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.enterAlt(int)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.LT(int)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.recover(symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer,symbolraetsel_AST_Normalisiert.output.RecognitionException)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.reportError(symbolraetsel_AST_Normalisiert.output.RecognitionException)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.enterRule(java.lang.String,java.lang.String)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.location(int,int)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.pushFollow(symbolraetsel_AST_Normalisiert.output.BitSet)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.enterSubRule(int)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.exitSubRule(int)", "symbolraetsel_AST_Normalisiert.output.DebugTreeAdaptor.rulePostProcessing(symbolraetsel_AST_Normalisiert.output.CommonTree)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.getGrammarFileName()", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.location(int,int)", "symbolraetsel_AST_Normalisiert.output.DebugTreeAdaptor.addChild(symbolraetsel_AST_Normalisiert.output.CommonTree,java.lang.Object)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.getRuleLevel()", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.redraw()", "symbolraetsel_AST_Normalisiert.output.DebugTreeAdaptor.nil()", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.location(int,int)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.enterDecision(int,boolean)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.enterAlt(int)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.LA(int)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.redraw_return.getTree()", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.location(int,int)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.commence()", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.recognitionException(symbolraetsel_AST_Normalisiert.output.EarlyExitException)"], "Fixed commit": "e2921cd0a9ea82ffc9df09ddf66287ed7f8dc971", "Url": "https://api.github.com/repos/Flor1an/CI_WiSe2013-2014", "Date": "2013-11-27T12:01:54Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { proxy.handshake(); } catch (java.io.IOException ioe) { reportError(ioe); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8774/buggy-version/CI_Aufgabe3.teil1.symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.java", "BodyUseAPI": ["symbolraetsel_AST_Normalisiert.output.DebugEventSocketProxy.handshake()"], "Fixed commit": "e2921cd0a9ea82ffc9df09ddf66287ed7f8dc971", "Url": "https://api.github.com/repos/Flor1an/CI_WiSe2013-2014", "Date": "2013-11-27T12:01:54Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { dbg.enterDecision(2, symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.decisionCanBacktrack[2]); int LA2_0 = input.LA(1); if (LA2_0 == (symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.EQUALS)) { int LA2_1 = input.LA(2); if (LA2_1 == (DOWN)) { int LA2_2 = input.LA(3); if (LA2_2 == (symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.PLUS)) { alt2 = 1; }else if (LA2_2 == (symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.MINUS)) { alt2 = 2; }else { symbolraetsel_AST_Normalisiert.output.NoViableAltException nvae = new symbolraetsel_AST_Normalisiert.output.NoViableAltException(\"\", 2, 2, input); dbg.recognitionException(nvae); throw nvae; } }else { symbolraetsel_AST_Normalisiert.output.NoViableAltException nvae = new symbolraetsel_AST_Normalisiert.output.NoViableAltException(\"\", 2, 1, input); dbg.recognitionException(nvae); throw nvae; } }else { symbolraetsel_AST_Normalisiert.output.NoViableAltException nvae = new symbolraetsel_AST_Normalisiert.output.NoViableAltException(\"\", 2, 0, input); dbg.recognitionException(nvae); throw nvae; } } finally { dbg.exitDecision(2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8774/buggy-version/CI_Aufgabe3.teil1.symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.java", "BodyUseAPI": ["symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.recognitionException(symbolraetsel_AST_Normalisiert.output.NoViableAltException)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.recognitionException(symbolraetsel_AST_Normalisiert.output.NoViableAltException)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.LA(int)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.LA(int)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.LA(int)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.recognitionException(symbolraetsel_AST_Normalisiert.output.NoViableAltException)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.enterDecision(int,boolean)"], "Fixed commit": "e2921cd0a9ea82ffc9df09ddf66287ed7f8dc971", "Url": "https://api.github.com/repos/Flor1an/CI_WiSe2013-2014", "Date": "2013-11-27T12:01:54Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { dbg.enterDecision(1, symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.decisionCanBacktrack[1]); int LA1_0 = input.LA(1); if (LA1_0 == (symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.EQUALS)) { alt1 = 1; } } finally { dbg.exitDecision(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8774/buggy-version/CI_Aufgabe3.teil1.symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.java", "BodyUseAPI": ["symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.enterDecision(int,boolean)", "symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.LA(int)"], "Fixed commit": "e2921cd0a9ea82ffc9df09ddf66287ed7f8dc971", "Url": "https://api.github.com/repos/Flor1an/CI_WiSe2013-2014", "Date": "2013-11-27T12:01:54Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { int id = bookmark.getId(); bookmark = com.deliciousdroid.platform.BookmarkManager.GetById(id, base); android.widget.ShareActionProvider shareActionProvider = ((android.widget.ShareActionProvider) (menu.findItem(R.id.menu_view_sendbookmark).getActionProvider())); shareActionProvider.setShareIntent(com.deliciousdroid.action.IntentHelper.SendBookmark(bookmark.getUrl(), bookmark.getDescription())); } catch (com.deliciousdroid.providers.ContentNotFoundException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3405/buggy-version/src.com.deliciousdroid.fragment.ViewBookmarkFragment.java", "BodyUseAPI": ["com.deliciousdroid.providers.BookmarkContent.Bookmark.getUrl()", "com.deliciousdroid.providers.BookmarkContent.Bookmark.getId()", "com.deliciousdroid.action.IntentHelper.SendBookmark(bookmark.getUrl(),bookmark.getDescription())", "android.view.Menu.findItem(R.id.menu_view_sendbookmark)", "menu.findItem(R.id.menu_view_sendbookmark).getActionProvider()", "com.deliciousdroid.platform.BookmarkManager.GetById(int,com.deliciousdroid.activity.FragmentBaseActivity)", "android.widget.ShareActionProvider.setShareIntent(com.deliciousdroid.action.IntentHelper.SendBookmark(bookmark.getUrl(), bookmark.getDescription()))", "com.deliciousdroid.providers.BookmarkContent.Bookmark.getDescription()"], "Fixed commit": "5b4607eae426f25c9e370a1986387b50f1d4bd78", "Url": "https://api.github.com/repos/maxpower47/DeliciousDroid", "Date": "2012-07-09T15:45:36Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.util.Date d = new java.util.Date(java.lang.Long.parseLong(outDate)); return new java.text.SimpleDateFormat(\"dd.MM.YYYY\").format(d); } catch (java.lang.NumberFormatException ignored) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/495/buggy-version/src.main.java.caseloader.CaseInfo.java", "BodyUseAPI": ["java.lang.Long.parseLong(java.lang.String)", "java.text.SimpleDateFormat.format(java.util.Date)"], "Fixed commit": "62d7b9e703dc14fa4a944a0aa63ae14c4f949d9d", "Url": "https://api.github.com/repos/tech-team/case-finder", "Date": "2014-12-21T15:49:36Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { userAccounts.writeAccounts(\"master_accounts.txt\", \"master\"); userAccounts.writeAccounts(\"current_accounts.txt\", \"current\"); } catch (java.lang.Exception e) { java.lang.System.out.println(\"ERROR: Error\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/694/buggy-version/back_end.BackEnd.java", "BodyUseAPI": ["UserAccounts.writeAccounts(java.lang.String,java.lang.String)", "UserAccounts.writeAccounts(java.lang.String,java.lang.String)"], "Fixed commit": "92422db48619fde033479ae013899a0c723c1402", "Url": "https://api.github.com/repos/Thao-Truong/SQAProject", "Date": "2016-03-17T04:49:02Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { updateBounds(); } catch (java.lang.Error e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6211/buggy-version/src.main.java.edu.mit.blocks.renderable.RBHighlightHandler.java", "BodyUseAPI": ["edu.mit.blocks.renderable.RBHighlightHandler.1.updateBounds()"], "Fixed commit": "c5cc329a77738a81c7d12f9de604f4c670cd5ff6", "Url": "https://api.github.com/repos/rsrini7/openblocks", "Date": "2015-06-27T00:43:12Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { itr = com.intellileaf.dctheradir.enricher.model_processors.UniprotEnricher.uniprotOnt.listIndividuals(com.intellileaf.dctheradir.enricher.model_processors.UniprotEnricher.uniprotOnt.getOntClass(\"http://purl.uniprot.org/core/Protein\")); } catch (java.lang.NullPointerException e) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/169/buggy-version/src.com.intellileaf.dctheradir.enricher.model_processors.UniprotEnricher.java", "BodyUseAPI": ["com.hp.hpl.jena.ontology.OntModel.listIndividuals(com.intellileaf.dctheradir.enricher.model_processors.UniprotEnricher.uniprotOnt.getOntClass(\"http://purl.uniprot.org/core/Protein\"))", "com.hp.hpl.jena.ontology.OntModel.getOntClass(java.lang.String)"], "Fixed commit": "847b21ce0490fb4bd4cbb286a3fa73188e2327c1", "Url": "https://api.github.com/repos/UMUC-Capstone-Project/IntelliLeaf-Resource-Enricher", "Date": "2012-03-30T17:17:44Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { player.initializeWallet(startWallet); } catch (java.lang.IllegalArgumentException e) { java.lang.System.out.println(\"Must have at least $20 to enter Zealot's Casino.\"); displayIntro(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7529/buggy-version/src.main.java.io.zipcoder.zealotscasino.Game.java", "BodyUseAPI": ["io.zipcoder.zealotscasino.Player.initializeWallet(double)"], "Fixed commit": "566b2b7e37c0201df1afd0a4a88a1b2158359cdb", "Url": "https://api.github.com/repos/aaronclong/ZealotsCasino2", "Date": "2017-05-11T17:56:06Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { sql.getConn().close(); } catch (java.sql.SQLException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/795/buggy-version/src.com.toyz.MyTokens.MyTokens.java", "BodyUseAPI": ["sql.getConn().close()", "com.toyz.MyTokens.sql.SQLHelper.getConn()"], "Fixed commit": "e3a4cb9d2e3427f1199df0e18dcb7d49a225b8f2", "Url": "https://api.github.com/repos/Toyz/MyTokens", "Date": "2014-08-15T05:56:16Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { tempLat.add(temp.getDouble(\"LocationLat\")); } catch (java.lang.Exception ex) { android.util.Log.d(\"score\", (\"Error: \" + (ex.getMessage()))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1159/buggy-version/app.src.main.java.andrewnguy.com.freefoodfinder.MapTab.java", "BodyUseAPI": ["com.parse.ParseObject.getDouble(java.lang.String)", "java.util.ArrayList<java.lang.Double>.add(temp.getDouble(\"LocationLat\"))"], "Fixed commit": "2a9892f9b214ced871a3518f299d1450f0420ee3", "Url": "https://api.github.com/repos/anguy95/FreeFoodFinder", "Date": "2015-10-31T19:14:32Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.content.pm.ApplicationInfo applicationInfo = context.getPackageManager().getApplicationInfo(packageName, 0); sourceDir = applicationInfo.sourceDir; } catch (android.content.pm.PackageManager e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1377/buggy-version/library.src.main.java.com.code19.library.AppUtils.java", "BodyUseAPI": ["context.getPackageManager().getApplicationInfo(java.lang.String,int)", "android.content.Context.getPackageManager()"], "Fixed commit": "81034f9a2c01c2a9657343c424a29644721bcb6e", "Url": "https://api.github.com/repos/h4de5ing/AndroidCommon", "Date": "2017-01-17T09:46:20Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.clientSocket.close(); } catch (java.io.IOException e) { android.util.Log.e(blue.mesh.ClientThread.TAG, \"Could not close socket\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5839/buggy-version/BlueMesh.src.blue.mesh.ClientThread.java", "BodyUseAPI": ["android.bluetooth.BluetoothSocket.close()"], "Fixed commit": "8c3bf72d79509210860b0fe484ddd39d8a0ad575", "Url": "https://api.github.com/repos/schnej7/Blue-Mesh", "Date": "2013-02-06T18:12:29Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { job.downloadFailedLogs(log); } catch (java.lang.Exception e) { context.println(\"[INFO] Error while downloading log files\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8683/buggy-version/src.main.java.genepi.imputationserver.steps.ImputationMinimac3.java", "BodyUseAPI": ["genepi.hadoop.HadoopJob.downloadFailedLogs(java.lang.String)"], "Fixed commit": "a2594c662b541b10a4ebb6d0e79c3d879b289146", "Url": "https://api.github.com/repos/genepi/imputationserver", "Date": "2017-04-28T19:29:03Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { noprefix = raw.replaceFirst(bluebot.MainBot.getPrefixes().get(event.getGuild().getId()), \"\"); } catch (java.util.regex.PatternSyntaxException e) { noprefix = raw.replaceFirst((\"\\\\\" + (bluebot.MainBot.getPrefixes().get(event.getGuild().getId()))), \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3620/buggy-version/src.bluebot.utils.CommandParser.java", "BodyUseAPI": ["bluebot.MainBot.getPrefixes().get(event.getGuild().getId())", "java.lang.String.replaceFirst(bluebot.MainBot.getPrefixes().get(event.getGuild().getId()),java.lang.String)", "net.dv8tion.jda.events.message.MessageReceivedEvent.getGuild()", "bluebot.MainBot.getPrefixes()", "event.getGuild().getId()"], "Fixed commit": "8b9de91c245b411b625f4dd3fe9660b13ac49fb9", "Url": "https://api.github.com/repos/thibautbessone/DiscordBlueBot", "Date": "2017-08-02T23:26:30Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((block.getState()) instanceof org.bukkit.block.Chest) return; org.bukkit.block.Chest chestB = ((org.bukkit.block.Chest) (block.getState())); org.bukkit.inventory.Inventory chest = chestB.getBlockInventory(); for (int i = 0; i < (plugin.gen.nextInt(chest.getSize())); i++) { org.bukkit.craftbukkit.inventory.CraftItemStack cis = plugin.dropsAPI.getItem(); while (cis == null) cis = plugin.dropsAPI.getItem(); chest.setItem(i, cis); } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3478/buggy-version/src.com.modcrafting.diablodrops.listeners.ChunkListener.java", "BodyUseAPI": ["plugin.dropsAPI.getItem()", "org.bukkit.block.Chest.getBlockInventory()", "org.bukkit.block.Block.getState()", "plugin.gen.nextInt(chest.getSize())", "org.bukkit.inventory.Inventory.setItem(int,org.bukkit.craftbukkit.inventory.CraftItemStack)", "org.bukkit.block.Block.getState()", "plugin.dropsAPI.getItem()", "org.bukkit.inventory.Inventory.getSize()"], "Fixed commit": "fce5f4d9df6d83638ea95c814fd82355b02beea0", "Url": "https://api.github.com/repos/deathmarine/DiabloDrops", "Date": "2012-12-01T05:31:09Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.flush(); } catch (java.io.IOException ex) { org.bukkit.Bukkit.getLogger().info(\"[SEVERE] Chunk Refresh Failed to flush Chunks!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7182/buggy-version/src.main.java.com.nationsmc.chunkrefresh.scheduler.SchedulerPool.java", "BodyUseAPI": ["com.nationsmc.chunkrefresh.scheduler.SchedulerPool.flush()"], "Fixed commit": "450cb8d1cc8a27de0c0008c73a0b4465ac7f49a8", "Url": "https://api.github.com/repos/NationsMC-Plugin-Developers/ChunkRefresh", "Date": "2012-12-11T00:38:44Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { session = unmarshal(sessions.get(sessionId)); } catch (com.hazelcast.nio.serialization.HazelcastSerializationException e) { recreateSession.set(true); logger.warn((\"Error in deserializing hazelcast session \" + sessionId)); try { sessions.remove(sessionId); } catch (com.hazelcast.nio.serialization.HazelcastSerializationException e1) { logger.warn((\"Error getting object after removing hazelcast session \" + sessionId)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6785/buggy-version/session.src.main.java.org.entcore.session.AuthManager.java", "BodyUseAPI": ["org.entcore.session.AuthManager.unmarshal(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "6f9d2b409707f17c059343337510f9e0e84896f0", "Url": "https://api.github.com/repos/entcore/entcore", "Date": "2015-11-26T14:44:21Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { s = unmarshal(sessions.get(sId)); } catch (com.hazelcast.nio.serialization.HazelcastSerializationException e) { sendError(message, (\"Error in deserializing new hazelcast session \" + sId), e); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6785/buggy-version/session.src.main.java.org.entcore.session.AuthManager.java", "BodyUseAPI": ["1.unmarshal(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "6f9d2b409707f17c059343337510f9e0e84896f0", "Url": "https://api.github.com/repos/entcore/entcore", "Date": "2015-11-26T14:44:21Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { startActivity(browserIntent); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5729/buggy-version/app.src.main.java.com.example.aberchek.appenings.MainActivity.java", "BodyUseAPI": ["com.example.aberchek.appenings.MainActivity.startActivity(android.content.Intent)"], "Fixed commit": "d62190dd8a94655ec22b59d97c47aad36998599e", "Url": "https://api.github.com/repos/ajberchek/Appenings", "Date": "2016-04-24T16:41:31Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { model.GameState.getInstance().getAirship().getCaptain().getMoney().removeAmount(loss); } catch (java.lang.ArithmeticException e) { loss = currentAmount; model.GameState.getInstance().getAirship().getCaptain().getMoney().setAmount(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3702/buggy-version/src.handler.FightStrategy.java", "BodyUseAPI": ["model.GameState.getInstance().getAirship().getCaptain().getMoney()", "model.GameState.getInstance()", "model.GameState.getInstance().getAirship()", "model.GameState.getInstance().getAirship().getCaptain()", "model.GameState.getInstance().getAirship().getCaptain().getMoney().removeAmount(double)"], "Fixed commit": "8a6439bc2032de76b071f1cefb46146956a6a280", "Url": "https://api.github.com/repos/Laranto/Airship-Captain", "Date": "2014-12-09T00:05:28Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (input != null) { input.close(); } } catch (java.io.IOException e) { throw new java.lang.RuntimeException(\"Could not close in stream\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4776/buggy-version/src.datamanagement.AppProperties.java", "BodyUseAPI": ["java.io.FileInputStream.close()"], "Fixed commit": "a4e38d5bd0dab8d320cc9e0b14186bf8ef93dda8", "Url": "https://api.github.com/repos/ljh20k/Group5_ITC205_assignment2", "Date": "2016-09-10T18:39:09Z"},
{"Line": "=>522", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { versionOutput = out.toString(\"UTF-8\").trim(); } catch (java.io.UnsupportedEncodingException unsupported) { hudson.plugins.git.util.GitUtils.LOGGER.log(java.util.logging.Level.SEVERE, \"UTF-8 an unsupported encoding reading 'git --version' output\", unsupported); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1370/buggy-version/src.main.java.hudson.plugins.git.util.GitUtils.java", "BodyUseAPI": ["java.io.ByteArrayOutputStream.toString(java.lang.String)", "java.lang.String.trim()"], "Fixed commit": "a01962a26fca46462e1d7e362c43fba35853e8af", "Url": "https://api.github.com/repos/MarkEWaite/git-plugin", "Date": "2017-11-23T18:54:37Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { resources.addAll(bibleService.getVersesFromString(filterParams.get(\"displayVerse\"))); } catch (com.joeldholmes.exceptions.ServiceException e) { if (!(e.getErrorCode().equalsIgnoreCase(ErrorCodes.INVALID_INPUT))) { throw e; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3056/buggy-version/src.main.java.com.joeldholmes.repository.BibleVerseRepository.java", "BodyUseAPI": ["java.util.List<com.joeldholmes.resources.BibleVerseResource>.addAll(bibleService.getVersesFromString(filterParams.get(\"displayVerse\")))", "com.joeldholmes.services.interfaces.IBibleService.getVersesFromString(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "fbd488022f1acd5de1aed150460011f4adeab444", "Url": "https://api.github.com/repos/Holmes89/bible-api", "Date": "2017-03-07T02:27:28Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { client_ip = java.rmi.server.RemoteServer.getClientHost(); } catch (java.rmi.server.ServerNotActiveException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4840/buggy-version/ContactServer.java", "BodyUseAPI": ["java.rmi.server.RemoteServer.getClientHost()"], "Fixed commit": "e1598c45b842f9fcb5b03e6bae409e62cb080986", "Url": "https://api.github.com/repos/nfribeiro84/sd2", "Date": "2015-03-20T11:50:00Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { agent.join(); } catch (java.lang.InterruptedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6901/buggy-version/src.co.mattg.snoop.SnooperMain.java", "BodyUseAPI": ["java.lang.Thread.join()"], "Fixed commit": "85cc4a78787e087622e73925a459970a53b18597", "Url": "https://api.github.com/repos/mattgarrett/snoop", "Date": "2013-07-19T17:42:14Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { boxlist = new service.BoxService(account.getId(), sessionFactory).getBoxList(); } catch (exceptions.NullBoxException exception) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/552/buggy-version/54_WarehouseLogistics.src.spring.controller.MainController.java", "BodyUseAPI": ["service.BoxService.getBoxList()", "model.AccountModel.getId()"], "Fixed commit": "b87856ef578f01830934dd3b44a97eb305f90240", "Url": "https://api.github.com/repos/MickPlaYer/2015JavaEE", "Date": "2016-01-09T05:28:42Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { editor.setAsText(text); return editor.getValue(); } catch (java.lang.Exception e) { throw org.aeonbits.owner.Converters.unsupportedConversion(targetType, text); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/542/buggy-version/owner.src.main.java.org.aeonbits.owner.Converters.java", "BodyUseAPI": ["java.beans.PropertyEditor.setAsText(java.lang.String)", "java.beans.PropertyEditor.getValue()"], "Fixed commit": "403e97909697336dbe781ee04fb0a2e5c5d233d0", "Url": "https://api.github.com/repos/FrimaStudio/owner", "Date": "2014-02-25T02:19:05Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.noteMapper = de.hdm_stuttgart.huber.itprojekt.server.db.NoteMapper.getNoteMapper(); } catch (java.lang.ClassNotFoundException e) { e.printStackTrace(); } catch (java.sql.SQLException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2690/buggy-version/src.de.hdm_stuttgart.huber.itprojekt.server.EditorImpl.java", "BodyUseAPI": ["de.hdm_stuttgart.huber.itprojekt.server.db.NoteMapper.getNoteMapper()"], "Fixed commit": "6c3358cc19f3f26a6bafd4ee9b0c31609c7f3c2d", "Url": "https://api.github.com/repos/DoHuber/noteme", "Date": "2016-11-28T12:50:04Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((wakeLock) != null) { if (wakeLock.isHeld()) { wakeLock.release(); } } } catch (java.lang.Throwable thr) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4388/buggy-version/src.com.ubhave.sensormanager.ESSensorManager.java", "BodyUseAPI": ["PowerManager.WakeLock.isHeld()", "PowerManager.WakeLock.release()"], "Fixed commit": "f69b3aec3fa08b179616da05b1f1f31606fa0c19", "Url": "https://api.github.com/repos/nlathia/SensorManager", "Date": "2013-03-04T15:44:55Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.spielsteinDarstellungen[currentKoordinate.getX()][currentKoordinate.getY()].setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.DARK_GRAY)); } catch (java.lang.ArrayIndexOutOfBoundsException e) { validate(); repaint(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2223/buggy-version/projekt.src.main.java.severeLobster.frontend.view.SpielfeldDarstellung.java", "BodyUseAPI": ["javax.swing.JLabel.setBorder(javax.swing.border.Border)", "javax.swing.BorderFactory.createLineBorder(java.awt.Color)", "infrastructure.components.Koordinaten.getX()", "infrastructure.components.Koordinaten.getY()"], "Fixed commit": "dc1063bbdeb17b793d8f2120d37497efa4ed9a52", "Url": "https://api.github.com/repos/kamisori/SevereLobster", "Date": "2012-12-06T18:58:47Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((in.available()) < 1) { continue; } } catch (java.io.IOException e2) { e2.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/883/buggy-version/hss.src.networking.server.DataConnectionHandler.java", "BodyUseAPI": ["java.io.InputStream.available()"], "Fixed commit": "45070db519e4bdc60bc6b139d5bea3686eb34616", "Url": "https://api.github.com/repos/ControlxFreak/T7Software", "Date": "2017-07-12T02:39:34Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { sr = com.datami.smi.SmiSdk.getSDAuth(rootActivity, url, userId, appId); state = sr.getState(); } catch (java.lang.Exception e) { android.util.Log.v(TAG, \"EXCEPTION\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6924/buggy-version/ConnectedCommuter.src.com.ratio.connectedcommuter.activities.SponsoredDataVideoActivity.java", "BodyUseAPI": ["com.datami.smi.SmiResult.getState()", "com.datami.smi.SmiSdk.getSDAuth(com.ratio.connectedcommuter.activities.SponsoredDataVideoActivity,java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "0f3da283d5007b67e1ead8b630cc5dfe0bb50411", "Url": "https://api.github.com/repos/RatioArchive/ConnectedCommuter-Android", "Date": "2015-01-04T21:35:42Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { login = userForm.bindFromRequest().get(); } catch (java.lang.Exception e) { flash(\"error\", play.i18n.Messages.get(\"user.login.nodata\")); controllers.Account.logger.debug(\"Login: Keine daten eingegeben\"); return redirect(controllers.routes.Account.login()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5047/buggy-version/web.app.controllers.Account.java", "BodyUseAPI": ["userForm.bindFromRequest().get()", "play.data.Form<controllers.Login>.bindFromRequest()"], "Fixed commit": "39b4485e74ce11c716639c0d40003ee462eb0308", "Url": "https://api.github.com/repos/TuemmlerKon/web-tech", "Date": "2015-01-23T14:03:29Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { locationManager.removeUpdates(locationListenerPendingIntent); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/852/buggy-version/fieldTask.src.main.java.org.smap.smapTask.android.activities.MainListActivity.java", "BodyUseAPI": ["android.location.LocationManager.removeUpdates(android.app.PendingIntent)"], "Fixed commit": "65d55e3aef4eee1a94ee2a0cb507fcff3c534b2c", "Url": "https://api.github.com/repos/tymiles003/datacollect", "Date": "2014-12-09T04:45:44Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (javassist.offload.ast.TypeDef def : col) tracer.revisitDispatchers(def, context); } catch (java.util.ConcurrentModificationException e) { numOfTypes--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8387/buggy-version/src.main.javassist.offload.reify.Reifier.java", "BodyUseAPI": ["javassist.offload.reify.Tracer.revisitDispatchers(javassist.offload.ast.TypeDef,javassist.offload.reify.TraceContext)"], "Fixed commit": "fef90a22ec3b2703a6cb78bcafa779451e62f078", "Url": "https://api.github.com/repos/csg-tokyo/bytespresso", "Date": "2016-10-15T14:21:26Z"},
{"Line": "=>459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { animations.put(toAnimation[0], new org.newdawn.slick.Animation(images.get(toAnimationB[0]), frames, durations)); } catch (java.lang.RuntimeException e) { java.lang.System.err.println(((((\"Animation \" + (toAnimation[0])) + \" in \") + (info.get(\"NAME\"))) + \" is invalid\")); java.lang.System.err.println((((images.get(toAnimationB[0]).getHorizontalCount()) + \",\") + (images.get(toAnimationB[0]).getVerticalCount()))); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/921/buggy-version/DeadReckoningGame.src.net.plaidypus.deadreckoning.entities.LivingEntity.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, org.newdawn.slick.Animation>.put(java.lang.String,org.newdawn.slick.Animation)", "java.util.HashMap<java.lang.String, org.newdawn.slick.SpriteSheet>.get(java.lang.String)"], "Fixed commit": "3d0dd7c7e83b247af8f1904b9eb366fd4f1f72c3", "Url": "https://api.github.com/repos/PurpleTengu/Dead-Reckoning", "Date": "2012-07-09T14:53:29Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { actionToBeUndone = arraylistStorage_.getPreviousInputAction(); } catch (java.lang.IndexOutOfBoundsException e) { return main.Constants.MESSAGE_UNDO_FAIL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1662/buggy-version/W10-4J.Handler.Undo.java", "BodyUseAPI": ["Handler.ArraylistStorage.getPreviousInputAction()"], "Fixed commit": "5d212d6a9f35c0032bfbca05308b3761023237fe", "Url": "https://api.github.com/repos/cs2103jan2016-w10-4j/main", "Date": "2016-04-03T18:17:33Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { toAdd = java.lang.Double.parseDouble(editTransferAmount.getText().toString()); } catch (java.lang.NumberFormatException e) { android.util.Log.e(TAG, \"NumberFormatException: \", e); android.widget.Toast.makeText(getApplicationContext(), \"Please add a value of at least $5 or more.\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/9198/buggy-version/app.src.main.java.com.teamcaffeine.hotswap.swap.AddBalanceActivity.java", "BodyUseAPI": ["java.lang.Double.parseDouble(editTransferAmount.getText().toString())", "android.widget.EditText.getText()", "editTransferAmount.getText().toString()"], "Fixed commit": "966ba3a3db125b5f46fa91a8cbed2eb3d083c59d", "Url": "https://api.github.com/repos/alexrosenfeld10/HotSwap", "Date": "2017-12-12T17:03:23Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { int resultAsNumber = java.lang.Integer.parseInt(result); if (resultAsNumber > 0) { android.widget.Button goToGroupsButton = ((android.widget.Button) (findViewById(R.id.button2))); goToGroupsButton.setText(((\"Manage Groups (\" + result) + \")\")); } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8271/buggy-version/MinionApp.src.uw.cse403.minion.HomeActivity.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "android.widget.Button.setText(java.lang.String)", "uw.cse403.minion.HomeActivity.GetNumberOfInvitesTask.findViewById(R.id.button2)"], "Fixed commit": "bc59ec4fd21c6583c595fbe0755288cec07bd0a9", "Url": "https://api.github.com/repos/MinionApp/minion", "Date": "2013-06-01T21:54:28Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { dirStatFs = new android.os.StatFs(dir.getPath()); } catch (java.lang.IllegalArgumentException e) { e.printStackTrace(); return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4727/buggy-version/sketch.src.main.java.me.panpf.sketch.util.SketchUtils.java", "BodyUseAPI": ["java.io.File.getPath()"], "Fixed commit": "66686d546633be5802fef2c4e940af887747767a", "Url": "https://api.github.com/repos/panpf/sketch", "Date": "2017-12-12T03:27:20Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { dirStatFs = new android.os.StatFs(dir.getPath()); } catch (java.lang.IllegalArgumentException e) { e.printStackTrace(); return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4727/buggy-version/sketch.src.main.java.me.panpf.sketch.util.SketchUtils.java", "BodyUseAPI": ["java.io.File.getPath()"], "Fixed commit": "66686d546633be5802fef2c4e940af887747767a", "Url": "https://api.github.com/repos/panpf/sketch", "Date": "2017-12-12T03:27:20Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { n = java.lang.Integer.parseInt(token); } catch (java.lang.NumberFormatException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1249/buggy-version/hudson-core.src.main.java.hudson.util.VersionNumber.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "bdac7495ec239b3270bdce39e22f671f254ee061", "Url": "https://api.github.com/repos/antkozak/hudson", "Date": "2011-06-20T23:26:50Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ((vazkii.ambience.thirdparty.javazoom.jl.player.JavaSoundAudioDevice) (device)).setGain(realGain); } catch (java.lang.IllegalArgumentException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4881/buggy-version/src.main.java.vazkii.ambience.PlayerThread.java", "BodyUseAPI": ["vazkii.ambience.thirdparty.javazoom.jl.player.AudioDevice.setGain(float)"], "Fixed commit": "6be678738e50069e8a43301088ecf26146df530c", "Url": "https://api.github.com/repos/Vazkii/Ambience", "Date": "2017-10-15T19:17:08Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { editor.putInt(\"age\", java.lang.Integer.parseInt(etBirth.getText().toString())); } catch (java.lang.NumberFormatException exception) { editor.putInt(\"age\", 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/9200/buggy-version/ChulaExpo.app.src.main.java.cuexpo.chulaexpo.activity.RegisAdultActivity.java", "BodyUseAPI": ["SharedPreferences.Editor.putInt(java.lang.String,int)", "java.lang.Integer.parseInt(etBirth.getText().toString())", "android.widget.EditText.getText()", "etBirth.getText().toString()"], "Fixed commit": "2a9c041d1cb0494f00dc8ef51dcc35374b210fc6", "Url": "https://api.github.com/repos/CUTomorrow/chula-expo-2017", "Date": "2017-03-10T07:03:40Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { editor.putInt(\"age\", java.lang.Integer.parseInt(etBirth.getText().toString())); } catch (java.lang.NumberFormatException exception) { editor.putInt(\"age\", 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/9200/buggy-version/ChulaExpo.app.src.main.java.cuexpo.chulaexpo.activity.RegisStudentActivity.java", "BodyUseAPI": ["android.widget.EditText.getText()", "java.lang.Integer.parseInt(etBirth.getText().toString())", "etBirth.getText().toString()", "SharedPreferences.Editor.putInt(java.lang.String,int)"], "Fixed commit": "2a9c041d1cb0494f00dc8ef51dcc35374b210fc6", "Url": "https://api.github.com/repos/CUTomorrow/chula-expo-2017", "Date": "2017-03-10T07:03:40Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { is = net.minecraft.client.Minecraft.getMinecraft().getResourceManager().getResource(texture).getInputStream(); java.awt.image.BufferedImage tileImage = javax.imageio.ImageIO.read(is); is.close(); textureImageMap.put(texture, tileImage); } catch (java.io.FileNotFoundException e) { hunternif.mc.atlas.util.Log.warn(\"Texture %s not found!\", texture.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7337/buggy-version/src.main.java.hunternif.mc.atlas.util.ExportImageUtil.java", "BodyUseAPI": ["java.util.Map<net.minecraft.util.ResourceLocation, java.awt.image.BufferedImage>.put(net.minecraft.util.ResourceLocation,java.awt.image.BufferedImage)", "java.io.InputStream.close()", "net.minecraft.client.Minecraft.getMinecraft()", "net.minecraft.client.Minecraft.getMinecraft().getResourceManager().getResource(net.minecraft.util.ResourceLocation)", "net.minecraft.client.Minecraft.getMinecraft().getResourceManager()", "javax.imageio.ImageIO.read(java.io.InputStream)", "net.minecraft.client.Minecraft.getMinecraft().getResourceManager().getResource(texture).getInputStream()"], "Fixed commit": "94877b8d1c75c84b76b57e1d5bda72fd67d614c5", "Url": "https://api.github.com/repos/AntiqueAtlasTeam/AntiqueAtlas", "Date": "2015-02-06T12:51:08Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { remote.receiveMessage(message, clockVector, sentVector, id, false); } catch (java.rmi.RemoteException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1064/buggy-version/exercise1b.DA_MessageHandler.java", "BodyUseAPI": ["DA_MessageHandler_RMI.receiveMessage(java.lang.String,java.util.HashMap<java.lang.Integer, java.lang.Integer>,java.util.HashMap<java.lang.Integer, java.util.HashMap<java.lang.Integer, java.lang.Integer>>,int,boolean)"], "Fixed commit": "3e427fe9ad94c67b02653c2525bd355fb5e69ccd", "Url": "https://api.github.com/repos/Overv/DistributedAlgorithmsPractical", "Date": "2016-02-19T14:11:34Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { haflow.profile.NodeAppearanceProfile nodeAppearanceProfile = ((haflow.profile.NodeAppearanceProfile) (session.createCriteria(haflow.profile.NodeAppearanceProfile.class).add(org.hibernate.criterion.Restrictions.eq(\"nodeId\", nodeId)).uniqueResult())); session.close(); return nodeAppearanceProfile; } catch (java.lang.Exception e) { e.printStackTrace(); session.close(); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1470/buggy-version/src.main.java.haflow.service.NodeAppearanceProfileService.java", "BodyUseAPI": ["org.hibernate.criterion.Restrictions.eq(java.lang.String,java.util.UUID)", "session.createCriteria(haflow.profile.NodeAppearanceProfile.class).add(org.hibernate.criterion.Restrictions.eq(\"nodeId\", nodeId))", "org.hibernate.Session.createCriteria(java.lang.Class)", "org.hibernate.Session.close()", "session.createCriteria(haflow.profile.NodeAppearanceProfile.class).add(org.hibernate.criterion.Restrictions.eq(\"nodeId\", nodeId)).uniqueResult()"], "Fixed commit": "c80f6085214eb3fd7a15158e426aa0c32c57f93f", "Url": "https://api.github.com/repos/justinliucs/haflow", "Date": "2013-05-29T01:48:58Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mailSender.sendMail(userEmail, \"Invite request accepted for feargus.org!\", (\"Hi!\\n\\nThanks for requesting an invite at feargus.org! Please follow this link to confirm your invite: \" + inviteConfirmationUrl)); } catch (java.lang.Exception e) { org.feargus.springmaster.invites.controllers.GenerateInviteCtrlr.log.info((((\"Failed to email user their invite: \" + (org.feargus.springmaster.utils.UtilVars.PII_START)) + userEmail) + (org.feargus.springmaster.utils.UtilVars.PII_END))); org.feargus.springmaster.invites.controllers.GenerateInviteCtrlr.log.info(e.getMessage()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/525/buggy-version/src.main.java.org.feargus.springmaster.invites.controllers.GenerateInviteCtrlr.java", "BodyUseAPI": ["org.feargus.springmaster.mail.Mailer.sendMail(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "db462b36e22e45e88625fbecbd8be368cd8a4069", "Url": "https://api.github.com/repos/FeargusOG/springMaster", "Date": "2016-06-19T14:57:28Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mailSender.sendMail(\"feargusorg@gmail.com\", (\"Invite Request for: \" + (invite.getProjectName())), (((((\"I would like to join please! :)\\n\\nUser: \" + (invite.getUserEmail())) + \"\\nProject: \") + (invite.getProjectName())) + \"\\nInvite Generator URL: \") + generatedEmailLink)); } catch (java.lang.Exception e) { org.feargus.springmaster.invites.controllers.RequestInviteCtrlr.log.info(\"Failed to email myself an invite request.\"); org.feargus.springmaster.invites.controllers.RequestInviteCtrlr.log.info(e.getMessage()); return \"redirect:/error\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/525/buggy-version/src.main.java.org.feargus.springmaster.invites.controllers.RequestInviteCtrlr.java", "BodyUseAPI": ["org.feargus.springmaster.invites.InviteRequestObj.getUserEmail()", "org.feargus.springmaster.invites.InviteRequestObj.getProjectName()", "org.feargus.springmaster.invites.InviteRequestObj.getProjectName()", "org.feargus.springmaster.mail.Mailer.sendMail(java.lang.String,(\"Invite Request for: \" + (invite.getProjectName())),(((((\"I would like to join please! :)\\n\\nUser: \" + (invite.getUserEmail())) + \"\\nProject: \") + (invite.getProjectName())) + \"\\nInvite Generator URL: \") + generatedEmailLink))"], "Fixed commit": "db462b36e22e45e88625fbecbd8be368cd8a4069", "Url": "https://api.github.com/repos/FeargusOG/springMaster", "Date": "2016-06-19T14:57:28Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { logger.trace(\"\", ignored); } catch (java.lang.NoSuchMethodError e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/989/buggy-version/src.main.java.org.robotframework.remoteserver.logging.Jetty2Log4J.java", "BodyUseAPI": ["org.eclipse.jetty.util.log.Logger.trace(java.lang.String,java.lang.Throwable)"], "Fixed commit": "b59edc33caa86286150e3d20676aef294cf999ca", "Url": "https://api.github.com/repos/ombre42/jrobotremoteserver", "Date": "2012-07-18T00:42:44Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { qIn = ((com.blueteam.gameshow.data.Question) (questIn.readObject())); } catch (java.io.IOException e) { throw e; } finally { fLock.close(); questIn.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6548/buggy-version/GameShow.src.com.blueteam.gameshow.client.ClientIO.java", "BodyUseAPI": ["java.io.ObjectInputStream.readObject()"], "Fixed commit": "bd19ea3b9f29c810e40f08a5173ca4911b0240a8", "Url": "https://api.github.com/repos/blueteam2016/game-show", "Date": "2016-04-03T22:41:44Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { profOut.writeObject(profile); } catch (java.io.IOException e) { throw e; } finally { java.lang.System.out.println(\"hi\"); fLock.close(); profOut.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6548/buggy-version/GameShow.src.com.blueteam.gameshow.client.ClientIO.java", "BodyUseAPI": ["java.io.ObjectOutputStream.writeObject(com.blueteam.gameshow.data.ClientProfile)"], "Fixed commit": "bd19ea3b9f29c810e40f08a5173ca4911b0240a8", "Url": "https://api.github.com/repos/blueteam2016/game-show", "Date": "2016-04-03T22:41:44Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { state = org.wahtod.wififixer.prefs.PrefUtil.getSharedPreferences(ctxt).getBoolean(key, false); } catch (java.lang.ClassCastException e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/603/buggy-version/wififixer.src.org.wahtod.wififixer.prefs.PrefUtil.java", "BodyUseAPI": ["org.wahtod.wififixer.prefs.PrefUtil.getSharedPreferences(org.wahtod.wififixer.prefs.Context)", "org.wahtod.wififixer.prefs.SharedPreferences.getBoolean(java.lang.String,boolean)"], "Fixed commit": "66e324e31a3bfb7774a25936c50575186c2a310c", "Url": "https://api.github.com/repos/Zanshinmu/Wifi-Fixer", "Date": "2015-06-30T02:54:43Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { testDependencies.addAll(getDependencyFiles(project.getTestClasspathElements())); } catch (org.apache.maven.artifact.DependencyResolutionRequiredException e) { throw new org.apache.maven.plugin.MojoExecutionException(\"Failed to create test classpath for Grails execution.\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2193/buggy-version/src.main.java.org.grails.maven.plugin.AbstractGrailsMojo.java", "BodyUseAPI": ["org.apache.maven.project.MavenProject.getTestClasspathElements()", "java.util.Set<java.io.File>.addAll(java.util.List<java.io.File>)", "org.grails.maven.plugin.AbstractGrailsMojo.getDependencyFiles(project.getTestClasspathElements())"], "Fixed commit": "1641470bcb7cd0cb0903aa6763d485c2ce03f6b8", "Url": "https://api.github.com/repos/jlgrock/grails-maven", "Date": "2014-01-04T22:24:36Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { testDependencies.addAll(getDependencyFiles(project.getRuntimeClasspathElements())); } catch (org.apache.maven.artifact.DependencyResolutionRequiredException e) { throw new org.apache.maven.plugin.MojoExecutionException(\"Failed to create runtime classpath for Grails execution.\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2193/buggy-version/src.main.java.org.grails.maven.plugin.AbstractGrailsMojo.java", "BodyUseAPI": ["org.grails.maven.plugin.AbstractGrailsMojo.getDependencyFiles(project.getRuntimeClasspathElements())", "org.apache.maven.project.MavenProject.getRuntimeClasspathElements()", "java.util.Set<java.io.File>.addAll(java.util.List<java.io.File>)"], "Fixed commit": "1641470bcb7cd0cb0903aa6763d485c2ce03f6b8", "Url": "https://api.github.com/repos/jlgrock/grails-maven", "Date": "2014-01-04T22:24:36Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { submitCurrentSafeZone(currentSlotDeleteSafeZone); slotSubmitLoopSkipCount = 0; } catch (org.wso2.andes.kernel.slot.ConnectionException e) { log.error(\"Error while sending slot deletion safe zone update\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/5336/buggy-version/modules.andes-core.broker.src.main.java.org.wso2.andes.kernel.slot.SlotMessageCounter.java", "BodyUseAPI": ["org.wso2.andes.kernel.slot.SlotMessageCounter.1.submitCurrentSafeZone(long)"], "Fixed commit": "1127752155ff5b7ac8145509d2cbcc6c91ecc5f1", "Url": "https://api.github.com/repos/pranavantwso2/andes", "Date": "2015-03-26T06:59:48Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { newTweet.setMessage(\"This is a tweet\"); } catch (ca.ualberta.cs.lonelytwitter.TweetTooLongException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4317/buggy-version/app.src.main.java.ca.ualberta.cs.lonelytwitter.LonelyTwitterActivity.java", "BodyUseAPI": ["ca.ualberta.cs.lonelytwitter.Tweet.setMessage(java.lang.String)"], "Fixed commit": "cd4d8ebfd6d46edccd1fba946cdbf51d3da7c364", "Url": "https://api.github.com/repos/acsyl/lonelyTwitter", "Date": "2017-09-13T05:28:13Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(100); } catch (java.lang.InterruptedException e) { logger.log(com.spanish_inquisition.battleship.server.DEFAULT_LEVEL, ((name) + \" client connection handler thread interrupted\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/9105/buggy-version/src.main.java.com.spanish_inquisition.battleship.server.ClientConnectionHandler.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "72e724f10d5dd3cbbe226ab06566db88834373ef", "Url": "https://api.github.com/repos/spanish-inquisition-4/Battleship_v2", "Date": "2017-08-06T14:01:38Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { TextRetriever retriever = new TextRetriever(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2790/buggy-version/src.Splash.java", "BodyUseAPI": [], "Fixed commit": "de2905372dc33aabfffa32200d8b5d4770d26455", "Url": "https://api.github.com/repos/darshanthaker/WordBuddy", "Date": "2014-10-19T00:42:56Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String v = req.getParameter(getName()); return v != null; } catch (java.lang.Exception ex) { java.lang.String qs = req.getQueryString(); java.lang.String p = com.winterwell.utils.web.WebUtils2.getQueryParameter(qs, getName()); return p != null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1504/buggy-version/winterwell.web.src.com.winterwell.web.fields.Checkbox.java", "BodyUseAPI": ["com.winterwell.web.fields.Checkbox.getName()", "javax.servlet.http.HttpServletRequest.getParameter(getName())"], "Fixed commit": "2cbd91b03bf05e59b12bee6a2caca430febde24e", "Url": "https://api.github.com/repos/sodash/open-code", "Date": "2017-05-06T08:35:04Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { callback.execute(context); } catch (java.lang.Exception e) { ratpack.server.internal.CloseEventHandler.LOGGER.log(java.util.logging.Level.WARNING, \"Exception raised by callback: \", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3551/buggy-version/ratpack-core.src.main.java.ratpack.server.internal.CloseEventHandler.java", "BodyUseAPI": ["ratpack.util.Action<? super ratpack.handling.internal.ContextClose>.execute(ratpack.handling.internal.ContextClose)"], "Fixed commit": "397879648b5675122746836b52441d9b8694ebcd", "Url": "https://api.github.com/repos/rhart/ratpack", "Date": "2013-11-19T20:44:44Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.sql.DriverManager.registerDriver(new com.mysql.jdbc.Driver()); } catch (java.sql.SQLException ex) { java.util.logging.Logger.getLogger(Sims.Database.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8050/buggy-version/src.Sims.Database.java", "BodyUseAPI": ["java.sql.DriverManager.registerDriver(com.mysql.jdbc.Driver)"], "Fixed commit": "ed696b30d31039abfbf9a51f4c90dcd256543fc6", "Url": "https://api.github.com/repos/blackray/SIMS", "Date": "2015-03-04T13:36:51Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { showAtLocation(anchor, Gravity.NO_GRAVITY, 0, mPopupY); } catch (java.lang.Exception e) { android.util.Log.w(\"quick-action-show\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2817/buggy-version/greendroid.GreenDroid.src.greendroid.widget.QuickActionWidget.java", "BodyUseAPI": ["greendroid.widget.QuickActionWidget.showAtLocation(android.view.View,Gravity.NO_GRAVITY,int,int)"], "Fixed commit": "80449df0e5c4e00d2ebea1a9e35fccceed059fb6", "Url": "https://api.github.com/repos/todoroo/astrid", "Date": "2011-07-16T04:35:39Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((rawinfo) == null) { continue; } haven.Curiosity ci = haven.ItemInfo.find(haven.Curiosity.class, info()); if (ci == null) { return; } break; } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7367/buggy-version/src.haven.GItem.java", "BodyUseAPI": ["haven.GItem.1.info()", "haven.ItemInfo.find(java.lang.Class,java.util.List<haven.ItemInfo>)"], "Fixed commit": "e4d4762c19ece608b31dd68913e50b18f668b828", "Url": "https://api.github.com/repos/puruscor/Purus-Pasta", "Date": "2015-10-01T20:32:57Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { int term = java.lang.Integer.parseInt(req.getParameter(\"term\")); session.setAttribute(\"term\", term); } catch (java.lang.Exception e) { term = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6284/buggy-version/src.web.PresidentServlet.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "java.lang.Integer.parseInt(req.getParameter(\"term\"))", "javax.servlet.http.HttpSession.setAttribute(java.lang.String,int)"], "Fixed commit": "2d3562e4a6e73c181efc44b7b529676f33903932", "Url": "https://api.github.com/repos/AnnieFisher/Presidents", "Date": "2016-08-29T03:42:01Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (match.getState().equals(MatchState.PLAYING)) { if ((match.getTeam(toSee).isObserver()) && (!(match.getTeam(viewer).isObserver()))) viewer.hidePlayer(toSee); }else viewer.showPlayer(toSee); } catch (java.lang.NullPointerException e) { viewer.showPlayer(toSee); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6184/buggy-version/src.main.java.in.twizmwaz.cardinal.module.modules.visibility.Visibility.java", "BodyUseAPI": ["match.getTeam(viewer).isObserver()", "in.twizmwaz.cardinal.match.Match.getTeam(org.bukkit.entity.Player)", "match.getTeam(toSee).isObserver()", "match.getState().equals(MatchState.PLAYING)", "in.twizmwaz.cardinal.match.Match.getTeam(org.bukkit.entity.Player)", "org.bukkit.entity.Player.hidePlayer(org.bukkit.entity.Player)", "in.twizmwaz.cardinal.match.Match.getState()", "org.bukkit.entity.Player.showPlayer(org.bukkit.entity.Player)"], "Fixed commit": "f65f8417ab290b43c23fa5636758bb262df919f8", "Url": "https://api.github.com/repos/twizmwazin/CardinalPGM", "Date": "2015-01-11T00:50:42Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { bpmn = unfoldingConnection.getObjectWithRole(BCSUnfoldingConnection.BPMN); info = unfoldingConnection.getObjectWithRole(BCSUnfoldingConnection.InfoCBP2PN); } catch (java.lang.Exception e) { bpmn = null; info = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1806/buggy-version/src.org.processmining.plugins.unfolding.BCSUnfoldingVisualize_Plugin.java", "BodyUseAPI": ["org.processmining.plugins.unfolding.BCSUnfoldingConnection.getObjectWithRole(BCSUnfoldingConnection.BPMN)", "org.processmining.plugins.unfolding.BCSUnfoldingConnection.getObjectWithRole(BCSUnfoldingConnection.InfoCBP2PN)"], "Fixed commit": "c80ca3982999505df38cc4c2b2f0439b89ee6ffe", "Url": "https://api.github.com/repos/Smocker/Tesi", "Date": "2016-04-12T08:45:11Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(5000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8638/buggy-version/src.main.java.com.game.playmodel.client.pvp.PVPModel.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "06f60afc29a6859b8736f27701825d8ab5a66339", "Url": "https://api.github.com/repos/wyTrivail/game2.0", "Date": "2013-11-30T08:18:59Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { decodedPath = java.net.URLDecoder.decode(path, \"UTF-8\"); } catch (java.io.UnsupportedEncodingException e) { e.printStackTrace(); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4909/buggy-version/src.main.java.me.bramhaag.discordselfbot.Bot.java", "BodyUseAPI": ["java.net.URLDecoder.decode(java.lang.String,java.lang.String)"], "Fixed commit": "397df09eb1b8b6131d6b481c5d3004c67c3dff2b", "Url": "https://api.github.com/repos/bramhaag/Discord-Selfbot", "Date": "2017-04-30T14:36:27Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (((broker) != null) && (broker.isStarted())) broker.stop(); } catch (java.lang.Exception e) { logger.debug(((net.meddeb.bee.BeeMsg.getLog(\"brokerStopError\")) + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3263/buggy-version/src.main.java.net.meddeb.bee.Beepin.java", "BodyUseAPI": ["org.apache.activemq.broker.BrokerService.isStarted()", "org.apache.activemq.broker.BrokerService.stop()"], "Fixed commit": "59956011a362b9d315fe18430e70e120c9e81680", "Url": "https://api.github.com/repos/ameddeb/bee", "Date": "2017-01-21T10:49:19Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { account = userDAO.findByUsername(username); } catch (java.lang.Exception x) { throw new org.springframework.security.core.userdetails.UsernameNotFoundException(((\"Could not find the user '\" + username) + \"'\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/5392/buggy-version/src.main.java.it.consoft.security.RestUserDetailService.java", "BodyUseAPI": ["it.consoft.dao.UserDAO.findByUsername(java.lang.String)"], "Fixed commit": "bc0172e6b14df864031997ebeeaefefac37865cd", "Url": "https://api.github.com/repos/bruno-vignola/spring-boot-two-data", "Date": "2016-05-26T09:07:43Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { loggedIn = new no.fpu.fpumemberapp.objects.User(o.getString(\"name\"), o.getString(\"address\"), o.getString(\"postalCode\"), o.getString(\"city\"), o.getString(\"birthDate\"), o.getString(\"memberSince\"), o.getString(\"email\"), o.getString(\"phone\"), o.getString(\"localGroup\"), o.getString(\"membershipType\"), o.getString(\"kid\"), o.getString(\"payment\"), o.getString(\"membershipNumber\")); } catch (org.json.JSONException e) { android.util.Log.i(\"EXCEPTION\", e.getMessage()); if (e.getMessage().contains(\"kid\")) { loggedIn = new no.fpu.fpumemberapp.objects.User(o.getString(\"name\"), o.getString(\"address\"), o.getString(\"postalCode\"), o.getString(\"city\"), o.getString(\"birthDate\"), o.getString(\"memberSince\"), o.getString(\"email\"), o.getString(\"phone\"), o.getString(\"localGroup\"), o.getString(\"membershipType\"), \"0000\", o.getString(\"payment\"), o.getString(\"membershipNumber\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7226/buggy-version/app.src.main.java.no.fpu.fpumemberapp.LoginActivity.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "9353209ff32da6bd471b87eceed7f7fafc4c17d8", "Url": "https://api.github.com/repos/Kariih/FpUAndroidApp", "Date": "2017-07-12T12:33:44Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { metadata = janus.getMetadataByEntityId(entityId); } catch (java.lang.Throwable e) { db.migration.mysql.V5_0_1__UpdateAppLogoFieldImageFromSr.LOG.warn(\"SR reported an exception for retrieving the metadata for {}\", entityId); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8187/buggy-version/csa-war.src.main.java.db.migration.mysql.V5_0_1__UpdateAppLogoFieldImageFromSr.java", "BodyUseAPI": ["nl.surfnet.coin.janus.JanusRestClient.getMetadataByEntityId(java.lang.String)"], "Fixed commit": "72e702c3bfcabf939645e610423ee4e11575e14c", "Url": "https://api.github.com/repos/OpenConext/OpenConext-csa", "Date": "2013-09-03T10:54:34Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { jsonObject = new org.json.JSONObject(json); } catch (java.lang.Exception ex) { throw new javax.ws.rs.WebApplicationException(javax.ws.rs.core.Response.Status.BAD_REQUEST); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7085/buggy-version/components.patient-data.rest.src.main.java.org.phenotips.data.rest.internal.DefaultPatientsResourceImpl.java", "BodyUseAPI": [], "Fixed commit": "057b6ae377e9163825086c5197d3684633d9f073", "Url": "https://api.github.com/repos/a-gvo/phenotips", "Date": "2016-10-07T20:37:21Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { jsonObject.put(\"text\", messages.get(((messages.size()) - 1))); responses.clear(); } catch (org.json.JSONException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1996/buggy-version/app.src.main.java.com.example.brenda.myhome.MainActivity.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "java.util.ArrayList<ai.wit.sdk.model.WitOutcome>.clear()", "java.util.List<java.lang.String>.get(int)", "org.json.JSONObject.put(java.lang.String,java.lang.String)"], "Fixed commit": "f71e23d55564478cbb5f28b5581086586047ac75", "Url": "https://api.github.com/repos/Brenda-Okoro/MyHome", "Date": "2017-04-20T11:43:40Z"},
{"Line": "=>579", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (((java.lang.Integer.parseInt(mn070201.getText().toString())) < 0) || ((java.lang.Integer.parseInt(mn070201.getText().toString())) > 9)) { android.widget.Toast.makeText(this, (\"\" + \"Weight can not be less than 0 - 9 kg.. check again\"), Toast.LENGTH_SHORT).show(); mn070201.setError(\"Weight can not be less than 0 - 9 kg\"); }else { mn070201.setError(null); } } catch (java.lang.NumberFormatException nfe) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7464/buggy-version/app.src.main.java.edu.aku.hassannaqvi.mnch_src.Section7Activity.java", "BodyUseAPI": ["java.lang.Integer.parseInt(mn070201.getText().toString())", "android.widget.EditText.getText()", "mn070201.getText().toString()", "android.widget.EditText.getText()", "android.widget.Toast.makeText(this, (\"\" + \"Weight can not be less than 0 - 9 kg.. check again\"), Toast.LENGTH_SHORT).show()", "java.lang.Integer.parseInt(mn070201.getText().toString())", "android.widget.EditText.setError(<nulltype>)", "mn070201.getText().toString()", "android.widget.Toast.makeText(edu.aku.hassannaqvi.mnch_src.Section7Activity,java.lang.String,Toast.LENGTH_SHORT)", "android.widget.EditText.setError(java.lang.String)"], "Fixed commit": "21115dcad9565b94c12fde10c542e7871055138e", "Url": "https://api.github.com/repos/shznaqvi/MNCH-SRC", "Date": "2017-02-07T10:55:51Z"},
{"Line": "=>1867", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { element = org.biojava.nbio.structure.Element.valueOfIgnoreCase(elementSymbol); } catch (java.lang.IllegalArgumentException e) { org.biojava.nbio.structure.io.PDBFileParser.logger.warn((\"Element symbol {} found in chemical component dictionary for Atom {} {} could not be recognised as a known element. \" + \"Assigning generic element R to it\"), elementSymbol, fullname.trim(), pdbnumber); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/9042/buggy-version/biojava-structure.src.main.java.org.biojava.nbio.structure.io.PDBFileParser.java", "BodyUseAPI": ["org.biojava.nbio.structure.Element.valueOfIgnoreCase(java.lang.String)"], "Fixed commit": "4fa68339c0a2893f0cc7496176d75a5cfd3ecdbf", "Url": "https://api.github.com/repos/lafita/biojava", "Date": "2016-07-27T23:48:31Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { loadCallback.invoke(); } catch (java.lang.reflect.InvocationTargetException e) { } catch (java.lang.IllegalAccessException e) { } catch (java.lang.NoSuchMethodException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/241/buggy-version/src.android.PGPolyphonicVoice.java", "BodyUseAPI": ["com.phonegap.Callback.invoke()"], "Fixed commit": "cd67d3380df7847649293abe699cb71f9c1dc405", "Url": "https://api.github.com/repos/CloudKidStudio/LowLatencyAudio", "Date": "2014-06-19T16:41:54Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { quotedSymbol = java.net.URLEncoder.encode(contract.getSymbol(), com.quantcomponents.yahoo.YahooFinanceAdapterComponent.URL_ENCODING_ENCODING); } catch (java.io.UnsupportedEncodingException e) { throw new com.quantcomponents.core.exceptions.RequestFailedException((\"Exception encoding symbol: \" + (contract.getSymbol())), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4613/buggy-version/com.quantcomponents.yahoo.src.com.quantcomponents.yahoo.YahooFinanceAdapterComponent.java", "BodyUseAPI": ["java.net.URLEncoder.encode(contract.getSymbol(),java.lang.String)", "com.quantcomponents.core.model.IContract.getSymbol()"], "Fixed commit": "01e0c0ab1f80453959ce9cb66f8a9a8f6131d8e8", "Url": "https://api.github.com/repos/lsgro/quantcomponents", "Date": "2013-09-08T10:21:30Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.io.FileOutputStream fileout = openFileOutput(\"InscriptionData.txt\", com.example.singi_000.prototype1.MODE_PRIVATE); java.io.OutputStreamWriter outputWriter = new java.io.OutputStreamWriter(fileout); outputWriter.write(\"\\n\"); outputWriter.close(); } catch (java.io.IOException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1005/buggy-version/Prototype1.app.src.main.java.com.example.singi_000.prototype1.SettingsActivity.java", "BodyUseAPI": ["java.io.OutputStreamWriter.close()", "2.openFileOutput(java.lang.String,com.example.singi_000.prototype1.MODE_PRIVATE)", "java.io.OutputStreamWriter.write(java.lang.String)"], "Fixed commit": "1ed8e6c4b81fe64b444bf0890463ee845c593a05", "Url": "https://api.github.com/repos/jafrancis/COMP4721-Team-Project-Frontend", "Date": "2015-04-08T01:00:07Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { fileResourceService.deleteFileResource(dataValue.getValue()); } catch (org.jclouds.rest.AuthorizationException exception) { fileResourceService.getFileResource(dataValue.getValue()).setAssigned(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3723/buggy-version/dhis-2.dhis-web.dhis-web-api.src.main.java.org.hisp.dhis.webapi.controller.DataValueController.java", "BodyUseAPI": ["org.hisp.dhis.datavalue.DataValue.getValue()", "org.hisp.dhis.fileresource.FileResourceService.deleteFileResource(dataValue.getValue())"], "Fixed commit": "e8a68036d0ce8ecd459bf835579c838963a1a2f7", "Url": "https://api.github.com/repos/dhis2/dhis2-core", "Date": "2017-10-09T10:00:25Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return contains(aLetter.toString(), weight); } catch (java.lang.Exception e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4900/buggy-version/mtScrabble.src.essentials.objects.BrickList.java", "BodyUseAPI": ["essentials.objects.BrickList.contains(aLetter.toString(),int)", "essentials.enums.LetterEnum.toString()"], "Fixed commit": "e5579ae81b635b504cd4f214781d44770165d29d", "Url": "https://api.github.com/repos/hanneseilers/mtScrabble", "Date": "2013-06-21T07:24:42Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { dir = file.getCanonicalFile().getParentFile(); } catch (java.io.IOException ex) { throw new com.puppycrawl.tools.checkstyle.api.CheckstyleException((\"IOException occurred while tried to get canonical path to file: \" + (file.getAbsoluteFile())), ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4916/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheck.java", "BodyUseAPI": ["java.io.File.getParentFile()", "java.io.File.getCanonicalFile()"], "Fixed commit": "f9ee45d47951c292d245ddfbab9516a0e12c1d86", "Url": "https://api.github.com/repos/epam/checkstyle", "Date": "2017-10-17T10:22:34Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { bomStream = new ru.histone.utils.BOMInputStream(stream); if ((bomStream.getBOM()) != (BOMInputStream.BOM.NONE)) { bomStream.skipBOM(); } } catch (java.io.IOException e) { throw new ru.histone.resourceloaders.ResourceLoadException(java.lang.String.format(\"Error with BOMInputStream for file '%s'\", location.toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4126/buggy-version/src.main.java.ru.histone.resourceloaders.DefaultResourceLoader.java", "BodyUseAPI": ["ru.histone.utils.BOMInputStream.getBOM()", "ru.histone.utils.BOMInputStream.skipBOM()"], "Fixed commit": "7b9739ecb2b331fb29b90b51c0b9805386390320", "Url": "https://api.github.com/repos/MegafonWebLab/histone-java", "Date": "2013-04-24T09:58:36Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { selector = hudson.plugins.copyartifact.BuildSelectorParameter.getSelectorFromXml(xml); } catch (java.lang.Exception e) { hudson.plugins.copyartifact.ParameterizedBuildSelector.LOG.log(java.util.logging.Level.SEVERE, java.lang.String.format(\"Failed to resolve selector: %s\", xml), e); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/5452/buggy-version/src.main.java.hudson.plugins.copyartifact.ParameterizedBuildSelector.java", "BodyUseAPI": ["hudson.plugins.copyartifact.BuildSelectorParameter.getSelectorFromXml(java.lang.String)"], "Fixed commit": "4e6cb78a2226ffe238a25ddfa788866c8cb4f131", "Url": "https://api.github.com/repos/gvasko/copyartifact-plugin", "Date": "2015-09-21T03:43:18Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Object propertyValue = property.getValue(instance); if (propertyValue != null) { inspectObject(stack, nextPath, propertyValue, visitor); } } catch (java.lang.Exception e) { uk.co.it.modular.beans.InstanceInspector.LOG.trace(\"Skip {}. Exception thrown on calling get\", property); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/5203/buggy-version/src.main.java.uk.co.it.modular.beans.InstanceInspector.java", "BodyUseAPI": ["uk.co.it.modular.beans.BeanProperty.getValue(java.lang.Object)", "uk.co.it.modular.beans.InstanceInspector.inspectObject(java.util.List<java.lang.Object>,uk.co.it.modular.beans.BeanPropertyPath,java.lang.Object,uk.co.it.modular.beans.BeanVisitor)"], "Fixed commit": "4f27b5dc74c15723f17c75e908488bd4bb25a522", "Url": "https://api.github.com/repos/modularit/bean-utils", "Date": "2013-07-26T15:43:06Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { handler.timers[seqno].schedule(new packet_handler.SenderThread.SendTask(seqno), timeoutInterval); } catch (java.lang.Exception e) { java.lang.System.out.println(\"SendTask Exception\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6193/buggy-version/src.packet_handler.SenderThread.java", "BodyUseAPI": ["handler.timers[seqno].schedule(packet_handler.SenderThread.SendTask,int)"], "Fixed commit": "5fb2325c3c15255cfee84a3b0fae911212fa4a65", "Url": "https://api.github.com/repos/anhonigman1848/Program_2", "Date": "2016-11-16T00:37:14Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { net.dv8tion.jda.handle.VoiceStatus voiceStatus = createVoiceStatus(voiceState, guildObj, user); ((net.dv8tion.jda.handle.VoiceChannelImpl) (voiceStatus.getChannel())).getUsersModifiable().add(user); } catch (java.lang.IllegalArgumentException ex) { JDAImpl.LOG.fatal((((((\"Following JSON caused an exception: \" + (voiceState.toString())) + \"\\nGuild: \") + guildObj) + \" with voice-channels: \") + (guildObj.getVoiceChannels()))); JDAImpl.LOG.log(ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6908/buggy-version/src.main.java.net.dv8tion.jda.handle.EntityBuilder.java", "BodyUseAPI": ["net.dv8tion.jda.handle.EntityBuilder.createVoiceStatus(org.json.JSONObject,net.dv8tion.jda.handle.GuildImpl,net.dv8tion.jda.handle.User)", "((net.dv8tion.jda.handle.VoiceChannelImpl) (voiceStatus.getChannel())).getUsersModifiable().add(net.dv8tion.jda.handle.User)", "net.dv8tion.jda.handle.VoiceStatus.getChannel()", "((net.dv8tion.jda.handle.VoiceChannelImpl) (voiceStatus.getChannel())).getUsersModifiable()"], "Fixed commit": "33ca72bc44f7b0345e122d34952f211ce8e994c3", "Url": "https://api.github.com/repos/MinnDevelopment/JDA", "Date": "2016-02-28T11:45:27Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { extractedGitBundle = getGitBundleFilePath(extractedFilePaths, metadata); } catch (java.io.IOException e) { logger.debug((\"Error when moving bundle file: \" + (e.getMessage()))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2658/buggy-version/src.main.java.com.surevine.gateway.scm.IncomingProcessorImpl.java", "BodyUseAPI": ["com.surevine.gateway.scm.IncomingProcessorImpl.getGitBundleFilePath(java.util.Collection<java.nio.file.Path>,java.util.Map<java.lang.String, java.lang.String>)"], "Fixed commit": "7b8552b813560631f92dd4b665debe0038af2ab7", "Url": "https://api.github.com/repos/surevine/federated-scm", "Date": "2014-11-03T17:52:40Z"},
{"Line": "=>505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.openide.util.NbPreferences.forModule(org.roiderh.dnc.DNCPanel.class).clear(); } catch (java.lang.Exception e) { java.lang.System.out.println(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1513/buggy-version/src.org.roiderh.dnc.DNCPanel.java", "BodyUseAPI": ["org.openide.util.NbPreferences.forModule(org.roiderh.dnc.DNCPanel.class).clear()", "org.openide.util.NbPreferences.forModule(java.lang.Class)"], "Fixed commit": "2b5ffb0920192101fbabb6dc9af5f90b8516ff1d", "Url": "https://api.github.com/repos/bertlr/Dnc", "Date": "2017-07-02T13:11:09Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { g = org.eclipse.dawnsci.nexus.impl.NexusNodeFactory.createNXobjectForClass(nxClass, oid); } catch (java.lang.IllegalArgumentException e) { org.eclipse.dawnsci.nexus.hdf5.NexusFileHDF5.logger.warn(\"Attribute {} was {} but not a known one\", org.eclipse.dawnsci.nexus.hdf5.NXCLASS, nxClass); g = org.eclipse.dawnsci.analysis.tree.TreeFactory.createGroupNode(oid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6210/buggy-version/org.eclipse.dawnsci.nexus.src.org.eclipse.dawnsci.nexus.hdf5.NexusFileHDF5.java", "BodyUseAPI": ["org.eclipse.dawnsci.nexus.impl.NexusNodeFactory.createNXobjectForClass(java.lang.String,long)"], "Fixed commit": "29c415d094df4d5ffd77907bb38a34b0e7aa7381", "Url": "https://api.github.com/repos/colinpalmer/dawnsci", "Date": "2015-12-02T17:57:42Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { g = org.eclipse.dawnsci.nexus.impl.NexusNodeFactory.createNXobjectForClass(nxClass, oid); cacheAttributes(((path + (org.eclipse.dawnsci.analysis.api.tree.Node.SEPARATOR)) + name), g); } catch (java.lang.IllegalArgumentException e) { org.eclipse.dawnsci.nexus.hdf5.NexusFileHDF5.logger.warn(\"Attribute {} was {} but not a known one\", org.eclipse.dawnsci.nexus.hdf5.NXCLASS, nxClass); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6210/buggy-version/org.eclipse.dawnsci.nexus.src.org.eclipse.dawnsci.nexus.hdf5.NexusFileHDF5.java", "BodyUseAPI": ["org.eclipse.dawnsci.nexus.impl.NexusNodeFactory.createNXobjectForClass(java.lang.String,long)", "org.eclipse.dawnsci.nexus.hdf5.NexusFileHDF5.cacheAttributes(((path + (org.eclipse.dawnsci.analysis.api.tree.Node.SEPARATOR)) + name),org.eclipse.dawnsci.analysis.api.tree.GroupNode)"], "Fixed commit": "29c415d094df4d5ffd77907bb38a34b0e7aa7381", "Url": "https://api.github.com/repos/colinpalmer/dawnsci", "Date": "2015-12-02T17:57:42Z"},
{"Line": "=>663", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { projectsDir = projectsDir.getCanonicalFile(); filePropProjectsDirectory = projectsDir.getAbsolutePath(); } catch (java.io.IOException ioEx) { ioEx.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6333/buggy-version/eclipseProjects.org.agentgui.bundles.org.agentgui.core.src.agentgui.core.config.GlobalInfo.java", "BodyUseAPI": ["java.io.File.getCanonicalFile()", "java.io.File.getAbsolutePath()"], "Fixed commit": "fbcbb6ff3e7b98cffebd13586e8f409591fdfefd", "Url": "https://api.github.com/repos/EnFlexIT/AgentWorkbench", "Date": "2017-10-22T13:03:16Z"},
{"Line": "=>423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return ((((((((super.toString()) + \"\\n\") + \"Position:\\n\") + \"\\tFormat:\\t\\t\") + (isOddFormat() ? \"odd\" : \"even\")) + \"\\n\\tHas position:\\t\") + (hasPosition() ? \"yes\" : \"no\")) + \"\\n\\tAltitude:\\t\") + (hasAltitude() ? getAltitude() : \"unkown\"); } catch (org.opensky.libadsb.exceptions.MissingInformationException e) { return \"Position: Missing information!\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8392/buggy-version/src.main.java.org.opensky.libadsb.msgs.AirbornePositionMsg.java", "BodyUseAPI": ["org.opensky.libadsb.msgs.AirbornePositionMsg.hasPosition()", "org.opensky.libadsb.msgs.AirbornePositionMsg.hasAltitude()", "org.opensky.libadsb.msgs.AirbornePositionMsg.getAltitude()", "org.opensky.libadsb.msgs.ExtendedSquitter.toString()", "org.opensky.libadsb.msgs.AirbornePositionMsg.isOddFormat()"], "Fixed commit": "64caf008e7cb11acfc1272c00098d39876b9b03f", "Url": "https://api.github.com/repos/openskynetwork/java-adsb", "Date": "2016-02-27T00:35:28Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { result = method.invoke(tempScanner, args); tempScanner.close(); } catch (java.lang.Exception e) { tempScanner.close(); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2702/buggy-version/src.main.java.com.andrewsoutar.cmp128.Utilities.java", "BodyUseAPI": ["java.lang.reflect.Method.invoke(java.util.Scanner,java.lang.Object[])", "java.util.Scanner.close()"], "Fixed commit": "cd89fbbaf7838070558390e7c12ba73ec8b0dd12", "Url": "https://api.github.com/repos/andrewsoutarccm/utilities", "Date": "2015-10-31T03:34:05Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { wrap.groupRound(idMap.get(entry.getKey()), round, entry.getValue()); } catch (java.lang.NullPointerException ex) { ise.gameoflife.plugins.database.DatabasePlugin.logger.log(java.util.logging.Level.WARNING, (\"Null Exception: For group {0} for round {1}\" + \" \"), new java.lang.Object[]{ entry.getValue().getName(), round }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/9145/buggy-version/src.ise.gameoflife.plugins.database.DatabasePlugin.java", "BodyUseAPI": ["ise.gameoflife.plugins.database.ConnectionWrapper.groupRound(java.lang.Integer,int,entry.getValue())", "java.util.Map.Entry<java.lang.String, ise.gameoflife.participants.PublicGroupDataModel>.getValue()", "java.util.Map.Entry<java.lang.String, ise.gameoflife.participants.PublicGroupDataModel>.getKey()", "java.util.Map<java.lang.String, java.lang.Integer>.get(entry.getKey())"], "Fixed commit": "db5cf8385a350d5bbd015060fcdc78388043639a", "Url": "https://api.github.com/repos/javajawa/ISEGameOfLife", "Date": "2011-06-24T17:08:09Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { currentPosition.doMove(move.getShortMoveDesc()); } catch (chesspresso.pgn.IllegalMoveException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4534/buggy-version/src.main.java.chesspresso.pgn.PGNWriter.java", "BodyUseAPI": ["chesspresso.move.Move.getShortMoveDesc()", "chesspresso.pgn.Position.doMove(move.getShortMoveDesc())"], "Fixed commit": "d53e22b52df92b241daf319356cc3d3792075f51", "Url": "https://api.github.com/repos/loloof64/Chesspresso", "Date": "2017-02-07T22:43:39Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return java.lang.Double.parseDouble(properties.getProperty(key)); } catch (java.lang.NumberFormatException e) { return defaultValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7541/buggy-version/app.src.main.java.edu.kit.student.gui.ApplicationSettings.java", "BodyUseAPI": ["java.util.Properties.getProperty(java.lang.String)", "java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "be794f53ac7889ce83c4edbe23f0b19809fe75c1", "Url": "https://api.github.com/repos/HiWiGAns/GraphVonAnsicht", "Date": "2017-06-03T09:19:56Z"},
{"Line": "=>878", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { localTopologyManager.setCacheAvailability(getName(), availability); } catch (java.lang.Exception e) { throw new org.infinispan.commons.CacheException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6494/buggy-version/core.src.main.java.org.infinispan.cache.impl.CacheImpl.java", "BodyUseAPI": ["org.infinispan.topology.LocalTopologyManager.setCacheAvailability(java.lang.String,org.infinispan.partionhandling.AvailabilityMode)", "org.infinispan.cache.impl.CacheImpl<K, V>.getName()"], "Fixed commit": "e16859c49c7b50449e9313f4c89d45d9771f33eb", "Url": "https://api.github.com/repos/danberindei/infinispan", "Date": "2014-10-20T14:43:22Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { value = referenceType.getValue(field); } catch (java.lang.IllegalArgumentException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4725/buggy-version/src.sorbet.StepEventHandler.java", "BodyUseAPI": ["com.sun.jdi.ReferenceType.getValue(com.sun.jdi.Field)"], "Fixed commit": "aca04174b88aa8051d759a05932750fb1ecb54e1", "Url": "https://api.github.com/repos/Sorbet/Sorbet", "Date": "2011-12-16T07:02:19Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { limeng32.mirage.account.service.AccountServiceExceptionEnum asee = limeng32.mirage.account.service.AccountServiceExceptionEnum.valueOf(errorName); reason = asee.description(); } catch (java.lang.IllegalArgumentException e) { reason = \"\u672a\u77e5\u5f02\u5e38\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6565/buggy-version/account-web.src.main.java.limeng32.mirage.account.web.AccountController.java", "BodyUseAPI": ["limeng32.mirage.account.service.AccountServiceExceptionEnum.description()", "limeng32.mirage.account.service.AccountServiceExceptionEnum.valueOf(java.lang.String)"], "Fixed commit": "0ffffe30be2d59e030e25fe0912f33e4dff5afa2", "Url": "https://api.github.com/repos/limeng32/account-parent", "Date": "2015-12-14T07:54:44Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { _userViewController.setDisable(true); } catch (java.rmi.RemoteException e) { log.error(e.getMessage()); at.fhv.itb5c.view.util.popup.ErrorPopUp.connectionError(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/69/buggy-version/root.view.src.main.java.at.fhv.itb5c.view.user.states.DetailUserViewControlls.java", "BodyUseAPI": ["at.fhv.itb5c.view.user.UserViewController.setDisable(boolean)"], "Fixed commit": "cebafb0687fa4dcaf3d3837160bb1fff7f783418", "Url": "https://api.github.com/repos/ITB5-TeamC/fhv-enterprise-computing", "Date": "2015-11-12T12:56:25Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { _userViewController.setDisable(false); } catch (java.rmi.RemoteException e) { log.error(e.getMessage()); at.fhv.itb5c.view.util.popup.ErrorPopUp.connectionError(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/69/buggy-version/root.view.src.main.java.at.fhv.itb5c.view.user.states.ModifyUserViewControlls.java", "BodyUseAPI": ["at.fhv.itb5c.view.user.UserViewController.setDisable(boolean)"], "Fixed commit": "cebafb0687fa4dcaf3d3837160bb1fff7f783418", "Url": "https://api.github.com/repos/ITB5-TeamC/fhv-enterprise-computing", "Date": "2015-11-12T12:56:25Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { _userViewController.setDisable(false); } catch (java.rmi.RemoteException e) { log.error(e.getMessage()); at.fhv.itb5c.view.util.popup.ErrorPopUp.connectionError(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/69/buggy-version/root.view.src.main.java.at.fhv.itb5c.view.user.states.AddUserViewControllsController.java", "BodyUseAPI": ["at.fhv.itb5c.view.user.UserViewController.setDisable(boolean)"], "Fixed commit": "cebafb0687fa4dcaf3d3837160bb1fff7f783418", "Url": "https://api.github.com/repos/ITB5-TeamC/fhv-enterprise-computing", "Date": "2015-11-12T12:56:25Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { super.close(); } catch (java.io.IOException e) { throw new java.lang.AssertionError(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/838/buggy-version/lang.src.main.java.net.openhft.lang.io.view.BytesOutputStream.java", "BodyUseAPI": ["java.io.OutputStream.close()"], "Fixed commit": "aa6af5c1e4b7781926c2b61fdf34455173e68c2a", "Url": "https://api.github.com/repos/lburgazzoli/Java-Lang", "Date": "2015-02-26T15:18:16Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.graphics.Bitmap screenshot = android.graphics.BitmapFactory.decodeFile(file.toString()); iv.setImageBitmap(screenshot); ScreenshotLayout.addView(iv); } catch (java.lang.OutOfMemoryError e) { RashrApp.ERRORS.add((((\"Screenshot \" + (file.toString())) + \" could not be decoded \") + (e.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2213/buggy-version/RashrApp.src.main.java.de.mkrtchyan.recoverytools.RecoverySystemFragment.java", "BodyUseAPI": ["android.graphics.BitmapFactory.decodeFile(java.lang.String)", "java.io.File.toString()", "android.widget.LinearLayout.addView(android.support.v7.widget.AppCompatImageView)", "android.support.v7.widget.AppCompatImageView.setImageBitmap(android.graphics.Bitmap)"], "Fixed commit": "49a0a525cdc8edd83fe08ede7c9c71ce0316f3ab", "Url": "https://api.github.com/repos/DsLNeXuS/Rashr", "Date": "2017-01-31T22:47:42Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { view.getViewTreeObserver().removeOnGlobalLayoutListener(this); } catch (java.lang.NoSuchMethodError e) { view.getViewTreeObserver().removeGlobalOnLayoutListener(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1904/buggy-version/src.com.nemogames.AdmobAgent.java", "BodyUseAPI": ["com.google.ads.AdView.getViewTreeObserver()", "view.getViewTreeObserver().removeOnGlobalLayoutListener(com.nemogames.AdmobAgent.7)"], "Fixed commit": "289134642c5019dad301096cdf63c58fb6007fe1", "Url": "https://api.github.com/repos/peyman-abdi/android_admobagent", "Date": "2013-07-08T08:53:15Z"},
{"Line": "=>1849", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { question = ((org.ednovo.gooru.core.api.model.AssessmentQuestion) (xstream.fromXML(jsonData))); } catch (java.lang.Exception e) { throw new org.ednovo.gooru.core.exception.BadRequestException(((e.getCause()) != null ? e.getCause().getMessage() : e.getMessage())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1537/buggy-version/api.src.main.java.org.ednovo.gooru.domain.service.assessment.AssessmentServiceImpl.java", "BodyUseAPI": ["com.thoughtworks.xstream.XStream.fromXML(java.lang.String)"], "Fixed commit": "e970bced1d61109803c16817ca37afce93678c3d", "Url": "https://api.github.com/repos/prakashraja89/Gooru-Core-API", "Date": "2014-10-29T09:00:54Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { resultValue = de.oppermann.pomutils.Main.mainInternal(args); } catch (java.lang.Exception e) { java.lang.System.err.println((\"We got an exception on merge: \" + (org.apache.commons.lang.StringUtils.join(args, \" \")))); e.printStackTrace(); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4685/buggy-version/src.main.java.de.oppermann.pomutils.Main.java", "BodyUseAPI": ["de.oppermann.pomutils.Main.mainInternal(java.lang.String[])"], "Fixed commit": "7c9e30b1929e7e52653ef94ffd2114f5505dfb48", "Url": "https://api.github.com/repos/mpellegrini/pomutils", "Date": "2015-06-08T16:24:21Z"},
{"Line": "=>595", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { rightChildValue = java.lang.Double.parseDouble(node.child(1).getToken().getLexeme()); } catch (java.lang.NumberFormatException nfe) { rightChildValue = -1.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5723/buggy-version/grouse.src.asmCodeGenerator.ASMCodeGenerator.java", "BodyUseAPI": ["parseTree.nodeTypes.BinaryOperatorNode.child(int)", "node.child(1).getToken().getLexeme()", "java.lang.Double.parseDouble(node.child(1).getToken().getLexeme())", "node.child(1).getToken()"], "Fixed commit": "ee92701035b5c1ffb9a1346490d33017a14fa399", "Url": "https://api.github.com/repos/DoppoDopeski/compiler", "Date": "2015-10-11T04:54:56Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { dataChunk.parse(this); } finally { mBuf.position(pos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5136/buggy-version/src.main.java.li.tengfei.apng.base.ApngMmapParserChunk.java", "BodyUseAPI": ["li.tengfei.apng.base.ApngDataChunk.parse(li.tengfei.apng.base.ApngMmapParserChunk)"], "Fixed commit": "4fec4a6eb60d7dff70b5b7ebaeb76b3f051672e5", "Url": "https://api.github.com/repos/litengfei/apng-base", "Date": "2016-12-08T08:57:08Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.bx5a.minstrel.utils.ThumbnailManager.getInstance().retreive(video.getThumbnailURL(), new com.bx5a.minstrel.utils.ThumbnailManager.BitmapAvailableListener() { @java.lang.Override public void onBitmapAvailable(android.graphics.Bitmap bitmap) { thumbnail.setImageBitmap(bitmap); } }); } catch (com.bx5a.minstrel.exception.NoThumbnailAvailableException e) { android.util.Log.w(\"SearchItemAdapter\", (\"No thumbnail available for \" + (video.getTitle()))); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3698/buggy-version/app.src.main.java.com.bx5a.minstrel.widget.SearchItemAdapter.java", "BodyUseAPI": ["com.bx5a.minstrel.youtube.YoutubeVideo.getThumbnailURL()", "com.bx5a.minstrel.utils.ThumbnailManager.getInstance().retreive(video.getThumbnailURL(),com.bx5a.minstrel.utils.ThumbnailManager.BitmapAvailableListener)", "com.bx5a.minstrel.utils.ThumbnailManager.getInstance()", "android.widget.ImageView.setImageBitmap(android.graphics.Bitmap)"], "Fixed commit": "8ee0be2f8353bd6f921784d73fc7e191bf945007", "Url": "https://api.github.com/repos/bx5a/Minstrel", "Date": "2016-06-13T09:56:37Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(3400); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2452/buggy-version/src.MazeRunner.Robot.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "93663fca71047b9f9dfd4bdea624eacd25fa0b0b", "Url": "https://api.github.com/repos/DDish/MazeRunner", "Date": "2014-12-02T04:58:08Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { user = DAO.getUser(userId); } catch (il.ac.shenkar.todolist.ToDoListException e) { request.setAttribute(\"exception\", e.getMessage()); dispatcher = getServletContext().getRequestDispatcher(\"/error.jsp\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4224/buggy-version/src.il.ac.shenkar.todolist.Controller.java", "BodyUseAPI": ["il.ac.shenkar.todolist.HibernateToDoListDAO$.getUser(int)"], "Fixed commit": "6db41aa6ea9254d9fffc6adc200c4e4659f24a63", "Url": "https://api.github.com/repos/kogrego/ToDoList---JavaEE", "Date": "2016-02-25T17:57:33Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { assertFalse(formatter, ((reference.equals(equalSuper)) || (equalSuper.equals(reference)))); } catch (java.lang.AbstractMethodError ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3785/buggy-version/src.main.java.nl.jqno.equalsverifier.HierarchyChecker.java", "BodyUseAPI": ["nl.jqno.equalsverifier.HierarchyChecker<T>.assertFalse(nl.jqno.equalsverifier.internal.Formatter,boolean)", "T.equals(java.lang.Object)", "java.lang.Object.equals(T)"], "Fixed commit": "d4df189c1ebab8f583c66013ab694e9375debd13", "Url": "https://api.github.com/repos/jqno/equalsverifier", "Date": "2016-12-13T15:48:30Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { bid.addBidPoint(workingBids.get(price), price); } catch (java.lang.Exception e) { agent.Agent.logMessage((\"auction\" + (java.lang.Integer.toString(getAuctionID()))), (\"Existing bid: \" + (bid.getBidString()))); agent.Agent.logMessage((\"auction\" + (java.lang.Integer.toString(getAuctionID()))), ((((\"Tried to add bid point: (\" + (java.lang.Integer.toString(workingBids.get(price)))) + \" \") + (java.lang.Float.toString(price))) + \")\")); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6372/buggy-version/agent.Auction.java", "BodyUseAPI": ["se.sics.tac.aw.BidString.addBidPoint(java.lang.Integer,java.lang.Float)", "agent.BidMap.get(java.lang.Float)"], "Fixed commit": "1c27e0fba981ecce3bc128011970aabae1b0a80a", "Url": "https://api.github.com/repos/aelred/TheGreaterFool", "Date": "2014-12-05T15:42:14Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((output.column) != 0) { if ((output.appender.length()) > 0) { output.valueParsed(); }else { output.emptyParsed(); } row = output.rowParsed(); }else if ((output.appender.length()) > 0) { output.valueParsed(); row = output.rowParsed(); } } catch (java.lang.ArrayIndexOutOfBoundsException e) { throw handleException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5686/buggy-version/src.main.java.com.univocity.parsers.common.AbstractParser.java", "BodyUseAPI": ["com.univocity.parsers.common.ParserOutput.valueParsed()", "com.univocity.parsers.common.ParserOutput.rowParsed()", "com.univocity.parsers.common.ParserOutput.rowParsed()", "com.univocity.parsers.common.ParserOutput.emptyParsed()", "output.appender.length()", "com.univocity.parsers.common.ParserOutput.valueParsed()", "output.appender.length()"], "Fixed commit": "0e3ee0c5c947d720fa662265491978b68649a892", "Url": "https://api.github.com/repos/uniVocity/univocity-parsers", "Date": "2016-05-30T21:48:38Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { navigationView.getMenu().getItem(selectedItem).setChecked(true); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/9119/buggy-version/app.src.main.java.de.gebatzens.sia.MainActivity.java", "BodyUseAPI": ["navigationView.getMenu().getItem(selectedItem).setChecked(boolean)", "navigationView.getMenu().getItem(int)", "android.support.design.widget.NavigationView.getMenu()"], "Fixed commit": "9af69efb46d49cd83e59f8f26f17a3f961e97716", "Url": "https://api.github.com/repos/Cedgetec/SchulinfoApp-android", "Date": "2015-10-04T07:33:48Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { type = com.sk89q.craftbook.util.EntityType.fromString(getSign().getLine(3)); } catch (java.lang.Exception e) { type = com.sk89q.craftbook.util.EntityType.ANY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/922/buggy-version/src.main.java.com.sk89q.craftbook.circuits.gates.world.entity.EntityTrap.java", "BodyUseAPI": ["com.sk89q.craftbook.util.EntityType.fromString(getSign().getLine(3))", "getSign().getLine(int)", "com.sk89q.craftbook.circuits.gates.world.entity.EntityTrap.getSign()"], "Fixed commit": "44c493771f0b751986ff67cf299448e6ffc3f18a", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2013-07-01T02:21:19Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(2000); } catch (java.lang.InterruptedException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2911/buggy-version/it.baeyens.arduino.core.src.it.baeyens.arduino.communication.ArduinoSerial.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "8670a1b9c72340419c97307bbf4d8834dab34f3d", "Url": "https://api.github.com/repos/rlogiacco/arduino-eclipse-plugin", "Date": "2014-02-02T22:19:54Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.normalexception.forum.rx8club.handler.ForumImageHandler imageHandler = new com.normalexception.forum.rx8club.handler.ForumImageHandler(b, this); b.setText((html ? android.text.Html.fromHtml((text + \"<br><br><br>\"), imageHandler, null) : text)); } catch (java.lang.Exception e) { b.setText((html ? android.text.Html.fromHtml((text + \"<br><br><br>\")) : text)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2086/buggy-version/src.com.normalexception.forum.rx8club.activities.ThreadActivity.java", "BodyUseAPI": ["android.text.Html.fromHtml(java.lang.String,com.normalexception.forum.rx8club.handler.ForumImageHandler,<nulltype>)", "android.widget.TextView.setText((html ? android.text.Html.fromHtml((text + \"<br><br><br>\"), imageHandler, null) : text))"], "Fixed commit": "7b9192a90f82983abc89cb9e35f2715e5da8c05b", "Url": "https://api.github.com/repos/paimonsoror/RX8Club.com-Forum-Application", "Date": "2012-11-18T06:07:57Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ingID = java.lang.Integer.parseInt(this.getName()); } catch (java.lang.NumberFormatException e) { javax.swing.JOptionPane.showMessageDialog(this, \"There were some issues with the database. Please contact developers.\\n\\nError code : IngredientDetails 256\", \"Error\", 0); java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/9212/buggy-version/src.teaeli.IngredientDetails.java", "BodyUseAPI": ["teaeli.IngredientDetails.getName()", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "e2607e45e13049df28795884b937fe040467740b", "Url": "https://api.github.com/repos/vihanga-liyanage/TeaELI", "Date": "2016-03-30T07:22:21Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { listenTo(\"TERM\", iListener); } catch (java.lang.IllegalArgumentException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3523/buggy-version/core.src.main.java.com.orientechnologies.orient.core.OSignalHandler.java", "BodyUseAPI": ["com.orientechnologies.orient.core.OSignalHandler.listenTo(java.lang.String,sun.misc.SignalHandler)"], "Fixed commit": "b30c68c884338e6dc44d37e80e6e7088d3d5a8b6", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-12-13T18:34:45Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { listenTo(\"INT\", iListener); } catch (java.lang.IllegalArgumentException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3523/buggy-version/core.src.main.java.com.orientechnologies.orient.core.OSignalHandler.java", "BodyUseAPI": ["com.orientechnologies.orient.core.OSignalHandler.listenTo(java.lang.String,sun.misc.SignalHandler)"], "Fixed commit": "b30c68c884338e6dc44d37e80e6e7088d3d5a8b6", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-12-13T18:34:45Z"},
{"Line": "=>486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { if ((startTime != null) && (endTime != null)) { task = new Task.Task(((Task.TaskHandler.currentTaskId) + 1), desc, startDate, endDate, venue); }else if (deadlineDate != null) { task = new Task.Task(((Task.TaskHandler.currentTaskId) + 1), desc, deadlineDate, venue); }else { task = new Task.Task(((Task.TaskHandler.currentTaskId) + 1), desc, venue); } } catch (java.lang.IllegalArgumentException e) { return e.getMessage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3144/buggy-version/Task.TaskHandler.java", "BodyUseAPI": [], "Fixed commit": "5d0a8eec2e04d8b785efd818081da37bd0fdb88c", "Url": "https://api.github.com/repos/cs2103aug2015-t14-2j/main", "Date": "2015-10-21T15:51:38Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mCamera.autoFocus(autoFocusCB); } catch (java.lang.RuntimeException re) { scheduleAutoFocus(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8339/buggy-version/core.src.main.java.me.dm7.barcodescanner.core.CameraPreview.java", "BodyUseAPI": ["android.hardware.Camera.autoFocus(Camera.AutoFocusCallback)"], "Fixed commit": "49bbd5b0dcad2f47085439a66fb09592bee331c0", "Url": "https://api.github.com/repos/rvdsoft/barcodescanner", "Date": "2015-05-28T07:38:47Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { new java.lang.ProcessBuilder(\"/bin/sh\", \"-c\", (((((\"raspivid -n --width 1920 --height 1080 --framerate 25 --segment \" + ((intervalInSeconds) * 1000)) + \" --wrap \") + (count)) + \" --timeout 0 -o \") + (fileName))).start(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/9001/buggy-version/src.main.java.de.picam.service.CameraService.java", "BodyUseAPI": ["java.lang.ProcessBuilder.start()"], "Fixed commit": "46e2d4fb29d1592ee00ab964d3338f85adb03c9a", "Url": "https://api.github.com/repos/saig0/remote-picam", "Date": "2015-01-23T22:57:46Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { outputQueue.put(message); } catch (java.lang.InterruptedException iex) { iex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/538/buggy-version/structr-ui.src.main.java.org.structr.cloud.Sender.java", "BodyUseAPI": ["java.util.concurrent.BlockingQueue<org.structr.cloud.message.Message>.put(org.structr.cloud.message.Message)"], "Fixed commit": "c4c557e5fc726285b1770732079adf6587d49446", "Url": "https://api.github.com/repos/structr/structr", "Date": "2015-01-18T13:38:38Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { tagsJSON = relationShipsJSON.getJSONObject(\"tags\"); tagsUrl = tagsJSON.getString(\"url\"); } catch (org.json.JSONException e) { net.dahanne.gallery3.client.utils.ItemUtils.logger.debug(\"there are no tags for this gallery, this is not grave\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5031/buggy-version/g3-java-client.src.main.java.net.dahanne.gallery3.client.utils.ItemUtils.java", "BodyUseAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "a3bce8d9470850721da5e78044554a9995fa6351", "Url": "https://api.github.com/repos/anthonydahanne/ReGalAndroid", "Date": "2011-10-20T03:53:16Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { commentsJSON = relationShipsJSON.getJSONObject(\"comments\"); commentsUrl = commentsJSON.getString(\"url\"); } catch (org.json.JSONException e) { net.dahanne.gallery3.client.utils.ItemUtils.logger.debug(\"there are no comments for this gallery, this is not grave\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5031/buggy-version/g3-java-client.src.main.java.net.dahanne.gallery3.client.utils.ItemUtils.java", "BodyUseAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "a3bce8d9470850721da5e78044554a9995fa6351", "Url": "https://api.github.com/repos/anthonydahanne/ReGalAndroid", "Date": "2011-10-20T03:53:16Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.setMap(new model.Map(level)); } catch (java.sql.SQLException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5489/buggy-version/BoulderDash.model.src.main.java.model.ModelFacade.java", "BodyUseAPI": ["model.ModelFacade.setMap(model.Map)"], "Fixed commit": "b7644dc7e0fae8044a4a8880e559477679561dd4", "Url": "https://api.github.com/repos/FlorianVouters/ProjetJavaA1", "Date": "2017-06-22T13:04:08Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { _tid = com.grb.tl1.TL1InputMessage.quotedtidParser.parse(pc); } catch (java.text.ParseException e) { _tid = com.grb.tl1.TL1InputMessage.blockParser.parse(pc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3842/buggy-version/tl1.src.main.java.com.grb.tl1.TL1InputMessage.java", "BodyUseAPI": ["com.grb.parseutils.TextParser.parse(com.grb.parseutils.ParseContext)"], "Fixed commit": "5f437393849f125e52bdac330a0cdd3fb562493d", "Url": "https://api.github.com/repos/gbromfield/GrbLibs2", "Date": "2016-10-26T02:55:54Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { long timeStart = ((game.getReadyTime().getTime()) / 1000) - (org.powertac.tournament.services.Forecaster.overhead); long timeEnd = getTimeEnd(game, timeStart); addJob(game, ((machineIndex++) % (slavesCount)), timeStart, timeEnd); } catch (java.lang.NullPointerException ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4662/buggy-version/src.main.java.org.powertac.tournament.services.Forecaster.java", "BodyUseAPI": ["org.powertac.tournament.beans.Game.getReadyTime()", "org.powertac.tournament.services.Forecaster.getTimeEnd(org.powertac.tournament.beans.Game,long)", "org.powertac.tournament.services.Forecaster.addJob(org.powertac.tournament.beans.Game,int,long,long)", "game.getReadyTime().getTime()"], "Fixed commit": "8ec66b5f4d3e76a014447618e77398ed5112014a", "Url": "https://api.github.com/repos/powertac/powertac-tournament-scheduler", "Date": "2017-06-12T11:52:08Z"},
{"Line": "=>460", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.animotron.statement.operator.CID.set(res, c.mashup()); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/9086/buggy-version/src.main.java.org.animotron.statement.operator.Utils.java", "BodyUseAPI": ["org.animotron.statement.operator.CID.set(org.neo4j.graphdb.Relationship,c.mashup())", "org.animotron.manipulator.QCAVector.mashup()"], "Fixed commit": "4caa684f6b7798e7444f58ade951b26ea8348e8a", "Url": "https://api.github.com/repos/animotron/core", "Date": "2011-12-24T05:45:33Z"},
{"Line": "=>400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { Server.ComparisonSimilarity.getSimilarImage(image_arr, ((java.lang.Integer.toString(user_id)) + \"_ideal_type.jpg\")); } catch (java.lang.Exception e) { java.lang.System.out.println(\"Image comparison error\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5611/buggy-version/FaceLinkerServer.src.Server.ThreadServer.java", "BodyUseAPI": ["java.lang.Integer.toString(int)", "Server.ComparisonSimilarity.getSimilarImage(java.util.ArrayList<Server.ImageSimilarity>,java.lang.String)"], "Fixed commit": "d41a4a006c7f7595eeb2f6fe63e70b78af012577", "Url": "https://api.github.com/repos/Sayaten/FaceLinker", "Date": "2015-06-18T07:26:02Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { em.appendField(\"Description\", cal.getDescription(), true); } catch (java.lang.NullPointerException e) { em.appendField(\"Description\", \"N/a\", true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6531/buggy-version/src.main.java.com.cloudcraftgaming.module.command.LinkCalendarCommand.java", "BodyUseAPI": ["com.google.api.services.calendar.model.Calendar.getDescription()", "sx.blah.discord.util.EmbedBuilder.appendField(java.lang.String,cal.getDescription(),boolean)"], "Fixed commit": "c5ce8c7c50fe6d05cf36cb6ded0ff0bc5f199536", "Url": "https://api.github.com/repos/NovaFox161/DisCal-Discord-Bot", "Date": "2017-03-12T13:04:28Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { while (gameObject.next()) { discountedGames.add(gameObject.getString(\"game_name\")); } } catch (java.sql.SQLException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7689/buggy-version/src.controller.SendDiscountServlet.java", "BodyUseAPI": ["java.sql.ResultSet.getString(java.lang.String)", "java.util.List<java.lang.String>.add(java.lang.String)", "java.sql.ResultSet.next()"], "Fixed commit": "db05cebfa1396ebc520fa8ffeca116649bccf315", "Url": "https://api.github.com/repos/moh60/mrGamingStore", "Date": "2017-11-26T20:55:47Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { session.getIOSServerManager().stop(session.getSessionId()); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4955/buggy-version/server.src.main.java.org.uiautomation.ios.server.services.IOSDualDriver.java", "BodyUseAPI": ["org.uiautomation.ios.server.ServerSideSession.getIOSServerManager()", "session.getIOSServerManager().stop(session.getSessionId())", "org.uiautomation.ios.server.ServerSideSession.getSessionId()"], "Fixed commit": "b6690fc2fd3341450128ec3dfc8c8081ffa36bb0", "Url": "https://api.github.com/repos/ios-driver/ios-driver", "Date": "2014-01-18T21:00:11Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.eclipse.core.resources.IMarker iMarker = findMarker(request.getPom(), IMarker.PROBLEM, \"No encoding found, org.apache.maven.plugins:maven-compiler-plugin found but without <encoding>\", 1, IMarker.PRIORITY_NORMAL, false); if (iMarker != null) { iMarker.delete(); } } catch (org.eclipse.core.runtime.CoreException e1) { org.eclipse.m2e.settings.core.JavaSourceEncodingConfigurator.LOGGER.error(request.getMavenProject().toString(), e1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4712/buggy-version/org.eclipse.m2e.settings.org.eclipse.m2e.settings.core.src.org.eclipse.m2e.settings.core.JavaSourceEncodingConfigurator.java", "BodyUseAPI": ["org.eclipse.m2e.settings.core.JavaSourceEncodingConfigurator.findMarker(request.getPom(),IMarker.PROBLEM,java.lang.String,int,IMarker.PRIORITY_NORMAL,boolean)", "org.eclipse.core.resources.IMarker.delete()", "org.eclipse.m2e.core.project.configurator.ProjectConfigurationRequest.getPom()"], "Fixed commit": "c358f1075dbcf14530848fc5e62c677f1ad682d7", "Url": "https://api.github.com/repos/cheleb/m2e-settings", "Date": "2011-02-21T16:29:24Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { testDir = new java.io.File((((directory.getCanonicalPath()) + (java.io.File.separatorChar)) + filename)); } catch (java.io.IOException e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4536/buggy-version/MapFileIndex.src.org.servalproject.maps.indexgenerator.utils.FileNameFilter.java", "BodyUseAPI": ["java.io.File.getCanonicalPath()"], "Fixed commit": "7f7bebb39c9e739a2f3158b3e3841553193036f2", "Url": "https://api.github.com/repos/servalproject/ServalMapsUtils", "Date": "2012-07-17T04:05:37Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.io.BufferedWriter out = new java.io.BufferedWriter(new java.io.FileWriter((((new java.io.File(directory).getAbsolutePath()) + (java.io.File.separator)) + \"evaluation.txt\"))); out.write(report); out.flush(); } catch (java.io.IOException e) { main.java.master.console.Shell.logger.error(\"While writing report: \", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7743/buggy-version/src.main.java.master.console.Shell.java", "BodyUseAPI": ["java.io.BufferedWriter.write(java.lang.String)", "java.io.BufferedWriter.flush()", "java.io.File.getAbsolutePath()"], "Fixed commit": "b8852e557e683ffa4de7cb8968e89eb989ea25c4", "Url": "https://api.github.com/repos/thomasmatzke/qpar", "Date": "2011-02-27T19:12:47Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { r.run(); } finally { latch.countDown(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6504/buggy-version/util.base.src.main.java.jetbrains.jetpad.base.edt.ExecutorEdtManager.java", "BodyUseAPI": ["java.lang.Runnable.run()"], "Fixed commit": "982e039518ab7c8b9bc68e158204cf6526d787ec", "Url": "https://api.github.com/repos/JetBrains/mapper", "Date": "2015-07-20T10:31:44Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(100); } catch (java.lang.InterruptedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5468/buggy-version/BitmapMisuse.app.src.com.example.bitmapmisuse.IntentActivity.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "be4ad8ba1634d6063c2d5adaebf606624018353f", "Url": "https://api.github.com/repos/mingyuan-PATH/AppPerfBenchmark", "Date": "2015-12-08T03:49:56Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.content.Intent scanIntent = new android.content.Intent(context, io.card.payment.CardIOActivity.class); scanIntent.putExtra(CardIOActivity.EXTRA_REQUIRE_EXPIRY, false); scanIntent.putExtra(CardIOActivity.EXTRA_REQUIRE_CVV, false); scanIntent.putExtra(CardIOActivity.EXTRA_REQUIRE_POSTAL_CODE, false); scanIntent.putExtra(CardIOActivity.EXTRA_SUPPRESS_MANUAL_ENTRY, true); ((android.app.Activity) (context)).startActivityForResult(scanIntent, IdConstants.CREDITCARD_SCAN); } catch (java.lang.NoClassDefFoundError e) { android.util.Log.e(\"CardIOPlugin:scanCard()\", (\"Runtime crash: \" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7725/buggy-version/MDLiveAndroid.app.src.main.java.com.mdlive.unifiedmiddleware.plugins.CardIOPlugin.java", "BodyUseAPI": ["android.content.Intent.putExtra(CardIOActivity.EXTRA_REQUIRE_POSTAL_CODE,boolean)", "android.content.Intent.putExtra(CardIOActivity.EXTRA_SUPPRESS_MANUAL_ENTRY,boolean)", "android.content.Intent.putExtra(CardIOActivity.EXTRA_REQUIRE_EXPIRY,boolean)", "android.content.Intent.putExtra(CardIOActivity.EXTRA_REQUIRE_CVV,boolean)", "android.content.Context.startActivityForResult(android.content.Intent,IdConstants.CREDITCARD_SCAN)"], "Fixed commit": "3e44e00b838c8c136715140d76de366551ebbf9b", "Url": "https://api.github.com/repos/uweco-mdl/android_modular_embedkit", "Date": "2016-03-02T15:07:03Z"},
{"Line": "=>724", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { titleText = searchResults.get(IONIZATION_ENERGY_DATABASE_NAME).getString(\"Element Name\"); } catch (org.json.JSONException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4419/buggy-version/LabPal.app.src.main.java.danandzach.labpal.ChemistrySearch.java", "BodyUseAPI": ["searchResults.get(IONIZATION_ENERGY_DATABASE_NAME).getString(java.lang.String)", "java.util.HashMap<java.lang.String, org.json.JSONObject>.get(java.lang.String)"], "Fixed commit": "3b79616826afd094f8841eac555674aeb25b6369", "Url": "https://api.github.com/repos/DanSGraham/ConstData", "Date": "2015-08-28T16:41:04Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { startIndexKey = org.carbondata.query.filters.measurefilter.util.FilterUtil.prepareDefaultStartIndexKey(segmentProperties); endIndexKey = org.carbondata.query.filters.measurefilter.util.FilterUtil.prepareDefaultEndIndexKey(segmentProperties); } catch (org.carbondata.core.keygenerator.KeyGenException e) { throw new org.carbondata.query.carbon.executor.exception.QueryExecutionException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/95/buggy-version/core.src.main.java.org.carbondata.query.carbon.executor.impl.AbstractQueryExecutor.java", "BodyUseAPI": ["org.carbondata.query.filters.measurefilter.util.FilterUtil.prepareDefaultEndIndexKey(org.carbondata.core.carbon.datastore.block.SegmentProperties)", "org.carbondata.query.filters.measurefilter.util.FilterUtil.prepareDefaultStartIndexKey(org.carbondata.core.carbon.datastore.block.SegmentProperties)"], "Fixed commit": "37eba1e509e2bc0896b1f0bdf3f7729c67d5fc61", "Url": "https://api.github.com/repos/kumarvishal09/carbondata-1", "Date": "2016-06-11T05:45:13Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { repository.delete(id); } catch (org.springframework.dao.EmptyResultDataAccessException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3434/buggy-version/src.main.java.springbootstarter.service.EmployeeServiceImpl.java", "BodyUseAPI": ["springbootstarter.repository.IEmployeeRepository.delete(java.lang.Long)"], "Fixed commit": "383ba95c0ddf90ba17a26450d1c8415f35755fea", "Url": "https://api.github.com/repos/saketdchaudhari/spring-boot-app", "Date": "2017-11-01T01:07:41Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.tianyl.filmManage.service.FilmCrawlerManager.crawl(); } catch (java.lang.Exception e) { com.tianyl.filmManage.util.LogManager.log(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5846/buggy-version/src.main.java.com.tianyl.filmManage.web.NewFilmContextListener.java", "BodyUseAPI": ["com.tianyl.filmManage.service.FilmCrawlerManager.crawl()"], "Fixed commit": "d83a25f39e4245c8effce59d13b6d5a3eab917da", "Url": "https://api.github.com/repos/tianyl1984/film-manage", "Date": "2016-02-23T08:06:08Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { container.setMimeType(childCursor.getString(1)); } catch (java.lang.Exception e) { container.setMimeType(data.getType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8854/buggy-version/app.src.main.java.org.voidptr.swpieview.ImageViewActivity.java", "BodyUseAPI": ["org.voidptr.swpieview.ImageContainer.setMimeType(childCursor.getString(1))", "android.database.Cursor.getString(int)"], "Fixed commit": "90d202e10feda6814f892b156d8ab7a655b61c70", "Url": "https://api.github.com/repos/err4nt/SwpieView", "Date": "2017-10-29T01:27:32Z"},
{"Line": "=>3946", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.silverpeas.form.record.GenericRecordSetManager.getInstance().moveRecord(recordTemplateFrom, fromId, recordTemplate); } catch (com.silverpeas.form.FormException e) { com.stratelia.silverpeas.silvertrace.SilverTrace.error(\"kmelia\", \"KmeliaSessionController.movePublication\", \"kmelia.CANT_MOVE_PUBLICATION_CONTENT\", (\"publication id = \" + fromId), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2401/buggy-version/kmelia.kmelia-war.src.main.java.com.stratelia.webactiv.kmelia.control.KmeliaSessionController.java", "BodyUseAPI": ["com.silverpeas.form.record.GenericRecordSetManager.getInstance()", "com.silverpeas.form.record.GenericRecordSetManager.getInstance().moveRecord(com.silverpeas.form.record.IdentifiedRecordTemplate,java.lang.String,com.silverpeas.form.record.IdentifiedRecordTemplate)"], "Fixed commit": "3eec646a22627e458481ca1c036c6525d825b94d", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Components", "Date": "2011-10-19T14:03:39Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { getCurrentValue(value); } catch (java.io.EOFException e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5855/buggy-version/src.main.java.stewi.mapred.LenientSequenceFileRecordReader.java", "BodyUseAPI": ["stewi.mapred.LenientSequenceFileRecordReader<K, V>.getCurrentValue(V)"], "Fixed commit": "ab9a13298474fa537f0c2dd9f88368bfc9aef38d", "Url": "https://api.github.com/repos/stewi2/hadoop-lenient-sequencefile", "Date": "2016-06-21T19:50:49Z"},
{"Line": "=>500", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (accountManager != null) accountManager.systemReady(); } catch (java.lang.Throwable e) { reportWtf(\"making Account Manager Service ready\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/409/buggy-version/services.java.com.android.server.SystemServer.java", "BodyUseAPI": ["android.accounts.AccountManagerService.systemReady()"], "Fixed commit": "11caf608d0af74ecbca215b1ee845e1a9b7c6081", "Url": "https://api.github.com/repos/SlimRoms/frameworks_base", "Date": "2012-10-17T03:20:14Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { e.getWebBrowser().executeJavascript(createInitScript()); test = isIdAvailable(\"map_canvas\"); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/764/buggy-version/src.org.dyndns.fzoli.rccar.controller.view.map.MapDialog.java", "BodyUseAPI": ["chrriis.dj.nativeswing.swtimpl.components.WebBrowserEvent.getWebBrowser()", "1.createInitScript()", "1.isIdAvailable(java.lang.String)", "e.getWebBrowser().executeJavascript(java.lang.String)"], "Fixed commit": "7310ce4332d84cf734cc3768c3b7fb8e12e33d28", "Url": "https://api.github.com/repos/fzoli/RemoteControlCar", "Date": "2013-01-24T17:27:37Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return org.dromelvan.modell.SpelareSasongStatistik.placeringMap.get(getId()); } catch (java.lang.NullPointerException e) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8191/buggy-version/src.main.java.org.dromelvan.modell.SpelareSasongStatistik.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, java.lang.Integer>.get(getId())", "org.dromelvan.modell.SpelareSasongStatistik.getId()"], "Fixed commit": "18cfae01f3864f6bd7faf1dba6ff10df6fbde2d9", "Url": "https://api.github.com/repos/dromelvan/dromelvan-core", "Date": "2014-09-17T20:11:33Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.content.SharedPreferences preferences = getPreferences(Context.MODE_PRIVATE); currentSaberColour = preferences.getInt(\"SaberColour\", com.idirenzo.mobiledev.jedisimulator.MainActivity.SABER_COLOUR_BLUE); } catch (java.lang.Exception ex) { android.widget.Toast.makeText(this, \"Unable to read saved colour.\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7671/buggy-version/app.src.main.java.com.idirenzo.mobiledev.jedisimulator.MainActivity.java", "BodyUseAPI": ["android.content.SharedPreferences.getInt(java.lang.String,int)", "com.idirenzo.mobiledev.jedisimulator.MainActivity.getPreferences(Context.MODE_PRIVATE)"], "Fixed commit": "bdd8ad9a51c4276dfc53245f265bf804f063bcbe", "Url": "https://api.github.com/repos/italodirenzo93/JediSimulator", "Date": "2017-11-10T03:43:05Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.io.FileOutputStream store_out = openFileOutput(\"/** Location to be set*/\", com.pieuw.avalanche.MODE_PRIVATE); } catch (java.io.FileNotFoundException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/335/buggy-version/src.com.pieuw.avalanche.Store.java", "BodyUseAPI": ["com.pieuw.avalanche.Store.openFileOutput(java.lang.String,com.pieuw.avalanche.MODE_PRIVATE)"], "Fixed commit": "0f9510007705e5903d18b81e24ee3a21e6697a26", "Url": "https://api.github.com/repos/Dylrak/Avalanche", "Date": "2014-11-21T18:42:42Z"},
{"Line": "=>891", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { numTokens = java.lang.Integer.parseInt(metadata[com.mondego.utility.Util.NUM_TOKENS]); } catch (java.lang.NumberFormatException e) { e.printStackTrace(); com.mondego.indexbased.SearchManager.logger.warn(e.getMessage()); com.mondego.indexbased.SearchManager.logger.warn(((\"mettadatapart: \" + metadataPart) + \", ignoring this line\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1410/buggy-version/clone-detector.src.com.mondego.indexbased.SearchManager.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "7b0f0f1970773b9fe1b2b0408c01ab2d34fd710a", "Url": "https://api.github.com/repos/Mondego/SourcererCC", "Date": "2017-12-06T22:50:27Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { startActivityForResult(credential.newChooseAccountIntent(), com.decad3nce.aegis.BackupGoogleAccountsActivity.REQUEST_ACCOUNT_PICKER); } catch (com.decad3nce.aegis.ActivityNotFoundException e) { android.widget.Toast.makeText(this, getResources().getString(R.string.aegis_backup_service_upgrade_to_play_store), Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2344/buggy-version/src.com.decad3nce.aegis.BackupGoogleAccountsActivity.java", "BodyUseAPI": ["com.decad3nce.aegis.BackupGoogleAccountsActivity.startActivityForResult(credential.newChooseAccountIntent(),int)", "com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential.newChooseAccountIntent()"], "Fixed commit": "c54012f6e7d7414ea425ab6699c710147ec6bc96", "Url": "https://api.github.com/repos/Decad3nce/Aegis", "Date": "2013-06-02T22:02:36Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { item.setAmount(java.lang.Float.parseFloat(s.toString())); } catch (java.lang.NumberFormatException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5720/buggy-version/src.cmput301w15t07.TravelTracker.activity.ExpenseItemInfoActivity.java", "BodyUseAPI": ["java.lang.Float.parseFloat(java.lang.String)", "cmput301w15t07.TravelTracker.model.Item.setAmount(float)", "java.lang.CharSequence.toString()"], "Fixed commit": "c34a251c1e181d625ef41ea9ad5ab229466d4469", "Url": "https://api.github.com/repos/TravelTracker/TravelTracker", "Date": "2015-03-16T08:43:05Z"},
{"Line": "=>1063", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.eucalyptus.cloudformation.resources.standard.actions.AWSAutoScalingAutoScalingGroupResourceAction.sendSyncWithRetryOnScalingEvent(configuration, terminateInstanceInAutoScalingGroupType); } catch (final java.lang.Exception e) { final com.google.common.base.Optional<com.eucalyptus.util.async.AsyncExceptions.AsyncWebServiceError> error = com.eucalyptus.util.async.AsyncExceptions.asWebServiceError(e); if (error.isPresent()) switch (com.google.common.base.Strings.nullToEmpty(error.get().getCode())) { case \"ValidationError\" : continue; } throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2216/buggy-version/clc.modules.cloudformation.src.main.java.com.eucalyptus.cloudformation.resources.standard.actions.AWSAutoScalingAutoScalingGroupResourceAction.java", "BodyUseAPI": ["com.eucalyptus.cloudformation.resources.standard.actions.AWSAutoScalingAutoScalingGroupResourceAction.sendSyncWithRetryOnScalingEvent(com.eucalyptus.component.ServiceConfiguration,com.eucalyptus.autoscaling.common.msgs.TerminateInstanceInAutoScalingGroupType)"], "Fixed commit": "e486037234ba5d0e5437d5ab2a61e3a9d15f7d13", "Url": "https://api.github.com/repos/eucalyptus/eucalyptus", "Date": "2016-04-22T05:44:11Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { builder.reloadRulebase(); } catch (org.openengsb.core.api.workflow.RuleBaseException e) { globalPersistence.remove(cnf.getMetaData()); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/9217/buggy-version/components.workflow.src.main.java.org.openengsb.core.workflow.internal.persistence.PersistenceRuleManager.java", "BodyUseAPI": ["org.openengsb.core.workflow.internal.persistence.PersistenceRuleManager.reloadRulebase()"], "Fixed commit": "8c6fe1dc33c3177f0ca255319d032be71ba69f1c", "Url": "https://api.github.com/repos/openengsb/openengsb-framework", "Date": "2012-07-09T14:08:01Z"},
{"Line": "=>732", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mStatFs.restat(dirPath); } catch (java.lang.IllegalArgumentException e) { throw new java.io.IOException((\"Can't restat: \" + (mDropBoxDir))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5341/buggy-version/services.core.java.com.android.server.DropBoxManagerService.java", "BodyUseAPI": ["android.os.StatFs.restat(java.lang.String)"], "Fixed commit": "b68106cf2a32a0ac9fbd982279878a0d9e4f6b9d", "Url": "https://api.github.com/repos/mphantom/platform_frameworks_base", "Date": "2016-08-03T09:54:53Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ((android.app.Activity) (mContext)).findViewById(mStoreButtonId).performClick(); } catch (java.lang.NullPointerException e) { ((android.app.Activity) (mContext)).findViewById(R.id.details_store_button).performClick(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6011/buggy-version/app.src.main.java.me.iweizi.stepchanger.StepData.java", "BodyUseAPI": ["((android.app.Activity) (mContext)).findViewById(mStoreButtonId).performClick()", "android.content.Context.findViewById(int)"], "Fixed commit": "10821519a018a717b098da0dafa8af04366451fa", "Url": "https://api.github.com/repos/iweizime/StepChanger", "Date": "2017-09-10T02:51:51Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ((android.app.Activity) (mContext)).findViewById(mLoadButtonId).performClick(); } catch (java.lang.NullPointerException e) { ((android.app.Activity) (mContext)).findViewById(R.id.details_load_button).performClick(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6011/buggy-version/app.src.main.java.me.iweizi.stepchanger.StepData.java", "BodyUseAPI": ["((android.app.Activity) (mContext)).findViewById(mLoadButtonId).performClick()", "android.content.Context.findViewById(int)"], "Fixed commit": "10821519a018a717b098da0dafa8af04366451fa", "Url": "https://api.github.com/repos/iweizime/StepChanger", "Date": "2017-09-10T02:51:51Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String posterUrl = jsonMovieInfo.getString(\"Poster\"); return scaleImage(dataProvider.loadMoviePoster(posterUrl)); } catch (org.json.JSONException e) { logger.severe(e.toString()); return new byte[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2628/buggy-version/movie-info-omdb.src.main.java.com.github.rahmnathan.localmovies.omdb.info.provider.OmdbMovieInfoProvider.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)", "com.github.rahmnathan.localmovies.omdb.info.provider.OmdbRawDataProvider.loadMoviePoster(java.lang.String)", "com.github.rahmnathan.localmovies.omdb.info.provider.OmdbMovieInfoProvider.scaleImage(dataProvider.loadMoviePoster(posterUrl))"], "Fixed commit": "fffedf6263f228ac12784995c0e5f43284c2e5f9", "Url": "https://api.github.com/repos/rahmnathan/rahmnathan-adapters", "Date": "2017-10-28T18:50:27Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { nameArray = handler.getHostname().split(java.util.regex.Pattern.quote(\".\")); } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6539/buggy-version/src.net.ddns.akd.wincleaner.model.Client.java", "BodyUseAPI": ["net.ddns.akd.wincleaner.network.ConnectionHandler.getHostname()", "handler.getHostname().split(java.lang.String)", "java.util.regex.Pattern.quote(java.lang.String)"], "Fixed commit": "e77e2a805c1ff41fc4c3d59fa465af85585e1d59", "Url": "https://api.github.com/repos/schmitzdominic/WinCleaner", "Date": "2016-12-17T00:30:44Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.msgpack.unpacker.Unpacker unpacker = messagePack.createUnpacker(stream); org.msgpack.type.Value v = unpacker.readValue(); source.skipBytes((startAvailable - (stream.available()))); return v; } catch (java.io.EOFException e) { source.resetReaderIndex(); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6544/buggy-version/src.main.java.org.msgpack.rpc.loop.netty.MessagePackStreamDecoder.java", "BodyUseAPI": ["org.msgpack.unpacker.Unpacker.readValue()", "org.jboss.netty.buffer.ChannelBuffer.skipBytes(int)", "org.msgpack.MessagePack.createUnpacker(java.io.ByteArrayInputStream)", "java.io.ByteArrayInputStream.available()"], "Fixed commit": "3cf9f6c15f44787615826251e679e71472e46d1b", "Url": "https://api.github.com/repos/takezoux2/msgpack-rpc-java-old", "Date": "2011-12-14T15:14:59Z"},
{"Line": "=>665", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ngat.sms.ObservingConstraintAdapter oca = new ngat.sms.ObservingConstraintAdapter(group); ngat.phase2.XPhotometricityConstraint photConstr = oca.getPhotometricityConstraint(); if (photConstr != null) { int photomActual = photConstr.getPhotometricityCategory(); if (photomActual == (ngat.phase2.XPhotometricityConstraint.NON_PHOTOMETRIC)) { photom = ngat.sms.EnvironmentSnapshot.EXTINCTION_SPECTRO; }else if (photomActual == (ngat.phase2.XPhotometricityConstraint.PHOTOMETRIC)) { photom = ngat.sms.EnvironmentSnapshot.EXTINCTION_PHOTOM; } } } catch (java.lang.Exception e) { logger.create().block(\"lookAheadFixedGroupDisruptors\").error().level(3).msg((((\"Group: \" + (group.getName())) + \" error accessing constraints: \") + e)).send(); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7367/buggy-version/java.src.ngat.sms.bds.BasicDespatchScheduler.java", "BodyUseAPI": ["ngat.sms.ObservingConstraintAdapter.getPhotometricityConstraint()", "ngat.phase2.XPhotometricityConstraint.getPhotometricityCategory()"], "Fixed commit": "c67d57210da60f5761bc077d51752f4b5a1cdab5", "Url": "https://api.github.com/repos/LivTel/scheduling-management-system", "Date": "2014-10-14T10:57:40Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { thread1.join(); thread2.join(); thread3.join(); thread4.join(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7373/buggy-version/src.main.java.count_iteration.Main.java", "BodyUseAPI": ["java.lang.Thread.join()", "java.lang.Thread.join()", "java.lang.Thread.join()", "java.lang.Thread.join()"], "Fixed commit": "f262dc3c1528cfc4afccd92b059371579c689d32", "Url": "https://api.github.com/repos/turboj55/thread-interference", "Date": "2017-03-04T13:43:34Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { new com.intellij.openapi.command.WriteCommandAction(com.intellij.openapi.project.ProjectManager.getInstance().getDefaultProject()) { @java.lang.Override protected void run(@org.jetbrains.annotations.NotNull com.intellij.openapi.application.Result result) throws java.lang.Throwable { com.intellij.openapi.ui.Messages.showErrorDialog(\"Some unexpected error occurred, press OK and try again later\", \"Error\"); cancelPerfomed(); } }.execute(); } catch (java.lang.Exception e) { java.lang.System.out.print(e); cancelPerfomed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7572/buggy-version/src.View.MainToolWindowFactory.java", "BodyUseAPI": ["com.intellij.openapi.command.WriteCommandAction.execute()", "View.MainToolWindowFactory.4.cancelPerfomed()", "com.intellij.openapi.project.ProjectManager.getInstance()", "com.intellij.openapi.project.ProjectManager.getInstance().getDefaultProject()", "com.intellij.openapi.ui.Messages.showErrorDialog(java.lang.String,java.lang.String)"], "Fixed commit": "2d8ad1db6b80ac2b2a9da0e9dd834f3671969590", "Url": "https://api.github.com/repos/quicksloth/quicksloth-intellij-plugin", "Date": "2017-10-21T12:08:00Z"},
{"Line": "=>2912", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { childIndex = (customOrder) ? getChildDrawingOrder(childrenCount, i) : i; } catch (java.lang.IndexOutOfBoundsException e) { childIndex = i; if ((mContext.getApplicationInfo().targetSdkVersion) < (Build.VERSION_CODES.M)) { android.util.Log.w(android.view.ViewGroup.TAG, (((\"Bad getChildDrawingOrder while collecting assist @ \" + i) + \" of \") + childrenCount), e); customOrder = false; if (i > 0) { int[] permutation = new int[childrenCount]; android.util.SparseBooleanArray usedIndices = new android.util.SparseBooleanArray(); for (int j = 0; j < i; j++) { permutation[j] = getChildDrawingOrder(childrenCount, j); usedIndices.put(permutation[j], true); } int nextIndex = 0; for (int j = i; j < childrenCount; j++) { while (usedIndices.get(nextIndex, false)) { nextIndex++; } permutation[j] = nextIndex; nextIndex++; } preorderedList = new java.util.ArrayList(childrenCount); for (int j = 0; j < childrenCount; j++) { preorderedList.add(children[permutation[j]]); } } }else { throw e; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6938/buggy-version/core.java.android.view.ViewGroup.java", "BodyUseAPI": ["android.view.ViewGroup.getChildDrawingOrder(int,int)"], "Fixed commit": "53d6cddb4137c7b5648fc069adcc0cf6c501a6c4", "Url": "https://api.github.com/repos/henrytao-me/platform_frameworks_base", "Date": "2015-08-07T17:18:11Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.joda.time.DateTimeZone.setDefault(org.joda.time.DateTimeZone.forID(timezone)); } catch (java.lang.IllegalArgumentException e) { throw new com.gooddata.processor.InvalidArgumentException(((\"Invalid timezone: '\" + timezone) + \"'.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5986/buggy-version/cli.src.main.java.com.gooddata.processor.GdcDI.java", "BodyUseAPI": ["org.joda.time.DateTimeZone.forID(java.lang.String)", "org.joda.time.DateTimeZone.setDefault(org.joda.time.DateTimeZone.forID(timezone))"], "Fixed commit": "56c4b852272cd9955ab7b24e0164a57536def940", "Url": "https://api.github.com/repos/gooddata/GoodData-CL", "Date": "2012-06-13T07:15:43Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { account = userDAO.findByUsername(username); } catch (java.lang.Exception x) { throw new org.springframework.security.core.userdetails.UsernameNotFoundException(((\"Could not find the user '\" + username) + \"'\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3525/buggy-version/src.main.java.it.consoft.security.RestUserDetailService.java", "BodyUseAPI": ["it.consoft.dao.UserDAO.findByUsername(java.lang.String)"], "Fixed commit": "80fb40e8d7f7b43c2dd1215fa3df07f0157da6da", "Url": "https://api.github.com/repos/bruno-vignola/spring-boot-aop-example", "Date": "2016-05-26T09:05:28Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.apache.pdfbox.pdmodel.PDDocument pdfFile = org.apache.pdfbox.pdmodel.PDDocument.load(file); return pdfFile; } catch (java.lang.Exception e) { Test.xmlSimpleWriter.println((((\"<PDDocument>\" + (file.toString())) + \"cannot be converted in a PDDocument\") + \"</PDDocument>\")); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7291/buggy-version/pdf-tools.src.main.java.preservingfiles.ZbwFilePdf.java", "BodyUseAPI": ["org.apache.pdfbox.pdmodel.PDDocument.load(java.io.File)"], "Fixed commit": "df080545c373698969ee6b6d3f8f697b3b4b07a3", "Url": "https://api.github.com/repos/friesey/preservation-tools", "Date": "2015-04-01T13:17:22Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.List<org.fogbowcloud.manager.core.model.Flavor> flavors = new java.util.ArrayList<org.fogbowcloud.manager.core.model.Flavor>(this.flavors); for (org.fogbowcloud.manager.core.model.Flavor flavor : flavors) { if (((java.lang.Double.parseDouble(flavor.getCpu())) == cpu) && ((java.lang.Double.parseDouble(flavor.getMem())) == mem)) { return flavor.getName(); } } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5895/buggy-version/src.main.java.org.fogbowcloud.manager.core.plugins.compute.opennebula.OpenNebulaComputePlugin.java", "BodyUseAPI": ["java.lang.Double.parseDouble(flavor.getCpu())", "java.lang.Double.parseDouble(flavor.getMem())", "org.fogbowcloud.manager.core.model.Flavor.getName()", "org.fogbowcloud.manager.core.model.Flavor.getMem()", "org.fogbowcloud.manager.core.model.Flavor.getCpu()"], "Fixed commit": "f11a877ce2b667113842764befcd93e3fb9affb3", "Url": "https://api.github.com/repos/fogbow/fogbow-mono-manager", "Date": "2015-05-14T20:12:46Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.awt.EventQueue.invokeAndWait(() -> { javax.swing.UIManager.put(\"Nb.BlueLFCustoms\", blue.plaf.Installer.customs); javax.swing.UIManager.put(\"nb.dark.theme\", true); }); } catch (java.lang.InterruptedException ex) { org.openide.util.Exceptions.printStackTrace(ex); } catch (java.lang.reflect.InvocationTargetException ex) { org.openide.util.Exceptions.printStackTrace(ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4413/buggy-version/blue-plaf.src.blue.plaf.Installer.java", "BodyUseAPI": ["javax.swing.UIManager.put(java.lang.String,boolean)", "javax.swing.UIManager.put(java.lang.String,blue.plaf.netbeans.BlueLFCustoms)", "java.awt.EventQueue.invokeAndWait(java.lang.Runnable)"], "Fixed commit": "fee72022facb91693f4dd2f7bca384a8cd03a89f", "Url": "https://api.github.com/repos/kunstmusik/blue", "Date": "2017-01-19T19:44:07Z"},
{"Line": "=>878", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { localTopologyManager.setCacheAvailability(getName(), availability); } catch (java.lang.Exception e) { throw new org.infinispan.commons.CacheException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7307/buggy-version/core.src.main.java.org.infinispan.cache.impl.CacheImpl.java", "BodyUseAPI": ["org.infinispan.cache.impl.CacheImpl<K, V>.getName()", "org.infinispan.topology.LocalTopologyManager.setCacheAvailability(java.lang.String,org.infinispan.partionhandling.AvailabilityMode)"], "Fixed commit": "22b134cca851992ba22a16e30a45dbd14f1bf178", "Url": "https://api.github.com/repos/danberindei/infinispan", "Date": "2014-10-20T14:43:22Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { response = gatekeeperClient.execute(request); } catch (java.lang.Exception ise) { android.util.Log.wtf(\"CSH-Gatekeeper\", \"This should not happen...I'm confused.\", ise); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/754/buggy-version/src.edu.rit.csh.agargiulo.Gatekeeper.HttpsPostAsyncTask.java", "BodyUseAPI": ["edu.rit.csh.agargiulo.Gatekeeper.HttpsClient.execute(org.apache.http.client.methods.HttpPost)"], "Fixed commit": "c854bbc6d734da6f0175d61598e4204cb7cfb9a4", "Url": "https://api.github.com/repos/agargiulo/gatekeeper-android", "Date": "2013-05-26T09:04:34Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (me.piebridge.bible.Bible.isCJK(text.split(\"\\n\")[1].trim().substring(0, 4))) { text = text.replace(\" \", \"\"); }else { text = text.replaceAll(\" +\", \" \"); } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/70/buggy-version/src.me.piebridge.bible.Chapter.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.trim()", "java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.lang.String.split(java.lang.String)", "me.piebridge.bible.Bible.isCJK(java.lang.String)"], "Fixed commit": "7397825cbc3cea6bccd06ead5a9263bc0857281a", "Url": "https://api.github.com/repos/liudongmiao/bible", "Date": "2013-12-09T06:43:40Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { writer.writeMessage(new engine.core.network.message.Message(\"endtransmission\", new engine.core.network.message.parameter.MessageParameter[0])); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1780/buggy-version/src.engine.core.implementation.network.activities.NetworkSyncActivity.java", "BodyUseAPI": ["engine.core.network.lowlevel.MessageWriter.writeMessage(engine.core.network.message.Message)"], "Fixed commit": "91b70820ef8f868624414351a670b50b88810813", "Url": "https://api.github.com/repos/spfrommer/phage2d", "Date": "2014-06-20T17:27:10Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return date == null ? nullRepresentation : formatter.format(date); } catch (java.lang.Exception e) { throw new java.lang.IllegalStateException(((((\"Could not format input date '\" + date) + \"' using formatter '\") + (formatter)) + \"'\"), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6484/buggy-version/flow-server.src.main.java.com.vaadin.ui.renderers.LocalDateRenderer.java", "BodyUseAPI": ["java.time.format.DateTimeFormatter.format(java.time.LocalDate)"], "Fixed commit": "ea158d73542e8542eaeb020feb3fa01efc64bfee", "Url": "https://api.github.com/repos/vaadin/flow", "Date": "2017-12-14T06:17:19Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mContext.startActivity(intent); } catch (java.lang.Exception exception) { android.content.Intent intent2 = new android.content.Intent(); intent2.setClass(mContext, com.geniusgithub.mediaplayer.player.video.VideoPlayerActivity.class); intent2.putExtra(VideoPlayerActivity.PLAY_INDEX, position); com.geniusgithub.mediaplayer.dlna.model.MediaItemFactory.putItemToIntent(item, intent2); mContext.startActivity(intent2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7661/buggy-version/app.src.main.java.com.geniusgithub.mediaplayer.browse.BrowsePresenter.java", "BodyUseAPI": ["android.content.Context.startActivity(android.content.Intent)"], "Fixed commit": "cc48d3e682062d26b877f7b0197d7308d1261586", "Url": "https://api.github.com/repos/geniusgithub/MediaPlayer", "Date": "2016-07-27T15:13:53Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { rootNodeField = modelClass.getField(node.name); } catch (java.lang.NoSuchFieldException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4869/buggy-version/Dumbledroid.src.io.leocad.dumbledroid.data.XmlReflector.java", "BodyUseAPI": ["java.lang.Class<?>.getField(node.name)"], "Fixed commit": "73ca33cc291df348993d5f9390af4cd23cd3ea9e", "Url": "https://api.github.com/repos/leocadiotine/Dumbledroid", "Date": "2013-01-28T22:15:45Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { result = operator.evaluateRecord(iCurrentRecord, iCurrentResult, this, l, r, iContext); } catch (java.lang.Exception e) { result = java.lang.Boolean.FALSE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/484/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.filter.OSQLFilterCondition.java", "BodyUseAPI": ["com.orientechnologies.orient.core.sql.operator.OQueryOperator.evaluateRecord(com.orientechnologies.orient.core.db.record.OIdentifiable,com.orientechnologies.orient.core.record.impl.ODocument,com.orientechnologies.orient.core.sql.filter.OSQLFilterCondition,java.lang.Object,java.lang.Object,com.orientechnologies.orient.core.command.OCommandContext)"], "Fixed commit": "033bf657204539aeaef323eaaefa30d38bc8f7fb", "Url": "https://api.github.com/repos/FHeNuS/orientdb", "Date": "2013-02-01T14:52:42Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { doc.insertString(((l + pos) + (string.substring(l).length())), \" \", style); } catch (javax.swing.text.BadLocationException ex) { java.util.logging.Logger.getLogger(cz.mgn.collabdesktop.utils.gui.textpane.TextPaneHyperlinks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6901/buggy-version/src.cz.mgn.collabdesktop.utils.gui.textpane.TextPaneHyperlinks.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.length()", "javax.swing.text.StyledDocument.insertString(int,java.lang.String,javax.swing.text.Style)"], "Fixed commit": "294ac594496906b54ce970161480f84397ec9a6f", "Url": "https://api.github.com/repos/MoonGames/collab-desktop", "Date": "2012-10-20T11:28:55Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { charReader = new java.io.PushbackReader(new java.io.InputStreamReader(file)); throw new java.io.FileNotFoundException(); } catch (java.io.FileNotFoundException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3723/buggy-version/src.Scanner.java", "BodyUseAPI": [], "Fixed commit": "ce28dc44131c132bf30913d70cc75f790f729837", "Url": "https://api.github.com/repos/jvalkov/SCL_Interpreter", "Date": "2017-07-21T03:47:56Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { youTubePlayer.pause(); } catch (java.lang.IllegalStateException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2493/buggy-version/app.src.main.java.vn.com.frankle.karaokelover.activities.states.KActivityPlayVideoPlayingState.java", "BodyUseAPI": ["com.google.android.youtube.player.YouTubePlayer.pause()"], "Fixed commit": "c24d6883805cfa345a12f4cb7f26568ff0f2647a", "Url": "https://api.github.com/repos/duclm2609/karaokelover", "Date": "2017-01-20T16:10:14Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { limit_length = java.lang.Integer.valueOf(length_s).intValue(); } catch (java.lang.Exception e) { limit_length = 30; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/998/buggy-version/app.src.main.java.org.roeg.sawroeg.MainActivity.java", "BodyUseAPI": ["java.lang.Integer.intValue()", "java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "5686ade8ab0f4d62354fdde56a60f8e6e04e738c", "Url": "https://api.github.com/repos/libertas/Sawroeg-Android", "Date": "2016-05-25T08:38:40Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { bs = id.getBytes(\"UTF-8\"); } catch (java.io.UnsupportedEncodingException e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6894/buggy-version/blur-shell.src.main.java.org.apache.blur.shell.QueryCommand.java", "BodyUseAPI": ["java.lang.String.getBytes(java.lang.String)"], "Fixed commit": "7ffeba2483fd4a551124bd0f01767b381e717b32", "Url": "https://api.github.com/repos/apache/incubator-blur", "Date": "2014-07-04T20:02:53Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { requestBuilder.append(java.net.URLEncoder.encode(text.substring(start, (start + (span.getLength()))), \"UTF-8\")); } catch (java.io.UnsupportedEncodingException e) { org.aksw.gerbil.annotator.impl.spotlight.SpotlightClient.LOGGER.error(\"Exception while encoding request data.\", e); throw new org.aksw.gerbil.exceptions.GerbilException(\"Exception while encoding request data.\", e, org.aksw.gerbil.datatypes.ErrorTypes.UNEXPECTED_EXCEPTION); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4049/buggy-version/src.main.java.org.aksw.gerbil.annotator.impl.spotlight.SpotlightClient.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.String.substring(int,(start + (span.getLength())))", "java.net.URLEncoder.encode(java.lang.String,java.lang.String)", "org.aksw.gerbil.transfer.nif.Span.getLength()"], "Fixed commit": "8ef623fe707f2a54a6612e1dd3bb41915eb9ba99", "Url": "https://api.github.com/repos/dice-group/gerbil", "Date": "2015-11-10T09:31:36Z"}]}
